"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all6) => {
  for (var name in all6)
    __defProp(target, name, { get: all6[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key2 of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key2) && key2 !== except && __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// node_modules/react/cjs/react.production.min.js
var require_react_production_min = __commonJS({
  "node_modules/react/cjs/react.production.min.js"(exports2) {
    "use strict";
    var l = Symbol.for("react.element"), n = Symbol.for("react.portal"), p2 = Symbol.for("react.fragment"), q = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), t = Symbol.for("react.provider"), u = Symbol.for("react.context"), v = Symbol.for("react.forward_ref"), w = Symbol.for("react.suspense"), x = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), z = Symbol.iterator;
    function A(a) {
      return a === null || typeof a != "object" ? null : (a = z && a[z] || a["@@iterator"], typeof a == "function" ? a : null);
    }
    var B = { isMounted: function() {
      return !1;
    }, enqueueForceUpdate: function() {
    }, enqueueReplaceState: function() {
    }, enqueueSetState: function() {
    } }, C = Object.assign, D = {};
    function E(a, b, e) {
      this.props = a, this.context = b, this.refs = D, this.updater = e || B;
    }
    E.prototype.isReactComponent = {};
    E.prototype.setState = function(a, b) {
      if (typeof a != "object" && typeof a != "function" && a != null)
        throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
      this.updater.enqueueSetState(this, a, b, "setState");
    };
    E.prototype.forceUpdate = function(a) {
      this.updater.enqueueForceUpdate(this, a, "forceUpdate");
    };
    function F() {
    }
    F.prototype = E.prototype;
    function G(a, b, e) {
      this.props = a, this.context = b, this.refs = D, this.updater = e || B;
    }
    var H = G.prototype = new F();
    H.constructor = G;
    C(H, E.prototype);
    H.isPureReactComponent = !0;
    var I = Array.isArray, J = Object.prototype.hasOwnProperty, K = { current: null }, L = { key: !0, ref: !0, __self: !0, __source: !0 };
    function M(a, b, e) {
      var d, c = {}, k = null, h2 = null;
      if (b != null)
        for (d in b.ref !== void 0 && (h2 = b.ref), b.key !== void 0 && (k = "" + b.key), b)
          J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
      var g = arguments.length - 2;
      if (g === 1)
        c.children = e;
      else if (1 < g) {
        for (var f = Array(g), m = 0; m < g; m++)
          f[m] = arguments[m + 2];
        c.children = f;
      }
      if (a && a.defaultProps)
        for (d in g = a.defaultProps, g)
          c[d] === void 0 && (c[d] = g[d]);
      return { $$typeof: l, type: a, key: k, ref: h2, props: c, _owner: K.current };
    }
    function N(a, b) {
      return { $$typeof: l, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
    }
    function O(a) {
      return typeof a == "object" && a !== null && a.$$typeof === l;
    }
    function escape2(a) {
      var b = { "=": "=0", ":": "=2" };
      return "$" + a.replace(/[=:]/g, function(a2) {
        return b[a2];
      });
    }
    var P = /\/+/g;
    function Q(a, b) {
      return typeof a == "object" && a !== null && a.key != null ? escape2("" + a.key) : b.toString(36);
    }
    function R(a, b, e, d, c) {
      var k = typeof a;
      (k === "undefined" || k === "boolean") && (a = null);
      var h2 = !1;
      if (a === null)
        h2 = !0;
      else
        switch (k) {
          case "string":
          case "number":
            h2 = !0;
            break;
          case "object":
            switch (a.$$typeof) {
              case l:
              case n:
                h2 = !0;
            }
        }
      if (h2)
        return h2 = a, c = c(h2), a = d === "" ? "." + Q(h2, 0) : d, I(c) ? (e = "", a != null && (e = a.replace(P, "$&/") + "/"), R(c, b, e, "", function(a2) {
          return a2;
        })) : c != null && (O(c) && (c = N(c, e + (!c.key || h2 && h2.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a)), b.push(c)), 1;
      if (h2 = 0, d = d === "" ? "." : d + ":", I(a))
        for (var g = 0; g < a.length; g++) {
          k = a[g];
          var f = d + Q(k, g);
          h2 += R(k, b, e, f, c);
        }
      else if (f = A(a), typeof f == "function")
        for (a = f.call(a), g = 0; !(k = a.next()).done; )
          k = k.value, f = d + Q(k, g++), h2 += R(k, b, e, f, c);
      else if (k === "object")
        throw b = String(a), Error("Objects are not valid as a React child (found: " + (b === "[object Object]" ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
      return h2;
    }
    function S(a, b, e) {
      if (a == null)
        return a;
      var d = [], c = 0;
      return R(a, d, "", "", function(a2) {
        return b.call(e, a2, c++);
      }), d;
    }
    function T(a) {
      if (a._status === -1) {
        var b = a._result;
        b = b(), b.then(function(b2) {
          (a._status === 0 || a._status === -1) && (a._status = 1, a._result = b2);
        }, function(b2) {
          (a._status === 0 || a._status === -1) && (a._status = 2, a._result = b2);
        }), a._status === -1 && (a._status = 0, a._result = b);
      }
      if (a._status === 1)
        return a._result.default;
      throw a._result;
    }
    var U = { current: null }, V = { transition: null }, W = { ReactCurrentDispatcher: U, ReactCurrentBatchConfig: V, ReactCurrentOwner: K };
    exports2.Children = { map: S, forEach: function(a, b, e) {
      S(a, function() {
        b.apply(this, arguments);
      }, e);
    }, count: function(a) {
      var b = 0;
      return S(a, function() {
        b++;
      }), b;
    }, toArray: function(a) {
      return S(a, function(a2) {
        return a2;
      }) || [];
    }, only: function(a) {
      if (!O(a))
        throw Error("React.Children.only expected to receive a single React element child.");
      return a;
    } };
    exports2.Component = E;
    exports2.Fragment = p2;
    exports2.Profiler = r;
    exports2.PureComponent = G;
    exports2.StrictMode = q;
    exports2.Suspense = w;
    exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
    exports2.cloneElement = function(a, b, e) {
      if (a == null)
        throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
      var d = C({}, a.props), c = a.key, k = a.ref, h2 = a._owner;
      if (b != null) {
        if (b.ref !== void 0 && (k = b.ref, h2 = K.current), b.key !== void 0 && (c = "" + b.key), a.type && a.type.defaultProps)
          var g = a.type.defaultProps;
        for (f in b)
          J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = b[f] === void 0 && g !== void 0 ? g[f] : b[f]);
      }
      var f = arguments.length - 2;
      if (f === 1)
        d.children = e;
      else if (1 < f) {
        g = Array(f);
        for (var m = 0; m < f; m++)
          g[m] = arguments[m + 2];
        d.children = g;
      }
      return { $$typeof: l, type: a.type, key: c, ref: k, props: d, _owner: h2 };
    };
    exports2.createContext = function(a) {
      return a = { $$typeof: u, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, a.Provider = { $$typeof: t, _context: a }, a.Consumer = a;
    };
    exports2.createElement = M;
    exports2.createFactory = function(a) {
      var b = M.bind(null, a);
      return b.type = a, b;
    };
    exports2.createRef = function() {
      return { current: null };
    };
    exports2.forwardRef = function(a) {
      return { $$typeof: v, render: a };
    };
    exports2.isValidElement = O;
    exports2.lazy = function(a) {
      return { $$typeof: y, _payload: { _status: -1, _result: a }, _init: T };
    };
    exports2.memo = function(a, b) {
      return { $$typeof: x, type: a, compare: b === void 0 ? null : b };
    };
    exports2.startTransition = function(a) {
      var b = V.transition;
      V.transition = {};
      try {
        a();
      } finally {
        V.transition = b;
      }
    };
    exports2.unstable_act = function() {
      throw Error("act(...) is not supported in production builds of React.");
    };
    exports2.useCallback = function(a, b) {
      return U.current.useCallback(a, b);
    };
    exports2.useContext = function(a) {
      return U.current.useContext(a);
    };
    exports2.useDebugValue = function() {
    };
    exports2.useDeferredValue = function(a) {
      return U.current.useDeferredValue(a);
    };
    exports2.useEffect = function(a, b) {
      return U.current.useEffect(a, b);
    };
    exports2.useId = function() {
      return U.current.useId();
    };
    exports2.useImperativeHandle = function(a, b, e) {
      return U.current.useImperativeHandle(a, b, e);
    };
    exports2.useInsertionEffect = function(a, b) {
      return U.current.useInsertionEffect(a, b);
    };
    exports2.useLayoutEffect = function(a, b) {
      return U.current.useLayoutEffect(a, b);
    };
    exports2.useMemo = function(a, b) {
      return U.current.useMemo(a, b);
    };
    exports2.useReducer = function(a, b, e) {
      return U.current.useReducer(a, b, e);
    };
    exports2.useRef = function(a) {
      return U.current.useRef(a);
    };
    exports2.useState = function(a) {
      return U.current.useState(a);
    };
    exports2.useSyncExternalStore = function(a, b, e) {
      return U.current.useSyncExternalStore(a, b, e);
    };
    exports2.useTransition = function() {
      return U.current.useTransition();
    };
    exports2.version = "18.2.0";
  }
});

// node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/react/index.js"(exports2, module2) {
    "use strict";
    module2.exports = require_react_production_min();
  }
});

// node_modules/@remix-run/router/dist/router.cjs.js
var require_router_cjs = __commonJS({
  "node_modules/@remix-run/router/dist/router.cjs.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function _extends() {
      return _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key2 in source)
            Object.prototype.hasOwnProperty.call(source, key2) && (target[key2] = source[key2]);
        }
        return target;
      }, _extends.apply(this, arguments);
    }
    exports2.Action = void 0;
    (function(Action) {
      Action.Pop = "POP", Action.Push = "PUSH", Action.Replace = "REPLACE";
    })(exports2.Action || (exports2.Action = {}));
    var PopStateEventType = "popstate";
    function createMemoryHistory(options2) {
      options2 === void 0 && (options2 = {});
      let {
        initialEntries = ["/"],
        initialIndex,
        v5Compat = !1
      } = options2, entries;
      entries = initialEntries.map((entry2, index3) => createMemoryLocation(entry2, typeof entry2 == "string" ? null : entry2.state, index3 === 0 ? "default" : void 0));
      let index2 = clampIndex(initialIndex ?? entries.length - 1), action2 = exports2.Action.Pop, listener = null;
      function clampIndex(n) {
        return Math.min(Math.max(n, 0), entries.length - 1);
      }
      function getCurrentLocation() {
        return entries[index2];
      }
      function createMemoryLocation(to, state, key2) {
        state === void 0 && (state = null);
        let location2 = createLocation2(entries ? getCurrentLocation().pathname : "/", to, state, key2);
        return warning$1(location2.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to)), location2;
      }
      function createHref(to) {
        return typeof to == "string" ? to : createPath(to);
      }
      return {
        get index() {
          return index2;
        },
        get action() {
          return action2;
        },
        get location() {
          return getCurrentLocation();
        },
        createHref,
        createURL(to) {
          return new URL(createHref(to), "http://localhost");
        },
        encodeLocation(to) {
          let path6 = typeof to == "string" ? parsePath(to) : to;
          return {
            pathname: path6.pathname || "",
            search: path6.search || "",
            hash: path6.hash || ""
          };
        },
        push(to, state) {
          action2 = exports2.Action.Push;
          let nextLocation = createMemoryLocation(to, state);
          index2 += 1, entries.splice(index2, entries.length, nextLocation), v5Compat && listener && listener({
            action: action2,
            location: nextLocation,
            delta: 1
          });
        },
        replace(to, state) {
          action2 = exports2.Action.Replace;
          let nextLocation = createMemoryLocation(to, state);
          entries[index2] = nextLocation, v5Compat && listener && listener({
            action: action2,
            location: nextLocation,
            delta: 0
          });
        },
        go(delta) {
          action2 = exports2.Action.Pop;
          let nextIndex = clampIndex(index2 + delta), nextLocation = entries[nextIndex];
          index2 = nextIndex, listener && listener({
            action: action2,
            location: nextLocation,
            delta
          });
        },
        listen(fn) {
          return listener = fn, () => {
            listener = null;
          };
        }
      };
    }
    function createBrowserHistory(options2) {
      options2 === void 0 && (options2 = {});
      function createBrowserLocation(window2, globalHistory) {
        let {
          pathname,
          search: search3,
          hash
        } = window2.location;
        return createLocation2(
          "",
          {
            pathname,
            search: search3,
            hash
          },
          globalHistory.state && globalHistory.state.usr || null,
          globalHistory.state && globalHistory.state.key || "default"
        );
      }
      function createBrowserHref(window2, to) {
        return typeof to == "string" ? to : createPath(to);
      }
      return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options2);
    }
    function createHashHistory(options2) {
      options2 === void 0 && (options2 = {});
      function createHashLocation(window2, globalHistory) {
        let {
          pathname = "/",
          search: search3 = "",
          hash = ""
        } = parsePath(window2.location.hash.substr(1));
        return createLocation2(
          "",
          {
            pathname,
            search: search3,
            hash
          },
          globalHistory.state && globalHistory.state.usr || null,
          globalHistory.state && globalHistory.state.key || "default"
        );
      }
      function createHashHref(window2, to) {
        let base3 = window2.document.querySelector("base"), href = "";
        if (base3 && base3.getAttribute("href")) {
          let url = window2.location.href, hashIndex = url.indexOf("#");
          href = hashIndex === -1 ? url : url.slice(0, hashIndex);
        }
        return href + "#" + (typeof to == "string" ? to : createPath(to));
      }
      function validateHashLocation(location2, to) {
        warning$1(location2.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
      }
      return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options2);
    }
    function invariant(value, message) {
      if (value === !1 || value === null || typeof value > "u")
        throw new Error(message);
    }
    function warning$1(cond, message) {
      if (!cond) {
        typeof console < "u" && console.warn(message);
        try {
          throw new Error(message);
        } catch {
        }
      }
    }
    function createKey() {
      return Math.random().toString(36).substr(2, 8);
    }
    function getHistoryState(location2, index2) {
      return {
        usr: location2.state,
        key: location2.key,
        idx: index2
      };
    }
    function createLocation2(current, to, state, key2) {
      return state === void 0 && (state = null), _extends({
        pathname: typeof current == "string" ? current : current.pathname,
        search: "",
        hash: ""
      }, typeof to == "string" ? parsePath(to) : to, {
        state,
        key: to && to.key || key2 || createKey()
      });
    }
    function createPath(_ref) {
      let {
        pathname = "/",
        search: search3 = "",
        hash = ""
      } = _ref;
      return search3 && search3 !== "?" && (pathname += search3.charAt(0) === "?" ? search3 : "?" + search3), hash && hash !== "#" && (pathname += hash.charAt(0) === "#" ? hash : "#" + hash), pathname;
    }
    function parsePath(path6) {
      let parsedPath = {};
      if (path6) {
        let hashIndex = path6.indexOf("#");
        hashIndex >= 0 && (parsedPath.hash = path6.substr(hashIndex), path6 = path6.substr(0, hashIndex));
        let searchIndex = path6.indexOf("?");
        searchIndex >= 0 && (parsedPath.search = path6.substr(searchIndex), path6 = path6.substr(0, searchIndex)), path6 && (parsedPath.pathname = path6);
      }
      return parsedPath;
    }
    function getUrlBasedHistory(getLocation, createHref, validateLocation, options2) {
      options2 === void 0 && (options2 = {});
      let {
        window: window2 = document.defaultView,
        v5Compat = !1
      } = options2, globalHistory = window2.history, action2 = exports2.Action.Pop, listener = null, index2 = getIndex();
      index2 == null && (index2 = 0, globalHistory.replaceState(_extends({}, globalHistory.state, {
        idx: index2
      }), ""));
      function getIndex() {
        return (globalHistory.state || {
          idx: null
        }).idx;
      }
      function handlePop() {
        action2 = exports2.Action.Pop;
        let nextIndex = getIndex(), delta = nextIndex == null ? null : nextIndex - index2;
        index2 = nextIndex, listener && listener({
          action: action2,
          location: history.location,
          delta
        });
      }
      function push2(to, state) {
        action2 = exports2.Action.Push;
        let location2 = createLocation2(history.location, to, state);
        validateLocation && validateLocation(location2, to), index2 = getIndex() + 1;
        let historyState = getHistoryState(location2, index2), url = history.createHref(location2);
        try {
          globalHistory.pushState(historyState, "", url);
        } catch {
          window2.location.assign(url);
        }
        v5Compat && listener && listener({
          action: action2,
          location: history.location,
          delta: 1
        });
      }
      function replace2(to, state) {
        action2 = exports2.Action.Replace;
        let location2 = createLocation2(history.location, to, state);
        validateLocation && validateLocation(location2, to), index2 = getIndex();
        let historyState = getHistoryState(location2, index2), url = history.createHref(location2);
        globalHistory.replaceState(historyState, "", url), v5Compat && listener && listener({
          action: action2,
          location: history.location,
          delta: 0
        });
      }
      function createURL(to) {
        let base3 = window2.location.origin !== "null" ? window2.location.origin : window2.location.href, href = typeof to == "string" ? to : createPath(to);
        return invariant(base3, "No window.location.(origin|href) available to create URL for href: " + href), new URL(href, base3);
      }
      let history = {
        get action() {
          return action2;
        },
        get location() {
          return getLocation(window2, globalHistory);
        },
        listen(fn) {
          if (listener)
            throw new Error("A history only accepts one active listener");
          return window2.addEventListener(PopStateEventType, handlePop), listener = fn, () => {
            window2.removeEventListener(PopStateEventType, handlePop), listener = null;
          };
        },
        createHref(to) {
          return createHref(window2, to);
        },
        createURL,
        encodeLocation(to) {
          let url = createURL(to);
          return {
            pathname: url.pathname,
            search: url.search,
            hash: url.hash
          };
        },
        push: push2,
        replace: replace2,
        go(n) {
          return globalHistory.go(n);
        }
      };
      return history;
    }
    var ResultType;
    (function(ResultType2) {
      ResultType2.data = "data", ResultType2.deferred = "deferred", ResultType2.redirect = "redirect", ResultType2.error = "error";
    })(ResultType || (ResultType = {}));
    function isIndexRoute(route) {
      return route.index === !0;
    }
    function convertRoutesToDataRoutes(routes2, parentPath, allIds) {
      return parentPath === void 0 && (parentPath = []), allIds === void 0 && (allIds = /* @__PURE__ */ new Set()), routes2.map((route, index2) => {
        let treePath = [...parentPath, index2], id = typeof route.id == "string" ? route.id : treePath.join("-");
        return invariant(route.index !== !0 || !route.children, "Cannot specify children on an index route"), invariant(!allIds.has(id), 'Found a route id collision on id "' + id + `".  Route id's must be globally unique within Data Router usages`), allIds.add(id), isIndexRoute(route) ? _extends({}, route, {
          id
        }) : _extends({}, route, {
          id,
          children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : void 0
        });
      });
    }
    function matchRoutes(routes2, locationArg, basename) {
      basename === void 0 && (basename = "/");
      let location2 = typeof locationArg == "string" ? parsePath(locationArg) : locationArg, pathname = stripBasename(location2.pathname || "/", basename);
      if (pathname == null)
        return null;
      let branches = flattenRoutes(routes2);
      rankRouteBranches(branches);
      let matches = null;
      for (let i = 0; matches == null && i < branches.length; ++i)
        matches = matchRouteBranch(
          branches[i],
          safelyDecodeURI(pathname)
        );
      return matches;
    }
    function flattenRoutes(routes2, branches, parentsMeta, parentPath) {
      branches === void 0 && (branches = []), parentsMeta === void 0 && (parentsMeta = []), parentPath === void 0 && (parentPath = "");
      let flattenRoute = (route, index2, relativePath) => {
        let meta13 = {
          relativePath: relativePath === void 0 ? route.path || "" : relativePath,
          caseSensitive: route.caseSensitive === !0,
          childrenIndex: index2,
          route
        };
        meta13.relativePath.startsWith("/") && (invariant(meta13.relativePath.startsWith(parentPath), 'Absolute route path "' + meta13.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), meta13.relativePath = meta13.relativePath.slice(parentPath.length));
        let path6 = joinPaths([parentPath, meta13.relativePath]), routesMeta = parentsMeta.concat(meta13);
        route.children && route.children.length > 0 && (invariant(
          route.index !== !0,
          "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path6 + '".')
        ), flattenRoutes(route.children, branches, routesMeta, path6)), !(route.path == null && !route.index) && branches.push({
          path: path6,
          score: computeScore(path6, route.index),
          routesMeta
        });
      };
      return routes2.forEach((route, index2) => {
        var _route$path;
        if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?")))
          flattenRoute(route, index2);
        else
          for (let exploded of explodeOptionalSegments(route.path))
            flattenRoute(route, index2, exploded);
      }), branches;
    }
    function explodeOptionalSegments(path6) {
      let segments = path6.split("/");
      if (segments.length === 0)
        return [];
      let [first, ...rest] = segments, isOptional = first.endsWith("?"), required = first.replace(/\?$/, "");
      if (rest.length === 0)
        return isOptional ? [required, ""] : [required];
      let restExploded = explodeOptionalSegments(rest.join("/")), result = [];
      return result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/"))), isOptional && result.push(...restExploded), result.map((exploded) => path6.startsWith("/") && exploded === "" ? "/" : exploded);
    }
    function rankRouteBranches(branches) {
      branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map((meta13) => meta13.childrenIndex), b.routesMeta.map((meta13) => meta13.childrenIndex)));
    }
    var paramRe = /^:\w+$/, dynamicSegmentValue = 3, indexRouteValue = 2, emptySegmentValue = 1, staticSegmentValue = 10, splatPenalty = -2, isSplat = (s2) => s2 === "*";
    function computeScore(path6, index2) {
      let segments = path6.split("/"), initialScore = segments.length;
      return segments.some(isSplat) && (initialScore += splatPenalty), index2 && (initialScore += indexRouteValue), segments.filter((s2) => !isSplat(s2)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
    }
    function compareIndexes(a, b) {
      return a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]) ? a[a.length - 1] - b[b.length - 1] : 0;
    }
    function matchRouteBranch(branch, pathname) {
      let {
        routesMeta
      } = branch, matchedParams = {}, matchedPathname = "/", matches = [];
      for (let i = 0; i < routesMeta.length; ++i) {
        let meta13 = routesMeta[i], end = i === routesMeta.length - 1, remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/", match = matchPath({
          path: meta13.relativePath,
          caseSensitive: meta13.caseSensitive,
          end
        }, remainingPathname);
        if (!match)
          return null;
        Object.assign(matchedParams, match.params);
        let route = meta13.route;
        matches.push({
          params: matchedParams,
          pathname: joinPaths([matchedPathname, match.pathname]),
          pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
          route
        }), match.pathnameBase !== "/" && (matchedPathname = joinPaths([matchedPathname, match.pathnameBase]));
      }
      return matches;
    }
    function generatePath(originalPath, params) {
      params === void 0 && (params = {});
      let path6 = originalPath;
      return path6.endsWith("*") && path6 !== "*" && !path6.endsWith("/*") && (warning(!1, 'Route path "' + path6 + '" will be treated as if it were ' + ('"' + path6.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path6.replace(/\*$/, "/*") + '".')), path6 = path6.replace(/\*$/, "/*")), path6.replace(/^:(\w+)(\??)/g, (_, key2, optional) => {
        let param = params[key2];
        return optional === "?" ? param ?? "" : (param == null && invariant(!1, 'Missing ":' + key2 + '" param'), param);
      }).replace(/\/:(\w+)(\??)/g, (_, key2, optional) => {
        let param = params[key2];
        return optional === "?" ? param == null ? "" : "/" + param : (param == null && invariant(!1, 'Missing ":' + key2 + '" param'), "/" + param);
      }).replace(/\?/g, "").replace(/(\/?)\*/, (_, prefix, __, str2) => {
        let star = "*";
        return params[star] == null ? str2 === "/*" ? "/" : "" : "" + prefix + params[star];
      });
    }
    function matchPath(pattern, pathname) {
      typeof pattern == "string" && (pattern = {
        path: pattern,
        caseSensitive: !1,
        end: !0
      });
      let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end), match = pathname.match(matcher);
      if (!match)
        return null;
      let matchedPathname = match[0], pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1"), captureGroups = match.slice(1);
      return {
        params: paramNames.reduce((memo, paramName, index2) => {
          if (paramName === "*") {
            let splatValue = captureGroups[index2] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
          }
          return memo[paramName] = safelyDecodeURIComponent(captureGroups[index2] || "", paramName), memo;
        }, {}),
        pathname: matchedPathname,
        pathnameBase,
        pattern
      };
    }
    function compilePath(path6, caseSensitive, end) {
      caseSensitive === void 0 && (caseSensitive = !1), end === void 0 && (end = !0), warning(path6 === "*" || !path6.endsWith("*") || path6.endsWith("/*"), 'Route path "' + path6 + '" will be treated as if it were ' + ('"' + path6.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path6.replace(/\*$/, "/*") + '".'));
      let paramNames = [], regexpSource = "^" + path6.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/\/:(\w+)/g, (_, paramName) => (paramNames.push(paramName), "/([^\\/]+)"));
      return path6.endsWith("*") ? (paramNames.push("*"), regexpSource += path6 === "*" || path6 === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : end ? regexpSource += "\\/*$" : path6 !== "" && path6 !== "/" && (regexpSource += "(?:(?=\\/|$))"), [new RegExp(regexpSource, caseSensitive ? void 0 : "i"), paramNames];
    }
    function safelyDecodeURI(value) {
      try {
        return decodeURI(value);
      } catch (error) {
        return warning(!1, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ").")), value;
      }
    }
    function safelyDecodeURIComponent(value, paramName) {
      try {
        return decodeURIComponent(value);
      } catch (error) {
        return warning(!1, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ").")), value;
      }
    }
    function stripBasename(pathname, basename) {
      if (basename === "/")
        return pathname;
      if (!pathname.toLowerCase().startsWith(basename.toLowerCase()))
        return null;
      let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length, nextChar = pathname.charAt(startIndex);
      return nextChar && nextChar !== "/" ? null : pathname.slice(startIndex) || "/";
    }
    function warning(cond, message) {
      if (!cond) {
        typeof console < "u" && console.warn(message);
        try {
          throw new Error(message);
        } catch {
        }
      }
    }
    function resolvePath(to, fromPathname) {
      fromPathname === void 0 && (fromPathname = "/");
      let {
        pathname: toPathname,
        search: search3 = "",
        hash = ""
      } = typeof to == "string" ? parsePath(to) : to;
      return {
        pathname: toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname,
        search: normalizeSearch(search3),
        hash: normalizeHash(hash)
      };
    }
    function resolvePathname(relativePath, fromPathname) {
      let segments = fromPathname.replace(/\/+$/, "").split("/");
      return relativePath.split("/").forEach((segment) => {
        segment === ".." ? segments.length > 1 && segments.pop() : segment !== "." && segments.push(segment);
      }), segments.length > 1 ? segments.join("/") : "/";
    }
    function getInvalidPathError(char, field, dest, path6) {
      return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path6) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
    }
    function getPathContributingMatches(matches) {
      return matches.filter((match, index2) => index2 === 0 || match.route.path && match.route.path.length > 0);
    }
    function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
      isPathRelative === void 0 && (isPathRelative = !1);
      let to;
      typeof toArg == "string" ? to = parsePath(toArg) : (to = _extends({}, toArg), invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to)), invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to)), invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to)));
      let isEmptyPath = toArg === "" || to.pathname === "", toPathname = isEmptyPath ? "/" : to.pathname, from;
      if (isPathRelative || toPathname == null)
        from = locationPathname;
      else {
        let routePathnameIndex = routePathnames.length - 1;
        if (toPathname.startsWith("..")) {
          let toSegments = toPathname.split("/");
          for (; toSegments[0] === ".."; )
            toSegments.shift(), routePathnameIndex -= 1;
          to.pathname = toSegments.join("/");
        }
        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
      }
      let path6 = resolvePath(to, from), hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"), hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
      return !path6.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash) && (path6.pathname += "/"), path6;
    }
    function getToPathname(to) {
      return to === "" || to.pathname === "" ? "/" : typeof to == "string" ? parsePath(to).pathname : to.pathname;
    }
    var joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/"), normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/"), normalizeSearch = (search3) => !search3 || search3 === "?" ? "" : search3.startsWith("?") ? search3 : "?" + search3, normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash, json13 = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), new Response(JSON.stringify(data), _extends({}, responseInit, {
        headers
      }));
    }, AbortedDeferredError = class extends Error {
    }, DeferredData = class {
      constructor(data, responseInit) {
        this.pendingKeysSet = /* @__PURE__ */ new Set(), this.subscribers = /* @__PURE__ */ new Set(), this.deferredKeys = [], invariant(data && typeof data == "object" && !Array.isArray(data), "defer() only accepts plain objects");
        let reject;
        this.abortPromise = new Promise((_, r) => reject = r), this.controller = new AbortController();
        let onAbort = () => reject(new AbortedDeferredError("Deferred data aborted"));
        this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort), this.controller.signal.addEventListener("abort", onAbort), this.data = Object.entries(data).reduce((acc, _ref) => {
          let [key2, value] = _ref;
          return Object.assign(acc, {
            [key2]: this.trackPromise(key2, value)
          });
        }, {}), this.done && this.unlistenAbortSignal(), this.init = responseInit;
      }
      trackPromise(key2, value) {
        if (!(value instanceof Promise))
          return value;
        this.deferredKeys.push(key2), this.pendingKeysSet.add(key2);
        let promise = Promise.race([value, this.abortPromise]).then((data) => this.onSettle(promise, key2, null, data), (error) => this.onSettle(promise, key2, error));
        return promise.catch(() => {
        }), Object.defineProperty(promise, "_tracked", {
          get: () => !0
        }), promise;
      }
      onSettle(promise, key2, error, data) {
        return this.controller.signal.aborted && error instanceof AbortedDeferredError ? (this.unlistenAbortSignal(), Object.defineProperty(promise, "_error", {
          get: () => error
        }), Promise.reject(error)) : (this.pendingKeysSet.delete(key2), this.done && this.unlistenAbortSignal(), error ? (Object.defineProperty(promise, "_error", {
          get: () => error
        }), this.emit(!1, key2), Promise.reject(error)) : (Object.defineProperty(promise, "_data", {
          get: () => data
        }), this.emit(!1, key2), data));
      }
      emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));
      }
      subscribe(fn) {
        return this.subscribers.add(fn), () => this.subscribers.delete(fn);
      }
      cancel() {
        this.controller.abort(), this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k)), this.emit(!0);
      }
      async resolveData(signal) {
        let aborted = !1;
        if (!this.done) {
          let onAbort = () => this.cancel();
          signal.addEventListener("abort", onAbort), aborted = await new Promise((resolve) => {
            this.subscribe((aborted2) => {
              signal.removeEventListener("abort", onAbort), (aborted2 || this.done) && resolve(aborted2);
            });
          });
        }
        return aborted;
      }
      get done() {
        return this.pendingKeysSet.size === 0;
      }
      get unwrappedData() {
        return invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds"), Object.entries(this.data).reduce((acc, _ref2) => {
          let [key2, value] = _ref2;
          return Object.assign(acc, {
            [key2]: unwrapTrackedPromise(value)
          });
        }, {});
      }
      get pendingKeys() {
        return Array.from(this.pendingKeysSet);
      }
    };
    function isTrackedPromise(value) {
      return value instanceof Promise && value._tracked === !0;
    }
    function unwrapTrackedPromise(value) {
      if (!isTrackedPromise(value))
        return value;
      if (value._error)
        throw value._error;
      return value._data;
    }
    var defer = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init;
      return new DeferredData(data, responseInit);
    }, redirect = function(url, init) {
      init === void 0 && (init = 302);
      let responseInit = init;
      typeof responseInit == "number" ? responseInit = {
        status: responseInit
      } : typeof responseInit.status > "u" && (responseInit.status = 302);
      let headers = new Headers(responseInit.headers);
      return headers.set("Location", url), new Response(null, _extends({}, responseInit, {
        headers
      }));
    }, ErrorResponse = class {
      constructor(status, statusText, data, internal) {
        internal === void 0 && (internal = !1), this.status = status, this.statusText = statusText || "", this.internal = internal, data instanceof Error ? (this.data = data.toString(), this.error = data) : this.data = data;
      }
    };
    function isRouteErrorResponse(error) {
      return error != null && typeof error.status == "number" && typeof error.statusText == "string" && typeof error.internal == "boolean" && "data" in error;
    }
    var validMutationMethodsArr = ["post", "put", "patch", "delete"], validMutationMethods = new Set(validMutationMethodsArr), validRequestMethodsArr = ["get", ...validMutationMethodsArr], validRequestMethods = new Set(validRequestMethodsArr), redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]), IDLE_NAVIGATION = {
      state: "idle",
      location: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, IDLE_FETCHER = {
      state: "idle",
      data: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, IDLE_BLOCKER = {
      state: "unblocked",
      proceed: void 0,
      reset: void 0,
      location: void 0
    }, ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, isBrowser = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", isServer = !isBrowser;
    function createRouter(init) {
      invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
      let dataRoutes = convertRoutesToDataRoutes(init.routes), inFlightDataRoutes, unlistenHistory = null, subscribers = /* @__PURE__ */ new Set(), savedScrollPositions = null, getScrollRestorationKey = null, getScrollPosition = null, initialScrollRestored = init.hydrationData != null, initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename), initialErrors = null;
      if (initialMatches == null) {
        let error = getInternalRouterError(404, {
          pathname: init.history.location.pathname
        }), {
          matches,
          route
        } = getShortCircuitMatches(dataRoutes);
        initialMatches = matches, initialErrors = {
          [route.id]: error
        };
      }
      let initialized = !initialMatches.some((m) => m.route.loader) || init.hydrationData != null, router, state = {
        historyAction: init.history.action,
        location: init.history.location,
        matches: initialMatches,
        initialized,
        navigation: IDLE_NAVIGATION,
        restoreScrollPosition: init.hydrationData != null ? !1 : null,
        preventScrollReset: !1,
        revalidation: "idle",
        loaderData: init.hydrationData && init.hydrationData.loaderData || {},
        actionData: init.hydrationData && init.hydrationData.actionData || null,
        errors: init.hydrationData && init.hydrationData.errors || initialErrors,
        fetchers: /* @__PURE__ */ new Map(),
        blockers: /* @__PURE__ */ new Map()
      }, pendingAction = exports2.Action.Pop, pendingPreventScrollReset = !1, pendingNavigationController, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [], fetchControllers = /* @__PURE__ */ new Map(), incrementingLoadId = 0, pendingNavigationLoadId = -1, fetchReloadIds = /* @__PURE__ */ new Map(), fetchRedirectIds = /* @__PURE__ */ new Set(), fetchLoadMatches = /* @__PURE__ */ new Map(), activeDeferreds = /* @__PURE__ */ new Map(), blockerFunctions = /* @__PURE__ */ new Map(), ignoreNextHistoryUpdate = !1;
      function initialize() {
        return unlistenHistory = init.history.listen((_ref) => {
          let {
            action: historyAction,
            location: location2,
            delta
          } = _ref;
          if (ignoreNextHistoryUpdate) {
            ignoreNextHistoryUpdate = !1;
            return;
          }
          warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
          let blockerKey = shouldBlockNavigation({
            currentLocation: state.location,
            nextLocation: location2,
            historyAction
          });
          if (blockerKey && delta != null) {
            ignoreNextHistoryUpdate = !0, init.history.go(delta * -1), updateBlocker(blockerKey, {
              state: "blocked",
              location: location2,
              proceed() {
                updateBlocker(blockerKey, {
                  state: "proceeding",
                  proceed: void 0,
                  reset: void 0,
                  location: location2
                }), init.history.go(delta);
              },
              reset() {
                deleteBlocker(blockerKey), updateState({
                  blockers: new Map(router.state.blockers)
                });
              }
            });
            return;
          }
          return startNavigation(historyAction, location2);
        }), state.initialized || startNavigation(exports2.Action.Pop, state.location), router;
      }
      function dispose() {
        unlistenHistory && unlistenHistory(), subscribers.clear(), pendingNavigationController && pendingNavigationController.abort(), state.fetchers.forEach((_, key2) => deleteFetcher(key2)), state.blockers.forEach((_, key2) => deleteBlocker(key2));
      }
      function subscribe(fn) {
        return subscribers.add(fn), () => subscribers.delete(fn);
      }
      function updateState(newState) {
        state = _extends({}, state, newState), subscribers.forEach((subscriber) => subscriber(state));
      }
      function completeNavigation(location2, newState) {
        var _location$state, _location$state2;
        let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location2.state) == null ? void 0 : _location$state._isRedirect) !== !0, actionData;
        newState.actionData ? Object.keys(newState.actionData).length > 0 ? actionData = newState.actionData : actionData = null : isActionReload ? actionData = state.actionData : actionData = null;
        let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
        for (let [key2] of blockerFunctions)
          deleteBlocker(key2);
        let preventScrollReset = pendingPreventScrollReset === !0 || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location2.state) == null ? void 0 : _location$state2._isRedirect) !== !0;
        inFlightDataRoutes && (dataRoutes = inFlightDataRoutes, inFlightDataRoutes = void 0), updateState(_extends({}, newState, {
          actionData,
          loaderData,
          historyAction: pendingAction,
          location: location2,
          initialized: !0,
          navigation: IDLE_NAVIGATION,
          revalidation: "idle",
          restoreScrollPosition: getSavedScrollPosition(location2, newState.matches || state.matches),
          preventScrollReset,
          blockers: new Map(state.blockers)
        })), isUninterruptedRevalidation || pendingAction === exports2.Action.Pop || (pendingAction === exports2.Action.Push ? init.history.push(location2, location2.state) : pendingAction === exports2.Action.Replace && init.history.replace(location2, location2.state)), pendingAction = exports2.Action.Pop, pendingPreventScrollReset = !1, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [];
      }
      async function navigate(to, opts) {
        if (typeof to == "number") {
          init.history.go(to);
          return;
        }
        let {
          path: path6,
          submission,
          error
        } = normalizeNavigateOptions(to, opts), currentLocation = state.location, nextLocation = createLocation2(state.location, path6, opts && opts.state);
        nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));
        let userReplace = opts && opts.replace != null ? opts.replace : void 0, historyAction = exports2.Action.Push;
        userReplace === !0 ? historyAction = exports2.Action.Replace : userReplace === !1 || submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search && (historyAction = exports2.Action.Replace);
        let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === !0 : void 0, blockerKey = shouldBlockNavigation({
          currentLocation,
          nextLocation,
          historyAction
        });
        if (blockerKey) {
          updateBlocker(blockerKey, {
            state: "blocked",
            location: nextLocation,
            proceed() {
              updateBlocker(blockerKey, {
                state: "proceeding",
                proceed: void 0,
                reset: void 0,
                location: nextLocation
              }), navigate(to, opts);
            },
            reset() {
              deleteBlocker(blockerKey), updateState({
                blockers: new Map(state.blockers)
              });
            }
          });
          return;
        }
        return await startNavigation(historyAction, nextLocation, {
          submission,
          pendingError: error,
          preventScrollReset,
          replace: opts && opts.replace
        });
      }
      function revalidate() {
        if (interruptActiveLoads(), updateState({
          revalidation: "loading"
        }), state.navigation.state !== "submitting") {
          if (state.navigation.state === "idle") {
            startNavigation(state.historyAction, state.location, {
              startUninterruptedRevalidation: !0
            });
            return;
          }
          startNavigation(pendingAction || state.historyAction, state.navigation.location, {
            overrideNavigation: state.navigation
          });
        }
      }
      async function startNavigation(historyAction, location2, opts) {
        pendingNavigationController && pendingNavigationController.abort(), pendingNavigationController = null, pendingAction = historyAction, isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === !0, saveScrollPosition(state.location, state.matches), pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0;
        let routesToUse = inFlightDataRoutes || dataRoutes, loadingNavigation = opts && opts.overrideNavigation, matches = matchRoutes(routesToUse, location2, init.basename);
        if (!matches) {
          let error = getInternalRouterError(404, {
            pathname: location2.pathname
          }), {
            matches: notFoundMatches,
            route
          } = getShortCircuitMatches(routesToUse);
          cancelActiveDeferreds(), completeNavigation(location2, {
            matches: notFoundMatches,
            loaderData: {},
            errors: {
              [route.id]: error
            }
          });
          return;
        }
        if (isHashChangeOnly(state.location, location2) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
          completeNavigation(location2, {
            matches
          });
          return;
        }
        pendingNavigationController = new AbortController();
        let request = createClientSideRequest(init.history, location2, pendingNavigationController.signal, opts && opts.submission), pendingActionData, pendingError;
        if (opts && opts.pendingError)
          pendingError = {
            [findNearestBoundary(matches).route.id]: opts.pendingError
          };
        else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
          let actionOutput = await handleAction(request, location2, opts.submission, matches, {
            replace: opts.replace
          });
          if (actionOutput.shortCircuited)
            return;
          pendingActionData = actionOutput.pendingActionData, pendingError = actionOutput.pendingActionError, loadingNavigation = _extends({
            state: "loading",
            location: location2
          }, opts.submission), request = new Request(request.url, {
            signal: request.signal
          });
        }
        let {
          shortCircuited,
          loaderData,
          errors: errors2
        } = await handleLoaders(request, location2, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);
        shortCircuited || (pendingNavigationController = null, completeNavigation(location2, _extends({
          matches
        }, pendingActionData ? {
          actionData: pendingActionData
        } : {}, {
          loaderData,
          errors: errors2
        })));
      }
      async function handleAction(request, location2, submission, matches, opts) {
        interruptActiveLoads();
        let navigation = _extends({
          state: "submitting",
          location: location2
        }, submission);
        updateState({
          navigation
        });
        let result, actionMatch = getTargetMatch(matches, location2);
        if (!actionMatch.route.action)
          result = {
            type: ResultType.error,
            error: getInternalRouterError(405, {
              method: request.method,
              pathname: location2.pathname,
              routeId: actionMatch.route.id
            })
          };
        else if (result = await callLoaderOrAction("action", request, actionMatch, matches, router.basename), request.signal.aborted)
          return {
            shortCircuited: !0
          };
        if (isRedirectResult(result)) {
          let replace2;
          return opts && opts.replace != null ? replace2 = opts.replace : replace2 = result.location === state.location.pathname + state.location.search, await startRedirectNavigation(state, result, {
            submission,
            replace: replace2
          }), {
            shortCircuited: !0
          };
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
          return (opts && opts.replace) !== !0 && (pendingAction = exports2.Action.Push), {
            pendingActionData: {},
            pendingActionError: {
              [boundaryMatch.route.id]: result.error
            }
          };
        }
        if (isDeferredResult(result))
          throw getInternalRouterError(400, {
            type: "defer-action"
          });
        return {
          pendingActionData: {
            [actionMatch.route.id]: result.data
          }
        };
      }
      async function handleLoaders(request, location2, matches, overrideNavigation, submission, replace2, pendingActionData, pendingError) {
        let loadingNavigation = overrideNavigation;
        loadingNavigation || (loadingNavigation = _extends({
          state: "loading",
          location: location2,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0
        }, submission));
        let activeSubmission = submission || (loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {
          formMethod: loadingNavigation.formMethod,
          formAction: loadingNavigation.formAction,
          formData: loadingNavigation.formData,
          formEncType: loadingNavigation.formEncType
        } : void 0), routesToUse = inFlightDataRoutes || dataRoutes, [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location2, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, init.basename, pendingActionData, pendingError);
        if (cancelActiveDeferreds((routeId) => !(matches && matches.some((m) => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId)), matchesToLoad.length === 0 && revalidatingFetchers.length === 0)
          return completeNavigation(location2, _extends({
            matches,
            loaderData: {},
            errors: pendingError || null
          }, pendingActionData ? {
            actionData: pendingActionData
          } : {})), {
            shortCircuited: !0
          };
        if (!isUninterruptedRevalidation) {
          revalidatingFetchers.forEach((rf) => {
            let fetcher = state.fetchers.get(rf.key), revalidatingFetcher = {
              state: "loading",
              data: fetcher && fetcher.data,
              formMethod: void 0,
              formAction: void 0,
              formEncType: void 0,
              formData: void 0,
              " _hasFetcherDoneAnything ": !0
            };
            state.fetchers.set(rf.key, revalidatingFetcher);
          });
          let actionData = pendingActionData || state.actionData;
          updateState(_extends({
            navigation: loadingNavigation
          }, actionData ? Object.keys(actionData).length === 0 ? {
            actionData: null
          } : {
            actionData
          } : {}, revalidatingFetchers.length > 0 ? {
            fetchers: new Map(state.fetchers)
          } : {}));
        }
        pendingNavigationLoadId = ++incrementingLoadId, revalidatingFetchers.forEach((rf) => fetchControllers.set(rf.key, pendingNavigationController));
        let {
          results,
          loaderResults,
          fetcherResults
        } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
        if (request.signal.aborted)
          return {
            shortCircuited: !0
          };
        revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));
        let redirect2 = findRedirect(results);
        if (redirect2)
          return await startRedirectNavigation(state, redirect2, {
            replace: replace2
          }), {
            shortCircuited: !0
          };
        let {
          loaderData,
          errors: errors2
        } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);
        activeDeferreds.forEach((deferredData, routeId) => {
          deferredData.subscribe((aborted) => {
            (aborted || deferredData.done) && activeDeferreds.delete(routeId);
          });
        }), markFetchRedirectsDone();
        let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
        return _extends({
          loaderData,
          errors: errors2
        }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {
          fetchers: new Map(state.fetchers)
        } : {});
      }
      function getFetcher(key2) {
        return state.fetchers.get(key2) || IDLE_FETCHER;
      }
      function fetch2(key2, routeId, href, opts) {
        if (isServer)
          throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
        fetchControllers.has(key2) && abortFetcher(key2);
        let matches = matchRoutes(inFlightDataRoutes || dataRoutes, href, init.basename);
        if (!matches) {
          setFetcherError(key2, routeId, getInternalRouterError(404, {
            pathname: href
          }));
          return;
        }
        let {
          path: path6,
          submission
        } = normalizeNavigateOptions(href, opts, !0), match = getTargetMatch(matches, path6);
        if (pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0, submission && isMutationMethod(submission.formMethod)) {
          handleFetcherAction(key2, routeId, path6, match, matches, submission);
          return;
        }
        fetchLoadMatches.set(key2, {
          routeId,
          path: path6
        }), handleFetcherLoader(key2, routeId, path6, match, matches, submission);
      }
      async function handleFetcherAction(key2, routeId, path6, match, requestMatches, submission) {
        if (interruptActiveLoads(), fetchLoadMatches.delete(key2), !match.route.action) {
          let error = getInternalRouterError(405, {
            method: submission.formMethod,
            pathname: path6,
            routeId
          });
          setFetcherError(key2, routeId, error);
          return;
        }
        let existingFetcher = state.fetchers.get(key2), fetcher = _extends({
          state: "submitting"
        }, submission, {
          data: existingFetcher && existingFetcher.data,
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key2, fetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
        let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path6, abortController.signal, submission);
        fetchControllers.set(key2, abortController);
        let actionResult = await callLoaderOrAction("action", fetchRequest, match, requestMatches, router.basename);
        if (fetchRequest.signal.aborted) {
          fetchControllers.get(key2) === abortController && fetchControllers.delete(key2);
          return;
        }
        if (isRedirectResult(actionResult)) {
          fetchControllers.delete(key2), fetchRedirectIds.add(key2);
          let loadingFetcher = _extends({
            state: "loading"
          }, submission, {
            data: void 0,
            " _hasFetcherDoneAnything ": !0
          });
          return state.fetchers.set(key2, loadingFetcher), updateState({
            fetchers: new Map(state.fetchers)
          }), startRedirectNavigation(state, actionResult, {
            isFetchActionRedirect: !0
          });
        }
        if (isErrorResult(actionResult)) {
          setFetcherError(key2, routeId, actionResult.error);
          return;
        }
        if (isDeferredResult(actionResult))
          throw getInternalRouterError(400, {
            type: "defer-action"
          });
        let nextLocation = state.navigation.location || state.location, revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal), routesToUse = inFlightDataRoutes || dataRoutes, matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, init.basename) : state.matches;
        invariant(matches, "Didn't find any matches after fetcher action");
        let loadId = ++incrementingLoadId;
        fetchReloadIds.set(key2, loadId);
        let loadFetcher = _extends({
          state: "loading",
          data: actionResult.data
        }, submission, {
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key2, loadFetcher);
        let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
          init.history,
          state,
          matches,
          submission,
          nextLocation,
          isRevalidationRequired,
          cancelledDeferredRoutes,
          cancelledFetcherLoads,
          fetchLoadMatches,
          routesToUse,
          init.basename,
          {
            [match.route.id]: actionResult.data
          },
          void 0
        );
        revalidatingFetchers.filter((rf) => rf.key !== key2).forEach((rf) => {
          let staleKey = rf.key, existingFetcher2 = state.fetchers.get(staleKey), revalidatingFetcher = {
            state: "loading",
            data: existingFetcher2 && existingFetcher2.data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(staleKey, revalidatingFetcher), fetchControllers.set(staleKey, abortController);
        }), updateState({
          fetchers: new Map(state.fetchers)
        });
        let {
          results,
          loaderResults,
          fetcherResults
        } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
        if (abortController.signal.aborted)
          return;
        fetchReloadIds.delete(key2), fetchControllers.delete(key2), revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));
        let redirect2 = findRedirect(results);
        if (redirect2)
          return startRedirectNavigation(state, redirect2);
        let {
          loaderData,
          errors: errors2
        } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds), doneFetcher = {
          state: "idle",
          data: actionResult.data,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          " _hasFetcherDoneAnything ": !0
        };
        state.fetchers.set(key2, doneFetcher);
        let didAbortFetchLoads = abortStaleFetchLoads(loadId);
        state.navigation.state === "loading" && loadId > pendingNavigationLoadId ? (invariant(pendingAction, "Expected pending action"), pendingNavigationController && pendingNavigationController.abort(), completeNavigation(state.navigation.location, {
          matches,
          loaderData,
          errors: errors2,
          fetchers: new Map(state.fetchers)
        })) : (updateState(_extends({
          errors: errors2,
          loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors2)
        }, didAbortFetchLoads ? {
          fetchers: new Map(state.fetchers)
        } : {})), isRevalidationRequired = !1);
      }
      async function handleFetcherLoader(key2, routeId, path6, match, matches, submission) {
        let existingFetcher = state.fetchers.get(key2), loadingFetcher = _extends({
          state: "loading",
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0
        }, submission, {
          data: existingFetcher && existingFetcher.data,
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key2, loadingFetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
        let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path6, abortController.signal);
        fetchControllers.set(key2, abortController);
        let result = await callLoaderOrAction("loader", fetchRequest, match, matches, router.basename);
        if (isDeferredResult(result) && (result = await resolveDeferredData(result, fetchRequest.signal, !0) || result), fetchControllers.get(key2) === abortController && fetchControllers.delete(key2), fetchRequest.signal.aborted)
          return;
        if (isRedirectResult(result)) {
          await startRedirectNavigation(state, result);
          return;
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(state.matches, routeId);
          state.fetchers.delete(key2), updateState({
            fetchers: new Map(state.fetchers),
            errors: {
              [boundaryMatch.route.id]: result.error
            }
          });
          return;
        }
        invariant(!isDeferredResult(result), "Unhandled fetcher deferred data");
        let doneFetcher = {
          state: "idle",
          data: result.data,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          " _hasFetcherDoneAnything ": !0
        };
        state.fetchers.set(key2, doneFetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
      }
      async function startRedirectNavigation(state2, redirect2, _temp) {
        var _window;
        let {
          submission,
          replace: replace2,
          isFetchActionRedirect
        } = _temp === void 0 ? {} : _temp;
        redirect2.revalidate && (isRevalidationRequired = !0);
        let redirectLocation = createLocation2(
          state2.location,
          redirect2.location,
          _extends({
            _isRedirect: !0
          }, isFetchActionRedirect ? {
            _isFetchActionRedirect: !0
          } : {})
        );
        if (invariant(redirectLocation, "Expected a location on the redirect navigation"), ABSOLUTE_URL_REGEX2.test(redirect2.location) && isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) < "u") {
          let url = init.history.createURL(redirect2.location), isDifferentBasename = stripBasename(url.pathname, init.basename || "/") == null;
          if (window.location.origin !== url.origin || isDifferentBasename) {
            replace2 ? window.location.replace(redirect2.location) : window.location.assign(redirect2.location);
            return;
          }
        }
        pendingNavigationController = null;
        let redirectHistoryAction = replace2 === !0 ? exports2.Action.Replace : exports2.Action.Push, {
          formMethod,
          formAction,
          formEncType,
          formData
        } = state2.navigation;
        !submission && formMethod && formAction && formData && formEncType && (submission = {
          formMethod,
          formAction,
          formEncType,
          formData
        }), redirectPreserveMethodStatusCodes.has(redirect2.status) && submission && isMutationMethod(submission.formMethod) ? await startNavigation(redirectHistoryAction, redirectLocation, {
          submission: _extends({}, submission, {
            formAction: redirect2.location
          }),
          preventScrollReset: pendingPreventScrollReset
        }) : await startNavigation(redirectHistoryAction, redirectLocation, {
          overrideNavigation: {
            state: "loading",
            location: redirectLocation,
            formMethod: submission ? submission.formMethod : void 0,
            formAction: submission ? submission.formAction : void 0,
            formEncType: submission ? submission.formEncType : void 0,
            formData: submission ? submission.formData : void 0
          },
          preventScrollReset: pendingPreventScrollReset
        });
      }
      async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
        let results = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, router.basename)), ...fetchersToLoad.map((f) => f.matches && f.match ? callLoaderOrAction("loader", createClientSideRequest(init.history, f.path, request.signal), f.match, f.matches, router.basename) : {
          type: ResultType.error,
          error: getInternalRouterError(404, {
            pathname: f.path
          })
        })]), loaderResults = results.slice(0, matchesToLoad.length), fetcherResults = results.slice(matchesToLoad.length);
        return await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, !1, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map((f) => f.match), fetcherResults, request.signal, !0)]), {
          results,
          loaderResults,
          fetcherResults
        };
      }
      function interruptActiveLoads() {
        isRevalidationRequired = !0, cancelledDeferredRoutes.push(...cancelActiveDeferreds()), fetchLoadMatches.forEach((_, key2) => {
          fetchControllers.has(key2) && (cancelledFetcherLoads.push(key2), abortFetcher(key2));
        });
      }
      function setFetcherError(key2, routeId, error) {
        let boundaryMatch = findNearestBoundary(state.matches, routeId);
        deleteFetcher(key2), updateState({
          errors: {
            [boundaryMatch.route.id]: error
          },
          fetchers: new Map(state.fetchers)
        });
      }
      function deleteFetcher(key2) {
        fetchControllers.has(key2) && abortFetcher(key2), fetchLoadMatches.delete(key2), fetchReloadIds.delete(key2), fetchRedirectIds.delete(key2), state.fetchers.delete(key2);
      }
      function abortFetcher(key2) {
        let controller = fetchControllers.get(key2);
        invariant(controller, "Expected fetch controller: " + key2), controller.abort(), fetchControllers.delete(key2);
      }
      function markFetchersDone(keys2) {
        for (let key2 of keys2) {
          let doneFetcher = {
            state: "idle",
            data: getFetcher(key2).data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(key2, doneFetcher);
        }
      }
      function markFetchRedirectsDone() {
        let doneKeys = [];
        for (let key2 of fetchRedirectIds) {
          let fetcher = state.fetchers.get(key2);
          invariant(fetcher, "Expected fetcher: " + key2), fetcher.state === "loading" && (fetchRedirectIds.delete(key2), doneKeys.push(key2));
        }
        markFetchersDone(doneKeys);
      }
      function abortStaleFetchLoads(landedId) {
        let yeetedKeys = [];
        for (let [key2, id] of fetchReloadIds)
          if (id < landedId) {
            let fetcher = state.fetchers.get(key2);
            invariant(fetcher, "Expected fetcher: " + key2), fetcher.state === "loading" && (abortFetcher(key2), fetchReloadIds.delete(key2), yeetedKeys.push(key2));
          }
        return markFetchersDone(yeetedKeys), yeetedKeys.length > 0;
      }
      function getBlocker(key2, fn) {
        let blocker = state.blockers.get(key2) || IDLE_BLOCKER;
        return blockerFunctions.get(key2) !== fn && blockerFunctions.set(key2, fn), blocker;
      }
      function deleteBlocker(key2) {
        state.blockers.delete(key2), blockerFunctions.delete(key2);
      }
      function updateBlocker(key2, newBlocker) {
        let blocker = state.blockers.get(key2) || IDLE_BLOCKER;
        invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state), state.blockers.set(key2, newBlocker), updateState({
          blockers: new Map(state.blockers)
        });
      }
      function shouldBlockNavigation(_ref2) {
        let {
          currentLocation,
          nextLocation,
          historyAction
        } = _ref2;
        if (blockerFunctions.size === 0)
          return;
        blockerFunctions.size > 1 && warning(!1, "A router only supports one blocker at a time");
        let entries = Array.from(blockerFunctions.entries()), [blockerKey, blockerFunction] = entries[entries.length - 1], blocker = state.blockers.get(blockerKey);
        if (!(blocker && blocker.state === "proceeding") && blockerFunction({
          currentLocation,
          nextLocation,
          historyAction
        }))
          return blockerKey;
      }
      function cancelActiveDeferreds(predicate) {
        let cancelledRouteIds = [];
        return activeDeferreds.forEach((dfd, routeId) => {
          (!predicate || predicate(routeId)) && (dfd.cancel(), cancelledRouteIds.push(routeId), activeDeferreds.delete(routeId));
        }), cancelledRouteIds;
      }
      function enableScrollRestoration(positions, getPosition, getKey) {
        if (savedScrollPositions = positions, getScrollPosition = getPosition, getScrollRestorationKey = getKey || ((location2) => location2.key), !initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
          initialScrollRestored = !0;
          let y = getSavedScrollPosition(state.location, state.matches);
          y != null && updateState({
            restoreScrollPosition: y
          });
        }
        return () => {
          savedScrollPositions = null, getScrollPosition = null, getScrollRestorationKey = null;
        };
      }
      function saveScrollPosition(location2, matches) {
        if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
          let userMatches = matches.map((m) => createUseMatchesMatch(m, state.loaderData)), key2 = getScrollRestorationKey(location2, userMatches) || location2.key;
          savedScrollPositions[key2] = getScrollPosition();
        }
      }
      function getSavedScrollPosition(location2, matches) {
        if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
          let userMatches = matches.map((m) => createUseMatchesMatch(m, state.loaderData)), key2 = getScrollRestorationKey(location2, userMatches) || location2.key, y = savedScrollPositions[key2];
          if (typeof y == "number")
            return y;
        }
        return null;
      }
      function _internalSetRoutes(newRoutes) {
        inFlightDataRoutes = newRoutes;
      }
      return router = {
        get basename() {
          return init.basename;
        },
        get state() {
          return state;
        },
        get routes() {
          return dataRoutes;
        },
        initialize,
        subscribe,
        enableScrollRestoration,
        navigate,
        fetch: fetch2,
        revalidate,
        createHref: (to) => init.history.createHref(to),
        encodeLocation: (to) => init.history.encodeLocation(to),
        getFetcher,
        deleteFetcher,
        dispose,
        getBlocker,
        deleteBlocker,
        _internalFetchControllers: fetchControllers,
        _internalActiveDeferreds: activeDeferreds,
        _internalSetRoutes
      }, router;
    }
    var UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");
    function createStaticHandler(routes2, opts) {
      invariant(routes2.length > 0, "You must provide a non-empty routes array to createStaticHandler");
      let dataRoutes = convertRoutesToDataRoutes(routes2), basename = (opts ? opts.basename : null) || "/";
      async function query(request, _temp2) {
        let {
          requestContext
        } = _temp2 === void 0 ? {} : _temp2, url = new URL(request.url), method = request.method.toLowerCase(), location2 = createLocation2("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location2, basename);
        if (!isValidMethod(method) && method !== "head") {
          let error = getInternalRouterError(405, {
            method
          }), {
            matches: methodNotAllowedMatches,
            route
          } = getShortCircuitMatches(dataRoutes);
          return {
            basename,
            location: location2,
            matches: methodNotAllowedMatches,
            loaderData: {},
            actionData: null,
            errors: {
              [route.id]: error
            },
            statusCode: error.status,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        } else if (!matches) {
          let error = getInternalRouterError(404, {
            pathname: location2.pathname
          }), {
            matches: notFoundMatches,
            route
          } = getShortCircuitMatches(dataRoutes);
          return {
            basename,
            location: location2,
            matches: notFoundMatches,
            loaderData: {},
            actionData: null,
            errors: {
              [route.id]: error
            },
            statusCode: error.status,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        }
        let result = await queryImpl(request, location2, matches, requestContext);
        return isResponse(result) ? result : _extends({
          location: location2,
          basename
        }, result);
      }
      async function queryRoute(request, _temp3) {
        let {
          routeId,
          requestContext
        } = _temp3 === void 0 ? {} : _temp3, url = new URL(request.url), method = request.method.toLowerCase(), location2 = createLocation2("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location2, basename);
        if (!isValidMethod(method) && method !== "head" && method !== "options")
          throw getInternalRouterError(405, {
            method
          });
        if (!matches)
          throw getInternalRouterError(404, {
            pathname: location2.pathname
          });
        let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location2);
        if (routeId && !match)
          throw getInternalRouterError(403, {
            pathname: location2.pathname,
            routeId
          });
        if (!match)
          throw getInternalRouterError(404, {
            pathname: location2.pathname
          });
        let result = await queryImpl(request, location2, matches, requestContext, match);
        if (isResponse(result))
          return result;
        let error = result.errors ? Object.values(result.errors)[0] : void 0;
        if (error !== void 0)
          throw error;
        if (result.actionData)
          return Object.values(result.actionData)[0];
        if (result.loaderData) {
          var _result$activeDeferre;
          let data = Object.values(result.loaderData)[0];
          return (_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id] && (data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id]), data;
        }
      }
      async function queryImpl(request, location2, matches, requestContext, routeMatch) {
        invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
        try {
          if (isMutationMethod(request.method.toLowerCase()))
            return await submit(request, matches, routeMatch || getTargetMatch(matches, location2), requestContext, routeMatch != null);
          let result = await loadRouteData(request, matches, requestContext, routeMatch);
          return isResponse(result) ? result : _extends({}, result, {
            actionData: null,
            actionHeaders: {}
          });
        } catch (e) {
          if (isQueryRouteResponse(e)) {
            if (e.type === ResultType.error && !isRedirectResponse(e.response))
              throw e.response;
            return e.response;
          }
          if (isRedirectResponse(e))
            return e;
          throw e;
        }
      }
      async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
        let result;
        if (actionMatch.route.action) {
          if (result = await callLoaderOrAction("action", request, actionMatch, matches, basename, !0, isRouteRequest, requestContext), request.signal.aborted) {
            let method = isRouteRequest ? "queryRoute" : "query";
            throw new Error(method + "() call aborted");
          }
        } else {
          let error = getInternalRouterError(405, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: actionMatch.route.id
          });
          if (isRouteRequest)
            throw error;
          result = {
            type: ResultType.error,
            error
          };
        }
        if (isRedirectResult(result))
          throw new Response(null, {
            status: result.status,
            headers: {
              Location: result.location
            }
          });
        if (isDeferredResult(result)) {
          let error = getInternalRouterError(400, {
            type: "defer-action"
          });
          if (isRouteRequest)
            throw error;
          result = {
            type: ResultType.error,
            error
          };
        }
        if (isRouteRequest) {
          if (isErrorResult(result))
            throw result.error;
          return {
            matches: [actionMatch],
            loaderData: {},
            actionData: {
              [actionMatch.route.id]: result.data
            },
            errors: null,
            statusCode: 200,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id), context2 = await loadRouteData(request, matches, requestContext, void 0, {
            [boundaryMatch.route.id]: result.error
          });
          return _extends({}, context2, {
            statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
            actionData: null,
            actionHeaders: _extends({}, result.headers ? {
              [actionMatch.route.id]: result.headers
            } : {})
          });
        }
        let loaderRequest = new Request(request.url, {
          headers: request.headers,
          redirect: request.redirect,
          signal: request.signal
        }), context = await loadRouteData(loaderRequest, matches, requestContext);
        return _extends({}, context, result.statusCode ? {
          statusCode: result.statusCode
        } : {}, {
          actionData: {
            [actionMatch.route.id]: result.data
          },
          actionHeaders: _extends({}, result.headers ? {
            [actionMatch.route.id]: result.headers
          } : {})
        });
      }
      async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
        let isRouteRequest = routeMatch != null;
        if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader))
          throw getInternalRouterError(400, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: routeMatch == null ? void 0 : routeMatch.route.id
          });
        let matchesToLoad = (routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0])).filter((m) => m.route.loader);
        if (matchesToLoad.length === 0)
          return {
            matches,
            loaderData: matches.reduce((acc, m) => Object.assign(acc, {
              [m.route.id]: null
            }), {}),
            errors: pendingActionError || null,
            statusCode: 200,
            loaderHeaders: {},
            activeDeferreds: null
          };
        let results = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, basename, !0, isRouteRequest, requestContext))]);
        if (request.signal.aborted) {
          let method = isRouteRequest ? "queryRoute" : "query";
          throw new Error(method + "() call aborted");
        }
        let activeDeferreds = /* @__PURE__ */ new Map(), context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds), executedLoaders = new Set(matchesToLoad.map((match) => match.route.id));
        return matches.forEach((match) => {
          executedLoaders.has(match.route.id) || (context.loaderData[match.route.id] = null);
        }), _extends({}, context, {
          matches,
          activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
        });
      }
      return {
        dataRoutes,
        query,
        queryRoute
      };
    }
    function getStaticContextFromError(routes2, context, error) {
      return _extends({}, context, {
        statusCode: 500,
        errors: {
          [context._deepestRenderedBoundaryId || routes2[0].id]: error
        }
      });
    }
    function isSubmissionNavigation(opts) {
      return opts != null && "formData" in opts;
    }
    function normalizeNavigateOptions(to, opts, isFetcher) {
      isFetcher === void 0 && (isFetcher = !1);
      let path6 = typeof to == "string" ? to : createPath(to);
      if (!opts || !isSubmissionNavigation(opts))
        return {
          path: path6
        };
      if (opts.formMethod && !isValidMethod(opts.formMethod))
        return {
          path: path6,
          error: getInternalRouterError(405, {
            method: opts.formMethod
          })
        };
      let submission;
      if (opts.formData && (submission = {
        formMethod: opts.formMethod || "get",
        formAction: stripHashFromPath(path6),
        formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
        formData: opts.formData
      }, isMutationMethod(submission.formMethod)))
        return {
          path: path6,
          submission
        };
      let parsedPath = parsePath(path6), searchParams = convertFormDataToSearchParams(opts.formData);
      return isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search) && searchParams.append("index", ""), parsedPath.search = "?" + searchParams, {
        path: createPath(parsedPath),
        submission
      };
    }
    function getLoaderMatchesUntilBoundary(matches, boundaryId) {
      let boundaryMatches = matches;
      if (boundaryId) {
        let index2 = matches.findIndex((m) => m.route.id === boundaryId);
        index2 >= 0 && (boundaryMatches = matches.slice(0, index2));
      }
      return boundaryMatches;
    }
    function getMatchesToLoad(history, state, matches, submission, location2, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {
      let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : void 0, currentUrl = history.createURL(state.location), nextUrl = history.createURL(location2), defaultShouldRevalidate = isRevalidationRequired || currentUrl.toString() === nextUrl.toString() || currentUrl.search !== nextUrl.search, boundaryId = pendingError ? Object.keys(pendingError)[0] : void 0, navigationMatches = getLoaderMatchesUntilBoundary(matches, boundaryId).filter((match, index2) => {
        if (match.route.loader == null)
          return !1;
        if (isNewLoader(state.loaderData, state.matches[index2], match) || cancelledDeferredRoutes.some((id) => id === match.route.id))
          return !0;
        let currentRouteMatch = state.matches[index2], nextRouteMatch = match;
        return shouldRevalidateLoader(match, _extends({
          currentUrl,
          currentParams: currentRouteMatch.params,
          nextUrl,
          nextParams: nextRouteMatch.params
        }, submission, {
          actionResult,
          defaultShouldRevalidate: defaultShouldRevalidate || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
        }));
      }), revalidatingFetchers = [];
      return fetchLoadMatches.forEach((f, key2) => {
        if (!matches.some((m) => m.route.id === f.routeId))
          return;
        let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
        if (!fetcherMatches) {
          revalidatingFetchers.push(_extends({
            key: key2
          }, f, {
            matches: null,
            match: null
          }));
          return;
        }
        let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
        if (cancelledFetcherLoads.includes(key2)) {
          revalidatingFetchers.push(_extends({
            key: key2,
            matches: fetcherMatches,
            match: fetcherMatch
          }, f));
          return;
        }
        shouldRevalidateLoader(fetcherMatch, _extends({
          currentUrl,
          currentParams: state.matches[state.matches.length - 1].params,
          nextUrl,
          nextParams: matches[matches.length - 1].params
        }, submission, {
          actionResult,
          defaultShouldRevalidate
        })) && revalidatingFetchers.push(_extends({
          key: key2,
          matches: fetcherMatches,
          match: fetcherMatch
        }, f));
      }), [navigationMatches, revalidatingFetchers];
    }
    function isNewLoader(currentLoaderData, currentMatch, match) {
      let isNew = !currentMatch || match.route.id !== currentMatch.route.id, isMissingData = currentLoaderData[match.route.id] === void 0;
      return isNew || isMissingData;
    }
    function isNewRouteInstance(currentMatch, match) {
      let currentPath = currentMatch.route.path;
      return currentMatch.pathname !== match.pathname || currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"];
    }
    function shouldRevalidateLoader(loaderMatch, arg) {
      if (loaderMatch.route.shouldRevalidate) {
        let routeChoice = loaderMatch.route.shouldRevalidate(arg);
        if (typeof routeChoice == "boolean")
          return routeChoice;
      }
      return arg.defaultShouldRevalidate;
    }
    async function callLoaderOrAction(type, request, match, matches, basename, isStaticRequest, isRouteRequest, requestContext) {
      basename === void 0 && (basename = "/"), isStaticRequest === void 0 && (isStaticRequest = !1), isRouteRequest === void 0 && (isRouteRequest = !1);
      let resultType, result, reject, abortPromise = new Promise((_, r) => reject = r), onReject = () => reject();
      request.signal.addEventListener("abort", onReject);
      try {
        let handler = match.route[type];
        invariant(handler, "Could not find the " + type + ' to run on the "' + match.route.id + '" route'), result = await Promise.race([handler({
          request,
          params: match.params,
          context: requestContext
        }), abortPromise]), invariant(result !== void 0, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ('"' + match.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
      } catch (e) {
        resultType = ResultType.error, result = e;
      } finally {
        request.signal.removeEventListener("abort", onReject);
      }
      if (isResponse(result)) {
        let status = result.status;
        if (redirectStatusCodes.has(status)) {
          let location2 = result.headers.get("Location");
          if (invariant(location2, "Redirects returned/thrown from loaders/actions must have a Location header"), ABSOLUTE_URL_REGEX2.test(location2)) {
            if (!isStaticRequest) {
              let currentUrl = new URL(request.url), url = location2.startsWith("//") ? new URL(currentUrl.protocol + location2) : new URL(location2), isSameBasename = stripBasename(url.pathname, basename) != null;
              url.origin === currentUrl.origin && isSameBasename && (location2 = url.pathname + url.search + url.hash);
            }
          } else {
            let activeMatches = matches.slice(0, matches.indexOf(match) + 1), routePathnames = getPathContributingMatches(activeMatches).map((match2) => match2.pathnameBase), resolvedLocation = resolveTo(location2, routePathnames, new URL(request.url).pathname);
            if (invariant(createPath(resolvedLocation), "Unable to resolve redirect location: " + location2), basename) {
              let path6 = resolvedLocation.pathname;
              resolvedLocation.pathname = path6 === "/" ? basename : joinPaths([basename, path6]);
            }
            location2 = createPath(resolvedLocation);
          }
          if (isStaticRequest)
            throw result.headers.set("Location", location2), result;
          return {
            type: ResultType.redirect,
            status,
            location: location2,
            revalidate: result.headers.get("X-Remix-Revalidate") !== null
          };
        }
        if (isRouteRequest)
          throw {
            type: resultType || ResultType.data,
            response: result
          };
        let data, contentType = result.headers.get("Content-Type");
        return contentType && /\bapplication\/json\b/.test(contentType) ? data = await result.json() : data = await result.text(), resultType === ResultType.error ? {
          type: resultType,
          error: new ErrorResponse(status, result.statusText, data),
          headers: result.headers
        } : {
          type: ResultType.data,
          data,
          statusCode: result.status,
          headers: result.headers
        };
      }
      if (resultType === ResultType.error)
        return {
          type: resultType,
          error: result
        };
      if (result instanceof DeferredData) {
        var _result$init, _result$init2;
        return {
          type: ResultType.deferred,
          deferredData: result,
          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
          headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
        };
      }
      return {
        type: ResultType.data,
        data: result
      };
    }
    function createClientSideRequest(history, location2, signal, submission) {
      let url = history.createURL(stripHashFromPath(location2)).toString(), init = {
        signal
      };
      if (submission && isMutationMethod(submission.formMethod)) {
        let {
          formMethod,
          formEncType,
          formData
        } = submission;
        init.method = formMethod.toUpperCase(), init.body = formEncType === "application/x-www-form-urlencoded" ? convertFormDataToSearchParams(formData) : formData;
      }
      return new Request(url, init);
    }
    function convertFormDataToSearchParams(formData) {
      let searchParams = new URLSearchParams();
      for (let [key2, value] of formData.entries())
        searchParams.append(key2, value instanceof File ? value.name : value);
      return searchParams;
    }
    function processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
      let loaderData = {}, errors2 = null, statusCode, foundError = !1, loaderHeaders = {};
      return results.forEach((result, index2) => {
        let id = matchesToLoad[index2].route.id;
        if (invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData"), isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, id), error = result.error;
          pendingError && (error = Object.values(pendingError)[0], pendingError = void 0), errors2 = errors2 || {}, errors2[boundaryMatch.route.id] == null && (errors2[boundaryMatch.route.id] = error), loaderData[id] = void 0, foundError || (foundError = !0, statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500), result.headers && (loaderHeaders[id] = result.headers);
        } else
          isDeferredResult(result) ? (activeDeferreds.set(id, result.deferredData), loaderData[id] = result.deferredData.data) : loaderData[id] = result.data, result.statusCode != null && result.statusCode !== 200 && !foundError && (statusCode = result.statusCode), result.headers && (loaderHeaders[id] = result.headers);
      }), pendingError && (errors2 = pendingError, loaderData[Object.keys(pendingError)[0]] = void 0), {
        loaderData,
        errors: errors2,
        statusCode: statusCode || 200,
        loaderHeaders
      };
    }
    function processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
      let {
        loaderData,
        errors: errors2
      } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);
      for (let index2 = 0; index2 < revalidatingFetchers.length; index2++) {
        let {
          key: key2,
          match
        } = revalidatingFetchers[index2];
        invariant(fetcherResults !== void 0 && fetcherResults[index2] !== void 0, "Did not find corresponding fetcher result");
        let result = fetcherResults[index2];
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
          errors2 && errors2[boundaryMatch.route.id] || (errors2 = _extends({}, errors2, {
            [boundaryMatch.route.id]: result.error
          })), state.fetchers.delete(key2);
        } else if (isRedirectResult(result))
          invariant(!1, "Unhandled fetcher revalidation redirect");
        else if (isDeferredResult(result))
          invariant(!1, "Unhandled fetcher deferred data");
        else {
          let doneFetcher = {
            state: "idle",
            data: result.data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(key2, doneFetcher);
        }
      }
      return {
        loaderData,
        errors: errors2
      };
    }
    function mergeLoaderData(loaderData, newLoaderData, matches, errors2) {
      let mergedLoaderData = _extends({}, newLoaderData);
      for (let match of matches) {
        let id = match.route.id;
        if (newLoaderData.hasOwnProperty(id) ? newLoaderData[id] !== void 0 && (mergedLoaderData[id] = newLoaderData[id]) : loaderData[id] !== void 0 && match.route.loader && (mergedLoaderData[id] = loaderData[id]), errors2 && errors2.hasOwnProperty(id))
          break;
      }
      return mergedLoaderData;
    }
    function findNearestBoundary(matches, routeId) {
      return (routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches]).reverse().find((m) => m.route.hasErrorBoundary === !0) || matches[0];
    }
    function getShortCircuitMatches(routes2) {
      let route = routes2.find((r) => r.index || !r.path || r.path === "/") || {
        id: "__shim-error-route__"
      };
      return {
        matches: [{
          params: {},
          pathname: "",
          pathnameBase: "",
          route
        }],
        route
      };
    }
    function getInternalRouterError(status, _temp4) {
      let {
        pathname,
        routeId,
        method,
        type
      } = _temp4 === void 0 ? {} : _temp4, statusText = "Unknown Server Error", errorMessage = "Unknown @remix-run/router error";
      return status === 400 ? (statusText = "Bad Request", method && pathname && routeId ? errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request." : type === "defer-action" && (errorMessage = "defer() is not supported in actions")) : status === 403 ? (statusText = "Forbidden", errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"') : status === 404 ? (statusText = "Not Found", errorMessage = 'No route matches URL "' + pathname + '"') : status === 405 && (statusText = "Method Not Allowed", method && pathname && routeId ? errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request." : method && (errorMessage = 'Invalid request method "' + method.toUpperCase() + '"')), new ErrorResponse(status || 500, statusText, new Error(errorMessage), !0);
    }
    function findRedirect(results) {
      for (let i = results.length - 1; i >= 0; i--) {
        let result = results[i];
        if (isRedirectResult(result))
          return result;
      }
    }
    function stripHashFromPath(path6) {
      let parsedPath = typeof path6 == "string" ? parsePath(path6) : path6;
      return createPath(_extends({}, parsedPath, {
        hash: ""
      }));
    }
    function isHashChangeOnly(a, b) {
      return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;
    }
    function isDeferredResult(result) {
      return result.type === ResultType.deferred;
    }
    function isErrorResult(result) {
      return result.type === ResultType.error;
    }
    function isRedirectResult(result) {
      return (result && result.type) === ResultType.redirect;
    }
    function isResponse(value) {
      return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
    }
    function isRedirectResponse(result) {
      if (!isResponse(result))
        return !1;
      let status = result.status, location2 = result.headers.get("Location");
      return status >= 300 && status <= 399 && location2 != null;
    }
    function isQueryRouteResponse(obj) {
      return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);
    }
    function isValidMethod(method) {
      return validRequestMethods.has(method);
    }
    function isMutationMethod(method) {
      return validMutationMethods.has(method);
    }
    async function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {
      for (let index2 = 0; index2 < results.length; index2++) {
        let result = results[index2], match = matchesToLoad[index2];
        if (!match)
          continue;
        let currentMatch = currentMatches.find((m) => m.route.id === match.route.id), isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== void 0;
        isDeferredResult(result) && (isFetcher || isRevalidatingLoader) && await resolveDeferredData(result, signal, isFetcher).then((result2) => {
          result2 && (results[index2] = result2 || results[index2]);
        });
      }
    }
    async function resolveDeferredData(result, signal, unwrap) {
      if (unwrap === void 0 && (unwrap = !1), !await result.deferredData.resolveData(signal)) {
        if (unwrap)
          try {
            return {
              type: ResultType.data,
              data: result.deferredData.unwrappedData
            };
          } catch (e) {
            return {
              type: ResultType.error,
              error: e
            };
          }
        return {
          type: ResultType.data,
          data: result.deferredData.data
        };
      }
    }
    function hasNakedIndexQuery(search3) {
      return new URLSearchParams(search3).getAll("index").some((v) => v === "");
    }
    function createUseMatchesMatch(match, loaderData) {
      let {
        route,
        pathname,
        params
      } = match;
      return {
        id: route.id,
        pathname,
        params,
        data: loaderData[route.id],
        handle: route.handle
      };
    }
    function getTargetMatch(matches, location2) {
      let search3 = typeof location2 == "string" ? parsePath(location2).search : location2.search;
      if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search3 || ""))
        return matches[matches.length - 1];
      let pathMatches = getPathContributingMatches(matches);
      return pathMatches[pathMatches.length - 1];
    }
    exports2.AbortedDeferredError = AbortedDeferredError;
    exports2.ErrorResponse = ErrorResponse;
    exports2.IDLE_BLOCKER = IDLE_BLOCKER;
    exports2.IDLE_FETCHER = IDLE_FETCHER;
    exports2.IDLE_NAVIGATION = IDLE_NAVIGATION;
    exports2.UNSAFE_DEFERRED_SYMBOL = UNSAFE_DEFERRED_SYMBOL;
    exports2.UNSAFE_DeferredData = DeferredData;
    exports2.UNSAFE_convertRoutesToDataRoutes = convertRoutesToDataRoutes;
    exports2.UNSAFE_getPathContributingMatches = getPathContributingMatches;
    exports2.UNSAFE_invariant = invariant;
    exports2.createBrowserHistory = createBrowserHistory;
    exports2.createHashHistory = createHashHistory;
    exports2.createMemoryHistory = createMemoryHistory;
    exports2.createPath = createPath;
    exports2.createRouter = createRouter;
    exports2.createStaticHandler = createStaticHandler;
    exports2.defer = defer;
    exports2.generatePath = generatePath;
    exports2.getStaticContextFromError = getStaticContextFromError;
    exports2.getToPathname = getToPathname;
    exports2.isRouteErrorResponse = isRouteErrorResponse;
    exports2.joinPaths = joinPaths;
    exports2.json = json13;
    exports2.matchPath = matchPath;
    exports2.matchRoutes = matchRoutes;
    exports2.normalizePathname = normalizePathname;
    exports2.parsePath = parsePath;
    exports2.redirect = redirect;
    exports2.resolvePath = resolvePath;
    exports2.resolveTo = resolveTo;
    exports2.stripBasename = stripBasename;
    exports2.warning = warning;
  }
});

// node_modules/react-router/dist/umd/react-router.production.min.js
var require_react_router_production_min = __commonJS({
  "node_modules/react-router/dist/umd/react-router.production.min.js"(exports2, module2) {
    (function(e, t) {
      typeof exports2 == "object" && typeof module2 < "u" ? t(exports2, require_router_cjs(), require_react()) : typeof define == "function" && define.amd ? define(["exports", "@remix-run/router", "react"], t) : t((e = typeof globalThis < "u" ? globalThis : e || self).ReactRouter = {}, e.RemixRouter, e.React);
    })(exports2, function(e, t, r) {
      "use strict";
      function n(e2) {
        if (e2 && e2.__esModule)
          return e2;
        var t2 = /* @__PURE__ */ Object.create(null);
        return e2 && Object.keys(e2).forEach(function(r2) {
          if (r2 !== "default") {
            var n2 = Object.getOwnPropertyDescriptor(e2, r2);
            Object.defineProperty(t2, r2, n2.get ? n2 : { enumerable: !0, get: function() {
              return e2[r2];
            } });
          }
        }), t2.default = e2, Object.freeze(t2);
      }
      var a = n(r);
      function o() {
        return o = Object.assign ? Object.assign.bind() : function(e2) {
          for (var t2 = 1; t2 < arguments.length; t2++) {
            var r2 = arguments[t2];
            for (var n2 in r2)
              Object.prototype.hasOwnProperty.call(r2, n2) && (e2[n2] = r2[n2]);
          }
          return e2;
        }, o.apply(this, arguments);
      }
      let i = typeof Object.is == "function" ? Object.is : function(e2, t2) {
        return e2 === t2 && (e2 !== 0 || 1 / e2 == 1 / t2) || e2 != e2 && t2 != t2;
      }, { useState: u, useEffect: l, useLayoutEffect: s2, useDebugValue: c } = a;
      function d(e2) {
        let t2 = e2.getSnapshot, r2 = e2.value;
        try {
          let e3 = t2();
          return !i(r2, e3);
        } catch {
          return !0;
        }
      }
      let p2 = typeof window > "u" || window.document === void 0 || window.document.createElement === void 0 ? function(e2, t2, r2) {
        return t2();
      } : function(e2, t2, r2) {
        let n2 = t2(), [{ inst: a2 }, o2] = u({ inst: { value: n2, getSnapshot: t2 } });
        return s2(() => {
          a2.value = n2, a2.getSnapshot = t2, d(a2) && o2({ inst: a2 });
        }, [e2, n2, t2]), l(() => (d(a2) && o2({ inst: a2 }), e2(() => {
          d(a2) && o2({ inst: a2 });
        })), [e2]), c(n2), n2;
      }, h2 = "useSyncExternalStore" in a ? ((e2) => e2.useSyncExternalStore)(a) : p2, f = a.createContext(null), m = a.createContext(null), v = a.createContext(null), g = a.createContext(null), E = a.createContext(null), b = a.createContext({ outlet: null, matches: [] }), y = a.createContext(null);
      function x() {
        return a.useContext(E) != null;
      }
      function P() {
        return x() || t.UNSAFE_invariant(!1), a.useContext(E).location;
      }
      function R() {
        x() || t.UNSAFE_invariant(!1);
        let { basename: e2, navigator: r2 } = a.useContext(g), { matches: n2 } = a.useContext(b), { pathname: o2 } = P(), i2 = JSON.stringify(t.UNSAFE_getPathContributingMatches(n2).map((e3) => e3.pathnameBase)), u2 = a.useRef(!1);
        return a.useEffect(() => {
          u2.current = !0;
        }), a.useCallback(function(n3, a2) {
          if (a2 === void 0 && (a2 = {}), !u2.current)
            return;
          if (typeof n3 == "number")
            return void r2.go(n3);
          let l2 = t.resolveTo(n3, JSON.parse(i2), o2, a2.relative === "path");
          e2 !== "/" && (l2.pathname = l2.pathname === "/" ? e2 : t.joinPaths([e2, l2.pathname])), (a2.replace ? r2.replace : r2.push)(l2, a2.state, a2);
        }, [e2, r2, i2, o2]);
      }
      let C = a.createContext(null);
      function S(e2) {
        let t2 = a.useContext(b).outlet;
        return t2 && a.createElement(C.Provider, { value: e2 }, t2);
      }
      function U(e2, r2) {
        let { relative: n2 } = r2 === void 0 ? {} : r2, { matches: o2 } = a.useContext(b), { pathname: i2 } = P(), u2 = JSON.stringify(t.UNSAFE_getPathContributingMatches(o2).map((e3) => e3.pathnameBase));
        return a.useMemo(() => t.resolveTo(e2, JSON.parse(u2), i2, n2 === "path"), [e2, u2, i2, n2]);
      }
      function _(e2, r2) {
        x() || t.UNSAFE_invariant(!1);
        let { navigator: n2 } = a.useContext(g), i2 = a.useContext(m), { matches: u2 } = a.useContext(b), l2 = u2[u2.length - 1], s3 = l2 ? l2.params : {};
        !l2 || l2.pathname;
        let c2 = l2 ? l2.pathnameBase : "/";
        l2 && l2.route;
        let d2, p3 = P();
        if (r2) {
          var h3;
          let e3 = typeof r2 == "string" ? t.parsePath(r2) : r2;
          c2 === "/" || ((h3 = e3.pathname) == null ? void 0 : h3.startsWith(c2)) || t.UNSAFE_invariant(!1), d2 = e3;
        } else
          d2 = p3;
        let f2 = d2.pathname || "/", v2 = c2 === "/" ? f2 : f2.slice(c2.length) || "/", y2 = t.matchRoutes(e2, { pathname: v2 }), R2 = N(y2 && y2.map((e3) => Object.assign({}, e3, { params: Object.assign({}, s3, e3.params), pathname: t.joinPaths([c2, n2.encodeLocation ? n2.encodeLocation(e3.pathname).pathname : e3.pathname]), pathnameBase: e3.pathnameBase === "/" ? c2 : t.joinPaths([c2, n2.encodeLocation ? n2.encodeLocation(e3.pathnameBase).pathname : e3.pathnameBase]) })), u2, i2 || void 0);
        return r2 && R2 ? a.createElement(E.Provider, { value: { location: o({ pathname: "/", search: "", hash: "", state: null, key: "default" }, d2), navigationType: t.Action.Pop } }, R2) : R2;
      }
      function O() {
        let e2 = B(), r2 = t.isRouteErrorResponse(e2) ? e2.status + " " + e2.statusText : e2 instanceof Error ? e2.message : JSON.stringify(e2), n2 = e2 instanceof Error ? e2.stack : null, o2 = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" };
        return a.createElement(a.Fragment, null, a.createElement("h2", null, "Unexpected Application Error!"), a.createElement("h3", { style: { fontStyle: "italic" } }, r2), n2 ? a.createElement("pre", { style: o2 }, n2) : null, null);
      }
      class j extends a.Component {
        constructor(e2) {
          super(e2), this.state = { location: e2.location, error: e2.error };
        }
        static getDerivedStateFromError(e2) {
          return { error: e2 };
        }
        static getDerivedStateFromProps(e2, t2) {
          return t2.location !== e2.location ? { error: e2.error, location: e2.location } : { error: e2.error || t2.error, location: t2.location };
        }
        componentDidCatch(e2, t2) {
          console.error("React Router caught the following error during render", e2, t2);
        }
        render() {
          return this.state.error ? a.createElement(b.Provider, { value: this.props.routeContext }, a.createElement(y.Provider, { value: this.state.error, children: this.props.component })) : this.props.children;
        }
      }
      function A(e2) {
        let { routeContext: t2, match: r2, children: n2 } = e2, o2 = a.useContext(f);
        return o2 && o2.static && o2.staticContext && r2.route.errorElement && (o2.staticContext._deepestRenderedBoundaryId = r2.route.id), a.createElement(b.Provider, { value: t2 }, n2);
      }
      function N(e2, r2, n2) {
        if (r2 === void 0 && (r2 = []), e2 == null) {
          if (n2 == null || !n2.errors)
            return null;
          e2 = n2.matches;
        }
        let o2 = e2, i2 = n2 == null ? void 0 : n2.errors;
        if (i2 != null) {
          let e3 = o2.findIndex((e4) => e4.route.id && (i2 == null ? void 0 : i2[e4.route.id]));
          e3 >= 0 || t.UNSAFE_invariant(!1), o2 = o2.slice(0, Math.min(o2.length, e3 + 1));
        }
        return o2.reduceRight((e3, t2, u2) => {
          let l2 = t2.route.id ? i2 == null ? void 0 : i2[t2.route.id] : null, s3 = n2 ? t2.route.errorElement || a.createElement(O, null) : null, c2 = r2.concat(o2.slice(0, u2 + 1)), d2 = () => a.createElement(A, { match: t2, routeContext: { outlet: e3, matches: c2 } }, l2 ? s3 : t2.route.element !== void 0 ? t2.route.element : e3);
          return n2 && (t2.route.errorElement || u2 === 0) ? a.createElement(j, { location: n2.location, component: s3, error: l2, children: d2(), routeContext: { outlet: null, matches: c2 } }) : d2();
        }, null);
      }
      var F, D;
      function M(e2) {
        let r2 = a.useContext(f);
        return r2 || t.UNSAFE_invariant(!1), r2;
      }
      function L(e2) {
        let r2 = a.useContext(m);
        return r2 || t.UNSAFE_invariant(!1), r2;
      }
      function k(e2) {
        let r2 = function(e3) {
          let r3 = a.useContext(b);
          return r3 || t.UNSAFE_invariant(!1), r3;
        }(), n2 = r2.matches[r2.matches.length - 1];
        return n2.route.id || t.UNSAFE_invariant(!1), n2.route.id;
      }
      function B() {
        var e2;
        let t2 = a.useContext(y), r2 = L(D.UseRouteError), n2 = k(D.UseRouteError);
        return t2 || ((e2 = r2.errors) == null ? void 0 : e2[n2]);
      }
      function w() {
        let e2 = a.useContext(v);
        return e2 == null ? void 0 : e2._data;
      }
      (function(e2) {
        e2.UseBlocker = "useBlocker", e2.UseRevalidator = "useRevalidator";
      })(F || (F = {})), function(e2) {
        e2.UseLoaderData = "useLoaderData", e2.UseActionData = "useActionData", e2.UseRouteError = "useRouteError", e2.UseNavigation = "useNavigation", e2.UseRouteLoaderData = "useRouteLoaderData", e2.UseMatches = "useMatches", e2.UseRevalidator = "useRevalidator";
      }(D || (D = {}));
      let T = 0;
      function I(e2) {
        t.UNSAFE_invariant(!1);
      }
      function H(e2) {
        let { basename: r2 = "/", children: n2 = null, location: o2, navigationType: i2 = t.Action.Pop, navigator: u2, static: l2 = !1 } = e2;
        x() && t.UNSAFE_invariant(!1);
        let s3 = r2.replace(/^\/*/, "/"), c2 = a.useMemo(() => ({ basename: s3, navigator: u2, static: l2 }), [s3, u2, l2]);
        typeof o2 == "string" && (o2 = t.parsePath(o2));
        let { pathname: d2 = "/", search: p3 = "", hash: h3 = "", state: f2 = null, key: m2 = "default" } = o2, v2 = a.useMemo(() => {
          let e3 = t.stripBasename(d2, s3);
          return e3 == null ? null : { pathname: e3, search: p3, hash: h3, state: f2, key: m2 };
        }, [s3, d2, p3, h3, f2, m2]);
        return v2 == null ? null : a.createElement(g.Provider, { value: c2 }, a.createElement(E.Provider, { children: n2, value: { location: v2, navigationType: i2 } }));
      }
      function J(e2) {
        let { children: t2, location: r2 } = e2, n2 = a.useContext(f);
        return _(n2 && !t2 ? n2.router.routes : Y(t2), r2);
      }
      var z;
      (function(e2) {
        e2[e2.pending = 0] = "pending", e2[e2.success = 1] = "success", e2[e2.error = 2] = "error";
      })(z || (z = {}));
      let V = new Promise(() => {
      });
      class q extends a.Component {
        constructor(e2) {
          super(e2), this.state = { error: null };
        }
        static getDerivedStateFromError(e2) {
          return { error: e2 };
        }
        componentDidCatch(e2, t2) {
          console.error("<Await> caught the following error during render", e2, t2);
        }
        render() {
          let { children: e2, errorElement: r2, resolve: n2 } = this.props, o2 = null, i2 = z.pending;
          if (n2 instanceof Promise)
            if (this.state.error) {
              i2 = z.error;
              let e3 = this.state.error;
              o2 = Promise.reject().catch(() => {
              }), Object.defineProperty(o2, "_tracked", { get: () => !0 }), Object.defineProperty(o2, "_error", { get: () => e3 });
            } else
              n2._tracked ? (o2 = n2, i2 = o2._error !== void 0 ? z.error : o2._data !== void 0 ? z.success : z.pending) : (i2 = z.pending, Object.defineProperty(n2, "_tracked", { get: () => !0 }), o2 = n2.then((e3) => Object.defineProperty(n2, "_data", { get: () => e3 }), (e3) => Object.defineProperty(n2, "_error", { get: () => e3 })));
          else
            i2 = z.success, o2 = Promise.resolve(), Object.defineProperty(o2, "_tracked", { get: () => !0 }), Object.defineProperty(o2, "_data", { get: () => n2 });
          if (i2 === z.error && o2._error instanceof t.AbortedDeferredError)
            throw V;
          if (i2 === z.error && !r2)
            throw o2._error;
          if (i2 === z.error)
            return a.createElement(v.Provider, { value: o2, children: r2 });
          if (i2 === z.success)
            return a.createElement(v.Provider, { value: o2, children: e2 });
          throw o2;
        }
      }
      function W(e2) {
        let { children: t2 } = e2, r2 = w(), n2 = typeof t2 == "function" ? t2(r2) : t2;
        return a.createElement(a.Fragment, null, n2);
      }
      function Y(e2, r2) {
        r2 === void 0 && (r2 = []);
        let n2 = [];
        return a.Children.forEach(e2, (e3, o2) => {
          if (!a.isValidElement(e3))
            return;
          if (e3.type === a.Fragment)
            return void n2.push.apply(n2, Y(e3.props.children, r2));
          e3.type !== I && t.UNSAFE_invariant(!1), e3.props.index && e3.props.children && t.UNSAFE_invariant(!1);
          let i2 = [...r2, o2], u2 = { id: e3.props.id || i2.join("-"), caseSensitive: e3.props.caseSensitive, element: e3.props.element, index: e3.props.index, path: e3.props.path, loader: e3.props.loader, action: e3.props.action, errorElement: e3.props.errorElement, hasErrorBoundary: e3.props.errorElement != null, shouldRevalidate: e3.props.shouldRevalidate, handle: e3.props.handle };
          e3.props.children && (u2.children = Y(e3.props.children, i2)), n2.push(u2);
        }), n2;
      }
      function G(e2) {
        return e2.map((e3) => {
          let t2 = o({}, e3);
          return t2.hasErrorBoundary == null && (t2.hasErrorBoundary = t2.errorElement != null), t2.children && (t2.children = G(t2.children)), t2;
        });
      }
      Object.defineProperty(e, "AbortedDeferredError", { enumerable: !0, get: function() {
        return t.AbortedDeferredError;
      } }), Object.defineProperty(e, "NavigationType", { enumerable: !0, get: function() {
        return t.Action;
      } }), Object.defineProperty(e, "createPath", { enumerable: !0, get: function() {
        return t.createPath;
      } }), Object.defineProperty(e, "defer", { enumerable: !0, get: function() {
        return t.defer;
      } }), Object.defineProperty(e, "generatePath", { enumerable: !0, get: function() {
        return t.generatePath;
      } }), Object.defineProperty(e, "isRouteErrorResponse", { enumerable: !0, get: function() {
        return t.isRouteErrorResponse;
      } }), Object.defineProperty(e, "json", { enumerable: !0, get: function() {
        return t.json;
      } }), Object.defineProperty(e, "matchPath", { enumerable: !0, get: function() {
        return t.matchPath;
      } }), Object.defineProperty(e, "matchRoutes", { enumerable: !0, get: function() {
        return t.matchRoutes;
      } }), Object.defineProperty(e, "parsePath", { enumerable: !0, get: function() {
        return t.parsePath;
      } }), Object.defineProperty(e, "redirect", { enumerable: !0, get: function() {
        return t.redirect;
      } }), Object.defineProperty(e, "resolvePath", { enumerable: !0, get: function() {
        return t.resolvePath;
      } }), e.Await = function(e2) {
        let { children: t2, errorElement: r2, resolve: n2 } = e2;
        return a.createElement(q, { resolve: n2, errorElement: r2 }, a.createElement(W, null, t2));
      }, e.MemoryRouter = function(e2) {
        let { basename: r2, children: n2, initialEntries: o2, initialIndex: i2 } = e2, u2 = a.useRef();
        u2.current == null && (u2.current = t.createMemoryHistory({ initialEntries: o2, initialIndex: i2, v5Compat: !0 }));
        let l2 = u2.current, [s3, c2] = a.useState({ action: l2.action, location: l2.location });
        return a.useLayoutEffect(() => l2.listen(c2), [l2]), a.createElement(H, { basename: r2, children: n2, location: s3.location, navigationType: s3.action, navigator: l2 });
      }, e.Navigate = function(e2) {
        let { to: r2, replace: n2, state: o2, relative: i2 } = e2;
        x() || t.UNSAFE_invariant(!1);
        let u2 = a.useContext(m), l2 = R();
        return a.useEffect(() => {
          u2 && u2.navigation.state !== "idle" || l2(r2, { replace: n2, state: o2, relative: i2 });
        }), null;
      }, e.Outlet = function(e2) {
        return S(e2.context);
      }, e.Route = I, e.Router = H, e.RouterProvider = function(e2) {
        let { fallbackElement: t2, router: r2 } = e2, n2 = h2(r2.subscribe, () => r2.state, () => r2.state), o2 = a.useMemo(() => ({ createHref: r2.createHref, encodeLocation: r2.encodeLocation, go: (e3) => r2.navigate(e3), push: (e3, t3, n3) => r2.navigate(e3, { state: t3, preventScrollReset: n3 == null ? void 0 : n3.preventScrollReset }), replace: (e3, t3, n3) => r2.navigate(e3, { replace: !0, state: t3, preventScrollReset: n3 == null ? void 0 : n3.preventScrollReset }) }), [r2]), i2 = r2.basename || "/";
        return a.createElement(a.Fragment, null, a.createElement(f.Provider, { value: { router: r2, navigator: o2, static: !1, basename: i2 } }, a.createElement(m.Provider, { value: n2 }, a.createElement(H, { basename: r2.basename, location: r2.state.location, navigationType: r2.state.historyAction, navigator: o2 }, r2.state.initialized ? a.createElement(J, null) : t2))), null);
      }, e.Routes = J, e.UNSAFE_DataRouterContext = f, e.UNSAFE_DataRouterStateContext = m, e.UNSAFE_LocationContext = E, e.UNSAFE_NavigationContext = g, e.UNSAFE_RouteContext = b, e.UNSAFE_enhanceManualRouteObjects = G, e.createMemoryRouter = function(e2, r2) {
        return t.createRouter({ basename: r2 == null ? void 0 : r2.basename, history: t.createMemoryHistory({ initialEntries: r2 == null ? void 0 : r2.initialEntries, initialIndex: r2 == null ? void 0 : r2.initialIndex }), hydrationData: r2 == null ? void 0 : r2.hydrationData, routes: G(e2) }).initialize();
      }, e.createRoutesFromChildren = Y, e.createRoutesFromElements = Y, e.renderMatches = function(e2) {
        return N(e2);
      }, e.unstable_useBlocker = function(e2) {
        let { router: t2 } = M(F.UseBlocker), [r2] = a.useState(() => String(++T)), n2 = a.useCallback((t3) => typeof e2 == "function" ? !!e2(t3) : !!e2, [e2]), o2 = t2.getBlocker(r2, n2);
        return a.useEffect(() => () => t2.deleteBlocker(r2), [t2, r2]), o2;
      }, e.useActionData = function() {
        let e2 = L(D.UseActionData);
        return a.useContext(b) || t.UNSAFE_invariant(!1), Object.values((e2 == null ? void 0 : e2.actionData) || {})[0];
      }, e.useAsyncError = function() {
        let e2 = a.useContext(v);
        return e2 == null ? void 0 : e2._error;
      }, e.useAsyncValue = w, e.useHref = function(e2, r2) {
        let { relative: n2 } = r2 === void 0 ? {} : r2;
        x() || t.UNSAFE_invariant(!1);
        let { basename: o2, navigator: i2 } = a.useContext(g), { hash: u2, pathname: l2, search: s3 } = U(e2, { relative: n2 }), c2 = l2;
        return o2 !== "/" && (c2 = l2 === "/" ? o2 : t.joinPaths([o2, l2])), i2.createHref({ pathname: c2, search: s3, hash: u2 });
      }, e.useInRouterContext = x, e.useLoaderData = function() {
        let e2 = L(D.UseLoaderData), t2 = k(D.UseLoaderData);
        if (!e2.errors || e2.errors[t2] == null)
          return e2.loaderData[t2];
        console.error("You cannot `useLoaderData` in an errorElement (routeId: " + t2 + ")");
      }, e.useLocation = P, e.useMatch = function(e2) {
        x() || t.UNSAFE_invariant(!1);
        let { pathname: r2 } = P();
        return a.useMemo(() => t.matchPath(e2, r2), [r2, e2]);
      }, e.useMatches = function() {
        let { matches: e2, loaderData: t2 } = L(D.UseMatches);
        return a.useMemo(() => e2.map((e3) => {
          let { pathname: r2, params: n2 } = e3;
          return { id: e3.route.id, pathname: r2, params: n2, data: t2[e3.route.id], handle: e3.route.handle };
        }), [e2, t2]);
      }, e.useNavigate = R, e.useNavigation = function() {
        return L(D.UseNavigation).navigation;
      }, e.useNavigationType = function() {
        return a.useContext(E).navigationType;
      }, e.useOutlet = S, e.useOutletContext = function() {
        return a.useContext(C);
      }, e.useParams = function() {
        let { matches: e2 } = a.useContext(b), t2 = e2[e2.length - 1];
        return t2 ? t2.params : {};
      }, e.useResolvedPath = U, e.useRevalidator = function() {
        let e2 = M(F.UseRevalidator), t2 = L(D.UseRevalidator);
        return { revalidate: e2.router.revalidate, state: t2.revalidation };
      }, e.useRouteError = B, e.useRouteLoaderData = function(e2) {
        return L(D.UseRouteLoaderData).loaderData[e2];
      }, e.useRoutes = _, Object.defineProperty(e, "__esModule", { value: !0 });
    });
  }
});

// node_modules/react-router/dist/main.js
var require_main = __commonJS({
  "node_modules/react-router/dist/main.js"(exports2, module2) {
    "use strict";
    module2.exports = require_react_router_production_min();
  }
});

// node_modules/react-router-dom/dist/umd/react-router-dom.production.min.js
var require_react_router_dom_production_min = __commonJS({
  "node_modules/react-router-dom/dist/umd/react-router-dom.production.min.js"(exports2, module2) {
    (function(e, t) {
      typeof exports2 == "object" && typeof module2 < "u" ? t(exports2, require_react(), require_main(), require_router_cjs()) : typeof define == "function" && define.amd ? define(["exports", "react", "react-router", "@remix-run/router"], t) : t((e = typeof globalThis < "u" ? globalThis : e || self).ReactRouterDOM = {}, e.React, e.ReactRouter, e.RemixRouter);
    })(exports2, function(e, t, r, n) {
      "use strict";
      function o(e2) {
        if (e2 && e2.__esModule)
          return e2;
        var t2 = /* @__PURE__ */ Object.create(null);
        return e2 && Object.keys(e2).forEach(function(r2) {
          if (r2 !== "default") {
            var n2 = Object.getOwnPropertyDescriptor(e2, r2);
            Object.defineProperty(t2, r2, n2.get ? n2 : { enumerable: !0, get: function() {
              return e2[r2];
            } });
          }
        }), t2.default = e2, Object.freeze(t2);
      }
      var a = o(t);
      function u() {
        return u = Object.assign ? Object.assign.bind() : function(e2) {
          for (var t2 = 1; t2 < arguments.length; t2++) {
            var r2 = arguments[t2];
            for (var n2 in r2)
              Object.prototype.hasOwnProperty.call(r2, n2) && (e2[n2] = r2[n2]);
          }
          return e2;
        }, u.apply(this, arguments);
      }
      function i(e2, t2) {
        if (e2 == null)
          return {};
        var r2, n2, o2 = {}, a2 = Object.keys(e2);
        for (n2 = 0; n2 < a2.length; n2++)
          r2 = a2[n2], t2.indexOf(r2) >= 0 || (o2[r2] = e2[r2]);
        return o2;
      }
      let c = "get", l = "application/x-www-form-urlencoded";
      function s2(e2) {
        return e2 != null && typeof e2.tagName == "string";
      }
      function f(e2) {
        return e2 === void 0 && (e2 = ""), new URLSearchParams(typeof e2 == "string" || Array.isArray(e2) || e2 instanceof URLSearchParams ? e2 : Object.keys(e2).reduce((t2, r2) => {
          let n2 = e2[r2];
          return t2.concat(Array.isArray(n2) ? n2.map((e3) => [r2, e3]) : [[r2, n2]]);
        }, []));
      }
      function d(e2, t2, r2) {
        let n2, o2, a2, u2;
        if (s2(i2 = e2) && i2.tagName.toLowerCase() === "form") {
          let i3 = r2.submissionTrigger;
          n2 = r2.method || e2.getAttribute("method") || c, o2 = r2.action || e2.getAttribute("action") || t2, a2 = r2.encType || e2.getAttribute("enctype") || l, u2 = new FormData(e2), i3 && i3.name && u2.append(i3.name, i3.value);
        } else if (function(e3) {
          return s2(e3) && e3.tagName.toLowerCase() === "button";
        }(e2) || function(e3) {
          return s2(e3) && e3.tagName.toLowerCase() === "input";
        }(e2) && (e2.type === "submit" || e2.type === "image")) {
          let i3 = e2.form;
          if (i3 == null)
            throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
          n2 = r2.method || e2.getAttribute("formmethod") || i3.getAttribute("method") || c, o2 = r2.action || e2.getAttribute("formaction") || i3.getAttribute("action") || t2, a2 = r2.encType || e2.getAttribute("formenctype") || i3.getAttribute("enctype") || l, u2 = new FormData(i3), e2.name && u2.append(e2.name, e2.value);
        } else {
          if (s2(e2))
            throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
          if (n2 = r2.method || c, o2 = r2.action || t2, a2 = r2.encType || l, e2 instanceof FormData)
            u2 = e2;
          else if (u2 = new FormData(), e2 instanceof URLSearchParams)
            for (let [t3, r3] of e2)
              u2.append(t3, r3);
          else if (e2 != null)
            for (let t3 of Object.keys(e2))
              u2.append(t3, e2[t3]);
        }
        var i2;
        let { protocol: f2, host: d2 } = window.location;
        return { url: new URL(o2, f2 + "//" + d2), method: n2.toLowerCase(), encType: a2, formData: u2 };
      }
      let m = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"], b = ["aria-current", "caseSensitive", "className", "end", "style", "to", "children"], p2 = ["reloadDocument", "replace", "method", "action", "onSubmit", "fetcherKey", "routeId", "relative", "preventScrollReset"];
      function h2() {
        var e2;
        let t2 = (e2 = window) == null ? void 0 : e2.__staticRouterHydrationData;
        return t2 && t2.errors && (t2 = u({}, t2, { errors: g(t2.errors) })), t2;
      }
      function g(e2) {
        if (!e2)
          return null;
        let t2 = Object.entries(e2), r2 = {};
        for (let [e3, o2] of t2)
          if (o2 && o2.__type === "RouteErrorResponse")
            r2[e3] = new n.ErrorResponse(o2.status, o2.statusText, o2.data, o2.internal === !0);
          else if (o2 && o2.__type === "Error") {
            let t3 = new Error(o2.message);
            t3.stack = "", r2[e3] = t3;
          } else
            r2[e3] = o2;
        return r2;
      }
      let y = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, v = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, R = a.forwardRef(function(e2, t2) {
        let o2, { onClick: c2, relative: l2, reloadDocument: s3, replace: f2, state: d2, target: b2, to: p3, preventScrollReset: h3 } = e2, g2 = i(e2, m), { basename: R2 } = a.useContext(r.UNSAFE_NavigationContext), w2 = !1;
        if (typeof p3 == "string" && v.test(p3) && (o2 = p3, y)) {
          let e3 = new URL(window.location.href), t3 = p3.startsWith("//") ? new URL(e3.protocol + p3) : new URL(p3), r2 = n.stripBasename(t3.pathname, R2);
          t3.origin === e3.origin && r2 != null ? p3 = r2 + t3.search + t3.hash : w2 = !0;
        }
        let P2 = r.useHref(p3, { relative: l2 }), S2 = N(p3, { replace: f2, state: d2, target: b2, preventScrollReset: h3, relative: l2 });
        return a.createElement("a", u({}, g2, { href: o2 || P2, onClick: w2 || s3 ? c2 : function(e3) {
          c2 && c2(e3), e3.defaultPrevented || S2(e3);
        }, ref: t2, target: b2 }));
      }), w = a.forwardRef(function(e2, t2) {
        let { "aria-current": n2 = "page", caseSensitive: o2 = !1, className: c2 = "", end: l2 = !1, style: s3, to: f2, children: d2 } = e2, m2 = i(e2, b), p3 = r.useResolvedPath(f2, { relative: m2.relative }), h3 = r.useLocation(), g2 = a.useContext(r.UNSAFE_DataRouterStateContext), { navigator: y2 } = a.useContext(r.UNSAFE_NavigationContext), v2 = y2.encodeLocation ? y2.encodeLocation(p3).pathname : p3.pathname, w2 = h3.pathname, P2 = g2 && g2.navigation && g2.navigation.location ? g2.navigation.location.pathname : null;
        o2 || (w2 = w2.toLowerCase(), P2 = P2 ? P2.toLowerCase() : null, v2 = v2.toLowerCase());
        let S2, E2 = w2 === v2 || !l2 && w2.startsWith(v2) && w2.charAt(v2.length) === "/", O2 = P2 != null && (P2 === v2 || !l2 && P2.startsWith(v2) && P2.charAt(v2.length) === "/"), j2 = E2 ? n2 : void 0;
        S2 = typeof c2 == "function" ? c2({ isActive: E2, isPending: O2 }) : [c2, E2 ? "active" : null, O2 ? "pending" : null].filter(Boolean).join(" ");
        let A2 = typeof s3 == "function" ? s3({ isActive: E2, isPending: O2 }) : s3;
        return a.createElement(R, u({}, m2, { "aria-current": j2, className: S2, ref: t2, style: A2, to: f2 }), typeof d2 == "function" ? d2({ isActive: E2, isPending: O2 }) : d2);
      }), P = a.forwardRef((e2, t2) => a.createElement(S, u({}, e2, { ref: t2 }))), S = a.forwardRef((e2, t2) => {
        let { reloadDocument: r2, replace: n2, method: o2 = c, action: l2, onSubmit: s3, fetcherKey: f2, routeId: d2, relative: m2, preventScrollReset: b2 } = e2, h3 = i(e2, p2), g2 = F(f2, d2), y2 = o2.toLowerCase() === "get" ? "get" : "post", v2 = C(l2, { relative: m2 });
        return a.createElement("form", u({ ref: t2, method: y2, action: v2, onSubmit: r2 ? s3 : (e3) => {
          if (s3 && s3(e3), e3.defaultPrevented)
            return;
          e3.preventDefault();
          let t3 = e3.nativeEvent.submitter, r3 = (t3 == null ? void 0 : t3.getAttribute("formmethod")) || o2;
          g2(t3 || e3.currentTarget, { method: r3, replace: n2, relative: m2, preventScrollReset: b2 });
        } }, h3));
      });
      var E, O;
      function j(e2) {
        let t2 = a.useContext(r.UNSAFE_DataRouterContext);
        return t2 || n.UNSAFE_invariant(!1), t2;
      }
      function A(e2) {
        let t2 = a.useContext(r.UNSAFE_DataRouterStateContext);
        return t2 || n.UNSAFE_invariant(!1), t2;
      }
      function N(e2, t2) {
        let { target: n2, replace: o2, state: u2, preventScrollReset: i2, relative: c2 } = t2 === void 0 ? {} : t2, l2 = r.useNavigate(), s3 = r.useLocation(), f2 = r.useResolvedPath(e2, { relative: c2 });
        return a.useCallback((t3) => {
          if (function(e3, t4) {
            return !(e3.button !== 0 || t4 && t4 !== "_self" || function(e4) {
              return !!(e4.metaKey || e4.altKey || e4.ctrlKey || e4.shiftKey);
            }(e3));
          }(t3, n2)) {
            t3.preventDefault();
            let n3 = o2 !== void 0 ? o2 : r.createPath(s3) === r.createPath(f2);
            l2(e2, { replace: n3, state: u2, preventScrollReset: i2, relative: c2 });
          }
        }, [s3, l2, f2, o2, u2, n2, e2, i2, c2]);
      }
      function F(e2, t2) {
        let { router: r2 } = j(E.UseSubmitImpl), o2 = C();
        return a.useCallback(function(a2, u2) {
          if (u2 === void 0 && (u2 = {}), typeof document > "u")
            throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
          let { method: i2, encType: c2, formData: l2, url: s3 } = d(a2, o2, u2), f2 = s3.pathname + s3.search, m2 = { replace: u2.replace, preventScrollReset: u2.preventScrollReset, formData: l2, formMethod: i2, formEncType: c2 };
          e2 ? (t2 == null && n.UNSAFE_invariant(!1), r2.fetch(e2, t2, f2, m2)) : r2.navigate(f2, m2);
        }, [o2, r2, e2, t2]);
      }
      function C(e2, t2) {
        let { relative: o2 } = t2 === void 0 ? {} : t2, { basename: i2 } = a.useContext(r.UNSAFE_NavigationContext), c2 = a.useContext(r.UNSAFE_RouteContext);
        c2 || n.UNSAFE_invariant(!1);
        let [l2] = c2.matches.slice(-1), s3 = u({}, r.useResolvedPath(e2 || ".", { relative: o2 })), f2 = r.useLocation();
        if (e2 == null && (s3.search = f2.search, s3.hash = f2.hash, l2.route.index)) {
          let e3 = new URLSearchParams(s3.search);
          e3.delete("index"), s3.search = e3.toString() ? "?" + e3.toString() : "";
        }
        return e2 && e2 !== "." || !l2.route.index || (s3.search = s3.search ? s3.search.replace(/^\?/, "?index&") : "?index"), i2 !== "/" && (s3.pathname = s3.pathname === "/" ? i2 : n.joinPaths([i2, s3.pathname])), r.createPath(s3);
      }
      (function(e2) {
        e2.UseScrollRestoration = "useScrollRestoration", e2.UseSubmitImpl = "useSubmitImpl", e2.UseFetcher = "useFetcher";
      })(E || (E = {})), function(e2) {
        e2.UseFetchers = "useFetchers", e2.UseScrollRestoration = "useScrollRestoration";
      }(O || (O = {}));
      let U = 0, _ = "react-router-scroll-positions", x = {};
      function L(e2) {
        let { getKey: t2, storageKey: n2 } = e2 === void 0 ? {} : e2, { router: o2 } = j(E.UseScrollRestoration), { restoreScrollPosition: u2, preventScrollReset: i2 } = A(O.UseScrollRestoration), c2 = r.useLocation(), l2 = r.useMatches(), s3 = r.useNavigation();
        a.useEffect(() => (window.history.scrollRestoration = "manual", () => {
          window.history.scrollRestoration = "auto";
        }), []), function(e3, t3) {
          let { capture: r2 } = t3 || {};
          a.useEffect(() => {
            let t4 = r2 != null ? { capture: r2 } : void 0;
            return window.addEventListener("pagehide", e3, t4), () => {
              window.removeEventListener("pagehide", e3, t4);
            };
          }, [e3, r2]);
        }(a.useCallback(() => {
          if (s3.state === "idle") {
            let e3 = (t2 ? t2(c2, l2) : null) || c2.key;
            x[e3] = window.scrollY;
          }
          sessionStorage.setItem(n2 || _, JSON.stringify(x)), window.history.scrollRestoration = "auto";
        }, [n2, t2, s3.state, c2, l2])), typeof document < "u" && (a.useLayoutEffect(() => {
          try {
            let e3 = sessionStorage.getItem(n2 || _);
            e3 && (x = JSON.parse(e3));
          } catch {
          }
        }, [n2]), a.useLayoutEffect(() => {
          let e3 = o2 == null ? void 0 : o2.enableScrollRestoration(x, () => window.scrollY, t2);
          return () => e3 && e3();
        }, [o2, t2]), a.useLayoutEffect(() => {
          if (u2 !== !1)
            if (typeof u2 != "number") {
              if (c2.hash) {
                let e3 = document.getElementById(c2.hash.slice(1));
                if (e3)
                  return void e3.scrollIntoView();
              }
              i2 !== !0 && window.scrollTo(0, 0);
            } else
              window.scrollTo(0, u2);
        }, [c2, u2, i2]));
      }
      Object.defineProperty(e, "AbortedDeferredError", { enumerable: !0, get: function() {
        return r.AbortedDeferredError;
      } }), Object.defineProperty(e, "Await", { enumerable: !0, get: function() {
        return r.Await;
      } }), Object.defineProperty(e, "MemoryRouter", { enumerable: !0, get: function() {
        return r.MemoryRouter;
      } }), Object.defineProperty(e, "Navigate", { enumerable: !0, get: function() {
        return r.Navigate;
      } }), Object.defineProperty(e, "NavigationType", { enumerable: !0, get: function() {
        return r.NavigationType;
      } }), Object.defineProperty(e, "Outlet", { enumerable: !0, get: function() {
        return r.Outlet;
      } }), Object.defineProperty(e, "Route", { enumerable: !0, get: function() {
        return r.Route;
      } }), Object.defineProperty(e, "Router", { enumerable: !0, get: function() {
        return r.Router;
      } }), Object.defineProperty(e, "RouterProvider", { enumerable: !0, get: function() {
        return r.RouterProvider;
      } }), Object.defineProperty(e, "Routes", { enumerable: !0, get: function() {
        return r.Routes;
      } }), Object.defineProperty(e, "UNSAFE_DataRouterContext", { enumerable: !0, get: function() {
        return r.UNSAFE_DataRouterContext;
      } }), Object.defineProperty(e, "UNSAFE_DataRouterStateContext", { enumerable: !0, get: function() {
        return r.UNSAFE_DataRouterStateContext;
      } }), Object.defineProperty(e, "UNSAFE_LocationContext", { enumerable: !0, get: function() {
        return r.UNSAFE_LocationContext;
      } }), Object.defineProperty(e, "UNSAFE_NavigationContext", { enumerable: !0, get: function() {
        return r.UNSAFE_NavigationContext;
      } }), Object.defineProperty(e, "UNSAFE_RouteContext", { enumerable: !0, get: function() {
        return r.UNSAFE_RouteContext;
      } }), Object.defineProperty(e, "UNSAFE_enhanceManualRouteObjects", { enumerable: !0, get: function() {
        return r.UNSAFE_enhanceManualRouteObjects;
      } }), Object.defineProperty(e, "createMemoryRouter", { enumerable: !0, get: function() {
        return r.createMemoryRouter;
      } }), Object.defineProperty(e, "createPath", { enumerable: !0, get: function() {
        return r.createPath;
      } }), Object.defineProperty(e, "createRoutesFromChildren", { enumerable: !0, get: function() {
        return r.createRoutesFromChildren;
      } }), Object.defineProperty(e, "createRoutesFromElements", { enumerable: !0, get: function() {
        return r.createRoutesFromElements;
      } }), Object.defineProperty(e, "defer", { enumerable: !0, get: function() {
        return r.defer;
      } }), Object.defineProperty(e, "generatePath", { enumerable: !0, get: function() {
        return r.generatePath;
      } }), Object.defineProperty(e, "isRouteErrorResponse", { enumerable: !0, get: function() {
        return r.isRouteErrorResponse;
      } }), Object.defineProperty(e, "json", { enumerable: !0, get: function() {
        return r.json;
      } }), Object.defineProperty(e, "matchPath", { enumerable: !0, get: function() {
        return r.matchPath;
      } }), Object.defineProperty(e, "matchRoutes", { enumerable: !0, get: function() {
        return r.matchRoutes;
      } }), Object.defineProperty(e, "parsePath", { enumerable: !0, get: function() {
        return r.parsePath;
      } }), Object.defineProperty(e, "redirect", { enumerable: !0, get: function() {
        return r.redirect;
      } }), Object.defineProperty(e, "renderMatches", { enumerable: !0, get: function() {
        return r.renderMatches;
      } }), Object.defineProperty(e, "resolvePath", { enumerable: !0, get: function() {
        return r.resolvePath;
      } }), Object.defineProperty(e, "unstable_useBlocker", { enumerable: !0, get: function() {
        return r.unstable_useBlocker;
      } }), Object.defineProperty(e, "useActionData", { enumerable: !0, get: function() {
        return r.useActionData;
      } }), Object.defineProperty(e, "useAsyncError", { enumerable: !0, get: function() {
        return r.useAsyncError;
      } }), Object.defineProperty(e, "useAsyncValue", { enumerable: !0, get: function() {
        return r.useAsyncValue;
      } }), Object.defineProperty(e, "useHref", { enumerable: !0, get: function() {
        return r.useHref;
      } }), Object.defineProperty(e, "useInRouterContext", { enumerable: !0, get: function() {
        return r.useInRouterContext;
      } }), Object.defineProperty(e, "useLoaderData", { enumerable: !0, get: function() {
        return r.useLoaderData;
      } }), Object.defineProperty(e, "useLocation", { enumerable: !0, get: function() {
        return r.useLocation;
      } }), Object.defineProperty(e, "useMatch", { enumerable: !0, get: function() {
        return r.useMatch;
      } }), Object.defineProperty(e, "useMatches", { enumerable: !0, get: function() {
        return r.useMatches;
      } }), Object.defineProperty(e, "useNavigate", { enumerable: !0, get: function() {
        return r.useNavigate;
      } }), Object.defineProperty(e, "useNavigation", { enumerable: !0, get: function() {
        return r.useNavigation;
      } }), Object.defineProperty(e, "useNavigationType", { enumerable: !0, get: function() {
        return r.useNavigationType;
      } }), Object.defineProperty(e, "useOutlet", { enumerable: !0, get: function() {
        return r.useOutlet;
      } }), Object.defineProperty(e, "useOutletContext", { enumerable: !0, get: function() {
        return r.useOutletContext;
      } }), Object.defineProperty(e, "useParams", { enumerable: !0, get: function() {
        return r.useParams;
      } }), Object.defineProperty(e, "useResolvedPath", { enumerable: !0, get: function() {
        return r.useResolvedPath;
      } }), Object.defineProperty(e, "useRevalidator", { enumerable: !0, get: function() {
        return r.useRevalidator;
      } }), Object.defineProperty(e, "useRouteError", { enumerable: !0, get: function() {
        return r.useRouteError;
      } }), Object.defineProperty(e, "useRouteLoaderData", { enumerable: !0, get: function() {
        return r.useRouteLoaderData;
      } }), Object.defineProperty(e, "useRoutes", { enumerable: !0, get: function() {
        return r.useRoutes;
      } }), e.BrowserRouter = function(e2) {
        let { basename: t2, children: o2, window: u2 } = e2, i2 = a.useRef();
        i2.current == null && (i2.current = n.createBrowserHistory({ window: u2, v5Compat: !0 }));
        let c2 = i2.current, [l2, s3] = a.useState({ action: c2.action, location: c2.location });
        return a.useLayoutEffect(() => c2.listen(s3), [c2]), a.createElement(r.Router, { basename: t2, children: o2, location: l2.location, navigationType: l2.action, navigator: c2 });
      }, e.Form = P, e.HashRouter = function(e2) {
        let { basename: t2, children: o2, window: u2 } = e2, i2 = a.useRef();
        i2.current == null && (i2.current = n.createHashHistory({ window: u2, v5Compat: !0 }));
        let c2 = i2.current, [l2, s3] = a.useState({ action: c2.action, location: c2.location });
        return a.useLayoutEffect(() => c2.listen(s3), [c2]), a.createElement(r.Router, { basename: t2, children: o2, location: l2.location, navigationType: l2.action, navigator: c2 });
      }, e.Link = R, e.NavLink = w, e.ScrollRestoration = function(e2) {
        let { getKey: t2, storageKey: r2 } = e2;
        return L({ getKey: t2, storageKey: r2 }), null;
      }, e.UNSAFE_useScrollRestoration = L, e.createBrowserRouter = function(e2, t2) {
        return n.createRouter({ basename: t2 == null ? void 0 : t2.basename, history: n.createBrowserHistory({ window: t2 == null ? void 0 : t2.window }), hydrationData: (t2 == null ? void 0 : t2.hydrationData) || h2(), routes: r.UNSAFE_enhanceManualRouteObjects(e2) }).initialize();
      }, e.createHashRouter = function(e2, t2) {
        return n.createRouter({ basename: t2 == null ? void 0 : t2.basename, history: n.createHashHistory({ window: t2 == null ? void 0 : t2.window }), hydrationData: (t2 == null ? void 0 : t2.hydrationData) || h2(), routes: r.UNSAFE_enhanceManualRouteObjects(e2) }).initialize();
      }, e.createSearchParams = f, e.unstable_HistoryRouter = function(e2) {
        let { basename: t2, children: n2, history: o2 } = e2, [u2, i2] = a.useState({ action: o2.action, location: o2.location });
        return a.useLayoutEffect(() => o2.listen(i2), [o2]), a.createElement(r.Router, { basename: t2, children: n2, location: u2.location, navigationType: u2.action, navigator: o2 });
      }, e.unstable_usePrompt = function(e2) {
        let { when: t2, message: n2 } = e2, o2 = r.unstable_useBlocker(t2);
        a.useEffect(() => {
          o2.state !== "blocked" || t2 || o2.reset();
        }, [o2, t2]), a.useEffect(() => {
          o2.state === "blocked" && (window.confirm(n2) ? setTimeout(o2.proceed, 0) : o2.reset());
        }, [o2, n2]);
      }, e.useBeforeUnload = function(e2, t2) {
        let { capture: r2 } = t2 || {};
        a.useEffect(() => {
          let t3 = r2 != null ? { capture: r2 } : void 0;
          return window.addEventListener("beforeunload", e2, t3), () => {
            window.removeEventListener("beforeunload", e2, t3);
          };
        }, [e2, r2]);
      }, e.useFetcher = function() {
        var e2;
        let { router: t2 } = j(E.UseFetcher), o2 = a.useContext(r.UNSAFE_RouteContext);
        o2 || n.UNSAFE_invariant(!1);
        let i2 = (e2 = o2.matches[o2.matches.length - 1]) == null ? void 0 : e2.route.id;
        i2 == null && n.UNSAFE_invariant(!1);
        let [c2] = a.useState(() => String(++U)), [l2] = a.useState(() => (i2 || n.UNSAFE_invariant(!1), function(e3, t3) {
          return a.forwardRef((r2, n2) => a.createElement(S, u({}, r2, { ref: n2, fetcherKey: e3, routeId: t3 })));
        }(c2, i2))), [s3] = a.useState(() => (e3) => {
          t2 || n.UNSAFE_invariant(!1), i2 || n.UNSAFE_invariant(!1), t2.fetch(c2, i2, e3);
        }), f2 = F(c2, i2), d2 = t2.getFetcher(c2), m2 = a.useMemo(() => u({ Form: l2, submit: f2, load: s3 }, d2), [d2, l2, f2, s3]);
        return a.useEffect(() => () => {
          t2 ? t2.deleteFetcher(c2) : console.warn("No fetcher available to clean up from useFetcher()");
        }, [t2, c2]), m2;
      }, e.useFetchers = function() {
        return [...A(O.UseFetchers).fetchers.values()];
      }, e.useFormAction = C, e.useLinkClickHandler = N, e.useSearchParams = function(e2) {
        let t2 = a.useRef(f(e2)), n2 = a.useRef(!1), o2 = r.useLocation(), u2 = a.useMemo(() => function(e3, t3) {
          let r2 = f(e3);
          if (t3)
            for (let e4 of t3.keys())
              r2.has(e4) || t3.getAll(e4).forEach((t4) => {
                r2.append(e4, t4);
              });
          return r2;
        }(o2.search, n2.current ? null : t2.current), [o2.search]), i2 = r.useNavigate(), c2 = a.useCallback((e3, t3) => {
          let r2 = f(typeof e3 == "function" ? e3(u2) : e3);
          n2.current = !0, i2("?" + r2, t3);
        }, [i2, u2]);
        return [u2, c2];
      }, e.useSubmit = function() {
        return F();
      }, Object.defineProperty(e, "__esModule", { value: !0 });
    });
  }
});

// node_modules/react-router-dom/dist/main.js
var require_main2 = __commonJS({
  "node_modules/react-router-dom/dist/main.js"(exports2, module2) {
    "use strict";
    module2.exports = require_react_router_dom_production_min();
  }
});

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js
var require_use_sync_external_store_shim_production_min = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js"(exports2) {
    "use strict";
    var e = require_react();
    function h2(a, b) {
      return a === b && (a !== 0 || 1 / a === 1 / b) || a !== a && b !== b;
    }
    var k = typeof Object.is == "function" ? Object.is : h2, l = e.useState, m = e.useEffect, n = e.useLayoutEffect, p2 = e.useDebugValue;
    function q(a, b) {
      var d = b(), f = l({ inst: { value: d, getSnapshot: b } }), c = f[0].inst, g = f[1];
      return n(function() {
        c.value = d, c.getSnapshot = b, r(c) && g({ inst: c });
      }, [a, d, b]), m(function() {
        return r(c) && g({ inst: c }), a(function() {
          r(c) && g({ inst: c });
        });
      }, [a]), p2(d), d;
    }
    function r(a) {
      var b = a.getSnapshot;
      a = a.value;
      try {
        var d = b();
        return !k(a, d);
      } catch {
        return !0;
      }
    }
    function t(a, b) {
      return b();
    }
    var u = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? t : q;
    exports2.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : u;
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports2, module2) {
    "use strict";
    module2.exports = require_use_sync_external_store_shim_production_min();
  }
});

// node_modules/@remix-run/react/dist/_virtual/_rollupPluginBabelHelpers.js
var require_rollupPluginBabelHelpers = __commonJS({
  "node_modules/@remix-run/react/dist/_virtual/_rollupPluginBabelHelpers.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function _extends() {
      return _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key2 in source)
            Object.prototype.hasOwnProperty.call(source, key2) && (target[key2] = source[key2]);
        }
        return target;
      }, _extends.apply(this, arguments);
    }
    exports2.extends = _extends;
  }
});

// node_modules/@remix-run/react/dist/errorBoundaries.js
var require_errorBoundaries = __commonJS({
  "node_modules/@remix-run/react/dist/errorBoundaries.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var React = require_react(), reactRouterDom = require_main2();
    function _interopDefaultLegacy(e) {
      return e && typeof e == "object" && "default" in e ? e : { default: e };
    }
    var React__default = /* @__PURE__ */ _interopDefaultLegacy(React), RemixErrorBoundary = class extends React__default.default.Component {
      constructor(props) {
        super(props), this.state = {
          error: props.error || null,
          location: props.location
        };
      }
      static getDerivedStateFromError(error) {
        return {
          error
        };
      }
      static getDerivedStateFromProps(props, state) {
        return state.location !== props.location ? {
          error: props.error || null,
          location: props.location
        } : {
          error: props.error || state.error,
          location: state.location
        };
      }
      render() {
        return this.state.error ? /* @__PURE__ */ React__default.default.createElement(this.props.component, {
          error: this.state.error
        }) : this.props.children;
      }
    };
    function RemixRootDefaultErrorBoundary({
      error
    }) {
      return console.error(error), /* @__PURE__ */ React__default.default.createElement("html", {
        lang: "en"
      }, /* @__PURE__ */ React__default.default.createElement("head", null, /* @__PURE__ */ React__default.default.createElement("meta", {
        charSet: "utf-8"
      }), /* @__PURE__ */ React__default.default.createElement("meta", {
        name: "viewport",
        content: "width=device-width,initial-scale=1,viewport-fit=cover"
      }), /* @__PURE__ */ React__default.default.createElement("title", null, "Application Error!")), /* @__PURE__ */ React__default.default.createElement("body", null, /* @__PURE__ */ React__default.default.createElement("main", {
        style: {
          fontFamily: "system-ui, sans-serif",
          padding: "2rem"
        }
      }, /* @__PURE__ */ React__default.default.createElement("h1", {
        style: {
          fontSize: "24px"
        }
      }, "Application Error"), /* @__PURE__ */ React__default.default.createElement("pre", {
        style: {
          padding: "2rem",
          background: "hsla(10, 50%, 50%, 0.1)",
          color: "red",
          overflow: "auto"
        }
      }, error.stack)), /* @__PURE__ */ React__default.default.createElement("script", {
        dangerouslySetInnerHTML: {
          __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
              );
            `
        }
      })));
    }
    function V2_RemixRootDefaultErrorBoundary() {
      let error = reactRouterDom.useRouteError();
      if (reactRouterDom.isRouteErrorResponse(error))
        return /* @__PURE__ */ React__default.default.createElement(RemixRootDefaultCatchBoundaryImpl, {
          caught: error
        });
      if (error instanceof Error)
        return /* @__PURE__ */ React__default.default.createElement(RemixRootDefaultErrorBoundary, {
          error
        });
      {
        let errorString = error == null ? "Unknown Error" : typeof error == "object" && "toString" in error ? error.toString() : JSON.stringify(error);
        return /* @__PURE__ */ React__default.default.createElement(RemixRootDefaultErrorBoundary, {
          error: new Error(errorString)
        });
      }
    }
    var RemixCatchContext = /* @__PURE__ */ React__default.default.createContext(void 0);
    function useCatch() {
      return React.useContext(RemixCatchContext);
    }
    function RemixCatchBoundary({
      catch: catchVal,
      component: Component,
      children
    }) {
      return catchVal ? /* @__PURE__ */ React__default.default.createElement(RemixCatchContext.Provider, {
        value: catchVal
      }, /* @__PURE__ */ React__default.default.createElement(Component, null)) : /* @__PURE__ */ React__default.default.createElement(React__default.default.Fragment, null, children);
    }
    function RemixRootDefaultCatchBoundary() {
      let caught = useCatch();
      return /* @__PURE__ */ React__default.default.createElement(RemixRootDefaultCatchBoundaryImpl, {
        caught
      });
    }
    function RemixRootDefaultCatchBoundaryImpl({
      caught
    }) {
      return /* @__PURE__ */ React__default.default.createElement("html", {
        lang: "en"
      }, /* @__PURE__ */ React__default.default.createElement("head", null, /* @__PURE__ */ React__default.default.createElement("meta", {
        charSet: "utf-8"
      }), /* @__PURE__ */ React__default.default.createElement("meta", {
        name: "viewport",
        content: "width=device-width,initial-scale=1,viewport-fit=cover"
      }), /* @__PURE__ */ React__default.default.createElement("title", null, "Unhandled Thrown Response!")), /* @__PURE__ */ React__default.default.createElement("body", null, /* @__PURE__ */ React__default.default.createElement("h1", {
        style: {
          fontFamily: "system-ui, sans-serif",
          padding: "2rem"
        }
      }, caught.status, " ", caught.statusText), /* @__PURE__ */ React__default.default.createElement("script", {
        dangerouslySetInnerHTML: {
          __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws 404s (and other responses). Check out https://remix.run/guides/not-found for more information."
              );
            `
        }
      })));
    }
    exports2.RemixCatchBoundary = RemixCatchBoundary;
    exports2.RemixErrorBoundary = RemixErrorBoundary;
    exports2.RemixRootDefaultCatchBoundary = RemixRootDefaultCatchBoundary;
    exports2.RemixRootDefaultErrorBoundary = RemixRootDefaultErrorBoundary;
    exports2.V2_RemixRootDefaultErrorBoundary = V2_RemixRootDefaultErrorBoundary;
    exports2.useCatch = useCatch;
  }
});

// node_modules/@remix-run/react/dist/invariant.js
var require_invariant = __commonJS({
  "node_modules/@remix-run/react/dist/invariant.js"(exports2, module2) {
    "use strict";
    function invariant(value, message) {
      if (value === !1 || value === null || typeof value > "u")
        throw new Error(message);
    }
    module2.exports = invariant;
  }
});

// node_modules/@remix-run/react/dist/routeModules.js
var require_routeModules = __commonJS({
  "node_modules/@remix-run/react/dist/routeModules.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    async function loadRouteModule(route, routeModulesCache) {
      if (route.id in routeModulesCache)
        return routeModulesCache[route.id];
      try {
        let routeModule = await function(t) {
          return Promise.resolve().then(function() {
            return /* @__PURE__ */ _interopNamespace(require(t));
          });
        }(route.module);
        return routeModulesCache[route.id] = routeModule, routeModule;
      } catch {
        return window.location.reload(), new Promise(() => {
        });
      }
    }
    exports2.loadRouteModule = loadRouteModule;
  }
});

// node_modules/@remix-run/react/dist/links.js
var require_links = __commonJS({
  "node_modules/@remix-run/react/dist/links.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var reactRouterDom = require_main2(), routeModules = require_routeModules();
    function getLinksForMatches(matches, routeModules2, manifest) {
      let descriptors = matches.map((match) => {
        var _module$links;
        let module3 = routeModules2[match.route.id];
        return ((_module$links = module3.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module3)) || [];
      }).flat(1), preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
      return dedupe(descriptors, preloads);
    }
    async function prefetchStyleLinks(routeModule) {
      if (!routeModule.links)
        return;
      let descriptors = routeModule.links();
      if (!descriptors)
        return;
      let styleLinks = [];
      for (let descriptor of descriptors)
        !isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet" && styleLinks.push({
          ...descriptor,
          rel: "preload",
          as: "style"
        });
      let matchingLinks = styleLinks.filter((link2) => !link2.media || window.matchMedia(link2.media).matches);
      await Promise.all(matchingLinks.map(prefetchStyleLink));
    }
    async function prefetchStyleLink(descriptor) {
      return new Promise((resolve) => {
        let link2 = document.createElement("link");
        Object.assign(link2, descriptor);
        function removeLink() {
          document.head.contains(link2) && document.head.removeChild(link2);
        }
        link2.onload = () => {
          removeLink(), resolve();
        }, link2.onerror = () => {
          removeLink(), resolve();
        }, document.head.appendChild(link2);
      });
    }
    function isPageLinkDescriptor(object) {
      return object != null && typeof object.page == "string";
    }
    function isHtmlLinkDescriptor(object) {
      return object == null ? !1 : object.href == null ? object.rel === "preload" && (typeof object.imageSrcSet == "string" || typeof object.imagesrcset == "string") && (typeof object.imageSizes == "string" || typeof object.imagesizes == "string") : typeof object.rel == "string" && typeof object.href == "string";
    }
    async function getStylesheetPrefetchLinks(matches, manifest, routeModules$1) {
      return (await Promise.all(matches.map(async (match) => {
        let mod = await routeModules.loadRouteModule(manifest.routes[match.route.id], routeModules$1);
        return mod.links ? mod.links() : [];
      }))).flat(1).filter(isHtmlLinkDescriptor).filter((link2) => link2.rel === "stylesheet" || link2.rel === "preload").map((link2) => link2.rel === "preload" ? {
        ...link2,
        rel: "prefetch"
      } : {
        ...link2,
        rel: "prefetch",
        as: "style"
      });
    }
    function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location2, mode) {
      let path6 = parsePathPatch(page), isNew = (match, index2) => currentMatches[index2] ? match.route.id !== currentMatches[index2].route.id : !0, matchPathChanged = (match, index2) => {
        var _currentMatches$index;
        return currentMatches[index2].pathname !== match.pathname || ((_currentMatches$index = currentMatches[index2].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith("*")) && currentMatches[index2].params["*"] !== match.params["*"];
      };
      return mode === "data" && location2.search !== path6.search ? nextMatches.filter((match, index2) => {
        if (!manifest.routes[match.route.id].hasLoader)
          return !1;
        if (isNew(match, index2) || matchPathChanged(match, index2))
          return !0;
        if (match.route.shouldRevalidate) {
          var _currentMatches$;
          let routeChoice = match.route.shouldRevalidate({
            currentUrl: new URL(location2.pathname + location2.search + location2.hash, window.origin),
            currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},
            nextUrl: new URL(page, window.origin),
            nextParams: match.params,
            defaultShouldRevalidate: !0
          });
          if (typeof routeChoice == "boolean")
            return routeChoice;
        }
        return !0;
      }) : nextMatches.filter((match, index2) => {
        let manifestRoute = manifest.routes[match.route.id];
        return (mode === "assets" || manifestRoute.hasLoader) && (isNew(match, index2) || matchPathChanged(match, index2));
      });
    }
    function getDataLinkHrefs(page, matches, manifest) {
      let path6 = parsePathPatch(page);
      return dedupeHrefs(matches.filter((match) => manifest.routes[match.route.id].hasLoader).map((match) => {
        let {
          pathname,
          search: search3
        } = path6, searchParams = new URLSearchParams(search3);
        return searchParams.set("_data", match.route.id), `${pathname}?${searchParams}`;
      }));
    }
    function getModuleLinkHrefs(matches, manifestPatch) {
      return dedupeHrefs(matches.map((match) => {
        let route = manifestPatch.routes[match.route.id], hrefs = [route.module];
        return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
      }).flat(1));
    }
    function getCurrentPageModulePreloadHrefs(matches, manifest) {
      return dedupeHrefs(matches.map((match) => {
        let route = manifest.routes[match.route.id], hrefs = [route.module];
        return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
      }).flat(1));
    }
    function dedupeHrefs(hrefs) {
      return [...new Set(hrefs)];
    }
    function dedupe(descriptors, preloads) {
      let set = /* @__PURE__ */ new Set(), preloadsSet = new Set(preloads);
      return descriptors.reduce((deduped, descriptor) => {
        if (!isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href))
          return deduped;
        let str2 = JSON.stringify(descriptor);
        return set.has(str2) || (set.add(str2), deduped.push(descriptor)), deduped;
      }, []);
    }
    function parsePathPatch(href) {
      let path6 = reactRouterDom.parsePath(href);
      return path6.search === void 0 && (path6.search = ""), path6;
    }
    exports2.dedupe = dedupe;
    exports2.getDataLinkHrefs = getDataLinkHrefs;
    exports2.getLinksForMatches = getLinksForMatches;
    exports2.getModuleLinkHrefs = getModuleLinkHrefs;
    exports2.getNewMatchesForLinks = getNewMatchesForLinks;
    exports2.getStylesheetPrefetchLinks = getStylesheetPrefetchLinks;
    exports2.isHtmlLinkDescriptor = isHtmlLinkDescriptor;
    exports2.isPageLinkDescriptor = isPageLinkDescriptor;
    exports2.prefetchStyleLinks = prefetchStyleLinks;
  }
});

// node_modules/@remix-run/react/dist/markup.js
var require_markup = __commonJS({
  "node_modules/@remix-run/react/dist/markup.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var ESCAPE_LOOKUP = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
    function escapeHtml(html6) {
      return html6.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
    }
    function createHtml(html6) {
      return {
        __html: html6
      };
    }
    exports2.createHtml = createHtml;
    exports2.escapeHtml = escapeHtml;
  }
});

// node_modules/@remix-run/react/dist/transition.js
var require_transition = __commonJS({
  "node_modules/@remix-run/react/dist/transition.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var IDLE_TRANSITION = {
      state: "idle",
      submission: void 0,
      location: void 0,
      type: "idle"
    }, IDLE_FETCHER = {
      state: "idle",
      type: "init",
      data: void 0,
      formMethod: void 0,
      formAction: void 0,
      formData: void 0,
      formEncType: void 0,
      submission: void 0
    };
    exports2.IDLE_FETCHER = IDLE_FETCHER;
    exports2.IDLE_TRANSITION = IDLE_TRANSITION;
  }
});

// node_modules/@remix-run/react/dist/warnings.js
var require_warnings = __commonJS({
  "node_modules/@remix-run/react/dist/warnings.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var alreadyWarned = {};
    function warnOnce(condition, message) {
      !condition && !alreadyWarned[message] && (alreadyWarned[message] = !0, console.warn(message));
    }
    exports2.warnOnce = warnOnce;
  }
});

// node_modules/@remix-run/react/dist/components.js
var require_components = __commonJS({
  "node_modules/@remix-run/react/dist/components.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var _rollupPluginBabelHelpers = require_rollupPluginBabelHelpers(), React = require_react(), reactRouterDom = require_main2(), errorBoundaries = require_errorBoundaries(), invariant = require_invariant(), links2 = require_links(), markup = require_markup(), transition = require_transition(), warnings = require_warnings();
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    function useDataRouterContext() {
      let context = React__namespace.useContext(reactRouterDom.UNSAFE_DataRouterContext);
      return invariant(context, "You must render this element inside a <DataRouterContext.Provider> element"), context;
    }
    function useDataRouterStateContext() {
      let context = React__namespace.useContext(reactRouterDom.UNSAFE_DataRouterStateContext);
      return invariant(context, "You must render this element inside a <DataRouterStateContext.Provider> element"), context;
    }
    var RemixContext = /* @__PURE__ */ React__namespace.createContext(void 0);
    RemixContext.displayName = "Remix";
    function useRemixContext() {
      let context = React__namespace.useContext(RemixContext);
      return invariant(context, "You must render this element inside a <Remix> element"), context;
    }
    function RemixRoute({
      id
    }) {
      let {
        routeModules
      } = useRemixContext();
      invariant(routeModules, `Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.
Check this link for more details:
https://remix.run/pages/gotchas#server-code-in-client-bundles`);
      let {
        default: Component
      } = routeModules[id];
      return invariant(Component, `Route "${id}" has no component! Please go add a \`default\` export in the route module file.
If you were trying to navigate or submit to a resource route, use \`<a>\` instead of \`<Link>\` or \`<Form reloadDocument>\`.`), /* @__PURE__ */ React__namespace.createElement(Component, null);
    }
    function RemixRouteError({
      id
    }) {
      let {
        future: future2,
        routeModules
      } = useRemixContext();
      invariant(routeModules, `Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.
Check this link for more details:
https://remix.run/pages/gotchas#server-code-in-client-bundles`);
      let error = reactRouterDom.useRouteError(), {
        CatchBoundary,
        ErrorBoundary
      } = routeModules[id];
      if (future2.v2_errorBoundary) {
        if (id === "root" && (ErrorBoundary || (ErrorBoundary = errorBoundaries.V2_RemixRootDefaultErrorBoundary)), ErrorBoundary)
          return /* @__PURE__ */ React__namespace.createElement(ErrorBoundary, null);
        throw error;
      }
      if (id === "root" && (CatchBoundary || (CatchBoundary = errorBoundaries.RemixRootDefaultCatchBoundary), ErrorBoundary || (ErrorBoundary = errorBoundaries.RemixRootDefaultErrorBoundary)), reactRouterDom.isRouteErrorResponse(error)) {
        let tError = error;
        if ((tError == null ? void 0 : tError.error) instanceof Error && tError.status !== 404 && ErrorBoundary)
          return /* @__PURE__ */ React__namespace.createElement(ErrorBoundary, {
            error: tError.error
          });
        if (CatchBoundary)
          return /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixCatchBoundary, {
            component: CatchBoundary,
            catch: error
          });
      }
      if (error instanceof Error && ErrorBoundary)
        return /* @__PURE__ */ React__namespace.createElement(ErrorBoundary, {
          error
        });
      throw error;
    }
    function usePrefetchBehavior(prefetch, theirElementProps) {
      let [maybePrefetch, setMaybePrefetch] = React__namespace.useState(!1), [shouldPrefetch, setShouldPrefetch] = React__namespace.useState(!1), {
        onFocus,
        onBlur,
        onMouseEnter,
        onMouseLeave,
        onTouchStart
      } = theirElementProps;
      React__namespace.useEffect(() => {
        prefetch === "render" && setShouldPrefetch(!0);
      }, [prefetch]);
      let setIntent = () => {
        prefetch === "intent" && setMaybePrefetch(!0);
      }, cancelIntent = () => {
        prefetch === "intent" && (setMaybePrefetch(!1), setShouldPrefetch(!1));
      };
      return React__namespace.useEffect(() => {
        if (maybePrefetch) {
          let id = setTimeout(() => {
            setShouldPrefetch(!0);
          }, 100);
          return () => {
            clearTimeout(id);
          };
        }
      }, [maybePrefetch]), [shouldPrefetch, {
        onFocus: composeEventHandlers(onFocus, setIntent),
        onBlur: composeEventHandlers(onBlur, cancelIntent),
        onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
        onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
        onTouchStart: composeEventHandlers(onTouchStart, setIntent)
      }];
    }
    var ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, NavLink = /* @__PURE__ */ React__namespace.forwardRef(({
      to,
      prefetch = "none",
      ...props
    }, forwardedRef) => {
      let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX2.test(to), href = reactRouterDom.useHref(to), [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.NavLink, _rollupPluginBabelHelpers.extends({
        ref: forwardedRef,
        to
      }, props, prefetchHandlers)), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, {
        page: href
      }) : null);
    });
    NavLink.displayName = "NavLink";
    var Link18 = /* @__PURE__ */ React__namespace.forwardRef(({
      to,
      prefetch = "none",
      ...props
    }, forwardedRef) => {
      let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX2.test(to), href = reactRouterDom.useHref(to), [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Link, _rollupPluginBabelHelpers.extends({
        ref: forwardedRef,
        to
      }, props, prefetchHandlers)), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, {
        page: href
      }) : null);
    });
    Link18.displayName = "Link";
    function composeEventHandlers(theirHandler, ourHandler) {
      return (event) => {
        theirHandler && theirHandler(event), event.defaultPrevented || ourHandler(event);
      };
    }
    function Links2() {
      let {
        manifest,
        routeModules
      } = useRemixContext(), {
        matches
      } = useDataRouterStateContext(), links$1 = React__namespace.useMemo(() => links2.getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, links$1.map((link2) => {
        if (links2.isPageLinkDescriptor(link2))
          return /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, _rollupPluginBabelHelpers.extends({
            key: link2.page
          }, link2));
        let imageSrcSet = null;
        return "useId" in React__namespace ? (link2.imagesrcset && (link2.imageSrcSet = imageSrcSet = link2.imagesrcset, delete link2.imagesrcset), link2.imagesizes && (link2.imageSizes = link2.imagesizes, delete link2.imagesizes)) : (link2.imageSrcSet && (link2.imagesrcset = imageSrcSet = link2.imageSrcSet, delete link2.imageSrcSet), link2.imageSizes && (link2.imagesizes = link2.imageSizes, delete link2.imageSizes)), /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers.extends({
          key: link2.rel + (link2.href || "") + (imageSrcSet || "")
        }, link2));
      }));
    }
    function PrefetchPageLinks({
      page,
      ...dataLinkProps
    }) {
      let {
        router
      } = useDataRouterContext(), matches = React__namespace.useMemo(() => reactRouterDom.matchRoutes(router.routes, page), [router.routes, page]);
      return matches ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinksImpl, _rollupPluginBabelHelpers.extends({
        page,
        matches
      }, dataLinkProps)) : (console.warn(`Tried to prefetch ${page} but no routes matched.`), null);
    }
    function usePrefetchedStylesheets(matches) {
      let {
        manifest,
        routeModules
      } = useRemixContext(), [styleLinks, setStyleLinks] = React__namespace.useState([]);
      return React__namespace.useEffect(() => {
        let interrupted = !1;
        return links2.getStylesheetPrefetchLinks(matches, manifest, routeModules).then((links3) => {
          interrupted || setStyleLinks(links3);
        }), () => {
          interrupted = !0;
        };
      }, [matches, manifest, routeModules]), styleLinks;
    }
    function PrefetchPageLinksImpl({
      page,
      matches: nextMatches,
      ...linkProps
    }) {
      let location2 = reactRouterDom.useLocation(), {
        manifest
      } = useRemixContext(), {
        matches
      } = useDataRouterStateContext(), newMatchesForData = React__namespace.useMemo(() => links2.getNewMatchesForLinks(page, nextMatches, matches, manifest, location2, "data"), [page, nextMatches, matches, manifest, location2]), newMatchesForAssets = React__namespace.useMemo(() => links2.getNewMatchesForLinks(page, nextMatches, matches, manifest, location2, "assets"), [page, nextMatches, matches, manifest, location2]), dataHrefs = React__namespace.useMemo(() => links2.getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]), moduleHrefs = React__namespace.useMemo(() => links2.getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]), styleLinks = usePrefetchedStylesheets(newMatchesForAssets);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers.extends({
        key: href,
        rel: "prefetch",
        as: "fetch",
        href
      }, linkProps))), moduleHrefs.map((href) => /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers.extends({
        key: href,
        rel: "modulepreload",
        href
      }, linkProps))), styleLinks.map((link2) => /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers.extends({
        key: link2.href
      }, link2))));
    }
    function V1Meta() {
      let {
        routeModules
      } = useRemixContext(), {
        matches,
        loaderData
      } = useDataRouterStateContext(), location2 = reactRouterDom.useLocation(), meta13 = {}, parentsData = {};
      for (let match of matches) {
        let routeId = match.route.id, data = loaderData[routeId], params = match.params, routeModule = routeModules[routeId];
        if (routeModule.meta) {
          let routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
            data,
            parentsData,
            params,
            location: location2,
            matches: void 0
          }) : routeModule.meta;
          if (routeMeta && Array.isArray(routeMeta))
            throw new Error(
              "The route at " + match.route.path + " returns an array. This is only supported with the `v2_meta` future flag in the Remix config. Either set the flag to `true` or update the route's meta function to return an object.\n\nTo reference the v1 meta function API, see https://remix.run/route/meta"
            );
          Object.assign(meta13, routeMeta);
        }
        parentsData[routeId] = data;
      }
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, Object.entries(meta13).map(([name, value]) => {
        if (!value)
          return null;
        if (["charset", "charSet"].includes(name))
          return /* @__PURE__ */ React__namespace.createElement("meta", {
            key: "charset",
            charSet: value
          });
        if (name === "title")
          return /* @__PURE__ */ React__namespace.createElement("title", {
            key: "title"
          }, String(value));
        let isOpenGraphTag = /^(og|music|video|article|book|profile|fb):.+$/.test(name);
        return [value].flat().map((content3) => isOpenGraphTag ? /* @__PURE__ */ React__namespace.createElement("meta", {
          property: name,
          content: content3,
          key: name + content3
        }) : typeof content3 == "string" ? /* @__PURE__ */ React__namespace.createElement("meta", {
          name,
          content: content3,
          key: name + content3
        }) : /* @__PURE__ */ React__namespace.createElement("meta", _rollupPluginBabelHelpers.extends({
          key: name + JSON.stringify(content3)
        }, content3)));
      }));
    }
    function V2Meta() {
      let {
        routeModules
      } = useRemixContext(), {
        matches,
        loaderData
      } = useDataRouterStateContext(), location2 = reactRouterDom.useLocation(), meta13 = [], leafMeta = null, parentsData = {}, matchesWithMeta = matches.map((match) => ({
        ...match,
        meta: []
      })), index2 = -1;
      for (let match of matches) {
        index2++;
        let routeId = match.route.id, data = loaderData[routeId], params = match.params, routeModule = routeModules[routeId], routeMeta = [];
        if (routeModule != null && routeModule.meta ? routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
          data,
          parentsData,
          params,
          location: location2,
          matches: matchesWithMeta
        }) : routeModule.meta : leafMeta && (routeMeta = leafMeta), routeMeta = routeMeta || [], !Array.isArray(routeMeta))
          throw new Error("The `v2_meta` API is enabled in the Remix config, but the route at " + match.route.path + ` returns an invalid value. In v2, all route meta functions must return an array of meta objects.

To reference the v1 meta function API, see https://remix.run/route/meta`);
        matchesWithMeta[index2].meta = routeMeta, meta13 = routeMeta, parentsData[routeId] = data, leafMeta = meta13;
      }
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, meta13.flat().map((metaProps) => metaProps ? "title" in metaProps ? /* @__PURE__ */ React__namespace.createElement("title", {
        key: "title"
      }, String(metaProps.title)) : "charSet" in metaProps || "charset" in metaProps ? /* @__PURE__ */ React__namespace.createElement("meta", {
        key: "charset",
        charSet: metaProps.charSet || metaProps.charset
      }) : /* @__PURE__ */ React__namespace.createElement("meta", _rollupPluginBabelHelpers.extends({
        key: JSON.stringify(metaProps)
      }, metaProps)) : null));
    }
    function Meta2() {
      let {
        future: future2
      } = useRemixContext();
      return future2 != null && future2.v2_meta ? /* @__PURE__ */ React__namespace.createElement(V2Meta, null) : /* @__PURE__ */ React__namespace.createElement(V1Meta, null);
    }
    function Await(props) {
      return /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Await, props);
    }
    var isHydrated = !1;
    function Scripts2(props) {
      let {
        manifest,
        serverHandoffString,
        abortDelay
      } = useRemixContext(), {
        router,
        static: isStatic,
        staticContext
      } = useDataRouterContext(), {
        matches
      } = useDataRouterStateContext(), navigation = reactRouterDom.useNavigation();
      React__namespace.useEffect(() => {
        isHydrated = !0;
      }, []);
      let deferredScripts = [], initialScripts = React__namespace.useMemo(() => {
        var _manifest$hmr;
        let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};` : " ", activeDeferreds = staticContext == null ? void 0 : staticContext.activeDeferreds;
        contextScript += activeDeferreds ? ["__remixContext.p = function(v,e,p,x) {", "  if (typeof e !== 'undefined') {", "    x=new Error(e.message);", "", "    p=Promise.reject(x);", "  } else {", "    p=Promise.resolve(v);", "  }", "  return p;", "};", "__remixContext.n = function(i,k) {", "  __remixContext.t = __remixContext.t || {};", "  __remixContext.t[i] = __remixContext.t[i] || {};", "  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});", typeof abortDelay == "number" ? `setTimeout(() => {if(typeof p._error !== "undefined" || typeof p._data !== "undefined"){return;} __remixContext.t[i][k].e(new Error("Server timeout."))}, ${abortDelay});` : "", "  return p;", "};", "__remixContext.r = function(i,k,v,e,p,x) {", "  p = __remixContext.t[i][k];", "  if (typeof e !== 'undefined') {", "    x=new Error(e.message);", "", "    p.e(x);", "  } else {", "    p.r(v);", "  }", "};"].join(`
`) + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {
          let pendingKeys = new Set(deferredData.pendingKeys), promiseKeyValues = deferredData.deferredKeys.map((key2) => {
            if (pendingKeys.has(key2))
              return deferredScripts.push(/* @__PURE__ */ React__namespace.createElement(DeferredHydrationScript, {
                key: `${routeId} | ${key2}`,
                deferredData,
                routeId,
                dataKey: key2
              })), `${JSON.stringify(key2)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key2)})`;
            {
              let trackedPromise = deferredData.data[key2];
              if (typeof trackedPromise._error < "u") {
                let toSerialize = {
                  message: trackedPromise._error.message,
                  stack: void 0
                };
                return `${JSON.stringify(key2)}:__remixContext.p(!1, ${markup.escapeHtml(JSON.stringify(toSerialize))})`;
              } else {
                if (typeof trackedPromise._data > "u")
                  throw new Error(`The deferred data for ${key2} was not resolved, did you forget to return data from a deferred promise?`);
                return `${JSON.stringify(key2)}:__remixContext.p(${markup.escapeHtml(JSON.stringify(trackedPromise._data))})`;
              }
            }
          }).join(`,
`);
          return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;
        }).join(`
`) + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : "") : "";
        let routeModulesScript = isStatic ? `${(_manifest$hmr = manifest.hmr) !== null && _manifest$hmr !== void 0 && _manifest$hmr.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}import ${JSON.stringify(manifest.url)};
${matches.map((match, index2) => `import * as route${index2} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(`
`)}
window.__remixRouteModules = {${matches.map((match, index2) => `${JSON.stringify(match.route.id)}:route${index2}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});` : " ";
        return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers.extends({}, props, {
          suppressHydrationWarning: !0,
          dangerouslySetInnerHTML: markup.createHtml(contextScript),
          type: void 0
        })), /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers.extends({}, props, {
          suppressHydrationWarning: !0,
          dangerouslySetInnerHTML: markup.createHtml(routeModulesScript),
          type: "module",
          async: !0
        })));
      }, []);
      if (!isStatic && typeof __remixContext == "object" && __remixContext.a)
        for (let i = 0; i < __remixContext.a; i++)
          deferredScripts.push(/* @__PURE__ */ React__namespace.createElement(DeferredHydrationScript, {
            key: i
          }));
      let nextMatches = React__namespace.useMemo(() => {
        if (navigation.location) {
          let matches2 = reactRouterDom.matchRoutes(router.routes, navigation.location);
          return invariant(matches2, `No routes match path "${navigation.location.pathname}"`), matches2;
        }
        return [];
      }, [navigation.location, router.routes]), routePreloads = matches.concat(nextMatches).map((match) => {
        let route = manifest.routes[match.route.id];
        return (route.imports || []).concat([route.module]);
      }).flat(1), preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement("link", {
        rel: "modulepreload",
        href: manifest.url,
        crossOrigin: props.crossOrigin
      }), /* @__PURE__ */ React__namespace.createElement("link", {
        rel: "modulepreload",
        href: manifest.entry.module,
        crossOrigin: props.crossOrigin
      }), dedupe(preloads).map((path6) => /* @__PURE__ */ React__namespace.createElement("link", {
        key: path6,
        rel: "modulepreload",
        href: path6,
        crossOrigin: props.crossOrigin
      })), !isHydrated && initialScripts, !isHydrated && deferredScripts);
    }
    function DeferredHydrationScript({
      dataKey,
      deferredData,
      routeId
    }) {
      return typeof document > "u" && deferredData && dataKey && routeId && invariant(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`), /* @__PURE__ */ React__namespace.createElement(React__namespace.Suspense, {
        fallback: typeof document > "u" && deferredData && dataKey && routeId ? null : /* @__PURE__ */ React__namespace.createElement("script", {
          async: !0,
          suppressHydrationWarning: !0,
          dangerouslySetInnerHTML: {
            __html: " "
          }
        })
      }, typeof document > "u" && deferredData && dataKey && routeId ? /* @__PURE__ */ React__namespace.createElement(Await, {
        resolve: deferredData.data[dataKey],
        errorElement: /* @__PURE__ */ React__namespace.createElement(ErrorDeferredHydrationScript, {
          dataKey,
          routeId
        }),
        children: (data) => /* @__PURE__ */ React__namespace.createElement("script", {
          async: !0,
          suppressHydrationWarning: !0,
          dangerouslySetInnerHTML: {
            __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, ${markup.escapeHtml(JSON.stringify(data))});`
          }
        })
      }) : /* @__PURE__ */ React__namespace.createElement("script", {
        async: !0,
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: " "
        }
      }));
    }
    function ErrorDeferredHydrationScript({
      dataKey,
      routeId
    }) {
      let toSerialize = {
        message: reactRouterDom.useAsyncError().message,
        stack: void 0
      };
      return /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, !1, ${markup.escapeHtml(JSON.stringify(toSerialize))});`
        }
      });
    }
    function dedupe(array) {
      return [...new Set(array)];
    }
    function useMatches() {
      let {
        routeModules
      } = useRemixContext(), matches = reactRouterDom.useMatches();
      return React__namespace.useMemo(() => matches.map((match) => ({
        id: match.id,
        pathname: match.pathname,
        params: match.params,
        data: match.data,
        handle: routeModules[match.id].handle
      })), [matches, routeModules]);
    }
    function useLoaderData11() {
      return reactRouterDom.useLoaderData();
    }
    function useActionData() {
      return reactRouterDom.useActionData();
    }
    function useTransition() {
      let navigation = reactRouterDom.useNavigation();
      return React__namespace.useEffect(() => {
        warnings.warnOnce(!1, "\u26A0\uFE0F DEPRECATED: The `useTransition` hook has been deprecated in favor of `useNavigation` and will be removed in Remix v2.  Please update your code to leverage `useNavigation`.\n\nSee https://remix.run/docs/hooks/use-transition and https://remix.run/docs/hooks/use-navigation for more information.");
      }, []), React__namespace.useMemo(() => convertNavigationToTransition(navigation), [navigation]);
    }
    function convertNavigationToTransition(navigation) {
      let {
        location: location2,
        state,
        formMethod,
        formAction,
        formEncType,
        formData
      } = navigation;
      if (!location2)
        return transition.IDLE_TRANSITION;
      let isActionSubmission = formMethod != null && ["POST", "PUT", "PATCH", "DELETE"].includes(formMethod.toUpperCase());
      if (state === "submitting" && formMethod && formAction && formEncType && formData) {
        if (isActionSubmission)
          return {
            location: location2,
            state,
            submission: {
              method: formMethod.toUpperCase(),
              action: formAction,
              encType: formEncType,
              formData,
              key: ""
            },
            type: "actionSubmission"
          };
        invariant(!1, "Encountered an unexpected navigation scenario in useTransition()");
      }
      if (state === "loading") {
        let {
          _isRedirect,
          _isFetchActionRedirect
        } = location2.state || {};
        if (formMethod && formAction && formEncType && formData) {
          if (_isRedirect)
            return isActionSubmission ? {
              location: location2,
              state,
              submission: {
                method: formMethod.toUpperCase(),
                action: formAction,
                encType: formEncType,
                formData,
                key: ""
              },
              type: "actionRedirect"
            } : {
              location: location2,
              state,
              submission: {
                method: formMethod.toUpperCase(),
                action: formAction,
                encType: formEncType,
                formData,
                key: ""
              },
              type: "loaderSubmissionRedirect"
            };
          if (isActionSubmission)
            return {
              location: location2,
              state,
              submission: {
                method: formMethod.toUpperCase(),
                action: formAction,
                encType: formEncType,
                formData,
                key: ""
              },
              type: "actionReload"
            };
          {
            let url = new URL(formAction, window.location.origin);
            return url.search = new URLSearchParams(formData.entries()).toString(), {
              location: location2,
              state: "submitting",
              submission: {
                method: formMethod.toUpperCase(),
                action: url.pathname + url.search,
                encType: formEncType,
                formData,
                key: ""
              },
              type: "loaderSubmission"
            };
          }
        } else if (_isRedirect)
          return _isFetchActionRedirect ? {
            location: location2,
            state,
            submission: void 0,
            type: "fetchActionRedirect"
          } : {
            location: location2,
            state,
            submission: void 0,
            type: "normalRedirect"
          };
      }
      return {
        location: location2,
        state: "loading",
        submission: void 0,
        type: "normalLoad"
      };
    }
    function useFetchers() {
      return reactRouterDom.useFetchers().map((f) => convertRouterFetcherToRemixFetcher({
        state: f.state,
        data: f.data,
        formMethod: f.formMethod,
        formAction: f.formAction,
        formData: f.formData,
        formEncType: f.formEncType,
        " _hasFetcherDoneAnything ": f[" _hasFetcherDoneAnything "]
      }));
    }
    function useFetcher() {
      let fetcherRR = reactRouterDom.useFetcher();
      return React__namespace.useMemo(() => ({
        ...convertRouterFetcherToRemixFetcher({
          state: fetcherRR.state,
          data: fetcherRR.data,
          formMethod: fetcherRR.formMethod,
          formAction: fetcherRR.formAction,
          formData: fetcherRR.formData,
          formEncType: fetcherRR.formEncType,
          " _hasFetcherDoneAnything ": fetcherRR[" _hasFetcherDoneAnything "]
        }),
        load: fetcherRR.load,
        submit: fetcherRR.submit,
        Form: fetcherRR.Form
      }), [fetcherRR]);
    }
    function convertRouterFetcherToRemixFetcher(fetcherRR) {
      let {
        state,
        formMethod,
        formAction,
        formEncType,
        formData,
        data
      } = fetcherRR, isActionSubmission = formMethod != null && ["POST", "PUT", "PATCH", "DELETE"].includes(formMethod.toUpperCase());
      if (state === "idle")
        return fetcherRR[" _hasFetcherDoneAnything "] === !0 ? {
          state: "idle",
          type: "done",
          formMethod: void 0,
          formAction: void 0,
          formData: void 0,
          formEncType: void 0,
          submission: void 0,
          data
        } : transition.IDLE_FETCHER;
      if (state === "submitting" && formMethod && formAction && formEncType && formData) {
        if (isActionSubmission)
          return {
            state,
            type: "actionSubmission",
            formMethod: formMethod.toUpperCase(),
            formAction,
            formEncType,
            formData,
            submission: {
              method: formMethod.toUpperCase(),
              action: formAction,
              encType: formEncType,
              formData,
              key: ""
            },
            data
          };
        invariant(!1, "Encountered an unexpected fetcher scenario in useFetcher()");
      }
      if (state === "loading" && formMethod && formAction && formEncType && formData) {
        if (isActionSubmission)
          return data ? {
            state,
            type: "actionReload",
            formMethod: formMethod.toUpperCase(),
            formAction,
            formEncType,
            formData,
            submission: {
              method: formMethod.toUpperCase(),
              action: formAction,
              encType: formEncType,
              formData,
              key: ""
            },
            data
          } : {
            state,
            type: "actionRedirect",
            formMethod: formMethod.toUpperCase(),
            formAction,
            formEncType,
            formData,
            submission: {
              method: formMethod.toUpperCase(),
              action: formAction,
              encType: formEncType,
              formData,
              key: ""
            },
            data: void 0
          };
        {
          let url = new URL(formAction, window.location.origin);
          return url.search = new URLSearchParams(formData.entries()).toString(), {
            state: "submitting",
            type: "loaderSubmission",
            formMethod: formMethod.toUpperCase(),
            formAction,
            formEncType,
            formData,
            submission: {
              method: formMethod.toUpperCase(),
              action: url.pathname + url.search,
              encType: formEncType,
              formData,
              key: ""
            },
            data
          };
        }
      }
      return {
        state: "loading",
        type: "normalLoad",
        formMethod: void 0,
        formAction: void 0,
        formData: void 0,
        formEncType: void 0,
        submission: void 0,
        data
      };
    }
    var LiveReload2 = () => null;
    exports2.Await = Await;
    exports2.Link = Link18;
    exports2.Links = Links2;
    exports2.LiveReload = LiveReload2;
    exports2.Meta = Meta2;
    exports2.NavLink = NavLink;
    exports2.PrefetchPageLinks = PrefetchPageLinks;
    exports2.RemixContext = RemixContext;
    exports2.RemixRoute = RemixRoute;
    exports2.RemixRouteError = RemixRouteError;
    exports2.Scripts = Scripts2;
    exports2.composeEventHandlers = composeEventHandlers;
    exports2.useActionData = useActionData;
    exports2.useFetcher = useFetcher;
    exports2.useFetchers = useFetchers;
    exports2.useLoaderData = useLoaderData11;
    exports2.useMatches = useMatches;
    exports2.useTransition = useTransition;
  }
});

// node_modules/@remix-run/react/dist/errors.js
var require_errors = __commonJS({
  "node_modules/@remix-run/react/dist/errors.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var router = require_router_cjs();
    function deserializeErrors(errors2) {
      if (!errors2)
        return null;
      let entries = Object.entries(errors2), serialized = {};
      for (let [key2, val] of entries)
        if (val && val.__type === "RouteErrorResponse")
          serialized[key2] = new router.ErrorResponse(val.status, val.statusText, val.data, val.internal === !0);
        else if (val && val.__type === "Error") {
          let error = new Error(val.message);
          error.stack = val.stack, serialized[key2] = error;
        } else
          serialized[key2] = val;
      return serialized;
    }
    exports2.deserializeErrors = deserializeErrors;
  }
});

// node_modules/@remix-run/react/dist/data.js
var require_data = __commonJS({
  "node_modules/@remix-run/react/dist/data.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var router = require_router_cjs();
    function isCatchResponse(response) {
      return response instanceof Response && response.headers.get("X-Remix-Catch") != null;
    }
    function isErrorResponse(response) {
      return response instanceof Response && response.headers.get("X-Remix-Error") != null;
    }
    function isRedirectResponse(response) {
      return response instanceof Response && response.headers.get("X-Remix-Redirect") != null;
    }
    function isDeferredResponse(response) {
      var _response$headers$get;
      return response instanceof Response && !!((_response$headers$get = response.headers.get("Content-Type")) !== null && _response$headers$get !== void 0 && _response$headers$get.match(/text\/remix-deferred/));
    }
    async function fetchData(request, routeId) {
      let url = new URL(request.url);
      url.searchParams.set("_data", routeId);
      let init = {
        signal: request.signal
      };
      if (request.method !== "GET") {
        init.method = request.method;
        let contentType = request.headers.get("Content-Type");
        init.body = contentType && /\bapplication\/x-www-form-urlencoded\b/.test(contentType) ? new URLSearchParams(await request.text()) : await request.formData();
      }
      let response = await fetch(url.href, init);
      if (isErrorResponse(response)) {
        let data = await response.json(), error = new Error(data.message);
        return error.stack = data.stack, error;
      }
      return response;
    }
    var DEFERRED_VALUE_PLACEHOLDER_PREFIX = "__deferred_promise:";
    async function parseDeferredReadableStream(stream) {
      if (!stream)
        throw new Error("parseDeferredReadableStream requires stream argument");
      let deferredData, deferredResolvers = {};
      try {
        let sectionReader = readStreamSections(stream), initialSection = (await sectionReader.next()).value;
        if (!initialSection)
          throw new Error("no critical data");
        let criticalData = JSON.parse(initialSection);
        if (typeof criticalData == "object" && criticalData !== null)
          for (let [eventKey, value] of Object.entries(criticalData))
            typeof value != "string" || !value.startsWith(DEFERRED_VALUE_PLACEHOLDER_PREFIX) || (deferredData = deferredData || {}, deferredData[eventKey] = new Promise((resolve, reject) => {
              deferredResolvers[eventKey] = {
                resolve: (value2) => {
                  resolve(value2), delete deferredResolvers[eventKey];
                },
                reject: (error) => {
                  reject(error), delete deferredResolvers[eventKey];
                }
              };
            }));
        return (async () => {
          try {
            for await (let section of sectionReader) {
              let [event, ...sectionDataStrings] = section.split(":"), sectionDataString = sectionDataStrings.join(":"), data = JSON.parse(sectionDataString);
              if (event === "data")
                for (let [key2, value] of Object.entries(data))
                  deferredResolvers[key2] && deferredResolvers[key2].resolve(value);
              else if (event === "error")
                for (let [key2, value] of Object.entries(data)) {
                  let err = new Error(value.message);
                  err.stack = value.stack, deferredResolvers[key2] && deferredResolvers[key2].reject(err);
                }
            }
            for (let [key2, resolver2] of Object.entries(deferredResolvers))
              resolver2.reject(new router.AbortedDeferredError(`Deferred ${key2} will never be resolved`));
          } catch (error) {
            for (let resolver2 of Object.values(deferredResolvers))
              resolver2.reject(error);
          }
        })(), new router.UNSAFE_DeferredData({
          ...criticalData,
          ...deferredData
        });
      } catch (error) {
        for (let resolver2 of Object.values(deferredResolvers))
          resolver2.reject(error);
        throw error;
      }
    }
    async function* readStreamSections(stream) {
      let reader = stream.getReader(), buffer2 = [], sections = [], closed = !1, encoder = new TextEncoder(), decoder = new TextDecoder(), readStreamSection = async () => {
        if (sections.length > 0)
          return sections.shift();
        for (; !closed && sections.length === 0; ) {
          let chunk = await reader.read();
          if (chunk.done) {
            closed = !0;
            break;
          }
          buffer2.push(chunk.value);
          try {
            let splitSections = decoder.decode(mergeArrays(...buffer2)).split(`

`);
            if (splitSections.length >= 2 && (sections.push(...splitSections.slice(0, -1)), buffer2 = [encoder.encode(splitSections.slice(-1).join(`

`))]), sections.length > 0)
              break;
          } catch {
            continue;
          }
        }
        return sections.length > 0 || buffer2.length > 0 && (sections = decoder.decode(mergeArrays(...buffer2)).split(`

`).filter((s2) => s2), buffer2 = []), sections.shift();
      }, section = await readStreamSection();
      for (; section; )
        yield section, section = await readStreamSection();
    }
    function mergeArrays(...arrays) {
      let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0)), offset = 0;
      for (let arr of arrays)
        out.set(arr, offset), offset += arr.length;
      return out;
    }
    exports2.fetchData = fetchData;
    exports2.isCatchResponse = isCatchResponse;
    exports2.isDeferredResponse = isDeferredResponse;
    exports2.isErrorResponse = isErrorResponse;
    exports2.isRedirectResponse = isRedirectResponse;
    exports2.parseDeferredReadableStream = parseDeferredReadableStream;
  }
});

// node_modules/@remix-run/react/dist/routes.js
var require_routes = __commonJS({
  "node_modules/@remix-run/react/dist/routes.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var React = require_react(), reactRouterDom = require_main2(), routeModules = require_routeModules(), data = require_data(), links2 = require_links(), invariant = require_invariant(), components = require_components();
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    function groupRoutesByParentId(manifest) {
      let routes2 = {};
      return Object.values(manifest).forEach((route) => {
        let parentId = route.parentId || "";
        routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
      }), routes2;
    }
    function createServerRoutes(manifest, routeModules2, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
      return (routesByParentId[parentId] || []).map((route) => {
        let hasErrorBoundary = future2.v2_errorBoundary === !0 ? route.id === "root" || route.hasErrorBoundary : route.id === "root" || route.hasCatchBoundary || route.hasErrorBoundary, dataRoute = {
          caseSensitive: route.caseSensitive,
          element: /* @__PURE__ */ React__namespace.createElement(components.RemixRoute, {
            id: route.id
          }),
          errorElement: hasErrorBoundary ? /* @__PURE__ */ React__namespace.createElement(components.RemixRouteError, {
            id: route.id
          }) : void 0,
          id: route.id,
          index: route.index,
          path: route.path,
          handle: routeModules2[route.id].handle
        }, children = createServerRoutes(manifest, routeModules2, future2, route.id, routesByParentId);
        return children.length > 0 && (dataRoute.children = children), dataRoute;
      });
    }
    function createClientRoutes(manifest, routeModulesCache, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
      return (routesByParentId[parentId] || []).map((route) => {
        let hasErrorBoundary = future2.v2_errorBoundary === !0 ? route.id === "root" || route.hasErrorBoundary : route.id === "root" || route.hasCatchBoundary || route.hasErrorBoundary, dataRoute = {
          caseSensitive: route.caseSensitive,
          element: /* @__PURE__ */ React__namespace.createElement(components.RemixRoute, {
            id: route.id
          }),
          errorElement: hasErrorBoundary ? /* @__PURE__ */ React__namespace.createElement(components.RemixRouteError, {
            id: route.id
          }) : void 0,
          id: route.id,
          index: route.index,
          path: route.path,
          handle: void 0,
          loader: createDataFunction(route, routeModulesCache, !1),
          action: createDataFunction(route, routeModulesCache, !0),
          shouldRevalidate: createShouldRevalidate(route, routeModulesCache)
        }, children = createClientRoutes(manifest, routeModulesCache, future2, route.id);
        return children.length > 0 && (dataRoute.children = children), dataRoute;
      });
    }
    function createShouldRevalidate(route, routeModules2) {
      return function(arg) {
        let module3 = routeModules2[route.id];
        return invariant(module3, `Expected route module to be loaded for ${route.id}`), module3.shouldRevalidate ? module3.shouldRevalidate(arg) : arg.defaultShouldRevalidate;
      };
    }
    async function loadRouteModuleWithBlockingLinks(route, routeModules$1) {
      let routeModule = await routeModules.loadRouteModule(route, routeModules$1);
      return await links2.prefetchStyleLinks(routeModule), routeModule;
    }
    function createDataFunction(route, routeModules2, isAction) {
      return async ({
        request
      }) => {
        let routeModulePromise = loadRouteModuleWithBlockingLinks(route, routeModules2);
        try {
          if (isAction && !route.hasAction) {
            let msg = `Route "${route.id}" does not have an action, but you are trying to submit to it. To fix this, please add an \`action\` function to the route`;
            throw console.error(msg), new Error(msg);
          } else if (!isAction && !route.hasLoader)
            return null;
          let result = await data.fetchData(request, route.id);
          if (result instanceof Error)
            throw result;
          if (data.isRedirectResponse(result))
            throw getRedirect(result);
          if (data.isCatchResponse(result))
            throw result;
          return data.isDeferredResponse(result) && result.body ? await data.parseDeferredReadableStream(result.body) : result;
        } finally {
          await routeModulePromise;
        }
      };
    }
    function getRedirect(response) {
      let status = parseInt(response.headers.get("X-Remix-Status"), 10) || 302, url = response.headers.get("X-Remix-Redirect"), headers = {}, revalidate = response.headers.get("X-Remix-Revalidate");
      return revalidate && (headers["X-Remix-Revalidate"] = revalidate), reactRouterDom.redirect(url, {
        status,
        headers
      });
    }
    exports2.createClientRoutes = createClientRoutes;
    exports2.createServerRoutes = createServerRoutes;
  }
});

// node_modules/@remix-run/react/dist/browser.js
var require_browser = __commonJS({
  "node_modules/@remix-run/react/dist/browser.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var React = require_react(), reactRouterDom = require_main2(), shim = require_shim(), components = require_components(), errorBoundaries = require_errorBoundaries(), errors2 = require_errors(), routes2 = require_routes();
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React), router;
    function RemixBrowser(_props) {
      if (!router) {
        let routes$1 = routes2.createClientRoutes(window.__remixManifest.routes, window.__remixRouteModules, window.__remixContext.future), hydrationData = window.__remixContext.state;
        hydrationData && hydrationData.errors && (hydrationData = {
          ...hydrationData,
          errors: errors2.deserializeErrors(hydrationData.errors)
        }), router = reactRouterDom.createBrowserRouter(routes$1, {
          hydrationData
        });
      }
      let location2 = shim.useSyncExternalStore(router.subscribe, () => router.state.location, () => router.state.location);
      return /* @__PURE__ */ React__namespace.createElement(components.RemixContext.Provider, {
        value: {
          manifest: window.__remixManifest,
          routeModules: window.__remixRouteModules,
          future: window.__remixContext.future
        }
      }, /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixErrorBoundary, {
        location: location2,
        component: errorBoundaries.RemixRootDefaultErrorBoundary
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.RouterProvider, {
        router,
        fallbackElement: null
      })));
    }
    exports2.RemixBrowser = RemixBrowser;
  }
});

// node_modules/@remix-run/react/dist/scroll-restoration.js
var require_scroll_restoration = __commonJS({
  "node_modules/@remix-run/react/dist/scroll-restoration.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var _rollupPluginBabelHelpers = require_rollupPluginBabelHelpers(), React = require_react(), reactRouterDom = require_main2(), components = require_components();
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React), STORAGE_KEY = "positions";
    function ScrollRestoration2({
      getKey,
      ...props
    }) {
      let location2 = reactRouterDom.useLocation(), matches = components.useMatches();
      reactRouterDom.UNSAFE_useScrollRestoration({
        getKey,
        storageKey: STORAGE_KEY
      });
      let key2 = React__namespace.useMemo(
        () => {
          if (!getKey)
            return null;
          let userKey = getKey(location2, matches);
          return userKey !== location2.key ? userKey : null;
        },
        []
      ), restoreScroll = ((STORAGE_KEY2, restoreKey) => {
        if (!window.history.state || !window.history.state.key) {
          let key3 = Math.random().toString(32).slice(2);
          window.history.replaceState({
            key: key3
          }, "");
        }
        try {
          let storedY = JSON.parse(sessionStorage.getItem(STORAGE_KEY2) || "{}")[restoreKey || window.history.state.key];
          typeof storedY == "number" && window.scrollTo(0, storedY);
        } catch (error) {
          console.error(error), sessionStorage.removeItem(STORAGE_KEY2);
        }
      }).toString();
      return /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers.extends({}, props, {
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)}, ${JSON.stringify(key2)})`
        }
      }));
    }
    exports2.ScrollRestoration = ScrollRestoration2;
  }
});

// node_modules/react-router-dom/server.js
var require_server = __commonJS({
  "node_modules/react-router-dom/server.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var React = require_react(), router = require_router_cjs(), reactRouterDom = require_main2();
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    function StaticRouter({
      basename,
      children,
      location: locationProp = "/"
    }) {
      typeof locationProp == "string" && (locationProp = reactRouterDom.parsePath(locationProp));
      let action2 = router.Action.Pop, location2 = {
        pathname: locationProp.pathname || "/",
        search: locationProp.search || "",
        hash: locationProp.hash || "",
        state: locationProp.state || null,
        key: locationProp.key || "default"
      }, staticNavigator = getStatelessNavigator();
      return /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename,
        children,
        location: location2,
        navigationType: action2,
        navigator: staticNavigator,
        static: !0
      });
    }
    function StaticRouterProvider({
      context,
      router: router$1,
      hydrate = !0,
      nonce
    }) {
      router$1 && context || router.UNSAFE_invariant(!1);
      let dataRouterContext = {
        router: router$1,
        navigator: getStatelessNavigator(),
        static: !0,
        staticContext: context,
        basename: context.basename || "/"
      }, hydrateScript = "";
      if (hydrate !== !1) {
        let data = {
          loaderData: context.loaderData,
          actionData: context.actionData,
          errors: serializeErrors(context.errors)
        };
        hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${htmlEscape(JSON.stringify(JSON.stringify(data)))});`;
      }
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterContext.Provider, {
        value: dataRouterContext
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterStateContext.Provider, {
        value: dataRouterContext.router.state
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename: dataRouterContext.basename,
        location: dataRouterContext.router.state.location,
        navigationType: dataRouterContext.router.state.historyAction,
        navigator: dataRouterContext.navigator
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Routes, null)))), hydrateScript ? /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: !0,
        nonce,
        dangerouslySetInnerHTML: {
          __html: hydrateScript
        }
      }) : null);
    }
    function serializeErrors(errors2) {
      if (!errors2)
        return null;
      let entries = Object.entries(errors2), serialized = {};
      for (let [key2, val] of entries)
        router.isRouteErrorResponse(val) ? serialized[key2] = {
          ...val,
          __type: "RouteErrorResponse"
        } : val instanceof Error ? serialized[key2] = {
          message: val.message,
          __type: "Error"
        } : serialized[key2] = val;
      return serialized;
    }
    function getStatelessNavigator() {
      return {
        createHref,
        encodeLocation,
        push(to) {
          throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`);
        },
        replace(to) {
          throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`);
        },
        go(delta) {
          throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`);
        },
        back() {
          throw new Error("You cannot use navigator.back() on the server because it is a stateless environment.");
        },
        forward() {
          throw new Error("You cannot use navigator.forward() on the server because it is a stateless environment.");
        }
      };
    }
    function generateManifest(routes2, manifest = /* @__PURE__ */ new Map()) {
      return routes2.forEach((route) => {
        manifest.set(route.id, route), route.children && generateManifest(route.children, manifest);
      }), manifest;
    }
    function createStaticRouter(routes2, context) {
      let dataRoutes = router.UNSAFE_convertRoutesToDataRoutes(reactRouterDom.UNSAFE_enhanceManualRouteObjects(routes2)), manifest = generateManifest(dataRoutes), matches = context.matches.map((match) => {
        let route = manifest.get(match.route.id) || match.route;
        return {
          ...match,
          route
        };
      }), msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;
      return {
        get basename() {
          return context.basename;
        },
        get state() {
          return {
            historyAction: router.Action.Pop,
            location: context.location,
            matches,
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: context.errors,
            initialized: !0,
            navigation: router.IDLE_NAVIGATION,
            restoreScrollPosition: null,
            preventScrollReset: !1,
            revalidation: "idle",
            fetchers: /* @__PURE__ */ new Map(),
            blockers: /* @__PURE__ */ new Map()
          };
        },
        get routes() {
          return dataRoutes;
        },
        initialize() {
          throw msg("initialize");
        },
        subscribe() {
          throw msg("subscribe");
        },
        enableScrollRestoration() {
          throw msg("enableScrollRestoration");
        },
        navigate() {
          throw msg("navigate");
        },
        fetch() {
          throw msg("fetch");
        },
        revalidate() {
          throw msg("revalidate");
        },
        createHref,
        encodeLocation,
        getFetcher() {
          return router.IDLE_FETCHER;
        },
        deleteFetcher() {
          throw msg("deleteFetcher");
        },
        dispose() {
          throw msg("dispose");
        },
        getBlocker() {
          return router.IDLE_BLOCKER;
        },
        deleteBlocker() {
          throw msg("deleteBlocker");
        },
        _internalFetchControllers: /* @__PURE__ */ new Map(),
        _internalActiveDeferreds: /* @__PURE__ */ new Map(),
        _internalSetRoutes() {
          throw msg("_internalSetRoutes");
        }
      };
    }
    function createHref(to) {
      return typeof to == "string" ? to : reactRouterDom.createPath(to);
    }
    function encodeLocation(to) {
      let path6 = typeof to == "string" ? reactRouterDom.parsePath(to) : to;
      return {
        pathname: path6.pathname || "",
        search: path6.search || "",
        hash: path6.hash || ""
      };
    }
    var ESCAPE_LOOKUP = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
    function htmlEscape(str2) {
      return str2.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
    }
    exports2.StaticRouter = StaticRouter;
    exports2.StaticRouterProvider = StaticRouterProvider;
    exports2.createStaticRouter = createStaticRouter;
  }
});

// node_modules/@remix-run/react/dist/server.js
var require_server2 = __commonJS({
  "node_modules/@remix-run/react/dist/server.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var React = require_react(), server = require_server(), components = require_components(), errorBoundaries = require_errorBoundaries(), routes2 = require_routes();
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    function RemixServer2({
      context,
      url,
      abortDelay
    }) {
      typeof url == "string" && (url = new URL(url));
      let {
        manifest,
        routeModules,
        serverHandoffString
      } = context, routes$1 = routes2.createServerRoutes(manifest.routes, routeModules, context.future), router = server.createStaticRouter(routes$1, context.staticHandlerContext);
      return /* @__PURE__ */ React__namespace.createElement(components.RemixContext.Provider, {
        value: {
          manifest,
          routeModules,
          serverHandoffString,
          future: context.future,
          abortDelay
        }
      }, /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixErrorBoundary, {
        location: router.state.location,
        component: errorBoundaries.RemixRootDefaultErrorBoundary
      }, /* @__PURE__ */ React__namespace.createElement(server.StaticRouterProvider, {
        router,
        context: context.staticHandlerContext,
        hydrate: !1
      })));
    }
    exports2.RemixServer = RemixServer2;
  }
});

// node_modules/@remix-run/react/dist/index.js
var require_dist = __commonJS({
  "node_modules/@remix-run/react/dist/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var browser = require_browser(), reactRouterDom = require_main2(), components = require_components(), errorBoundaries = require_errorBoundaries(), scrollRestoration = require_scroll_restoration(), server = require_server2();
    exports2.RemixBrowser = browser.RemixBrowser;
    Object.defineProperty(exports2, "Form", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.Form;
      }
    });
    Object.defineProperty(exports2, "Outlet", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.Outlet;
      }
    });
    Object.defineProperty(exports2, "isRouteErrorResponse", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.isRouteErrorResponse;
      }
    });
    Object.defineProperty(exports2, "unstable_useBlocker", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.unstable_useBlocker;
      }
    });
    Object.defineProperty(exports2, "unstable_usePrompt", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.unstable_usePrompt;
      }
    });
    Object.defineProperty(exports2, "useAsyncError", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useAsyncError;
      }
    });
    Object.defineProperty(exports2, "useAsyncValue", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useAsyncValue;
      }
    });
    Object.defineProperty(exports2, "useBeforeUnload", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useBeforeUnload;
      }
    });
    Object.defineProperty(exports2, "useFormAction", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useFormAction;
      }
    });
    Object.defineProperty(exports2, "useHref", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useHref;
      }
    });
    Object.defineProperty(exports2, "useLocation", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useLocation;
      }
    });
    Object.defineProperty(exports2, "useNavigate", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useNavigate;
      }
    });
    Object.defineProperty(exports2, "useNavigation", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useNavigation;
      }
    });
    Object.defineProperty(exports2, "useNavigationType", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useNavigationType;
      }
    });
    Object.defineProperty(exports2, "useOutlet", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useOutlet;
      }
    });
    Object.defineProperty(exports2, "useOutletContext", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useOutletContext;
      }
    });
    Object.defineProperty(exports2, "useParams", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useParams;
      }
    });
    Object.defineProperty(exports2, "useResolvedPath", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useResolvedPath;
      }
    });
    Object.defineProperty(exports2, "useRevalidator", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useRevalidator;
      }
    });
    Object.defineProperty(exports2, "useRouteError", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useRouteError;
      }
    });
    Object.defineProperty(exports2, "useRouteLoaderData", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useRouteLoaderData;
      }
    });
    Object.defineProperty(exports2, "useSearchParams", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useSearchParams;
      }
    });
    Object.defineProperty(exports2, "useSubmit", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useSubmit;
      }
    });
    exports2.Await = components.Await;
    exports2.Link = components.Link;
    exports2.Links = components.Links;
    exports2.LiveReload = components.LiveReload;
    exports2.Meta = components.Meta;
    exports2.NavLink = components.NavLink;
    exports2.PrefetchPageLinks = components.PrefetchPageLinks;
    exports2.Scripts = components.Scripts;
    exports2.UNSAFE_RemixContext = components.RemixContext;
    exports2.useActionData = components.useActionData;
    exports2.useFetcher = components.useFetcher;
    exports2.useFetchers = components.useFetchers;
    exports2.useLoaderData = components.useLoaderData;
    exports2.useMatches = components.useMatches;
    exports2.useTransition = components.useTransition;
    exports2.useCatch = errorBoundaries.useCatch;
    exports2.ScrollRestoration = scrollRestoration.ScrollRestoration;
    exports2.RemixServer = server.RemixServer;
  }
});

// node_modules/react-dom/cjs/react-dom-server-legacy.node.production.min.js
var require_react_dom_server_legacy_node_production_min = __commonJS({
  "node_modules/react-dom/cjs/react-dom-server-legacy.node.production.min.js"(exports2) {
    "use strict";
    var ea = require_react(), fa = require("stream"), n = Object.prototype.hasOwnProperty, ha = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ia = {}, ja = {};
    function ka(a) {
      return n.call(ja, a) ? !0 : n.call(ia, a) ? !1 : ha.test(a) ? ja[a] = !0 : (ia[a] = !0, !1);
    }
    function q(a, b, c, d, f, e, g) {
      this.acceptsBooleans = b === 2 || b === 3 || b === 4, this.attributeName = d, this.attributeNamespace = f, this.mustUseProperty = c, this.propertyName = a, this.type = b, this.sanitizeURL = e, this.removeEmptyString = g;
    }
    var r = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
      r[a] = new q(a, 0, !1, a, null, !1, !1);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
      var b = a[0];
      r[b] = new q(b, 1, !1, a[1], null, !1, !1);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
      r[a] = new q(a, 2, !1, a.toLowerCase(), null, !1, !1);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
      r[a] = new q(a, 2, !1, a, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
      r[a] = new q(a, 3, !1, a.toLowerCase(), null, !1, !1);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a) {
      r[a] = new q(a, 3, !0, a, null, !1, !1);
    });
    ["capture", "download"].forEach(function(a) {
      r[a] = new q(a, 4, !1, a, null, !1, !1);
    });
    ["cols", "rows", "size", "span"].forEach(function(a) {
      r[a] = new q(a, 6, !1, a, null, !1, !1);
    });
    ["rowSpan", "start"].forEach(function(a) {
      r[a] = new q(a, 5, !1, a.toLowerCase(), null, !1, !1);
    });
    var la = /[\-:]([a-z])/g;
    function ma(a) {
      return a[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
      var b = a.replace(
        la,
        ma
      );
      r[b] = new q(b, 1, !1, a, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
      var b = a.replace(la, ma);
      r[b] = new q(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
      var b = a.replace(la, ma);
      r[b] = new q(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a) {
      r[a] = new q(a, 1, !1, a.toLowerCase(), null, !1, !1);
    });
    r.xlinkHref = new q("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(a) {
      r[a] = new q(a, 1, !1, a.toLowerCase(), null, !0, !0);
    });
    var t = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    }, na = ["Webkit", "ms", "Moz", "O"];
    Object.keys(t).forEach(function(a) {
      na.forEach(function(b) {
        b = b + a.charAt(0).toUpperCase() + a.substring(1), t[b] = t[a];
      });
    });
    var oa = /["'&<>]/;
    function u(a) {
      if (typeof a == "boolean" || typeof a == "number")
        return "" + a;
      a = "" + a;
      var b = oa.exec(a);
      if (b) {
        var c = "", d, f = 0;
        for (d = b.index; d < a.length; d++) {
          switch (a.charCodeAt(d)) {
            case 34:
              b = "&quot;";
              break;
            case 38:
              b = "&amp;";
              break;
            case 39:
              b = "&#x27;";
              break;
            case 60:
              b = "&lt;";
              break;
            case 62:
              b = "&gt;";
              break;
            default:
              continue;
          }
          f !== d && (c += a.substring(f, d)), f = d + 1, c += b;
        }
        a = f !== d ? c + a.substring(f, d) : c;
      }
      return a;
    }
    var pa = /([A-Z])/g, qa = /^ms-/, ra = Array.isArray;
    function v(a, b) {
      return { insertionMode: a, selectedValue: b };
    }
    function sa(a, b, c) {
      switch (b) {
        case "select":
          return v(1, c.value != null ? c.value : c.defaultValue);
        case "svg":
          return v(2, null);
        case "math":
          return v(3, null);
        case "foreignObject":
          return v(1, null);
        case "table":
          return v(4, null);
        case "thead":
        case "tbody":
        case "tfoot":
          return v(5, null);
        case "colgroup":
          return v(7, null);
        case "tr":
          return v(6, null);
      }
      return 4 <= a.insertionMode || a.insertionMode === 0 ? v(1, null) : a;
    }
    var ta = /* @__PURE__ */ new Map();
    function ua(a, b, c) {
      if (typeof c != "object")
        throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      b = !0;
      for (var d in c)
        if (n.call(c, d)) {
          var f = c[d];
          if (f != null && typeof f != "boolean" && f !== "") {
            if (d.indexOf("--") === 0) {
              var e = u(d);
              f = u(("" + f).trim());
            } else {
              e = d;
              var g = ta.get(e);
              g !== void 0 || (g = u(e.replace(pa, "-$1").toLowerCase().replace(qa, "-ms-")), ta.set(e, g)), e = g, f = typeof f == "number" ? f === 0 || n.call(
                t,
                d
              ) ? "" + f : f + "px" : u(("" + f).trim());
            }
            b ? (b = !1, a.push(' style="', e, ":", f)) : a.push(";", e, ":", f);
          }
        }
      b || a.push('"');
    }
    function w(a, b, c, d) {
      switch (c) {
        case "style":
          ua(a, b, d);
          return;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
          return;
      }
      if (!(2 < c.length) || c[0] !== "o" && c[0] !== "O" || c[1] !== "n" && c[1] !== "N") {
        if (b = r.hasOwnProperty(c) ? r[c] : null, b !== null) {
          switch (typeof d) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (!b.acceptsBooleans)
                return;
          }
          switch (c = b.attributeName, b.type) {
            case 3:
              d && a.push(" ", c, '=""');
              break;
            case 4:
              d === !0 ? a.push(" ", c, '=""') : d !== !1 && a.push(" ", c, '="', u(d), '"');
              break;
            case 5:
              isNaN(d) || a.push(" ", c, '="', u(d), '"');
              break;
            case 6:
              !isNaN(d) && 1 <= d && a.push(" ", c, '="', u(d), '"');
              break;
            default:
              b.sanitizeURL && (d = "" + d), a.push(" ", c, '="', u(d), '"');
          }
        } else if (ka(c)) {
          switch (typeof d) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (b = c.toLowerCase().slice(0, 5), b !== "data-" && b !== "aria-")
                return;
          }
          a.push(" ", c, '="', u(d), '"');
        }
      }
    }
    function x(a, b, c) {
      if (b != null) {
        if (c != null)
          throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
        if (typeof b != "object" || !("__html" in b))
          throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        b = b.__html, b != null && a.push("" + b);
      }
    }
    function va(a) {
      var b = "";
      return ea.Children.forEach(a, function(a2) {
        a2 != null && (b += a2);
      }), b;
    }
    function wa(a, b, c, d) {
      a.push(z(c));
      var f = c = null, e;
      for (e in b)
        if (n.call(b, e)) {
          var g = b[e];
          if (g != null)
            switch (e) {
              case "children":
                c = g;
                break;
              case "dangerouslySetInnerHTML":
                f = g;
                break;
              default:
                w(a, d, e, g);
            }
        }
      return a.push(">"), x(a, f, c), typeof c == "string" ? (a.push(u(c)), null) : c;
    }
    var xa = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, ya = /* @__PURE__ */ new Map();
    function z(a) {
      var b = ya.get(a);
      if (b === void 0) {
        if (!xa.test(a))
          throw Error("Invalid tag: " + a);
        b = "<" + a, ya.set(a, b);
      }
      return b;
    }
    function za(a, b, c, d, f) {
      switch (b) {
        case "select":
          a.push(z("select"));
          var e = null, g = null;
          for (l in c)
            if (n.call(c, l)) {
              var h2 = c[l];
              if (h2 != null)
                switch (l) {
                  case "children":
                    e = h2;
                    break;
                  case "dangerouslySetInnerHTML":
                    g = h2;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    w(a, d, l, h2);
                }
            }
          return a.push(">"), x(a, g, e), e;
        case "option":
          g = f.selectedValue, a.push(z("option"));
          var k = h2 = null, m = null, l = null;
          for (e in c)
            if (n.call(c, e)) {
              var p2 = c[e];
              if (p2 != null)
                switch (e) {
                  case "children":
                    h2 = p2;
                    break;
                  case "selected":
                    m = p2;
                    break;
                  case "dangerouslySetInnerHTML":
                    l = p2;
                    break;
                  case "value":
                    k = p2;
                  default:
                    w(a, d, e, p2);
                }
            }
          if (g != null)
            if (c = k !== null ? "" + k : va(h2), ra(g)) {
              for (d = 0; d < g.length; d++)
                if ("" + g[d] === c) {
                  a.push(' selected=""');
                  break;
                }
            } else
              "" + g === c && a.push(' selected=""');
          else
            m && a.push(' selected=""');
          return a.push(">"), x(a, l, h2), h2;
        case "textarea":
          a.push(z("textarea")), l = g = e = null;
          for (h2 in c)
            if (n.call(c, h2) && (k = c[h2], k != null))
              switch (h2) {
                case "children":
                  l = k;
                  break;
                case "value":
                  e = k;
                  break;
                case "defaultValue":
                  g = k;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  w(a, d, h2, k);
              }
          if (e === null && g !== null && (e = g), a.push(">"), l != null) {
            if (e != null)
              throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (ra(l) && 1 < l.length)
              throw Error("<textarea> can only have at most one child.");
            e = "" + l;
          }
          return typeof e == "string" && e[0] === `
` && a.push(`
`), e !== null && a.push(u("" + e)), null;
        case "input":
          a.push(z("input")), k = l = h2 = e = null;
          for (g in c)
            if (n.call(c, g) && (m = c[g], m != null))
              switch (g) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  k = m;
                  break;
                case "defaultValue":
                  h2 = m;
                  break;
                case "checked":
                  l = m;
                  break;
                case "value":
                  e = m;
                  break;
                default:
                  w(a, d, g, m);
              }
          return l !== null ? w(a, d, "checked", l) : k !== null && w(a, d, "checked", k), e !== null ? w(a, d, "value", e) : h2 !== null && w(a, d, "value", h2), a.push("/>"), null;
        case "menuitem":
          a.push(z("menuitem"));
          for (var B in c)
            if (n.call(c, B) && (e = c[B], e != null))
              switch (B) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  w(
                    a,
                    d,
                    B,
                    e
                  );
              }
          return a.push(">"), null;
        case "title":
          a.push(z("title")), e = null;
          for (p2 in c)
            if (n.call(c, p2) && (g = c[p2], g != null))
              switch (p2) {
                case "children":
                  e = g;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  w(a, d, p2, g);
              }
          return a.push(">"), e;
        case "listing":
        case "pre":
          a.push(z(b)), g = e = null;
          for (k in c)
            if (n.call(c, k) && (h2 = c[k], h2 != null))
              switch (k) {
                case "children":
                  e = h2;
                  break;
                case "dangerouslySetInnerHTML":
                  g = h2;
                  break;
                default:
                  w(a, d, k, h2);
              }
          if (a.push(">"), g != null) {
            if (e != null)
              throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (typeof g != "object" || !("__html" in g))
              throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            c = g.__html, c != null && (typeof c == "string" && 0 < c.length && c[0] === `
` ? a.push(`
`, c) : a.push("" + c));
          }
          return typeof e == "string" && e[0] === `
` && a.push(`
`), e;
        case "area":
        case "base":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "img":
        case "keygen":
        case "link":
        case "meta":
        case "param":
        case "source":
        case "track":
        case "wbr":
          a.push(z(b));
          for (var C in c)
            if (n.call(c, C) && (e = c[C], e != null))
              switch (C) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(b + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  w(a, d, C, e);
              }
          return a.push("/>"), null;
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return wa(a, c, b, d);
        case "html":
          return f.insertionMode === 0 && a.push("<!DOCTYPE html>"), wa(a, c, b, d);
        default:
          if (b.indexOf("-") === -1 && typeof c.is != "string")
            return wa(a, c, b, d);
          a.push(z(b)), g = e = null;
          for (m in c)
            if (n.call(c, m) && (h2 = c[m], h2 != null))
              switch (m) {
                case "children":
                  e = h2;
                  break;
                case "dangerouslySetInnerHTML":
                  g = h2;
                  break;
                case "style":
                  ua(a, d, h2);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  ka(m) && typeof h2 != "function" && typeof h2 != "symbol" && a.push(" ", m, '="', u(h2), '"');
              }
          return a.push(">"), x(a, g, e), e;
      }
    }
    function Aa(a, b, c) {
      if (a.push('<!--$?--><template id="'), c === null)
        throw Error("An ID must have been assigned before we can complete the boundary.");
      return a.push(c), a.push('"></template>');
    }
    function Ba(a, b, c, d) {
      switch (c.insertionMode) {
        case 0:
        case 1:
          return a.push('<div hidden id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
        case 2:
          return a.push('<svg aria-hidden="true" style="display:none" id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
        case 3:
          return a.push('<math aria-hidden="true" style="display:none" id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
        case 4:
          return a.push('<table hidden id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
        case 5:
          return a.push('<table hidden><tbody id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
        case 6:
          return a.push('<table hidden><tr id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
        case 7:
          return a.push('<table hidden><colgroup id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    function Ca(a, b) {
      switch (b.insertionMode) {
        case 0:
        case 1:
          return a.push("</div>");
        case 2:
          return a.push("</svg>");
        case 3:
          return a.push("</math>");
        case 4:
          return a.push("</table>");
        case 5:
          return a.push("</tbody></table>");
        case 6:
          return a.push("</tr></table>");
        case 7:
          return a.push("</colgroup></table>");
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    var Da = /[<\u2028\u2029]/g;
    function Ea(a) {
      return JSON.stringify(a).replace(Da, function(a2) {
        switch (a2) {
          case "<":
            return "\\u003c";
          case "\u2028":
            return "\\u2028";
          case "\u2029":
            return "\\u2029";
          default:
            throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
        }
      });
    }
    function Fa(a, b) {
      return b = b === void 0 ? "" : b, { bootstrapChunks: [], startInlineScript: "<script>", placeholderPrefix: b + "P:", segmentPrefix: b + "S:", boundaryPrefix: b + "B:", idPrefix: b, nextSuspenseID: 0, sentCompleteSegmentFunction: !1, sentCompleteBoundaryFunction: !1, sentClientRenderFunction: !1, generateStaticMarkup: a };
    }
    function Ga() {
      return { insertionMode: 1, selectedValue: null };
    }
    function Ha(a, b, c, d) {
      return c.generateStaticMarkup ? (a.push(u(b)), !1) : (b === "" ? a = d : (d && a.push("<!-- -->"), a.push(u(b)), a = !0), a);
    }
    var A = Object.assign, Ia = Symbol.for("react.element"), Ja = Symbol.for("react.portal"), Ka = Symbol.for("react.fragment"), La = Symbol.for("react.strict_mode"), Ma = Symbol.for("react.profiler"), Na = Symbol.for("react.provider"), Oa = Symbol.for("react.context"), Pa = Symbol.for("react.forward_ref"), Qa = Symbol.for("react.suspense"), Ra = Symbol.for("react.suspense_list"), Sa = Symbol.for("react.memo"), Ta = Symbol.for("react.lazy"), Ua = Symbol.for("react.scope"), Va = Symbol.for("react.debug_trace_mode"), Wa = Symbol.for("react.legacy_hidden"), Xa = Symbol.for("react.default_value"), Ya = Symbol.iterator;
    function Za(a) {
      if (a == null)
        return null;
      if (typeof a == "function")
        return a.displayName || a.name || null;
      if (typeof a == "string")
        return a;
      switch (a) {
        case Ka:
          return "Fragment";
        case Ja:
          return "Portal";
        case Ma:
          return "Profiler";
        case La:
          return "StrictMode";
        case Qa:
          return "Suspense";
        case Ra:
          return "SuspenseList";
      }
      if (typeof a == "object")
        switch (a.$$typeof) {
          case Oa:
            return (a.displayName || "Context") + ".Consumer";
          case Na:
            return (a._context.displayName || "Context") + ".Provider";
          case Pa:
            var b = a.render;
            return a = a.displayName, a || (a = b.displayName || b.name || "", a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef"), a;
          case Sa:
            return b = a.displayName || null, b !== null ? b : Za(a.type) || "Memo";
          case Ta:
            b = a._payload, a = a._init;
            try {
              return Za(a(b));
            } catch {
            }
        }
      return null;
    }
    var $a = {};
    function ab(a, b) {
      if (a = a.contextTypes, !a)
        return $a;
      var c = {}, d;
      for (d in a)
        c[d] = b[d];
      return c;
    }
    var D = null;
    function E(a, b) {
      if (a !== b) {
        a.context._currentValue2 = a.parentValue, a = a.parent;
        var c = b.parent;
        if (a === null) {
          if (c !== null)
            throw Error("The stacks must reach the root at the same time. This is a bug in React.");
        } else {
          if (c === null)
            throw Error("The stacks must reach the root at the same time. This is a bug in React.");
          E(a, c);
        }
        b.context._currentValue2 = b.value;
      }
    }
    function bb(a) {
      a.context._currentValue2 = a.parentValue, a = a.parent, a !== null && bb(a);
    }
    function cb(a) {
      var b = a.parent;
      b !== null && cb(b), a.context._currentValue2 = a.value;
    }
    function db(a, b) {
      if (a.context._currentValue2 = a.parentValue, a = a.parent, a === null)
        throw Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
      a.depth === b.depth ? E(a, b) : db(a, b);
    }
    function eb(a, b) {
      var c = b.parent;
      if (c === null)
        throw Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
      a.depth === c.depth ? E(a, c) : eb(a, c), b.context._currentValue2 = b.value;
    }
    function F(a) {
      var b = D;
      b !== a && (b === null ? cb(a) : a === null ? bb(b) : b.depth === a.depth ? E(b, a) : b.depth > a.depth ? db(b, a) : eb(b, a), D = a);
    }
    var fb = { isMounted: function() {
      return !1;
    }, enqueueSetState: function(a, b) {
      a = a._reactInternals, a.queue !== null && a.queue.push(b);
    }, enqueueReplaceState: function(a, b) {
      a = a._reactInternals, a.replace = !0, a.queue = [b];
    }, enqueueForceUpdate: function() {
    } };
    function gb(a, b, c, d) {
      var f = a.state !== void 0 ? a.state : null;
      a.updater = fb, a.props = c, a.state = f;
      var e = { queue: [], replace: !1 };
      a._reactInternals = e;
      var g = b.contextType;
      if (a.context = typeof g == "object" && g !== null ? g._currentValue2 : d, g = b.getDerivedStateFromProps, typeof g == "function" && (g = g(c, f), f = g == null ? f : A({}, f, g), a.state = f), typeof b.getDerivedStateFromProps != "function" && typeof a.getSnapshotBeforeUpdate != "function" && (typeof a.UNSAFE_componentWillMount == "function" || typeof a.componentWillMount == "function"))
        if (b = a.state, typeof a.componentWillMount == "function" && a.componentWillMount(), typeof a.UNSAFE_componentWillMount == "function" && a.UNSAFE_componentWillMount(), b !== a.state && fb.enqueueReplaceState(a, a.state, null), e.queue !== null && 0 < e.queue.length)
          if (b = e.queue, g = e.replace, e.queue = null, e.replace = !1, g && b.length === 1)
            a.state = b[0];
          else {
            for (e = g ? b[0] : a.state, f = !0, g = g ? 1 : 0; g < b.length; g++) {
              var h2 = b[g];
              h2 = typeof h2 == "function" ? h2.call(a, e, c, d) : h2, h2 != null && (f ? (f = !1, e = A({}, e, h2)) : A(e, h2));
            }
            a.state = e;
          }
        else
          e.queue = null;
    }
    var hb = { id: 1, overflow: "" };
    function ib(a, b, c) {
      var d = a.id;
      a = a.overflow;
      var f = 32 - G(d) - 1;
      d &= ~(1 << f), c += 1;
      var e = 32 - G(b) + f;
      if (30 < e) {
        var g = f - f % 5;
        return e = (d & (1 << g) - 1).toString(32), d >>= g, f -= g, { id: 1 << 32 - G(b) + f | c << f | d, overflow: e + a };
      }
      return { id: 1 << e | c << f | d, overflow: a };
    }
    var G = Math.clz32 ? Math.clz32 : jb, kb = Math.log, lb = Math.LN2;
    function jb(a) {
      return a >>>= 0, a === 0 ? 32 : 31 - (kb(a) / lb | 0) | 0;
    }
    function mb(a, b) {
      return a === b && (a !== 0 || 1 / a === 1 / b) || a !== a && b !== b;
    }
    var nb = typeof Object.is == "function" ? Object.is : mb, H = null, ob = null, I = null, J = null, K = !1, L = !1, M = 0, N = null, O = 0;
    function P() {
      if (H === null)
        throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
      return H;
    }
    function rb() {
      if (0 < O)
        throw Error("Rendered more hooks than during the previous render");
      return { memoizedState: null, queue: null, next: null };
    }
    function sb() {
      return J === null ? I === null ? (K = !1, I = J = rb()) : (K = !0, J = I) : J.next === null ? (K = !1, J = J.next = rb()) : (K = !0, J = J.next), J;
    }
    function tb() {
      ob = H = null, L = !1, I = null, O = 0, J = N = null;
    }
    function ub(a, b) {
      return typeof b == "function" ? b(a) : b;
    }
    function vb(a, b, c) {
      if (H = P(), J = sb(), K) {
        var d = J.queue;
        if (b = d.dispatch, N !== null && (c = N.get(d), c !== void 0)) {
          N.delete(d), d = J.memoizedState;
          do
            d = a(d, c.action), c = c.next;
          while (c !== null);
          return J.memoizedState = d, [d, b];
        }
        return [J.memoizedState, b];
      }
      return a = a === ub ? typeof b == "function" ? b() : b : c !== void 0 ? c(b) : b, J.memoizedState = a, a = J.queue = { last: null, dispatch: null }, a = a.dispatch = wb.bind(null, H, a), [J.memoizedState, a];
    }
    function xb(a, b) {
      if (H = P(), J = sb(), b = b === void 0 ? null : b, J !== null) {
        var c = J.memoizedState;
        if (c !== null && b !== null) {
          var d = c[1];
          a:
            if (d === null)
              d = !1;
            else {
              for (var f = 0; f < d.length && f < b.length; f++)
                if (!nb(b[f], d[f])) {
                  d = !1;
                  break a;
                }
              d = !0;
            }
          if (d)
            return c[0];
        }
      }
      return a = a(), J.memoizedState = [a, b], a;
    }
    function wb(a, b, c) {
      if (25 <= O)
        throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
      if (a === H)
        if (L = !0, a = { action: c, next: null }, N === null && (N = /* @__PURE__ */ new Map()), c = N.get(b), c === void 0)
          N.set(b, a);
        else {
          for (b = c; b.next !== null; )
            b = b.next;
          b.next = a;
        }
    }
    function yb() {
      throw Error("startTransition cannot be called during server rendering.");
    }
    function Q() {
    }
    var zb = { readContext: function(a) {
      return a._currentValue2;
    }, useContext: function(a) {
      return P(), a._currentValue2;
    }, useMemo: xb, useReducer: vb, useRef: function(a) {
      H = P(), J = sb();
      var b = J.memoizedState;
      return b === null ? (a = { current: a }, J.memoizedState = a) : b;
    }, useState: function(a) {
      return vb(ub, a);
    }, useInsertionEffect: Q, useLayoutEffect: function() {
    }, useCallback: function(a, b) {
      return xb(function() {
        return a;
      }, b);
    }, useImperativeHandle: Q, useEffect: Q, useDebugValue: Q, useDeferredValue: function(a) {
      return P(), a;
    }, useTransition: function() {
      return P(), [!1, yb];
    }, useId: function() {
      var a = ob.treeContext, b = a.overflow;
      a = a.id, a = (a & ~(1 << 32 - G(a) - 1)).toString(32) + b;
      var c = R;
      if (c === null)
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
      return b = M++, a = ":" + c.idPrefix + "R" + a, 0 < b && (a += "H" + b.toString(32)), a + ":";
    }, useMutableSource: function(a, b) {
      return P(), b(a._source);
    }, useSyncExternalStore: function(a, b, c) {
      if (c === void 0)
        throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
      return c();
    } }, R = null, Ab = ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
    function Bb(a) {
      return console.error(a), null;
    }
    function S() {
    }
    function Cb(a, b, c, d, f, e, g, h2, k) {
      var m = [], l = /* @__PURE__ */ new Set();
      return b = { destination: null, responseState: b, progressiveChunkSize: d === void 0 ? 12800 : d, status: 0, fatalError: null, nextSegmentId: 0, allPendingTasks: 0, pendingRootTasks: 0, completedRootSegment: null, abortableTasks: l, pingedTasks: m, clientRenderedBoundaries: [], completedBoundaries: [], partialBoundaries: [], onError: f === void 0 ? Bb : f, onAllReady: e === void 0 ? S : e, onShellReady: g === void 0 ? S : g, onShellError: h2 === void 0 ? S : h2, onFatalError: k === void 0 ? S : k }, c = T(b, 0, null, c, !1, !1), c.parentFlushed = !0, a = Db(b, a, null, c, l, $a, null, hb), m.push(a), b;
    }
    function Db(a, b, c, d, f, e, g, h2) {
      a.allPendingTasks++, c === null ? a.pendingRootTasks++ : c.pendingTasks++;
      var k = { node: b, ping: function() {
        var b2 = a.pingedTasks;
        b2.push(k), b2.length === 1 && Eb(a);
      }, blockedBoundary: c, blockedSegment: d, abortSet: f, legacyContext: e, context: g, treeContext: h2 };
      return f.add(k), k;
    }
    function T(a, b, c, d, f, e) {
      return { status: 0, id: -1, index: b, parentFlushed: !1, chunks: [], children: [], formatContext: d, boundary: c, lastPushedText: f, textEmbedded: e };
    }
    function U(a, b) {
      if (a = a.onError(b), a != null && typeof a != "string")
        throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof a + '" instead');
      return a;
    }
    function V(a, b) {
      var c = a.onShellError;
      c(b), c = a.onFatalError, c(b), a.destination !== null ? (a.status = 2, a.destination.destroy(b)) : (a.status = 1, a.fatalError = b);
    }
    function Fb(a, b, c, d, f) {
      for (H = {}, ob = b, M = 0, a = c(d, f); L; )
        L = !1, M = 0, O += 1, J = null, a = c(d, f);
      return tb(), a;
    }
    function Gb(a, b, c, d) {
      var f = c.render(), e = d.childContextTypes;
      if (e != null) {
        var g = b.legacyContext;
        if (typeof c.getChildContext != "function")
          d = g;
        else {
          c = c.getChildContext();
          for (var h2 in c)
            if (!(h2 in e))
              throw Error((Za(d) || "Unknown") + '.getChildContext(): key "' + h2 + '" is not defined in childContextTypes.');
          d = A({}, g, c);
        }
        b.legacyContext = d, W(a, b, f), b.legacyContext = g;
      } else
        W(a, b, f);
    }
    function Hb(a, b) {
      if (a && a.defaultProps) {
        b = A({}, b), a = a.defaultProps;
        for (var c in a)
          b[c] === void 0 && (b[c] = a[c]);
        return b;
      }
      return b;
    }
    function Ib(a, b, c, d, f) {
      if (typeof c == "function")
        if (c.prototype && c.prototype.isReactComponent) {
          f = ab(c, b.legacyContext);
          var e = c.contextType;
          e = new c(d, typeof e == "object" && e !== null ? e._currentValue2 : f), gb(e, c, d, f), Gb(a, b, e, c);
        } else {
          e = ab(c, b.legacyContext), f = Fb(a, b, c, d, e);
          var g = M !== 0;
          if (typeof f == "object" && f !== null && typeof f.render == "function" && f.$$typeof === void 0)
            gb(f, c, d, e), Gb(a, b, f, c);
          else if (g) {
            d = b.treeContext, b.treeContext = ib(d, 1, 0);
            try {
              W(a, b, f);
            } finally {
              b.treeContext = d;
            }
          } else
            W(a, b, f);
        }
      else if (typeof c == "string") {
        switch (f = b.blockedSegment, e = za(f.chunks, c, d, a.responseState, f.formatContext), f.lastPushedText = !1, g = f.formatContext, f.formatContext = sa(g, c, d), Jb(a, b, e), f.formatContext = g, c) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            f.chunks.push("</", c, ">");
        }
        f.lastPushedText = !1;
      } else {
        switch (c) {
          case Wa:
          case Va:
          case La:
          case Ma:
          case Ka:
            W(a, b, d.children);
            return;
          case Ra:
            W(a, b, d.children);
            return;
          case Ua:
            throw Error("ReactDOMServer does not yet support scope components.");
          case Qa:
            a: {
              c = b.blockedBoundary, f = b.blockedSegment, e = d.fallback, d = d.children, g = /* @__PURE__ */ new Set();
              var h2 = { id: null, rootSegmentID: -1, parentFlushed: !1, pendingTasks: 0, forceClientRender: !1, completedSegments: [], byteSize: 0, fallbackAbortableTasks: g, errorDigest: null }, k = T(a, f.chunks.length, h2, f.formatContext, !1, !1);
              f.children.push(k), f.lastPushedText = !1;
              var m = T(a, 0, null, f.formatContext, !1, !1);
              m.parentFlushed = !0, b.blockedBoundary = h2, b.blockedSegment = m;
              try {
                if (Jb(a, b, d), a.responseState.generateStaticMarkup || m.lastPushedText && m.textEmbedded && m.chunks.push("<!-- -->"), m.status = 1, X(h2, m), h2.pendingTasks === 0)
                  break a;
              } catch (l) {
                m.status = 4, h2.forceClientRender = !0, h2.errorDigest = U(a, l);
              } finally {
                b.blockedBoundary = c, b.blockedSegment = f;
              }
              b = Db(a, e, c, k, g, b.legacyContext, b.context, b.treeContext), a.pingedTasks.push(b);
            }
            return;
        }
        if (typeof c == "object" && c !== null)
          switch (c.$$typeof) {
            case Pa:
              if (d = Fb(a, b, c.render, d, f), M !== 0) {
                c = b.treeContext, b.treeContext = ib(c, 1, 0);
                try {
                  W(a, b, d);
                } finally {
                  b.treeContext = c;
                }
              } else
                W(a, b, d);
              return;
            case Sa:
              c = c.type, d = Hb(c, d), Ib(a, b, c, d, f);
              return;
            case Na:
              if (f = d.children, c = c._context, d = d.value, e = c._currentValue2, c._currentValue2 = d, g = D, D = d = { parent: g, depth: g === null ? 0 : g.depth + 1, context: c, parentValue: e, value: d }, b.context = d, W(a, b, f), a = D, a === null)
                throw Error("Tried to pop a Context at the root of the app. This is a bug in React.");
              d = a.parentValue, a.context._currentValue2 = d === Xa ? a.context._defaultValue : d, a = D = a.parent, b.context = a;
              return;
            case Oa:
              d = d.children, d = d(c._currentValue2), W(a, b, d);
              return;
            case Ta:
              f = c._init, c = f(c._payload), d = Hb(c, d), Ib(a, b, c, d, void 0);
              return;
          }
        throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((c == null ? c : typeof c) + "."));
      }
    }
    function W(a, b, c) {
      if (b.node = c, typeof c == "object" && c !== null) {
        switch (c.$$typeof) {
          case Ia:
            Ib(a, b, c.type, c.props, c.ref);
            return;
          case Ja:
            throw Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
          case Ta:
            var d = c._init;
            c = d(c._payload), W(a, b, c);
            return;
        }
        if (ra(c)) {
          Kb(a, b, c);
          return;
        }
        if (c === null || typeof c != "object" ? d = null : (d = Ya && c[Ya] || c["@@iterator"], d = typeof d == "function" ? d : null), d && (d = d.call(c))) {
          if (c = d.next(), !c.done) {
            var f = [];
            do
              f.push(c.value), c = d.next();
            while (!c.done);
            Kb(a, b, f);
          }
          return;
        }
        throw a = Object.prototype.toString.call(c), Error("Objects are not valid as a React child (found: " + (a === "[object Object]" ? "object with keys {" + Object.keys(c).join(", ") + "}" : a) + "). If you meant to render a collection of children, use an array instead.");
      }
      typeof c == "string" ? (d = b.blockedSegment, d.lastPushedText = Ha(b.blockedSegment.chunks, c, a.responseState, d.lastPushedText)) : typeof c == "number" && (d = b.blockedSegment, d.lastPushedText = Ha(
        b.blockedSegment.chunks,
        "" + c,
        a.responseState,
        d.lastPushedText
      ));
    }
    function Kb(a, b, c) {
      for (var d = c.length, f = 0; f < d; f++) {
        var e = b.treeContext;
        b.treeContext = ib(e, d, f);
        try {
          Jb(a, b, c[f]);
        } finally {
          b.treeContext = e;
        }
      }
    }
    function Jb(a, b, c) {
      var d = b.blockedSegment.formatContext, f = b.legacyContext, e = b.context;
      try {
        return W(a, b, c);
      } catch (k) {
        if (tb(), typeof k == "object" && k !== null && typeof k.then == "function") {
          c = k;
          var g = b.blockedSegment, h2 = T(a, g.chunks.length, null, g.formatContext, g.lastPushedText, !0);
          g.children.push(h2), g.lastPushedText = !1, a = Db(a, b.node, b.blockedBoundary, h2, b.abortSet, b.legacyContext, b.context, b.treeContext).ping, c.then(a, a), b.blockedSegment.formatContext = d, b.legacyContext = f, b.context = e, F(e);
        } else
          throw b.blockedSegment.formatContext = d, b.legacyContext = f, b.context = e, F(e), k;
      }
    }
    function Lb(a) {
      var b = a.blockedBoundary;
      a = a.blockedSegment, a.status = 3, Mb(this, b, a);
    }
    function Nb(a, b, c) {
      var d = a.blockedBoundary;
      a.blockedSegment.status = 3, d === null ? (b.allPendingTasks--, b.status !== 2 && (b.status = 2, b.destination !== null && b.destination.push(null))) : (d.pendingTasks--, d.forceClientRender || (d.forceClientRender = !0, d.errorDigest = b.onError(c === void 0 ? Error("The render was aborted by the server without a reason.") : c), d.parentFlushed && b.clientRenderedBoundaries.push(d)), d.fallbackAbortableTasks.forEach(function(a2) {
        return Nb(a2, b, c);
      }), d.fallbackAbortableTasks.clear(), b.allPendingTasks--, b.allPendingTasks === 0 && (a = b.onAllReady, a()));
    }
    function X(a, b) {
      if (b.chunks.length === 0 && b.children.length === 1 && b.children[0].boundary === null) {
        var c = b.children[0];
        c.id = b.id, c.parentFlushed = !0, c.status === 1 && X(a, c);
      } else
        a.completedSegments.push(b);
    }
    function Mb(a, b, c) {
      if (b === null) {
        if (c.parentFlushed) {
          if (a.completedRootSegment !== null)
            throw Error("There can only be one root segment. This is a bug in React.");
          a.completedRootSegment = c;
        }
        a.pendingRootTasks--, a.pendingRootTasks === 0 && (a.onShellError = S, b = a.onShellReady, b());
      } else
        b.pendingTasks--, b.forceClientRender || (b.pendingTasks === 0 ? (c.parentFlushed && c.status === 1 && X(b, c), b.parentFlushed && a.completedBoundaries.push(b), b.fallbackAbortableTasks.forEach(Lb, a), b.fallbackAbortableTasks.clear()) : c.parentFlushed && c.status === 1 && (X(b, c), b.completedSegments.length === 1 && b.parentFlushed && a.partialBoundaries.push(b)));
      a.allPendingTasks--, a.allPendingTasks === 0 && (a = a.onAllReady, a());
    }
    function Eb(a) {
      if (a.status !== 2) {
        var b = D, c = Ab.current;
        Ab.current = zb;
        var d = R;
        R = a.responseState;
        try {
          var f = a.pingedTasks, e;
          for (e = 0; e < f.length; e++) {
            var g = f[e], h2 = a, k = g.blockedSegment;
            if (k.status === 0) {
              F(g.context);
              try {
                W(h2, g, g.node), h2.responseState.generateStaticMarkup || k.lastPushedText && k.textEmbedded && k.chunks.push("<!-- -->"), g.abortSet.delete(g), k.status = 1, Mb(h2, g.blockedBoundary, k);
              } catch (y) {
                if (tb(), typeof y == "object" && y !== null && typeof y.then == "function") {
                  var m = g.ping;
                  y.then(m, m);
                } else {
                  g.abortSet.delete(g), k.status = 4;
                  var l = g.blockedBoundary, p2 = y, B = U(h2, p2);
                  if (l === null ? V(h2, p2) : (l.pendingTasks--, l.forceClientRender || (l.forceClientRender = !0, l.errorDigest = B, l.parentFlushed && h2.clientRenderedBoundaries.push(l))), h2.allPendingTasks--, h2.allPendingTasks === 0) {
                    var C = h2.onAllReady;
                    C();
                  }
                }
              } finally {
              }
            }
          }
          f.splice(0, e), a.destination !== null && Ob(a, a.destination);
        } catch (y) {
          U(a, y), V(a, y);
        } finally {
          R = d, Ab.current = c, c === zb && F(b);
        }
      }
    }
    function Y(a, b, c) {
      switch (c.parentFlushed = !0, c.status) {
        case 0:
          var d = c.id = a.nextSegmentId++;
          return c.lastPushedText = !1, c.textEmbedded = !1, a = a.responseState, b.push('<template id="'), b.push(a.placeholderPrefix), a = d.toString(16), b.push(a), b.push('"></template>');
        case 1:
          c.status = 2;
          var f = !0;
          d = c.chunks;
          var e = 0;
          c = c.children;
          for (var g = 0; g < c.length; g++) {
            for (f = c[g]; e < f.index; e++)
              b.push(d[e]);
            f = Z(a, b, f);
          }
          for (; e < d.length - 1; e++)
            b.push(d[e]);
          return e < d.length && (f = b.push(d[e])), f;
        default:
          throw Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
      }
    }
    function Z(a, b, c) {
      var d = c.boundary;
      if (d === null)
        return Y(a, b, c);
      if (d.parentFlushed = !0, d.forceClientRender)
        return a.responseState.generateStaticMarkup || (d = d.errorDigest, b.push("<!--$!-->"), b.push("<template"), d && (b.push(' data-dgst="'), d = u(d), b.push(d), b.push('"')), b.push("></template>")), Y(a, b, c), a = a.responseState.generateStaticMarkup ? !0 : b.push("<!--/$-->"), a;
      if (0 < d.pendingTasks) {
        d.rootSegmentID = a.nextSegmentId++, 0 < d.completedSegments.length && a.partialBoundaries.push(d);
        var f = a.responseState, e = f.nextSuspenseID++;
        return f = f.boundaryPrefix + e.toString(16), d = d.id = f, Aa(b, a.responseState, d), Y(a, b, c), b.push("<!--/$-->");
      }
      if (d.byteSize > a.progressiveChunkSize)
        return d.rootSegmentID = a.nextSegmentId++, a.completedBoundaries.push(d), Aa(b, a.responseState, d.id), Y(a, b, c), b.push("<!--/$-->");
      if (a.responseState.generateStaticMarkup || b.push("<!--$-->"), c = d.completedSegments, c.length !== 1)
        throw Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
      return Z(a, b, c[0]), a = a.responseState.generateStaticMarkup ? !0 : b.push("<!--/$-->"), a;
    }
    function Pb(a, b, c) {
      return Ba(b, a.responseState, c.formatContext, c.id), Z(a, b, c), Ca(b, c.formatContext);
    }
    function Qb(a, b, c) {
      for (var d = c.completedSegments, f = 0; f < d.length; f++)
        Rb(a, b, c, d[f]);
      if (d.length = 0, a = a.responseState, d = c.id, c = c.rootSegmentID, b.push(a.startInlineScript), a.sentCompleteBoundaryFunction ? b.push('$RC("') : (a.sentCompleteBoundaryFunction = !0, b.push('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("')), d === null)
        throw Error("An ID must have been assigned before we can complete the boundary.");
      return c = c.toString(16), b.push(d), b.push('","'), b.push(a.segmentPrefix), b.push(c), b.push('")</script>');
    }
    function Rb(a, b, c, d) {
      if (d.status === 2)
        return !0;
      var f = d.id;
      if (f === -1) {
        if ((d.id = c.rootSegmentID) === -1)
          throw Error("A root segment ID must have been assigned by now. This is a bug in React.");
        return Pb(a, b, d);
      }
      return Pb(a, b, d), a = a.responseState, b.push(a.startInlineScript), a.sentCompleteSegmentFunction ? b.push('$RS("') : (a.sentCompleteSegmentFunction = !0, b.push('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("')), b.push(a.segmentPrefix), f = f.toString(16), b.push(f), b.push('","'), b.push(a.placeholderPrefix), b.push(f), b.push('")</script>');
    }
    function Ob(a, b) {
      try {
        var c = a.completedRootSegment;
        if (c !== null && a.pendingRootTasks === 0) {
          Z(a, b, c), a.completedRootSegment = null;
          var d = a.responseState.bootstrapChunks;
          for (c = 0; c < d.length - 1; c++)
            b.push(d[c]);
          c < d.length && b.push(d[c]);
        }
        var f = a.clientRenderedBoundaries, e;
        for (e = 0; e < f.length; e++) {
          var g = f[e];
          d = b;
          var h2 = a.responseState, k = g.id, m = g.errorDigest, l = g.errorMessage, p2 = g.errorComponentStack;
          if (d.push(h2.startInlineScript), h2.sentClientRenderFunction ? d.push('$RX("') : (h2.sentClientRenderFunction = !0, d.push('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("')), k === null)
            throw Error("An ID must have been assigned before we can complete the boundary.");
          if (d.push(k), d.push('"'), m || l || p2) {
            d.push(",");
            var B = Ea(m || "");
            d.push(B);
          }
          if (l || p2) {
            d.push(",");
            var C = Ea(l || "");
            d.push(C);
          }
          if (p2) {
            d.push(",");
            var y = Ea(p2);
            d.push(y);
          }
          if (!d.push(")</script>")) {
            a.destination = null, e++, f.splice(0, e);
            return;
          }
        }
        f.splice(0, e);
        var aa = a.completedBoundaries;
        for (e = 0; e < aa.length; e++)
          if (!Qb(a, b, aa[e])) {
            a.destination = null, e++, aa.splice(0, e);
            return;
          }
        aa.splice(0, e);
        var ba = a.partialBoundaries;
        for (e = 0; e < ba.length; e++) {
          var pb = ba[e];
          a: {
            f = a, g = b;
            var ca = pb.completedSegments;
            for (h2 = 0; h2 < ca.length; h2++)
              if (!Rb(f, g, pb, ca[h2])) {
                h2++, ca.splice(0, h2);
                var qb = !1;
                break a;
              }
            ca.splice(0, h2), qb = !0;
          }
          if (!qb) {
            a.destination = null, e++, ba.splice(0, e);
            return;
          }
        }
        ba.splice(0, e);
        var da = a.completedBoundaries;
        for (e = 0; e < da.length; e++)
          if (!Qb(a, b, da[e])) {
            a.destination = null, e++, da.splice(0, e);
            return;
          }
        da.splice(0, e);
      } finally {
        a.allPendingTasks === 0 && a.pingedTasks.length === 0 && a.clientRenderedBoundaries.length === 0 && a.completedBoundaries.length === 0 && b.push(null);
      }
    }
    function Sb(a, b) {
      if (a.status === 1)
        a.status = 2, b.destroy(a.fatalError);
      else if (a.status !== 2 && a.destination === null) {
        a.destination = b;
        try {
          Ob(a, b);
        } catch (c) {
          U(a, c), V(a, c);
        }
      }
    }
    function Tb(a, b) {
      try {
        var c = a.abortableTasks;
        c.forEach(function(c2) {
          return Nb(c2, a, b);
        }), c.clear(), a.destination !== null && Ob(a, a.destination);
      } catch (d) {
        U(a, d), V(a, d);
      }
    }
    function Ub() {
    }
    function Vb(a, b, c, d) {
      var f = !1, e = null, g = "", h2 = !1;
      if (a = Cb(a, Fa(c, b ? b.identifierPrefix : void 0), Ga(), 1 / 0, Ub, void 0, function() {
        h2 = !0;
      }, void 0, void 0), Eb(a), Tb(a, d), Sb(a, { push: function(a2) {
        return a2 !== null && (g += a2), !0;
      }, destroy: function(a2) {
        f = !0, e = a2;
      } }), f)
        throw e;
      if (!h2)
        throw Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
      return g;
    }
    function Wb(a, b) {
      a.prototype = Object.create(b.prototype), a.prototype.constructor = a, a.__proto__ = b;
    }
    var Xb = function(a) {
      function b() {
        var b2 = a.call(this, {}) || this;
        return b2.request = null, b2.startedFlowing = !1, b2;
      }
      Wb(b, a);
      var c = b.prototype;
      return c._destroy = function(a2, b2) {
        Tb(this.request), b2(a2);
      }, c._read = function() {
        this.startedFlowing && Sb(this.request, this);
      }, b;
    }(fa.Readable);
    function Yb() {
    }
    function Zb(a, b) {
      var c = new Xb(), d = Cb(a, Fa(!1, b ? b.identifierPrefix : void 0), Ga(), 1 / 0, Yb, function() {
        c.startedFlowing = !0, Sb(d, c);
      }, void 0, void 0);
      return c.request = d, Eb(d), c;
    }
    exports2.renderToNodeStream = function(a, b) {
      return Zb(a, b);
    };
    exports2.renderToStaticMarkup = function(a, b) {
      return Vb(a, b, !0, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server');
    };
    exports2.renderToStaticNodeStream = function(a, b) {
      return Zb(a, b);
    };
    exports2.renderToString = function(a, b) {
      return Vb(a, b, !1, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server');
    };
    exports2.version = "18.2.0";
  }
});

// node_modules/react-dom/cjs/react-dom-server.node.production.min.js
var require_react_dom_server_node_production_min = __commonJS({
  "node_modules/react-dom/cjs/react-dom-server.node.production.min.js"(exports2) {
    "use strict";
    var aa = require("util"), ba = require_react(), k = null, l = 0, q = !0;
    function r(a, b) {
      if (typeof b == "string") {
        if (b.length !== 0)
          if (2048 < 3 * b.length)
            0 < l && (t(a, k.subarray(0, l)), k = new Uint8Array(2048), l = 0), t(a, u.encode(b));
          else {
            var c = k;
            0 < l && (c = k.subarray(l)), c = u.encodeInto(b, c);
            var d = c.read;
            l += c.written, d < b.length && (t(a, k), k = new Uint8Array(2048), l = u.encodeInto(b.slice(d), k).written), l === 2048 && (t(a, k), k = new Uint8Array(2048), l = 0);
          }
      } else
        b.byteLength !== 0 && (2048 < b.byteLength ? (0 < l && (t(a, k.subarray(0, l)), k = new Uint8Array(2048), l = 0), t(a, b)) : (c = k.length - l, c < b.byteLength && (c === 0 ? t(
          a,
          k
        ) : (k.set(b.subarray(0, c), l), l += c, t(a, k), b = b.subarray(c)), k = new Uint8Array(2048), l = 0), k.set(b, l), l += b.byteLength, l === 2048 && (t(a, k), k = new Uint8Array(2048), l = 0)));
    }
    function t(a, b) {
      a = a.write(b), q = q && a;
    }
    function w(a, b) {
      return r(a, b), q;
    }
    function ca(a) {
      k && 0 < l && a.write(k.subarray(0, l)), k = null, l = 0, q = !0;
    }
    var u = new aa.TextEncoder();
    function x(a) {
      return u.encode(a);
    }
    var y = Object.prototype.hasOwnProperty, da = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ea = {}, fa = {};
    function ha(a) {
      return y.call(fa, a) ? !0 : y.call(ea, a) ? !1 : da.test(a) ? fa[a] = !0 : (ea[a] = !0, !1);
    }
    function z(a, b, c, d, f, e, g) {
      this.acceptsBooleans = b === 2 || b === 3 || b === 4, this.attributeName = d, this.attributeNamespace = f, this.mustUseProperty = c, this.propertyName = a, this.type = b, this.sanitizeURL = e, this.removeEmptyString = g;
    }
    var A = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
      A[a] = new z(a, 0, !1, a, null, !1, !1);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
      var b = a[0];
      A[b] = new z(b, 1, !1, a[1], null, !1, !1);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
      A[a] = new z(a, 2, !1, a.toLowerCase(), null, !1, !1);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
      A[a] = new z(a, 2, !1, a, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
      A[a] = new z(a, 3, !1, a.toLowerCase(), null, !1, !1);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a) {
      A[a] = new z(a, 3, !0, a, null, !1, !1);
    });
    ["capture", "download"].forEach(function(a) {
      A[a] = new z(a, 4, !1, a, null, !1, !1);
    });
    ["cols", "rows", "size", "span"].forEach(function(a) {
      A[a] = new z(a, 6, !1, a, null, !1, !1);
    });
    ["rowSpan", "start"].forEach(function(a) {
      A[a] = new z(a, 5, !1, a.toLowerCase(), null, !1, !1);
    });
    var ia = /[\-:]([a-z])/g;
    function ja(a) {
      return a[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
      var b = a.replace(
        ia,
        ja
      );
      A[b] = new z(b, 1, !1, a, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
      var b = a.replace(ia, ja);
      A[b] = new z(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
      var b = a.replace(ia, ja);
      A[b] = new z(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a) {
      A[a] = new z(a, 1, !1, a.toLowerCase(), null, !1, !1);
    });
    A.xlinkHref = new z("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(a) {
      A[a] = new z(a, 1, !1, a.toLowerCase(), null, !0, !0);
    });
    var B = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    }, ka = ["Webkit", "ms", "Moz", "O"];
    Object.keys(B).forEach(function(a) {
      ka.forEach(function(b) {
        b = b + a.charAt(0).toUpperCase() + a.substring(1), B[b] = B[a];
      });
    });
    var la = /["'&<>]/;
    function F(a) {
      if (typeof a == "boolean" || typeof a == "number")
        return "" + a;
      a = "" + a;
      var b = la.exec(a);
      if (b) {
        var c = "", d, f = 0;
        for (d = b.index; d < a.length; d++) {
          switch (a.charCodeAt(d)) {
            case 34:
              b = "&quot;";
              break;
            case 38:
              b = "&amp;";
              break;
            case 39:
              b = "&#x27;";
              break;
            case 60:
              b = "&lt;";
              break;
            case 62:
              b = "&gt;";
              break;
            default:
              continue;
          }
          f !== d && (c += a.substring(f, d)), f = d + 1, c += b;
        }
        a = f !== d ? c + a.substring(f, d) : c;
      }
      return a;
    }
    var ma = /([A-Z])/g, pa = /^ms-/, qa = Array.isArray, ra = x("<script>"), sa = x("</script>"), ta = x('<script src="'), ua = x('<script type="module" src="'), va = x('" async=""></script>'), wa = /(<\/|<)(s)(cript)/gi;
    function xa(a, b, c, d) {
      return "" + b + (c === "s" ? "\\u0073" : "\\u0053") + d;
    }
    function G(a, b) {
      return { insertionMode: a, selectedValue: b };
    }
    function ya(a, b, c) {
      switch (b) {
        case "select":
          return G(1, c.value != null ? c.value : c.defaultValue);
        case "svg":
          return G(2, null);
        case "math":
          return G(3, null);
        case "foreignObject":
          return G(1, null);
        case "table":
          return G(4, null);
        case "thead":
        case "tbody":
        case "tfoot":
          return G(5, null);
        case "colgroup":
          return G(7, null);
        case "tr":
          return G(6, null);
      }
      return 4 <= a.insertionMode || a.insertionMode === 0 ? G(1, null) : a;
    }
    var za = x("<!-- -->");
    function Aa(a, b, c, d) {
      return b === "" ? d : (d && a.push(za), a.push(F(b)), !0);
    }
    var Ba = /* @__PURE__ */ new Map(), Ca = x(' style="'), Da = x(":"), Ea = x(";");
    function Fa(a, b, c) {
      if (typeof c != "object")
        throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      b = !0;
      for (var d in c)
        if (y.call(c, d)) {
          var f = c[d];
          if (f != null && typeof f != "boolean" && f !== "") {
            if (d.indexOf("--") === 0) {
              var e = F(d);
              f = F(("" + f).trim());
            } else {
              e = d;
              var g = Ba.get(e);
              g !== void 0 || (g = x(F(e.replace(ma, "-$1").toLowerCase().replace(pa, "-ms-"))), Ba.set(e, g)), e = g, f = typeof f == "number" ? f === 0 || y.call(
                B,
                d
              ) ? "" + f : f + "px" : F(("" + f).trim());
            }
            b ? (b = !1, a.push(Ca, e, Da, f)) : a.push(Ea, e, Da, f);
          }
        }
      b || a.push(H);
    }
    var I = x(" "), J = x('="'), H = x('"'), Ga = x('=""');
    function K(a, b, c, d) {
      switch (c) {
        case "style":
          Fa(a, b, d);
          return;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
          return;
      }
      if (!(2 < c.length) || c[0] !== "o" && c[0] !== "O" || c[1] !== "n" && c[1] !== "N") {
        if (b = A.hasOwnProperty(c) ? A[c] : null, b !== null) {
          switch (typeof d) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (!b.acceptsBooleans)
                return;
          }
          switch (c = b.attributeName, b.type) {
            case 3:
              d && a.push(I, c, Ga);
              break;
            case 4:
              d === !0 ? a.push(I, c, Ga) : d !== !1 && a.push(I, c, J, F(d), H);
              break;
            case 5:
              isNaN(d) || a.push(I, c, J, F(d), H);
              break;
            case 6:
              !isNaN(d) && 1 <= d && a.push(I, c, J, F(d), H);
              break;
            default:
              b.sanitizeURL && (d = "" + d), a.push(I, c, J, F(d), H);
          }
        } else if (ha(c)) {
          switch (typeof d) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (b = c.toLowerCase().slice(0, 5), b !== "data-" && b !== "aria-")
                return;
          }
          a.push(I, c, J, F(d), H);
        }
      }
    }
    var L = x(">"), Ha = x("/>");
    function M(a, b, c) {
      if (b != null) {
        if (c != null)
          throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
        if (typeof b != "object" || !("__html" in b))
          throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        b = b.__html, b != null && a.push("" + b);
      }
    }
    function Ia(a) {
      var b = "";
      return ba.Children.forEach(a, function(a2) {
        a2 != null && (b += a2);
      }), b;
    }
    var Ja = x(' selected=""');
    function Ka(a, b, c, d) {
      a.push(N(c));
      var f = c = null, e;
      for (e in b)
        if (y.call(b, e)) {
          var g = b[e];
          if (g != null)
            switch (e) {
              case "children":
                c = g;
                break;
              case "dangerouslySetInnerHTML":
                f = g;
                break;
              default:
                K(a, d, e, g);
            }
        }
      return a.push(L), M(a, f, c), typeof c == "string" ? (a.push(F(c)), null) : c;
    }
    var La = x(`
`), Ma = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, Na = /* @__PURE__ */ new Map();
    function N(a) {
      var b = Na.get(a);
      if (b === void 0) {
        if (!Ma.test(a))
          throw Error("Invalid tag: " + a);
        b = x("<" + a), Na.set(a, b);
      }
      return b;
    }
    var Oa = x("<!DOCTYPE html>");
    function Pa(a, b, c, d, f) {
      switch (b) {
        case "select":
          a.push(N("select"));
          var e = null, g = null;
          for (p2 in c)
            if (y.call(c, p2)) {
              var h2 = c[p2];
              if (h2 != null)
                switch (p2) {
                  case "children":
                    e = h2;
                    break;
                  case "dangerouslySetInnerHTML":
                    g = h2;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    K(a, d, p2, h2);
                }
            }
          return a.push(L), M(a, g, e), e;
        case "option":
          g = f.selectedValue, a.push(N("option"));
          var m = h2 = null, n = null, p2 = null;
          for (e in c)
            if (y.call(c, e)) {
              var v = c[e];
              if (v != null)
                switch (e) {
                  case "children":
                    h2 = v;
                    break;
                  case "selected":
                    n = v;
                    break;
                  case "dangerouslySetInnerHTML":
                    p2 = v;
                    break;
                  case "value":
                    m = v;
                  default:
                    K(a, d, e, v);
                }
            }
          if (g != null)
            if (c = m !== null ? "" + m : Ia(h2), qa(g)) {
              for (d = 0; d < g.length; d++)
                if ("" + g[d] === c) {
                  a.push(Ja);
                  break;
                }
            } else
              "" + g === c && a.push(Ja);
          else
            n && a.push(Ja);
          return a.push(L), M(a, p2, h2), h2;
        case "textarea":
          a.push(N("textarea")), p2 = g = e = null;
          for (h2 in c)
            if (y.call(c, h2) && (m = c[h2], m != null))
              switch (h2) {
                case "children":
                  p2 = m;
                  break;
                case "value":
                  e = m;
                  break;
                case "defaultValue":
                  g = m;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  K(a, d, h2, m);
              }
          if (e === null && g !== null && (e = g), a.push(L), p2 != null) {
            if (e != null)
              throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (qa(p2) && 1 < p2.length)
              throw Error("<textarea> can only have at most one child.");
            e = "" + p2;
          }
          return typeof e == "string" && e[0] === `
` && a.push(La), e !== null && a.push(F("" + e)), null;
        case "input":
          a.push(N("input")), m = p2 = h2 = e = null;
          for (g in c)
            if (y.call(c, g) && (n = c[g], n != null))
              switch (g) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  m = n;
                  break;
                case "defaultValue":
                  h2 = n;
                  break;
                case "checked":
                  p2 = n;
                  break;
                case "value":
                  e = n;
                  break;
                default:
                  K(a, d, g, n);
              }
          return p2 !== null ? K(a, d, "checked", p2) : m !== null && K(a, d, "checked", m), e !== null ? K(a, d, "value", e) : h2 !== null && K(a, d, "value", h2), a.push(Ha), null;
        case "menuitem":
          a.push(N("menuitem"));
          for (var C in c)
            if (y.call(c, C) && (e = c[C], e != null))
              switch (C) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  K(a, d, C, e);
              }
          return a.push(L), null;
        case "title":
          a.push(N("title")), e = null;
          for (v in c)
            if (y.call(c, v) && (g = c[v], g != null))
              switch (v) {
                case "children":
                  e = g;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  K(a, d, v, g);
              }
          return a.push(L), e;
        case "listing":
        case "pre":
          a.push(N(b)), g = e = null;
          for (m in c)
            if (y.call(c, m) && (h2 = c[m], h2 != null))
              switch (m) {
                case "children":
                  e = h2;
                  break;
                case "dangerouslySetInnerHTML":
                  g = h2;
                  break;
                default:
                  K(a, d, m, h2);
              }
          if (a.push(L), g != null) {
            if (e != null)
              throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (typeof g != "object" || !("__html" in g))
              throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            c = g.__html, c != null && (typeof c == "string" && 0 < c.length && c[0] === `
` ? a.push(La, c) : a.push("" + c));
          }
          return typeof e == "string" && e[0] === `
` && a.push(La), e;
        case "area":
        case "base":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "img":
        case "keygen":
        case "link":
        case "meta":
        case "param":
        case "source":
        case "track":
        case "wbr":
          a.push(N(b));
          for (var D in c)
            if (y.call(c, D) && (e = c[D], e != null))
              switch (D) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(b + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  K(a, d, D, e);
              }
          return a.push(Ha), null;
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return Ka(a, c, b, d);
        case "html":
          return f.insertionMode === 0 && a.push(Oa), Ka(
            a,
            c,
            b,
            d
          );
        default:
          if (b.indexOf("-") === -1 && typeof c.is != "string")
            return Ka(a, c, b, d);
          a.push(N(b)), g = e = null;
          for (n in c)
            if (y.call(c, n) && (h2 = c[n], h2 != null))
              switch (n) {
                case "children":
                  e = h2;
                  break;
                case "dangerouslySetInnerHTML":
                  g = h2;
                  break;
                case "style":
                  Fa(a, d, h2);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  ha(n) && typeof h2 != "function" && typeof h2 != "symbol" && a.push(I, n, J, F(h2), H);
              }
          return a.push(L), M(a, g, e), e;
      }
    }
    var Qa = x("</"), Ra = x(">"), Sa = x('<template id="'), Ta = x('"></template>'), Ua = x("<!--$-->"), Va = x('<!--$?--><template id="'), Wa = x('"></template>'), Xa = x("<!--$!-->"), Ya = x("<!--/$-->"), Za = x("<template"), $a = x('"'), ab = x(' data-dgst="');
    x(' data-msg="');
    x(' data-stck="');
    var bb = x("></template>");
    function cb(a, b, c) {
      if (r(a, Va), c === null)
        throw Error("An ID must have been assigned before we can complete the boundary.");
      return r(a, c), w(a, Wa);
    }
    var db = x('<div hidden id="'), eb = x('">'), fb = x("</div>"), gb = x('<svg aria-hidden="true" style="display:none" id="'), hb = x('">'), ib = x("</svg>"), jb = x('<math aria-hidden="true" style="display:none" id="'), kb = x('">'), lb = x("</math>"), mb = x('<table hidden id="'), nb = x('">'), ob = x("</table>"), pb = x('<table hidden><tbody id="'), qb = x('">'), rb = x("</tbody></table>"), sb = x('<table hidden><tr id="'), tb = x('">'), ub = x("</tr></table>"), vb = x('<table hidden><colgroup id="'), wb = x('">'), xb = x("</colgroup></table>");
    function yb(a, b, c, d) {
      switch (c.insertionMode) {
        case 0:
        case 1:
          return r(a, db), r(a, b.segmentPrefix), r(a, d.toString(16)), w(a, eb);
        case 2:
          return r(a, gb), r(a, b.segmentPrefix), r(a, d.toString(16)), w(a, hb);
        case 3:
          return r(a, jb), r(a, b.segmentPrefix), r(a, d.toString(16)), w(a, kb);
        case 4:
          return r(a, mb), r(a, b.segmentPrefix), r(a, d.toString(16)), w(a, nb);
        case 5:
          return r(a, pb), r(a, b.segmentPrefix), r(a, d.toString(16)), w(a, qb);
        case 6:
          return r(a, sb), r(a, b.segmentPrefix), r(a, d.toString(16)), w(a, tb);
        case 7:
          return r(a, vb), r(
            a,
            b.segmentPrefix
          ), r(a, d.toString(16)), w(a, wb);
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    function zb(a, b) {
      switch (b.insertionMode) {
        case 0:
        case 1:
          return w(a, fb);
        case 2:
          return w(a, ib);
        case 3:
          return w(a, lb);
        case 4:
          return w(a, ob);
        case 5:
          return w(a, rb);
        case 6:
          return w(a, ub);
        case 7:
          return w(a, xb);
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    var Ab = x('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'), Bb = x('$RS("'), Cb = x('","'), Db = x('")</script>'), Fb = x('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'), Gb = x('$RC("'), Hb = x('","'), Ib = x('")</script>'), Jb = x('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("'), Kb = x('$RX("'), Lb = x('"'), Mb = x(")</script>"), Nb = x(","), Ob = /[<\u2028\u2029]/g;
    function Pb(a) {
      return JSON.stringify(a).replace(Ob, function(a2) {
        switch (a2) {
          case "<":
            return "\\u003c";
          case "\u2028":
            return "\\u2028";
          case "\u2029":
            return "\\u2029";
          default:
            throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
        }
      });
    }
    var O = Object.assign, Qb = Symbol.for("react.element"), Rb = Symbol.for("react.portal"), Sb = Symbol.for("react.fragment"), Tb = Symbol.for("react.strict_mode"), Ub = Symbol.for("react.profiler"), Vb = Symbol.for("react.provider"), Wb = Symbol.for("react.context"), Xb = Symbol.for("react.forward_ref"), Yb = Symbol.for("react.suspense"), Zb = Symbol.for("react.suspense_list"), $b = Symbol.for("react.memo"), ac = Symbol.for("react.lazy"), bc = Symbol.for("react.scope"), cc = Symbol.for("react.debug_trace_mode"), dc = Symbol.for("react.legacy_hidden"), ec = Symbol.for("react.default_value"), fc = Symbol.iterator;
    function gc(a) {
      if (a == null)
        return null;
      if (typeof a == "function")
        return a.displayName || a.name || null;
      if (typeof a == "string")
        return a;
      switch (a) {
        case Sb:
          return "Fragment";
        case Rb:
          return "Portal";
        case Ub:
          return "Profiler";
        case Tb:
          return "StrictMode";
        case Yb:
          return "Suspense";
        case Zb:
          return "SuspenseList";
      }
      if (typeof a == "object")
        switch (a.$$typeof) {
          case Wb:
            return (a.displayName || "Context") + ".Consumer";
          case Vb:
            return (a._context.displayName || "Context") + ".Provider";
          case Xb:
            var b = a.render;
            return a = a.displayName, a || (a = b.displayName || b.name || "", a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef"), a;
          case $b:
            return b = a.displayName || null, b !== null ? b : gc(a.type) || "Memo";
          case ac:
            b = a._payload, a = a._init;
            try {
              return gc(a(b));
            } catch {
            }
        }
      return null;
    }
    var hc = {};
    function ic(a, b) {
      if (a = a.contextTypes, !a)
        return hc;
      var c = {}, d;
      for (d in a)
        c[d] = b[d];
      return c;
    }
    var P = null;
    function Q(a, b) {
      if (a !== b) {
        a.context._currentValue = a.parentValue, a = a.parent;
        var c = b.parent;
        if (a === null) {
          if (c !== null)
            throw Error("The stacks must reach the root at the same time. This is a bug in React.");
        } else {
          if (c === null)
            throw Error("The stacks must reach the root at the same time. This is a bug in React.");
          Q(a, c);
        }
        b.context._currentValue = b.value;
      }
    }
    function jc(a) {
      a.context._currentValue = a.parentValue, a = a.parent, a !== null && jc(a);
    }
    function kc(a) {
      var b = a.parent;
      b !== null && kc(b), a.context._currentValue = a.value;
    }
    function lc(a, b) {
      if (a.context._currentValue = a.parentValue, a = a.parent, a === null)
        throw Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
      a.depth === b.depth ? Q(a, b) : lc(a, b);
    }
    function mc(a, b) {
      var c = b.parent;
      if (c === null)
        throw Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
      a.depth === c.depth ? Q(a, c) : mc(a, c), b.context._currentValue = b.value;
    }
    function nc(a) {
      var b = P;
      b !== a && (b === null ? kc(a) : a === null ? jc(b) : b.depth === a.depth ? Q(b, a) : b.depth > a.depth ? lc(b, a) : mc(b, a), P = a);
    }
    var oc = { isMounted: function() {
      return !1;
    }, enqueueSetState: function(a, b) {
      a = a._reactInternals, a.queue !== null && a.queue.push(b);
    }, enqueueReplaceState: function(a, b) {
      a = a._reactInternals, a.replace = !0, a.queue = [b];
    }, enqueueForceUpdate: function() {
    } };
    function pc(a, b, c, d) {
      var f = a.state !== void 0 ? a.state : null;
      a.updater = oc, a.props = c, a.state = f;
      var e = { queue: [], replace: !1 };
      a._reactInternals = e;
      var g = b.contextType;
      if (a.context = typeof g == "object" && g !== null ? g._currentValue : d, g = b.getDerivedStateFromProps, typeof g == "function" && (g = g(c, f), f = g == null ? f : O({}, f, g), a.state = f), typeof b.getDerivedStateFromProps != "function" && typeof a.getSnapshotBeforeUpdate != "function" && (typeof a.UNSAFE_componentWillMount == "function" || typeof a.componentWillMount == "function"))
        if (b = a.state, typeof a.componentWillMount == "function" && a.componentWillMount(), typeof a.UNSAFE_componentWillMount == "function" && a.UNSAFE_componentWillMount(), b !== a.state && oc.enqueueReplaceState(a, a.state, null), e.queue !== null && 0 < e.queue.length)
          if (b = e.queue, g = e.replace, e.queue = null, e.replace = !1, g && b.length === 1)
            a.state = b[0];
          else {
            for (e = g ? b[0] : a.state, f = !0, g = g ? 1 : 0; g < b.length; g++) {
              var h2 = b[g];
              h2 = typeof h2 == "function" ? h2.call(a, e, c, d) : h2, h2 != null && (f ? (f = !1, e = O({}, e, h2)) : O(e, h2));
            }
            a.state = e;
          }
        else
          e.queue = null;
    }
    var qc = { id: 1, overflow: "" };
    function rc(a, b, c) {
      var d = a.id;
      a = a.overflow;
      var f = 32 - sc(d) - 1;
      d &= ~(1 << f), c += 1;
      var e = 32 - sc(b) + f;
      if (30 < e) {
        var g = f - f % 5;
        return e = (d & (1 << g) - 1).toString(32), d >>= g, f -= g, { id: 1 << 32 - sc(b) + f | c << f | d, overflow: e + a };
      }
      return { id: 1 << e | c << f | d, overflow: a };
    }
    var sc = Math.clz32 ? Math.clz32 : tc, uc = Math.log, vc = Math.LN2;
    function tc(a) {
      return a >>>= 0, a === 0 ? 32 : 31 - (uc(a) / vc | 0) | 0;
    }
    function wc(a, b) {
      return a === b && (a !== 0 || 1 / a === 1 / b) || a !== a && b !== b;
    }
    var xc = typeof Object.is == "function" ? Object.is : wc, R = null, yc = null, zc = null, S = null, T = !1, Ac = !1, U = 0, V = null, Bc = 0;
    function W() {
      if (R === null)
        throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
      return R;
    }
    function Cc() {
      if (0 < Bc)
        throw Error("Rendered more hooks than during the previous render");
      return { memoizedState: null, queue: null, next: null };
    }
    function Dc() {
      return S === null ? zc === null ? (T = !1, zc = S = Cc()) : (T = !0, S = zc) : S.next === null ? (T = !1, S = S.next = Cc()) : (T = !0, S = S.next), S;
    }
    function Ec() {
      yc = R = null, Ac = !1, zc = null, Bc = 0, S = V = null;
    }
    function Fc(a, b) {
      return typeof b == "function" ? b(a) : b;
    }
    function Gc(a, b, c) {
      if (R = W(), S = Dc(), T) {
        var d = S.queue;
        if (b = d.dispatch, V !== null && (c = V.get(d), c !== void 0)) {
          V.delete(d), d = S.memoizedState;
          do
            d = a(d, c.action), c = c.next;
          while (c !== null);
          return S.memoizedState = d, [d, b];
        }
        return [S.memoizedState, b];
      }
      return a = a === Fc ? typeof b == "function" ? b() : b : c !== void 0 ? c(b) : b, S.memoizedState = a, a = S.queue = { last: null, dispatch: null }, a = a.dispatch = Hc.bind(null, R, a), [S.memoizedState, a];
    }
    function Ic(a, b) {
      if (R = W(), S = Dc(), b = b === void 0 ? null : b, S !== null) {
        var c = S.memoizedState;
        if (c !== null && b !== null) {
          var d = c[1];
          a:
            if (d === null)
              d = !1;
            else {
              for (var f = 0; f < d.length && f < b.length; f++)
                if (!xc(b[f], d[f])) {
                  d = !1;
                  break a;
                }
              d = !0;
            }
          if (d)
            return c[0];
        }
      }
      return a = a(), S.memoizedState = [a, b], a;
    }
    function Hc(a, b, c) {
      if (25 <= Bc)
        throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
      if (a === R)
        if (Ac = !0, a = { action: c, next: null }, V === null && (V = /* @__PURE__ */ new Map()), c = V.get(b), c === void 0)
          V.set(b, a);
        else {
          for (b = c; b.next !== null; )
            b = b.next;
          b.next = a;
        }
    }
    function Jc() {
      throw Error("startTransition cannot be called during server rendering.");
    }
    function Kc() {
    }
    var Mc = { readContext: function(a) {
      return a._currentValue;
    }, useContext: function(a) {
      return W(), a._currentValue;
    }, useMemo: Ic, useReducer: Gc, useRef: function(a) {
      R = W(), S = Dc();
      var b = S.memoizedState;
      return b === null ? (a = { current: a }, S.memoizedState = a) : b;
    }, useState: function(a) {
      return Gc(Fc, a);
    }, useInsertionEffect: Kc, useLayoutEffect: function() {
    }, useCallback: function(a, b) {
      return Ic(function() {
        return a;
      }, b);
    }, useImperativeHandle: Kc, useEffect: Kc, useDebugValue: Kc, useDeferredValue: function(a) {
      return W(), a;
    }, useTransition: function() {
      return W(), [!1, Jc];
    }, useId: function() {
      var a = yc.treeContext, b = a.overflow;
      a = a.id, a = (a & ~(1 << 32 - sc(a) - 1)).toString(32) + b;
      var c = Lc;
      if (c === null)
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
      return b = U++, a = ":" + c.idPrefix + "R" + a, 0 < b && (a += "H" + b.toString(32)), a + ":";
    }, useMutableSource: function(a, b) {
      return W(), b(a._source);
    }, useSyncExternalStore: function(a, b, c) {
      if (c === void 0)
        throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
      return c();
    } }, Lc = null, Nc = ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
    function Oc(a) {
      return console.error(a), null;
    }
    function X() {
    }
    function Pc(a, b) {
      var c = a.pingedTasks;
      c.push(b), c.length === 1 && setImmediate(function() {
        return Qc(a);
      });
    }
    function Rc(a, b, c, d, f, e, g, h2) {
      a.allPendingTasks++, c === null ? a.pendingRootTasks++ : c.pendingTasks++;
      var m = { node: b, ping: function() {
        return Pc(a, m);
      }, blockedBoundary: c, blockedSegment: d, abortSet: f, legacyContext: e, context: g, treeContext: h2 };
      return f.add(m), m;
    }
    function Sc(a, b, c, d, f, e) {
      return { status: 0, id: -1, index: b, parentFlushed: !1, chunks: [], children: [], formatContext: d, boundary: c, lastPushedText: f, textEmbedded: e };
    }
    function Y(a, b) {
      if (a = a.onError(b), a != null && typeof a != "string")
        throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof a + '" instead');
      return a;
    }
    function Tc(a, b) {
      var c = a.onShellError;
      c(b), c = a.onFatalError, c(b), a.destination !== null ? (a.status = 2, a.destination.destroy(b)) : (a.status = 1, a.fatalError = b);
    }
    function Uc(a, b, c, d, f) {
      for (R = {}, yc = b, U = 0, a = c(d, f); Ac; )
        Ac = !1, U = 0, Bc += 1, S = null, a = c(d, f);
      return Ec(), a;
    }
    function Vc(a, b, c, d) {
      var f = c.render(), e = d.childContextTypes;
      if (e != null) {
        var g = b.legacyContext;
        if (typeof c.getChildContext != "function")
          d = g;
        else {
          c = c.getChildContext();
          for (var h2 in c)
            if (!(h2 in e))
              throw Error((gc(d) || "Unknown") + '.getChildContext(): key "' + h2 + '" is not defined in childContextTypes.');
          d = O({}, g, c);
        }
        b.legacyContext = d, Z(a, b, f), b.legacyContext = g;
      } else
        Z(a, b, f);
    }
    function Wc(a, b) {
      if (a && a.defaultProps) {
        b = O({}, b), a = a.defaultProps;
        for (var c in a)
          b[c] === void 0 && (b[c] = a[c]);
        return b;
      }
      return b;
    }
    function Xc(a, b, c, d, f) {
      if (typeof c == "function")
        if (c.prototype && c.prototype.isReactComponent) {
          f = ic(c, b.legacyContext);
          var e = c.contextType;
          e = new c(d, typeof e == "object" && e !== null ? e._currentValue : f), pc(e, c, d, f), Vc(a, b, e, c);
        } else {
          e = ic(c, b.legacyContext), f = Uc(a, b, c, d, e);
          var g = U !== 0;
          if (typeof f == "object" && f !== null && typeof f.render == "function" && f.$$typeof === void 0)
            pc(f, c, d, e), Vc(a, b, f, c);
          else if (g) {
            d = b.treeContext, b.treeContext = rc(d, 1, 0);
            try {
              Z(a, b, f);
            } finally {
              b.treeContext = d;
            }
          } else
            Z(a, b, f);
        }
      else if (typeof c == "string") {
        switch (f = b.blockedSegment, e = Pa(f.chunks, c, d, a.responseState, f.formatContext), f.lastPushedText = !1, g = f.formatContext, f.formatContext = ya(g, c, d), Yc(a, b, e), f.formatContext = g, c) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            f.chunks.push(Qa, c, Ra);
        }
        f.lastPushedText = !1;
      } else {
        switch (c) {
          case dc:
          case cc:
          case Tb:
          case Ub:
          case Sb:
            Z(a, b, d.children);
            return;
          case Zb:
            Z(
              a,
              b,
              d.children
            );
            return;
          case bc:
            throw Error("ReactDOMServer does not yet support scope components.");
          case Yb:
            a: {
              c = b.blockedBoundary, f = b.blockedSegment, e = d.fallback, d = d.children, g = /* @__PURE__ */ new Set();
              var h2 = { id: null, rootSegmentID: -1, parentFlushed: !1, pendingTasks: 0, forceClientRender: !1, completedSegments: [], byteSize: 0, fallbackAbortableTasks: g, errorDigest: null }, m = Sc(a, f.chunks.length, h2, f.formatContext, !1, !1);
              f.children.push(m), f.lastPushedText = !1;
              var n = Sc(a, 0, null, f.formatContext, !1, !1);
              n.parentFlushed = !0, b.blockedBoundary = h2, b.blockedSegment = n;
              try {
                if (Yc(a, b, d), n.lastPushedText && n.textEmbedded && n.chunks.push(za), n.status = 1, Zc(h2, n), h2.pendingTasks === 0)
                  break a;
              } catch (p2) {
                n.status = 4, h2.forceClientRender = !0, h2.errorDigest = Y(a, p2);
              } finally {
                b.blockedBoundary = c, b.blockedSegment = f;
              }
              b = Rc(a, e, c, m, g, b.legacyContext, b.context, b.treeContext), a.pingedTasks.push(b);
            }
            return;
        }
        if (typeof c == "object" && c !== null)
          switch (c.$$typeof) {
            case Xb:
              if (d = Uc(a, b, c.render, d, f), U !== 0) {
                c = b.treeContext, b.treeContext = rc(c, 1, 0);
                try {
                  Z(a, b, d);
                } finally {
                  b.treeContext = c;
                }
              } else
                Z(
                  a,
                  b,
                  d
                );
              return;
            case $b:
              c = c.type, d = Wc(c, d), Xc(a, b, c, d, f);
              return;
            case Vb:
              if (f = d.children, c = c._context, d = d.value, e = c._currentValue, c._currentValue = d, g = P, P = d = { parent: g, depth: g === null ? 0 : g.depth + 1, context: c, parentValue: e, value: d }, b.context = d, Z(a, b, f), a = P, a === null)
                throw Error("Tried to pop a Context at the root of the app. This is a bug in React.");
              d = a.parentValue, a.context._currentValue = d === ec ? a.context._defaultValue : d, a = P = a.parent, b.context = a;
              return;
            case Wb:
              d = d.children, d = d(c._currentValue), Z(a, b, d);
              return;
            case ac:
              f = c._init, c = f(c._payload), d = Wc(c, d), Xc(a, b, c, d, void 0);
              return;
          }
        throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((c == null ? c : typeof c) + "."));
      }
    }
    function Z(a, b, c) {
      if (b.node = c, typeof c == "object" && c !== null) {
        switch (c.$$typeof) {
          case Qb:
            Xc(a, b, c.type, c.props, c.ref);
            return;
          case Rb:
            throw Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
          case ac:
            var d = c._init;
            c = d(c._payload), Z(a, b, c);
            return;
        }
        if (qa(c)) {
          $c(a, b, c);
          return;
        }
        if (c === null || typeof c != "object" ? d = null : (d = fc && c[fc] || c["@@iterator"], d = typeof d == "function" ? d : null), d && (d = d.call(c))) {
          if (c = d.next(), !c.done) {
            var f = [];
            do
              f.push(c.value), c = d.next();
            while (!c.done);
            $c(a, b, f);
          }
          return;
        }
        throw a = Object.prototype.toString.call(c), Error("Objects are not valid as a React child (found: " + (a === "[object Object]" ? "object with keys {" + Object.keys(c).join(", ") + "}" : a) + "). If you meant to render a collection of children, use an array instead.");
      }
      typeof c == "string" ? (d = b.blockedSegment, d.lastPushedText = Aa(b.blockedSegment.chunks, c, a.responseState, d.lastPushedText)) : typeof c == "number" && (d = b.blockedSegment, d.lastPushedText = Aa(
        b.blockedSegment.chunks,
        "" + c,
        a.responseState,
        d.lastPushedText
      ));
    }
    function $c(a, b, c) {
      for (var d = c.length, f = 0; f < d; f++) {
        var e = b.treeContext;
        b.treeContext = rc(e, d, f);
        try {
          Yc(a, b, c[f]);
        } finally {
          b.treeContext = e;
        }
      }
    }
    function Yc(a, b, c) {
      var d = b.blockedSegment.formatContext, f = b.legacyContext, e = b.context;
      try {
        return Z(a, b, c);
      } catch (m) {
        if (Ec(), typeof m == "object" && m !== null && typeof m.then == "function") {
          c = m;
          var g = b.blockedSegment, h2 = Sc(a, g.chunks.length, null, g.formatContext, g.lastPushedText, !0);
          g.children.push(h2), g.lastPushedText = !1, a = Rc(a, b.node, b.blockedBoundary, h2, b.abortSet, b.legacyContext, b.context, b.treeContext).ping, c.then(a, a), b.blockedSegment.formatContext = d, b.legacyContext = f, b.context = e, nc(e);
        } else
          throw b.blockedSegment.formatContext = d, b.legacyContext = f, b.context = e, nc(e), m;
      }
    }
    function ad(a) {
      var b = a.blockedBoundary;
      a = a.blockedSegment, a.status = 3, bd(this, b, a);
    }
    function cd(a, b, c) {
      var d = a.blockedBoundary;
      a.blockedSegment.status = 3, d === null ? (b.allPendingTasks--, b.status !== 2 && (b.status = 2, b.destination !== null && b.destination.end())) : (d.pendingTasks--, d.forceClientRender || (d.forceClientRender = !0, d.errorDigest = b.onError(c === void 0 ? Error("The render was aborted by the server without a reason.") : c), d.parentFlushed && b.clientRenderedBoundaries.push(d)), d.fallbackAbortableTasks.forEach(function(a2) {
        return cd(a2, b, c);
      }), d.fallbackAbortableTasks.clear(), b.allPendingTasks--, b.allPendingTasks === 0 && (a = b.onAllReady, a()));
    }
    function Zc(a, b) {
      if (b.chunks.length === 0 && b.children.length === 1 && b.children[0].boundary === null) {
        var c = b.children[0];
        c.id = b.id, c.parentFlushed = !0, c.status === 1 && Zc(a, c);
      } else
        a.completedSegments.push(b);
    }
    function bd(a, b, c) {
      if (b === null) {
        if (c.parentFlushed) {
          if (a.completedRootSegment !== null)
            throw Error("There can only be one root segment. This is a bug in React.");
          a.completedRootSegment = c;
        }
        a.pendingRootTasks--, a.pendingRootTasks === 0 && (a.onShellError = X, b = a.onShellReady, b());
      } else
        b.pendingTasks--, b.forceClientRender || (b.pendingTasks === 0 ? (c.parentFlushed && c.status === 1 && Zc(b, c), b.parentFlushed && a.completedBoundaries.push(b), b.fallbackAbortableTasks.forEach(ad, a), b.fallbackAbortableTasks.clear()) : c.parentFlushed && c.status === 1 && (Zc(b, c), b.completedSegments.length === 1 && b.parentFlushed && a.partialBoundaries.push(b)));
      a.allPendingTasks--, a.allPendingTasks === 0 && (a = a.onAllReady, a());
    }
    function Qc(a) {
      if (a.status !== 2) {
        var b = P, c = Nc.current;
        Nc.current = Mc;
        var d = Lc;
        Lc = a.responseState;
        try {
          var f = a.pingedTasks, e;
          for (e = 0; e < f.length; e++) {
            var g = f[e], h2 = a, m = g.blockedSegment;
            if (m.status === 0) {
              nc(g.context);
              try {
                Z(h2, g, g.node), m.lastPushedText && m.textEmbedded && m.chunks.push(za), g.abortSet.delete(g), m.status = 1, bd(h2, g.blockedBoundary, m);
              } catch (E) {
                if (Ec(), typeof E == "object" && E !== null && typeof E.then == "function") {
                  var n = g.ping;
                  E.then(n, n);
                } else {
                  g.abortSet.delete(g), m.status = 4;
                  var p2 = g.blockedBoundary, v = E, C = Y(h2, v);
                  if (p2 === null ? Tc(h2, v) : (p2.pendingTasks--, p2.forceClientRender || (p2.forceClientRender = !0, p2.errorDigest = C, p2.parentFlushed && h2.clientRenderedBoundaries.push(p2))), h2.allPendingTasks--, h2.allPendingTasks === 0) {
                    var D = h2.onAllReady;
                    D();
                  }
                }
              } finally {
              }
            }
          }
          f.splice(0, e), a.destination !== null && dd2(a, a.destination);
        } catch (E) {
          Y(a, E), Tc(a, E);
        } finally {
          Lc = d, Nc.current = c, c === Mc && nc(b);
        }
      }
    }
    function ed(a, b, c) {
      switch (c.parentFlushed = !0, c.status) {
        case 0:
          var d = c.id = a.nextSegmentId++;
          return c.lastPushedText = !1, c.textEmbedded = !1, a = a.responseState, r(b, Sa), r(b, a.placeholderPrefix), a = d.toString(16), r(b, a), w(b, Ta);
        case 1:
          c.status = 2;
          var f = !0;
          d = c.chunks;
          var e = 0;
          c = c.children;
          for (var g = 0; g < c.length; g++) {
            for (f = c[g]; e < f.index; e++)
              r(b, d[e]);
            f = fd(a, b, f);
          }
          for (; e < d.length - 1; e++)
            r(b, d[e]);
          return e < d.length && (f = w(b, d[e])), f;
        default:
          throw Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
      }
    }
    function fd(a, b, c) {
      var d = c.boundary;
      if (d === null)
        return ed(a, b, c);
      if (d.parentFlushed = !0, d.forceClientRender)
        d = d.errorDigest, w(b, Xa), r(b, Za), d && (r(b, ab), r(b, F(d)), r(b, $a)), w(b, bb), ed(a, b, c);
      else if (0 < d.pendingTasks) {
        d.rootSegmentID = a.nextSegmentId++, 0 < d.completedSegments.length && a.partialBoundaries.push(d);
        var f = a.responseState, e = f.nextSuspenseID++;
        f = x(f.boundaryPrefix + e.toString(16)), d = d.id = f, cb(b, a.responseState, d), ed(a, b, c);
      } else if (d.byteSize > a.progressiveChunkSize)
        d.rootSegmentID = a.nextSegmentId++, a.completedBoundaries.push(d), cb(b, a.responseState, d.id), ed(a, b, c);
      else {
        if (w(b, Ua), c = d.completedSegments, c.length !== 1)
          throw Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
        fd(a, b, c[0]);
      }
      return w(b, Ya);
    }
    function gd(a, b, c) {
      return yb(b, a.responseState, c.formatContext, c.id), fd(a, b, c), zb(b, c.formatContext);
    }
    function hd(a, b, c) {
      for (var d = c.completedSegments, f = 0; f < d.length; f++)
        id(a, b, c, d[f]);
      if (d.length = 0, a = a.responseState, d = c.id, c = c.rootSegmentID, r(b, a.startInlineScript), a.sentCompleteBoundaryFunction ? r(b, Gb) : (a.sentCompleteBoundaryFunction = !0, r(b, Fb)), d === null)
        throw Error("An ID must have been assigned before we can complete the boundary.");
      return c = c.toString(16), r(b, d), r(b, Hb), r(b, a.segmentPrefix), r(b, c), w(b, Ib);
    }
    function id(a, b, c, d) {
      if (d.status === 2)
        return !0;
      var f = d.id;
      if (f === -1) {
        if ((d.id = c.rootSegmentID) === -1)
          throw Error("A root segment ID must have been assigned by now. This is a bug in React.");
        return gd(a, b, d);
      }
      return gd(a, b, d), a = a.responseState, r(b, a.startInlineScript), a.sentCompleteSegmentFunction ? r(b, Bb) : (a.sentCompleteSegmentFunction = !0, r(b, Ab)), r(b, a.segmentPrefix), f = f.toString(16), r(b, f), r(b, Cb), r(b, a.placeholderPrefix), r(b, f), w(b, Db);
    }
    function dd2(a, b) {
      k = new Uint8Array(2048), l = 0, q = !0;
      try {
        var c = a.completedRootSegment;
        if (c !== null && a.pendingRootTasks === 0) {
          fd(a, b, c), a.completedRootSegment = null;
          var d = a.responseState.bootstrapChunks;
          for (c = 0; c < d.length - 1; c++)
            r(b, d[c]);
          c < d.length && w(b, d[c]);
        }
        var f = a.clientRenderedBoundaries, e;
        for (e = 0; e < f.length; e++) {
          var g = f[e];
          d = b;
          var h2 = a.responseState, m = g.id, n = g.errorDigest, p2 = g.errorMessage, v = g.errorComponentStack;
          if (r(d, h2.startInlineScript), h2.sentClientRenderFunction ? r(d, Kb) : (h2.sentClientRenderFunction = !0, r(d, Jb)), m === null)
            throw Error("An ID must have been assigned before we can complete the boundary.");
          if (r(d, m), r(d, Lb), (n || p2 || v) && (r(d, Nb), r(d, Pb(n || ""))), (p2 || v) && (r(d, Nb), r(d, Pb(p2 || ""))), v && (r(d, Nb), r(d, Pb(v))), !w(d, Mb)) {
            a.destination = null, e++, f.splice(0, e);
            return;
          }
        }
        f.splice(0, e);
        var C = a.completedBoundaries;
        for (e = 0; e < C.length; e++)
          if (!hd(a, b, C[e])) {
            a.destination = null, e++, C.splice(0, e);
            return;
          }
        C.splice(0, e), ca(b), k = new Uint8Array(2048), l = 0, q = !0;
        var D = a.partialBoundaries;
        for (e = 0; e < D.length; e++) {
          var E = D[e];
          a: {
            f = a, g = b;
            var na = E.completedSegments;
            for (h2 = 0; h2 < na.length; h2++)
              if (!id(f, g, E, na[h2])) {
                h2++, na.splice(0, h2);
                var Eb = !1;
                break a;
              }
            na.splice(0, h2), Eb = !0;
          }
          if (!Eb) {
            a.destination = null, e++, D.splice(0, e);
            return;
          }
        }
        D.splice(0, e);
        var oa = a.completedBoundaries;
        for (e = 0; e < oa.length; e++)
          if (!hd(a, b, oa[e])) {
            a.destination = null, e++, oa.splice(0, e);
            return;
          }
        oa.splice(0, e);
      } finally {
        ca(b), typeof b.flush == "function" && b.flush(), a.allPendingTasks === 0 && a.pingedTasks.length === 0 && a.clientRenderedBoundaries.length === 0 && a.completedBoundaries.length === 0 && b.end();
      }
    }
    function jd(a) {
      setImmediate(function() {
        return Qc(a);
      });
    }
    function kd(a, b) {
      if (a.status === 1)
        a.status = 2, b.destroy(a.fatalError);
      else if (a.status !== 2 && a.destination === null) {
        a.destination = b;
        try {
          dd2(a, b);
        } catch (c) {
          Y(a, c), Tc(a, c);
        }
      }
    }
    function ld(a, b) {
      try {
        var c = a.abortableTasks;
        c.forEach(function(c2) {
          return cd(c2, a, b);
        }), c.clear(), a.destination !== null && dd2(a, a.destination);
      } catch (d) {
        Y(a, d), Tc(a, d);
      }
    }
    function md(a, b) {
      return function() {
        return kd(b, a);
      };
    }
    function nd(a, b) {
      return function() {
        return ld(a, b);
      };
    }
    function od(a, b) {
      var c = b ? b.identifierPrefix : void 0, d = b ? b.nonce : void 0, f = b ? b.bootstrapScriptContent : void 0, e = b ? b.bootstrapScripts : void 0, g = b ? b.bootstrapModules : void 0;
      c = c === void 0 ? "" : c, d = d === void 0 ? ra : x('<script nonce="' + F(d) + '">');
      var h2 = [];
      if (f !== void 0 && h2.push(d, ("" + f).replace(wa, xa), sa), e !== void 0)
        for (f = 0; f < e.length; f++)
          h2.push(ta, F(e[f]), va);
      if (g !== void 0)
        for (e = 0; e < g.length; e++)
          h2.push(ua, F(g[e]), va);
      g = {
        bootstrapChunks: h2,
        startInlineScript: d,
        placeholderPrefix: x(c + "P:"),
        segmentPrefix: x(c + "S:"),
        boundaryPrefix: c + "B:",
        idPrefix: c,
        nextSuspenseID: 0,
        sentCompleteSegmentFunction: !1,
        sentCompleteBoundaryFunction: !1,
        sentClientRenderFunction: !1
      }, e = b ? b.namespaceURI : void 0, e = G(e === "http://www.w3.org/2000/svg" ? 2 : e === "http://www.w3.org/1998/Math/MathML" ? 3 : 0, null), f = b ? b.progressiveChunkSize : void 0, d = b ? b.onError : void 0, h2 = b ? b.onAllReady : void 0;
      var m = b ? b.onShellReady : void 0, n = b ? b.onShellError : void 0;
      return b = [], c = /* @__PURE__ */ new Set(), g = {
        destination: null,
        responseState: g,
        progressiveChunkSize: f === void 0 ? 12800 : f,
        status: 0,
        fatalError: null,
        nextSegmentId: 0,
        allPendingTasks: 0,
        pendingRootTasks: 0,
        completedRootSegment: null,
        abortableTasks: c,
        pingedTasks: b,
        clientRenderedBoundaries: [],
        completedBoundaries: [],
        partialBoundaries: [],
        onError: d === void 0 ? Oc : d,
        onAllReady: h2 === void 0 ? X : h2,
        onShellReady: m === void 0 ? X : m,
        onShellError: n === void 0 ? X : n,
        onFatalError: X
      }, e = Sc(g, 0, null, e, !1, !1), e.parentFlushed = !0, a = Rc(g, a, null, e, c, hc, null, qc), b.push(a), g;
    }
    exports2.renderToPipeableStream = function(a, b) {
      var c = od(a, b), d = !1;
      return jd(c), { pipe: function(a2) {
        if (d)
          throw Error("React currently only supports piping to one writable stream.");
        return d = !0, kd(c, a2), a2.on("drain", md(a2, c)), a2.on("error", nd(c, Error("The destination stream errored while writing data."))), a2.on("close", nd(c, Error("The destination stream closed early."))), a2;
      }, abort: function(a2) {
        ld(c, a2);
      } };
    };
    exports2.version = "18.2.0";
  }
});

// node_modules/react-dom/server.node.js
var require_server_node = __commonJS({
  "node_modules/react-dom/server.node.js"(exports2) {
    "use strict";
    var l, s2;
    l = require_react_dom_server_legacy_node_production_min(), s2 = require_react_dom_server_node_production_min();
    exports2.version = l.version;
    exports2.renderToString = l.renderToString;
    exports2.renderToStaticMarkup = l.renderToStaticMarkup;
    exports2.renderToNodeStream = l.renderToNodeStream;
    exports2.renderToStaticNodeStream = l.renderToStaticNodeStream;
    exports2.renderToPipeableStream = s2.renderToPipeableStream;
  }
});

// node_modules/react/cjs/react-jsx-runtime.production.min.js
var require_react_jsx_runtime_production_min = __commonJS({
  "node_modules/react/cjs/react-jsx-runtime.production.min.js"(exports2) {
    "use strict";
    var f = require_react(), k = Symbol.for("react.element"), l = Symbol.for("react.fragment"), m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p2 = { key: !0, ref: !0, __self: !0, __source: !0 };
    function q(c, a, g) {
      var b, d = {}, e = null, h2 = null;
      g !== void 0 && (e = "" + g), a.key !== void 0 && (e = "" + a.key), a.ref !== void 0 && (h2 = a.ref);
      for (b in a)
        m.call(a, b) && !p2.hasOwnProperty(b) && (d[b] = a[b]);
      if (c && c.defaultProps)
        for (b in a = c.defaultProps, a)
          d[b] === void 0 && (d[b] = a[b]);
      return { $$typeof: k, type: c, key: e, ref: h2, props: d, _owner: n.current };
    }
    exports2.Fragment = l;
    exports2.jsx = q;
    exports2.jsxs = q;
  }
});

// node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "node_modules/react/jsx-runtime.js"(exports2, module2) {
    "use strict";
    module2.exports = require_react_jsx_runtime_production_min();
  }
});

// node_modules/cross-fetch/node_modules/webidl-conversions/lib/index.js
var require_lib = __commonJS({
  "node_modules/cross-fetch/node_modules/webidl-conversions/lib/index.js"(exports2, module2) {
    "use strict";
    var conversions = {};
    module2.exports = conversions;
    function sign(x) {
      return x < 0 ? -1 : 1;
    }
    function evenRound(x) {
      return x % 1 === 0.5 && (x & 1) === 0 ? Math.floor(x) : Math.round(x);
    }
    function createNumberConversion(bitLength, typeOpts) {
      typeOpts.unsigned || --bitLength;
      let lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength), upperBound = Math.pow(2, bitLength) - 1, moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength), moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);
      return function(V, opts) {
        opts || (opts = {});
        let x = +V;
        if (opts.enforceRange) {
          if (!Number.isFinite(x))
            throw new TypeError("Argument is not a finite number");
          if (x = sign(x) * Math.floor(Math.abs(x)), x < lowerBound || x > upperBound)
            throw new TypeError("Argument is not in byte range");
          return x;
        }
        if (!isNaN(x) && opts.clamp)
          return x = evenRound(x), x < lowerBound && (x = lowerBound), x > upperBound && (x = upperBound), x;
        if (!Number.isFinite(x) || x === 0)
          return 0;
        if (x = sign(x) * Math.floor(Math.abs(x)), x = x % moduloVal, !typeOpts.unsigned && x >= moduloBound)
          return x - moduloVal;
        if (typeOpts.unsigned) {
          if (x < 0)
            x += moduloVal;
          else if (x === -0)
            return 0;
        }
        return x;
      };
    }
    conversions.void = function() {
    };
    conversions.boolean = function(val) {
      return !!val;
    };
    conversions.byte = createNumberConversion(8, { unsigned: !1 });
    conversions.octet = createNumberConversion(8, { unsigned: !0 });
    conversions.short = createNumberConversion(16, { unsigned: !1 });
    conversions["unsigned short"] = createNumberConversion(16, { unsigned: !0 });
    conversions.long = createNumberConversion(32, { unsigned: !1 });
    conversions["unsigned long"] = createNumberConversion(32, { unsigned: !0 });
    conversions["long long"] = createNumberConversion(32, { unsigned: !1, moduloBitLength: 64 });
    conversions["unsigned long long"] = createNumberConversion(32, { unsigned: !0, moduloBitLength: 64 });
    conversions.double = function(V) {
      let x = +V;
      if (!Number.isFinite(x))
        throw new TypeError("Argument is not a finite floating-point value");
      return x;
    };
    conversions["unrestricted double"] = function(V) {
      let x = +V;
      if (isNaN(x))
        throw new TypeError("Argument is NaN");
      return x;
    };
    conversions.float = conversions.double;
    conversions["unrestricted float"] = conversions["unrestricted double"];
    conversions.DOMString = function(V, opts) {
      return opts || (opts = {}), opts.treatNullAsEmptyString && V === null ? "" : String(V);
    };
    conversions.ByteString = function(V, opts) {
      let x = String(V), c;
      for (let i = 0; (c = x.codePointAt(i)) !== void 0; ++i)
        if (c > 255)
          throw new TypeError("Argument is not a valid bytestring");
      return x;
    };
    conversions.USVString = function(V) {
      let S = String(V), n = S.length, U = [];
      for (let i = 0; i < n; ++i) {
        let c = S.charCodeAt(i);
        if (c < 55296 || c > 57343)
          U.push(String.fromCodePoint(c));
        else if (56320 <= c && c <= 57343)
          U.push(String.fromCodePoint(65533));
        else if (i === n - 1)
          U.push(String.fromCodePoint(65533));
        else {
          let d = S.charCodeAt(i + 1);
          if (56320 <= d && d <= 57343) {
            let a = c & 1023, b = d & 1023;
            U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b)), ++i;
          } else
            U.push(String.fromCodePoint(65533));
        }
      }
      return U.join("");
    };
    conversions.Date = function(V, opts) {
      if (!(V instanceof Date))
        throw new TypeError("Argument is not a Date object");
      if (!isNaN(V))
        return V;
    };
    conversions.RegExp = function(V, opts) {
      return V instanceof RegExp || (V = new RegExp(V)), V;
    };
  }
});

// node_modules/cross-fetch/node_modules/whatwg-url/lib/utils.js
var require_utils = __commonJS({
  "node_modules/cross-fetch/node_modules/whatwg-url/lib/utils.js"(exports2, module2) {
    "use strict";
    module2.exports.mixin = function(target, source) {
      let keys2 = Object.getOwnPropertyNames(source);
      for (let i = 0; i < keys2.length; ++i)
        Object.defineProperty(target, keys2[i], Object.getOwnPropertyDescriptor(source, keys2[i]));
    };
    module2.exports.wrapperSymbol = Symbol("wrapper");
    module2.exports.implSymbol = Symbol("impl");
    module2.exports.wrapperForImpl = function(impl) {
      return impl[module2.exports.wrapperSymbol];
    };
    module2.exports.implForWrapper = function(wrapper) {
      return wrapper[module2.exports.implSymbol];
    };
  }
});

// node_modules/cross-fetch/node_modules/tr46/lib/mappingTable.json
var require_mappingTable = __commonJS({
  "node_modules/cross-fetch/node_modules/tr46/lib/mappingTable.json"(exports2, module2) {
    module2.exports = [[[0, 44], "disallowed_STD3_valid"], [[45, 46], "valid"], [[47, 47], "disallowed_STD3_valid"], [[48, 57], "valid"], [[58, 64], "disallowed_STD3_valid"], [[65, 65], "mapped", [97]], [[66, 66], "mapped", [98]], [[67, 67], "mapped", [99]], [[68, 68], "mapped", [100]], [[69, 69], "mapped", [101]], [[70, 70], "mapped", [102]], [[71, 71], "mapped", [103]], [[72, 72], "mapped", [104]], [[73, 73], "mapped", [105]], [[74, 74], "mapped", [106]], [[75, 75], "mapped", [107]], [[76, 76], "mapped", [108]], [[77, 77], "mapped", [109]], [[78, 78], "mapped", [110]], [[79, 79], "mapped", [111]], [[80, 80], "mapped", [112]], [[81, 81], "mapped", [113]], [[82, 82], "mapped", [114]], [[83, 83], "mapped", [115]], [[84, 84], "mapped", [116]], [[85, 85], "mapped", [117]], [[86, 86], "mapped", [118]], [[87, 87], "mapped", [119]], [[88, 88], "mapped", [120]], [[89, 89], "mapped", [121]], [[90, 90], "mapped", [122]], [[91, 96], "disallowed_STD3_valid"], [[97, 122], "valid"], [[123, 127], "disallowed_STD3_valid"], [[128, 159], "disallowed"], [[160, 160], "disallowed_STD3_mapped", [32]], [[161, 167], "valid", [], "NV8"], [[168, 168], "disallowed_STD3_mapped", [32, 776]], [[169, 169], "valid", [], "NV8"], [[170, 170], "mapped", [97]], [[171, 172], "valid", [], "NV8"], [[173, 173], "ignored"], [[174, 174], "valid", [], "NV8"], [[175, 175], "disallowed_STD3_mapped", [32, 772]], [[176, 177], "valid", [], "NV8"], [[178, 178], "mapped", [50]], [[179, 179], "mapped", [51]], [[180, 180], "disallowed_STD3_mapped", [32, 769]], [[181, 181], "mapped", [956]], [[182, 182], "valid", [], "NV8"], [[183, 183], "valid"], [[184, 184], "disallowed_STD3_mapped", [32, 807]], [[185, 185], "mapped", [49]], [[186, 186], "mapped", [111]], [[187, 187], "valid", [], "NV8"], [[188, 188], "mapped", [49, 8260, 52]], [[189, 189], "mapped", [49, 8260, 50]], [[190, 190], "mapped", [51, 8260, 52]], [[191, 191], "valid", [], "NV8"], [[192, 192], "mapped", [224]], [[193, 193], "mapped", [225]], [[194, 194], "mapped", [226]], [[195, 195], "mapped", [227]], [[196, 196], "mapped", [228]], [[197, 197], "mapped", [229]], [[198, 198], "mapped", [230]], [[199, 199], "mapped", [231]], [[200, 200], "mapped", [232]], [[201, 201], "mapped", [233]], [[202, 202], "mapped", [234]], [[203, 203], "mapped", [235]], [[204, 204], "mapped", [236]], [[205, 205], "mapped", [237]], [[206, 206], "mapped", [238]], [[207, 207], "mapped", [239]], [[208, 208], "mapped", [240]], [[209, 209], "mapped", [241]], [[210, 210], "mapped", [242]], [[211, 211], "mapped", [243]], [[212, 212], "mapped", [244]], [[213, 213], "mapped", [245]], [[214, 214], "mapped", [246]], [[215, 215], "valid", [], "NV8"], [[216, 216], "mapped", [248]], [[217, 217], "mapped", [249]], [[218, 218], "mapped", [250]], [[219, 219], "mapped", [251]], [[220, 220], "mapped", [252]], [[221, 221], "mapped", [253]], [[222, 222], "mapped", [254]], [[223, 223], "deviation", [115, 115]], [[224, 246], "valid"], [[247, 247], "valid", [], "NV8"], [[248, 255], "valid"], [[256, 256], "mapped", [257]], [[257, 257], "valid"], [[258, 258], "mapped", [259]], [[259, 259], "valid"], [[260, 260], "mapped", [261]], [[261, 261], "valid"], [[262, 262], "mapped", [263]], [[263, 263], "valid"], [[264, 264], "mapped", [265]], [[265, 265], "valid"], [[266, 266], "mapped", [267]], [[267, 267], "valid"], [[268, 268], "mapped", [269]], [[269, 269], "valid"], [[270, 270], "mapped", [271]], [[271, 271], "valid"], [[272, 272], "mapped", [273]], [[273, 273], "valid"], [[274, 274], "mapped", [275]], [[275, 275], "valid"], [[276, 276], "mapped", [277]], [[277, 277], "valid"], [[278, 278], "mapped", [279]], [[279, 279], "valid"], [[280, 280], "mapped", [281]], [[281, 281], "valid"], [[282, 282], "mapped", [283]], [[283, 283], "valid"], [[284, 284], "mapped", [285]], [[285, 285], "valid"], [[286, 286], "mapped", [287]], [[287, 287], "valid"], [[288, 288], "mapped", [289]], [[289, 289], "valid"], [[290, 290], "mapped", [291]], [[291, 291], "valid"], [[292, 292], "mapped", [293]], [[293, 293], "valid"], [[294, 294], "mapped", [295]], [[295, 295], "valid"], [[296, 296], "mapped", [297]], [[297, 297], "valid"], [[298, 298], "mapped", [299]], [[299, 299], "valid"], [[300, 300], "mapped", [301]], [[301, 301], "valid"], [[302, 302], "mapped", [303]], [[303, 303], "valid"], [[304, 304], "mapped", [105, 775]], [[305, 305], "valid"], [[306, 307], "mapped", [105, 106]], [[308, 308], "mapped", [309]], [[309, 309], "valid"], [[310, 310], "mapped", [311]], [[311, 312], "valid"], [[313, 313], "mapped", [314]], [[314, 314], "valid"], [[315, 315], "mapped", [316]], [[316, 316], "valid"], [[317, 317], "mapped", [318]], [[318, 318], "valid"], [[319, 320], "mapped", [108, 183]], [[321, 321], "mapped", [322]], [[322, 322], "valid"], [[323, 323], "mapped", [324]], [[324, 324], "valid"], [[325, 325], "mapped", [326]], [[326, 326], "valid"], [[327, 327], "mapped", [328]], [[328, 328], "valid"], [[329, 329], "mapped", [700, 110]], [[330, 330], "mapped", [331]], [[331, 331], "valid"], [[332, 332], "mapped", [333]], [[333, 333], "valid"], [[334, 334], "mapped", [335]], [[335, 335], "valid"], [[336, 336], "mapped", [337]], [[337, 337], "valid"], [[338, 338], "mapped", [339]], [[339, 339], "valid"], [[340, 340], "mapped", [341]], [[341, 341], "valid"], [[342, 342], "mapped", [343]], [[343, 343], "valid"], [[344, 344], "mapped", [345]], [[345, 345], "valid"], [[346, 346], "mapped", [347]], [[347, 347], "valid"], [[348, 348], "mapped", [349]], [[349, 349], "valid"], [[350, 350], "mapped", [351]], [[351, 351], "valid"], [[352, 352], "mapped", [353]], [[353, 353], "valid"], [[354, 354], "mapped", [355]], [[355, 355], "valid"], [[356, 356], "mapped", [357]], [[357, 357], "valid"], [[358, 358], "mapped", [359]], [[359, 359], "valid"], [[360, 360], "mapped", [361]], [[361, 361], "valid"], [[362, 362], "mapped", [363]], [[363, 363], "valid"], [[364, 364], "mapped", [365]], [[365, 365], "valid"], [[366, 366], "mapped", [367]], [[367, 367], "valid"], [[368, 368], "mapped", [369]], [[369, 369], "valid"], [[370, 370], "mapped", [371]], [[371, 371], "valid"], [[372, 372], "mapped", [373]], [[373, 373], "valid"], [[374, 374], "mapped", [375]], [[375, 375], "valid"], [[376, 376], "mapped", [255]], [[377, 377], "mapped", [378]], [[378, 378], "valid"], [[379, 379], "mapped", [380]], [[380, 380], "valid"], [[381, 381], "mapped", [382]], [[382, 382], "valid"], [[383, 383], "mapped", [115]], [[384, 384], "valid"], [[385, 385], "mapped", [595]], [[386, 386], "mapped", [387]], [[387, 387], "valid"], [[388, 388], "mapped", [389]], [[389, 389], "valid"], [[390, 390], "mapped", [596]], [[391, 391], "mapped", [392]], [[392, 392], "valid"], [[393, 393], "mapped", [598]], [[394, 394], "mapped", [599]], [[395, 395], "mapped", [396]], [[396, 397], "valid"], [[398, 398], "mapped", [477]], [[399, 399], "mapped", [601]], [[400, 400], "mapped", [603]], [[401, 401], "mapped", [402]], [[402, 402], "valid"], [[403, 403], "mapped", [608]], [[404, 404], "mapped", [611]], [[405, 405], "valid"], [[406, 406], "mapped", [617]], [[407, 407], "mapped", [616]], [[408, 408], "mapped", [409]], [[409, 411], "valid"], [[412, 412], "mapped", [623]], [[413, 413], "mapped", [626]], [[414, 414], "valid"], [[415, 415], "mapped", [629]], [[416, 416], "mapped", [417]], [[417, 417], "valid"], [[418, 418], "mapped", [419]], [[419, 419], "valid"], [[420, 420], "mapped", [421]], [[421, 421], "valid"], [[422, 422], "mapped", [640]], [[423, 423], "mapped", [424]], [[424, 424], "valid"], [[425, 425], "mapped", [643]], [[426, 427], "valid"], [[428, 428], "mapped", [429]], [[429, 429], "valid"], [[430, 430], "mapped", [648]], [[431, 431], "mapped", [432]], [[432, 432], "valid"], [[433, 433], "mapped", [650]], [[434, 434], "mapped", [651]], [[435, 435], "mapped", [436]], [[436, 436], "valid"], [[437, 437], "mapped", [438]], [[438, 438], "valid"], [[439, 439], "mapped", [658]], [[440, 440], "mapped", [441]], [[441, 443], "valid"], [[444, 444], "mapped", [445]], [[445, 451], "valid"], [[452, 454], "mapped", [100, 382]], [[455, 457], "mapped", [108, 106]], [[458, 460], "mapped", [110, 106]], [[461, 461], "mapped", [462]], [[462, 462], "valid"], [[463, 463], "mapped", [464]], [[464, 464], "valid"], [[465, 465], "mapped", [466]], [[466, 466], "valid"], [[467, 467], "mapped", [468]], [[468, 468], "valid"], [[469, 469], "mapped", [470]], [[470, 470], "valid"], [[471, 471], "mapped", [472]], [[472, 472], "valid"], [[473, 473], "mapped", [474]], [[474, 474], "valid"], [[475, 475], "mapped", [476]], [[476, 477], "valid"], [[478, 478], "mapped", [479]], [[479, 479], "valid"], [[480, 480], "mapped", [481]], [[481, 481], "valid"], [[482, 482], "mapped", [483]], [[483, 483], "valid"], [[484, 484], "mapped", [485]], [[485, 485], "valid"], [[486, 486], "mapped", [487]], [[487, 487], "valid"], [[488, 488], "mapped", [489]], [[489, 489], "valid"], [[490, 490], "mapped", [491]], [[491, 491], "valid"], [[492, 492], "mapped", [493]], [[493, 493], "valid"], [[494, 494], "mapped", [495]], [[495, 496], "valid"], [[497, 499], "mapped", [100, 122]], [[500, 500], "mapped", [501]], [[501, 501], "valid"], [[502, 502], "mapped", [405]], [[503, 503], "mapped", [447]], [[504, 504], "mapped", [505]], [[505, 505], "valid"], [[506, 506], "mapped", [507]], [[507, 507], "valid"], [[508, 508], "mapped", [509]], [[509, 509], "valid"], [[510, 510], "mapped", [511]], [[511, 511], "valid"], [[512, 512], "mapped", [513]], [[513, 513], "valid"], [[514, 514], "mapped", [515]], [[515, 515], "valid"], [[516, 516], "mapped", [517]], [[517, 517], "valid"], [[518, 518], "mapped", [519]], [[519, 519], "valid"], [[520, 520], "mapped", [521]], [[521, 521], "valid"], [[522, 522], "mapped", [523]], [[523, 523], "valid"], [[524, 524], "mapped", [525]], [[525, 525], "valid"], [[526, 526], "mapped", [527]], [[527, 527], "valid"], [[528, 528], "mapped", [529]], [[529, 529], "valid"], [[530, 530], "mapped", [531]], [[531, 531], "valid"], [[532, 532], "mapped", [533]], [[533, 533], "valid"], [[534, 534], "mapped", [535]], [[535, 535], "valid"], [[536, 536], "mapped", [537]], [[537, 537], "valid"], [[538, 538], "mapped", [539]], [[539, 539], "valid"], [[540, 540], "mapped", [541]], [[541, 541], "valid"], [[542, 542], "mapped", [543]], [[543, 543], "valid"], [[544, 544], "mapped", [414]], [[545, 545], "valid"], [[546, 546], "mapped", [547]], [[547, 547], "valid"], [[548, 548], "mapped", [549]], [[549, 549], "valid"], [[550, 550], "mapped", [551]], [[551, 551], "valid"], [[552, 552], "mapped", [553]], [[553, 553], "valid"], [[554, 554], "mapped", [555]], [[555, 555], "valid"], [[556, 556], "mapped", [557]], [[557, 557], "valid"], [[558, 558], "mapped", [559]], [[559, 559], "valid"], [[560, 560], "mapped", [561]], [[561, 561], "valid"], [[562, 562], "mapped", [563]], [[563, 563], "valid"], [[564, 566], "valid"], [[567, 569], "valid"], [[570, 570], "mapped", [11365]], [[571, 571], "mapped", [572]], [[572, 572], "valid"], [[573, 573], "mapped", [410]], [[574, 574], "mapped", [11366]], [[575, 576], "valid"], [[577, 577], "mapped", [578]], [[578, 578], "valid"], [[579, 579], "mapped", [384]], [[580, 580], "mapped", [649]], [[581, 581], "mapped", [652]], [[582, 582], "mapped", [583]], [[583, 583], "valid"], [[584, 584], "mapped", [585]], [[585, 585], "valid"], [[586, 586], "mapped", [587]], [[587, 587], "valid"], [[588, 588], "mapped", [589]], [[589, 589], "valid"], [[590, 590], "mapped", [591]], [[591, 591], "valid"], [[592, 680], "valid"], [[681, 685], "valid"], [[686, 687], "valid"], [[688, 688], "mapped", [104]], [[689, 689], "mapped", [614]], [[690, 690], "mapped", [106]], [[691, 691], "mapped", [114]], [[692, 692], "mapped", [633]], [[693, 693], "mapped", [635]], [[694, 694], "mapped", [641]], [[695, 695], "mapped", [119]], [[696, 696], "mapped", [121]], [[697, 705], "valid"], [[706, 709], "valid", [], "NV8"], [[710, 721], "valid"], [[722, 727], "valid", [], "NV8"], [[728, 728], "disallowed_STD3_mapped", [32, 774]], [[729, 729], "disallowed_STD3_mapped", [32, 775]], [[730, 730], "disallowed_STD3_mapped", [32, 778]], [[731, 731], "disallowed_STD3_mapped", [32, 808]], [[732, 732], "disallowed_STD3_mapped", [32, 771]], [[733, 733], "disallowed_STD3_mapped", [32, 779]], [[734, 734], "valid", [], "NV8"], [[735, 735], "valid", [], "NV8"], [[736, 736], "mapped", [611]], [[737, 737], "mapped", [108]], [[738, 738], "mapped", [115]], [[739, 739], "mapped", [120]], [[740, 740], "mapped", [661]], [[741, 745], "valid", [], "NV8"], [[746, 747], "valid", [], "NV8"], [[748, 748], "valid"], [[749, 749], "valid", [], "NV8"], [[750, 750], "valid"], [[751, 767], "valid", [], "NV8"], [[768, 831], "valid"], [[832, 832], "mapped", [768]], [[833, 833], "mapped", [769]], [[834, 834], "valid"], [[835, 835], "mapped", [787]], [[836, 836], "mapped", [776, 769]], [[837, 837], "mapped", [953]], [[838, 846], "valid"], [[847, 847], "ignored"], [[848, 855], "valid"], [[856, 860], "valid"], [[861, 863], "valid"], [[864, 865], "valid"], [[866, 866], "valid"], [[867, 879], "valid"], [[880, 880], "mapped", [881]], [[881, 881], "valid"], [[882, 882], "mapped", [883]], [[883, 883], "valid"], [[884, 884], "mapped", [697]], [[885, 885], "valid"], [[886, 886], "mapped", [887]], [[887, 887], "valid"], [[888, 889], "disallowed"], [[890, 890], "disallowed_STD3_mapped", [32, 953]], [[891, 893], "valid"], [[894, 894], "disallowed_STD3_mapped", [59]], [[895, 895], "mapped", [1011]], [[896, 899], "disallowed"], [[900, 900], "disallowed_STD3_mapped", [32, 769]], [[901, 901], "disallowed_STD3_mapped", [32, 776, 769]], [[902, 902], "mapped", [940]], [[903, 903], "mapped", [183]], [[904, 904], "mapped", [941]], [[905, 905], "mapped", [942]], [[906, 906], "mapped", [943]], [[907, 907], "disallowed"], [[908, 908], "mapped", [972]], [[909, 909], "disallowed"], [[910, 910], "mapped", [973]], [[911, 911], "mapped", [974]], [[912, 912], "valid"], [[913, 913], "mapped", [945]], [[914, 914], "mapped", [946]], [[915, 915], "mapped", [947]], [[916, 916], "mapped", [948]], [[917, 917], "mapped", [949]], [[918, 918], "mapped", [950]], [[919, 919], "mapped", [951]], [[920, 920], "mapped", [952]], [[921, 921], "mapped", [953]], [[922, 922], "mapped", [954]], [[923, 923], "mapped", [955]], [[924, 924], "mapped", [956]], [[925, 925], "mapped", [957]], [[926, 926], "mapped", [958]], [[927, 927], "mapped", [959]], [[928, 928], "mapped", [960]], [[929, 929], "mapped", [961]], [[930, 930], "disallowed"], [[931, 931], "mapped", [963]], [[932, 932], "mapped", [964]], [[933, 933], "mapped", [965]], [[934, 934], "mapped", [966]], [[935, 935], "mapped", [967]], [[936, 936], "mapped", [968]], [[937, 937], "mapped", [969]], [[938, 938], "mapped", [970]], [[939, 939], "mapped", [971]], [[940, 961], "valid"], [[962, 962], "deviation", [963]], [[963, 974], "valid"], [[975, 975], "mapped", [983]], [[976, 976], "mapped", [946]], [[977, 977], "mapped", [952]], [[978, 978], "mapped", [965]], [[979, 979], "mapped", [973]], [[980, 980], "mapped", [971]], [[981, 981], "mapped", [966]], [[982, 982], "mapped", [960]], [[983, 983], "valid"], [[984, 984], "mapped", [985]], [[985, 985], "valid"], [[986, 986], "mapped", [987]], [[987, 987], "valid"], [[988, 988], "mapped", [989]], [[989, 989], "valid"], [[990, 990], "mapped", [991]], [[991, 991], "valid"], [[992, 992], "mapped", [993]], [[993, 993], "valid"], [[994, 994], "mapped", [995]], [[995, 995], "valid"], [[996, 996], "mapped", [997]], [[997, 997], "valid"], [[998, 998], "mapped", [999]], [[999, 999], "valid"], [[1e3, 1e3], "mapped", [1001]], [[1001, 1001], "valid"], [[1002, 1002], "mapped", [1003]], [[1003, 1003], "valid"], [[1004, 1004], "mapped", [1005]], [[1005, 1005], "valid"], [[1006, 1006], "mapped", [1007]], [[1007, 1007], "valid"], [[1008, 1008], "mapped", [954]], [[1009, 1009], "mapped", [961]], [[1010, 1010], "mapped", [963]], [[1011, 1011], "valid"], [[1012, 1012], "mapped", [952]], [[1013, 1013], "mapped", [949]], [[1014, 1014], "valid", [], "NV8"], [[1015, 1015], "mapped", [1016]], [[1016, 1016], "valid"], [[1017, 1017], "mapped", [963]], [[1018, 1018], "mapped", [1019]], [[1019, 1019], "valid"], [[1020, 1020], "valid"], [[1021, 1021], "mapped", [891]], [[1022, 1022], "mapped", [892]], [[1023, 1023], "mapped", [893]], [[1024, 1024], "mapped", [1104]], [[1025, 1025], "mapped", [1105]], [[1026, 1026], "mapped", [1106]], [[1027, 1027], "mapped", [1107]], [[1028, 1028], "mapped", [1108]], [[1029, 1029], "mapped", [1109]], [[1030, 1030], "mapped", [1110]], [[1031, 1031], "mapped", [1111]], [[1032, 1032], "mapped", [1112]], [[1033, 1033], "mapped", [1113]], [[1034, 1034], "mapped", [1114]], [[1035, 1035], "mapped", [1115]], [[1036, 1036], "mapped", [1116]], [[1037, 1037], "mapped", [1117]], [[1038, 1038], "mapped", [1118]], [[1039, 1039], "mapped", [1119]], [[1040, 1040], "mapped", [1072]], [[1041, 1041], "mapped", [1073]], [[1042, 1042], "mapped", [1074]], [[1043, 1043], "mapped", [1075]], [[1044, 1044], "mapped", [1076]], [[1045, 1045], "mapped", [1077]], [[1046, 1046], "mapped", [1078]], [[1047, 1047], "mapped", [1079]], [[1048, 1048], "mapped", [1080]], [[1049, 1049], "mapped", [1081]], [[1050, 1050], "mapped", [1082]], [[1051, 1051], "mapped", [1083]], [[1052, 1052], "mapped", [1084]], [[1053, 1053], "mapped", [1085]], [[1054, 1054], "mapped", [1086]], [[1055, 1055], "mapped", [1087]], [[1056, 1056], "mapped", [1088]], [[1057, 1057], "mapped", [1089]], [[1058, 1058], "mapped", [1090]], [[1059, 1059], "mapped", [1091]], [[1060, 1060], "mapped", [1092]], [[1061, 1061], "mapped", [1093]], [[1062, 1062], "mapped", [1094]], [[1063, 1063], "mapped", [1095]], [[1064, 1064], "mapped", [1096]], [[1065, 1065], "mapped", [1097]], [[1066, 1066], "mapped", [1098]], [[1067, 1067], "mapped", [1099]], [[1068, 1068], "mapped", [1100]], [[1069, 1069], "mapped", [1101]], [[1070, 1070], "mapped", [1102]], [[1071, 1071], "mapped", [1103]], [[1072, 1103], "valid"], [[1104, 1104], "valid"], [[1105, 1116], "valid"], [[1117, 1117], "valid"], [[1118, 1119], "valid"], [[1120, 1120], "mapped", [1121]], [[1121, 1121], "valid"], [[1122, 1122], "mapped", [1123]], [[1123, 1123], "valid"], [[1124, 1124], "mapped", [1125]], [[1125, 1125], "valid"], [[1126, 1126], "mapped", [1127]], [[1127, 1127], "valid"], [[1128, 1128], "mapped", [1129]], [[1129, 1129], "valid"], [[1130, 1130], "mapped", [1131]], [[1131, 1131], "valid"], [[1132, 1132], "mapped", [1133]], [[1133, 1133], "valid"], [[1134, 1134], "mapped", [1135]], [[1135, 1135], "valid"], [[1136, 1136], "mapped", [1137]], [[1137, 1137], "valid"], [[1138, 1138], "mapped", [1139]], [[1139, 1139], "valid"], [[1140, 1140], "mapped", [1141]], [[1141, 1141], "valid"], [[1142, 1142], "mapped", [1143]], [[1143, 1143], "valid"], [[1144, 1144], "mapped", [1145]], [[1145, 1145], "valid"], [[1146, 1146], "mapped", [1147]], [[1147, 1147], "valid"], [[1148, 1148], "mapped", [1149]], [[1149, 1149], "valid"], [[1150, 1150], "mapped", [1151]], [[1151, 1151], "valid"], [[1152, 1152], "mapped", [1153]], [[1153, 1153], "valid"], [[1154, 1154], "valid", [], "NV8"], [[1155, 1158], "valid"], [[1159, 1159], "valid"], [[1160, 1161], "valid", [], "NV8"], [[1162, 1162], "mapped", [1163]], [[1163, 1163], "valid"], [[1164, 1164], "mapped", [1165]], [[1165, 1165], "valid"], [[1166, 1166], "mapped", [1167]], [[1167, 1167], "valid"], [[1168, 1168], "mapped", [1169]], [[1169, 1169], "valid"], [[1170, 1170], "mapped", [1171]], [[1171, 1171], "valid"], [[1172, 1172], "mapped", [1173]], [[1173, 1173], "valid"], [[1174, 1174], "mapped", [1175]], [[1175, 1175], "valid"], [[1176, 1176], "mapped", [1177]], [[1177, 1177], "valid"], [[1178, 1178], "mapped", [1179]], [[1179, 1179], "valid"], [[1180, 1180], "mapped", [1181]], [[1181, 1181], "valid"], [[1182, 1182], "mapped", [1183]], [[1183, 1183], "valid"], [[1184, 1184], "mapped", [1185]], [[1185, 1185], "valid"], [[1186, 1186], "mapped", [1187]], [[1187, 1187], "valid"], [[1188, 1188], "mapped", [1189]], [[1189, 1189], "valid"], [[1190, 1190], "mapped", [1191]], [[1191, 1191], "valid"], [[1192, 1192], "mapped", [1193]], [[1193, 1193], "valid"], [[1194, 1194], "mapped", [1195]], [[1195, 1195], "valid"], [[1196, 1196], "mapped", [1197]], [[1197, 1197], "valid"], [[1198, 1198], "mapped", [1199]], [[1199, 1199], "valid"], [[1200, 1200], "mapped", [1201]], [[1201, 1201], "valid"], [[1202, 1202], "mapped", [1203]], [[1203, 1203], "valid"], [[1204, 1204], "mapped", [1205]], [[1205, 1205], "valid"], [[1206, 1206], "mapped", [1207]], [[1207, 1207], "valid"], [[1208, 1208], "mapped", [1209]], [[1209, 1209], "valid"], [[1210, 1210], "mapped", [1211]], [[1211, 1211], "valid"], [[1212, 1212], "mapped", [1213]], [[1213, 1213], "valid"], [[1214, 1214], "mapped", [1215]], [[1215, 1215], "valid"], [[1216, 1216], "disallowed"], [[1217, 1217], "mapped", [1218]], [[1218, 1218], "valid"], [[1219, 1219], "mapped", [1220]], [[1220, 1220], "valid"], [[1221, 1221], "mapped", [1222]], [[1222, 1222], "valid"], [[1223, 1223], "mapped", [1224]], [[1224, 1224], "valid"], [[1225, 1225], "mapped", [1226]], [[1226, 1226], "valid"], [[1227, 1227], "mapped", [1228]], [[1228, 1228], "valid"], [[1229, 1229], "mapped", [1230]], [[1230, 1230], "valid"], [[1231, 1231], "valid"], [[1232, 1232], "mapped", [1233]], [[1233, 1233], "valid"], [[1234, 1234], "mapped", [1235]], [[1235, 1235], "valid"], [[1236, 1236], "mapped", [1237]], [[1237, 1237], "valid"], [[1238, 1238], "mapped", [1239]], [[1239, 1239], "valid"], [[1240, 1240], "mapped", [1241]], [[1241, 1241], "valid"], [[1242, 1242], "mapped", [1243]], [[1243, 1243], "valid"], [[1244, 1244], "mapped", [1245]], [[1245, 1245], "valid"], [[1246, 1246], "mapped", [1247]], [[1247, 1247], "valid"], [[1248, 1248], "mapped", [1249]], [[1249, 1249], "valid"], [[1250, 1250], "mapped", [1251]], [[1251, 1251], "valid"], [[1252, 1252], "mapped", [1253]], [[1253, 1253], "valid"], [[1254, 1254], "mapped", [1255]], [[1255, 1255], "valid"], [[1256, 1256], "mapped", [1257]], [[1257, 1257], "valid"], [[1258, 1258], "mapped", [1259]], [[1259, 1259], "valid"], [[1260, 1260], "mapped", [1261]], [[1261, 1261], "valid"], [[1262, 1262], "mapped", [1263]], [[1263, 1263], "valid"], [[1264, 1264], "mapped", [1265]], [[1265, 1265], "valid"], [[1266, 1266], "mapped", [1267]], [[1267, 1267], "valid"], [[1268, 1268], "mapped", [1269]], [[1269, 1269], "valid"], [[1270, 1270], "mapped", [1271]], [[1271, 1271], "valid"], [[1272, 1272], "mapped", [1273]], [[1273, 1273], "valid"], [[1274, 1274], "mapped", [1275]], [[1275, 1275], "valid"], [[1276, 1276], "mapped", [1277]], [[1277, 1277], "valid"], [[1278, 1278], "mapped", [1279]], [[1279, 1279], "valid"], [[1280, 1280], "mapped", [1281]], [[1281, 1281], "valid"], [[1282, 1282], "mapped", [1283]], [[1283, 1283], "valid"], [[1284, 1284], "mapped", [1285]], [[1285, 1285], "valid"], [[1286, 1286], "mapped", [1287]], [[1287, 1287], "valid"], [[1288, 1288], "mapped", [1289]], [[1289, 1289], "valid"], [[1290, 1290], "mapped", [1291]], [[1291, 1291], "valid"], [[1292, 1292], "mapped", [1293]], [[1293, 1293], "valid"], [[1294, 1294], "mapped", [1295]], [[1295, 1295], "valid"], [[1296, 1296], "mapped", [1297]], [[1297, 1297], "valid"], [[1298, 1298], "mapped", [1299]], [[1299, 1299], "valid"], [[1300, 1300], "mapped", [1301]], [[1301, 1301], "valid"], [[1302, 1302], "mapped", [1303]], [[1303, 1303], "valid"], [[1304, 1304], "mapped", [1305]], [[1305, 1305], "valid"], [[1306, 1306], "mapped", [1307]], [[1307, 1307], "valid"], [[1308, 1308], "mapped", [1309]], [[1309, 1309], "valid"], [[1310, 1310], "mapped", [1311]], [[1311, 1311], "valid"], [[1312, 1312], "mapped", [1313]], [[1313, 1313], "valid"], [[1314, 1314], "mapped", [1315]], [[1315, 1315], "valid"], [[1316, 1316], "mapped", [1317]], [[1317, 1317], "valid"], [[1318, 1318], "mapped", [1319]], [[1319, 1319], "valid"], [[1320, 1320], "mapped", [1321]], [[1321, 1321], "valid"], [[1322, 1322], "mapped", [1323]], [[1323, 1323], "valid"], [[1324, 1324], "mapped", [1325]], [[1325, 1325], "valid"], [[1326, 1326], "mapped", [1327]], [[1327, 1327], "valid"], [[1328, 1328], "disallowed"], [[1329, 1329], "mapped", [1377]], [[1330, 1330], "mapped", [1378]], [[1331, 1331], "mapped", [1379]], [[1332, 1332], "mapped", [1380]], [[1333, 1333], "mapped", [1381]], [[1334, 1334], "mapped", [1382]], [[1335, 1335], "mapped", [1383]], [[1336, 1336], "mapped", [1384]], [[1337, 1337], "mapped", [1385]], [[1338, 1338], "mapped", [1386]], [[1339, 1339], "mapped", [1387]], [[1340, 1340], "mapped", [1388]], [[1341, 1341], "mapped", [1389]], [[1342, 1342], "mapped", [1390]], [[1343, 1343], "mapped", [1391]], [[1344, 1344], "mapped", [1392]], [[1345, 1345], "mapped", [1393]], [[1346, 1346], "mapped", [1394]], [[1347, 1347], "mapped", [1395]], [[1348, 1348], "mapped", [1396]], [[1349, 1349], "mapped", [1397]], [[1350, 1350], "mapped", [1398]], [[1351, 1351], "mapped", [1399]], [[1352, 1352], "mapped", [1400]], [[1353, 1353], "mapped", [1401]], [[1354, 1354], "mapped", [1402]], [[1355, 1355], "mapped", [1403]], [[1356, 1356], "mapped", [1404]], [[1357, 1357], "mapped", [1405]], [[1358, 1358], "mapped", [1406]], [[1359, 1359], "mapped", [1407]], [[1360, 1360], "mapped", [1408]], [[1361, 1361], "mapped", [1409]], [[1362, 1362], "mapped", [1410]], [[1363, 1363], "mapped", [1411]], [[1364, 1364], "mapped", [1412]], [[1365, 1365], "mapped", [1413]], [[1366, 1366], "mapped", [1414]], [[1367, 1368], "disallowed"], [[1369, 1369], "valid"], [[1370, 1375], "valid", [], "NV8"], [[1376, 1376], "disallowed"], [[1377, 1414], "valid"], [[1415, 1415], "mapped", [1381, 1410]], [[1416, 1416], "disallowed"], [[1417, 1417], "valid", [], "NV8"], [[1418, 1418], "valid", [], "NV8"], [[1419, 1420], "disallowed"], [[1421, 1422], "valid", [], "NV8"], [[1423, 1423], "valid", [], "NV8"], [[1424, 1424], "disallowed"], [[1425, 1441], "valid"], [[1442, 1442], "valid"], [[1443, 1455], "valid"], [[1456, 1465], "valid"], [[1466, 1466], "valid"], [[1467, 1469], "valid"], [[1470, 1470], "valid", [], "NV8"], [[1471, 1471], "valid"], [[1472, 1472], "valid", [], "NV8"], [[1473, 1474], "valid"], [[1475, 1475], "valid", [], "NV8"], [[1476, 1476], "valid"], [[1477, 1477], "valid"], [[1478, 1478], "valid", [], "NV8"], [[1479, 1479], "valid"], [[1480, 1487], "disallowed"], [[1488, 1514], "valid"], [[1515, 1519], "disallowed"], [[1520, 1524], "valid"], [[1525, 1535], "disallowed"], [[1536, 1539], "disallowed"], [[1540, 1540], "disallowed"], [[1541, 1541], "disallowed"], [[1542, 1546], "valid", [], "NV8"], [[1547, 1547], "valid", [], "NV8"], [[1548, 1548], "valid", [], "NV8"], [[1549, 1551], "valid", [], "NV8"], [[1552, 1557], "valid"], [[1558, 1562], "valid"], [[1563, 1563], "valid", [], "NV8"], [[1564, 1564], "disallowed"], [[1565, 1565], "disallowed"], [[1566, 1566], "valid", [], "NV8"], [[1567, 1567], "valid", [], "NV8"], [[1568, 1568], "valid"], [[1569, 1594], "valid"], [[1595, 1599], "valid"], [[1600, 1600], "valid", [], "NV8"], [[1601, 1618], "valid"], [[1619, 1621], "valid"], [[1622, 1624], "valid"], [[1625, 1630], "valid"], [[1631, 1631], "valid"], [[1632, 1641], "valid"], [[1642, 1645], "valid", [], "NV8"], [[1646, 1647], "valid"], [[1648, 1652], "valid"], [[1653, 1653], "mapped", [1575, 1652]], [[1654, 1654], "mapped", [1608, 1652]], [[1655, 1655], "mapped", [1735, 1652]], [[1656, 1656], "mapped", [1610, 1652]], [[1657, 1719], "valid"], [[1720, 1721], "valid"], [[1722, 1726], "valid"], [[1727, 1727], "valid"], [[1728, 1742], "valid"], [[1743, 1743], "valid"], [[1744, 1747], "valid"], [[1748, 1748], "valid", [], "NV8"], [[1749, 1756], "valid"], [[1757, 1757], "disallowed"], [[1758, 1758], "valid", [], "NV8"], [[1759, 1768], "valid"], [[1769, 1769], "valid", [], "NV8"], [[1770, 1773], "valid"], [[1774, 1775], "valid"], [[1776, 1785], "valid"], [[1786, 1790], "valid"], [[1791, 1791], "valid"], [[1792, 1805], "valid", [], "NV8"], [[1806, 1806], "disallowed"], [[1807, 1807], "disallowed"], [[1808, 1836], "valid"], [[1837, 1839], "valid"], [[1840, 1866], "valid"], [[1867, 1868], "disallowed"], [[1869, 1871], "valid"], [[1872, 1901], "valid"], [[1902, 1919], "valid"], [[1920, 1968], "valid"], [[1969, 1969], "valid"], [[1970, 1983], "disallowed"], [[1984, 2037], "valid"], [[2038, 2042], "valid", [], "NV8"], [[2043, 2047], "disallowed"], [[2048, 2093], "valid"], [[2094, 2095], "disallowed"], [[2096, 2110], "valid", [], "NV8"], [[2111, 2111], "disallowed"], [[2112, 2139], "valid"], [[2140, 2141], "disallowed"], [[2142, 2142], "valid", [], "NV8"], [[2143, 2207], "disallowed"], [[2208, 2208], "valid"], [[2209, 2209], "valid"], [[2210, 2220], "valid"], [[2221, 2226], "valid"], [[2227, 2228], "valid"], [[2229, 2274], "disallowed"], [[2275, 2275], "valid"], [[2276, 2302], "valid"], [[2303, 2303], "valid"], [[2304, 2304], "valid"], [[2305, 2307], "valid"], [[2308, 2308], "valid"], [[2309, 2361], "valid"], [[2362, 2363], "valid"], [[2364, 2381], "valid"], [[2382, 2382], "valid"], [[2383, 2383], "valid"], [[2384, 2388], "valid"], [[2389, 2389], "valid"], [[2390, 2391], "valid"], [[2392, 2392], "mapped", [2325, 2364]], [[2393, 2393], "mapped", [2326, 2364]], [[2394, 2394], "mapped", [2327, 2364]], [[2395, 2395], "mapped", [2332, 2364]], [[2396, 2396], "mapped", [2337, 2364]], [[2397, 2397], "mapped", [2338, 2364]], [[2398, 2398], "mapped", [2347, 2364]], [[2399, 2399], "mapped", [2351, 2364]], [[2400, 2403], "valid"], [[2404, 2405], "valid", [], "NV8"], [[2406, 2415], "valid"], [[2416, 2416], "valid", [], "NV8"], [[2417, 2418], "valid"], [[2419, 2423], "valid"], [[2424, 2424], "valid"], [[2425, 2426], "valid"], [[2427, 2428], "valid"], [[2429, 2429], "valid"], [[2430, 2431], "valid"], [[2432, 2432], "valid"], [[2433, 2435], "valid"], [[2436, 2436], "disallowed"], [[2437, 2444], "valid"], [[2445, 2446], "disallowed"], [[2447, 2448], "valid"], [[2449, 2450], "disallowed"], [[2451, 2472], "valid"], [[2473, 2473], "disallowed"], [[2474, 2480], "valid"], [[2481, 2481], "disallowed"], [[2482, 2482], "valid"], [[2483, 2485], "disallowed"], [[2486, 2489], "valid"], [[2490, 2491], "disallowed"], [[2492, 2492], "valid"], [[2493, 2493], "valid"], [[2494, 2500], "valid"], [[2501, 2502], "disallowed"], [[2503, 2504], "valid"], [[2505, 2506], "disallowed"], [[2507, 2509], "valid"], [[2510, 2510], "valid"], [[2511, 2518], "disallowed"], [[2519, 2519], "valid"], [[2520, 2523], "disallowed"], [[2524, 2524], "mapped", [2465, 2492]], [[2525, 2525], "mapped", [2466, 2492]], [[2526, 2526], "disallowed"], [[2527, 2527], "mapped", [2479, 2492]], [[2528, 2531], "valid"], [[2532, 2533], "disallowed"], [[2534, 2545], "valid"], [[2546, 2554], "valid", [], "NV8"], [[2555, 2555], "valid", [], "NV8"], [[2556, 2560], "disallowed"], [[2561, 2561], "valid"], [[2562, 2562], "valid"], [[2563, 2563], "valid"], [[2564, 2564], "disallowed"], [[2565, 2570], "valid"], [[2571, 2574], "disallowed"], [[2575, 2576], "valid"], [[2577, 2578], "disallowed"], [[2579, 2600], "valid"], [[2601, 2601], "disallowed"], [[2602, 2608], "valid"], [[2609, 2609], "disallowed"], [[2610, 2610], "valid"], [[2611, 2611], "mapped", [2610, 2620]], [[2612, 2612], "disallowed"], [[2613, 2613], "valid"], [[2614, 2614], "mapped", [2616, 2620]], [[2615, 2615], "disallowed"], [[2616, 2617], "valid"], [[2618, 2619], "disallowed"], [[2620, 2620], "valid"], [[2621, 2621], "disallowed"], [[2622, 2626], "valid"], [[2627, 2630], "disallowed"], [[2631, 2632], "valid"], [[2633, 2634], "disallowed"], [[2635, 2637], "valid"], [[2638, 2640], "disallowed"], [[2641, 2641], "valid"], [[2642, 2648], "disallowed"], [[2649, 2649], "mapped", [2582, 2620]], [[2650, 2650], "mapped", [2583, 2620]], [[2651, 2651], "mapped", [2588, 2620]], [[2652, 2652], "valid"], [[2653, 2653], "disallowed"], [[2654, 2654], "mapped", [2603, 2620]], [[2655, 2661], "disallowed"], [[2662, 2676], "valid"], [[2677, 2677], "valid"], [[2678, 2688], "disallowed"], [[2689, 2691], "valid"], [[2692, 2692], "disallowed"], [[2693, 2699], "valid"], [[2700, 2700], "valid"], [[2701, 2701], "valid"], [[2702, 2702], "disallowed"], [[2703, 2705], "valid"], [[2706, 2706], "disallowed"], [[2707, 2728], "valid"], [[2729, 2729], "disallowed"], [[2730, 2736], "valid"], [[2737, 2737], "disallowed"], [[2738, 2739], "valid"], [[2740, 2740], "disallowed"], [[2741, 2745], "valid"], [[2746, 2747], "disallowed"], [[2748, 2757], "valid"], [[2758, 2758], "disallowed"], [[2759, 2761], "valid"], [[2762, 2762], "disallowed"], [[2763, 2765], "valid"], [[2766, 2767], "disallowed"], [[2768, 2768], "valid"], [[2769, 2783], "disallowed"], [[2784, 2784], "valid"], [[2785, 2787], "valid"], [[2788, 2789], "disallowed"], [[2790, 2799], "valid"], [[2800, 2800], "valid", [], "NV8"], [[2801, 2801], "valid", [], "NV8"], [[2802, 2808], "disallowed"], [[2809, 2809], "valid"], [[2810, 2816], "disallowed"], [[2817, 2819], "valid"], [[2820, 2820], "disallowed"], [[2821, 2828], "valid"], [[2829, 2830], "disallowed"], [[2831, 2832], "valid"], [[2833, 2834], "disallowed"], [[2835, 2856], "valid"], [[2857, 2857], "disallowed"], [[2858, 2864], "valid"], [[2865, 2865], "disallowed"], [[2866, 2867], "valid"], [[2868, 2868], "disallowed"], [[2869, 2869], "valid"], [[2870, 2873], "valid"], [[2874, 2875], "disallowed"], [[2876, 2883], "valid"], [[2884, 2884], "valid"], [[2885, 2886], "disallowed"], [[2887, 2888], "valid"], [[2889, 2890], "disallowed"], [[2891, 2893], "valid"], [[2894, 2901], "disallowed"], [[2902, 2903], "valid"], [[2904, 2907], "disallowed"], [[2908, 2908], "mapped", [2849, 2876]], [[2909, 2909], "mapped", [2850, 2876]], [[2910, 2910], "disallowed"], [[2911, 2913], "valid"], [[2914, 2915], "valid"], [[2916, 2917], "disallowed"], [[2918, 2927], "valid"], [[2928, 2928], "valid", [], "NV8"], [[2929, 2929], "valid"], [[2930, 2935], "valid", [], "NV8"], [[2936, 2945], "disallowed"], [[2946, 2947], "valid"], [[2948, 2948], "disallowed"], [[2949, 2954], "valid"], [[2955, 2957], "disallowed"], [[2958, 2960], "valid"], [[2961, 2961], "disallowed"], [[2962, 2965], "valid"], [[2966, 2968], "disallowed"], [[2969, 2970], "valid"], [[2971, 2971], "disallowed"], [[2972, 2972], "valid"], [[2973, 2973], "disallowed"], [[2974, 2975], "valid"], [[2976, 2978], "disallowed"], [[2979, 2980], "valid"], [[2981, 2983], "disallowed"], [[2984, 2986], "valid"], [[2987, 2989], "disallowed"], [[2990, 2997], "valid"], [[2998, 2998], "valid"], [[2999, 3001], "valid"], [[3002, 3005], "disallowed"], [[3006, 3010], "valid"], [[3011, 3013], "disallowed"], [[3014, 3016], "valid"], [[3017, 3017], "disallowed"], [[3018, 3021], "valid"], [[3022, 3023], "disallowed"], [[3024, 3024], "valid"], [[3025, 3030], "disallowed"], [[3031, 3031], "valid"], [[3032, 3045], "disallowed"], [[3046, 3046], "valid"], [[3047, 3055], "valid"], [[3056, 3058], "valid", [], "NV8"], [[3059, 3066], "valid", [], "NV8"], [[3067, 3071], "disallowed"], [[3072, 3072], "valid"], [[3073, 3075], "valid"], [[3076, 3076], "disallowed"], [[3077, 3084], "valid"], [[3085, 3085], "disallowed"], [[3086, 3088], "valid"], [[3089, 3089], "disallowed"], [[3090, 3112], "valid"], [[3113, 3113], "disallowed"], [[3114, 3123], "valid"], [[3124, 3124], "valid"], [[3125, 3129], "valid"], [[3130, 3132], "disallowed"], [[3133, 3133], "valid"], [[3134, 3140], "valid"], [[3141, 3141], "disallowed"], [[3142, 3144], "valid"], [[3145, 3145], "disallowed"], [[3146, 3149], "valid"], [[3150, 3156], "disallowed"], [[3157, 3158], "valid"], [[3159, 3159], "disallowed"], [[3160, 3161], "valid"], [[3162, 3162], "valid"], [[3163, 3167], "disallowed"], [[3168, 3169], "valid"], [[3170, 3171], "valid"], [[3172, 3173], "disallowed"], [[3174, 3183], "valid"], [[3184, 3191], "disallowed"], [[3192, 3199], "valid", [], "NV8"], [[3200, 3200], "disallowed"], [[3201, 3201], "valid"], [[3202, 3203], "valid"], [[3204, 3204], "disallowed"], [[3205, 3212], "valid"], [[3213, 3213], "disallowed"], [[3214, 3216], "valid"], [[3217, 3217], "disallowed"], [[3218, 3240], "valid"], [[3241, 3241], "disallowed"], [[3242, 3251], "valid"], [[3252, 3252], "disallowed"], [[3253, 3257], "valid"], [[3258, 3259], "disallowed"], [[3260, 3261], "valid"], [[3262, 3268], "valid"], [[3269, 3269], "disallowed"], [[3270, 3272], "valid"], [[3273, 3273], "disallowed"], [[3274, 3277], "valid"], [[3278, 3284], "disallowed"], [[3285, 3286], "valid"], [[3287, 3293], "disallowed"], [[3294, 3294], "valid"], [[3295, 3295], "disallowed"], [[3296, 3297], "valid"], [[3298, 3299], "valid"], [[3300, 3301], "disallowed"], [[3302, 3311], "valid"], [[3312, 3312], "disallowed"], [[3313, 3314], "valid"], [[3315, 3328], "disallowed"], [[3329, 3329], "valid"], [[3330, 3331], "valid"], [[3332, 3332], "disallowed"], [[3333, 3340], "valid"], [[3341, 3341], "disallowed"], [[3342, 3344], "valid"], [[3345, 3345], "disallowed"], [[3346, 3368], "valid"], [[3369, 3369], "valid"], [[3370, 3385], "valid"], [[3386, 3386], "valid"], [[3387, 3388], "disallowed"], [[3389, 3389], "valid"], [[3390, 3395], "valid"], [[3396, 3396], "valid"], [[3397, 3397], "disallowed"], [[3398, 3400], "valid"], [[3401, 3401], "disallowed"], [[3402, 3405], "valid"], [[3406, 3406], "valid"], [[3407, 3414], "disallowed"], [[3415, 3415], "valid"], [[3416, 3422], "disallowed"], [[3423, 3423], "valid"], [[3424, 3425], "valid"], [[3426, 3427], "valid"], [[3428, 3429], "disallowed"], [[3430, 3439], "valid"], [[3440, 3445], "valid", [], "NV8"], [[3446, 3448], "disallowed"], [[3449, 3449], "valid", [], "NV8"], [[3450, 3455], "valid"], [[3456, 3457], "disallowed"], [[3458, 3459], "valid"], [[3460, 3460], "disallowed"], [[3461, 3478], "valid"], [[3479, 3481], "disallowed"], [[3482, 3505], "valid"], [[3506, 3506], "disallowed"], [[3507, 3515], "valid"], [[3516, 3516], "disallowed"], [[3517, 3517], "valid"], [[3518, 3519], "disallowed"], [[3520, 3526], "valid"], [[3527, 3529], "disallowed"], [[3530, 3530], "valid"], [[3531, 3534], "disallowed"], [[3535, 3540], "valid"], [[3541, 3541], "disallowed"], [[3542, 3542], "valid"], [[3543, 3543], "disallowed"], [[3544, 3551], "valid"], [[3552, 3557], "disallowed"], [[3558, 3567], "valid"], [[3568, 3569], "disallowed"], [[3570, 3571], "valid"], [[3572, 3572], "valid", [], "NV8"], [[3573, 3584], "disallowed"], [[3585, 3634], "valid"], [[3635, 3635], "mapped", [3661, 3634]], [[3636, 3642], "valid"], [[3643, 3646], "disallowed"], [[3647, 3647], "valid", [], "NV8"], [[3648, 3662], "valid"], [[3663, 3663], "valid", [], "NV8"], [[3664, 3673], "valid"], [[3674, 3675], "valid", [], "NV8"], [[3676, 3712], "disallowed"], [[3713, 3714], "valid"], [[3715, 3715], "disallowed"], [[3716, 3716], "valid"], [[3717, 3718], "disallowed"], [[3719, 3720], "valid"], [[3721, 3721], "disallowed"], [[3722, 3722], "valid"], [[3723, 3724], "disallowed"], [[3725, 3725], "valid"], [[3726, 3731], "disallowed"], [[3732, 3735], "valid"], [[3736, 3736], "disallowed"], [[3737, 3743], "valid"], [[3744, 3744], "disallowed"], [[3745, 3747], "valid"], [[3748, 3748], "disallowed"], [[3749, 3749], "valid"], [[3750, 3750], "disallowed"], [[3751, 3751], "valid"], [[3752, 3753], "disallowed"], [[3754, 3755], "valid"], [[3756, 3756], "disallowed"], [[3757, 3762], "valid"], [[3763, 3763], "mapped", [3789, 3762]], [[3764, 3769], "valid"], [[3770, 3770], "disallowed"], [[3771, 3773], "valid"], [[3774, 3775], "disallowed"], [[3776, 3780], "valid"], [[3781, 3781], "disallowed"], [[3782, 3782], "valid"], [[3783, 3783], "disallowed"], [[3784, 3789], "valid"], [[3790, 3791], "disallowed"], [[3792, 3801], "valid"], [[3802, 3803], "disallowed"], [[3804, 3804], "mapped", [3755, 3737]], [[3805, 3805], "mapped", [3755, 3745]], [[3806, 3807], "valid"], [[3808, 3839], "disallowed"], [[3840, 3840], "valid"], [[3841, 3850], "valid", [], "NV8"], [[3851, 3851], "valid"], [[3852, 3852], "mapped", [3851]], [[3853, 3863], "valid", [], "NV8"], [[3864, 3865], "valid"], [[3866, 3871], "valid", [], "NV8"], [[3872, 3881], "valid"], [[3882, 3892], "valid", [], "NV8"], [[3893, 3893], "valid"], [[3894, 3894], "valid", [], "NV8"], [[3895, 3895], "valid"], [[3896, 3896], "valid", [], "NV8"], [[3897, 3897], "valid"], [[3898, 3901], "valid", [], "NV8"], [[3902, 3906], "valid"], [[3907, 3907], "mapped", [3906, 4023]], [[3908, 3911], "valid"], [[3912, 3912], "disallowed"], [[3913, 3916], "valid"], [[3917, 3917], "mapped", [3916, 4023]], [[3918, 3921], "valid"], [[3922, 3922], "mapped", [3921, 4023]], [[3923, 3926], "valid"], [[3927, 3927], "mapped", [3926, 4023]], [[3928, 3931], "valid"], [[3932, 3932], "mapped", [3931, 4023]], [[3933, 3944], "valid"], [[3945, 3945], "mapped", [3904, 4021]], [[3946, 3946], "valid"], [[3947, 3948], "valid"], [[3949, 3952], "disallowed"], [[3953, 3954], "valid"], [[3955, 3955], "mapped", [3953, 3954]], [[3956, 3956], "valid"], [[3957, 3957], "mapped", [3953, 3956]], [[3958, 3958], "mapped", [4018, 3968]], [[3959, 3959], "mapped", [4018, 3953, 3968]], [[3960, 3960], "mapped", [4019, 3968]], [[3961, 3961], "mapped", [4019, 3953, 3968]], [[3962, 3968], "valid"], [[3969, 3969], "mapped", [3953, 3968]], [[3970, 3972], "valid"], [[3973, 3973], "valid", [], "NV8"], [[3974, 3979], "valid"], [[3980, 3983], "valid"], [[3984, 3986], "valid"], [[3987, 3987], "mapped", [3986, 4023]], [[3988, 3989], "valid"], [[3990, 3990], "valid"], [[3991, 3991], "valid"], [[3992, 3992], "disallowed"], [[3993, 3996], "valid"], [[3997, 3997], "mapped", [3996, 4023]], [[3998, 4001], "valid"], [[4002, 4002], "mapped", [4001, 4023]], [[4003, 4006], "valid"], [[4007, 4007], "mapped", [4006, 4023]], [[4008, 4011], "valid"], [[4012, 4012], "mapped", [4011, 4023]], [[4013, 4013], "valid"], [[4014, 4016], "valid"], [[4017, 4023], "valid"], [[4024, 4024], "valid"], [[4025, 4025], "mapped", [3984, 4021]], [[4026, 4028], "valid"], [[4029, 4029], "disallowed"], [[4030, 4037], "valid", [], "NV8"], [[4038, 4038], "valid"], [[4039, 4044], "valid", [], "NV8"], [[4045, 4045], "disallowed"], [[4046, 4046], "valid", [], "NV8"], [[4047, 4047], "valid", [], "NV8"], [[4048, 4049], "valid", [], "NV8"], [[4050, 4052], "valid", [], "NV8"], [[4053, 4056], "valid", [], "NV8"], [[4057, 4058], "valid", [], "NV8"], [[4059, 4095], "disallowed"], [[4096, 4129], "valid"], [[4130, 4130], "valid"], [[4131, 4135], "valid"], [[4136, 4136], "valid"], [[4137, 4138], "valid"], [[4139, 4139], "valid"], [[4140, 4146], "valid"], [[4147, 4149], "valid"], [[4150, 4153], "valid"], [[4154, 4159], "valid"], [[4160, 4169], "valid"], [[4170, 4175], "valid", [], "NV8"], [[4176, 4185], "valid"], [[4186, 4249], "valid"], [[4250, 4253], "valid"], [[4254, 4255], "valid", [], "NV8"], [[4256, 4293], "disallowed"], [[4294, 4294], "disallowed"], [[4295, 4295], "mapped", [11559]], [[4296, 4300], "disallowed"], [[4301, 4301], "mapped", [11565]], [[4302, 4303], "disallowed"], [[4304, 4342], "valid"], [[4343, 4344], "valid"], [[4345, 4346], "valid"], [[4347, 4347], "valid", [], "NV8"], [[4348, 4348], "mapped", [4316]], [[4349, 4351], "valid"], [[4352, 4441], "valid", [], "NV8"], [[4442, 4446], "valid", [], "NV8"], [[4447, 4448], "disallowed"], [[4449, 4514], "valid", [], "NV8"], [[4515, 4519], "valid", [], "NV8"], [[4520, 4601], "valid", [], "NV8"], [[4602, 4607], "valid", [], "NV8"], [[4608, 4614], "valid"], [[4615, 4615], "valid"], [[4616, 4678], "valid"], [[4679, 4679], "valid"], [[4680, 4680], "valid"], [[4681, 4681], "disallowed"], [[4682, 4685], "valid"], [[4686, 4687], "disallowed"], [[4688, 4694], "valid"], [[4695, 4695], "disallowed"], [[4696, 4696], "valid"], [[4697, 4697], "disallowed"], [[4698, 4701], "valid"], [[4702, 4703], "disallowed"], [[4704, 4742], "valid"], [[4743, 4743], "valid"], [[4744, 4744], "valid"], [[4745, 4745], "disallowed"], [[4746, 4749], "valid"], [[4750, 4751], "disallowed"], [[4752, 4782], "valid"], [[4783, 4783], "valid"], [[4784, 4784], "valid"], [[4785, 4785], "disallowed"], [[4786, 4789], "valid"], [[4790, 4791], "disallowed"], [[4792, 4798], "valid"], [[4799, 4799], "disallowed"], [[4800, 4800], "valid"], [[4801, 4801], "disallowed"], [[4802, 4805], "valid"], [[4806, 4807], "disallowed"], [[4808, 4814], "valid"], [[4815, 4815], "valid"], [[4816, 4822], "valid"], [[4823, 4823], "disallowed"], [[4824, 4846], "valid"], [[4847, 4847], "valid"], [[4848, 4878], "valid"], [[4879, 4879], "valid"], [[4880, 4880], "valid"], [[4881, 4881], "disallowed"], [[4882, 4885], "valid"], [[4886, 4887], "disallowed"], [[4888, 4894], "valid"], [[4895, 4895], "valid"], [[4896, 4934], "valid"], [[4935, 4935], "valid"], [[4936, 4954], "valid"], [[4955, 4956], "disallowed"], [[4957, 4958], "valid"], [[4959, 4959], "valid"], [[4960, 4960], "valid", [], "NV8"], [[4961, 4988], "valid", [], "NV8"], [[4989, 4991], "disallowed"], [[4992, 5007], "valid"], [[5008, 5017], "valid", [], "NV8"], [[5018, 5023], "disallowed"], [[5024, 5108], "valid"], [[5109, 5109], "valid"], [[5110, 5111], "disallowed"], [[5112, 5112], "mapped", [5104]], [[5113, 5113], "mapped", [5105]], [[5114, 5114], "mapped", [5106]], [[5115, 5115], "mapped", [5107]], [[5116, 5116], "mapped", [5108]], [[5117, 5117], "mapped", [5109]], [[5118, 5119], "disallowed"], [[5120, 5120], "valid", [], "NV8"], [[5121, 5740], "valid"], [[5741, 5742], "valid", [], "NV8"], [[5743, 5750], "valid"], [[5751, 5759], "valid"], [[5760, 5760], "disallowed"], [[5761, 5786], "valid"], [[5787, 5788], "valid", [], "NV8"], [[5789, 5791], "disallowed"], [[5792, 5866], "valid"], [[5867, 5872], "valid", [], "NV8"], [[5873, 5880], "valid"], [[5881, 5887], "disallowed"], [[5888, 5900], "valid"], [[5901, 5901], "disallowed"], [[5902, 5908], "valid"], [[5909, 5919], "disallowed"], [[5920, 5940], "valid"], [[5941, 5942], "valid", [], "NV8"], [[5943, 5951], "disallowed"], [[5952, 5971], "valid"], [[5972, 5983], "disallowed"], [[5984, 5996], "valid"], [[5997, 5997], "disallowed"], [[5998, 6e3], "valid"], [[6001, 6001], "disallowed"], [[6002, 6003], "valid"], [[6004, 6015], "disallowed"], [[6016, 6067], "valid"], [[6068, 6069], "disallowed"], [[6070, 6099], "valid"], [[6100, 6102], "valid", [], "NV8"], [[6103, 6103], "valid"], [[6104, 6107], "valid", [], "NV8"], [[6108, 6108], "valid"], [[6109, 6109], "valid"], [[6110, 6111], "disallowed"], [[6112, 6121], "valid"], [[6122, 6127], "disallowed"], [[6128, 6137], "valid", [], "NV8"], [[6138, 6143], "disallowed"], [[6144, 6149], "valid", [], "NV8"], [[6150, 6150], "disallowed"], [[6151, 6154], "valid", [], "NV8"], [[6155, 6157], "ignored"], [[6158, 6158], "disallowed"], [[6159, 6159], "disallowed"], [[6160, 6169], "valid"], [[6170, 6175], "disallowed"], [[6176, 6263], "valid"], [[6264, 6271], "disallowed"], [[6272, 6313], "valid"], [[6314, 6314], "valid"], [[6315, 6319], "disallowed"], [[6320, 6389], "valid"], [[6390, 6399], "disallowed"], [[6400, 6428], "valid"], [[6429, 6430], "valid"], [[6431, 6431], "disallowed"], [[6432, 6443], "valid"], [[6444, 6447], "disallowed"], [[6448, 6459], "valid"], [[6460, 6463], "disallowed"], [[6464, 6464], "valid", [], "NV8"], [[6465, 6467], "disallowed"], [[6468, 6469], "valid", [], "NV8"], [[6470, 6509], "valid"], [[6510, 6511], "disallowed"], [[6512, 6516], "valid"], [[6517, 6527], "disallowed"], [[6528, 6569], "valid"], [[6570, 6571], "valid"], [[6572, 6575], "disallowed"], [[6576, 6601], "valid"], [[6602, 6607], "disallowed"], [[6608, 6617], "valid"], [[6618, 6618], "valid", [], "XV8"], [[6619, 6621], "disallowed"], [[6622, 6623], "valid", [], "NV8"], [[6624, 6655], "valid", [], "NV8"], [[6656, 6683], "valid"], [[6684, 6685], "disallowed"], [[6686, 6687], "valid", [], "NV8"], [[6688, 6750], "valid"], [[6751, 6751], "disallowed"], [[6752, 6780], "valid"], [[6781, 6782], "disallowed"], [[6783, 6793], "valid"], [[6794, 6799], "disallowed"], [[6800, 6809], "valid"], [[6810, 6815], "disallowed"], [[6816, 6822], "valid", [], "NV8"], [[6823, 6823], "valid"], [[6824, 6829], "valid", [], "NV8"], [[6830, 6831], "disallowed"], [[6832, 6845], "valid"], [[6846, 6846], "valid", [], "NV8"], [[6847, 6911], "disallowed"], [[6912, 6987], "valid"], [[6988, 6991], "disallowed"], [[6992, 7001], "valid"], [[7002, 7018], "valid", [], "NV8"], [[7019, 7027], "valid"], [[7028, 7036], "valid", [], "NV8"], [[7037, 7039], "disallowed"], [[7040, 7082], "valid"], [[7083, 7085], "valid"], [[7086, 7097], "valid"], [[7098, 7103], "valid"], [[7104, 7155], "valid"], [[7156, 7163], "disallowed"], [[7164, 7167], "valid", [], "NV8"], [[7168, 7223], "valid"], [[7224, 7226], "disallowed"], [[7227, 7231], "valid", [], "NV8"], [[7232, 7241], "valid"], [[7242, 7244], "disallowed"], [[7245, 7293], "valid"], [[7294, 7295], "valid", [], "NV8"], [[7296, 7359], "disallowed"], [[7360, 7367], "valid", [], "NV8"], [[7368, 7375], "disallowed"], [[7376, 7378], "valid"], [[7379, 7379], "valid", [], "NV8"], [[7380, 7410], "valid"], [[7411, 7414], "valid"], [[7415, 7415], "disallowed"], [[7416, 7417], "valid"], [[7418, 7423], "disallowed"], [[7424, 7467], "valid"], [[7468, 7468], "mapped", [97]], [[7469, 7469], "mapped", [230]], [[7470, 7470], "mapped", [98]], [[7471, 7471], "valid"], [[7472, 7472], "mapped", [100]], [[7473, 7473], "mapped", [101]], [[7474, 7474], "mapped", [477]], [[7475, 7475], "mapped", [103]], [[7476, 7476], "mapped", [104]], [[7477, 7477], "mapped", [105]], [[7478, 7478], "mapped", [106]], [[7479, 7479], "mapped", [107]], [[7480, 7480], "mapped", [108]], [[7481, 7481], "mapped", [109]], [[7482, 7482], "mapped", [110]], [[7483, 7483], "valid"], [[7484, 7484], "mapped", [111]], [[7485, 7485], "mapped", [547]], [[7486, 7486], "mapped", [112]], [[7487, 7487], "mapped", [114]], [[7488, 7488], "mapped", [116]], [[7489, 7489], "mapped", [117]], [[7490, 7490], "mapped", [119]], [[7491, 7491], "mapped", [97]], [[7492, 7492], "mapped", [592]], [[7493, 7493], "mapped", [593]], [[7494, 7494], "mapped", [7426]], [[7495, 7495], "mapped", [98]], [[7496, 7496], "mapped", [100]], [[7497, 7497], "mapped", [101]], [[7498, 7498], "mapped", [601]], [[7499, 7499], "mapped", [603]], [[7500, 7500], "mapped", [604]], [[7501, 7501], "mapped", [103]], [[7502, 7502], "valid"], [[7503, 7503], "mapped", [107]], [[7504, 7504], "mapped", [109]], [[7505, 7505], "mapped", [331]], [[7506, 7506], "mapped", [111]], [[7507, 7507], "mapped", [596]], [[7508, 7508], "mapped", [7446]], [[7509, 7509], "mapped", [7447]], [[7510, 7510], "mapped", [112]], [[7511, 7511], "mapped", [116]], [[7512, 7512], "mapped", [117]], [[7513, 7513], "mapped", [7453]], [[7514, 7514], "mapped", [623]], [[7515, 7515], "mapped", [118]], [[7516, 7516], "mapped", [7461]], [[7517, 7517], "mapped", [946]], [[7518, 7518], "mapped", [947]], [[7519, 7519], "mapped", [948]], [[7520, 7520], "mapped", [966]], [[7521, 7521], "mapped", [967]], [[7522, 7522], "mapped", [105]], [[7523, 7523], "mapped", [114]], [[7524, 7524], "mapped", [117]], [[7525, 7525], "mapped", [118]], [[7526, 7526], "mapped", [946]], [[7527, 7527], "mapped", [947]], [[7528, 7528], "mapped", [961]], [[7529, 7529], "mapped", [966]], [[7530, 7530], "mapped", [967]], [[7531, 7531], "valid"], [[7532, 7543], "valid"], [[7544, 7544], "mapped", [1085]], [[7545, 7578], "valid"], [[7579, 7579], "mapped", [594]], [[7580, 7580], "mapped", [99]], [[7581, 7581], "mapped", [597]], [[7582, 7582], "mapped", [240]], [[7583, 7583], "mapped", [604]], [[7584, 7584], "mapped", [102]], [[7585, 7585], "mapped", [607]], [[7586, 7586], "mapped", [609]], [[7587, 7587], "mapped", [613]], [[7588, 7588], "mapped", [616]], [[7589, 7589], "mapped", [617]], [[7590, 7590], "mapped", [618]], [[7591, 7591], "mapped", [7547]], [[7592, 7592], "mapped", [669]], [[7593, 7593], "mapped", [621]], [[7594, 7594], "mapped", [7557]], [[7595, 7595], "mapped", [671]], [[7596, 7596], "mapped", [625]], [[7597, 7597], "mapped", [624]], [[7598, 7598], "mapped", [626]], [[7599, 7599], "mapped", [627]], [[7600, 7600], "mapped", [628]], [[7601, 7601], "mapped", [629]], [[7602, 7602], "mapped", [632]], [[7603, 7603], "mapped", [642]], [[7604, 7604], "mapped", [643]], [[7605, 7605], "mapped", [427]], [[7606, 7606], "mapped", [649]], [[7607, 7607], "mapped", [650]], [[7608, 7608], "mapped", [7452]], [[7609, 7609], "mapped", [651]], [[7610, 7610], "mapped", [652]], [[7611, 7611], "mapped", [122]], [[7612, 7612], "mapped", [656]], [[7613, 7613], "mapped", [657]], [[7614, 7614], "mapped", [658]], [[7615, 7615], "mapped", [952]], [[7616, 7619], "valid"], [[7620, 7626], "valid"], [[7627, 7654], "valid"], [[7655, 7669], "valid"], [[7670, 7675], "disallowed"], [[7676, 7676], "valid"], [[7677, 7677], "valid"], [[7678, 7679], "valid"], [[7680, 7680], "mapped", [7681]], [[7681, 7681], "valid"], [[7682, 7682], "mapped", [7683]], [[7683, 7683], "valid"], [[7684, 7684], "mapped", [7685]], [[7685, 7685], "valid"], [[7686, 7686], "mapped", [7687]], [[7687, 7687], "valid"], [[7688, 7688], "mapped", [7689]], [[7689, 7689], "valid"], [[7690, 7690], "mapped", [7691]], [[7691, 7691], "valid"], [[7692, 7692], "mapped", [7693]], [[7693, 7693], "valid"], [[7694, 7694], "mapped", [7695]], [[7695, 7695], "valid"], [[7696, 7696], "mapped", [7697]], [[7697, 7697], "valid"], [[7698, 7698], "mapped", [7699]], [[7699, 7699], "valid"], [[7700, 7700], "mapped", [7701]], [[7701, 7701], "valid"], [[7702, 7702], "mapped", [7703]], [[7703, 7703], "valid"], [[7704, 7704], "mapped", [7705]], [[7705, 7705], "valid"], [[7706, 7706], "mapped", [7707]], [[7707, 7707], "valid"], [[7708, 7708], "mapped", [7709]], [[7709, 7709], "valid"], [[7710, 7710], "mapped", [7711]], [[7711, 7711], "valid"], [[7712, 7712], "mapped", [7713]], [[7713, 7713], "valid"], [[7714, 7714], "mapped", [7715]], [[7715, 7715], "valid"], [[7716, 7716], "mapped", [7717]], [[7717, 7717], "valid"], [[7718, 7718], "mapped", [7719]], [[7719, 7719], "valid"], [[7720, 7720], "mapped", [7721]], [[7721, 7721], "valid"], [[7722, 7722], "mapped", [7723]], [[7723, 7723], "valid"], [[7724, 7724], "mapped", [7725]], [[7725, 7725], "valid"], [[7726, 7726], "mapped", [7727]], [[7727, 7727], "valid"], [[7728, 7728], "mapped", [7729]], [[7729, 7729], "valid"], [[7730, 7730], "mapped", [7731]], [[7731, 7731], "valid"], [[7732, 7732], "mapped", [7733]], [[7733, 7733], "valid"], [[7734, 7734], "mapped", [7735]], [[7735, 7735], "valid"], [[7736, 7736], "mapped", [7737]], [[7737, 7737], "valid"], [[7738, 7738], "mapped", [7739]], [[7739, 7739], "valid"], [[7740, 7740], "mapped", [7741]], [[7741, 7741], "valid"], [[7742, 7742], "mapped", [7743]], [[7743, 7743], "valid"], [[7744, 7744], "mapped", [7745]], [[7745, 7745], "valid"], [[7746, 7746], "mapped", [7747]], [[7747, 7747], "valid"], [[7748, 7748], "mapped", [7749]], [[7749, 7749], "valid"], [[7750, 7750], "mapped", [7751]], [[7751, 7751], "valid"], [[7752, 7752], "mapped", [7753]], [[7753, 7753], "valid"], [[7754, 7754], "mapped", [7755]], [[7755, 7755], "valid"], [[7756, 7756], "mapped", [7757]], [[7757, 7757], "valid"], [[7758, 7758], "mapped", [7759]], [[7759, 7759], "valid"], [[7760, 7760], "mapped", [7761]], [[7761, 7761], "valid"], [[7762, 7762], "mapped", [7763]], [[7763, 7763], "valid"], [[7764, 7764], "mapped", [7765]], [[7765, 7765], "valid"], [[7766, 7766], "mapped", [7767]], [[7767, 7767], "valid"], [[7768, 7768], "mapped", [7769]], [[7769, 7769], "valid"], [[7770, 7770], "mapped", [7771]], [[7771, 7771], "valid"], [[7772, 7772], "mapped", [7773]], [[7773, 7773], "valid"], [[7774, 7774], "mapped", [7775]], [[7775, 7775], "valid"], [[7776, 7776], "mapped", [7777]], [[7777, 7777], "valid"], [[7778, 7778], "mapped", [7779]], [[7779, 7779], "valid"], [[7780, 7780], "mapped", [7781]], [[7781, 7781], "valid"], [[7782, 7782], "mapped", [7783]], [[7783, 7783], "valid"], [[7784, 7784], "mapped", [7785]], [[7785, 7785], "valid"], [[7786, 7786], "mapped", [7787]], [[7787, 7787], "valid"], [[7788, 7788], "mapped", [7789]], [[7789, 7789], "valid"], [[7790, 7790], "mapped", [7791]], [[7791, 7791], "valid"], [[7792, 7792], "mapped", [7793]], [[7793, 7793], "valid"], [[7794, 7794], "mapped", [7795]], [[7795, 7795], "valid"], [[7796, 7796], "mapped", [7797]], [[7797, 7797], "valid"], [[7798, 7798], "mapped", [7799]], [[7799, 7799], "valid"], [[7800, 7800], "mapped", [7801]], [[7801, 7801], "valid"], [[7802, 7802], "mapped", [7803]], [[7803, 7803], "valid"], [[7804, 7804], "mapped", [7805]], [[7805, 7805], "valid"], [[7806, 7806], "mapped", [7807]], [[7807, 7807], "valid"], [[7808, 7808], "mapped", [7809]], [[7809, 7809], "valid"], [[7810, 7810], "mapped", [7811]], [[7811, 7811], "valid"], [[7812, 7812], "mapped", [7813]], [[7813, 7813], "valid"], [[7814, 7814], "mapped", [7815]], [[7815, 7815], "valid"], [[7816, 7816], "mapped", [7817]], [[7817, 7817], "valid"], [[7818, 7818], "mapped", [7819]], [[7819, 7819], "valid"], [[7820, 7820], "mapped", [7821]], [[7821, 7821], "valid"], [[7822, 7822], "mapped", [7823]], [[7823, 7823], "valid"], [[7824, 7824], "mapped", [7825]], [[7825, 7825], "valid"], [[7826, 7826], "mapped", [7827]], [[7827, 7827], "valid"], [[7828, 7828], "mapped", [7829]], [[7829, 7833], "valid"], [[7834, 7834], "mapped", [97, 702]], [[7835, 7835], "mapped", [7777]], [[7836, 7837], "valid"], [[7838, 7838], "mapped", [115, 115]], [[7839, 7839], "valid"], [[7840, 7840], "mapped", [7841]], [[7841, 7841], "valid"], [[7842, 7842], "mapped", [7843]], [[7843, 7843], "valid"], [[7844, 7844], "mapped", [7845]], [[7845, 7845], "valid"], [[7846, 7846], "mapped", [7847]], [[7847, 7847], "valid"], [[7848, 7848], "mapped", [7849]], [[7849, 7849], "valid"], [[7850, 7850], "mapped", [7851]], [[7851, 7851], "valid"], [[7852, 7852], "mapped", [7853]], [[7853, 7853], "valid"], [[7854, 7854], "mapped", [7855]], [[7855, 7855], "valid"], [[7856, 7856], "mapped", [7857]], [[7857, 7857], "valid"], [[7858, 7858], "mapped", [7859]], [[7859, 7859], "valid"], [[7860, 7860], "mapped", [7861]], [[7861, 7861], "valid"], [[7862, 7862], "mapped", [7863]], [[7863, 7863], "valid"], [[7864, 7864], "mapped", [7865]], [[7865, 7865], "valid"], [[7866, 7866], "mapped", [7867]], [[7867, 7867], "valid"], [[7868, 7868], "mapped", [7869]], [[7869, 7869], "valid"], [[7870, 7870], "mapped", [7871]], [[7871, 7871], "valid"], [[7872, 7872], "mapped", [7873]], [[7873, 7873], "valid"], [[7874, 7874], "mapped", [7875]], [[7875, 7875], "valid"], [[7876, 7876], "mapped", [7877]], [[7877, 7877], "valid"], [[7878, 7878], "mapped", [7879]], [[7879, 7879], "valid"], [[7880, 7880], "mapped", [7881]], [[7881, 7881], "valid"], [[7882, 7882], "mapped", [7883]], [[7883, 7883], "valid"], [[7884, 7884], "mapped", [7885]], [[7885, 7885], "valid"], [[7886, 7886], "mapped", [7887]], [[7887, 7887], "valid"], [[7888, 7888], "mapped", [7889]], [[7889, 7889], "valid"], [[7890, 7890], "mapped", [7891]], [[7891, 7891], "valid"], [[7892, 7892], "mapped", [7893]], [[7893, 7893], "valid"], [[7894, 7894], "mapped", [7895]], [[7895, 7895], "valid"], [[7896, 7896], "mapped", [7897]], [[7897, 7897], "valid"], [[7898, 7898], "mapped", [7899]], [[7899, 7899], "valid"], [[7900, 7900], "mapped", [7901]], [[7901, 7901], "valid"], [[7902, 7902], "mapped", [7903]], [[7903, 7903], "valid"], [[7904, 7904], "mapped", [7905]], [[7905, 7905], "valid"], [[7906, 7906], "mapped", [7907]], [[7907, 7907], "valid"], [[7908, 7908], "mapped", [7909]], [[7909, 7909], "valid"], [[7910, 7910], "mapped", [7911]], [[7911, 7911], "valid"], [[7912, 7912], "mapped", [7913]], [[7913, 7913], "valid"], [[7914, 7914], "mapped", [7915]], [[7915, 7915], "valid"], [[7916, 7916], "mapped", [7917]], [[7917, 7917], "valid"], [[7918, 7918], "mapped", [7919]], [[7919, 7919], "valid"], [[7920, 7920], "mapped", [7921]], [[7921, 7921], "valid"], [[7922, 7922], "mapped", [7923]], [[7923, 7923], "valid"], [[7924, 7924], "mapped", [7925]], [[7925, 7925], "valid"], [[7926, 7926], "mapped", [7927]], [[7927, 7927], "valid"], [[7928, 7928], "mapped", [7929]], [[7929, 7929], "valid"], [[7930, 7930], "mapped", [7931]], [[7931, 7931], "valid"], [[7932, 7932], "mapped", [7933]], [[7933, 7933], "valid"], [[7934, 7934], "mapped", [7935]], [[7935, 7935], "valid"], [[7936, 7943], "valid"], [[7944, 7944], "mapped", [7936]], [[7945, 7945], "mapped", [7937]], [[7946, 7946], "mapped", [7938]], [[7947, 7947], "mapped", [7939]], [[7948, 7948], "mapped", [7940]], [[7949, 7949], "mapped", [7941]], [[7950, 7950], "mapped", [7942]], [[7951, 7951], "mapped", [7943]], [[7952, 7957], "valid"], [[7958, 7959], "disallowed"], [[7960, 7960], "mapped", [7952]], [[7961, 7961], "mapped", [7953]], [[7962, 7962], "mapped", [7954]], [[7963, 7963], "mapped", [7955]], [[7964, 7964], "mapped", [7956]], [[7965, 7965], "mapped", [7957]], [[7966, 7967], "disallowed"], [[7968, 7975], "valid"], [[7976, 7976], "mapped", [7968]], [[7977, 7977], "mapped", [7969]], [[7978, 7978], "mapped", [7970]], [[7979, 7979], "mapped", [7971]], [[7980, 7980], "mapped", [7972]], [[7981, 7981], "mapped", [7973]], [[7982, 7982], "mapped", [7974]], [[7983, 7983], "mapped", [7975]], [[7984, 7991], "valid"], [[7992, 7992], "mapped", [7984]], [[7993, 7993], "mapped", [7985]], [[7994, 7994], "mapped", [7986]], [[7995, 7995], "mapped", [7987]], [[7996, 7996], "mapped", [7988]], [[7997, 7997], "mapped", [7989]], [[7998, 7998], "mapped", [7990]], [[7999, 7999], "mapped", [7991]], [[8e3, 8005], "valid"], [[8006, 8007], "disallowed"], [[8008, 8008], "mapped", [8e3]], [[8009, 8009], "mapped", [8001]], [[8010, 8010], "mapped", [8002]], [[8011, 8011], "mapped", [8003]], [[8012, 8012], "mapped", [8004]], [[8013, 8013], "mapped", [8005]], [[8014, 8015], "disallowed"], [[8016, 8023], "valid"], [[8024, 8024], "disallowed"], [[8025, 8025], "mapped", [8017]], [[8026, 8026], "disallowed"], [[8027, 8027], "mapped", [8019]], [[8028, 8028], "disallowed"], [[8029, 8029], "mapped", [8021]], [[8030, 8030], "disallowed"], [[8031, 8031], "mapped", [8023]], [[8032, 8039], "valid"], [[8040, 8040], "mapped", [8032]], [[8041, 8041], "mapped", [8033]], [[8042, 8042], "mapped", [8034]], [[8043, 8043], "mapped", [8035]], [[8044, 8044], "mapped", [8036]], [[8045, 8045], "mapped", [8037]], [[8046, 8046], "mapped", [8038]], [[8047, 8047], "mapped", [8039]], [[8048, 8048], "valid"], [[8049, 8049], "mapped", [940]], [[8050, 8050], "valid"], [[8051, 8051], "mapped", [941]], [[8052, 8052], "valid"], [[8053, 8053], "mapped", [942]], [[8054, 8054], "valid"], [[8055, 8055], "mapped", [943]], [[8056, 8056], "valid"], [[8057, 8057], "mapped", [972]], [[8058, 8058], "valid"], [[8059, 8059], "mapped", [973]], [[8060, 8060], "valid"], [[8061, 8061], "mapped", [974]], [[8062, 8063], "disallowed"], [[8064, 8064], "mapped", [7936, 953]], [[8065, 8065], "mapped", [7937, 953]], [[8066, 8066], "mapped", [7938, 953]], [[8067, 8067], "mapped", [7939, 953]], [[8068, 8068], "mapped", [7940, 953]], [[8069, 8069], "mapped", [7941, 953]], [[8070, 8070], "mapped", [7942, 953]], [[8071, 8071], "mapped", [7943, 953]], [[8072, 8072], "mapped", [7936, 953]], [[8073, 8073], "mapped", [7937, 953]], [[8074, 8074], "mapped", [7938, 953]], [[8075, 8075], "mapped", [7939, 953]], [[8076, 8076], "mapped", [7940, 953]], [[8077, 8077], "mapped", [7941, 953]], [[8078, 8078], "mapped", [7942, 953]], [[8079, 8079], "mapped", [7943, 953]], [[8080, 8080], "mapped", [7968, 953]], [[8081, 8081], "mapped", [7969, 953]], [[8082, 8082], "mapped", [7970, 953]], [[8083, 8083], "mapped", [7971, 953]], [[8084, 8084], "mapped", [7972, 953]], [[8085, 8085], "mapped", [7973, 953]], [[8086, 8086], "mapped", [7974, 953]], [[8087, 8087], "mapped", [7975, 953]], [[8088, 8088], "mapped", [7968, 953]], [[8089, 8089], "mapped", [7969, 953]], [[8090, 8090], "mapped", [7970, 953]], [[8091, 8091], "mapped", [7971, 953]], [[8092, 8092], "mapped", [7972, 953]], [[8093, 8093], "mapped", [7973, 953]], [[8094, 8094], "mapped", [7974, 953]], [[8095, 8095], "mapped", [7975, 953]], [[8096, 8096], "mapped", [8032, 953]], [[8097, 8097], "mapped", [8033, 953]], [[8098, 8098], "mapped", [8034, 953]], [[8099, 8099], "mapped", [8035, 953]], [[8100, 8100], "mapped", [8036, 953]], [[8101, 8101], "mapped", [8037, 953]], [[8102, 8102], "mapped", [8038, 953]], [[8103, 8103], "mapped", [8039, 953]], [[8104, 8104], "mapped", [8032, 953]], [[8105, 8105], "mapped", [8033, 953]], [[8106, 8106], "mapped", [8034, 953]], [[8107, 8107], "mapped", [8035, 953]], [[8108, 8108], "mapped", [8036, 953]], [[8109, 8109], "mapped", [8037, 953]], [[8110, 8110], "mapped", [8038, 953]], [[8111, 8111], "mapped", [8039, 953]], [[8112, 8113], "valid"], [[8114, 8114], "mapped", [8048, 953]], [[8115, 8115], "mapped", [945, 953]], [[8116, 8116], "mapped", [940, 953]], [[8117, 8117], "disallowed"], [[8118, 8118], "valid"], [[8119, 8119], "mapped", [8118, 953]], [[8120, 8120], "mapped", [8112]], [[8121, 8121], "mapped", [8113]], [[8122, 8122], "mapped", [8048]], [[8123, 8123], "mapped", [940]], [[8124, 8124], "mapped", [945, 953]], [[8125, 8125], "disallowed_STD3_mapped", [32, 787]], [[8126, 8126], "mapped", [953]], [[8127, 8127], "disallowed_STD3_mapped", [32, 787]], [[8128, 8128], "disallowed_STD3_mapped", [32, 834]], [[8129, 8129], "disallowed_STD3_mapped", [32, 776, 834]], [[8130, 8130], "mapped", [8052, 953]], [[8131, 8131], "mapped", [951, 953]], [[8132, 8132], "mapped", [942, 953]], [[8133, 8133], "disallowed"], [[8134, 8134], "valid"], [[8135, 8135], "mapped", [8134, 953]], [[8136, 8136], "mapped", [8050]], [[8137, 8137], "mapped", [941]], [[8138, 8138], "mapped", [8052]], [[8139, 8139], "mapped", [942]], [[8140, 8140], "mapped", [951, 953]], [[8141, 8141], "disallowed_STD3_mapped", [32, 787, 768]], [[8142, 8142], "disallowed_STD3_mapped", [32, 787, 769]], [[8143, 8143], "disallowed_STD3_mapped", [32, 787, 834]], [[8144, 8146], "valid"], [[8147, 8147], "mapped", [912]], [[8148, 8149], "disallowed"], [[8150, 8151], "valid"], [[8152, 8152], "mapped", [8144]], [[8153, 8153], "mapped", [8145]], [[8154, 8154], "mapped", [8054]], [[8155, 8155], "mapped", [943]], [[8156, 8156], "disallowed"], [[8157, 8157], "disallowed_STD3_mapped", [32, 788, 768]], [[8158, 8158], "disallowed_STD3_mapped", [32, 788, 769]], [[8159, 8159], "disallowed_STD3_mapped", [32, 788, 834]], [[8160, 8162], "valid"], [[8163, 8163], "mapped", [944]], [[8164, 8167], "valid"], [[8168, 8168], "mapped", [8160]], [[8169, 8169], "mapped", [8161]], [[8170, 8170], "mapped", [8058]], [[8171, 8171], "mapped", [973]], [[8172, 8172], "mapped", [8165]], [[8173, 8173], "disallowed_STD3_mapped", [32, 776, 768]], [[8174, 8174], "disallowed_STD3_mapped", [32, 776, 769]], [[8175, 8175], "disallowed_STD3_mapped", [96]], [[8176, 8177], "disallowed"], [[8178, 8178], "mapped", [8060, 953]], [[8179, 8179], "mapped", [969, 953]], [[8180, 8180], "mapped", [974, 953]], [[8181, 8181], "disallowed"], [[8182, 8182], "valid"], [[8183, 8183], "mapped", [8182, 953]], [[8184, 8184], "mapped", [8056]], [[8185, 8185], "mapped", [972]], [[8186, 8186], "mapped", [8060]], [[8187, 8187], "mapped", [974]], [[8188, 8188], "mapped", [969, 953]], [[8189, 8189], "disallowed_STD3_mapped", [32, 769]], [[8190, 8190], "disallowed_STD3_mapped", [32, 788]], [[8191, 8191], "disallowed"], [[8192, 8202], "disallowed_STD3_mapped", [32]], [[8203, 8203], "ignored"], [[8204, 8205], "deviation", []], [[8206, 8207], "disallowed"], [[8208, 8208], "valid", [], "NV8"], [[8209, 8209], "mapped", [8208]], [[8210, 8214], "valid", [], "NV8"], [[8215, 8215], "disallowed_STD3_mapped", [32, 819]], [[8216, 8227], "valid", [], "NV8"], [[8228, 8230], "disallowed"], [[8231, 8231], "valid", [], "NV8"], [[8232, 8238], "disallowed"], [[8239, 8239], "disallowed_STD3_mapped", [32]], [[8240, 8242], "valid", [], "NV8"], [[8243, 8243], "mapped", [8242, 8242]], [[8244, 8244], "mapped", [8242, 8242, 8242]], [[8245, 8245], "valid", [], "NV8"], [[8246, 8246], "mapped", [8245, 8245]], [[8247, 8247], "mapped", [8245, 8245, 8245]], [[8248, 8251], "valid", [], "NV8"], [[8252, 8252], "disallowed_STD3_mapped", [33, 33]], [[8253, 8253], "valid", [], "NV8"], [[8254, 8254], "disallowed_STD3_mapped", [32, 773]], [[8255, 8262], "valid", [], "NV8"], [[8263, 8263], "disallowed_STD3_mapped", [63, 63]], [[8264, 8264], "disallowed_STD3_mapped", [63, 33]], [[8265, 8265], "disallowed_STD3_mapped", [33, 63]], [[8266, 8269], "valid", [], "NV8"], [[8270, 8274], "valid", [], "NV8"], [[8275, 8276], "valid", [], "NV8"], [[8277, 8278], "valid", [], "NV8"], [[8279, 8279], "mapped", [8242, 8242, 8242, 8242]], [[8280, 8286], "valid", [], "NV8"], [[8287, 8287], "disallowed_STD3_mapped", [32]], [[8288, 8288], "ignored"], [[8289, 8291], "disallowed"], [[8292, 8292], "ignored"], [[8293, 8293], "disallowed"], [[8294, 8297], "disallowed"], [[8298, 8303], "disallowed"], [[8304, 8304], "mapped", [48]], [[8305, 8305], "mapped", [105]], [[8306, 8307], "disallowed"], [[8308, 8308], "mapped", [52]], [[8309, 8309], "mapped", [53]], [[8310, 8310], "mapped", [54]], [[8311, 8311], "mapped", [55]], [[8312, 8312], "mapped", [56]], [[8313, 8313], "mapped", [57]], [[8314, 8314], "disallowed_STD3_mapped", [43]], [[8315, 8315], "mapped", [8722]], [[8316, 8316], "disallowed_STD3_mapped", [61]], [[8317, 8317], "disallowed_STD3_mapped", [40]], [[8318, 8318], "disallowed_STD3_mapped", [41]], [[8319, 8319], "mapped", [110]], [[8320, 8320], "mapped", [48]], [[8321, 8321], "mapped", [49]], [[8322, 8322], "mapped", [50]], [[8323, 8323], "mapped", [51]], [[8324, 8324], "mapped", [52]], [[8325, 8325], "mapped", [53]], [[8326, 8326], "mapped", [54]], [[8327, 8327], "mapped", [55]], [[8328, 8328], "mapped", [56]], [[8329, 8329], "mapped", [57]], [[8330, 8330], "disallowed_STD3_mapped", [43]], [[8331, 8331], "mapped", [8722]], [[8332, 8332], "disallowed_STD3_mapped", [61]], [[8333, 8333], "disallowed_STD3_mapped", [40]], [[8334, 8334], "disallowed_STD3_mapped", [41]], [[8335, 8335], "disallowed"], [[8336, 8336], "mapped", [97]], [[8337, 8337], "mapped", [101]], [[8338, 8338], "mapped", [111]], [[8339, 8339], "mapped", [120]], [[8340, 8340], "mapped", [601]], [[8341, 8341], "mapped", [104]], [[8342, 8342], "mapped", [107]], [[8343, 8343], "mapped", [108]], [[8344, 8344], "mapped", [109]], [[8345, 8345], "mapped", [110]], [[8346, 8346], "mapped", [112]], [[8347, 8347], "mapped", [115]], [[8348, 8348], "mapped", [116]], [[8349, 8351], "disallowed"], [[8352, 8359], "valid", [], "NV8"], [[8360, 8360], "mapped", [114, 115]], [[8361, 8362], "valid", [], "NV8"], [[8363, 8363], "valid", [], "NV8"], [[8364, 8364], "valid", [], "NV8"], [[8365, 8367], "valid", [], "NV8"], [[8368, 8369], "valid", [], "NV8"], [[8370, 8373], "valid", [], "NV8"], [[8374, 8376], "valid", [], "NV8"], [[8377, 8377], "valid", [], "NV8"], [[8378, 8378], "valid", [], "NV8"], [[8379, 8381], "valid", [], "NV8"], [[8382, 8382], "valid", [], "NV8"], [[8383, 8399], "disallowed"], [[8400, 8417], "valid", [], "NV8"], [[8418, 8419], "valid", [], "NV8"], [[8420, 8426], "valid", [], "NV8"], [[8427, 8427], "valid", [], "NV8"], [[8428, 8431], "valid", [], "NV8"], [[8432, 8432], "valid", [], "NV8"], [[8433, 8447], "disallowed"], [[8448, 8448], "disallowed_STD3_mapped", [97, 47, 99]], [[8449, 8449], "disallowed_STD3_mapped", [97, 47, 115]], [[8450, 8450], "mapped", [99]], [[8451, 8451], "mapped", [176, 99]], [[8452, 8452], "valid", [], "NV8"], [[8453, 8453], "disallowed_STD3_mapped", [99, 47, 111]], [[8454, 8454], "disallowed_STD3_mapped", [99, 47, 117]], [[8455, 8455], "mapped", [603]], [[8456, 8456], "valid", [], "NV8"], [[8457, 8457], "mapped", [176, 102]], [[8458, 8458], "mapped", [103]], [[8459, 8462], "mapped", [104]], [[8463, 8463], "mapped", [295]], [[8464, 8465], "mapped", [105]], [[8466, 8467], "mapped", [108]], [[8468, 8468], "valid", [], "NV8"], [[8469, 8469], "mapped", [110]], [[8470, 8470], "mapped", [110, 111]], [[8471, 8472], "valid", [], "NV8"], [[8473, 8473], "mapped", [112]], [[8474, 8474], "mapped", [113]], [[8475, 8477], "mapped", [114]], [[8478, 8479], "valid", [], "NV8"], [[8480, 8480], "mapped", [115, 109]], [[8481, 8481], "mapped", [116, 101, 108]], [[8482, 8482], "mapped", [116, 109]], [[8483, 8483], "valid", [], "NV8"], [[8484, 8484], "mapped", [122]], [[8485, 8485], "valid", [], "NV8"], [[8486, 8486], "mapped", [969]], [[8487, 8487], "valid", [], "NV8"], [[8488, 8488], "mapped", [122]], [[8489, 8489], "valid", [], "NV8"], [[8490, 8490], "mapped", [107]], [[8491, 8491], "mapped", [229]], [[8492, 8492], "mapped", [98]], [[8493, 8493], "mapped", [99]], [[8494, 8494], "valid", [], "NV8"], [[8495, 8496], "mapped", [101]], [[8497, 8497], "mapped", [102]], [[8498, 8498], "disallowed"], [[8499, 8499], "mapped", [109]], [[8500, 8500], "mapped", [111]], [[8501, 8501], "mapped", [1488]], [[8502, 8502], "mapped", [1489]], [[8503, 8503], "mapped", [1490]], [[8504, 8504], "mapped", [1491]], [[8505, 8505], "mapped", [105]], [[8506, 8506], "valid", [], "NV8"], [[8507, 8507], "mapped", [102, 97, 120]], [[8508, 8508], "mapped", [960]], [[8509, 8510], "mapped", [947]], [[8511, 8511], "mapped", [960]], [[8512, 8512], "mapped", [8721]], [[8513, 8516], "valid", [], "NV8"], [[8517, 8518], "mapped", [100]], [[8519, 8519], "mapped", [101]], [[8520, 8520], "mapped", [105]], [[8521, 8521], "mapped", [106]], [[8522, 8523], "valid", [], "NV8"], [[8524, 8524], "valid", [], "NV8"], [[8525, 8525], "valid", [], "NV8"], [[8526, 8526], "valid"], [[8527, 8527], "valid", [], "NV8"], [[8528, 8528], "mapped", [49, 8260, 55]], [[8529, 8529], "mapped", [49, 8260, 57]], [[8530, 8530], "mapped", [49, 8260, 49, 48]], [[8531, 8531], "mapped", [49, 8260, 51]], [[8532, 8532], "mapped", [50, 8260, 51]], [[8533, 8533], "mapped", [49, 8260, 53]], [[8534, 8534], "mapped", [50, 8260, 53]], [[8535, 8535], "mapped", [51, 8260, 53]], [[8536, 8536], "mapped", [52, 8260, 53]], [[8537, 8537], "mapped", [49, 8260, 54]], [[8538, 8538], "mapped", [53, 8260, 54]], [[8539, 8539], "mapped", [49, 8260, 56]], [[8540, 8540], "mapped", [51, 8260, 56]], [[8541, 8541], "mapped", [53, 8260, 56]], [[8542, 8542], "mapped", [55, 8260, 56]], [[8543, 8543], "mapped", [49, 8260]], [[8544, 8544], "mapped", [105]], [[8545, 8545], "mapped", [105, 105]], [[8546, 8546], "mapped", [105, 105, 105]], [[8547, 8547], "mapped", [105, 118]], [[8548, 8548], "mapped", [118]], [[8549, 8549], "mapped", [118, 105]], [[8550, 8550], "mapped", [118, 105, 105]], [[8551, 8551], "mapped", [118, 105, 105, 105]], [[8552, 8552], "mapped", [105, 120]], [[8553, 8553], "mapped", [120]], [[8554, 8554], "mapped", [120, 105]], [[8555, 8555], "mapped", [120, 105, 105]], [[8556, 8556], "mapped", [108]], [[8557, 8557], "mapped", [99]], [[8558, 8558], "mapped", [100]], [[8559, 8559], "mapped", [109]], [[8560, 8560], "mapped", [105]], [[8561, 8561], "mapped", [105, 105]], [[8562, 8562], "mapped", [105, 105, 105]], [[8563, 8563], "mapped", [105, 118]], [[8564, 8564], "mapped", [118]], [[8565, 8565], "mapped", [118, 105]], [[8566, 8566], "mapped", [118, 105, 105]], [[8567, 8567], "mapped", [118, 105, 105, 105]], [[8568, 8568], "mapped", [105, 120]], [[8569, 8569], "mapped", [120]], [[8570, 8570], "mapped", [120, 105]], [[8571, 8571], "mapped", [120, 105, 105]], [[8572, 8572], "mapped", [108]], [[8573, 8573], "mapped", [99]], [[8574, 8574], "mapped", [100]], [[8575, 8575], "mapped", [109]], [[8576, 8578], "valid", [], "NV8"], [[8579, 8579], "disallowed"], [[8580, 8580], "valid"], [[8581, 8584], "valid", [], "NV8"], [[8585, 8585], "mapped", [48, 8260, 51]], [[8586, 8587], "valid", [], "NV8"], [[8588, 8591], "disallowed"], [[8592, 8682], "valid", [], "NV8"], [[8683, 8691], "valid", [], "NV8"], [[8692, 8703], "valid", [], "NV8"], [[8704, 8747], "valid", [], "NV8"], [[8748, 8748], "mapped", [8747, 8747]], [[8749, 8749], "mapped", [8747, 8747, 8747]], [[8750, 8750], "valid", [], "NV8"], [[8751, 8751], "mapped", [8750, 8750]], [[8752, 8752], "mapped", [8750, 8750, 8750]], [[8753, 8799], "valid", [], "NV8"], [[8800, 8800], "disallowed_STD3_valid"], [[8801, 8813], "valid", [], "NV8"], [[8814, 8815], "disallowed_STD3_valid"], [[8816, 8945], "valid", [], "NV8"], [[8946, 8959], "valid", [], "NV8"], [[8960, 8960], "valid", [], "NV8"], [[8961, 8961], "valid", [], "NV8"], [[8962, 9e3], "valid", [], "NV8"], [[9001, 9001], "mapped", [12296]], [[9002, 9002], "mapped", [12297]], [[9003, 9082], "valid", [], "NV8"], [[9083, 9083], "valid", [], "NV8"], [[9084, 9084], "valid", [], "NV8"], [[9085, 9114], "valid", [], "NV8"], [[9115, 9166], "valid", [], "NV8"], [[9167, 9168], "valid", [], "NV8"], [[9169, 9179], "valid", [], "NV8"], [[9180, 9191], "valid", [], "NV8"], [[9192, 9192], "valid", [], "NV8"], [[9193, 9203], "valid", [], "NV8"], [[9204, 9210], "valid", [], "NV8"], [[9211, 9215], "disallowed"], [[9216, 9252], "valid", [], "NV8"], [[9253, 9254], "valid", [], "NV8"], [[9255, 9279], "disallowed"], [[9280, 9290], "valid", [], "NV8"], [[9291, 9311], "disallowed"], [[9312, 9312], "mapped", [49]], [[9313, 9313], "mapped", [50]], [[9314, 9314], "mapped", [51]], [[9315, 9315], "mapped", [52]], [[9316, 9316], "mapped", [53]], [[9317, 9317], "mapped", [54]], [[9318, 9318], "mapped", [55]], [[9319, 9319], "mapped", [56]], [[9320, 9320], "mapped", [57]], [[9321, 9321], "mapped", [49, 48]], [[9322, 9322], "mapped", [49, 49]], [[9323, 9323], "mapped", [49, 50]], [[9324, 9324], "mapped", [49, 51]], [[9325, 9325], "mapped", [49, 52]], [[9326, 9326], "mapped", [49, 53]], [[9327, 9327], "mapped", [49, 54]], [[9328, 9328], "mapped", [49, 55]], [[9329, 9329], "mapped", [49, 56]], [[9330, 9330], "mapped", [49, 57]], [[9331, 9331], "mapped", [50, 48]], [[9332, 9332], "disallowed_STD3_mapped", [40, 49, 41]], [[9333, 9333], "disallowed_STD3_mapped", [40, 50, 41]], [[9334, 9334], "disallowed_STD3_mapped", [40, 51, 41]], [[9335, 9335], "disallowed_STD3_mapped", [40, 52, 41]], [[9336, 9336], "disallowed_STD3_mapped", [40, 53, 41]], [[9337, 9337], "disallowed_STD3_mapped", [40, 54, 41]], [[9338, 9338], "disallowed_STD3_mapped", [40, 55, 41]], [[9339, 9339], "disallowed_STD3_mapped", [40, 56, 41]], [[9340, 9340], "disallowed_STD3_mapped", [40, 57, 41]], [[9341, 9341], "disallowed_STD3_mapped", [40, 49, 48, 41]], [[9342, 9342], "disallowed_STD3_mapped", [40, 49, 49, 41]], [[9343, 9343], "disallowed_STD3_mapped", [40, 49, 50, 41]], [[9344, 9344], "disallowed_STD3_mapped", [40, 49, 51, 41]], [[9345, 9345], "disallowed_STD3_mapped", [40, 49, 52, 41]], [[9346, 9346], "disallowed_STD3_mapped", [40, 49, 53, 41]], [[9347, 9347], "disallowed_STD3_mapped", [40, 49, 54, 41]], [[9348, 9348], "disallowed_STD3_mapped", [40, 49, 55, 41]], [[9349, 9349], "disallowed_STD3_mapped", [40, 49, 56, 41]], [[9350, 9350], "disallowed_STD3_mapped", [40, 49, 57, 41]], [[9351, 9351], "disallowed_STD3_mapped", [40, 50, 48, 41]], [[9352, 9371], "disallowed"], [[9372, 9372], "disallowed_STD3_mapped", [40, 97, 41]], [[9373, 9373], "disallowed_STD3_mapped", [40, 98, 41]], [[9374, 9374], "disallowed_STD3_mapped", [40, 99, 41]], [[9375, 9375], "disallowed_STD3_mapped", [40, 100, 41]], [[9376, 9376], "disallowed_STD3_mapped", [40, 101, 41]], [[9377, 9377], "disallowed_STD3_mapped", [40, 102, 41]], [[9378, 9378], "disallowed_STD3_mapped", [40, 103, 41]], [[9379, 9379], "disallowed_STD3_mapped", [40, 104, 41]], [[9380, 9380], "disallowed_STD3_mapped", [40, 105, 41]], [[9381, 9381], "disallowed_STD3_mapped", [40, 106, 41]], [[9382, 9382], "disallowed_STD3_mapped", [40, 107, 41]], [[9383, 9383], "disallowed_STD3_mapped", [40, 108, 41]], [[9384, 9384], "disallowed_STD3_mapped", [40, 109, 41]], [[9385, 9385], "disallowed_STD3_mapped", [40, 110, 41]], [[9386, 9386], "disallowed_STD3_mapped", [40, 111, 41]], [[9387, 9387], "disallowed_STD3_mapped", [40, 112, 41]], [[9388, 9388], "disallowed_STD3_mapped", [40, 113, 41]], [[9389, 9389], "disallowed_STD3_mapped", [40, 114, 41]], [[9390, 9390], "disallowed_STD3_mapped", [40, 115, 41]], [[9391, 9391], "disallowed_STD3_mapped", [40, 116, 41]], [[9392, 9392], "disallowed_STD3_mapped", [40, 117, 41]], [[9393, 9393], "disallowed_STD3_mapped", [40, 118, 41]], [[9394, 9394], "disallowed_STD3_mapped", [40, 119, 41]], [[9395, 9395], "disallowed_STD3_mapped", [40, 120, 41]], [[9396, 9396], "disallowed_STD3_mapped", [40, 121, 41]], [[9397, 9397], "disallowed_STD3_mapped", [40, 122, 41]], [[9398, 9398], "mapped", [97]], [[9399, 9399], "mapped", [98]], [[9400, 9400], "mapped", [99]], [[9401, 9401], "mapped", [100]], [[9402, 9402], "mapped", [101]], [[9403, 9403], "mapped", [102]], [[9404, 9404], "mapped", [103]], [[9405, 9405], "mapped", [104]], [[9406, 9406], "mapped", [105]], [[9407, 9407], "mapped", [106]], [[9408, 9408], "mapped", [107]], [[9409, 9409], "mapped", [108]], [[9410, 9410], "mapped", [109]], [[9411, 9411], "mapped", [110]], [[9412, 9412], "mapped", [111]], [[9413, 9413], "mapped", [112]], [[9414, 9414], "mapped", [113]], [[9415, 9415], "mapped", [114]], [[9416, 9416], "mapped", [115]], [[9417, 9417], "mapped", [116]], [[9418, 9418], "mapped", [117]], [[9419, 9419], "mapped", [118]], [[9420, 9420], "mapped", [119]], [[9421, 9421], "mapped", [120]], [[9422, 9422], "mapped", [121]], [[9423, 9423], "mapped", [122]], [[9424, 9424], "mapped", [97]], [[9425, 9425], "mapped", [98]], [[9426, 9426], "mapped", [99]], [[9427, 9427], "mapped", [100]], [[9428, 9428], "mapped", [101]], [[9429, 9429], "mapped", [102]], [[9430, 9430], "mapped", [103]], [[9431, 9431], "mapped", [104]], [[9432, 9432], "mapped", [105]], [[9433, 9433], "mapped", [106]], [[9434, 9434], "mapped", [107]], [[9435, 9435], "mapped", [108]], [[9436, 9436], "mapped", [109]], [[9437, 9437], "mapped", [110]], [[9438, 9438], "mapped", [111]], [[9439, 9439], "mapped", [112]], [[9440, 9440], "mapped", [113]], [[9441, 9441], "mapped", [114]], [[9442, 9442], "mapped", [115]], [[9443, 9443], "mapped", [116]], [[9444, 9444], "mapped", [117]], [[9445, 9445], "mapped", [118]], [[9446, 9446], "mapped", [119]], [[9447, 9447], "mapped", [120]], [[9448, 9448], "mapped", [121]], [[9449, 9449], "mapped", [122]], [[9450, 9450], "mapped", [48]], [[9451, 9470], "valid", [], "NV8"], [[9471, 9471], "valid", [], "NV8"], [[9472, 9621], "valid", [], "NV8"], [[9622, 9631], "valid", [], "NV8"], [[9632, 9711], "valid", [], "NV8"], [[9712, 9719], "valid", [], "NV8"], [[9720, 9727], "valid", [], "NV8"], [[9728, 9747], "valid", [], "NV8"], [[9748, 9749], "valid", [], "NV8"], [[9750, 9751], "valid", [], "NV8"], [[9752, 9752], "valid", [], "NV8"], [[9753, 9753], "valid", [], "NV8"], [[9754, 9839], "valid", [], "NV8"], [[9840, 9841], "valid", [], "NV8"], [[9842, 9853], "valid", [], "NV8"], [[9854, 9855], "valid", [], "NV8"], [[9856, 9865], "valid", [], "NV8"], [[9866, 9873], "valid", [], "NV8"], [[9874, 9884], "valid", [], "NV8"], [[9885, 9885], "valid", [], "NV8"], [[9886, 9887], "valid", [], "NV8"], [[9888, 9889], "valid", [], "NV8"], [[9890, 9905], "valid", [], "NV8"], [[9906, 9906], "valid", [], "NV8"], [[9907, 9916], "valid", [], "NV8"], [[9917, 9919], "valid", [], "NV8"], [[9920, 9923], "valid", [], "NV8"], [[9924, 9933], "valid", [], "NV8"], [[9934, 9934], "valid", [], "NV8"], [[9935, 9953], "valid", [], "NV8"], [[9954, 9954], "valid", [], "NV8"], [[9955, 9955], "valid", [], "NV8"], [[9956, 9959], "valid", [], "NV8"], [[9960, 9983], "valid", [], "NV8"], [[9984, 9984], "valid", [], "NV8"], [[9985, 9988], "valid", [], "NV8"], [[9989, 9989], "valid", [], "NV8"], [[9990, 9993], "valid", [], "NV8"], [[9994, 9995], "valid", [], "NV8"], [[9996, 10023], "valid", [], "NV8"], [[10024, 10024], "valid", [], "NV8"], [[10025, 10059], "valid", [], "NV8"], [[10060, 10060], "valid", [], "NV8"], [[10061, 10061], "valid", [], "NV8"], [[10062, 10062], "valid", [], "NV8"], [[10063, 10066], "valid", [], "NV8"], [[10067, 10069], "valid", [], "NV8"], [[10070, 10070], "valid", [], "NV8"], [[10071, 10071], "valid", [], "NV8"], [[10072, 10078], "valid", [], "NV8"], [[10079, 10080], "valid", [], "NV8"], [[10081, 10087], "valid", [], "NV8"], [[10088, 10101], "valid", [], "NV8"], [[10102, 10132], "valid", [], "NV8"], [[10133, 10135], "valid", [], "NV8"], [[10136, 10159], "valid", [], "NV8"], [[10160, 10160], "valid", [], "NV8"], [[10161, 10174], "valid", [], "NV8"], [[10175, 10175], "valid", [], "NV8"], [[10176, 10182], "valid", [], "NV8"], [[10183, 10186], "valid", [], "NV8"], [[10187, 10187], "valid", [], "NV8"], [[10188, 10188], "valid", [], "NV8"], [[10189, 10189], "valid", [], "NV8"], [[10190, 10191], "valid", [], "NV8"], [[10192, 10219], "valid", [], "NV8"], [[10220, 10223], "valid", [], "NV8"], [[10224, 10239], "valid", [], "NV8"], [[10240, 10495], "valid", [], "NV8"], [[10496, 10763], "valid", [], "NV8"], [[10764, 10764], "mapped", [8747, 8747, 8747, 8747]], [[10765, 10867], "valid", [], "NV8"], [[10868, 10868], "disallowed_STD3_mapped", [58, 58, 61]], [[10869, 10869], "disallowed_STD3_mapped", [61, 61]], [[10870, 10870], "disallowed_STD3_mapped", [61, 61, 61]], [[10871, 10971], "valid", [], "NV8"], [[10972, 10972], "mapped", [10973, 824]], [[10973, 11007], "valid", [], "NV8"], [[11008, 11021], "valid", [], "NV8"], [[11022, 11027], "valid", [], "NV8"], [[11028, 11034], "valid", [], "NV8"], [[11035, 11039], "valid", [], "NV8"], [[11040, 11043], "valid", [], "NV8"], [[11044, 11084], "valid", [], "NV8"], [[11085, 11087], "valid", [], "NV8"], [[11088, 11092], "valid", [], "NV8"], [[11093, 11097], "valid", [], "NV8"], [[11098, 11123], "valid", [], "NV8"], [[11124, 11125], "disallowed"], [[11126, 11157], "valid", [], "NV8"], [[11158, 11159], "disallowed"], [[11160, 11193], "valid", [], "NV8"], [[11194, 11196], "disallowed"], [[11197, 11208], "valid", [], "NV8"], [[11209, 11209], "disallowed"], [[11210, 11217], "valid", [], "NV8"], [[11218, 11243], "disallowed"], [[11244, 11247], "valid", [], "NV8"], [[11248, 11263], "disallowed"], [[11264, 11264], "mapped", [11312]], [[11265, 11265], "mapped", [11313]], [[11266, 11266], "mapped", [11314]], [[11267, 11267], "mapped", [11315]], [[11268, 11268], "mapped", [11316]], [[11269, 11269], "mapped", [11317]], [[11270, 11270], "mapped", [11318]], [[11271, 11271], "mapped", [11319]], [[11272, 11272], "mapped", [11320]], [[11273, 11273], "mapped", [11321]], [[11274, 11274], "mapped", [11322]], [[11275, 11275], "mapped", [11323]], [[11276, 11276], "mapped", [11324]], [[11277, 11277], "mapped", [11325]], [[11278, 11278], "mapped", [11326]], [[11279, 11279], "mapped", [11327]], [[11280, 11280], "mapped", [11328]], [[11281, 11281], "mapped", [11329]], [[11282, 11282], "mapped", [11330]], [[11283, 11283], "mapped", [11331]], [[11284, 11284], "mapped", [11332]], [[11285, 11285], "mapped", [11333]], [[11286, 11286], "mapped", [11334]], [[11287, 11287], "mapped", [11335]], [[11288, 11288], "mapped", [11336]], [[11289, 11289], "mapped", [11337]], [[11290, 11290], "mapped", [11338]], [[11291, 11291], "mapped", [11339]], [[11292, 11292], "mapped", [11340]], [[11293, 11293], "mapped", [11341]], [[11294, 11294], "mapped", [11342]], [[11295, 11295], "mapped", [11343]], [[11296, 11296], "mapped", [11344]], [[11297, 11297], "mapped", [11345]], [[11298, 11298], "mapped", [11346]], [[11299, 11299], "mapped", [11347]], [[11300, 11300], "mapped", [11348]], [[11301, 11301], "mapped", [11349]], [[11302, 11302], "mapped", [11350]], [[11303, 11303], "mapped", [11351]], [[11304, 11304], "mapped", [11352]], [[11305, 11305], "mapped", [11353]], [[11306, 11306], "mapped", [11354]], [[11307, 11307], "mapped", [11355]], [[11308, 11308], "mapped", [11356]], [[11309, 11309], "mapped", [11357]], [[11310, 11310], "mapped", [11358]], [[11311, 11311], "disallowed"], [[11312, 11358], "valid"], [[11359, 11359], "disallowed"], [[11360, 11360], "mapped", [11361]], [[11361, 11361], "valid"], [[11362, 11362], "mapped", [619]], [[11363, 11363], "mapped", [7549]], [[11364, 11364], "mapped", [637]], [[11365, 11366], "valid"], [[11367, 11367], "mapped", [11368]], [[11368, 11368], "valid"], [[11369, 11369], "mapped", [11370]], [[11370, 11370], "valid"], [[11371, 11371], "mapped", [11372]], [[11372, 11372], "valid"], [[11373, 11373], "mapped", [593]], [[11374, 11374], "mapped", [625]], [[11375, 11375], "mapped", [592]], [[11376, 11376], "mapped", [594]], [[11377, 11377], "valid"], [[11378, 11378], "mapped", [11379]], [[11379, 11379], "valid"], [[11380, 11380], "valid"], [[11381, 11381], "mapped", [11382]], [[11382, 11383], "valid"], [[11384, 11387], "valid"], [[11388, 11388], "mapped", [106]], [[11389, 11389], "mapped", [118]], [[11390, 11390], "mapped", [575]], [[11391, 11391], "mapped", [576]], [[11392, 11392], "mapped", [11393]], [[11393, 11393], "valid"], [[11394, 11394], "mapped", [11395]], [[11395, 11395], "valid"], [[11396, 11396], "mapped", [11397]], [[11397, 11397], "valid"], [[11398, 11398], "mapped", [11399]], [[11399, 11399], "valid"], [[11400, 11400], "mapped", [11401]], [[11401, 11401], "valid"], [[11402, 11402], "mapped", [11403]], [[11403, 11403], "valid"], [[11404, 11404], "mapped", [11405]], [[11405, 11405], "valid"], [[11406, 11406], "mapped", [11407]], [[11407, 11407], "valid"], [[11408, 11408], "mapped", [11409]], [[11409, 11409], "valid"], [[11410, 11410], "mapped", [11411]], [[11411, 11411], "valid"], [[11412, 11412], "mapped", [11413]], [[11413, 11413], "valid"], [[11414, 11414], "mapped", [11415]], [[11415, 11415], "valid"], [[11416, 11416], "mapped", [11417]], [[11417, 11417], "valid"], [[11418, 11418], "mapped", [11419]], [[11419, 11419], "valid"], [[11420, 11420], "mapped", [11421]], [[11421, 11421], "valid"], [[11422, 11422], "mapped", [11423]], [[11423, 11423], "valid"], [[11424, 11424], "mapped", [11425]], [[11425, 11425], "valid"], [[11426, 11426], "mapped", [11427]], [[11427, 11427], "valid"], [[11428, 11428], "mapped", [11429]], [[11429, 11429], "valid"], [[11430, 11430], "mapped", [11431]], [[11431, 11431], "valid"], [[11432, 11432], "mapped", [11433]], [[11433, 11433], "valid"], [[11434, 11434], "mapped", [11435]], [[11435, 11435], "valid"], [[11436, 11436], "mapped", [11437]], [[11437, 11437], "valid"], [[11438, 11438], "mapped", [11439]], [[11439, 11439], "valid"], [[11440, 11440], "mapped", [11441]], [[11441, 11441], "valid"], [[11442, 11442], "mapped", [11443]], [[11443, 11443], "valid"], [[11444, 11444], "mapped", [11445]], [[11445, 11445], "valid"], [[11446, 11446], "mapped", [11447]], [[11447, 11447], "valid"], [[11448, 11448], "mapped", [11449]], [[11449, 11449], "valid"], [[11450, 11450], "mapped", [11451]], [[11451, 11451], "valid"], [[11452, 11452], "mapped", [11453]], [[11453, 11453], "valid"], [[11454, 11454], "mapped", [11455]], [[11455, 11455], "valid"], [[11456, 11456], "mapped", [11457]], [[11457, 11457], "valid"], [[11458, 11458], "mapped", [11459]], [[11459, 11459], "valid"], [[11460, 11460], "mapped", [11461]], [[11461, 11461], "valid"], [[11462, 11462], "mapped", [11463]], [[11463, 11463], "valid"], [[11464, 11464], "mapped", [11465]], [[11465, 11465], "valid"], [[11466, 11466], "mapped", [11467]], [[11467, 11467], "valid"], [[11468, 11468], "mapped", [11469]], [[11469, 11469], "valid"], [[11470, 11470], "mapped", [11471]], [[11471, 11471], "valid"], [[11472, 11472], "mapped", [11473]], [[11473, 11473], "valid"], [[11474, 11474], "mapped", [11475]], [[11475, 11475], "valid"], [[11476, 11476], "mapped", [11477]], [[11477, 11477], "valid"], [[11478, 11478], "mapped", [11479]], [[11479, 11479], "valid"], [[11480, 11480], "mapped", [11481]], [[11481, 11481], "valid"], [[11482, 11482], "mapped", [11483]], [[11483, 11483], "valid"], [[11484, 11484], "mapped", [11485]], [[11485, 11485], "valid"], [[11486, 11486], "mapped", [11487]], [[11487, 11487], "valid"], [[11488, 11488], "mapped", [11489]], [[11489, 11489], "valid"], [[11490, 11490], "mapped", [11491]], [[11491, 11492], "valid"], [[11493, 11498], "valid", [], "NV8"], [[11499, 11499], "mapped", [11500]], [[11500, 11500], "valid"], [[11501, 11501], "mapped", [11502]], [[11502, 11505], "valid"], [[11506, 11506], "mapped", [11507]], [[11507, 11507], "valid"], [[11508, 11512], "disallowed"], [[11513, 11519], "valid", [], "NV8"], [[11520, 11557], "valid"], [[11558, 11558], "disallowed"], [[11559, 11559], "valid"], [[11560, 11564], "disallowed"], [[11565, 11565], "valid"], [[11566, 11567], "disallowed"], [[11568, 11621], "valid"], [[11622, 11623], "valid"], [[11624, 11630], "disallowed"], [[11631, 11631], "mapped", [11617]], [[11632, 11632], "valid", [], "NV8"], [[11633, 11646], "disallowed"], [[11647, 11647], "valid"], [[11648, 11670], "valid"], [[11671, 11679], "disallowed"], [[11680, 11686], "valid"], [[11687, 11687], "disallowed"], [[11688, 11694], "valid"], [[11695, 11695], "disallowed"], [[11696, 11702], "valid"], [[11703, 11703], "disallowed"], [[11704, 11710], "valid"], [[11711, 11711], "disallowed"], [[11712, 11718], "valid"], [[11719, 11719], "disallowed"], [[11720, 11726], "valid"], [[11727, 11727], "disallowed"], [[11728, 11734], "valid"], [[11735, 11735], "disallowed"], [[11736, 11742], "valid"], [[11743, 11743], "disallowed"], [[11744, 11775], "valid"], [[11776, 11799], "valid", [], "NV8"], [[11800, 11803], "valid", [], "NV8"], [[11804, 11805], "valid", [], "NV8"], [[11806, 11822], "valid", [], "NV8"], [[11823, 11823], "valid"], [[11824, 11824], "valid", [], "NV8"], [[11825, 11825], "valid", [], "NV8"], [[11826, 11835], "valid", [], "NV8"], [[11836, 11842], "valid", [], "NV8"], [[11843, 11903], "disallowed"], [[11904, 11929], "valid", [], "NV8"], [[11930, 11930], "disallowed"], [[11931, 11934], "valid", [], "NV8"], [[11935, 11935], "mapped", [27597]], [[11936, 12018], "valid", [], "NV8"], [[12019, 12019], "mapped", [40863]], [[12020, 12031], "disallowed"], [[12032, 12032], "mapped", [19968]], [[12033, 12033], "mapped", [20008]], [[12034, 12034], "mapped", [20022]], [[12035, 12035], "mapped", [20031]], [[12036, 12036], "mapped", [20057]], [[12037, 12037], "mapped", [20101]], [[12038, 12038], "mapped", [20108]], [[12039, 12039], "mapped", [20128]], [[12040, 12040], "mapped", [20154]], [[12041, 12041], "mapped", [20799]], [[12042, 12042], "mapped", [20837]], [[12043, 12043], "mapped", [20843]], [[12044, 12044], "mapped", [20866]], [[12045, 12045], "mapped", [20886]], [[12046, 12046], "mapped", [20907]], [[12047, 12047], "mapped", [20960]], [[12048, 12048], "mapped", [20981]], [[12049, 12049], "mapped", [20992]], [[12050, 12050], "mapped", [21147]], [[12051, 12051], "mapped", [21241]], [[12052, 12052], "mapped", [21269]], [[12053, 12053], "mapped", [21274]], [[12054, 12054], "mapped", [21304]], [[12055, 12055], "mapped", [21313]], [[12056, 12056], "mapped", [21340]], [[12057, 12057], "mapped", [21353]], [[12058, 12058], "mapped", [21378]], [[12059, 12059], "mapped", [21430]], [[12060, 12060], "mapped", [21448]], [[12061, 12061], "mapped", [21475]], [[12062, 12062], "mapped", [22231]], [[12063, 12063], "mapped", [22303]], [[12064, 12064], "mapped", [22763]], [[12065, 12065], "mapped", [22786]], [[12066, 12066], "mapped", [22794]], [[12067, 12067], "mapped", [22805]], [[12068, 12068], "mapped", [22823]], [[12069, 12069], "mapped", [22899]], [[12070, 12070], "mapped", [23376]], [[12071, 12071], "mapped", [23424]], [[12072, 12072], "mapped", [23544]], [[12073, 12073], "mapped", [23567]], [[12074, 12074], "mapped", [23586]], [[12075, 12075], "mapped", [23608]], [[12076, 12076], "mapped", [23662]], [[12077, 12077], "mapped", [23665]], [[12078, 12078], "mapped", [24027]], [[12079, 12079], "mapped", [24037]], [[12080, 12080], "mapped", [24049]], [[12081, 12081], "mapped", [24062]], [[12082, 12082], "mapped", [24178]], [[12083, 12083], "mapped", [24186]], [[12084, 12084], "mapped", [24191]], [[12085, 12085], "mapped", [24308]], [[12086, 12086], "mapped", [24318]], [[12087, 12087], "mapped", [24331]], [[12088, 12088], "mapped", [24339]], [[12089, 12089], "mapped", [24400]], [[12090, 12090], "mapped", [24417]], [[12091, 12091], "mapped", [24435]], [[12092, 12092], "mapped", [24515]], [[12093, 12093], "mapped", [25096]], [[12094, 12094], "mapped", [25142]], [[12095, 12095], "mapped", [25163]], [[12096, 12096], "mapped", [25903]], [[12097, 12097], "mapped", [25908]], [[12098, 12098], "mapped", [25991]], [[12099, 12099], "mapped", [26007]], [[12100, 12100], "mapped", [26020]], [[12101, 12101], "mapped", [26041]], [[12102, 12102], "mapped", [26080]], [[12103, 12103], "mapped", [26085]], [[12104, 12104], "mapped", [26352]], [[12105, 12105], "mapped", [26376]], [[12106, 12106], "mapped", [26408]], [[12107, 12107], "mapped", [27424]], [[12108, 12108], "mapped", [27490]], [[12109, 12109], "mapped", [27513]], [[12110, 12110], "mapped", [27571]], [[12111, 12111], "mapped", [27595]], [[12112, 12112], "mapped", [27604]], [[12113, 12113], "mapped", [27611]], [[12114, 12114], "mapped", [27663]], [[12115, 12115], "mapped", [27668]], [[12116, 12116], "mapped", [27700]], [[12117, 12117], "mapped", [28779]], [[12118, 12118], "mapped", [29226]], [[12119, 12119], "mapped", [29238]], [[12120, 12120], "mapped", [29243]], [[12121, 12121], "mapped", [29247]], [[12122, 12122], "mapped", [29255]], [[12123, 12123], "mapped", [29273]], [[12124, 12124], "mapped", [29275]], [[12125, 12125], "mapped", [29356]], [[12126, 12126], "mapped", [29572]], [[12127, 12127], "mapped", [29577]], [[12128, 12128], "mapped", [29916]], [[12129, 12129], "mapped", [29926]], [[12130, 12130], "mapped", [29976]], [[12131, 12131], "mapped", [29983]], [[12132, 12132], "mapped", [29992]], [[12133, 12133], "mapped", [3e4]], [[12134, 12134], "mapped", [30091]], [[12135, 12135], "mapped", [30098]], [[12136, 12136], "mapped", [30326]], [[12137, 12137], "mapped", [30333]], [[12138, 12138], "mapped", [30382]], [[12139, 12139], "mapped", [30399]], [[12140, 12140], "mapped", [30446]], [[12141, 12141], "mapped", [30683]], [[12142, 12142], "mapped", [30690]], [[12143, 12143], "mapped", [30707]], [[12144, 12144], "mapped", [31034]], [[12145, 12145], "mapped", [31160]], [[12146, 12146], "mapped", [31166]], [[12147, 12147], "mapped", [31348]], [[12148, 12148], "mapped", [31435]], [[12149, 12149], "mapped", [31481]], [[12150, 12150], "mapped", [31859]], [[12151, 12151], "mapped", [31992]], [[12152, 12152], "mapped", [32566]], [[12153, 12153], "mapped", [32593]], [[12154, 12154], "mapped", [32650]], [[12155, 12155], "mapped", [32701]], [[12156, 12156], "mapped", [32769]], [[12157, 12157], "mapped", [32780]], [[12158, 12158], "mapped", [32786]], [[12159, 12159], "mapped", [32819]], [[12160, 12160], "mapped", [32895]], [[12161, 12161], "mapped", [32905]], [[12162, 12162], "mapped", [33251]], [[12163, 12163], "mapped", [33258]], [[12164, 12164], "mapped", [33267]], [[12165, 12165], "mapped", [33276]], [[12166, 12166], "mapped", [33292]], [[12167, 12167], "mapped", [33307]], [[12168, 12168], "mapped", [33311]], [[12169, 12169], "mapped", [33390]], [[12170, 12170], "mapped", [33394]], [[12171, 12171], "mapped", [33400]], [[12172, 12172], "mapped", [34381]], [[12173, 12173], "mapped", [34411]], [[12174, 12174], "mapped", [34880]], [[12175, 12175], "mapped", [34892]], [[12176, 12176], "mapped", [34915]], [[12177, 12177], "mapped", [35198]], [[12178, 12178], "mapped", [35211]], [[12179, 12179], "mapped", [35282]], [[12180, 12180], "mapped", [35328]], [[12181, 12181], "mapped", [35895]], [[12182, 12182], "mapped", [35910]], [[12183, 12183], "mapped", [35925]], [[12184, 12184], "mapped", [35960]], [[12185, 12185], "mapped", [35997]], [[12186, 12186], "mapped", [36196]], [[12187, 12187], "mapped", [36208]], [[12188, 12188], "mapped", [36275]], [[12189, 12189], "mapped", [36523]], [[12190, 12190], "mapped", [36554]], [[12191, 12191], "mapped", [36763]], [[12192, 12192], "mapped", [36784]], [[12193, 12193], "mapped", [36789]], [[12194, 12194], "mapped", [37009]], [[12195, 12195], "mapped", [37193]], [[12196, 12196], "mapped", [37318]], [[12197, 12197], "mapped", [37324]], [[12198, 12198], "mapped", [37329]], [[12199, 12199], "mapped", [38263]], [[12200, 12200], "mapped", [38272]], [[12201, 12201], "mapped", [38428]], [[12202, 12202], "mapped", [38582]], [[12203, 12203], "mapped", [38585]], [[12204, 12204], "mapped", [38632]], [[12205, 12205], "mapped", [38737]], [[12206, 12206], "mapped", [38750]], [[12207, 12207], "mapped", [38754]], [[12208, 12208], "mapped", [38761]], [[12209, 12209], "mapped", [38859]], [[12210, 12210], "mapped", [38893]], [[12211, 12211], "mapped", [38899]], [[12212, 12212], "mapped", [38913]], [[12213, 12213], "mapped", [39080]], [[12214, 12214], "mapped", [39131]], [[12215, 12215], "mapped", [39135]], [[12216, 12216], "mapped", [39318]], [[12217, 12217], "mapped", [39321]], [[12218, 12218], "mapped", [39340]], [[12219, 12219], "mapped", [39592]], [[12220, 12220], "mapped", [39640]], [[12221, 12221], "mapped", [39647]], [[12222, 12222], "mapped", [39717]], [[12223, 12223], "mapped", [39727]], [[12224, 12224], "mapped", [39730]], [[12225, 12225], "mapped", [39740]], [[12226, 12226], "mapped", [39770]], [[12227, 12227], "mapped", [40165]], [[12228, 12228], "mapped", [40565]], [[12229, 12229], "mapped", [40575]], [[12230, 12230], "mapped", [40613]], [[12231, 12231], "mapped", [40635]], [[12232, 12232], "mapped", [40643]], [[12233, 12233], "mapped", [40653]], [[12234, 12234], "mapped", [40657]], [[12235, 12235], "mapped", [40697]], [[12236, 12236], "mapped", [40701]], [[12237, 12237], "mapped", [40718]], [[12238, 12238], "mapped", [40723]], [[12239, 12239], "mapped", [40736]], [[12240, 12240], "mapped", [40763]], [[12241, 12241], "mapped", [40778]], [[12242, 12242], "mapped", [40786]], [[12243, 12243], "mapped", [40845]], [[12244, 12244], "mapped", [40860]], [[12245, 12245], "mapped", [40864]], [[12246, 12271], "disallowed"], [[12272, 12283], "disallowed"], [[12284, 12287], "disallowed"], [[12288, 12288], "disallowed_STD3_mapped", [32]], [[12289, 12289], "valid", [], "NV8"], [[12290, 12290], "mapped", [46]], [[12291, 12292], "valid", [], "NV8"], [[12293, 12295], "valid"], [[12296, 12329], "valid", [], "NV8"], [[12330, 12333], "valid"], [[12334, 12341], "valid", [], "NV8"], [[12342, 12342], "mapped", [12306]], [[12343, 12343], "valid", [], "NV8"], [[12344, 12344], "mapped", [21313]], [[12345, 12345], "mapped", [21316]], [[12346, 12346], "mapped", [21317]], [[12347, 12347], "valid", [], "NV8"], [[12348, 12348], "valid"], [[12349, 12349], "valid", [], "NV8"], [[12350, 12350], "valid", [], "NV8"], [[12351, 12351], "valid", [], "NV8"], [[12352, 12352], "disallowed"], [[12353, 12436], "valid"], [[12437, 12438], "valid"], [[12439, 12440], "disallowed"], [[12441, 12442], "valid"], [[12443, 12443], "disallowed_STD3_mapped", [32, 12441]], [[12444, 12444], "disallowed_STD3_mapped", [32, 12442]], [[12445, 12446], "valid"], [[12447, 12447], "mapped", [12424, 12426]], [[12448, 12448], "valid", [], "NV8"], [[12449, 12542], "valid"], [[12543, 12543], "mapped", [12467, 12488]], [[12544, 12548], "disallowed"], [[12549, 12588], "valid"], [[12589, 12589], "valid"], [[12590, 12592], "disallowed"], [[12593, 12593], "mapped", [4352]], [[12594, 12594], "mapped", [4353]], [[12595, 12595], "mapped", [4522]], [[12596, 12596], "mapped", [4354]], [[12597, 12597], "mapped", [4524]], [[12598, 12598], "mapped", [4525]], [[12599, 12599], "mapped", [4355]], [[12600, 12600], "mapped", [4356]], [[12601, 12601], "mapped", [4357]], [[12602, 12602], "mapped", [4528]], [[12603, 12603], "mapped", [4529]], [[12604, 12604], "mapped", [4530]], [[12605, 12605], "mapped", [4531]], [[12606, 12606], "mapped", [4532]], [[12607, 12607], "mapped", [4533]], [[12608, 12608], "mapped", [4378]], [[12609, 12609], "mapped", [4358]], [[12610, 12610], "mapped", [4359]], [[12611, 12611], "mapped", [4360]], [[12612, 12612], "mapped", [4385]], [[12613, 12613], "mapped", [4361]], [[12614, 12614], "mapped", [4362]], [[12615, 12615], "mapped", [4363]], [[12616, 12616], "mapped", [4364]], [[12617, 12617], "mapped", [4365]], [[12618, 12618], "mapped", [4366]], [[12619, 12619], "mapped", [4367]], [[12620, 12620], "mapped", [4368]], [[12621, 12621], "mapped", [4369]], [[12622, 12622], "mapped", [4370]], [[12623, 12623], "mapped", [4449]], [[12624, 12624], "mapped", [4450]], [[12625, 12625], "mapped", [4451]], [[12626, 12626], "mapped", [4452]], [[12627, 12627], "mapped", [4453]], [[12628, 12628], "mapped", [4454]], [[12629, 12629], "mapped", [4455]], [[12630, 12630], "mapped", [4456]], [[12631, 12631], "mapped", [4457]], [[12632, 12632], "mapped", [4458]], [[12633, 12633], "mapped", [4459]], [[12634, 12634], "mapped", [4460]], [[12635, 12635], "mapped", [4461]], [[12636, 12636], "mapped", [4462]], [[12637, 12637], "mapped", [4463]], [[12638, 12638], "mapped", [4464]], [[12639, 12639], "mapped", [4465]], [[12640, 12640], "mapped", [4466]], [[12641, 12641], "mapped", [4467]], [[12642, 12642], "mapped", [4468]], [[12643, 12643], "mapped", [4469]], [[12644, 12644], "disallowed"], [[12645, 12645], "mapped", [4372]], [[12646, 12646], "mapped", [4373]], [[12647, 12647], "mapped", [4551]], [[12648, 12648], "mapped", [4552]], [[12649, 12649], "mapped", [4556]], [[12650, 12650], "mapped", [4558]], [[12651, 12651], "mapped", [4563]], [[12652, 12652], "mapped", [4567]], [[12653, 12653], "mapped", [4569]], [[12654, 12654], "mapped", [4380]], [[12655, 12655], "mapped", [4573]], [[12656, 12656], "mapped", [4575]], [[12657, 12657], "mapped", [4381]], [[12658, 12658], "mapped", [4382]], [[12659, 12659], "mapped", [4384]], [[12660, 12660], "mapped", [4386]], [[12661, 12661], "mapped", [4387]], [[12662, 12662], "mapped", [4391]], [[12663, 12663], "mapped", [4393]], [[12664, 12664], "mapped", [4395]], [[12665, 12665], "mapped", [4396]], [[12666, 12666], "mapped", [4397]], [[12667, 12667], "mapped", [4398]], [[12668, 12668], "mapped", [4399]], [[12669, 12669], "mapped", [4402]], [[12670, 12670], "mapped", [4406]], [[12671, 12671], "mapped", [4416]], [[12672, 12672], "mapped", [4423]], [[12673, 12673], "mapped", [4428]], [[12674, 12674], "mapped", [4593]], [[12675, 12675], "mapped", [4594]], [[12676, 12676], "mapped", [4439]], [[12677, 12677], "mapped", [4440]], [[12678, 12678], "mapped", [4441]], [[12679, 12679], "mapped", [4484]], [[12680, 12680], "mapped", [4485]], [[12681, 12681], "mapped", [4488]], [[12682, 12682], "mapped", [4497]], [[12683, 12683], "mapped", [4498]], [[12684, 12684], "mapped", [4500]], [[12685, 12685], "mapped", [4510]], [[12686, 12686], "mapped", [4513]], [[12687, 12687], "disallowed"], [[12688, 12689], "valid", [], "NV8"], [[12690, 12690], "mapped", [19968]], [[12691, 12691], "mapped", [20108]], [[12692, 12692], "mapped", [19977]], [[12693, 12693], "mapped", [22235]], [[12694, 12694], "mapped", [19978]], [[12695, 12695], "mapped", [20013]], [[12696, 12696], "mapped", [19979]], [[12697, 12697], "mapped", [30002]], [[12698, 12698], "mapped", [20057]], [[12699, 12699], "mapped", [19993]], [[12700, 12700], "mapped", [19969]], [[12701, 12701], "mapped", [22825]], [[12702, 12702], "mapped", [22320]], [[12703, 12703], "mapped", [20154]], [[12704, 12727], "valid"], [[12728, 12730], "valid"], [[12731, 12735], "disallowed"], [[12736, 12751], "valid", [], "NV8"], [[12752, 12771], "valid", [], "NV8"], [[12772, 12783], "disallowed"], [[12784, 12799], "valid"], [[12800, 12800], "disallowed_STD3_mapped", [40, 4352, 41]], [[12801, 12801], "disallowed_STD3_mapped", [40, 4354, 41]], [[12802, 12802], "disallowed_STD3_mapped", [40, 4355, 41]], [[12803, 12803], "disallowed_STD3_mapped", [40, 4357, 41]], [[12804, 12804], "disallowed_STD3_mapped", [40, 4358, 41]], [[12805, 12805], "disallowed_STD3_mapped", [40, 4359, 41]], [[12806, 12806], "disallowed_STD3_mapped", [40, 4361, 41]], [[12807, 12807], "disallowed_STD3_mapped", [40, 4363, 41]], [[12808, 12808], "disallowed_STD3_mapped", [40, 4364, 41]], [[12809, 12809], "disallowed_STD3_mapped", [40, 4366, 41]], [[12810, 12810], "disallowed_STD3_mapped", [40, 4367, 41]], [[12811, 12811], "disallowed_STD3_mapped", [40, 4368, 41]], [[12812, 12812], "disallowed_STD3_mapped", [40, 4369, 41]], [[12813, 12813], "disallowed_STD3_mapped", [40, 4370, 41]], [[12814, 12814], "disallowed_STD3_mapped", [40, 44032, 41]], [[12815, 12815], "disallowed_STD3_mapped", [40, 45208, 41]], [[12816, 12816], "disallowed_STD3_mapped", [40, 45796, 41]], [[12817, 12817], "disallowed_STD3_mapped", [40, 46972, 41]], [[12818, 12818], "disallowed_STD3_mapped", [40, 47560, 41]], [[12819, 12819], "disallowed_STD3_mapped", [40, 48148, 41]], [[12820, 12820], "disallowed_STD3_mapped", [40, 49324, 41]], [[12821, 12821], "disallowed_STD3_mapped", [40, 50500, 41]], [[12822, 12822], "disallowed_STD3_mapped", [40, 51088, 41]], [[12823, 12823], "disallowed_STD3_mapped", [40, 52264, 41]], [[12824, 12824], "disallowed_STD3_mapped", [40, 52852, 41]], [[12825, 12825], "disallowed_STD3_mapped", [40, 53440, 41]], [[12826, 12826], "disallowed_STD3_mapped", [40, 54028, 41]], [[12827, 12827], "disallowed_STD3_mapped", [40, 54616, 41]], [[12828, 12828], "disallowed_STD3_mapped", [40, 51452, 41]], [[12829, 12829], "disallowed_STD3_mapped", [40, 50724, 51204, 41]], [[12830, 12830], "disallowed_STD3_mapped", [40, 50724, 54980, 41]], [[12831, 12831], "disallowed"], [[12832, 12832], "disallowed_STD3_mapped", [40, 19968, 41]], [[12833, 12833], "disallowed_STD3_mapped", [40, 20108, 41]], [[12834, 12834], "disallowed_STD3_mapped", [40, 19977, 41]], [[12835, 12835], "disallowed_STD3_mapped", [40, 22235, 41]], [[12836, 12836], "disallowed_STD3_mapped", [40, 20116, 41]], [[12837, 12837], "disallowed_STD3_mapped", [40, 20845, 41]], [[12838, 12838], "disallowed_STD3_mapped", [40, 19971, 41]], [[12839, 12839], "disallowed_STD3_mapped", [40, 20843, 41]], [[12840, 12840], "disallowed_STD3_mapped", [40, 20061, 41]], [[12841, 12841], "disallowed_STD3_mapped", [40, 21313, 41]], [[12842, 12842], "disallowed_STD3_mapped", [40, 26376, 41]], [[12843, 12843], "disallowed_STD3_mapped", [40, 28779, 41]], [[12844, 12844], "disallowed_STD3_mapped", [40, 27700, 41]], [[12845, 12845], "disallowed_STD3_mapped", [40, 26408, 41]], [[12846, 12846], "disallowed_STD3_mapped", [40, 37329, 41]], [[12847, 12847], "disallowed_STD3_mapped", [40, 22303, 41]], [[12848, 12848], "disallowed_STD3_mapped", [40, 26085, 41]], [[12849, 12849], "disallowed_STD3_mapped", [40, 26666, 41]], [[12850, 12850], "disallowed_STD3_mapped", [40, 26377, 41]], [[12851, 12851], "disallowed_STD3_mapped", [40, 31038, 41]], [[12852, 12852], "disallowed_STD3_mapped", [40, 21517, 41]], [[12853, 12853], "disallowed_STD3_mapped", [40, 29305, 41]], [[12854, 12854], "disallowed_STD3_mapped", [40, 36001, 41]], [[12855, 12855], "disallowed_STD3_mapped", [40, 31069, 41]], [[12856, 12856], "disallowed_STD3_mapped", [40, 21172, 41]], [[12857, 12857], "disallowed_STD3_mapped", [40, 20195, 41]], [[12858, 12858], "disallowed_STD3_mapped", [40, 21628, 41]], [[12859, 12859], "disallowed_STD3_mapped", [40, 23398, 41]], [[12860, 12860], "disallowed_STD3_mapped", [40, 30435, 41]], [[12861, 12861], "disallowed_STD3_mapped", [40, 20225, 41]], [[12862, 12862], "disallowed_STD3_mapped", [40, 36039, 41]], [[12863, 12863], "disallowed_STD3_mapped", [40, 21332, 41]], [[12864, 12864], "disallowed_STD3_mapped", [40, 31085, 41]], [[12865, 12865], "disallowed_STD3_mapped", [40, 20241, 41]], [[12866, 12866], "disallowed_STD3_mapped", [40, 33258, 41]], [[12867, 12867], "disallowed_STD3_mapped", [40, 33267, 41]], [[12868, 12868], "mapped", [21839]], [[12869, 12869], "mapped", [24188]], [[12870, 12870], "mapped", [25991]], [[12871, 12871], "mapped", [31631]], [[12872, 12879], "valid", [], "NV8"], [[12880, 12880], "mapped", [112, 116, 101]], [[12881, 12881], "mapped", [50, 49]], [[12882, 12882], "mapped", [50, 50]], [[12883, 12883], "mapped", [50, 51]], [[12884, 12884], "mapped", [50, 52]], [[12885, 12885], "mapped", [50, 53]], [[12886, 12886], "mapped", [50, 54]], [[12887, 12887], "mapped", [50, 55]], [[12888, 12888], "mapped", [50, 56]], [[12889, 12889], "mapped", [50, 57]], [[12890, 12890], "mapped", [51, 48]], [[12891, 12891], "mapped", [51, 49]], [[12892, 12892], "mapped", [51, 50]], [[12893, 12893], "mapped", [51, 51]], [[12894, 12894], "mapped", [51, 52]], [[12895, 12895], "mapped", [51, 53]], [[12896, 12896], "mapped", [4352]], [[12897, 12897], "mapped", [4354]], [[12898, 12898], "mapped", [4355]], [[12899, 12899], "mapped", [4357]], [[12900, 12900], "mapped", [4358]], [[12901, 12901], "mapped", [4359]], [[12902, 12902], "mapped", [4361]], [[12903, 12903], "mapped", [4363]], [[12904, 12904], "mapped", [4364]], [[12905, 12905], "mapped", [4366]], [[12906, 12906], "mapped", [4367]], [[12907, 12907], "mapped", [4368]], [[12908, 12908], "mapped", [4369]], [[12909, 12909], "mapped", [4370]], [[12910, 12910], "mapped", [44032]], [[12911, 12911], "mapped", [45208]], [[12912, 12912], "mapped", [45796]], [[12913, 12913], "mapped", [46972]], [[12914, 12914], "mapped", [47560]], [[12915, 12915], "mapped", [48148]], [[12916, 12916], "mapped", [49324]], [[12917, 12917], "mapped", [50500]], [[12918, 12918], "mapped", [51088]], [[12919, 12919], "mapped", [52264]], [[12920, 12920], "mapped", [52852]], [[12921, 12921], "mapped", [53440]], [[12922, 12922], "mapped", [54028]], [[12923, 12923], "mapped", [54616]], [[12924, 12924], "mapped", [52280, 44256]], [[12925, 12925], "mapped", [51452, 51032]], [[12926, 12926], "mapped", [50864]], [[12927, 12927], "valid", [], "NV8"], [[12928, 12928], "mapped", [19968]], [[12929, 12929], "mapped", [20108]], [[12930, 12930], "mapped", [19977]], [[12931, 12931], "mapped", [22235]], [[12932, 12932], "mapped", [20116]], [[12933, 12933], "mapped", [20845]], [[12934, 12934], "mapped", [19971]], [[12935, 12935], "mapped", [20843]], [[12936, 12936], "mapped", [20061]], [[12937, 12937], "mapped", [21313]], [[12938, 12938], "mapped", [26376]], [[12939, 12939], "mapped", [28779]], [[12940, 12940], "mapped", [27700]], [[12941, 12941], "mapped", [26408]], [[12942, 12942], "mapped", [37329]], [[12943, 12943], "mapped", [22303]], [[12944, 12944], "mapped", [26085]], [[12945, 12945], "mapped", [26666]], [[12946, 12946], "mapped", [26377]], [[12947, 12947], "mapped", [31038]], [[12948, 12948], "mapped", [21517]], [[12949, 12949], "mapped", [29305]], [[12950, 12950], "mapped", [36001]], [[12951, 12951], "mapped", [31069]], [[12952, 12952], "mapped", [21172]], [[12953, 12953], "mapped", [31192]], [[12954, 12954], "mapped", [30007]], [[12955, 12955], "mapped", [22899]], [[12956, 12956], "mapped", [36969]], [[12957, 12957], "mapped", [20778]], [[12958, 12958], "mapped", [21360]], [[12959, 12959], "mapped", [27880]], [[12960, 12960], "mapped", [38917]], [[12961, 12961], "mapped", [20241]], [[12962, 12962], "mapped", [20889]], [[12963, 12963], "mapped", [27491]], [[12964, 12964], "mapped", [19978]], [[12965, 12965], "mapped", [20013]], [[12966, 12966], "mapped", [19979]], [[12967, 12967], "mapped", [24038]], [[12968, 12968], "mapped", [21491]], [[12969, 12969], "mapped", [21307]], [[12970, 12970], "mapped", [23447]], [[12971, 12971], "mapped", [23398]], [[12972, 12972], "mapped", [30435]], [[12973, 12973], "mapped", [20225]], [[12974, 12974], "mapped", [36039]], [[12975, 12975], "mapped", [21332]], [[12976, 12976], "mapped", [22812]], [[12977, 12977], "mapped", [51, 54]], [[12978, 12978], "mapped", [51, 55]], [[12979, 12979], "mapped", [51, 56]], [[12980, 12980], "mapped", [51, 57]], [[12981, 12981], "mapped", [52, 48]], [[12982, 12982], "mapped", [52, 49]], [[12983, 12983], "mapped", [52, 50]], [[12984, 12984], "mapped", [52, 51]], [[12985, 12985], "mapped", [52, 52]], [[12986, 12986], "mapped", [52, 53]], [[12987, 12987], "mapped", [52, 54]], [[12988, 12988], "mapped", [52, 55]], [[12989, 12989], "mapped", [52, 56]], [[12990, 12990], "mapped", [52, 57]], [[12991, 12991], "mapped", [53, 48]], [[12992, 12992], "mapped", [49, 26376]], [[12993, 12993], "mapped", [50, 26376]], [[12994, 12994], "mapped", [51, 26376]], [[12995, 12995], "mapped", [52, 26376]], [[12996, 12996], "mapped", [53, 26376]], [[12997, 12997], "mapped", [54, 26376]], [[12998, 12998], "mapped", [55, 26376]], [[12999, 12999], "mapped", [56, 26376]], [[13e3, 13e3], "mapped", [57, 26376]], [[13001, 13001], "mapped", [49, 48, 26376]], [[13002, 13002], "mapped", [49, 49, 26376]], [[13003, 13003], "mapped", [49, 50, 26376]], [[13004, 13004], "mapped", [104, 103]], [[13005, 13005], "mapped", [101, 114, 103]], [[13006, 13006], "mapped", [101, 118]], [[13007, 13007], "mapped", [108, 116, 100]], [[13008, 13008], "mapped", [12450]], [[13009, 13009], "mapped", [12452]], [[13010, 13010], "mapped", [12454]], [[13011, 13011], "mapped", [12456]], [[13012, 13012], "mapped", [12458]], [[13013, 13013], "mapped", [12459]], [[13014, 13014], "mapped", [12461]], [[13015, 13015], "mapped", [12463]], [[13016, 13016], "mapped", [12465]], [[13017, 13017], "mapped", [12467]], [[13018, 13018], "mapped", [12469]], [[13019, 13019], "mapped", [12471]], [[13020, 13020], "mapped", [12473]], [[13021, 13021], "mapped", [12475]], [[13022, 13022], "mapped", [12477]], [[13023, 13023], "mapped", [12479]], [[13024, 13024], "mapped", [12481]], [[13025, 13025], "mapped", [12484]], [[13026, 13026], "mapped", [12486]], [[13027, 13027], "mapped", [12488]], [[13028, 13028], "mapped", [12490]], [[13029, 13029], "mapped", [12491]], [[13030, 13030], "mapped", [12492]], [[13031, 13031], "mapped", [12493]], [[13032, 13032], "mapped", [12494]], [[13033, 13033], "mapped", [12495]], [[13034, 13034], "mapped", [12498]], [[13035, 13035], "mapped", [12501]], [[13036, 13036], "mapped", [12504]], [[13037, 13037], "mapped", [12507]], [[13038, 13038], "mapped", [12510]], [[13039, 13039], "mapped", [12511]], [[13040, 13040], "mapped", [12512]], [[13041, 13041], "mapped", [12513]], [[13042, 13042], "mapped", [12514]], [[13043, 13043], "mapped", [12516]], [[13044, 13044], "mapped", [12518]], [[13045, 13045], "mapped", [12520]], [[13046, 13046], "mapped", [12521]], [[13047, 13047], "mapped", [12522]], [[13048, 13048], "mapped", [12523]], [[13049, 13049], "mapped", [12524]], [[13050, 13050], "mapped", [12525]], [[13051, 13051], "mapped", [12527]], [[13052, 13052], "mapped", [12528]], [[13053, 13053], "mapped", [12529]], [[13054, 13054], "mapped", [12530]], [[13055, 13055], "disallowed"], [[13056, 13056], "mapped", [12450, 12497, 12540, 12488]], [[13057, 13057], "mapped", [12450, 12523, 12501, 12449]], [[13058, 13058], "mapped", [12450, 12531, 12506, 12450]], [[13059, 13059], "mapped", [12450, 12540, 12523]], [[13060, 13060], "mapped", [12452, 12491, 12531, 12464]], [[13061, 13061], "mapped", [12452, 12531, 12481]], [[13062, 13062], "mapped", [12454, 12457, 12531]], [[13063, 13063], "mapped", [12456, 12473, 12463, 12540, 12489]], [[13064, 13064], "mapped", [12456, 12540, 12459, 12540]], [[13065, 13065], "mapped", [12458, 12531, 12473]], [[13066, 13066], "mapped", [12458, 12540, 12512]], [[13067, 13067], "mapped", [12459, 12452, 12522]], [[13068, 13068], "mapped", [12459, 12521, 12483, 12488]], [[13069, 13069], "mapped", [12459, 12525, 12522, 12540]], [[13070, 13070], "mapped", [12460, 12525, 12531]], [[13071, 13071], "mapped", [12460, 12531, 12510]], [[13072, 13072], "mapped", [12462, 12460]], [[13073, 13073], "mapped", [12462, 12491, 12540]], [[13074, 13074], "mapped", [12461, 12517, 12522, 12540]], [[13075, 13075], "mapped", [12462, 12523, 12480, 12540]], [[13076, 13076], "mapped", [12461, 12525]], [[13077, 13077], "mapped", [12461, 12525, 12464, 12521, 12512]], [[13078, 13078], "mapped", [12461, 12525, 12513, 12540, 12488, 12523]], [[13079, 13079], "mapped", [12461, 12525, 12527, 12483, 12488]], [[13080, 13080], "mapped", [12464, 12521, 12512]], [[13081, 13081], "mapped", [12464, 12521, 12512, 12488, 12531]], [[13082, 13082], "mapped", [12463, 12523, 12476, 12452, 12525]], [[13083, 13083], "mapped", [12463, 12525, 12540, 12493]], [[13084, 13084], "mapped", [12465, 12540, 12473]], [[13085, 13085], "mapped", [12467, 12523, 12490]], [[13086, 13086], "mapped", [12467, 12540, 12509]], [[13087, 13087], "mapped", [12469, 12452, 12463, 12523]], [[13088, 13088], "mapped", [12469, 12531, 12481, 12540, 12512]], [[13089, 13089], "mapped", [12471, 12522, 12531, 12464]], [[13090, 13090], "mapped", [12475, 12531, 12481]], [[13091, 13091], "mapped", [12475, 12531, 12488]], [[13092, 13092], "mapped", [12480, 12540, 12473]], [[13093, 13093], "mapped", [12487, 12471]], [[13094, 13094], "mapped", [12489, 12523]], [[13095, 13095], "mapped", [12488, 12531]], [[13096, 13096], "mapped", [12490, 12494]], [[13097, 13097], "mapped", [12494, 12483, 12488]], [[13098, 13098], "mapped", [12495, 12452, 12484]], [[13099, 13099], "mapped", [12497, 12540, 12475, 12531, 12488]], [[13100, 13100], "mapped", [12497, 12540, 12484]], [[13101, 13101], "mapped", [12496, 12540, 12524, 12523]], [[13102, 13102], "mapped", [12500, 12450, 12473, 12488, 12523]], [[13103, 13103], "mapped", [12500, 12463, 12523]], [[13104, 13104], "mapped", [12500, 12467]], [[13105, 13105], "mapped", [12499, 12523]], [[13106, 13106], "mapped", [12501, 12449, 12521, 12483, 12489]], [[13107, 13107], "mapped", [12501, 12451, 12540, 12488]], [[13108, 13108], "mapped", [12502, 12483, 12471, 12455, 12523]], [[13109, 13109], "mapped", [12501, 12521, 12531]], [[13110, 13110], "mapped", [12504, 12463, 12479, 12540, 12523]], [[13111, 13111], "mapped", [12506, 12477]], [[13112, 13112], "mapped", [12506, 12491, 12498]], [[13113, 13113], "mapped", [12504, 12523, 12484]], [[13114, 13114], "mapped", [12506, 12531, 12473]], [[13115, 13115], "mapped", [12506, 12540, 12472]], [[13116, 13116], "mapped", [12505, 12540, 12479]], [[13117, 13117], "mapped", [12509, 12452, 12531, 12488]], [[13118, 13118], "mapped", [12508, 12523, 12488]], [[13119, 13119], "mapped", [12507, 12531]], [[13120, 13120], "mapped", [12509, 12531, 12489]], [[13121, 13121], "mapped", [12507, 12540, 12523]], [[13122, 13122], "mapped", [12507, 12540, 12531]], [[13123, 13123], "mapped", [12510, 12452, 12463, 12525]], [[13124, 13124], "mapped", [12510, 12452, 12523]], [[13125, 13125], "mapped", [12510, 12483, 12495]], [[13126, 13126], "mapped", [12510, 12523, 12463]], [[13127, 13127], "mapped", [12510, 12531, 12471, 12519, 12531]], [[13128, 13128], "mapped", [12511, 12463, 12525, 12531]], [[13129, 13129], "mapped", [12511, 12522]], [[13130, 13130], "mapped", [12511, 12522, 12496, 12540, 12523]], [[13131, 13131], "mapped", [12513, 12460]], [[13132, 13132], "mapped", [12513, 12460, 12488, 12531]], [[13133, 13133], "mapped", [12513, 12540, 12488, 12523]], [[13134, 13134], "mapped", [12516, 12540, 12489]], [[13135, 13135], "mapped", [12516, 12540, 12523]], [[13136, 13136], "mapped", [12518, 12450, 12531]], [[13137, 13137], "mapped", [12522, 12483, 12488, 12523]], [[13138, 13138], "mapped", [12522, 12521]], [[13139, 13139], "mapped", [12523, 12500, 12540]], [[13140, 13140], "mapped", [12523, 12540, 12502, 12523]], [[13141, 13141], "mapped", [12524, 12512]], [[13142, 13142], "mapped", [12524, 12531, 12488, 12466, 12531]], [[13143, 13143], "mapped", [12527, 12483, 12488]], [[13144, 13144], "mapped", [48, 28857]], [[13145, 13145], "mapped", [49, 28857]], [[13146, 13146], "mapped", [50, 28857]], [[13147, 13147], "mapped", [51, 28857]], [[13148, 13148], "mapped", [52, 28857]], [[13149, 13149], "mapped", [53, 28857]], [[13150, 13150], "mapped", [54, 28857]], [[13151, 13151], "mapped", [55, 28857]], [[13152, 13152], "mapped", [56, 28857]], [[13153, 13153], "mapped", [57, 28857]], [[13154, 13154], "mapped", [49, 48, 28857]], [[13155, 13155], "mapped", [49, 49, 28857]], [[13156, 13156], "mapped", [49, 50, 28857]], [[13157, 13157], "mapped", [49, 51, 28857]], [[13158, 13158], "mapped", [49, 52, 28857]], [[13159, 13159], "mapped", [49, 53, 28857]], [[13160, 13160], "mapped", [49, 54, 28857]], [[13161, 13161], "mapped", [49, 55, 28857]], [[13162, 13162], "mapped", [49, 56, 28857]], [[13163, 13163], "mapped", [49, 57, 28857]], [[13164, 13164], "mapped", [50, 48, 28857]], [[13165, 13165], "mapped", [50, 49, 28857]], [[13166, 13166], "mapped", [50, 50, 28857]], [[13167, 13167], "mapped", [50, 51, 28857]], [[13168, 13168], "mapped", [50, 52, 28857]], [[13169, 13169], "mapped", [104, 112, 97]], [[13170, 13170], "mapped", [100, 97]], [[13171, 13171], "mapped", [97, 117]], [[13172, 13172], "mapped", [98, 97, 114]], [[13173, 13173], "mapped", [111, 118]], [[13174, 13174], "mapped", [112, 99]], [[13175, 13175], "mapped", [100, 109]], [[13176, 13176], "mapped", [100, 109, 50]], [[13177, 13177], "mapped", [100, 109, 51]], [[13178, 13178], "mapped", [105, 117]], [[13179, 13179], "mapped", [24179, 25104]], [[13180, 13180], "mapped", [26157, 21644]], [[13181, 13181], "mapped", [22823, 27491]], [[13182, 13182], "mapped", [26126, 27835]], [[13183, 13183], "mapped", [26666, 24335, 20250, 31038]], [[13184, 13184], "mapped", [112, 97]], [[13185, 13185], "mapped", [110, 97]], [[13186, 13186], "mapped", [956, 97]], [[13187, 13187], "mapped", [109, 97]], [[13188, 13188], "mapped", [107, 97]], [[13189, 13189], "mapped", [107, 98]], [[13190, 13190], "mapped", [109, 98]], [[13191, 13191], "mapped", [103, 98]], [[13192, 13192], "mapped", [99, 97, 108]], [[13193, 13193], "mapped", [107, 99, 97, 108]], [[13194, 13194], "mapped", [112, 102]], [[13195, 13195], "mapped", [110, 102]], [[13196, 13196], "mapped", [956, 102]], [[13197, 13197], "mapped", [956, 103]], [[13198, 13198], "mapped", [109, 103]], [[13199, 13199], "mapped", [107, 103]], [[13200, 13200], "mapped", [104, 122]], [[13201, 13201], "mapped", [107, 104, 122]], [[13202, 13202], "mapped", [109, 104, 122]], [[13203, 13203], "mapped", [103, 104, 122]], [[13204, 13204], "mapped", [116, 104, 122]], [[13205, 13205], "mapped", [956, 108]], [[13206, 13206], "mapped", [109, 108]], [[13207, 13207], "mapped", [100, 108]], [[13208, 13208], "mapped", [107, 108]], [[13209, 13209], "mapped", [102, 109]], [[13210, 13210], "mapped", [110, 109]], [[13211, 13211], "mapped", [956, 109]], [[13212, 13212], "mapped", [109, 109]], [[13213, 13213], "mapped", [99, 109]], [[13214, 13214], "mapped", [107, 109]], [[13215, 13215], "mapped", [109, 109, 50]], [[13216, 13216], "mapped", [99, 109, 50]], [[13217, 13217], "mapped", [109, 50]], [[13218, 13218], "mapped", [107, 109, 50]], [[13219, 13219], "mapped", [109, 109, 51]], [[13220, 13220], "mapped", [99, 109, 51]], [[13221, 13221], "mapped", [109, 51]], [[13222, 13222], "mapped", [107, 109, 51]], [[13223, 13223], "mapped", [109, 8725, 115]], [[13224, 13224], "mapped", [109, 8725, 115, 50]], [[13225, 13225], "mapped", [112, 97]], [[13226, 13226], "mapped", [107, 112, 97]], [[13227, 13227], "mapped", [109, 112, 97]], [[13228, 13228], "mapped", [103, 112, 97]], [[13229, 13229], "mapped", [114, 97, 100]], [[13230, 13230], "mapped", [114, 97, 100, 8725, 115]], [[13231, 13231], "mapped", [114, 97, 100, 8725, 115, 50]], [[13232, 13232], "mapped", [112, 115]], [[13233, 13233], "mapped", [110, 115]], [[13234, 13234], "mapped", [956, 115]], [[13235, 13235], "mapped", [109, 115]], [[13236, 13236], "mapped", [112, 118]], [[13237, 13237], "mapped", [110, 118]], [[13238, 13238], "mapped", [956, 118]], [[13239, 13239], "mapped", [109, 118]], [[13240, 13240], "mapped", [107, 118]], [[13241, 13241], "mapped", [109, 118]], [[13242, 13242], "mapped", [112, 119]], [[13243, 13243], "mapped", [110, 119]], [[13244, 13244], "mapped", [956, 119]], [[13245, 13245], "mapped", [109, 119]], [[13246, 13246], "mapped", [107, 119]], [[13247, 13247], "mapped", [109, 119]], [[13248, 13248], "mapped", [107, 969]], [[13249, 13249], "mapped", [109, 969]], [[13250, 13250], "disallowed"], [[13251, 13251], "mapped", [98, 113]], [[13252, 13252], "mapped", [99, 99]], [[13253, 13253], "mapped", [99, 100]], [[13254, 13254], "mapped", [99, 8725, 107, 103]], [[13255, 13255], "disallowed"], [[13256, 13256], "mapped", [100, 98]], [[13257, 13257], "mapped", [103, 121]], [[13258, 13258], "mapped", [104, 97]], [[13259, 13259], "mapped", [104, 112]], [[13260, 13260], "mapped", [105, 110]], [[13261, 13261], "mapped", [107, 107]], [[13262, 13262], "mapped", [107, 109]], [[13263, 13263], "mapped", [107, 116]], [[13264, 13264], "mapped", [108, 109]], [[13265, 13265], "mapped", [108, 110]], [[13266, 13266], "mapped", [108, 111, 103]], [[13267, 13267], "mapped", [108, 120]], [[13268, 13268], "mapped", [109, 98]], [[13269, 13269], "mapped", [109, 105, 108]], [[13270, 13270], "mapped", [109, 111, 108]], [[13271, 13271], "mapped", [112, 104]], [[13272, 13272], "disallowed"], [[13273, 13273], "mapped", [112, 112, 109]], [[13274, 13274], "mapped", [112, 114]], [[13275, 13275], "mapped", [115, 114]], [[13276, 13276], "mapped", [115, 118]], [[13277, 13277], "mapped", [119, 98]], [[13278, 13278], "mapped", [118, 8725, 109]], [[13279, 13279], "mapped", [97, 8725, 109]], [[13280, 13280], "mapped", [49, 26085]], [[13281, 13281], "mapped", [50, 26085]], [[13282, 13282], "mapped", [51, 26085]], [[13283, 13283], "mapped", [52, 26085]], [[13284, 13284], "mapped", [53, 26085]], [[13285, 13285], "mapped", [54, 26085]], [[13286, 13286], "mapped", [55, 26085]], [[13287, 13287], "mapped", [56, 26085]], [[13288, 13288], "mapped", [57, 26085]], [[13289, 13289], "mapped", [49, 48, 26085]], [[13290, 13290], "mapped", [49, 49, 26085]], [[13291, 13291], "mapped", [49, 50, 26085]], [[13292, 13292], "mapped", [49, 51, 26085]], [[13293, 13293], "mapped", [49, 52, 26085]], [[13294, 13294], "mapped", [49, 53, 26085]], [[13295, 13295], "mapped", [49, 54, 26085]], [[13296, 13296], "mapped", [49, 55, 26085]], [[13297, 13297], "mapped", [49, 56, 26085]], [[13298, 13298], "mapped", [49, 57, 26085]], [[13299, 13299], "mapped", [50, 48, 26085]], [[13300, 13300], "mapped", [50, 49, 26085]], [[13301, 13301], "mapped", [50, 50, 26085]], [[13302, 13302], "mapped", [50, 51, 26085]], [[13303, 13303], "mapped", [50, 52, 26085]], [[13304, 13304], "mapped", [50, 53, 26085]], [[13305, 13305], "mapped", [50, 54, 26085]], [[13306, 13306], "mapped", [50, 55, 26085]], [[13307, 13307], "mapped", [50, 56, 26085]], [[13308, 13308], "mapped", [50, 57, 26085]], [[13309, 13309], "mapped", [51, 48, 26085]], [[13310, 13310], "mapped", [51, 49, 26085]], [[13311, 13311], "mapped", [103, 97, 108]], [[13312, 19893], "valid"], [[19894, 19903], "disallowed"], [[19904, 19967], "valid", [], "NV8"], [[19968, 40869], "valid"], [[40870, 40891], "valid"], [[40892, 40899], "valid"], [[40900, 40907], "valid"], [[40908, 40908], "valid"], [[40909, 40917], "valid"], [[40918, 40959], "disallowed"], [[40960, 42124], "valid"], [[42125, 42127], "disallowed"], [[42128, 42145], "valid", [], "NV8"], [[42146, 42147], "valid", [], "NV8"], [[42148, 42163], "valid", [], "NV8"], [[42164, 42164], "valid", [], "NV8"], [[42165, 42176], "valid", [], "NV8"], [[42177, 42177], "valid", [], "NV8"], [[42178, 42180], "valid", [], "NV8"], [[42181, 42181], "valid", [], "NV8"], [[42182, 42182], "valid", [], "NV8"], [[42183, 42191], "disallowed"], [[42192, 42237], "valid"], [[42238, 42239], "valid", [], "NV8"], [[42240, 42508], "valid"], [[42509, 42511], "valid", [], "NV8"], [[42512, 42539], "valid"], [[42540, 42559], "disallowed"], [[42560, 42560], "mapped", [42561]], [[42561, 42561], "valid"], [[42562, 42562], "mapped", [42563]], [[42563, 42563], "valid"], [[42564, 42564], "mapped", [42565]], [[42565, 42565], "valid"], [[42566, 42566], "mapped", [42567]], [[42567, 42567], "valid"], [[42568, 42568], "mapped", [42569]], [[42569, 42569], "valid"], [[42570, 42570], "mapped", [42571]], [[42571, 42571], "valid"], [[42572, 42572], "mapped", [42573]], [[42573, 42573], "valid"], [[42574, 42574], "mapped", [42575]], [[42575, 42575], "valid"], [[42576, 42576], "mapped", [42577]], [[42577, 42577], "valid"], [[42578, 42578], "mapped", [42579]], [[42579, 42579], "valid"], [[42580, 42580], "mapped", [42581]], [[42581, 42581], "valid"], [[42582, 42582], "mapped", [42583]], [[42583, 42583], "valid"], [[42584, 42584], "mapped", [42585]], [[42585, 42585], "valid"], [[42586, 42586], "mapped", [42587]], [[42587, 42587], "valid"], [[42588, 42588], "mapped", [42589]], [[42589, 42589], "valid"], [[42590, 42590], "mapped", [42591]], [[42591, 42591], "valid"], [[42592, 42592], "mapped", [42593]], [[42593, 42593], "valid"], [[42594, 42594], "mapped", [42595]], [[42595, 42595], "valid"], [[42596, 42596], "mapped", [42597]], [[42597, 42597], "valid"], [[42598, 42598], "mapped", [42599]], [[42599, 42599], "valid"], [[42600, 42600], "mapped", [42601]], [[42601, 42601], "valid"], [[42602, 42602], "mapped", [42603]], [[42603, 42603], "valid"], [[42604, 42604], "mapped", [42605]], [[42605, 42607], "valid"], [[42608, 42611], "valid", [], "NV8"], [[42612, 42619], "valid"], [[42620, 42621], "valid"], [[42622, 42622], "valid", [], "NV8"], [[42623, 42623], "valid"], [[42624, 42624], "mapped", [42625]], [[42625, 42625], "valid"], [[42626, 42626], "mapped", [42627]], [[42627, 42627], "valid"], [[42628, 42628], "mapped", [42629]], [[42629, 42629], "valid"], [[42630, 42630], "mapped", [42631]], [[42631, 42631], "valid"], [[42632, 42632], "mapped", [42633]], [[42633, 42633], "valid"], [[42634, 42634], "mapped", [42635]], [[42635, 42635], "valid"], [[42636, 42636], "mapped", [42637]], [[42637, 42637], "valid"], [[42638, 42638], "mapped", [42639]], [[42639, 42639], "valid"], [[42640, 42640], "mapped", [42641]], [[42641, 42641], "valid"], [[42642, 42642], "mapped", [42643]], [[42643, 42643], "valid"], [[42644, 42644], "mapped", [42645]], [[42645, 42645], "valid"], [[42646, 42646], "mapped", [42647]], [[42647, 42647], "valid"], [[42648, 42648], "mapped", [42649]], [[42649, 42649], "valid"], [[42650, 42650], "mapped", [42651]], [[42651, 42651], "valid"], [[42652, 42652], "mapped", [1098]], [[42653, 42653], "mapped", [1100]], [[42654, 42654], "valid"], [[42655, 42655], "valid"], [[42656, 42725], "valid"], [[42726, 42735], "valid", [], "NV8"], [[42736, 42737], "valid"], [[42738, 42743], "valid", [], "NV8"], [[42744, 42751], "disallowed"], [[42752, 42774], "valid", [], "NV8"], [[42775, 42778], "valid"], [[42779, 42783], "valid"], [[42784, 42785], "valid", [], "NV8"], [[42786, 42786], "mapped", [42787]], [[42787, 42787], "valid"], [[42788, 42788], "mapped", [42789]], [[42789, 42789], "valid"], [[42790, 42790], "mapped", [42791]], [[42791, 42791], "valid"], [[42792, 42792], "mapped", [42793]], [[42793, 42793], "valid"], [[42794, 42794], "mapped", [42795]], [[42795, 42795], "valid"], [[42796, 42796], "mapped", [42797]], [[42797, 42797], "valid"], [[42798, 42798], "mapped", [42799]], [[42799, 42801], "valid"], [[42802, 42802], "mapped", [42803]], [[42803, 42803], "valid"], [[42804, 42804], "mapped", [42805]], [[42805, 42805], "valid"], [[42806, 42806], "mapped", [42807]], [[42807, 42807], "valid"], [[42808, 42808], "mapped", [42809]], [[42809, 42809], "valid"], [[42810, 42810], "mapped", [42811]], [[42811, 42811], "valid"], [[42812, 42812], "mapped", [42813]], [[42813, 42813], "valid"], [[42814, 42814], "mapped", [42815]], [[42815, 42815], "valid"], [[42816, 42816], "mapped", [42817]], [[42817, 42817], "valid"], [[42818, 42818], "mapped", [42819]], [[42819, 42819], "valid"], [[42820, 42820], "mapped", [42821]], [[42821, 42821], "valid"], [[42822, 42822], "mapped", [42823]], [[42823, 42823], "valid"], [[42824, 42824], "mapped", [42825]], [[42825, 42825], "valid"], [[42826, 42826], "mapped", [42827]], [[42827, 42827], "valid"], [[42828, 42828], "mapped", [42829]], [[42829, 42829], "valid"], [[42830, 42830], "mapped", [42831]], [[42831, 42831], "valid"], [[42832, 42832], "mapped", [42833]], [[42833, 42833], "valid"], [[42834, 42834], "mapped", [42835]], [[42835, 42835], "valid"], [[42836, 42836], "mapped", [42837]], [[42837, 42837], "valid"], [[42838, 42838], "mapped", [42839]], [[42839, 42839], "valid"], [[42840, 42840], "mapped", [42841]], [[42841, 42841], "valid"], [[42842, 42842], "mapped", [42843]], [[42843, 42843], "valid"], [[42844, 42844], "mapped", [42845]], [[42845, 42845], "valid"], [[42846, 42846], "mapped", [42847]], [[42847, 42847], "valid"], [[42848, 42848], "mapped", [42849]], [[42849, 42849], "valid"], [[42850, 42850], "mapped", [42851]], [[42851, 42851], "valid"], [[42852, 42852], "mapped", [42853]], [[42853, 42853], "valid"], [[42854, 42854], "mapped", [42855]], [[42855, 42855], "valid"], [[42856, 42856], "mapped", [42857]], [[42857, 42857], "valid"], [[42858, 42858], "mapped", [42859]], [[42859, 42859], "valid"], [[42860, 42860], "mapped", [42861]], [[42861, 42861], "valid"], [[42862, 42862], "mapped", [42863]], [[42863, 42863], "valid"], [[42864, 42864], "mapped", [42863]], [[42865, 42872], "valid"], [[42873, 42873], "mapped", [42874]], [[42874, 42874], "valid"], [[42875, 42875], "mapped", [42876]], [[42876, 42876], "valid"], [[42877, 42877], "mapped", [7545]], [[42878, 42878], "mapped", [42879]], [[42879, 42879], "valid"], [[42880, 42880], "mapped", [42881]], [[42881, 42881], "valid"], [[42882, 42882], "mapped", [42883]], [[42883, 42883], "valid"], [[42884, 42884], "mapped", [42885]], [[42885, 42885], "valid"], [[42886, 42886], "mapped", [42887]], [[42887, 42888], "valid"], [[42889, 42890], "valid", [], "NV8"], [[42891, 42891], "mapped", [42892]], [[42892, 42892], "valid"], [[42893, 42893], "mapped", [613]], [[42894, 42894], "valid"], [[42895, 42895], "valid"], [[42896, 42896], "mapped", [42897]], [[42897, 42897], "valid"], [[42898, 42898], "mapped", [42899]], [[42899, 42899], "valid"], [[42900, 42901], "valid"], [[42902, 42902], "mapped", [42903]], [[42903, 42903], "valid"], [[42904, 42904], "mapped", [42905]], [[42905, 42905], "valid"], [[42906, 42906], "mapped", [42907]], [[42907, 42907], "valid"], [[42908, 42908], "mapped", [42909]], [[42909, 42909], "valid"], [[42910, 42910], "mapped", [42911]], [[42911, 42911], "valid"], [[42912, 42912], "mapped", [42913]], [[42913, 42913], "valid"], [[42914, 42914], "mapped", [42915]], [[42915, 42915], "valid"], [[42916, 42916], "mapped", [42917]], [[42917, 42917], "valid"], [[42918, 42918], "mapped", [42919]], [[42919, 42919], "valid"], [[42920, 42920], "mapped", [42921]], [[42921, 42921], "valid"], [[42922, 42922], "mapped", [614]], [[42923, 42923], "mapped", [604]], [[42924, 42924], "mapped", [609]], [[42925, 42925], "mapped", [620]], [[42926, 42927], "disallowed"], [[42928, 42928], "mapped", [670]], [[42929, 42929], "mapped", [647]], [[42930, 42930], "mapped", [669]], [[42931, 42931], "mapped", [43859]], [[42932, 42932], "mapped", [42933]], [[42933, 42933], "valid"], [[42934, 42934], "mapped", [42935]], [[42935, 42935], "valid"], [[42936, 42998], "disallowed"], [[42999, 42999], "valid"], [[43e3, 43e3], "mapped", [295]], [[43001, 43001], "mapped", [339]], [[43002, 43002], "valid"], [[43003, 43007], "valid"], [[43008, 43047], "valid"], [[43048, 43051], "valid", [], "NV8"], [[43052, 43055], "disallowed"], [[43056, 43065], "valid", [], "NV8"], [[43066, 43071], "disallowed"], [[43072, 43123], "valid"], [[43124, 43127], "valid", [], "NV8"], [[43128, 43135], "disallowed"], [[43136, 43204], "valid"], [[43205, 43213], "disallowed"], [[43214, 43215], "valid", [], "NV8"], [[43216, 43225], "valid"], [[43226, 43231], "disallowed"], [[43232, 43255], "valid"], [[43256, 43258], "valid", [], "NV8"], [[43259, 43259], "valid"], [[43260, 43260], "valid", [], "NV8"], [[43261, 43261], "valid"], [[43262, 43263], "disallowed"], [[43264, 43309], "valid"], [[43310, 43311], "valid", [], "NV8"], [[43312, 43347], "valid"], [[43348, 43358], "disallowed"], [[43359, 43359], "valid", [], "NV8"], [[43360, 43388], "valid", [], "NV8"], [[43389, 43391], "disallowed"], [[43392, 43456], "valid"], [[43457, 43469], "valid", [], "NV8"], [[43470, 43470], "disallowed"], [[43471, 43481], "valid"], [[43482, 43485], "disallowed"], [[43486, 43487], "valid", [], "NV8"], [[43488, 43518], "valid"], [[43519, 43519], "disallowed"], [[43520, 43574], "valid"], [[43575, 43583], "disallowed"], [[43584, 43597], "valid"], [[43598, 43599], "disallowed"], [[43600, 43609], "valid"], [[43610, 43611], "disallowed"], [[43612, 43615], "valid", [], "NV8"], [[43616, 43638], "valid"], [[43639, 43641], "valid", [], "NV8"], [[43642, 43643], "valid"], [[43644, 43647], "valid"], [[43648, 43714], "valid"], [[43715, 43738], "disallowed"], [[43739, 43741], "valid"], [[43742, 43743], "valid", [], "NV8"], [[43744, 43759], "valid"], [[43760, 43761], "valid", [], "NV8"], [[43762, 43766], "valid"], [[43767, 43776], "disallowed"], [[43777, 43782], "valid"], [[43783, 43784], "disallowed"], [[43785, 43790], "valid"], [[43791, 43792], "disallowed"], [[43793, 43798], "valid"], [[43799, 43807], "disallowed"], [[43808, 43814], "valid"], [[43815, 43815], "disallowed"], [[43816, 43822], "valid"], [[43823, 43823], "disallowed"], [[43824, 43866], "valid"], [[43867, 43867], "valid", [], "NV8"], [[43868, 43868], "mapped", [42791]], [[43869, 43869], "mapped", [43831]], [[43870, 43870], "mapped", [619]], [[43871, 43871], "mapped", [43858]], [[43872, 43875], "valid"], [[43876, 43877], "valid"], [[43878, 43887], "disallowed"], [[43888, 43888], "mapped", [5024]], [[43889, 43889], "mapped", [5025]], [[43890, 43890], "mapped", [5026]], [[43891, 43891], "mapped", [5027]], [[43892, 43892], "mapped", [5028]], [[43893, 43893], "mapped", [5029]], [[43894, 43894], "mapped", [5030]], [[43895, 43895], "mapped", [5031]], [[43896, 43896], "mapped", [5032]], [[43897, 43897], "mapped", [5033]], [[43898, 43898], "mapped", [5034]], [[43899, 43899], "mapped", [5035]], [[43900, 43900], "mapped", [5036]], [[43901, 43901], "mapped", [5037]], [[43902, 43902], "mapped", [5038]], [[43903, 43903], "mapped", [5039]], [[43904, 43904], "mapped", [5040]], [[43905, 43905], "mapped", [5041]], [[43906, 43906], "mapped", [5042]], [[43907, 43907], "mapped", [5043]], [[43908, 43908], "mapped", [5044]], [[43909, 43909], "mapped", [5045]], [[43910, 43910], "mapped", [5046]], [[43911, 43911], "mapped", [5047]], [[43912, 43912], "mapped", [5048]], [[43913, 43913], "mapped", [5049]], [[43914, 43914], "mapped", [5050]], [[43915, 43915], "mapped", [5051]], [[43916, 43916], "mapped", [5052]], [[43917, 43917], "mapped", [5053]], [[43918, 43918], "mapped", [5054]], [[43919, 43919], "mapped", [5055]], [[43920, 43920], "mapped", [5056]], [[43921, 43921], "mapped", [5057]], [[43922, 43922], "mapped", [5058]], [[43923, 43923], "mapped", [5059]], [[43924, 43924], "mapped", [5060]], [[43925, 43925], "mapped", [5061]], [[43926, 43926], "mapped", [5062]], [[43927, 43927], "mapped", [5063]], [[43928, 43928], "mapped", [5064]], [[43929, 43929], "mapped", [5065]], [[43930, 43930], "mapped", [5066]], [[43931, 43931], "mapped", [5067]], [[43932, 43932], "mapped", [5068]], [[43933, 43933], "mapped", [5069]], [[43934, 43934], "mapped", [5070]], [[43935, 43935], "mapped", [5071]], [[43936, 43936], "mapped", [5072]], [[43937, 43937], "mapped", [5073]], [[43938, 43938], "mapped", [5074]], [[43939, 43939], "mapped", [5075]], [[43940, 43940], "mapped", [5076]], [[43941, 43941], "mapped", [5077]], [[43942, 43942], "mapped", [5078]], [[43943, 43943], "mapped", [5079]], [[43944, 43944], "mapped", [5080]], [[43945, 43945], "mapped", [5081]], [[43946, 43946], "mapped", [5082]], [[43947, 43947], "mapped", [5083]], [[43948, 43948], "mapped", [5084]], [[43949, 43949], "mapped", [5085]], [[43950, 43950], "mapped", [5086]], [[43951, 43951], "mapped", [5087]], [[43952, 43952], "mapped", [5088]], [[43953, 43953], "mapped", [5089]], [[43954, 43954], "mapped", [5090]], [[43955, 43955], "mapped", [5091]], [[43956, 43956], "mapped", [5092]], [[43957, 43957], "mapped", [5093]], [[43958, 43958], "mapped", [5094]], [[43959, 43959], "mapped", [5095]], [[43960, 43960], "mapped", [5096]], [[43961, 43961], "mapped", [5097]], [[43962, 43962], "mapped", [5098]], [[43963, 43963], "mapped", [5099]], [[43964, 43964], "mapped", [5100]], [[43965, 43965], "mapped", [5101]], [[43966, 43966], "mapped", [5102]], [[43967, 43967], "mapped", [5103]], [[43968, 44010], "valid"], [[44011, 44011], "valid", [], "NV8"], [[44012, 44013], "valid"], [[44014, 44015], "disallowed"], [[44016, 44025], "valid"], [[44026, 44031], "disallowed"], [[44032, 55203], "valid"], [[55204, 55215], "disallowed"], [[55216, 55238], "valid", [], "NV8"], [[55239, 55242], "disallowed"], [[55243, 55291], "valid", [], "NV8"], [[55292, 55295], "disallowed"], [[55296, 57343], "disallowed"], [[57344, 63743], "disallowed"], [[63744, 63744], "mapped", [35912]], [[63745, 63745], "mapped", [26356]], [[63746, 63746], "mapped", [36554]], [[63747, 63747], "mapped", [36040]], [[63748, 63748], "mapped", [28369]], [[63749, 63749], "mapped", [20018]], [[63750, 63750], "mapped", [21477]], [[63751, 63752], "mapped", [40860]], [[63753, 63753], "mapped", [22865]], [[63754, 63754], "mapped", [37329]], [[63755, 63755], "mapped", [21895]], [[63756, 63756], "mapped", [22856]], [[63757, 63757], "mapped", [25078]], [[63758, 63758], "mapped", [30313]], [[63759, 63759], "mapped", [32645]], [[63760, 63760], "mapped", [34367]], [[63761, 63761], "mapped", [34746]], [[63762, 63762], "mapped", [35064]], [[63763, 63763], "mapped", [37007]], [[63764, 63764], "mapped", [27138]], [[63765, 63765], "mapped", [27931]], [[63766, 63766], "mapped", [28889]], [[63767, 63767], "mapped", [29662]], [[63768, 63768], "mapped", [33853]], [[63769, 63769], "mapped", [37226]], [[63770, 63770], "mapped", [39409]], [[63771, 63771], "mapped", [20098]], [[63772, 63772], "mapped", [21365]], [[63773, 63773], "mapped", [27396]], [[63774, 63774], "mapped", [29211]], [[63775, 63775], "mapped", [34349]], [[63776, 63776], "mapped", [40478]], [[63777, 63777], "mapped", [23888]], [[63778, 63778], "mapped", [28651]], [[63779, 63779], "mapped", [34253]], [[63780, 63780], "mapped", [35172]], [[63781, 63781], "mapped", [25289]], [[63782, 63782], "mapped", [33240]], [[63783, 63783], "mapped", [34847]], [[63784, 63784], "mapped", [24266]], [[63785, 63785], "mapped", [26391]], [[63786, 63786], "mapped", [28010]], [[63787, 63787], "mapped", [29436]], [[63788, 63788], "mapped", [37070]], [[63789, 63789], "mapped", [20358]], [[63790, 63790], "mapped", [20919]], [[63791, 63791], "mapped", [21214]], [[63792, 63792], "mapped", [25796]], [[63793, 63793], "mapped", [27347]], [[63794, 63794], "mapped", [29200]], [[63795, 63795], "mapped", [30439]], [[63796, 63796], "mapped", [32769]], [[63797, 63797], "mapped", [34310]], [[63798, 63798], "mapped", [34396]], [[63799, 63799], "mapped", [36335]], [[63800, 63800], "mapped", [38706]], [[63801, 63801], "mapped", [39791]], [[63802, 63802], "mapped", [40442]], [[63803, 63803], "mapped", [30860]], [[63804, 63804], "mapped", [31103]], [[63805, 63805], "mapped", [32160]], [[63806, 63806], "mapped", [33737]], [[63807, 63807], "mapped", [37636]], [[63808, 63808], "mapped", [40575]], [[63809, 63809], "mapped", [35542]], [[63810, 63810], "mapped", [22751]], [[63811, 63811], "mapped", [24324]], [[63812, 63812], "mapped", [31840]], [[63813, 63813], "mapped", [32894]], [[63814, 63814], "mapped", [29282]], [[63815, 63815], "mapped", [30922]], [[63816, 63816], "mapped", [36034]], [[63817, 63817], "mapped", [38647]], [[63818, 63818], "mapped", [22744]], [[63819, 63819], "mapped", [23650]], [[63820, 63820], "mapped", [27155]], [[63821, 63821], "mapped", [28122]], [[63822, 63822], "mapped", [28431]], [[63823, 63823], "mapped", [32047]], [[63824, 63824], "mapped", [32311]], [[63825, 63825], "mapped", [38475]], [[63826, 63826], "mapped", [21202]], [[63827, 63827], "mapped", [32907]], [[63828, 63828], "mapped", [20956]], [[63829, 63829], "mapped", [20940]], [[63830, 63830], "mapped", [31260]], [[63831, 63831], "mapped", [32190]], [[63832, 63832], "mapped", [33777]], [[63833, 63833], "mapped", [38517]], [[63834, 63834], "mapped", [35712]], [[63835, 63835], "mapped", [25295]], [[63836, 63836], "mapped", [27138]], [[63837, 63837], "mapped", [35582]], [[63838, 63838], "mapped", [20025]], [[63839, 63839], "mapped", [23527]], [[63840, 63840], "mapped", [24594]], [[63841, 63841], "mapped", [29575]], [[63842, 63842], "mapped", [30064]], [[63843, 63843], "mapped", [21271]], [[63844, 63844], "mapped", [30971]], [[63845, 63845], "mapped", [20415]], [[63846, 63846], "mapped", [24489]], [[63847, 63847], "mapped", [19981]], [[63848, 63848], "mapped", [27852]], [[63849, 63849], "mapped", [25976]], [[63850, 63850], "mapped", [32034]], [[63851, 63851], "mapped", [21443]], [[63852, 63852], "mapped", [22622]], [[63853, 63853], "mapped", [30465]], [[63854, 63854], "mapped", [33865]], [[63855, 63855], "mapped", [35498]], [[63856, 63856], "mapped", [27578]], [[63857, 63857], "mapped", [36784]], [[63858, 63858], "mapped", [27784]], [[63859, 63859], "mapped", [25342]], [[63860, 63860], "mapped", [33509]], [[63861, 63861], "mapped", [25504]], [[63862, 63862], "mapped", [30053]], [[63863, 63863], "mapped", [20142]], [[63864, 63864], "mapped", [20841]], [[63865, 63865], "mapped", [20937]], [[63866, 63866], "mapped", [26753]], [[63867, 63867], "mapped", [31975]], [[63868, 63868], "mapped", [33391]], [[63869, 63869], "mapped", [35538]], [[63870, 63870], "mapped", [37327]], [[63871, 63871], "mapped", [21237]], [[63872, 63872], "mapped", [21570]], [[63873, 63873], "mapped", [22899]], [[63874, 63874], "mapped", [24300]], [[63875, 63875], "mapped", [26053]], [[63876, 63876], "mapped", [28670]], [[63877, 63877], "mapped", [31018]], [[63878, 63878], "mapped", [38317]], [[63879, 63879], "mapped", [39530]], [[63880, 63880], "mapped", [40599]], [[63881, 63881], "mapped", [40654]], [[63882, 63882], "mapped", [21147]], [[63883, 63883], "mapped", [26310]], [[63884, 63884], "mapped", [27511]], [[63885, 63885], "mapped", [36706]], [[63886, 63886], "mapped", [24180]], [[63887, 63887], "mapped", [24976]], [[63888, 63888], "mapped", [25088]], [[63889, 63889], "mapped", [25754]], [[63890, 63890], "mapped", [28451]], [[63891, 63891], "mapped", [29001]], [[63892, 63892], "mapped", [29833]], [[63893, 63893], "mapped", [31178]], [[63894, 63894], "mapped", [32244]], [[63895, 63895], "mapped", [32879]], [[63896, 63896], "mapped", [36646]], [[63897, 63897], "mapped", [34030]], [[63898, 63898], "mapped", [36899]], [[63899, 63899], "mapped", [37706]], [[63900, 63900], "mapped", [21015]], [[63901, 63901], "mapped", [21155]], [[63902, 63902], "mapped", [21693]], [[63903, 63903], "mapped", [28872]], [[63904, 63904], "mapped", [35010]], [[63905, 63905], "mapped", [35498]], [[63906, 63906], "mapped", [24265]], [[63907, 63907], "mapped", [24565]], [[63908, 63908], "mapped", [25467]], [[63909, 63909], "mapped", [27566]], [[63910, 63910], "mapped", [31806]], [[63911, 63911], "mapped", [29557]], [[63912, 63912], "mapped", [20196]], [[63913, 63913], "mapped", [22265]], [[63914, 63914], "mapped", [23527]], [[63915, 63915], "mapped", [23994]], [[63916, 63916], "mapped", [24604]], [[63917, 63917], "mapped", [29618]], [[63918, 63918], "mapped", [29801]], [[63919, 63919], "mapped", [32666]], [[63920, 63920], "mapped", [32838]], [[63921, 63921], "mapped", [37428]], [[63922, 63922], "mapped", [38646]], [[63923, 63923], "mapped", [38728]], [[63924, 63924], "mapped", [38936]], [[63925, 63925], "mapped", [20363]], [[63926, 63926], "mapped", [31150]], [[63927, 63927], "mapped", [37300]], [[63928, 63928], "mapped", [38584]], [[63929, 63929], "mapped", [24801]], [[63930, 63930], "mapped", [20102]], [[63931, 63931], "mapped", [20698]], [[63932, 63932], "mapped", [23534]], [[63933, 63933], "mapped", [23615]], [[63934, 63934], "mapped", [26009]], [[63935, 63935], "mapped", [27138]], [[63936, 63936], "mapped", [29134]], [[63937, 63937], "mapped", [30274]], [[63938, 63938], "mapped", [34044]], [[63939, 63939], "mapped", [36988]], [[63940, 63940], "mapped", [40845]], [[63941, 63941], "mapped", [26248]], [[63942, 63942], "mapped", [38446]], [[63943, 63943], "mapped", [21129]], [[63944, 63944], "mapped", [26491]], [[63945, 63945], "mapped", [26611]], [[63946, 63946], "mapped", [27969]], [[63947, 63947], "mapped", [28316]], [[63948, 63948], "mapped", [29705]], [[63949, 63949], "mapped", [30041]], [[63950, 63950], "mapped", [30827]], [[63951, 63951], "mapped", [32016]], [[63952, 63952], "mapped", [39006]], [[63953, 63953], "mapped", [20845]], [[63954, 63954], "mapped", [25134]], [[63955, 63955], "mapped", [38520]], [[63956, 63956], "mapped", [20523]], [[63957, 63957], "mapped", [23833]], [[63958, 63958], "mapped", [28138]], [[63959, 63959], "mapped", [36650]], [[63960, 63960], "mapped", [24459]], [[63961, 63961], "mapped", [24900]], [[63962, 63962], "mapped", [26647]], [[63963, 63963], "mapped", [29575]], [[63964, 63964], "mapped", [38534]], [[63965, 63965], "mapped", [21033]], [[63966, 63966], "mapped", [21519]], [[63967, 63967], "mapped", [23653]], [[63968, 63968], "mapped", [26131]], [[63969, 63969], "mapped", [26446]], [[63970, 63970], "mapped", [26792]], [[63971, 63971], "mapped", [27877]], [[63972, 63972], "mapped", [29702]], [[63973, 63973], "mapped", [30178]], [[63974, 63974], "mapped", [32633]], [[63975, 63975], "mapped", [35023]], [[63976, 63976], "mapped", [35041]], [[63977, 63977], "mapped", [37324]], [[63978, 63978], "mapped", [38626]], [[63979, 63979], "mapped", [21311]], [[63980, 63980], "mapped", [28346]], [[63981, 63981], "mapped", [21533]], [[63982, 63982], "mapped", [29136]], [[63983, 63983], "mapped", [29848]], [[63984, 63984], "mapped", [34298]], [[63985, 63985], "mapped", [38563]], [[63986, 63986], "mapped", [40023]], [[63987, 63987], "mapped", [40607]], [[63988, 63988], "mapped", [26519]], [[63989, 63989], "mapped", [28107]], [[63990, 63990], "mapped", [33256]], [[63991, 63991], "mapped", [31435]], [[63992, 63992], "mapped", [31520]], [[63993, 63993], "mapped", [31890]], [[63994, 63994], "mapped", [29376]], [[63995, 63995], "mapped", [28825]], [[63996, 63996], "mapped", [35672]], [[63997, 63997], "mapped", [20160]], [[63998, 63998], "mapped", [33590]], [[63999, 63999], "mapped", [21050]], [[64e3, 64e3], "mapped", [20999]], [[64001, 64001], "mapped", [24230]], [[64002, 64002], "mapped", [25299]], [[64003, 64003], "mapped", [31958]], [[64004, 64004], "mapped", [23429]], [[64005, 64005], "mapped", [27934]], [[64006, 64006], "mapped", [26292]], [[64007, 64007], "mapped", [36667]], [[64008, 64008], "mapped", [34892]], [[64009, 64009], "mapped", [38477]], [[64010, 64010], "mapped", [35211]], [[64011, 64011], "mapped", [24275]], [[64012, 64012], "mapped", [20800]], [[64013, 64013], "mapped", [21952]], [[64014, 64015], "valid"], [[64016, 64016], "mapped", [22618]], [[64017, 64017], "valid"], [[64018, 64018], "mapped", [26228]], [[64019, 64020], "valid"], [[64021, 64021], "mapped", [20958]], [[64022, 64022], "mapped", [29482]], [[64023, 64023], "mapped", [30410]], [[64024, 64024], "mapped", [31036]], [[64025, 64025], "mapped", [31070]], [[64026, 64026], "mapped", [31077]], [[64027, 64027], "mapped", [31119]], [[64028, 64028], "mapped", [38742]], [[64029, 64029], "mapped", [31934]], [[64030, 64030], "mapped", [32701]], [[64031, 64031], "valid"], [[64032, 64032], "mapped", [34322]], [[64033, 64033], "valid"], [[64034, 64034], "mapped", [35576]], [[64035, 64036], "valid"], [[64037, 64037], "mapped", [36920]], [[64038, 64038], "mapped", [37117]], [[64039, 64041], "valid"], [[64042, 64042], "mapped", [39151]], [[64043, 64043], "mapped", [39164]], [[64044, 64044], "mapped", [39208]], [[64045, 64045], "mapped", [40372]], [[64046, 64046], "mapped", [37086]], [[64047, 64047], "mapped", [38583]], [[64048, 64048], "mapped", [20398]], [[64049, 64049], "mapped", [20711]], [[64050, 64050], "mapped", [20813]], [[64051, 64051], "mapped", [21193]], [[64052, 64052], "mapped", [21220]], [[64053, 64053], "mapped", [21329]], [[64054, 64054], "mapped", [21917]], [[64055, 64055], "mapped", [22022]], [[64056, 64056], "mapped", [22120]], [[64057, 64057], "mapped", [22592]], [[64058, 64058], "mapped", [22696]], [[64059, 64059], "mapped", [23652]], [[64060, 64060], "mapped", [23662]], [[64061, 64061], "mapped", [24724]], [[64062, 64062], "mapped", [24936]], [[64063, 64063], "mapped", [24974]], [[64064, 64064], "mapped", [25074]], [[64065, 64065], "mapped", [25935]], [[64066, 64066], "mapped", [26082]], [[64067, 64067], "mapped", [26257]], [[64068, 64068], "mapped", [26757]], [[64069, 64069], "mapped", [28023]], [[64070, 64070], "mapped", [28186]], [[64071, 64071], "mapped", [28450]], [[64072, 64072], "mapped", [29038]], [[64073, 64073], "mapped", [29227]], [[64074, 64074], "mapped", [29730]], [[64075, 64075], "mapped", [30865]], [[64076, 64076], "mapped", [31038]], [[64077, 64077], "mapped", [31049]], [[64078, 64078], "mapped", [31048]], [[64079, 64079], "mapped", [31056]], [[64080, 64080], "mapped", [31062]], [[64081, 64081], "mapped", [31069]], [[64082, 64082], "mapped", [31117]], [[64083, 64083], "mapped", [31118]], [[64084, 64084], "mapped", [31296]], [[64085, 64085], "mapped", [31361]], [[64086, 64086], "mapped", [31680]], [[64087, 64087], "mapped", [32244]], [[64088, 64088], "mapped", [32265]], [[64089, 64089], "mapped", [32321]], [[64090, 64090], "mapped", [32626]], [[64091, 64091], "mapped", [32773]], [[64092, 64092], "mapped", [33261]], [[64093, 64094], "mapped", [33401]], [[64095, 64095], "mapped", [33879]], [[64096, 64096], "mapped", [35088]], [[64097, 64097], "mapped", [35222]], [[64098, 64098], "mapped", [35585]], [[64099, 64099], "mapped", [35641]], [[64100, 64100], "mapped", [36051]], [[64101, 64101], "mapped", [36104]], [[64102, 64102], "mapped", [36790]], [[64103, 64103], "mapped", [36920]], [[64104, 64104], "mapped", [38627]], [[64105, 64105], "mapped", [38911]], [[64106, 64106], "mapped", [38971]], [[64107, 64107], "mapped", [24693]], [[64108, 64108], "mapped", [148206]], [[64109, 64109], "mapped", [33304]], [[64110, 64111], "disallowed"], [[64112, 64112], "mapped", [20006]], [[64113, 64113], "mapped", [20917]], [[64114, 64114], "mapped", [20840]], [[64115, 64115], "mapped", [20352]], [[64116, 64116], "mapped", [20805]], [[64117, 64117], "mapped", [20864]], [[64118, 64118], "mapped", [21191]], [[64119, 64119], "mapped", [21242]], [[64120, 64120], "mapped", [21917]], [[64121, 64121], "mapped", [21845]], [[64122, 64122], "mapped", [21913]], [[64123, 64123], "mapped", [21986]], [[64124, 64124], "mapped", [22618]], [[64125, 64125], "mapped", [22707]], [[64126, 64126], "mapped", [22852]], [[64127, 64127], "mapped", [22868]], [[64128, 64128], "mapped", [23138]], [[64129, 64129], "mapped", [23336]], [[64130, 64130], "mapped", [24274]], [[64131, 64131], "mapped", [24281]], [[64132, 64132], "mapped", [24425]], [[64133, 64133], "mapped", [24493]], [[64134, 64134], "mapped", [24792]], [[64135, 64135], "mapped", [24910]], [[64136, 64136], "mapped", [24840]], [[64137, 64137], "mapped", [24974]], [[64138, 64138], "mapped", [24928]], [[64139, 64139], "mapped", [25074]], [[64140, 64140], "mapped", [25140]], [[64141, 64141], "mapped", [25540]], [[64142, 64142], "mapped", [25628]], [[64143, 64143], "mapped", [25682]], [[64144, 64144], "mapped", [25942]], [[64145, 64145], "mapped", [26228]], [[64146, 64146], "mapped", [26391]], [[64147, 64147], "mapped", [26395]], [[64148, 64148], "mapped", [26454]], [[64149, 64149], "mapped", [27513]], [[64150, 64150], "mapped", [27578]], [[64151, 64151], "mapped", [27969]], [[64152, 64152], "mapped", [28379]], [[64153, 64153], "mapped", [28363]], [[64154, 64154], "mapped", [28450]], [[64155, 64155], "mapped", [28702]], [[64156, 64156], "mapped", [29038]], [[64157, 64157], "mapped", [30631]], [[64158, 64158], "mapped", [29237]], [[64159, 64159], "mapped", [29359]], [[64160, 64160], "mapped", [29482]], [[64161, 64161], "mapped", [29809]], [[64162, 64162], "mapped", [29958]], [[64163, 64163], "mapped", [30011]], [[64164, 64164], "mapped", [30237]], [[64165, 64165], "mapped", [30239]], [[64166, 64166], "mapped", [30410]], [[64167, 64167], "mapped", [30427]], [[64168, 64168], "mapped", [30452]], [[64169, 64169], "mapped", [30538]], [[64170, 64170], "mapped", [30528]], [[64171, 64171], "mapped", [30924]], [[64172, 64172], "mapped", [31409]], [[64173, 64173], "mapped", [31680]], [[64174, 64174], "mapped", [31867]], [[64175, 64175], "mapped", [32091]], [[64176, 64176], "mapped", [32244]], [[64177, 64177], "mapped", [32574]], [[64178, 64178], "mapped", [32773]], [[64179, 64179], "mapped", [33618]], [[64180, 64180], "mapped", [33775]], [[64181, 64181], "mapped", [34681]], [[64182, 64182], "mapped", [35137]], [[64183, 64183], "mapped", [35206]], [[64184, 64184], "mapped", [35222]], [[64185, 64185], "mapped", [35519]], [[64186, 64186], "mapped", [35576]], [[64187, 64187], "mapped", [35531]], [[64188, 64188], "mapped", [35585]], [[64189, 64189], "mapped", [35582]], [[64190, 64190], "mapped", [35565]], [[64191, 64191], "mapped", [35641]], [[64192, 64192], "mapped", [35722]], [[64193, 64193], "mapped", [36104]], [[64194, 64194], "mapped", [36664]], [[64195, 64195], "mapped", [36978]], [[64196, 64196], "mapped", [37273]], [[64197, 64197], "mapped", [37494]], [[64198, 64198], "mapped", [38524]], [[64199, 64199], "mapped", [38627]], [[64200, 64200], "mapped", [38742]], [[64201, 64201], "mapped", [38875]], [[64202, 64202], "mapped", [38911]], [[64203, 64203], "mapped", [38923]], [[64204, 64204], "mapped", [38971]], [[64205, 64205], "mapped", [39698]], [[64206, 64206], "mapped", [40860]], [[64207, 64207], "mapped", [141386]], [[64208, 64208], "mapped", [141380]], [[64209, 64209], "mapped", [144341]], [[64210, 64210], "mapped", [15261]], [[64211, 64211], "mapped", [16408]], [[64212, 64212], "mapped", [16441]], [[64213, 64213], "mapped", [152137]], [[64214, 64214], "mapped", [154832]], [[64215, 64215], "mapped", [163539]], [[64216, 64216], "mapped", [40771]], [[64217, 64217], "mapped", [40846]], [[64218, 64255], "disallowed"], [[64256, 64256], "mapped", [102, 102]], [[64257, 64257], "mapped", [102, 105]], [[64258, 64258], "mapped", [102, 108]], [[64259, 64259], "mapped", [102, 102, 105]], [[64260, 64260], "mapped", [102, 102, 108]], [[64261, 64262], "mapped", [115, 116]], [[64263, 64274], "disallowed"], [[64275, 64275], "mapped", [1396, 1398]], [[64276, 64276], "mapped", [1396, 1381]], [[64277, 64277], "mapped", [1396, 1387]], [[64278, 64278], "mapped", [1406, 1398]], [[64279, 64279], "mapped", [1396, 1389]], [[64280, 64284], "disallowed"], [[64285, 64285], "mapped", [1497, 1460]], [[64286, 64286], "valid"], [[64287, 64287], "mapped", [1522, 1463]], [[64288, 64288], "mapped", [1506]], [[64289, 64289], "mapped", [1488]], [[64290, 64290], "mapped", [1491]], [[64291, 64291], "mapped", [1492]], [[64292, 64292], "mapped", [1499]], [[64293, 64293], "mapped", [1500]], [[64294, 64294], "mapped", [1501]], [[64295, 64295], "mapped", [1512]], [[64296, 64296], "mapped", [1514]], [[64297, 64297], "disallowed_STD3_mapped", [43]], [[64298, 64298], "mapped", [1513, 1473]], [[64299, 64299], "mapped", [1513, 1474]], [[64300, 64300], "mapped", [1513, 1468, 1473]], [[64301, 64301], "mapped", [1513, 1468, 1474]], [[64302, 64302], "mapped", [1488, 1463]], [[64303, 64303], "mapped", [1488, 1464]], [[64304, 64304], "mapped", [1488, 1468]], [[64305, 64305], "mapped", [1489, 1468]], [[64306, 64306], "mapped", [1490, 1468]], [[64307, 64307], "mapped", [1491, 1468]], [[64308, 64308], "mapped", [1492, 1468]], [[64309, 64309], "mapped", [1493, 1468]], [[64310, 64310], "mapped", [1494, 1468]], [[64311, 64311], "disallowed"], [[64312, 64312], "mapped", [1496, 1468]], [[64313, 64313], "mapped", [1497, 1468]], [[64314, 64314], "mapped", [1498, 1468]], [[64315, 64315], "mapped", [1499, 1468]], [[64316, 64316], "mapped", [1500, 1468]], [[64317, 64317], "disallowed"], [[64318, 64318], "mapped", [1502, 1468]], [[64319, 64319], "disallowed"], [[64320, 64320], "mapped", [1504, 1468]], [[64321, 64321], "mapped", [1505, 1468]], [[64322, 64322], "disallowed"], [[64323, 64323], "mapped", [1507, 1468]], [[64324, 64324], "mapped", [1508, 1468]], [[64325, 64325], "disallowed"], [[64326, 64326], "mapped", [1510, 1468]], [[64327, 64327], "mapped", [1511, 1468]], [[64328, 64328], "mapped", [1512, 1468]], [[64329, 64329], "mapped", [1513, 1468]], [[64330, 64330], "mapped", [1514, 1468]], [[64331, 64331], "mapped", [1493, 1465]], [[64332, 64332], "mapped", [1489, 1471]], [[64333, 64333], "mapped", [1499, 1471]], [[64334, 64334], "mapped", [1508, 1471]], [[64335, 64335], "mapped", [1488, 1500]], [[64336, 64337], "mapped", [1649]], [[64338, 64341], "mapped", [1659]], [[64342, 64345], "mapped", [1662]], [[64346, 64349], "mapped", [1664]], [[64350, 64353], "mapped", [1658]], [[64354, 64357], "mapped", [1663]], [[64358, 64361], "mapped", [1657]], [[64362, 64365], "mapped", [1700]], [[64366, 64369], "mapped", [1702]], [[64370, 64373], "mapped", [1668]], [[64374, 64377], "mapped", [1667]], [[64378, 64381], "mapped", [1670]], [[64382, 64385], "mapped", [1671]], [[64386, 64387], "mapped", [1677]], [[64388, 64389], "mapped", [1676]], [[64390, 64391], "mapped", [1678]], [[64392, 64393], "mapped", [1672]], [[64394, 64395], "mapped", [1688]], [[64396, 64397], "mapped", [1681]], [[64398, 64401], "mapped", [1705]], [[64402, 64405], "mapped", [1711]], [[64406, 64409], "mapped", [1715]], [[64410, 64413], "mapped", [1713]], [[64414, 64415], "mapped", [1722]], [[64416, 64419], "mapped", [1723]], [[64420, 64421], "mapped", [1728]], [[64422, 64425], "mapped", [1729]], [[64426, 64429], "mapped", [1726]], [[64430, 64431], "mapped", [1746]], [[64432, 64433], "mapped", [1747]], [[64434, 64449], "valid", [], "NV8"], [[64450, 64466], "disallowed"], [[64467, 64470], "mapped", [1709]], [[64471, 64472], "mapped", [1735]], [[64473, 64474], "mapped", [1734]], [[64475, 64476], "mapped", [1736]], [[64477, 64477], "mapped", [1735, 1652]], [[64478, 64479], "mapped", [1739]], [[64480, 64481], "mapped", [1733]], [[64482, 64483], "mapped", [1737]], [[64484, 64487], "mapped", [1744]], [[64488, 64489], "mapped", [1609]], [[64490, 64491], "mapped", [1574, 1575]], [[64492, 64493], "mapped", [1574, 1749]], [[64494, 64495], "mapped", [1574, 1608]], [[64496, 64497], "mapped", [1574, 1735]], [[64498, 64499], "mapped", [1574, 1734]], [[64500, 64501], "mapped", [1574, 1736]], [[64502, 64504], "mapped", [1574, 1744]], [[64505, 64507], "mapped", [1574, 1609]], [[64508, 64511], "mapped", [1740]], [[64512, 64512], "mapped", [1574, 1580]], [[64513, 64513], "mapped", [1574, 1581]], [[64514, 64514], "mapped", [1574, 1605]], [[64515, 64515], "mapped", [1574, 1609]], [[64516, 64516], "mapped", [1574, 1610]], [[64517, 64517], "mapped", [1576, 1580]], [[64518, 64518], "mapped", [1576, 1581]], [[64519, 64519], "mapped", [1576, 1582]], [[64520, 64520], "mapped", [1576, 1605]], [[64521, 64521], "mapped", [1576, 1609]], [[64522, 64522], "mapped", [1576, 1610]], [[64523, 64523], "mapped", [1578, 1580]], [[64524, 64524], "mapped", [1578, 1581]], [[64525, 64525], "mapped", [1578, 1582]], [[64526, 64526], "mapped", [1578, 1605]], [[64527, 64527], "mapped", [1578, 1609]], [[64528, 64528], "mapped", [1578, 1610]], [[64529, 64529], "mapped", [1579, 1580]], [[64530, 64530], "mapped", [1579, 1605]], [[64531, 64531], "mapped", [1579, 1609]], [[64532, 64532], "mapped", [1579, 1610]], [[64533, 64533], "mapped", [1580, 1581]], [[64534, 64534], "mapped", [1580, 1605]], [[64535, 64535], "mapped", [1581, 1580]], [[64536, 64536], "mapped", [1581, 1605]], [[64537, 64537], "mapped", [1582, 1580]], [[64538, 64538], "mapped", [1582, 1581]], [[64539, 64539], "mapped", [1582, 1605]], [[64540, 64540], "mapped", [1587, 1580]], [[64541, 64541], "mapped", [1587, 1581]], [[64542, 64542], "mapped", [1587, 1582]], [[64543, 64543], "mapped", [1587, 1605]], [[64544, 64544], "mapped", [1589, 1581]], [[64545, 64545], "mapped", [1589, 1605]], [[64546, 64546], "mapped", [1590, 1580]], [[64547, 64547], "mapped", [1590, 1581]], [[64548, 64548], "mapped", [1590, 1582]], [[64549, 64549], "mapped", [1590, 1605]], [[64550, 64550], "mapped", [1591, 1581]], [[64551, 64551], "mapped", [1591, 1605]], [[64552, 64552], "mapped", [1592, 1605]], [[64553, 64553], "mapped", [1593, 1580]], [[64554, 64554], "mapped", [1593, 1605]], [[64555, 64555], "mapped", [1594, 1580]], [[64556, 64556], "mapped", [1594, 1605]], [[64557, 64557], "mapped", [1601, 1580]], [[64558, 64558], "mapped", [1601, 1581]], [[64559, 64559], "mapped", [1601, 1582]], [[64560, 64560], "mapped", [1601, 1605]], [[64561, 64561], "mapped", [1601, 1609]], [[64562, 64562], "mapped", [1601, 1610]], [[64563, 64563], "mapped", [1602, 1581]], [[64564, 64564], "mapped", [1602, 1605]], [[64565, 64565], "mapped", [1602, 1609]], [[64566, 64566], "mapped", [1602, 1610]], [[64567, 64567], "mapped", [1603, 1575]], [[64568, 64568], "mapped", [1603, 1580]], [[64569, 64569], "mapped", [1603, 1581]], [[64570, 64570], "mapped", [1603, 1582]], [[64571, 64571], "mapped", [1603, 1604]], [[64572, 64572], "mapped", [1603, 1605]], [[64573, 64573], "mapped", [1603, 1609]], [[64574, 64574], "mapped", [1603, 1610]], [[64575, 64575], "mapped", [1604, 1580]], [[64576, 64576], "mapped", [1604, 1581]], [[64577, 64577], "mapped", [1604, 1582]], [[64578, 64578], "mapped", [1604, 1605]], [[64579, 64579], "mapped", [1604, 1609]], [[64580, 64580], "mapped", [1604, 1610]], [[64581, 64581], "mapped", [1605, 1580]], [[64582, 64582], "mapped", [1605, 1581]], [[64583, 64583], "mapped", [1605, 1582]], [[64584, 64584], "mapped", [1605, 1605]], [[64585, 64585], "mapped", [1605, 1609]], [[64586, 64586], "mapped", [1605, 1610]], [[64587, 64587], "mapped", [1606, 1580]], [[64588, 64588], "mapped", [1606, 1581]], [[64589, 64589], "mapped", [1606, 1582]], [[64590, 64590], "mapped", [1606, 1605]], [[64591, 64591], "mapped", [1606, 1609]], [[64592, 64592], "mapped", [1606, 1610]], [[64593, 64593], "mapped", [1607, 1580]], [[64594, 64594], "mapped", [1607, 1605]], [[64595, 64595], "mapped", [1607, 1609]], [[64596, 64596], "mapped", [1607, 1610]], [[64597, 64597], "mapped", [1610, 1580]], [[64598, 64598], "mapped", [1610, 1581]], [[64599, 64599], "mapped", [1610, 1582]], [[64600, 64600], "mapped", [1610, 1605]], [[64601, 64601], "mapped", [1610, 1609]], [[64602, 64602], "mapped", [1610, 1610]], [[64603, 64603], "mapped", [1584, 1648]], [[64604, 64604], "mapped", [1585, 1648]], [[64605, 64605], "mapped", [1609, 1648]], [[64606, 64606], "disallowed_STD3_mapped", [32, 1612, 1617]], [[64607, 64607], "disallowed_STD3_mapped", [32, 1613, 1617]], [[64608, 64608], "disallowed_STD3_mapped", [32, 1614, 1617]], [[64609, 64609], "disallowed_STD3_mapped", [32, 1615, 1617]], [[64610, 64610], "disallowed_STD3_mapped", [32, 1616, 1617]], [[64611, 64611], "disallowed_STD3_mapped", [32, 1617, 1648]], [[64612, 64612], "mapped", [1574, 1585]], [[64613, 64613], "mapped", [1574, 1586]], [[64614, 64614], "mapped", [1574, 1605]], [[64615, 64615], "mapped", [1574, 1606]], [[64616, 64616], "mapped", [1574, 1609]], [[64617, 64617], "mapped", [1574, 1610]], [[64618, 64618], "mapped", [1576, 1585]], [[64619, 64619], "mapped", [1576, 1586]], [[64620, 64620], "mapped", [1576, 1605]], [[64621, 64621], "mapped", [1576, 1606]], [[64622, 64622], "mapped", [1576, 1609]], [[64623, 64623], "mapped", [1576, 1610]], [[64624, 64624], "mapped", [1578, 1585]], [[64625, 64625], "mapped", [1578, 1586]], [[64626, 64626], "mapped", [1578, 1605]], [[64627, 64627], "mapped", [1578, 1606]], [[64628, 64628], "mapped", [1578, 1609]], [[64629, 64629], "mapped", [1578, 1610]], [[64630, 64630], "mapped", [1579, 1585]], [[64631, 64631], "mapped", [1579, 1586]], [[64632, 64632], "mapped", [1579, 1605]], [[64633, 64633], "mapped", [1579, 1606]], [[64634, 64634], "mapped", [1579, 1609]], [[64635, 64635], "mapped", [1579, 1610]], [[64636, 64636], "mapped", [1601, 1609]], [[64637, 64637], "mapped", [1601, 1610]], [[64638, 64638], "mapped", [1602, 1609]], [[64639, 64639], "mapped", [1602, 1610]], [[64640, 64640], "mapped", [1603, 1575]], [[64641, 64641], "mapped", [1603, 1604]], [[64642, 64642], "mapped", [1603, 1605]], [[64643, 64643], "mapped", [1603, 1609]], [[64644, 64644], "mapped", [1603, 1610]], [[64645, 64645], "mapped", [1604, 1605]], [[64646, 64646], "mapped", [1604, 1609]], [[64647, 64647], "mapped", [1604, 1610]], [[64648, 64648], "mapped", [1605, 1575]], [[64649, 64649], "mapped", [1605, 1605]], [[64650, 64650], "mapped", [1606, 1585]], [[64651, 64651], "mapped", [1606, 1586]], [[64652, 64652], "mapped", [1606, 1605]], [[64653, 64653], "mapped", [1606, 1606]], [[64654, 64654], "mapped", [1606, 1609]], [[64655, 64655], "mapped", [1606, 1610]], [[64656, 64656], "mapped", [1609, 1648]], [[64657, 64657], "mapped", [1610, 1585]], [[64658, 64658], "mapped", [1610, 1586]], [[64659, 64659], "mapped", [1610, 1605]], [[64660, 64660], "mapped", [1610, 1606]], [[64661, 64661], "mapped", [1610, 1609]], [[64662, 64662], "mapped", [1610, 1610]], [[64663, 64663], "mapped", [1574, 1580]], [[64664, 64664], "mapped", [1574, 1581]], [[64665, 64665], "mapped", [1574, 1582]], [[64666, 64666], "mapped", [1574, 1605]], [[64667, 64667], "mapped", [1574, 1607]], [[64668, 64668], "mapped", [1576, 1580]], [[64669, 64669], "mapped", [1576, 1581]], [[64670, 64670], "mapped", [1576, 1582]], [[64671, 64671], "mapped", [1576, 1605]], [[64672, 64672], "mapped", [1576, 1607]], [[64673, 64673], "mapped", [1578, 1580]], [[64674, 64674], "mapped", [1578, 1581]], [[64675, 64675], "mapped", [1578, 1582]], [[64676, 64676], "mapped", [1578, 1605]], [[64677, 64677], "mapped", [1578, 1607]], [[64678, 64678], "mapped", [1579, 1605]], [[64679, 64679], "mapped", [1580, 1581]], [[64680, 64680], "mapped", [1580, 1605]], [[64681, 64681], "mapped", [1581, 1580]], [[64682, 64682], "mapped", [1581, 1605]], [[64683, 64683], "mapped", [1582, 1580]], [[64684, 64684], "mapped", [1582, 1605]], [[64685, 64685], "mapped", [1587, 1580]], [[64686, 64686], "mapped", [1587, 1581]], [[64687, 64687], "mapped", [1587, 1582]], [[64688, 64688], "mapped", [1587, 1605]], [[64689, 64689], "mapped", [1589, 1581]], [[64690, 64690], "mapped", [1589, 1582]], [[64691, 64691], "mapped", [1589, 1605]], [[64692, 64692], "mapped", [1590, 1580]], [[64693, 64693], "mapped", [1590, 1581]], [[64694, 64694], "mapped", [1590, 1582]], [[64695, 64695], "mapped", [1590, 1605]], [[64696, 64696], "mapped", [1591, 1581]], [[64697, 64697], "mapped", [1592, 1605]], [[64698, 64698], "mapped", [1593, 1580]], [[64699, 64699], "mapped", [1593, 1605]], [[64700, 64700], "mapped", [1594, 1580]], [[64701, 64701], "mapped", [1594, 1605]], [[64702, 64702], "mapped", [1601, 1580]], [[64703, 64703], "mapped", [1601, 1581]], [[64704, 64704], "mapped", [1601, 1582]], [[64705, 64705], "mapped", [1601, 1605]], [[64706, 64706], "mapped", [1602, 1581]], [[64707, 64707], "mapped", [1602, 1605]], [[64708, 64708], "mapped", [1603, 1580]], [[64709, 64709], "mapped", [1603, 1581]], [[64710, 64710], "mapped", [1603, 1582]], [[64711, 64711], "mapped", [1603, 1604]], [[64712, 64712], "mapped", [1603, 1605]], [[64713, 64713], "mapped", [1604, 1580]], [[64714, 64714], "mapped", [1604, 1581]], [[64715, 64715], "mapped", [1604, 1582]], [[64716, 64716], "mapped", [1604, 1605]], [[64717, 64717], "mapped", [1604, 1607]], [[64718, 64718], "mapped", [1605, 1580]], [[64719, 64719], "mapped", [1605, 1581]], [[64720, 64720], "mapped", [1605, 1582]], [[64721, 64721], "mapped", [1605, 1605]], [[64722, 64722], "mapped", [1606, 1580]], [[64723, 64723], "mapped", [1606, 1581]], [[64724, 64724], "mapped", [1606, 1582]], [[64725, 64725], "mapped", [1606, 1605]], [[64726, 64726], "mapped", [1606, 1607]], [[64727, 64727], "mapped", [1607, 1580]], [[64728, 64728], "mapped", [1607, 1605]], [[64729, 64729], "mapped", [1607, 1648]], [[64730, 64730], "mapped", [1610, 1580]], [[64731, 64731], "mapped", [1610, 1581]], [[64732, 64732], "mapped", [1610, 1582]], [[64733, 64733], "mapped", [1610, 1605]], [[64734, 64734], "mapped", [1610, 1607]], [[64735, 64735], "mapped", [1574, 1605]], [[64736, 64736], "mapped", [1574, 1607]], [[64737, 64737], "mapped", [1576, 1605]], [[64738, 64738], "mapped", [1576, 1607]], [[64739, 64739], "mapped", [1578, 1605]], [[64740, 64740], "mapped", [1578, 1607]], [[64741, 64741], "mapped", [1579, 1605]], [[64742, 64742], "mapped", [1579, 1607]], [[64743, 64743], "mapped", [1587, 1605]], [[64744, 64744], "mapped", [1587, 1607]], [[64745, 64745], "mapped", [1588, 1605]], [[64746, 64746], "mapped", [1588, 1607]], [[64747, 64747], "mapped", [1603, 1604]], [[64748, 64748], "mapped", [1603, 1605]], [[64749, 64749], "mapped", [1604, 1605]], [[64750, 64750], "mapped", [1606, 1605]], [[64751, 64751], "mapped", [1606, 1607]], [[64752, 64752], "mapped", [1610, 1605]], [[64753, 64753], "mapped", [1610, 1607]], [[64754, 64754], "mapped", [1600, 1614, 1617]], [[64755, 64755], "mapped", [1600, 1615, 1617]], [[64756, 64756], "mapped", [1600, 1616, 1617]], [[64757, 64757], "mapped", [1591, 1609]], [[64758, 64758], "mapped", [1591, 1610]], [[64759, 64759], "mapped", [1593, 1609]], [[64760, 64760], "mapped", [1593, 1610]], [[64761, 64761], "mapped", [1594, 1609]], [[64762, 64762], "mapped", [1594, 1610]], [[64763, 64763], "mapped", [1587, 1609]], [[64764, 64764], "mapped", [1587, 1610]], [[64765, 64765], "mapped", [1588, 1609]], [[64766, 64766], "mapped", [1588, 1610]], [[64767, 64767], "mapped", [1581, 1609]], [[64768, 64768], "mapped", [1581, 1610]], [[64769, 64769], "mapped", [1580, 1609]], [[64770, 64770], "mapped", [1580, 1610]], [[64771, 64771], "mapped", [1582, 1609]], [[64772, 64772], "mapped", [1582, 1610]], [[64773, 64773], "mapped", [1589, 1609]], [[64774, 64774], "mapped", [1589, 1610]], [[64775, 64775], "mapped", [1590, 1609]], [[64776, 64776], "mapped", [1590, 1610]], [[64777, 64777], "mapped", [1588, 1580]], [[64778, 64778], "mapped", [1588, 1581]], [[64779, 64779], "mapped", [1588, 1582]], [[64780, 64780], "mapped", [1588, 1605]], [[64781, 64781], "mapped", [1588, 1585]], [[64782, 64782], "mapped", [1587, 1585]], [[64783, 64783], "mapped", [1589, 1585]], [[64784, 64784], "mapped", [1590, 1585]], [[64785, 64785], "mapped", [1591, 1609]], [[64786, 64786], "mapped", [1591, 1610]], [[64787, 64787], "mapped", [1593, 1609]], [[64788, 64788], "mapped", [1593, 1610]], [[64789, 64789], "mapped", [1594, 1609]], [[64790, 64790], "mapped", [1594, 1610]], [[64791, 64791], "mapped", [1587, 1609]], [[64792, 64792], "mapped", [1587, 1610]], [[64793, 64793], "mapped", [1588, 1609]], [[64794, 64794], "mapped", [1588, 1610]], [[64795, 64795], "mapped", [1581, 1609]], [[64796, 64796], "mapped", [1581, 1610]], [[64797, 64797], "mapped", [1580, 1609]], [[64798, 64798], "mapped", [1580, 1610]], [[64799, 64799], "mapped", [1582, 1609]], [[64800, 64800], "mapped", [1582, 1610]], [[64801, 64801], "mapped", [1589, 1609]], [[64802, 64802], "mapped", [1589, 1610]], [[64803, 64803], "mapped", [1590, 1609]], [[64804, 64804], "mapped", [1590, 1610]], [[64805, 64805], "mapped", [1588, 1580]], [[64806, 64806], "mapped", [1588, 1581]], [[64807, 64807], "mapped", [1588, 1582]], [[64808, 64808], "mapped", [1588, 1605]], [[64809, 64809], "mapped", [1588, 1585]], [[64810, 64810], "mapped", [1587, 1585]], [[64811, 64811], "mapped", [1589, 1585]], [[64812, 64812], "mapped", [1590, 1585]], [[64813, 64813], "mapped", [1588, 1580]], [[64814, 64814], "mapped", [1588, 1581]], [[64815, 64815], "mapped", [1588, 1582]], [[64816, 64816], "mapped", [1588, 1605]], [[64817, 64817], "mapped", [1587, 1607]], [[64818, 64818], "mapped", [1588, 1607]], [[64819, 64819], "mapped", [1591, 1605]], [[64820, 64820], "mapped", [1587, 1580]], [[64821, 64821], "mapped", [1587, 1581]], [[64822, 64822], "mapped", [1587, 1582]], [[64823, 64823], "mapped", [1588, 1580]], [[64824, 64824], "mapped", [1588, 1581]], [[64825, 64825], "mapped", [1588, 1582]], [[64826, 64826], "mapped", [1591, 1605]], [[64827, 64827], "mapped", [1592, 1605]], [[64828, 64829], "mapped", [1575, 1611]], [[64830, 64831], "valid", [], "NV8"], [[64832, 64847], "disallowed"], [[64848, 64848], "mapped", [1578, 1580, 1605]], [[64849, 64850], "mapped", [1578, 1581, 1580]], [[64851, 64851], "mapped", [1578, 1581, 1605]], [[64852, 64852], "mapped", [1578, 1582, 1605]], [[64853, 64853], "mapped", [1578, 1605, 1580]], [[64854, 64854], "mapped", [1578, 1605, 1581]], [[64855, 64855], "mapped", [1578, 1605, 1582]], [[64856, 64857], "mapped", [1580, 1605, 1581]], [[64858, 64858], "mapped", [1581, 1605, 1610]], [[64859, 64859], "mapped", [1581, 1605, 1609]], [[64860, 64860], "mapped", [1587, 1581, 1580]], [[64861, 64861], "mapped", [1587, 1580, 1581]], [[64862, 64862], "mapped", [1587, 1580, 1609]], [[64863, 64864], "mapped", [1587, 1605, 1581]], [[64865, 64865], "mapped", [1587, 1605, 1580]], [[64866, 64867], "mapped", [1587, 1605, 1605]], [[64868, 64869], "mapped", [1589, 1581, 1581]], [[64870, 64870], "mapped", [1589, 1605, 1605]], [[64871, 64872], "mapped", [1588, 1581, 1605]], [[64873, 64873], "mapped", [1588, 1580, 1610]], [[64874, 64875], "mapped", [1588, 1605, 1582]], [[64876, 64877], "mapped", [1588, 1605, 1605]], [[64878, 64878], "mapped", [1590, 1581, 1609]], [[64879, 64880], "mapped", [1590, 1582, 1605]], [[64881, 64882], "mapped", [1591, 1605, 1581]], [[64883, 64883], "mapped", [1591, 1605, 1605]], [[64884, 64884], "mapped", [1591, 1605, 1610]], [[64885, 64885], "mapped", [1593, 1580, 1605]], [[64886, 64887], "mapped", [1593, 1605, 1605]], [[64888, 64888], "mapped", [1593, 1605, 1609]], [[64889, 64889], "mapped", [1594, 1605, 1605]], [[64890, 64890], "mapped", [1594, 1605, 1610]], [[64891, 64891], "mapped", [1594, 1605, 1609]], [[64892, 64893], "mapped", [1601, 1582, 1605]], [[64894, 64894], "mapped", [1602, 1605, 1581]], [[64895, 64895], "mapped", [1602, 1605, 1605]], [[64896, 64896], "mapped", [1604, 1581, 1605]], [[64897, 64897], "mapped", [1604, 1581, 1610]], [[64898, 64898], "mapped", [1604, 1581, 1609]], [[64899, 64900], "mapped", [1604, 1580, 1580]], [[64901, 64902], "mapped", [1604, 1582, 1605]], [[64903, 64904], "mapped", [1604, 1605, 1581]], [[64905, 64905], "mapped", [1605, 1581, 1580]], [[64906, 64906], "mapped", [1605, 1581, 1605]], [[64907, 64907], "mapped", [1605, 1581, 1610]], [[64908, 64908], "mapped", [1605, 1580, 1581]], [[64909, 64909], "mapped", [1605, 1580, 1605]], [[64910, 64910], "mapped", [1605, 1582, 1580]], [[64911, 64911], "mapped", [1605, 1582, 1605]], [[64912, 64913], "disallowed"], [[64914, 64914], "mapped", [1605, 1580, 1582]], [[64915, 64915], "mapped", [1607, 1605, 1580]], [[64916, 64916], "mapped", [1607, 1605, 1605]], [[64917, 64917], "mapped", [1606, 1581, 1605]], [[64918, 64918], "mapped", [1606, 1581, 1609]], [[64919, 64920], "mapped", [1606, 1580, 1605]], [[64921, 64921], "mapped", [1606, 1580, 1609]], [[64922, 64922], "mapped", [1606, 1605, 1610]], [[64923, 64923], "mapped", [1606, 1605, 1609]], [[64924, 64925], "mapped", [1610, 1605, 1605]], [[64926, 64926], "mapped", [1576, 1582, 1610]], [[64927, 64927], "mapped", [1578, 1580, 1610]], [[64928, 64928], "mapped", [1578, 1580, 1609]], [[64929, 64929], "mapped", [1578, 1582, 1610]], [[64930, 64930], "mapped", [1578, 1582, 1609]], [[64931, 64931], "mapped", [1578, 1605, 1610]], [[64932, 64932], "mapped", [1578, 1605, 1609]], [[64933, 64933], "mapped", [1580, 1605, 1610]], [[64934, 64934], "mapped", [1580, 1581, 1609]], [[64935, 64935], "mapped", [1580, 1605, 1609]], [[64936, 64936], "mapped", [1587, 1582, 1609]], [[64937, 64937], "mapped", [1589, 1581, 1610]], [[64938, 64938], "mapped", [1588, 1581, 1610]], [[64939, 64939], "mapped", [1590, 1581, 1610]], [[64940, 64940], "mapped", [1604, 1580, 1610]], [[64941, 64941], "mapped", [1604, 1605, 1610]], [[64942, 64942], "mapped", [1610, 1581, 1610]], [[64943, 64943], "mapped", [1610, 1580, 1610]], [[64944, 64944], "mapped", [1610, 1605, 1610]], [[64945, 64945], "mapped", [1605, 1605, 1610]], [[64946, 64946], "mapped", [1602, 1605, 1610]], [[64947, 64947], "mapped", [1606, 1581, 1610]], [[64948, 64948], "mapped", [1602, 1605, 1581]], [[64949, 64949], "mapped", [1604, 1581, 1605]], [[64950, 64950], "mapped", [1593, 1605, 1610]], [[64951, 64951], "mapped", [1603, 1605, 1610]], [[64952, 64952], "mapped", [1606, 1580, 1581]], [[64953, 64953], "mapped", [1605, 1582, 1610]], [[64954, 64954], "mapped", [1604, 1580, 1605]], [[64955, 64955], "mapped", [1603, 1605, 1605]], [[64956, 64956], "mapped", [1604, 1580, 1605]], [[64957, 64957], "mapped", [1606, 1580, 1581]], [[64958, 64958], "mapped", [1580, 1581, 1610]], [[64959, 64959], "mapped", [1581, 1580, 1610]], [[64960, 64960], "mapped", [1605, 1580, 1610]], [[64961, 64961], "mapped", [1601, 1605, 1610]], [[64962, 64962], "mapped", [1576, 1581, 1610]], [[64963, 64963], "mapped", [1603, 1605, 1605]], [[64964, 64964], "mapped", [1593, 1580, 1605]], [[64965, 64965], "mapped", [1589, 1605, 1605]], [[64966, 64966], "mapped", [1587, 1582, 1610]], [[64967, 64967], "mapped", [1606, 1580, 1610]], [[64968, 64975], "disallowed"], [[64976, 65007], "disallowed"], [[65008, 65008], "mapped", [1589, 1604, 1746]], [[65009, 65009], "mapped", [1602, 1604, 1746]], [[65010, 65010], "mapped", [1575, 1604, 1604, 1607]], [[65011, 65011], "mapped", [1575, 1603, 1576, 1585]], [[65012, 65012], "mapped", [1605, 1581, 1605, 1583]], [[65013, 65013], "mapped", [1589, 1604, 1593, 1605]], [[65014, 65014], "mapped", [1585, 1587, 1608, 1604]], [[65015, 65015], "mapped", [1593, 1604, 1610, 1607]], [[65016, 65016], "mapped", [1608, 1587, 1604, 1605]], [[65017, 65017], "mapped", [1589, 1604, 1609]], [[65018, 65018], "disallowed_STD3_mapped", [1589, 1604, 1609, 32, 1575, 1604, 1604, 1607, 32, 1593, 1604, 1610, 1607, 32, 1608, 1587, 1604, 1605]], [[65019, 65019], "disallowed_STD3_mapped", [1580, 1604, 32, 1580, 1604, 1575, 1604, 1607]], [[65020, 65020], "mapped", [1585, 1740, 1575, 1604]], [[65021, 65021], "valid", [], "NV8"], [[65022, 65023], "disallowed"], [[65024, 65039], "ignored"], [[65040, 65040], "disallowed_STD3_mapped", [44]], [[65041, 65041], "mapped", [12289]], [[65042, 65042], "disallowed"], [[65043, 65043], "disallowed_STD3_mapped", [58]], [[65044, 65044], "disallowed_STD3_mapped", [59]], [[65045, 65045], "disallowed_STD3_mapped", [33]], [[65046, 65046], "disallowed_STD3_mapped", [63]], [[65047, 65047], "mapped", [12310]], [[65048, 65048], "mapped", [12311]], [[65049, 65049], "disallowed"], [[65050, 65055], "disallowed"], [[65056, 65059], "valid"], [[65060, 65062], "valid"], [[65063, 65069], "valid"], [[65070, 65071], "valid"], [[65072, 65072], "disallowed"], [[65073, 65073], "mapped", [8212]], [[65074, 65074], "mapped", [8211]], [[65075, 65076], "disallowed_STD3_mapped", [95]], [[65077, 65077], "disallowed_STD3_mapped", [40]], [[65078, 65078], "disallowed_STD3_mapped", [41]], [[65079, 65079], "disallowed_STD3_mapped", [123]], [[65080, 65080], "disallowed_STD3_mapped", [125]], [[65081, 65081], "mapped", [12308]], [[65082, 65082], "mapped", [12309]], [[65083, 65083], "mapped", [12304]], [[65084, 65084], "mapped", [12305]], [[65085, 65085], "mapped", [12298]], [[65086, 65086], "mapped", [12299]], [[65087, 65087], "mapped", [12296]], [[65088, 65088], "mapped", [12297]], [[65089, 65089], "mapped", [12300]], [[65090, 65090], "mapped", [12301]], [[65091, 65091], "mapped", [12302]], [[65092, 65092], "mapped", [12303]], [[65093, 65094], "valid", [], "NV8"], [[65095, 65095], "disallowed_STD3_mapped", [91]], [[65096, 65096], "disallowed_STD3_mapped", [93]], [[65097, 65100], "disallowed_STD3_mapped", [32, 773]], [[65101, 65103], "disallowed_STD3_mapped", [95]], [[65104, 65104], "disallowed_STD3_mapped", [44]], [[65105, 65105], "mapped", [12289]], [[65106, 65106], "disallowed"], [[65107, 65107], "disallowed"], [[65108, 65108], "disallowed_STD3_mapped", [59]], [[65109, 65109], "disallowed_STD3_mapped", [58]], [[65110, 65110], "disallowed_STD3_mapped", [63]], [[65111, 65111], "disallowed_STD3_mapped", [33]], [[65112, 65112], "mapped", [8212]], [[65113, 65113], "disallowed_STD3_mapped", [40]], [[65114, 65114], "disallowed_STD3_mapped", [41]], [[65115, 65115], "disallowed_STD3_mapped", [123]], [[65116, 65116], "disallowed_STD3_mapped", [125]], [[65117, 65117], "mapped", [12308]], [[65118, 65118], "mapped", [12309]], [[65119, 65119], "disallowed_STD3_mapped", [35]], [[65120, 65120], "disallowed_STD3_mapped", [38]], [[65121, 65121], "disallowed_STD3_mapped", [42]], [[65122, 65122], "disallowed_STD3_mapped", [43]], [[65123, 65123], "mapped", [45]], [[65124, 65124], "disallowed_STD3_mapped", [60]], [[65125, 65125], "disallowed_STD3_mapped", [62]], [[65126, 65126], "disallowed_STD3_mapped", [61]], [[65127, 65127], "disallowed"], [[65128, 65128], "disallowed_STD3_mapped", [92]], [[65129, 65129], "disallowed_STD3_mapped", [36]], [[65130, 65130], "disallowed_STD3_mapped", [37]], [[65131, 65131], "disallowed_STD3_mapped", [64]], [[65132, 65135], "disallowed"], [[65136, 65136], "disallowed_STD3_mapped", [32, 1611]], [[65137, 65137], "mapped", [1600, 1611]], [[65138, 65138], "disallowed_STD3_mapped", [32, 1612]], [[65139, 65139], "valid"], [[65140, 65140], "disallowed_STD3_mapped", [32, 1613]], [[65141, 65141], "disallowed"], [[65142, 65142], "disallowed_STD3_mapped", [32, 1614]], [[65143, 65143], "mapped", [1600, 1614]], [[65144, 65144], "disallowed_STD3_mapped", [32, 1615]], [[65145, 65145], "mapped", [1600, 1615]], [[65146, 65146], "disallowed_STD3_mapped", [32, 1616]], [[65147, 65147], "mapped", [1600, 1616]], [[65148, 65148], "disallowed_STD3_mapped", [32, 1617]], [[65149, 65149], "mapped", [1600, 1617]], [[65150, 65150], "disallowed_STD3_mapped", [32, 1618]], [[65151, 65151], "mapped", [1600, 1618]], [[65152, 65152], "mapped", [1569]], [[65153, 65154], "mapped", [1570]], [[65155, 65156], "mapped", [1571]], [[65157, 65158], "mapped", [1572]], [[65159, 65160], "mapped", [1573]], [[65161, 65164], "mapped", [1574]], [[65165, 65166], "mapped", [1575]], [[65167, 65170], "mapped", [1576]], [[65171, 65172], "mapped", [1577]], [[65173, 65176], "mapped", [1578]], [[65177, 65180], "mapped", [1579]], [[65181, 65184], "mapped", [1580]], [[65185, 65188], "mapped", [1581]], [[65189, 65192], "mapped", [1582]], [[65193, 65194], "mapped", [1583]], [[65195, 65196], "mapped", [1584]], [[65197, 65198], "mapped", [1585]], [[65199, 65200], "mapped", [1586]], [[65201, 65204], "mapped", [1587]], [[65205, 65208], "mapped", [1588]], [[65209, 65212], "mapped", [1589]], [[65213, 65216], "mapped", [1590]], [[65217, 65220], "mapped", [1591]], [[65221, 65224], "mapped", [1592]], [[65225, 65228], "mapped", [1593]], [[65229, 65232], "mapped", [1594]], [[65233, 65236], "mapped", [1601]], [[65237, 65240], "mapped", [1602]], [[65241, 65244], "mapped", [1603]], [[65245, 65248], "mapped", [1604]], [[65249, 65252], "mapped", [1605]], [[65253, 65256], "mapped", [1606]], [[65257, 65260], "mapped", [1607]], [[65261, 65262], "mapped", [1608]], [[65263, 65264], "mapped", [1609]], [[65265, 65268], "mapped", [1610]], [[65269, 65270], "mapped", [1604, 1570]], [[65271, 65272], "mapped", [1604, 1571]], [[65273, 65274], "mapped", [1604, 1573]], [[65275, 65276], "mapped", [1604, 1575]], [[65277, 65278], "disallowed"], [[65279, 65279], "ignored"], [[65280, 65280], "disallowed"], [[65281, 65281], "disallowed_STD3_mapped", [33]], [[65282, 65282], "disallowed_STD3_mapped", [34]], [[65283, 65283], "disallowed_STD3_mapped", [35]], [[65284, 65284], "disallowed_STD3_mapped", [36]], [[65285, 65285], "disallowed_STD3_mapped", [37]], [[65286, 65286], "disallowed_STD3_mapped", [38]], [[65287, 65287], "disallowed_STD3_mapped", [39]], [[65288, 65288], "disallowed_STD3_mapped", [40]], [[65289, 65289], "disallowed_STD3_mapped", [41]], [[65290, 65290], "disallowed_STD3_mapped", [42]], [[65291, 65291], "disallowed_STD3_mapped", [43]], [[65292, 65292], "disallowed_STD3_mapped", [44]], [[65293, 65293], "mapped", [45]], [[65294, 65294], "mapped", [46]], [[65295, 65295], "disallowed_STD3_mapped", [47]], [[65296, 65296], "mapped", [48]], [[65297, 65297], "mapped", [49]], [[65298, 65298], "mapped", [50]], [[65299, 65299], "mapped", [51]], [[65300, 65300], "mapped", [52]], [[65301, 65301], "mapped", [53]], [[65302, 65302], "mapped", [54]], [[65303, 65303], "mapped", [55]], [[65304, 65304], "mapped", [56]], [[65305, 65305], "mapped", [57]], [[65306, 65306], "disallowed_STD3_mapped", [58]], [[65307, 65307], "disallowed_STD3_mapped", [59]], [[65308, 65308], "disallowed_STD3_mapped", [60]], [[65309, 65309], "disallowed_STD3_mapped", [61]], [[65310, 65310], "disallowed_STD3_mapped", [62]], [[65311, 65311], "disallowed_STD3_mapped", [63]], [[65312, 65312], "disallowed_STD3_mapped", [64]], [[65313, 65313], "mapped", [97]], [[65314, 65314], "mapped", [98]], [[65315, 65315], "mapped", [99]], [[65316, 65316], "mapped", [100]], [[65317, 65317], "mapped", [101]], [[65318, 65318], "mapped", [102]], [[65319, 65319], "mapped", [103]], [[65320, 65320], "mapped", [104]], [[65321, 65321], "mapped", [105]], [[65322, 65322], "mapped", [106]], [[65323, 65323], "mapped", [107]], [[65324, 65324], "mapped", [108]], [[65325, 65325], "mapped", [109]], [[65326, 65326], "mapped", [110]], [[65327, 65327], "mapped", [111]], [[65328, 65328], "mapped", [112]], [[65329, 65329], "mapped", [113]], [[65330, 65330], "mapped", [114]], [[65331, 65331], "mapped", [115]], [[65332, 65332], "mapped", [116]], [[65333, 65333], "mapped", [117]], [[65334, 65334], "mapped", [118]], [[65335, 65335], "mapped", [119]], [[65336, 65336], "mapped", [120]], [[65337, 65337], "mapped", [121]], [[65338, 65338], "mapped", [122]], [[65339, 65339], "disallowed_STD3_mapped", [91]], [[65340, 65340], "disallowed_STD3_mapped", [92]], [[65341, 65341], "disallowed_STD3_mapped", [93]], [[65342, 65342], "disallowed_STD3_mapped", [94]], [[65343, 65343], "disallowed_STD3_mapped", [95]], [[65344, 65344], "disallowed_STD3_mapped", [96]], [[65345, 65345], "mapped", [97]], [[65346, 65346], "mapped", [98]], [[65347, 65347], "mapped", [99]], [[65348, 65348], "mapped", [100]], [[65349, 65349], "mapped", [101]], [[65350, 65350], "mapped", [102]], [[65351, 65351], "mapped", [103]], [[65352, 65352], "mapped", [104]], [[65353, 65353], "mapped", [105]], [[65354, 65354], "mapped", [106]], [[65355, 65355], "mapped", [107]], [[65356, 65356], "mapped", [108]], [[65357, 65357], "mapped", [109]], [[65358, 65358], "mapped", [110]], [[65359, 65359], "mapped", [111]], [[65360, 65360], "mapped", [112]], [[65361, 65361], "mapped", [113]], [[65362, 65362], "mapped", [114]], [[65363, 65363], "mapped", [115]], [[65364, 65364], "mapped", [116]], [[65365, 65365], "mapped", [117]], [[65366, 65366], "mapped", [118]], [[65367, 65367], "mapped", [119]], [[65368, 65368], "mapped", [120]], [[65369, 65369], "mapped", [121]], [[65370, 65370], "mapped", [122]], [[65371, 65371], "disallowed_STD3_mapped", [123]], [[65372, 65372], "disallowed_STD3_mapped", [124]], [[65373, 65373], "disallowed_STD3_mapped", [125]], [[65374, 65374], "disallowed_STD3_mapped", [126]], [[65375, 65375], "mapped", [10629]], [[65376, 65376], "mapped", [10630]], [[65377, 65377], "mapped", [46]], [[65378, 65378], "mapped", [12300]], [[65379, 65379], "mapped", [12301]], [[65380, 65380], "mapped", [12289]], [[65381, 65381], "mapped", [12539]], [[65382, 65382], "mapped", [12530]], [[65383, 65383], "mapped", [12449]], [[65384, 65384], "mapped", [12451]], [[65385, 65385], "mapped", [12453]], [[65386, 65386], "mapped", [12455]], [[65387, 65387], "mapped", [12457]], [[65388, 65388], "mapped", [12515]], [[65389, 65389], "mapped", [12517]], [[65390, 65390], "mapped", [12519]], [[65391, 65391], "mapped", [12483]], [[65392, 65392], "mapped", [12540]], [[65393, 65393], "mapped", [12450]], [[65394, 65394], "mapped", [12452]], [[65395, 65395], "mapped", [12454]], [[65396, 65396], "mapped", [12456]], [[65397, 65397], "mapped", [12458]], [[65398, 65398], "mapped", [12459]], [[65399, 65399], "mapped", [12461]], [[65400, 65400], "mapped", [12463]], [[65401, 65401], "mapped", [12465]], [[65402, 65402], "mapped", [12467]], [[65403, 65403], "mapped", [12469]], [[65404, 65404], "mapped", [12471]], [[65405, 65405], "mapped", [12473]], [[65406, 65406], "mapped", [12475]], [[65407, 65407], "mapped", [12477]], [[65408, 65408], "mapped", [12479]], [[65409, 65409], "mapped", [12481]], [[65410, 65410], "mapped", [12484]], [[65411, 65411], "mapped", [12486]], [[65412, 65412], "mapped", [12488]], [[65413, 65413], "mapped", [12490]], [[65414, 65414], "mapped", [12491]], [[65415, 65415], "mapped", [12492]], [[65416, 65416], "mapped", [12493]], [[65417, 65417], "mapped", [12494]], [[65418, 65418], "mapped", [12495]], [[65419, 65419], "mapped", [12498]], [[65420, 65420], "mapped", [12501]], [[65421, 65421], "mapped", [12504]], [[65422, 65422], "mapped", [12507]], [[65423, 65423], "mapped", [12510]], [[65424, 65424], "mapped", [12511]], [[65425, 65425], "mapped", [12512]], [[65426, 65426], "mapped", [12513]], [[65427, 65427], "mapped", [12514]], [[65428, 65428], "mapped", [12516]], [[65429, 65429], "mapped", [12518]], [[65430, 65430], "mapped", [12520]], [[65431, 65431], "mapped", [12521]], [[65432, 65432], "mapped", [12522]], [[65433, 65433], "mapped", [12523]], [[65434, 65434], "mapped", [12524]], [[65435, 65435], "mapped", [12525]], [[65436, 65436], "mapped", [12527]], [[65437, 65437], "mapped", [12531]], [[65438, 65438], "mapped", [12441]], [[65439, 65439], "mapped", [12442]], [[65440, 65440], "disallowed"], [[65441, 65441], "mapped", [4352]], [[65442, 65442], "mapped", [4353]], [[65443, 65443], "mapped", [4522]], [[65444, 65444], "mapped", [4354]], [[65445, 65445], "mapped", [4524]], [[65446, 65446], "mapped", [4525]], [[65447, 65447], "mapped", [4355]], [[65448, 65448], "mapped", [4356]], [[65449, 65449], "mapped", [4357]], [[65450, 65450], "mapped", [4528]], [[65451, 65451], "mapped", [4529]], [[65452, 65452], "mapped", [4530]], [[65453, 65453], "mapped", [4531]], [[65454, 65454], "mapped", [4532]], [[65455, 65455], "mapped", [4533]], [[65456, 65456], "mapped", [4378]], [[65457, 65457], "mapped", [4358]], [[65458, 65458], "mapped", [4359]], [[65459, 65459], "mapped", [4360]], [[65460, 65460], "mapped", [4385]], [[65461, 65461], "mapped", [4361]], [[65462, 65462], "mapped", [4362]], [[65463, 65463], "mapped", [4363]], [[65464, 65464], "mapped", [4364]], [[65465, 65465], "mapped", [4365]], [[65466, 65466], "mapped", [4366]], [[65467, 65467], "mapped", [4367]], [[65468, 65468], "mapped", [4368]], [[65469, 65469], "mapped", [4369]], [[65470, 65470], "mapped", [4370]], [[65471, 65473], "disallowed"], [[65474, 65474], "mapped", [4449]], [[65475, 65475], "mapped", [4450]], [[65476, 65476], "mapped", [4451]], [[65477, 65477], "mapped", [4452]], [[65478, 65478], "mapped", [4453]], [[65479, 65479], "mapped", [4454]], [[65480, 65481], "disallowed"], [[65482, 65482], "mapped", [4455]], [[65483, 65483], "mapped", [4456]], [[65484, 65484], "mapped", [4457]], [[65485, 65485], "mapped", [4458]], [[65486, 65486], "mapped", [4459]], [[65487, 65487], "mapped", [4460]], [[65488, 65489], "disallowed"], [[65490, 65490], "mapped", [4461]], [[65491, 65491], "mapped", [4462]], [[65492, 65492], "mapped", [4463]], [[65493, 65493], "mapped", [4464]], [[65494, 65494], "mapped", [4465]], [[65495, 65495], "mapped", [4466]], [[65496, 65497], "disallowed"], [[65498, 65498], "mapped", [4467]], [[65499, 65499], "mapped", [4468]], [[65500, 65500], "mapped", [4469]], [[65501, 65503], "disallowed"], [[65504, 65504], "mapped", [162]], [[65505, 65505], "mapped", [163]], [[65506, 65506], "mapped", [172]], [[65507, 65507], "disallowed_STD3_mapped", [32, 772]], [[65508, 65508], "mapped", [166]], [[65509, 65509], "mapped", [165]], [[65510, 65510], "mapped", [8361]], [[65511, 65511], "disallowed"], [[65512, 65512], "mapped", [9474]], [[65513, 65513], "mapped", [8592]], [[65514, 65514], "mapped", [8593]], [[65515, 65515], "mapped", [8594]], [[65516, 65516], "mapped", [8595]], [[65517, 65517], "mapped", [9632]], [[65518, 65518], "mapped", [9675]], [[65519, 65528], "disallowed"], [[65529, 65531], "disallowed"], [[65532, 65532], "disallowed"], [[65533, 65533], "disallowed"], [[65534, 65535], "disallowed"], [[65536, 65547], "valid"], [[65548, 65548], "disallowed"], [[65549, 65574], "valid"], [[65575, 65575], "disallowed"], [[65576, 65594], "valid"], [[65595, 65595], "disallowed"], [[65596, 65597], "valid"], [[65598, 65598], "disallowed"], [[65599, 65613], "valid"], [[65614, 65615], "disallowed"], [[65616, 65629], "valid"], [[65630, 65663], "disallowed"], [[65664, 65786], "valid"], [[65787, 65791], "disallowed"], [[65792, 65794], "valid", [], "NV8"], [[65795, 65798], "disallowed"], [[65799, 65843], "valid", [], "NV8"], [[65844, 65846], "disallowed"], [[65847, 65855], "valid", [], "NV8"], [[65856, 65930], "valid", [], "NV8"], [[65931, 65932], "valid", [], "NV8"], [[65933, 65935], "disallowed"], [[65936, 65947], "valid", [], "NV8"], [[65948, 65951], "disallowed"], [[65952, 65952], "valid", [], "NV8"], [[65953, 65999], "disallowed"], [[66e3, 66044], "valid", [], "NV8"], [[66045, 66045], "valid"], [[66046, 66175], "disallowed"], [[66176, 66204], "valid"], [[66205, 66207], "disallowed"], [[66208, 66256], "valid"], [[66257, 66271], "disallowed"], [[66272, 66272], "valid"], [[66273, 66299], "valid", [], "NV8"], [[66300, 66303], "disallowed"], [[66304, 66334], "valid"], [[66335, 66335], "valid"], [[66336, 66339], "valid", [], "NV8"], [[66340, 66351], "disallowed"], [[66352, 66368], "valid"], [[66369, 66369], "valid", [], "NV8"], [[66370, 66377], "valid"], [[66378, 66378], "valid", [], "NV8"], [[66379, 66383], "disallowed"], [[66384, 66426], "valid"], [[66427, 66431], "disallowed"], [[66432, 66461], "valid"], [[66462, 66462], "disallowed"], [[66463, 66463], "valid", [], "NV8"], [[66464, 66499], "valid"], [[66500, 66503], "disallowed"], [[66504, 66511], "valid"], [[66512, 66517], "valid", [], "NV8"], [[66518, 66559], "disallowed"], [[66560, 66560], "mapped", [66600]], [[66561, 66561], "mapped", [66601]], [[66562, 66562], "mapped", [66602]], [[66563, 66563], "mapped", [66603]], [[66564, 66564], "mapped", [66604]], [[66565, 66565], "mapped", [66605]], [[66566, 66566], "mapped", [66606]], [[66567, 66567], "mapped", [66607]], [[66568, 66568], "mapped", [66608]], [[66569, 66569], "mapped", [66609]], [[66570, 66570], "mapped", [66610]], [[66571, 66571], "mapped", [66611]], [[66572, 66572], "mapped", [66612]], [[66573, 66573], "mapped", [66613]], [[66574, 66574], "mapped", [66614]], [[66575, 66575], "mapped", [66615]], [[66576, 66576], "mapped", [66616]], [[66577, 66577], "mapped", [66617]], [[66578, 66578], "mapped", [66618]], [[66579, 66579], "mapped", [66619]], [[66580, 66580], "mapped", [66620]], [[66581, 66581], "mapped", [66621]], [[66582, 66582], "mapped", [66622]], [[66583, 66583], "mapped", [66623]], [[66584, 66584], "mapped", [66624]], [[66585, 66585], "mapped", [66625]], [[66586, 66586], "mapped", [66626]], [[66587, 66587], "mapped", [66627]], [[66588, 66588], "mapped", [66628]], [[66589, 66589], "mapped", [66629]], [[66590, 66590], "mapped", [66630]], [[66591, 66591], "mapped", [66631]], [[66592, 66592], "mapped", [66632]], [[66593, 66593], "mapped", [66633]], [[66594, 66594], "mapped", [66634]], [[66595, 66595], "mapped", [66635]], [[66596, 66596], "mapped", [66636]], [[66597, 66597], "mapped", [66637]], [[66598, 66598], "mapped", [66638]], [[66599, 66599], "mapped", [66639]], [[66600, 66637], "valid"], [[66638, 66717], "valid"], [[66718, 66719], "disallowed"], [[66720, 66729], "valid"], [[66730, 66815], "disallowed"], [[66816, 66855], "valid"], [[66856, 66863], "disallowed"], [[66864, 66915], "valid"], [[66916, 66926], "disallowed"], [[66927, 66927], "valid", [], "NV8"], [[66928, 67071], "disallowed"], [[67072, 67382], "valid"], [[67383, 67391], "disallowed"], [[67392, 67413], "valid"], [[67414, 67423], "disallowed"], [[67424, 67431], "valid"], [[67432, 67583], "disallowed"], [[67584, 67589], "valid"], [[67590, 67591], "disallowed"], [[67592, 67592], "valid"], [[67593, 67593], "disallowed"], [[67594, 67637], "valid"], [[67638, 67638], "disallowed"], [[67639, 67640], "valid"], [[67641, 67643], "disallowed"], [[67644, 67644], "valid"], [[67645, 67646], "disallowed"], [[67647, 67647], "valid"], [[67648, 67669], "valid"], [[67670, 67670], "disallowed"], [[67671, 67679], "valid", [], "NV8"], [[67680, 67702], "valid"], [[67703, 67711], "valid", [], "NV8"], [[67712, 67742], "valid"], [[67743, 67750], "disallowed"], [[67751, 67759], "valid", [], "NV8"], [[67760, 67807], "disallowed"], [[67808, 67826], "valid"], [[67827, 67827], "disallowed"], [[67828, 67829], "valid"], [[67830, 67834], "disallowed"], [[67835, 67839], "valid", [], "NV8"], [[67840, 67861], "valid"], [[67862, 67865], "valid", [], "NV8"], [[67866, 67867], "valid", [], "NV8"], [[67868, 67870], "disallowed"], [[67871, 67871], "valid", [], "NV8"], [[67872, 67897], "valid"], [[67898, 67902], "disallowed"], [[67903, 67903], "valid", [], "NV8"], [[67904, 67967], "disallowed"], [[67968, 68023], "valid"], [[68024, 68027], "disallowed"], [[68028, 68029], "valid", [], "NV8"], [[68030, 68031], "valid"], [[68032, 68047], "valid", [], "NV8"], [[68048, 68049], "disallowed"], [[68050, 68095], "valid", [], "NV8"], [[68096, 68099], "valid"], [[68100, 68100], "disallowed"], [[68101, 68102], "valid"], [[68103, 68107], "disallowed"], [[68108, 68115], "valid"], [[68116, 68116], "disallowed"], [[68117, 68119], "valid"], [[68120, 68120], "disallowed"], [[68121, 68147], "valid"], [[68148, 68151], "disallowed"], [[68152, 68154], "valid"], [[68155, 68158], "disallowed"], [[68159, 68159], "valid"], [[68160, 68167], "valid", [], "NV8"], [[68168, 68175], "disallowed"], [[68176, 68184], "valid", [], "NV8"], [[68185, 68191], "disallowed"], [[68192, 68220], "valid"], [[68221, 68223], "valid", [], "NV8"], [[68224, 68252], "valid"], [[68253, 68255], "valid", [], "NV8"], [[68256, 68287], "disallowed"], [[68288, 68295], "valid"], [[68296, 68296], "valid", [], "NV8"], [[68297, 68326], "valid"], [[68327, 68330], "disallowed"], [[68331, 68342], "valid", [], "NV8"], [[68343, 68351], "disallowed"], [[68352, 68405], "valid"], [[68406, 68408], "disallowed"], [[68409, 68415], "valid", [], "NV8"], [[68416, 68437], "valid"], [[68438, 68439], "disallowed"], [[68440, 68447], "valid", [], "NV8"], [[68448, 68466], "valid"], [[68467, 68471], "disallowed"], [[68472, 68479], "valid", [], "NV8"], [[68480, 68497], "valid"], [[68498, 68504], "disallowed"], [[68505, 68508], "valid", [], "NV8"], [[68509, 68520], "disallowed"], [[68521, 68527], "valid", [], "NV8"], [[68528, 68607], "disallowed"], [[68608, 68680], "valid"], [[68681, 68735], "disallowed"], [[68736, 68736], "mapped", [68800]], [[68737, 68737], "mapped", [68801]], [[68738, 68738], "mapped", [68802]], [[68739, 68739], "mapped", [68803]], [[68740, 68740], "mapped", [68804]], [[68741, 68741], "mapped", [68805]], [[68742, 68742], "mapped", [68806]], [[68743, 68743], "mapped", [68807]], [[68744, 68744], "mapped", [68808]], [[68745, 68745], "mapped", [68809]], [[68746, 68746], "mapped", [68810]], [[68747, 68747], "mapped", [68811]], [[68748, 68748], "mapped", [68812]], [[68749, 68749], "mapped", [68813]], [[68750, 68750], "mapped", [68814]], [[68751, 68751], "mapped", [68815]], [[68752, 68752], "mapped", [68816]], [[68753, 68753], "mapped", [68817]], [[68754, 68754], "mapped", [68818]], [[68755, 68755], "mapped", [68819]], [[68756, 68756], "mapped", [68820]], [[68757, 68757], "mapped", [68821]], [[68758, 68758], "mapped", [68822]], [[68759, 68759], "mapped", [68823]], [[68760, 68760], "mapped", [68824]], [[68761, 68761], "mapped", [68825]], [[68762, 68762], "mapped", [68826]], [[68763, 68763], "mapped", [68827]], [[68764, 68764], "mapped", [68828]], [[68765, 68765], "mapped", [68829]], [[68766, 68766], "mapped", [68830]], [[68767, 68767], "mapped", [68831]], [[68768, 68768], "mapped", [68832]], [[68769, 68769], "mapped", [68833]], [[68770, 68770], "mapped", [68834]], [[68771, 68771], "mapped", [68835]], [[68772, 68772], "mapped", [68836]], [[68773, 68773], "mapped", [68837]], [[68774, 68774], "mapped", [68838]], [[68775, 68775], "mapped", [68839]], [[68776, 68776], "mapped", [68840]], [[68777, 68777], "mapped", [68841]], [[68778, 68778], "mapped", [68842]], [[68779, 68779], "mapped", [68843]], [[68780, 68780], "mapped", [68844]], [[68781, 68781], "mapped", [68845]], [[68782, 68782], "mapped", [68846]], [[68783, 68783], "mapped", [68847]], [[68784, 68784], "mapped", [68848]], [[68785, 68785], "mapped", [68849]], [[68786, 68786], "mapped", [68850]], [[68787, 68799], "disallowed"], [[68800, 68850], "valid"], [[68851, 68857], "disallowed"], [[68858, 68863], "valid", [], "NV8"], [[68864, 69215], "disallowed"], [[69216, 69246], "valid", [], "NV8"], [[69247, 69631], "disallowed"], [[69632, 69702], "valid"], [[69703, 69709], "valid", [], "NV8"], [[69710, 69713], "disallowed"], [[69714, 69733], "valid", [], "NV8"], [[69734, 69743], "valid"], [[69744, 69758], "disallowed"], [[69759, 69759], "valid"], [[69760, 69818], "valid"], [[69819, 69820], "valid", [], "NV8"], [[69821, 69821], "disallowed"], [[69822, 69825], "valid", [], "NV8"], [[69826, 69839], "disallowed"], [[69840, 69864], "valid"], [[69865, 69871], "disallowed"], [[69872, 69881], "valid"], [[69882, 69887], "disallowed"], [[69888, 69940], "valid"], [[69941, 69941], "disallowed"], [[69942, 69951], "valid"], [[69952, 69955], "valid", [], "NV8"], [[69956, 69967], "disallowed"], [[69968, 70003], "valid"], [[70004, 70005], "valid", [], "NV8"], [[70006, 70006], "valid"], [[70007, 70015], "disallowed"], [[70016, 70084], "valid"], [[70085, 70088], "valid", [], "NV8"], [[70089, 70089], "valid", [], "NV8"], [[70090, 70092], "valid"], [[70093, 70093], "valid", [], "NV8"], [[70094, 70095], "disallowed"], [[70096, 70105], "valid"], [[70106, 70106], "valid"], [[70107, 70107], "valid", [], "NV8"], [[70108, 70108], "valid"], [[70109, 70111], "valid", [], "NV8"], [[70112, 70112], "disallowed"], [[70113, 70132], "valid", [], "NV8"], [[70133, 70143], "disallowed"], [[70144, 70161], "valid"], [[70162, 70162], "disallowed"], [[70163, 70199], "valid"], [[70200, 70205], "valid", [], "NV8"], [[70206, 70271], "disallowed"], [[70272, 70278], "valid"], [[70279, 70279], "disallowed"], [[70280, 70280], "valid"], [[70281, 70281], "disallowed"], [[70282, 70285], "valid"], [[70286, 70286], "disallowed"], [[70287, 70301], "valid"], [[70302, 70302], "disallowed"], [[70303, 70312], "valid"], [[70313, 70313], "valid", [], "NV8"], [[70314, 70319], "disallowed"], [[70320, 70378], "valid"], [[70379, 70383], "disallowed"], [[70384, 70393], "valid"], [[70394, 70399], "disallowed"], [[70400, 70400], "valid"], [[70401, 70403], "valid"], [[70404, 70404], "disallowed"], [[70405, 70412], "valid"], [[70413, 70414], "disallowed"], [[70415, 70416], "valid"], [[70417, 70418], "disallowed"], [[70419, 70440], "valid"], [[70441, 70441], "disallowed"], [[70442, 70448], "valid"], [[70449, 70449], "disallowed"], [[70450, 70451], "valid"], [[70452, 70452], "disallowed"], [[70453, 70457], "valid"], [[70458, 70459], "disallowed"], [[70460, 70468], "valid"], [[70469, 70470], "disallowed"], [[70471, 70472], "valid"], [[70473, 70474], "disallowed"], [[70475, 70477], "valid"], [[70478, 70479], "disallowed"], [[70480, 70480], "valid"], [[70481, 70486], "disallowed"], [[70487, 70487], "valid"], [[70488, 70492], "disallowed"], [[70493, 70499], "valid"], [[70500, 70501], "disallowed"], [[70502, 70508], "valid"], [[70509, 70511], "disallowed"], [[70512, 70516], "valid"], [[70517, 70783], "disallowed"], [[70784, 70853], "valid"], [[70854, 70854], "valid", [], "NV8"], [[70855, 70855], "valid"], [[70856, 70863], "disallowed"], [[70864, 70873], "valid"], [[70874, 71039], "disallowed"], [[71040, 71093], "valid"], [[71094, 71095], "disallowed"], [[71096, 71104], "valid"], [[71105, 71113], "valid", [], "NV8"], [[71114, 71127], "valid", [], "NV8"], [[71128, 71133], "valid"], [[71134, 71167], "disallowed"], [[71168, 71232], "valid"], [[71233, 71235], "valid", [], "NV8"], [[71236, 71236], "valid"], [[71237, 71247], "disallowed"], [[71248, 71257], "valid"], [[71258, 71295], "disallowed"], [[71296, 71351], "valid"], [[71352, 71359], "disallowed"], [[71360, 71369], "valid"], [[71370, 71423], "disallowed"], [[71424, 71449], "valid"], [[71450, 71452], "disallowed"], [[71453, 71467], "valid"], [[71468, 71471], "disallowed"], [[71472, 71481], "valid"], [[71482, 71487], "valid", [], "NV8"], [[71488, 71839], "disallowed"], [[71840, 71840], "mapped", [71872]], [[71841, 71841], "mapped", [71873]], [[71842, 71842], "mapped", [71874]], [[71843, 71843], "mapped", [71875]], [[71844, 71844], "mapped", [71876]], [[71845, 71845], "mapped", [71877]], [[71846, 71846], "mapped", [71878]], [[71847, 71847], "mapped", [71879]], [[71848, 71848], "mapped", [71880]], [[71849, 71849], "mapped", [71881]], [[71850, 71850], "mapped", [71882]], [[71851, 71851], "mapped", [71883]], [[71852, 71852], "mapped", [71884]], [[71853, 71853], "mapped", [71885]], [[71854, 71854], "mapped", [71886]], [[71855, 71855], "mapped", [71887]], [[71856, 71856], "mapped", [71888]], [[71857, 71857], "mapped", [71889]], [[71858, 71858], "mapped", [71890]], [[71859, 71859], "mapped", [71891]], [[71860, 71860], "mapped", [71892]], [[71861, 71861], "mapped", [71893]], [[71862, 71862], "mapped", [71894]], [[71863, 71863], "mapped", [71895]], [[71864, 71864], "mapped", [71896]], [[71865, 71865], "mapped", [71897]], [[71866, 71866], "mapped", [71898]], [[71867, 71867], "mapped", [71899]], [[71868, 71868], "mapped", [71900]], [[71869, 71869], "mapped", [71901]], [[71870, 71870], "mapped", [71902]], [[71871, 71871], "mapped", [71903]], [[71872, 71913], "valid"], [[71914, 71922], "valid", [], "NV8"], [[71923, 71934], "disallowed"], [[71935, 71935], "valid"], [[71936, 72383], "disallowed"], [[72384, 72440], "valid"], [[72441, 73727], "disallowed"], [[73728, 74606], "valid"], [[74607, 74648], "valid"], [[74649, 74649], "valid"], [[74650, 74751], "disallowed"], [[74752, 74850], "valid", [], "NV8"], [[74851, 74862], "valid", [], "NV8"], [[74863, 74863], "disallowed"], [[74864, 74867], "valid", [], "NV8"], [[74868, 74868], "valid", [], "NV8"], [[74869, 74879], "disallowed"], [[74880, 75075], "valid"], [[75076, 77823], "disallowed"], [[77824, 78894], "valid"], [[78895, 82943], "disallowed"], [[82944, 83526], "valid"], [[83527, 92159], "disallowed"], [[92160, 92728], "valid"], [[92729, 92735], "disallowed"], [[92736, 92766], "valid"], [[92767, 92767], "disallowed"], [[92768, 92777], "valid"], [[92778, 92781], "disallowed"], [[92782, 92783], "valid", [], "NV8"], [[92784, 92879], "disallowed"], [[92880, 92909], "valid"], [[92910, 92911], "disallowed"], [[92912, 92916], "valid"], [[92917, 92917], "valid", [], "NV8"], [[92918, 92927], "disallowed"], [[92928, 92982], "valid"], [[92983, 92991], "valid", [], "NV8"], [[92992, 92995], "valid"], [[92996, 92997], "valid", [], "NV8"], [[92998, 93007], "disallowed"], [[93008, 93017], "valid"], [[93018, 93018], "disallowed"], [[93019, 93025], "valid", [], "NV8"], [[93026, 93026], "disallowed"], [[93027, 93047], "valid"], [[93048, 93052], "disallowed"], [[93053, 93071], "valid"], [[93072, 93951], "disallowed"], [[93952, 94020], "valid"], [[94021, 94031], "disallowed"], [[94032, 94078], "valid"], [[94079, 94094], "disallowed"], [[94095, 94111], "valid"], [[94112, 110591], "disallowed"], [[110592, 110593], "valid"], [[110594, 113663], "disallowed"], [[113664, 113770], "valid"], [[113771, 113775], "disallowed"], [[113776, 113788], "valid"], [[113789, 113791], "disallowed"], [[113792, 113800], "valid"], [[113801, 113807], "disallowed"], [[113808, 113817], "valid"], [[113818, 113819], "disallowed"], [[113820, 113820], "valid", [], "NV8"], [[113821, 113822], "valid"], [[113823, 113823], "valid", [], "NV8"], [[113824, 113827], "ignored"], [[113828, 118783], "disallowed"], [[118784, 119029], "valid", [], "NV8"], [[119030, 119039], "disallowed"], [[119040, 119078], "valid", [], "NV8"], [[119079, 119080], "disallowed"], [[119081, 119081], "valid", [], "NV8"], [[119082, 119133], "valid", [], "NV8"], [[119134, 119134], "mapped", [119127, 119141]], [[119135, 119135], "mapped", [119128, 119141]], [[119136, 119136], "mapped", [119128, 119141, 119150]], [[119137, 119137], "mapped", [119128, 119141, 119151]], [[119138, 119138], "mapped", [119128, 119141, 119152]], [[119139, 119139], "mapped", [119128, 119141, 119153]], [[119140, 119140], "mapped", [119128, 119141, 119154]], [[119141, 119154], "valid", [], "NV8"], [[119155, 119162], "disallowed"], [[119163, 119226], "valid", [], "NV8"], [[119227, 119227], "mapped", [119225, 119141]], [[119228, 119228], "mapped", [119226, 119141]], [[119229, 119229], "mapped", [119225, 119141, 119150]], [[119230, 119230], "mapped", [119226, 119141, 119150]], [[119231, 119231], "mapped", [119225, 119141, 119151]], [[119232, 119232], "mapped", [119226, 119141, 119151]], [[119233, 119261], "valid", [], "NV8"], [[119262, 119272], "valid", [], "NV8"], [[119273, 119295], "disallowed"], [[119296, 119365], "valid", [], "NV8"], [[119366, 119551], "disallowed"], [[119552, 119638], "valid", [], "NV8"], [[119639, 119647], "disallowed"], [[119648, 119665], "valid", [], "NV8"], [[119666, 119807], "disallowed"], [[119808, 119808], "mapped", [97]], [[119809, 119809], "mapped", [98]], [[119810, 119810], "mapped", [99]], [[119811, 119811], "mapped", [100]], [[119812, 119812], "mapped", [101]], [[119813, 119813], "mapped", [102]], [[119814, 119814], "mapped", [103]], [[119815, 119815], "mapped", [104]], [[119816, 119816], "mapped", [105]], [[119817, 119817], "mapped", [106]], [[119818, 119818], "mapped", [107]], [[119819, 119819], "mapped", [108]], [[119820, 119820], "mapped", [109]], [[119821, 119821], "mapped", [110]], [[119822, 119822], "mapped", [111]], [[119823, 119823], "mapped", [112]], [[119824, 119824], "mapped", [113]], [[119825, 119825], "mapped", [114]], [[119826, 119826], "mapped", [115]], [[119827, 119827], "mapped", [116]], [[119828, 119828], "mapped", [117]], [[119829, 119829], "mapped", [118]], [[119830, 119830], "mapped", [119]], [[119831, 119831], "mapped", [120]], [[119832, 119832], "mapped", [121]], [[119833, 119833], "mapped", [122]], [[119834, 119834], "mapped", [97]], [[119835, 119835], "mapped", [98]], [[119836, 119836], "mapped", [99]], [[119837, 119837], "mapped", [100]], [[119838, 119838], "mapped", [101]], [[119839, 119839], "mapped", [102]], [[119840, 119840], "mapped", [103]], [[119841, 119841], "mapped", [104]], [[119842, 119842], "mapped", [105]], [[119843, 119843], "mapped", [106]], [[119844, 119844], "mapped", [107]], [[119845, 119845], "mapped", [108]], [[119846, 119846], "mapped", [109]], [[119847, 119847], "mapped", [110]], [[119848, 119848], "mapped", [111]], [[119849, 119849], "mapped", [112]], [[119850, 119850], "mapped", [113]], [[119851, 119851], "mapped", [114]], [[119852, 119852], "mapped", [115]], [[119853, 119853], "mapped", [116]], [[119854, 119854], "mapped", [117]], [[119855, 119855], "mapped", [118]], [[119856, 119856], "mapped", [119]], [[119857, 119857], "mapped", [120]], [[119858, 119858], "mapped", [121]], [[119859, 119859], "mapped", [122]], [[119860, 119860], "mapped", [97]], [[119861, 119861], "mapped", [98]], [[119862, 119862], "mapped", [99]], [[119863, 119863], "mapped", [100]], [[119864, 119864], "mapped", [101]], [[119865, 119865], "mapped", [102]], [[119866, 119866], "mapped", [103]], [[119867, 119867], "mapped", [104]], [[119868, 119868], "mapped", [105]], [[119869, 119869], "mapped", [106]], [[119870, 119870], "mapped", [107]], [[119871, 119871], "mapped", [108]], [[119872, 119872], "mapped", [109]], [[119873, 119873], "mapped", [110]], [[119874, 119874], "mapped", [111]], [[119875, 119875], "mapped", [112]], [[119876, 119876], "mapped", [113]], [[119877, 119877], "mapped", [114]], [[119878, 119878], "mapped", [115]], [[119879, 119879], "mapped", [116]], [[119880, 119880], "mapped", [117]], [[119881, 119881], "mapped", [118]], [[119882, 119882], "mapped", [119]], [[119883, 119883], "mapped", [120]], [[119884, 119884], "mapped", [121]], [[119885, 119885], "mapped", [122]], [[119886, 119886], "mapped", [97]], [[119887, 119887], "mapped", [98]], [[119888, 119888], "mapped", [99]], [[119889, 119889], "mapped", [100]], [[119890, 119890], "mapped", [101]], [[119891, 119891], "mapped", [102]], [[119892, 119892], "mapped", [103]], [[119893, 119893], "disallowed"], [[119894, 119894], "mapped", [105]], [[119895, 119895], "mapped", [106]], [[119896, 119896], "mapped", [107]], [[119897, 119897], "mapped", [108]], [[119898, 119898], "mapped", [109]], [[119899, 119899], "mapped", [110]], [[119900, 119900], "mapped", [111]], [[119901, 119901], "mapped", [112]], [[119902, 119902], "mapped", [113]], [[119903, 119903], "mapped", [114]], [[119904, 119904], "mapped", [115]], [[119905, 119905], "mapped", [116]], [[119906, 119906], "mapped", [117]], [[119907, 119907], "mapped", [118]], [[119908, 119908], "mapped", [119]], [[119909, 119909], "mapped", [120]], [[119910, 119910], "mapped", [121]], [[119911, 119911], "mapped", [122]], [[119912, 119912], "mapped", [97]], [[119913, 119913], "mapped", [98]], [[119914, 119914], "mapped", [99]], [[119915, 119915], "mapped", [100]], [[119916, 119916], "mapped", [101]], [[119917, 119917], "mapped", [102]], [[119918, 119918], "mapped", [103]], [[119919, 119919], "mapped", [104]], [[119920, 119920], "mapped", [105]], [[119921, 119921], "mapped", [106]], [[119922, 119922], "mapped", [107]], [[119923, 119923], "mapped", [108]], [[119924, 119924], "mapped", [109]], [[119925, 119925], "mapped", [110]], [[119926, 119926], "mapped", [111]], [[119927, 119927], "mapped", [112]], [[119928, 119928], "mapped", [113]], [[119929, 119929], "mapped", [114]], [[119930, 119930], "mapped", [115]], [[119931, 119931], "mapped", [116]], [[119932, 119932], "mapped", [117]], [[119933, 119933], "mapped", [118]], [[119934, 119934], "mapped", [119]], [[119935, 119935], "mapped", [120]], [[119936, 119936], "mapped", [121]], [[119937, 119937], "mapped", [122]], [[119938, 119938], "mapped", [97]], [[119939, 119939], "mapped", [98]], [[119940, 119940], "mapped", [99]], [[119941, 119941], "mapped", [100]], [[119942, 119942], "mapped", [101]], [[119943, 119943], "mapped", [102]], [[119944, 119944], "mapped", [103]], [[119945, 119945], "mapped", [104]], [[119946, 119946], "mapped", [105]], [[119947, 119947], "mapped", [106]], [[119948, 119948], "mapped", [107]], [[119949, 119949], "mapped", [108]], [[119950, 119950], "mapped", [109]], [[119951, 119951], "mapped", [110]], [[119952, 119952], "mapped", [111]], [[119953, 119953], "mapped", [112]], [[119954, 119954], "mapped", [113]], [[119955, 119955], "mapped", [114]], [[119956, 119956], "mapped", [115]], [[119957, 119957], "mapped", [116]], [[119958, 119958], "mapped", [117]], [[119959, 119959], "mapped", [118]], [[119960, 119960], "mapped", [119]], [[119961, 119961], "mapped", [120]], [[119962, 119962], "mapped", [121]], [[119963, 119963], "mapped", [122]], [[119964, 119964], "mapped", [97]], [[119965, 119965], "disallowed"], [[119966, 119966], "mapped", [99]], [[119967, 119967], "mapped", [100]], [[119968, 119969], "disallowed"], [[119970, 119970], "mapped", [103]], [[119971, 119972], "disallowed"], [[119973, 119973], "mapped", [106]], [[119974, 119974], "mapped", [107]], [[119975, 119976], "disallowed"], [[119977, 119977], "mapped", [110]], [[119978, 119978], "mapped", [111]], [[119979, 119979], "mapped", [112]], [[119980, 119980], "mapped", [113]], [[119981, 119981], "disallowed"], [[119982, 119982], "mapped", [115]], [[119983, 119983], "mapped", [116]], [[119984, 119984], "mapped", [117]], [[119985, 119985], "mapped", [118]], [[119986, 119986], "mapped", [119]], [[119987, 119987], "mapped", [120]], [[119988, 119988], "mapped", [121]], [[119989, 119989], "mapped", [122]], [[119990, 119990], "mapped", [97]], [[119991, 119991], "mapped", [98]], [[119992, 119992], "mapped", [99]], [[119993, 119993], "mapped", [100]], [[119994, 119994], "disallowed"], [[119995, 119995], "mapped", [102]], [[119996, 119996], "disallowed"], [[119997, 119997], "mapped", [104]], [[119998, 119998], "mapped", [105]], [[119999, 119999], "mapped", [106]], [[12e4, 12e4], "mapped", [107]], [[120001, 120001], "mapped", [108]], [[120002, 120002], "mapped", [109]], [[120003, 120003], "mapped", [110]], [[120004, 120004], "disallowed"], [[120005, 120005], "mapped", [112]], [[120006, 120006], "mapped", [113]], [[120007, 120007], "mapped", [114]], [[120008, 120008], "mapped", [115]], [[120009, 120009], "mapped", [116]], [[120010, 120010], "mapped", [117]], [[120011, 120011], "mapped", [118]], [[120012, 120012], "mapped", [119]], [[120013, 120013], "mapped", [120]], [[120014, 120014], "mapped", [121]], [[120015, 120015], "mapped", [122]], [[120016, 120016], "mapped", [97]], [[120017, 120017], "mapped", [98]], [[120018, 120018], "mapped", [99]], [[120019, 120019], "mapped", [100]], [[120020, 120020], "mapped", [101]], [[120021, 120021], "mapped", [102]], [[120022, 120022], "mapped", [103]], [[120023, 120023], "mapped", [104]], [[120024, 120024], "mapped", [105]], [[120025, 120025], "mapped", [106]], [[120026, 120026], "mapped", [107]], [[120027, 120027], "mapped", [108]], [[120028, 120028], "mapped", [109]], [[120029, 120029], "mapped", [110]], [[120030, 120030], "mapped", [111]], [[120031, 120031], "mapped", [112]], [[120032, 120032], "mapped", [113]], [[120033, 120033], "mapped", [114]], [[120034, 120034], "mapped", [115]], [[120035, 120035], "mapped", [116]], [[120036, 120036], "mapped", [117]], [[120037, 120037], "mapped", [118]], [[120038, 120038], "mapped", [119]], [[120039, 120039], "mapped", [120]], [[120040, 120040], "mapped", [121]], [[120041, 120041], "mapped", [122]], [[120042, 120042], "mapped", [97]], [[120043, 120043], "mapped", [98]], [[120044, 120044], "mapped", [99]], [[120045, 120045], "mapped", [100]], [[120046, 120046], "mapped", [101]], [[120047, 120047], "mapped", [102]], [[120048, 120048], "mapped", [103]], [[120049, 120049], "mapped", [104]], [[120050, 120050], "mapped", [105]], [[120051, 120051], "mapped", [106]], [[120052, 120052], "mapped", [107]], [[120053, 120053], "mapped", [108]], [[120054, 120054], "mapped", [109]], [[120055, 120055], "mapped", [110]], [[120056, 120056], "mapped", [111]], [[120057, 120057], "mapped", [112]], [[120058, 120058], "mapped", [113]], [[120059, 120059], "mapped", [114]], [[120060, 120060], "mapped", [115]], [[120061, 120061], "mapped", [116]], [[120062, 120062], "mapped", [117]], [[120063, 120063], "mapped", [118]], [[120064, 120064], "mapped", [119]], [[120065, 120065], "mapped", [120]], [[120066, 120066], "mapped", [121]], [[120067, 120067], "mapped", [122]], [[120068, 120068], "mapped", [97]], [[120069, 120069], "mapped", [98]], [[120070, 120070], "disallowed"], [[120071, 120071], "mapped", [100]], [[120072, 120072], "mapped", [101]], [[120073, 120073], "mapped", [102]], [[120074, 120074], "mapped", [103]], [[120075, 120076], "disallowed"], [[120077, 120077], "mapped", [106]], [[120078, 120078], "mapped", [107]], [[120079, 120079], "mapped", [108]], [[120080, 120080], "mapped", [109]], [[120081, 120081], "mapped", [110]], [[120082, 120082], "mapped", [111]], [[120083, 120083], "mapped", [112]], [[120084, 120084], "mapped", [113]], [[120085, 120085], "disallowed"], [[120086, 120086], "mapped", [115]], [[120087, 120087], "mapped", [116]], [[120088, 120088], "mapped", [117]], [[120089, 120089], "mapped", [118]], [[120090, 120090], "mapped", [119]], [[120091, 120091], "mapped", [120]], [[120092, 120092], "mapped", [121]], [[120093, 120093], "disallowed"], [[120094, 120094], "mapped", [97]], [[120095, 120095], "mapped", [98]], [[120096, 120096], "mapped", [99]], [[120097, 120097], "mapped", [100]], [[120098, 120098], "mapped", [101]], [[120099, 120099], "mapped", [102]], [[120100, 120100], "mapped", [103]], [[120101, 120101], "mapped", [104]], [[120102, 120102], "mapped", [105]], [[120103, 120103], "mapped", [106]], [[120104, 120104], "mapped", [107]], [[120105, 120105], "mapped", [108]], [[120106, 120106], "mapped", [109]], [[120107, 120107], "mapped", [110]], [[120108, 120108], "mapped", [111]], [[120109, 120109], "mapped", [112]], [[120110, 120110], "mapped", [113]], [[120111, 120111], "mapped", [114]], [[120112, 120112], "mapped", [115]], [[120113, 120113], "mapped", [116]], [[120114, 120114], "mapped", [117]], [[120115, 120115], "mapped", [118]], [[120116, 120116], "mapped", [119]], [[120117, 120117], "mapped", [120]], [[120118, 120118], "mapped", [121]], [[120119, 120119], "mapped", [122]], [[120120, 120120], "mapped", [97]], [[120121, 120121], "mapped", [98]], [[120122, 120122], "disallowed"], [[120123, 120123], "mapped", [100]], [[120124, 120124], "mapped", [101]], [[120125, 120125], "mapped", [102]], [[120126, 120126], "mapped", [103]], [[120127, 120127], "disallowed"], [[120128, 120128], "mapped", [105]], [[120129, 120129], "mapped", [106]], [[120130, 120130], "mapped", [107]], [[120131, 120131], "mapped", [108]], [[120132, 120132], "mapped", [109]], [[120133, 120133], "disallowed"], [[120134, 120134], "mapped", [111]], [[120135, 120137], "disallowed"], [[120138, 120138], "mapped", [115]], [[120139, 120139], "mapped", [116]], [[120140, 120140], "mapped", [117]], [[120141, 120141], "mapped", [118]], [[120142, 120142], "mapped", [119]], [[120143, 120143], "mapped", [120]], [[120144, 120144], "mapped", [121]], [[120145, 120145], "disallowed"], [[120146, 120146], "mapped", [97]], [[120147, 120147], "mapped", [98]], [[120148, 120148], "mapped", [99]], [[120149, 120149], "mapped", [100]], [[120150, 120150], "mapped", [101]], [[120151, 120151], "mapped", [102]], [[120152, 120152], "mapped", [103]], [[120153, 120153], "mapped", [104]], [[120154, 120154], "mapped", [105]], [[120155, 120155], "mapped", [106]], [[120156, 120156], "mapped", [107]], [[120157, 120157], "mapped", [108]], [[120158, 120158], "mapped", [109]], [[120159, 120159], "mapped", [110]], [[120160, 120160], "mapped", [111]], [[120161, 120161], "mapped", [112]], [[120162, 120162], "mapped", [113]], [[120163, 120163], "mapped", [114]], [[120164, 120164], "mapped", [115]], [[120165, 120165], "mapped", [116]], [[120166, 120166], "mapped", [117]], [[120167, 120167], "mapped", [118]], [[120168, 120168], "mapped", [119]], [[120169, 120169], "mapped", [120]], [[120170, 120170], "mapped", [121]], [[120171, 120171], "mapped", [122]], [[120172, 120172], "mapped", [97]], [[120173, 120173], "mapped", [98]], [[120174, 120174], "mapped", [99]], [[120175, 120175], "mapped", [100]], [[120176, 120176], "mapped", [101]], [[120177, 120177], "mapped", [102]], [[120178, 120178], "mapped", [103]], [[120179, 120179], "mapped", [104]], [[120180, 120180], "mapped", [105]], [[120181, 120181], "mapped", [106]], [[120182, 120182], "mapped", [107]], [[120183, 120183], "mapped", [108]], [[120184, 120184], "mapped", [109]], [[120185, 120185], "mapped", [110]], [[120186, 120186], "mapped", [111]], [[120187, 120187], "mapped", [112]], [[120188, 120188], "mapped", [113]], [[120189, 120189], "mapped", [114]], [[120190, 120190], "mapped", [115]], [[120191, 120191], "mapped", [116]], [[120192, 120192], "mapped", [117]], [[120193, 120193], "mapped", [118]], [[120194, 120194], "mapped", [119]], [[120195, 120195], "mapped", [120]], [[120196, 120196], "mapped", [121]], [[120197, 120197], "mapped", [122]], [[120198, 120198], "mapped", [97]], [[120199, 120199], "mapped", [98]], [[120200, 120200], "mapped", [99]], [[120201, 120201], "mapped", [100]], [[120202, 120202], "mapped", [101]], [[120203, 120203], "mapped", [102]], [[120204, 120204], "mapped", [103]], [[120205, 120205], "mapped", [104]], [[120206, 120206], "mapped", [105]], [[120207, 120207], "mapped", [106]], [[120208, 120208], "mapped", [107]], [[120209, 120209], "mapped", [108]], [[120210, 120210], "mapped", [109]], [[120211, 120211], "mapped", [110]], [[120212, 120212], "mapped", [111]], [[120213, 120213], "mapped", [112]], [[120214, 120214], "mapped", [113]], [[120215, 120215], "mapped", [114]], [[120216, 120216], "mapped", [115]], [[120217, 120217], "mapped", [116]], [[120218, 120218], "mapped", [117]], [[120219, 120219], "mapped", [118]], [[120220, 120220], "mapped", [119]], [[120221, 120221], "mapped", [120]], [[120222, 120222], "mapped", [121]], [[120223, 120223], "mapped", [122]], [[120224, 120224], "mapped", [97]], [[120225, 120225], "mapped", [98]], [[120226, 120226], "mapped", [99]], [[120227, 120227], "mapped", [100]], [[120228, 120228], "mapped", [101]], [[120229, 120229], "mapped", [102]], [[120230, 120230], "mapped", [103]], [[120231, 120231], "mapped", [104]], [[120232, 120232], "mapped", [105]], [[120233, 120233], "mapped", [106]], [[120234, 120234], "mapped", [107]], [[120235, 120235], "mapped", [108]], [[120236, 120236], "mapped", [109]], [[120237, 120237], "mapped", [110]], [[120238, 120238], "mapped", [111]], [[120239, 120239], "mapped", [112]], [[120240, 120240], "mapped", [113]], [[120241, 120241], "mapped", [114]], [[120242, 120242], "mapped", [115]], [[120243, 120243], "mapped", [116]], [[120244, 120244], "mapped", [117]], [[120245, 120245], "mapped", [118]], [[120246, 120246], "mapped", [119]], [[120247, 120247], "mapped", [120]], [[120248, 120248], "mapped", [121]], [[120249, 120249], "mapped", [122]], [[120250, 120250], "mapped", [97]], [[120251, 120251], "mapped", [98]], [[120252, 120252], "mapped", [99]], [[120253, 120253], "mapped", [100]], [[120254, 120254], "mapped", [101]], [[120255, 120255], "mapped", [102]], [[120256, 120256], "mapped", [103]], [[120257, 120257], "mapped", [104]], [[120258, 120258], "mapped", [105]], [[120259, 120259], "mapped", [106]], [[120260, 120260], "mapped", [107]], [[120261, 120261], "mapped", [108]], [[120262, 120262], "mapped", [109]], [[120263, 120263], "mapped", [110]], [[120264, 120264], "mapped", [111]], [[120265, 120265], "mapped", [112]], [[120266, 120266], "mapped", [113]], [[120267, 120267], "mapped", [114]], [[120268, 120268], "mapped", [115]], [[120269, 120269], "mapped", [116]], [[120270, 120270], "mapped", [117]], [[120271, 120271], "mapped", [118]], [[120272, 120272], "mapped", [119]], [[120273, 120273], "mapped", [120]], [[120274, 120274], "mapped", [121]], [[120275, 120275], "mapped", [122]], [[120276, 120276], "mapped", [97]], [[120277, 120277], "mapped", [98]], [[120278, 120278], "mapped", [99]], [[120279, 120279], "mapped", [100]], [[120280, 120280], "mapped", [101]], [[120281, 120281], "mapped", [102]], [[120282, 120282], "mapped", [103]], [[120283, 120283], "mapped", [104]], [[120284, 120284], "mapped", [105]], [[120285, 120285], "mapped", [106]], [[120286, 120286], "mapped", [107]], [[120287, 120287], "mapped", [108]], [[120288, 120288], "mapped", [109]], [[120289, 120289], "mapped", [110]], [[120290, 120290], "mapped", [111]], [[120291, 120291], "mapped", [112]], [[120292, 120292], "mapped", [113]], [[120293, 120293], "mapped", [114]], [[120294, 120294], "mapped", [115]], [[120295, 120295], "mapped", [116]], [[120296, 120296], "mapped", [117]], [[120297, 120297], "mapped", [118]], [[120298, 120298], "mapped", [119]], [[120299, 120299], "mapped", [120]], [[120300, 120300], "mapped", [121]], [[120301, 120301], "mapped", [122]], [[120302, 120302], "mapped", [97]], [[120303, 120303], "mapped", [98]], [[120304, 120304], "mapped", [99]], [[120305, 120305], "mapped", [100]], [[120306, 120306], "mapped", [101]], [[120307, 120307], "mapped", [102]], [[120308, 120308], "mapped", [103]], [[120309, 120309], "mapped", [104]], [[120310, 120310], "mapped", [105]], [[120311, 120311], "mapped", [106]], [[120312, 120312], "mapped", [107]], [[120313, 120313], "mapped", [108]], [[120314, 120314], "mapped", [109]], [[120315, 120315], "mapped", [110]], [[120316, 120316], "mapped", [111]], [[120317, 120317], "mapped", [112]], [[120318, 120318], "mapped", [113]], [[120319, 120319], "mapped", [114]], [[120320, 120320], "mapped", [115]], [[120321, 120321], "mapped", [116]], [[120322, 120322], "mapped", [117]], [[120323, 120323], "mapped", [118]], [[120324, 120324], "mapped", [119]], [[120325, 120325], "mapped", [120]], [[120326, 120326], "mapped", [121]], [[120327, 120327], "mapped", [122]], [[120328, 120328], "mapped", [97]], [[120329, 120329], "mapped", [98]], [[120330, 120330], "mapped", [99]], [[120331, 120331], "mapped", [100]], [[120332, 120332], "mapped", [101]], [[120333, 120333], "mapped", [102]], [[120334, 120334], "mapped", [103]], [[120335, 120335], "mapped", [104]], [[120336, 120336], "mapped", [105]], [[120337, 120337], "mapped", [106]], [[120338, 120338], "mapped", [107]], [[120339, 120339], "mapped", [108]], [[120340, 120340], "mapped", [109]], [[120341, 120341], "mapped", [110]], [[120342, 120342], "mapped", [111]], [[120343, 120343], "mapped", [112]], [[120344, 120344], "mapped", [113]], [[120345, 120345], "mapped", [114]], [[120346, 120346], "mapped", [115]], [[120347, 120347], "mapped", [116]], [[120348, 120348], "mapped", [117]], [[120349, 120349], "mapped", [118]], [[120350, 120350], "mapped", [119]], [[120351, 120351], "mapped", [120]], [[120352, 120352], "mapped", [121]], [[120353, 120353], "mapped", [122]], [[120354, 120354], "mapped", [97]], [[120355, 120355], "mapped", [98]], [[120356, 120356], "mapped", [99]], [[120357, 120357], "mapped", [100]], [[120358, 120358], "mapped", [101]], [[120359, 120359], "mapped", [102]], [[120360, 120360], "mapped", [103]], [[120361, 120361], "mapped", [104]], [[120362, 120362], "mapped", [105]], [[120363, 120363], "mapped", [106]], [[120364, 120364], "mapped", [107]], [[120365, 120365], "mapped", [108]], [[120366, 120366], "mapped", [109]], [[120367, 120367], "mapped", [110]], [[120368, 120368], "mapped", [111]], [[120369, 120369], "mapped", [112]], [[120370, 120370], "mapped", [113]], [[120371, 120371], "mapped", [114]], [[120372, 120372], "mapped", [115]], [[120373, 120373], "mapped", [116]], [[120374, 120374], "mapped", [117]], [[120375, 120375], "mapped", [118]], [[120376, 120376], "mapped", [119]], [[120377, 120377], "mapped", [120]], [[120378, 120378], "mapped", [121]], [[120379, 120379], "mapped", [122]], [[120380, 120380], "mapped", [97]], [[120381, 120381], "mapped", [98]], [[120382, 120382], "mapped", [99]], [[120383, 120383], "mapped", [100]], [[120384, 120384], "mapped", [101]], [[120385, 120385], "mapped", [102]], [[120386, 120386], "mapped", [103]], [[120387, 120387], "mapped", [104]], [[120388, 120388], "mapped", [105]], [[120389, 120389], "mapped", [106]], [[120390, 120390], "mapped", [107]], [[120391, 120391], "mapped", [108]], [[120392, 120392], "mapped", [109]], [[120393, 120393], "mapped", [110]], [[120394, 120394], "mapped", [111]], [[120395, 120395], "mapped", [112]], [[120396, 120396], "mapped", [113]], [[120397, 120397], "mapped", [114]], [[120398, 120398], "mapped", [115]], [[120399, 120399], "mapped", [116]], [[120400, 120400], "mapped", [117]], [[120401, 120401], "mapped", [118]], [[120402, 120402], "mapped", [119]], [[120403, 120403], "mapped", [120]], [[120404, 120404], "mapped", [121]], [[120405, 120405], "mapped", [122]], [[120406, 120406], "mapped", [97]], [[120407, 120407], "mapped", [98]], [[120408, 120408], "mapped", [99]], [[120409, 120409], "mapped", [100]], [[120410, 120410], "mapped", [101]], [[120411, 120411], "mapped", [102]], [[120412, 120412], "mapped", [103]], [[120413, 120413], "mapped", [104]], [[120414, 120414], "mapped", [105]], [[120415, 120415], "mapped", [106]], [[120416, 120416], "mapped", [107]], [[120417, 120417], "mapped", [108]], [[120418, 120418], "mapped", [109]], [[120419, 120419], "mapped", [110]], [[120420, 120420], "mapped", [111]], [[120421, 120421], "mapped", [112]], [[120422, 120422], "mapped", [113]], [[120423, 120423], "mapped", [114]], [[120424, 120424], "mapped", [115]], [[120425, 120425], "mapped", [116]], [[120426, 120426], "mapped", [117]], [[120427, 120427], "mapped", [118]], [[120428, 120428], "mapped", [119]], [[120429, 120429], "mapped", [120]], [[120430, 120430], "mapped", [121]], [[120431, 120431], "mapped", [122]], [[120432, 120432], "mapped", [97]], [[120433, 120433], "mapped", [98]], [[120434, 120434], "mapped", [99]], [[120435, 120435], "mapped", [100]], [[120436, 120436], "mapped", [101]], [[120437, 120437], "mapped", [102]], [[120438, 120438], "mapped", [103]], [[120439, 120439], "mapped", [104]], [[120440, 120440], "mapped", [105]], [[120441, 120441], "mapped", [106]], [[120442, 120442], "mapped", [107]], [[120443, 120443], "mapped", [108]], [[120444, 120444], "mapped", [109]], [[120445, 120445], "mapped", [110]], [[120446, 120446], "mapped", [111]], [[120447, 120447], "mapped", [112]], [[120448, 120448], "mapped", [113]], [[120449, 120449], "mapped", [114]], [[120450, 120450], "mapped", [115]], [[120451, 120451], "mapped", [116]], [[120452, 120452], "mapped", [117]], [[120453, 120453], "mapped", [118]], [[120454, 120454], "mapped", [119]], [[120455, 120455], "mapped", [120]], [[120456, 120456], "mapped", [121]], [[120457, 120457], "mapped", [122]], [[120458, 120458], "mapped", [97]], [[120459, 120459], "mapped", [98]], [[120460, 120460], "mapped", [99]], [[120461, 120461], "mapped", [100]], [[120462, 120462], "mapped", [101]], [[120463, 120463], "mapped", [102]], [[120464, 120464], "mapped", [103]], [[120465, 120465], "mapped", [104]], [[120466, 120466], "mapped", [105]], [[120467, 120467], "mapped", [106]], [[120468, 120468], "mapped", [107]], [[120469, 120469], "mapped", [108]], [[120470, 120470], "mapped", [109]], [[120471, 120471], "mapped", [110]], [[120472, 120472], "mapped", [111]], [[120473, 120473], "mapped", [112]], [[120474, 120474], "mapped", [113]], [[120475, 120475], "mapped", [114]], [[120476, 120476], "mapped", [115]], [[120477, 120477], "mapped", [116]], [[120478, 120478], "mapped", [117]], [[120479, 120479], "mapped", [118]], [[120480, 120480], "mapped", [119]], [[120481, 120481], "mapped", [120]], [[120482, 120482], "mapped", [121]], [[120483, 120483], "mapped", [122]], [[120484, 120484], "mapped", [305]], [[120485, 120485], "mapped", [567]], [[120486, 120487], "disallowed"], [[120488, 120488], "mapped", [945]], [[120489, 120489], "mapped", [946]], [[120490, 120490], "mapped", [947]], [[120491, 120491], "mapped", [948]], [[120492, 120492], "mapped", [949]], [[120493, 120493], "mapped", [950]], [[120494, 120494], "mapped", [951]], [[120495, 120495], "mapped", [952]], [[120496, 120496], "mapped", [953]], [[120497, 120497], "mapped", [954]], [[120498, 120498], "mapped", [955]], [[120499, 120499], "mapped", [956]], [[120500, 120500], "mapped", [957]], [[120501, 120501], "mapped", [958]], [[120502, 120502], "mapped", [959]], [[120503, 120503], "mapped", [960]], [[120504, 120504], "mapped", [961]], [[120505, 120505], "mapped", [952]], [[120506, 120506], "mapped", [963]], [[120507, 120507], "mapped", [964]], [[120508, 120508], "mapped", [965]], [[120509, 120509], "mapped", [966]], [[120510, 120510], "mapped", [967]], [[120511, 120511], "mapped", [968]], [[120512, 120512], "mapped", [969]], [[120513, 120513], "mapped", [8711]], [[120514, 120514], "mapped", [945]], [[120515, 120515], "mapped", [946]], [[120516, 120516], "mapped", [947]], [[120517, 120517], "mapped", [948]], [[120518, 120518], "mapped", [949]], [[120519, 120519], "mapped", [950]], [[120520, 120520], "mapped", [951]], [[120521, 120521], "mapped", [952]], [[120522, 120522], "mapped", [953]], [[120523, 120523], "mapped", [954]], [[120524, 120524], "mapped", [955]], [[120525, 120525], "mapped", [956]], [[120526, 120526], "mapped", [957]], [[120527, 120527], "mapped", [958]], [[120528, 120528], "mapped", [959]], [[120529, 120529], "mapped", [960]], [[120530, 120530], "mapped", [961]], [[120531, 120532], "mapped", [963]], [[120533, 120533], "mapped", [964]], [[120534, 120534], "mapped", [965]], [[120535, 120535], "mapped", [966]], [[120536, 120536], "mapped", [967]], [[120537, 120537], "mapped", [968]], [[120538, 120538], "mapped", [969]], [[120539, 120539], "mapped", [8706]], [[120540, 120540], "mapped", [949]], [[120541, 120541], "mapped", [952]], [[120542, 120542], "mapped", [954]], [[120543, 120543], "mapped", [966]], [[120544, 120544], "mapped", [961]], [[120545, 120545], "mapped", [960]], [[120546, 120546], "mapped", [945]], [[120547, 120547], "mapped", [946]], [[120548, 120548], "mapped", [947]], [[120549, 120549], "mapped", [948]], [[120550, 120550], "mapped", [949]], [[120551, 120551], "mapped", [950]], [[120552, 120552], "mapped", [951]], [[120553, 120553], "mapped", [952]], [[120554, 120554], "mapped", [953]], [[120555, 120555], "mapped", [954]], [[120556, 120556], "mapped", [955]], [[120557, 120557], "mapped", [956]], [[120558, 120558], "mapped", [957]], [[120559, 120559], "mapped", [958]], [[120560, 120560], "mapped", [959]], [[120561, 120561], "mapped", [960]], [[120562, 120562], "mapped", [961]], [[120563, 120563], "mapped", [952]], [[120564, 120564], "mapped", [963]], [[120565, 120565], "mapped", [964]], [[120566, 120566], "mapped", [965]], [[120567, 120567], "mapped", [966]], [[120568, 120568], "mapped", [967]], [[120569, 120569], "mapped", [968]], [[120570, 120570], "mapped", [969]], [[120571, 120571], "mapped", [8711]], [[120572, 120572], "mapped", [945]], [[120573, 120573], "mapped", [946]], [[120574, 120574], "mapped", [947]], [[120575, 120575], "mapped", [948]], [[120576, 120576], "mapped", [949]], [[120577, 120577], "mapped", [950]], [[120578, 120578], "mapped", [951]], [[120579, 120579], "mapped", [952]], [[120580, 120580], "mapped", [953]], [[120581, 120581], "mapped", [954]], [[120582, 120582], "mapped", [955]], [[120583, 120583], "mapped", [956]], [[120584, 120584], "mapped", [957]], [[120585, 120585], "mapped", [958]], [[120586, 120586], "mapped", [959]], [[120587, 120587], "mapped", [960]], [[120588, 120588], "mapped", [961]], [[120589, 120590], "mapped", [963]], [[120591, 120591], "mapped", [964]], [[120592, 120592], "mapped", [965]], [[120593, 120593], "mapped", [966]], [[120594, 120594], "mapped", [967]], [[120595, 120595], "mapped", [968]], [[120596, 120596], "mapped", [969]], [[120597, 120597], "mapped", [8706]], [[120598, 120598], "mapped", [949]], [[120599, 120599], "mapped", [952]], [[120600, 120600], "mapped", [954]], [[120601, 120601], "mapped", [966]], [[120602, 120602], "mapped", [961]], [[120603, 120603], "mapped", [960]], [[120604, 120604], "mapped", [945]], [[120605, 120605], "mapped", [946]], [[120606, 120606], "mapped", [947]], [[120607, 120607], "mapped", [948]], [[120608, 120608], "mapped", [949]], [[120609, 120609], "mapped", [950]], [[120610, 120610], "mapped", [951]], [[120611, 120611], "mapped", [952]], [[120612, 120612], "mapped", [953]], [[120613, 120613], "mapped", [954]], [[120614, 120614], "mapped", [955]], [[120615, 120615], "mapped", [956]], [[120616, 120616], "mapped", [957]], [[120617, 120617], "mapped", [958]], [[120618, 120618], "mapped", [959]], [[120619, 120619], "mapped", [960]], [[120620, 120620], "mapped", [961]], [[120621, 120621], "mapped", [952]], [[120622, 120622], "mapped", [963]], [[120623, 120623], "mapped", [964]], [[120624, 120624], "mapped", [965]], [[120625, 120625], "mapped", [966]], [[120626, 120626], "mapped", [967]], [[120627, 120627], "mapped", [968]], [[120628, 120628], "mapped", [969]], [[120629, 120629], "mapped", [8711]], [[120630, 120630], "mapped", [945]], [[120631, 120631], "mapped", [946]], [[120632, 120632], "mapped", [947]], [[120633, 120633], "mapped", [948]], [[120634, 120634], "mapped", [949]], [[120635, 120635], "mapped", [950]], [[120636, 120636], "mapped", [951]], [[120637, 120637], "mapped", [952]], [[120638, 120638], "mapped", [953]], [[120639, 120639], "mapped", [954]], [[120640, 120640], "mapped", [955]], [[120641, 120641], "mapped", [956]], [[120642, 120642], "mapped", [957]], [[120643, 120643], "mapped", [958]], [[120644, 120644], "mapped", [959]], [[120645, 120645], "mapped", [960]], [[120646, 120646], "mapped", [961]], [[120647, 120648], "mapped", [963]], [[120649, 120649], "mapped", [964]], [[120650, 120650], "mapped", [965]], [[120651, 120651], "mapped", [966]], [[120652, 120652], "mapped", [967]], [[120653, 120653], "mapped", [968]], [[120654, 120654], "mapped", [969]], [[120655, 120655], "mapped", [8706]], [[120656, 120656], "mapped", [949]], [[120657, 120657], "mapped", [952]], [[120658, 120658], "mapped", [954]], [[120659, 120659], "mapped", [966]], [[120660, 120660], "mapped", [961]], [[120661, 120661], "mapped", [960]], [[120662, 120662], "mapped", [945]], [[120663, 120663], "mapped", [946]], [[120664, 120664], "mapped", [947]], [[120665, 120665], "mapped", [948]], [[120666, 120666], "mapped", [949]], [[120667, 120667], "mapped", [950]], [[120668, 120668], "mapped", [951]], [[120669, 120669], "mapped", [952]], [[120670, 120670], "mapped", [953]], [[120671, 120671], "mapped", [954]], [[120672, 120672], "mapped", [955]], [[120673, 120673], "mapped", [956]], [[120674, 120674], "mapped", [957]], [[120675, 120675], "mapped", [958]], [[120676, 120676], "mapped", [959]], [[120677, 120677], "mapped", [960]], [[120678, 120678], "mapped", [961]], [[120679, 120679], "mapped", [952]], [[120680, 120680], "mapped", [963]], [[120681, 120681], "mapped", [964]], [[120682, 120682], "mapped", [965]], [[120683, 120683], "mapped", [966]], [[120684, 120684], "mapped", [967]], [[120685, 120685], "mapped", [968]], [[120686, 120686], "mapped", [969]], [[120687, 120687], "mapped", [8711]], [[120688, 120688], "mapped", [945]], [[120689, 120689], "mapped", [946]], [[120690, 120690], "mapped", [947]], [[120691, 120691], "mapped", [948]], [[120692, 120692], "mapped", [949]], [[120693, 120693], "mapped", [950]], [[120694, 120694], "mapped", [951]], [[120695, 120695], "mapped", [952]], [[120696, 120696], "mapped", [953]], [[120697, 120697], "mapped", [954]], [[120698, 120698], "mapped", [955]], [[120699, 120699], "mapped", [956]], [[120700, 120700], "mapped", [957]], [[120701, 120701], "mapped", [958]], [[120702, 120702], "mapped", [959]], [[120703, 120703], "mapped", [960]], [[120704, 120704], "mapped", [961]], [[120705, 120706], "mapped", [963]], [[120707, 120707], "mapped", [964]], [[120708, 120708], "mapped", [965]], [[120709, 120709], "mapped", [966]], [[120710, 120710], "mapped", [967]], [[120711, 120711], "mapped", [968]], [[120712, 120712], "mapped", [969]], [[120713, 120713], "mapped", [8706]], [[120714, 120714], "mapped", [949]], [[120715, 120715], "mapped", [952]], [[120716, 120716], "mapped", [954]], [[120717, 120717], "mapped", [966]], [[120718, 120718], "mapped", [961]], [[120719, 120719], "mapped", [960]], [[120720, 120720], "mapped", [945]], [[120721, 120721], "mapped", [946]], [[120722, 120722], "mapped", [947]], [[120723, 120723], "mapped", [948]], [[120724, 120724], "mapped", [949]], [[120725, 120725], "mapped", [950]], [[120726, 120726], "mapped", [951]], [[120727, 120727], "mapped", [952]], [[120728, 120728], "mapped", [953]], [[120729, 120729], "mapped", [954]], [[120730, 120730], "mapped", [955]], [[120731, 120731], "mapped", [956]], [[120732, 120732], "mapped", [957]], [[120733, 120733], "mapped", [958]], [[120734, 120734], "mapped", [959]], [[120735, 120735], "mapped", [960]], [[120736, 120736], "mapped", [961]], [[120737, 120737], "mapped", [952]], [[120738, 120738], "mapped", [963]], [[120739, 120739], "mapped", [964]], [[120740, 120740], "mapped", [965]], [[120741, 120741], "mapped", [966]], [[120742, 120742], "mapped", [967]], [[120743, 120743], "mapped", [968]], [[120744, 120744], "mapped", [969]], [[120745, 120745], "mapped", [8711]], [[120746, 120746], "mapped", [945]], [[120747, 120747], "mapped", [946]], [[120748, 120748], "mapped", [947]], [[120749, 120749], "mapped", [948]], [[120750, 120750], "mapped", [949]], [[120751, 120751], "mapped", [950]], [[120752, 120752], "mapped", [951]], [[120753, 120753], "mapped", [952]], [[120754, 120754], "mapped", [953]], [[120755, 120755], "mapped", [954]], [[120756, 120756], "mapped", [955]], [[120757, 120757], "mapped", [956]], [[120758, 120758], "mapped", [957]], [[120759, 120759], "mapped", [958]], [[120760, 120760], "mapped", [959]], [[120761, 120761], "mapped", [960]], [[120762, 120762], "mapped", [961]], [[120763, 120764], "mapped", [963]], [[120765, 120765], "mapped", [964]], [[120766, 120766], "mapped", [965]], [[120767, 120767], "mapped", [966]], [[120768, 120768], "mapped", [967]], [[120769, 120769], "mapped", [968]], [[120770, 120770], "mapped", [969]], [[120771, 120771], "mapped", [8706]], [[120772, 120772], "mapped", [949]], [[120773, 120773], "mapped", [952]], [[120774, 120774], "mapped", [954]], [[120775, 120775], "mapped", [966]], [[120776, 120776], "mapped", [961]], [[120777, 120777], "mapped", [960]], [[120778, 120779], "mapped", [989]], [[120780, 120781], "disallowed"], [[120782, 120782], "mapped", [48]], [[120783, 120783], "mapped", [49]], [[120784, 120784], "mapped", [50]], [[120785, 120785], "mapped", [51]], [[120786, 120786], "mapped", [52]], [[120787, 120787], "mapped", [53]], [[120788, 120788], "mapped", [54]], [[120789, 120789], "mapped", [55]], [[120790, 120790], "mapped", [56]], [[120791, 120791], "mapped", [57]], [[120792, 120792], "mapped", [48]], [[120793, 120793], "mapped", [49]], [[120794, 120794], "mapped", [50]], [[120795, 120795], "mapped", [51]], [[120796, 120796], "mapped", [52]], [[120797, 120797], "mapped", [53]], [[120798, 120798], "mapped", [54]], [[120799, 120799], "mapped", [55]], [[120800, 120800], "mapped", [56]], [[120801, 120801], "mapped", [57]], [[120802, 120802], "mapped", [48]], [[120803, 120803], "mapped", [49]], [[120804, 120804], "mapped", [50]], [[120805, 120805], "mapped", [51]], [[120806, 120806], "mapped", [52]], [[120807, 120807], "mapped", [53]], [[120808, 120808], "mapped", [54]], [[120809, 120809], "mapped", [55]], [[120810, 120810], "mapped", [56]], [[120811, 120811], "mapped", [57]], [[120812, 120812], "mapped", [48]], [[120813, 120813], "mapped", [49]], [[120814, 120814], "mapped", [50]], [[120815, 120815], "mapped", [51]], [[120816, 120816], "mapped", [52]], [[120817, 120817], "mapped", [53]], [[120818, 120818], "mapped", [54]], [[120819, 120819], "mapped", [55]], [[120820, 120820], "mapped", [56]], [[120821, 120821], "mapped", [57]], [[120822, 120822], "mapped", [48]], [[120823, 120823], "mapped", [49]], [[120824, 120824], "mapped", [50]], [[120825, 120825], "mapped", [51]], [[120826, 120826], "mapped", [52]], [[120827, 120827], "mapped", [53]], [[120828, 120828], "mapped", [54]], [[120829, 120829], "mapped", [55]], [[120830, 120830], "mapped", [56]], [[120831, 120831], "mapped", [57]], [[120832, 121343], "valid", [], "NV8"], [[121344, 121398], "valid"], [[121399, 121402], "valid", [], "NV8"], [[121403, 121452], "valid"], [[121453, 121460], "valid", [], "NV8"], [[121461, 121461], "valid"], [[121462, 121475], "valid", [], "NV8"], [[121476, 121476], "valid"], [[121477, 121483], "valid", [], "NV8"], [[121484, 121498], "disallowed"], [[121499, 121503], "valid"], [[121504, 121504], "disallowed"], [[121505, 121519], "valid"], [[121520, 124927], "disallowed"], [[124928, 125124], "valid"], [[125125, 125126], "disallowed"], [[125127, 125135], "valid", [], "NV8"], [[125136, 125142], "valid"], [[125143, 126463], "disallowed"], [[126464, 126464], "mapped", [1575]], [[126465, 126465], "mapped", [1576]], [[126466, 126466], "mapped", [1580]], [[126467, 126467], "mapped", [1583]], [[126468, 126468], "disallowed"], [[126469, 126469], "mapped", [1608]], [[126470, 126470], "mapped", [1586]], [[126471, 126471], "mapped", [1581]], [[126472, 126472], "mapped", [1591]], [[126473, 126473], "mapped", [1610]], [[126474, 126474], "mapped", [1603]], [[126475, 126475], "mapped", [1604]], [[126476, 126476], "mapped", [1605]], [[126477, 126477], "mapped", [1606]], [[126478, 126478], "mapped", [1587]], [[126479, 126479], "mapped", [1593]], [[126480, 126480], "mapped", [1601]], [[126481, 126481], "mapped", [1589]], [[126482, 126482], "mapped", [1602]], [[126483, 126483], "mapped", [1585]], [[126484, 126484], "mapped", [1588]], [[126485, 126485], "mapped", [1578]], [[126486, 126486], "mapped", [1579]], [[126487, 126487], "mapped", [1582]], [[126488, 126488], "mapped", [1584]], [[126489, 126489], "mapped", [1590]], [[126490, 126490], "mapped", [1592]], [[126491, 126491], "mapped", [1594]], [[126492, 126492], "mapped", [1646]], [[126493, 126493], "mapped", [1722]], [[126494, 126494], "mapped", [1697]], [[126495, 126495], "mapped", [1647]], [[126496, 126496], "disallowed"], [[126497, 126497], "mapped", [1576]], [[126498, 126498], "mapped", [1580]], [[126499, 126499], "disallowed"], [[126500, 126500], "mapped", [1607]], [[126501, 126502], "disallowed"], [[126503, 126503], "mapped", [1581]], [[126504, 126504], "disallowed"], [[126505, 126505], "mapped", [1610]], [[126506, 126506], "mapped", [1603]], [[126507, 126507], "mapped", [1604]], [[126508, 126508], "mapped", [1605]], [[126509, 126509], "mapped", [1606]], [[126510, 126510], "mapped", [1587]], [[126511, 126511], "mapped", [1593]], [[126512, 126512], "mapped", [1601]], [[126513, 126513], "mapped", [1589]], [[126514, 126514], "mapped", [1602]], [[126515, 126515], "disallowed"], [[126516, 126516], "mapped", [1588]], [[126517, 126517], "mapped", [1578]], [[126518, 126518], "mapped", [1579]], [[126519, 126519], "mapped", [1582]], [[126520, 126520], "disallowed"], [[126521, 126521], "mapped", [1590]], [[126522, 126522], "disallowed"], [[126523, 126523], "mapped", [1594]], [[126524, 126529], "disallowed"], [[126530, 126530], "mapped", [1580]], [[126531, 126534], "disallowed"], [[126535, 126535], "mapped", [1581]], [[126536, 126536], "disallowed"], [[126537, 126537], "mapped", [1610]], [[126538, 126538], "disallowed"], [[126539, 126539], "mapped", [1604]], [[126540, 126540], "disallowed"], [[126541, 126541], "mapped", [1606]], [[126542, 126542], "mapped", [1587]], [[126543, 126543], "mapped", [1593]], [[126544, 126544], "disallowed"], [[126545, 126545], "mapped", [1589]], [[126546, 126546], "mapped", [1602]], [[126547, 126547], "disallowed"], [[126548, 126548], "mapped", [1588]], [[126549, 126550], "disallowed"], [[126551, 126551], "mapped", [1582]], [[126552, 126552], "disallowed"], [[126553, 126553], "mapped", [1590]], [[126554, 126554], "disallowed"], [[126555, 126555], "mapped", [1594]], [[126556, 126556], "disallowed"], [[126557, 126557], "mapped", [1722]], [[126558, 126558], "disallowed"], [[126559, 126559], "mapped", [1647]], [[126560, 126560], "disallowed"], [[126561, 126561], "mapped", [1576]], [[126562, 126562], "mapped", [1580]], [[126563, 126563], "disallowed"], [[126564, 126564], "mapped", [1607]], [[126565, 126566], "disallowed"], [[126567, 126567], "mapped", [1581]], [[126568, 126568], "mapped", [1591]], [[126569, 126569], "mapped", [1610]], [[126570, 126570], "mapped", [1603]], [[126571, 126571], "disallowed"], [[126572, 126572], "mapped", [1605]], [[126573, 126573], "mapped", [1606]], [[126574, 126574], "mapped", [1587]], [[126575, 126575], "mapped", [1593]], [[126576, 126576], "mapped", [1601]], [[126577, 126577], "mapped", [1589]], [[126578, 126578], "mapped", [1602]], [[126579, 126579], "disallowed"], [[126580, 126580], "mapped", [1588]], [[126581, 126581], "mapped", [1578]], [[126582, 126582], "mapped", [1579]], [[126583, 126583], "mapped", [1582]], [[126584, 126584], "disallowed"], [[126585, 126585], "mapped", [1590]], [[126586, 126586], "mapped", [1592]], [[126587, 126587], "mapped", [1594]], [[126588, 126588], "mapped", [1646]], [[126589, 126589], "disallowed"], [[126590, 126590], "mapped", [1697]], [[126591, 126591], "disallowed"], [[126592, 126592], "mapped", [1575]], [[126593, 126593], "mapped", [1576]], [[126594, 126594], "mapped", [1580]], [[126595, 126595], "mapped", [1583]], [[126596, 126596], "mapped", [1607]], [[126597, 126597], "mapped", [1608]], [[126598, 126598], "mapped", [1586]], [[126599, 126599], "mapped", [1581]], [[126600, 126600], "mapped", [1591]], [[126601, 126601], "mapped", [1610]], [[126602, 126602], "disallowed"], [[126603, 126603], "mapped", [1604]], [[126604, 126604], "mapped", [1605]], [[126605, 126605], "mapped", [1606]], [[126606, 126606], "mapped", [1587]], [[126607, 126607], "mapped", [1593]], [[126608, 126608], "mapped", [1601]], [[126609, 126609], "mapped", [1589]], [[126610, 126610], "mapped", [1602]], [[126611, 126611], "mapped", [1585]], [[126612, 126612], "mapped", [1588]], [[126613, 126613], "mapped", [1578]], [[126614, 126614], "mapped", [1579]], [[126615, 126615], "mapped", [1582]], [[126616, 126616], "mapped", [1584]], [[126617, 126617], "mapped", [1590]], [[126618, 126618], "mapped", [1592]], [[126619, 126619], "mapped", [1594]], [[126620, 126624], "disallowed"], [[126625, 126625], "mapped", [1576]], [[126626, 126626], "mapped", [1580]], [[126627, 126627], "mapped", [1583]], [[126628, 126628], "disallowed"], [[126629, 126629], "mapped", [1608]], [[126630, 126630], "mapped", [1586]], [[126631, 126631], "mapped", [1581]], [[126632, 126632], "mapped", [1591]], [[126633, 126633], "mapped", [1610]], [[126634, 126634], "disallowed"], [[126635, 126635], "mapped", [1604]], [[126636, 126636], "mapped", [1605]], [[126637, 126637], "mapped", [1606]], [[126638, 126638], "mapped", [1587]], [[126639, 126639], "mapped", [1593]], [[126640, 126640], "mapped", [1601]], [[126641, 126641], "mapped", [1589]], [[126642, 126642], "mapped", [1602]], [[126643, 126643], "mapped", [1585]], [[126644, 126644], "mapped", [1588]], [[126645, 126645], "mapped", [1578]], [[126646, 126646], "mapped", [1579]], [[126647, 126647], "mapped", [1582]], [[126648, 126648], "mapped", [1584]], [[126649, 126649], "mapped", [1590]], [[126650, 126650], "mapped", [1592]], [[126651, 126651], "mapped", [1594]], [[126652, 126703], "disallowed"], [[126704, 126705], "valid", [], "NV8"], [[126706, 126975], "disallowed"], [[126976, 127019], "valid", [], "NV8"], [[127020, 127023], "disallowed"], [[127024, 127123], "valid", [], "NV8"], [[127124, 127135], "disallowed"], [[127136, 127150], "valid", [], "NV8"], [[127151, 127152], "disallowed"], [[127153, 127166], "valid", [], "NV8"], [[127167, 127167], "valid", [], "NV8"], [[127168, 127168], "disallowed"], [[127169, 127183], "valid", [], "NV8"], [[127184, 127184], "disallowed"], [[127185, 127199], "valid", [], "NV8"], [[127200, 127221], "valid", [], "NV8"], [[127222, 127231], "disallowed"], [[127232, 127232], "disallowed"], [[127233, 127233], "disallowed_STD3_mapped", [48, 44]], [[127234, 127234], "disallowed_STD3_mapped", [49, 44]], [[127235, 127235], "disallowed_STD3_mapped", [50, 44]], [[127236, 127236], "disallowed_STD3_mapped", [51, 44]], [[127237, 127237], "disallowed_STD3_mapped", [52, 44]], [[127238, 127238], "disallowed_STD3_mapped", [53, 44]], [[127239, 127239], "disallowed_STD3_mapped", [54, 44]], [[127240, 127240], "disallowed_STD3_mapped", [55, 44]], [[127241, 127241], "disallowed_STD3_mapped", [56, 44]], [[127242, 127242], "disallowed_STD3_mapped", [57, 44]], [[127243, 127244], "valid", [], "NV8"], [[127245, 127247], "disallowed"], [[127248, 127248], "disallowed_STD3_mapped", [40, 97, 41]], [[127249, 127249], "disallowed_STD3_mapped", [40, 98, 41]], [[127250, 127250], "disallowed_STD3_mapped", [40, 99, 41]], [[127251, 127251], "disallowed_STD3_mapped", [40, 100, 41]], [[127252, 127252], "disallowed_STD3_mapped", [40, 101, 41]], [[127253, 127253], "disallowed_STD3_mapped", [40, 102, 41]], [[127254, 127254], "disallowed_STD3_mapped", [40, 103, 41]], [[127255, 127255], "disallowed_STD3_mapped", [40, 104, 41]], [[127256, 127256], "disallowed_STD3_mapped", [40, 105, 41]], [[127257, 127257], "disallowed_STD3_mapped", [40, 106, 41]], [[127258, 127258], "disallowed_STD3_mapped", [40, 107, 41]], [[127259, 127259], "disallowed_STD3_mapped", [40, 108, 41]], [[127260, 127260], "disallowed_STD3_mapped", [40, 109, 41]], [[127261, 127261], "disallowed_STD3_mapped", [40, 110, 41]], [[127262, 127262], "disallowed_STD3_mapped", [40, 111, 41]], [[127263, 127263], "disallowed_STD3_mapped", [40, 112, 41]], [[127264, 127264], "disallowed_STD3_mapped", [40, 113, 41]], [[127265, 127265], "disallowed_STD3_mapped", [40, 114, 41]], [[127266, 127266], "disallowed_STD3_mapped", [40, 115, 41]], [[127267, 127267], "disallowed_STD3_mapped", [40, 116, 41]], [[127268, 127268], "disallowed_STD3_mapped", [40, 117, 41]], [[127269, 127269], "disallowed_STD3_mapped", [40, 118, 41]], [[127270, 127270], "disallowed_STD3_mapped", [40, 119, 41]], [[127271, 127271], "disallowed_STD3_mapped", [40, 120, 41]], [[127272, 127272], "disallowed_STD3_mapped", [40, 121, 41]], [[127273, 127273], "disallowed_STD3_mapped", [40, 122, 41]], [[127274, 127274], "mapped", [12308, 115, 12309]], [[127275, 127275], "mapped", [99]], [[127276, 127276], "mapped", [114]], [[127277, 127277], "mapped", [99, 100]], [[127278, 127278], "mapped", [119, 122]], [[127279, 127279], "disallowed"], [[127280, 127280], "mapped", [97]], [[127281, 127281], "mapped", [98]], [[127282, 127282], "mapped", [99]], [[127283, 127283], "mapped", [100]], [[127284, 127284], "mapped", [101]], [[127285, 127285], "mapped", [102]], [[127286, 127286], "mapped", [103]], [[127287, 127287], "mapped", [104]], [[127288, 127288], "mapped", [105]], [[127289, 127289], "mapped", [106]], [[127290, 127290], "mapped", [107]], [[127291, 127291], "mapped", [108]], [[127292, 127292], "mapped", [109]], [[127293, 127293], "mapped", [110]], [[127294, 127294], "mapped", [111]], [[127295, 127295], "mapped", [112]], [[127296, 127296], "mapped", [113]], [[127297, 127297], "mapped", [114]], [[127298, 127298], "mapped", [115]], [[127299, 127299], "mapped", [116]], [[127300, 127300], "mapped", [117]], [[127301, 127301], "mapped", [118]], [[127302, 127302], "mapped", [119]], [[127303, 127303], "mapped", [120]], [[127304, 127304], "mapped", [121]], [[127305, 127305], "mapped", [122]], [[127306, 127306], "mapped", [104, 118]], [[127307, 127307], "mapped", [109, 118]], [[127308, 127308], "mapped", [115, 100]], [[127309, 127309], "mapped", [115, 115]], [[127310, 127310], "mapped", [112, 112, 118]], [[127311, 127311], "mapped", [119, 99]], [[127312, 127318], "valid", [], "NV8"], [[127319, 127319], "valid", [], "NV8"], [[127320, 127326], "valid", [], "NV8"], [[127327, 127327], "valid", [], "NV8"], [[127328, 127337], "valid", [], "NV8"], [[127338, 127338], "mapped", [109, 99]], [[127339, 127339], "mapped", [109, 100]], [[127340, 127343], "disallowed"], [[127344, 127352], "valid", [], "NV8"], [[127353, 127353], "valid", [], "NV8"], [[127354, 127354], "valid", [], "NV8"], [[127355, 127356], "valid", [], "NV8"], [[127357, 127358], "valid", [], "NV8"], [[127359, 127359], "valid", [], "NV8"], [[127360, 127369], "valid", [], "NV8"], [[127370, 127373], "valid", [], "NV8"], [[127374, 127375], "valid", [], "NV8"], [[127376, 127376], "mapped", [100, 106]], [[127377, 127386], "valid", [], "NV8"], [[127387, 127461], "disallowed"], [[127462, 127487], "valid", [], "NV8"], [[127488, 127488], "mapped", [12411, 12363]], [[127489, 127489], "mapped", [12467, 12467]], [[127490, 127490], "mapped", [12469]], [[127491, 127503], "disallowed"], [[127504, 127504], "mapped", [25163]], [[127505, 127505], "mapped", [23383]], [[127506, 127506], "mapped", [21452]], [[127507, 127507], "mapped", [12487]], [[127508, 127508], "mapped", [20108]], [[127509, 127509], "mapped", [22810]], [[127510, 127510], "mapped", [35299]], [[127511, 127511], "mapped", [22825]], [[127512, 127512], "mapped", [20132]], [[127513, 127513], "mapped", [26144]], [[127514, 127514], "mapped", [28961]], [[127515, 127515], "mapped", [26009]], [[127516, 127516], "mapped", [21069]], [[127517, 127517], "mapped", [24460]], [[127518, 127518], "mapped", [20877]], [[127519, 127519], "mapped", [26032]], [[127520, 127520], "mapped", [21021]], [[127521, 127521], "mapped", [32066]], [[127522, 127522], "mapped", [29983]], [[127523, 127523], "mapped", [36009]], [[127524, 127524], "mapped", [22768]], [[127525, 127525], "mapped", [21561]], [[127526, 127526], "mapped", [28436]], [[127527, 127527], "mapped", [25237]], [[127528, 127528], "mapped", [25429]], [[127529, 127529], "mapped", [19968]], [[127530, 127530], "mapped", [19977]], [[127531, 127531], "mapped", [36938]], [[127532, 127532], "mapped", [24038]], [[127533, 127533], "mapped", [20013]], [[127534, 127534], "mapped", [21491]], [[127535, 127535], "mapped", [25351]], [[127536, 127536], "mapped", [36208]], [[127537, 127537], "mapped", [25171]], [[127538, 127538], "mapped", [31105]], [[127539, 127539], "mapped", [31354]], [[127540, 127540], "mapped", [21512]], [[127541, 127541], "mapped", [28288]], [[127542, 127542], "mapped", [26377]], [[127543, 127543], "mapped", [26376]], [[127544, 127544], "mapped", [30003]], [[127545, 127545], "mapped", [21106]], [[127546, 127546], "mapped", [21942]], [[127547, 127551], "disallowed"], [[127552, 127552], "mapped", [12308, 26412, 12309]], [[127553, 127553], "mapped", [12308, 19977, 12309]], [[127554, 127554], "mapped", [12308, 20108, 12309]], [[127555, 127555], "mapped", [12308, 23433, 12309]], [[127556, 127556], "mapped", [12308, 28857, 12309]], [[127557, 127557], "mapped", [12308, 25171, 12309]], [[127558, 127558], "mapped", [12308, 30423, 12309]], [[127559, 127559], "mapped", [12308, 21213, 12309]], [[127560, 127560], "mapped", [12308, 25943, 12309]], [[127561, 127567], "disallowed"], [[127568, 127568], "mapped", [24471]], [[127569, 127569], "mapped", [21487]], [[127570, 127743], "disallowed"], [[127744, 127776], "valid", [], "NV8"], [[127777, 127788], "valid", [], "NV8"], [[127789, 127791], "valid", [], "NV8"], [[127792, 127797], "valid", [], "NV8"], [[127798, 127798], "valid", [], "NV8"], [[127799, 127868], "valid", [], "NV8"], [[127869, 127869], "valid", [], "NV8"], [[127870, 127871], "valid", [], "NV8"], [[127872, 127891], "valid", [], "NV8"], [[127892, 127903], "valid", [], "NV8"], [[127904, 127940], "valid", [], "NV8"], [[127941, 127941], "valid", [], "NV8"], [[127942, 127946], "valid", [], "NV8"], [[127947, 127950], "valid", [], "NV8"], [[127951, 127955], "valid", [], "NV8"], [[127956, 127967], "valid", [], "NV8"], [[127968, 127984], "valid", [], "NV8"], [[127985, 127991], "valid", [], "NV8"], [[127992, 127999], "valid", [], "NV8"], [[128e3, 128062], "valid", [], "NV8"], [[128063, 128063], "valid", [], "NV8"], [[128064, 128064], "valid", [], "NV8"], [[128065, 128065], "valid", [], "NV8"], [[128066, 128247], "valid", [], "NV8"], [[128248, 128248], "valid", [], "NV8"], [[128249, 128252], "valid", [], "NV8"], [[128253, 128254], "valid", [], "NV8"], [[128255, 128255], "valid", [], "NV8"], [[128256, 128317], "valid", [], "NV8"], [[128318, 128319], "valid", [], "NV8"], [[128320, 128323], "valid", [], "NV8"], [[128324, 128330], "valid", [], "NV8"], [[128331, 128335], "valid", [], "NV8"], [[128336, 128359], "valid", [], "NV8"], [[128360, 128377], "valid", [], "NV8"], [[128378, 128378], "disallowed"], [[128379, 128419], "valid", [], "NV8"], [[128420, 128420], "disallowed"], [[128421, 128506], "valid", [], "NV8"], [[128507, 128511], "valid", [], "NV8"], [[128512, 128512], "valid", [], "NV8"], [[128513, 128528], "valid", [], "NV8"], [[128529, 128529], "valid", [], "NV8"], [[128530, 128532], "valid", [], "NV8"], [[128533, 128533], "valid", [], "NV8"], [[128534, 128534], "valid", [], "NV8"], [[128535, 128535], "valid", [], "NV8"], [[128536, 128536], "valid", [], "NV8"], [[128537, 128537], "valid", [], "NV8"], [[128538, 128538], "valid", [], "NV8"], [[128539, 128539], "valid", [], "NV8"], [[128540, 128542], "valid", [], "NV8"], [[128543, 128543], "valid", [], "NV8"], [[128544, 128549], "valid", [], "NV8"], [[128550, 128551], "valid", [], "NV8"], [[128552, 128555], "valid", [], "NV8"], [[128556, 128556], "valid", [], "NV8"], [[128557, 128557], "valid", [], "NV8"], [[128558, 128559], "valid", [], "NV8"], [[128560, 128563], "valid", [], "NV8"], [[128564, 128564], "valid", [], "NV8"], [[128565, 128576], "valid", [], "NV8"], [[128577, 128578], "valid", [], "NV8"], [[128579, 128580], "valid", [], "NV8"], [[128581, 128591], "valid", [], "NV8"], [[128592, 128639], "valid", [], "NV8"], [[128640, 128709], "valid", [], "NV8"], [[128710, 128719], "valid", [], "NV8"], [[128720, 128720], "valid", [], "NV8"], [[128721, 128735], "disallowed"], [[128736, 128748], "valid", [], "NV8"], [[128749, 128751], "disallowed"], [[128752, 128755], "valid", [], "NV8"], [[128756, 128767], "disallowed"], [[128768, 128883], "valid", [], "NV8"], [[128884, 128895], "disallowed"], [[128896, 128980], "valid", [], "NV8"], [[128981, 129023], "disallowed"], [[129024, 129035], "valid", [], "NV8"], [[129036, 129039], "disallowed"], [[129040, 129095], "valid", [], "NV8"], [[129096, 129103], "disallowed"], [[129104, 129113], "valid", [], "NV8"], [[129114, 129119], "disallowed"], [[129120, 129159], "valid", [], "NV8"], [[129160, 129167], "disallowed"], [[129168, 129197], "valid", [], "NV8"], [[129198, 129295], "disallowed"], [[129296, 129304], "valid", [], "NV8"], [[129305, 129407], "disallowed"], [[129408, 129412], "valid", [], "NV8"], [[129413, 129471], "disallowed"], [[129472, 129472], "valid", [], "NV8"], [[129473, 131069], "disallowed"], [[131070, 131071], "disallowed"], [[131072, 173782], "valid"], [[173783, 173823], "disallowed"], [[173824, 177972], "valid"], [[177973, 177983], "disallowed"], [[177984, 178205], "valid"], [[178206, 178207], "disallowed"], [[178208, 183969], "valid"], [[183970, 194559], "disallowed"], [[194560, 194560], "mapped", [20029]], [[194561, 194561], "mapped", [20024]], [[194562, 194562], "mapped", [20033]], [[194563, 194563], "mapped", [131362]], [[194564, 194564], "mapped", [20320]], [[194565, 194565], "mapped", [20398]], [[194566, 194566], "mapped", [20411]], [[194567, 194567], "mapped", [20482]], [[194568, 194568], "mapped", [20602]], [[194569, 194569], "mapped", [20633]], [[194570, 194570], "mapped", [20711]], [[194571, 194571], "mapped", [20687]], [[194572, 194572], "mapped", [13470]], [[194573, 194573], "mapped", [132666]], [[194574, 194574], "mapped", [20813]], [[194575, 194575], "mapped", [20820]], [[194576, 194576], "mapped", [20836]], [[194577, 194577], "mapped", [20855]], [[194578, 194578], "mapped", [132380]], [[194579, 194579], "mapped", [13497]], [[194580, 194580], "mapped", [20839]], [[194581, 194581], "mapped", [20877]], [[194582, 194582], "mapped", [132427]], [[194583, 194583], "mapped", [20887]], [[194584, 194584], "mapped", [20900]], [[194585, 194585], "mapped", [20172]], [[194586, 194586], "mapped", [20908]], [[194587, 194587], "mapped", [20917]], [[194588, 194588], "mapped", [168415]], [[194589, 194589], "mapped", [20981]], [[194590, 194590], "mapped", [20995]], [[194591, 194591], "mapped", [13535]], [[194592, 194592], "mapped", [21051]], [[194593, 194593], "mapped", [21062]], [[194594, 194594], "mapped", [21106]], [[194595, 194595], "mapped", [21111]], [[194596, 194596], "mapped", [13589]], [[194597, 194597], "mapped", [21191]], [[194598, 194598], "mapped", [21193]], [[194599, 194599], "mapped", [21220]], [[194600, 194600], "mapped", [21242]], [[194601, 194601], "mapped", [21253]], [[194602, 194602], "mapped", [21254]], [[194603, 194603], "mapped", [21271]], [[194604, 194604], "mapped", [21321]], [[194605, 194605], "mapped", [21329]], [[194606, 194606], "mapped", [21338]], [[194607, 194607], "mapped", [21363]], [[194608, 194608], "mapped", [21373]], [[194609, 194611], "mapped", [21375]], [[194612, 194612], "mapped", [133676]], [[194613, 194613], "mapped", [28784]], [[194614, 194614], "mapped", [21450]], [[194615, 194615], "mapped", [21471]], [[194616, 194616], "mapped", [133987]], [[194617, 194617], "mapped", [21483]], [[194618, 194618], "mapped", [21489]], [[194619, 194619], "mapped", [21510]], [[194620, 194620], "mapped", [21662]], [[194621, 194621], "mapped", [21560]], [[194622, 194622], "mapped", [21576]], [[194623, 194623], "mapped", [21608]], [[194624, 194624], "mapped", [21666]], [[194625, 194625], "mapped", [21750]], [[194626, 194626], "mapped", [21776]], [[194627, 194627], "mapped", [21843]], [[194628, 194628], "mapped", [21859]], [[194629, 194630], "mapped", [21892]], [[194631, 194631], "mapped", [21913]], [[194632, 194632], "mapped", [21931]], [[194633, 194633], "mapped", [21939]], [[194634, 194634], "mapped", [21954]], [[194635, 194635], "mapped", [22294]], [[194636, 194636], "mapped", [22022]], [[194637, 194637], "mapped", [22295]], [[194638, 194638], "mapped", [22097]], [[194639, 194639], "mapped", [22132]], [[194640, 194640], "mapped", [20999]], [[194641, 194641], "mapped", [22766]], [[194642, 194642], "mapped", [22478]], [[194643, 194643], "mapped", [22516]], [[194644, 194644], "mapped", [22541]], [[194645, 194645], "mapped", [22411]], [[194646, 194646], "mapped", [22578]], [[194647, 194647], "mapped", [22577]], [[194648, 194648], "mapped", [22700]], [[194649, 194649], "mapped", [136420]], [[194650, 194650], "mapped", [22770]], [[194651, 194651], "mapped", [22775]], [[194652, 194652], "mapped", [22790]], [[194653, 194653], "mapped", [22810]], [[194654, 194654], "mapped", [22818]], [[194655, 194655], "mapped", [22882]], [[194656, 194656], "mapped", [136872]], [[194657, 194657], "mapped", [136938]], [[194658, 194658], "mapped", [23020]], [[194659, 194659], "mapped", [23067]], [[194660, 194660], "mapped", [23079]], [[194661, 194661], "mapped", [23e3]], [[194662, 194662], "mapped", [23142]], [[194663, 194663], "mapped", [14062]], [[194664, 194664], "disallowed"], [[194665, 194665], "mapped", [23304]], [[194666, 194667], "mapped", [23358]], [[194668, 194668], "mapped", [137672]], [[194669, 194669], "mapped", [23491]], [[194670, 194670], "mapped", [23512]], [[194671, 194671], "mapped", [23527]], [[194672, 194672], "mapped", [23539]], [[194673, 194673], "mapped", [138008]], [[194674, 194674], "mapped", [23551]], [[194675, 194675], "mapped", [23558]], [[194676, 194676], "disallowed"], [[194677, 194677], "mapped", [23586]], [[194678, 194678], "mapped", [14209]], [[194679, 194679], "mapped", [23648]], [[194680, 194680], "mapped", [23662]], [[194681, 194681], "mapped", [23744]], [[194682, 194682], "mapped", [23693]], [[194683, 194683], "mapped", [138724]], [[194684, 194684], "mapped", [23875]], [[194685, 194685], "mapped", [138726]], [[194686, 194686], "mapped", [23918]], [[194687, 194687], "mapped", [23915]], [[194688, 194688], "mapped", [23932]], [[194689, 194689], "mapped", [24033]], [[194690, 194690], "mapped", [24034]], [[194691, 194691], "mapped", [14383]], [[194692, 194692], "mapped", [24061]], [[194693, 194693], "mapped", [24104]], [[194694, 194694], "mapped", [24125]], [[194695, 194695], "mapped", [24169]], [[194696, 194696], "mapped", [14434]], [[194697, 194697], "mapped", [139651]], [[194698, 194698], "mapped", [14460]], [[194699, 194699], "mapped", [24240]], [[194700, 194700], "mapped", [24243]], [[194701, 194701], "mapped", [24246]], [[194702, 194702], "mapped", [24266]], [[194703, 194703], "mapped", [172946]], [[194704, 194704], "mapped", [24318]], [[194705, 194706], "mapped", [140081]], [[194707, 194707], "mapped", [33281]], [[194708, 194709], "mapped", [24354]], [[194710, 194710], "mapped", [14535]], [[194711, 194711], "mapped", [144056]], [[194712, 194712], "mapped", [156122]], [[194713, 194713], "mapped", [24418]], [[194714, 194714], "mapped", [24427]], [[194715, 194715], "mapped", [14563]], [[194716, 194716], "mapped", [24474]], [[194717, 194717], "mapped", [24525]], [[194718, 194718], "mapped", [24535]], [[194719, 194719], "mapped", [24569]], [[194720, 194720], "mapped", [24705]], [[194721, 194721], "mapped", [14650]], [[194722, 194722], "mapped", [14620]], [[194723, 194723], "mapped", [24724]], [[194724, 194724], "mapped", [141012]], [[194725, 194725], "mapped", [24775]], [[194726, 194726], "mapped", [24904]], [[194727, 194727], "mapped", [24908]], [[194728, 194728], "mapped", [24910]], [[194729, 194729], "mapped", [24908]], [[194730, 194730], "mapped", [24954]], [[194731, 194731], "mapped", [24974]], [[194732, 194732], "mapped", [25010]], [[194733, 194733], "mapped", [24996]], [[194734, 194734], "mapped", [25007]], [[194735, 194735], "mapped", [25054]], [[194736, 194736], "mapped", [25074]], [[194737, 194737], "mapped", [25078]], [[194738, 194738], "mapped", [25104]], [[194739, 194739], "mapped", [25115]], [[194740, 194740], "mapped", [25181]], [[194741, 194741], "mapped", [25265]], [[194742, 194742], "mapped", [25300]], [[194743, 194743], "mapped", [25424]], [[194744, 194744], "mapped", [142092]], [[194745, 194745], "mapped", [25405]], [[194746, 194746], "mapped", [25340]], [[194747, 194747], "mapped", [25448]], [[194748, 194748], "mapped", [25475]], [[194749, 194749], "mapped", [25572]], [[194750, 194750], "mapped", [142321]], [[194751, 194751], "mapped", [25634]], [[194752, 194752], "mapped", [25541]], [[194753, 194753], "mapped", [25513]], [[194754, 194754], "mapped", [14894]], [[194755, 194755], "mapped", [25705]], [[194756, 194756], "mapped", [25726]], [[194757, 194757], "mapped", [25757]], [[194758, 194758], "mapped", [25719]], [[194759, 194759], "mapped", [14956]], [[194760, 194760], "mapped", [25935]], [[194761, 194761], "mapped", [25964]], [[194762, 194762], "mapped", [143370]], [[194763, 194763], "mapped", [26083]], [[194764, 194764], "mapped", [26360]], [[194765, 194765], "mapped", [26185]], [[194766, 194766], "mapped", [15129]], [[194767, 194767], "mapped", [26257]], [[194768, 194768], "mapped", [15112]], [[194769, 194769], "mapped", [15076]], [[194770, 194770], "mapped", [20882]], [[194771, 194771], "mapped", [20885]], [[194772, 194772], "mapped", [26368]], [[194773, 194773], "mapped", [26268]], [[194774, 194774], "mapped", [32941]], [[194775, 194775], "mapped", [17369]], [[194776, 194776], "mapped", [26391]], [[194777, 194777], "mapped", [26395]], [[194778, 194778], "mapped", [26401]], [[194779, 194779], "mapped", [26462]], [[194780, 194780], "mapped", [26451]], [[194781, 194781], "mapped", [144323]], [[194782, 194782], "mapped", [15177]], [[194783, 194783], "mapped", [26618]], [[194784, 194784], "mapped", [26501]], [[194785, 194785], "mapped", [26706]], [[194786, 194786], "mapped", [26757]], [[194787, 194787], "mapped", [144493]], [[194788, 194788], "mapped", [26766]], [[194789, 194789], "mapped", [26655]], [[194790, 194790], "mapped", [26900]], [[194791, 194791], "mapped", [15261]], [[194792, 194792], "mapped", [26946]], [[194793, 194793], "mapped", [27043]], [[194794, 194794], "mapped", [27114]], [[194795, 194795], "mapped", [27304]], [[194796, 194796], "mapped", [145059]], [[194797, 194797], "mapped", [27355]], [[194798, 194798], "mapped", [15384]], [[194799, 194799], "mapped", [27425]], [[194800, 194800], "mapped", [145575]], [[194801, 194801], "mapped", [27476]], [[194802, 194802], "mapped", [15438]], [[194803, 194803], "mapped", [27506]], [[194804, 194804], "mapped", [27551]], [[194805, 194805], "mapped", [27578]], [[194806, 194806], "mapped", [27579]], [[194807, 194807], "mapped", [146061]], [[194808, 194808], "mapped", [138507]], [[194809, 194809], "mapped", [146170]], [[194810, 194810], "mapped", [27726]], [[194811, 194811], "mapped", [146620]], [[194812, 194812], "mapped", [27839]], [[194813, 194813], "mapped", [27853]], [[194814, 194814], "mapped", [27751]], [[194815, 194815], "mapped", [27926]], [[194816, 194816], "mapped", [27966]], [[194817, 194817], "mapped", [28023]], [[194818, 194818], "mapped", [27969]], [[194819, 194819], "mapped", [28009]], [[194820, 194820], "mapped", [28024]], [[194821, 194821], "mapped", [28037]], [[194822, 194822], "mapped", [146718]], [[194823, 194823], "mapped", [27956]], [[194824, 194824], "mapped", [28207]], [[194825, 194825], "mapped", [28270]], [[194826, 194826], "mapped", [15667]], [[194827, 194827], "mapped", [28363]], [[194828, 194828], "mapped", [28359]], [[194829, 194829], "mapped", [147153]], [[194830, 194830], "mapped", [28153]], [[194831, 194831], "mapped", [28526]], [[194832, 194832], "mapped", [147294]], [[194833, 194833], "mapped", [147342]], [[194834, 194834], "mapped", [28614]], [[194835, 194835], "mapped", [28729]], [[194836, 194836], "mapped", [28702]], [[194837, 194837], "mapped", [28699]], [[194838, 194838], "mapped", [15766]], [[194839, 194839], "mapped", [28746]], [[194840, 194840], "mapped", [28797]], [[194841, 194841], "mapped", [28791]], [[194842, 194842], "mapped", [28845]], [[194843, 194843], "mapped", [132389]], [[194844, 194844], "mapped", [28997]], [[194845, 194845], "mapped", [148067]], [[194846, 194846], "mapped", [29084]], [[194847, 194847], "disallowed"], [[194848, 194848], "mapped", [29224]], [[194849, 194849], "mapped", [29237]], [[194850, 194850], "mapped", [29264]], [[194851, 194851], "mapped", [149e3]], [[194852, 194852], "mapped", [29312]], [[194853, 194853], "mapped", [29333]], [[194854, 194854], "mapped", [149301]], [[194855, 194855], "mapped", [149524]], [[194856, 194856], "mapped", [29562]], [[194857, 194857], "mapped", [29579]], [[194858, 194858], "mapped", [16044]], [[194859, 194859], "mapped", [29605]], [[194860, 194861], "mapped", [16056]], [[194862, 194862], "mapped", [29767]], [[194863, 194863], "mapped", [29788]], [[194864, 194864], "mapped", [29809]], [[194865, 194865], "mapped", [29829]], [[194866, 194866], "mapped", [29898]], [[194867, 194867], "mapped", [16155]], [[194868, 194868], "mapped", [29988]], [[194869, 194869], "mapped", [150582]], [[194870, 194870], "mapped", [30014]], [[194871, 194871], "mapped", [150674]], [[194872, 194872], "mapped", [30064]], [[194873, 194873], "mapped", [139679]], [[194874, 194874], "mapped", [30224]], [[194875, 194875], "mapped", [151457]], [[194876, 194876], "mapped", [151480]], [[194877, 194877], "mapped", [151620]], [[194878, 194878], "mapped", [16380]], [[194879, 194879], "mapped", [16392]], [[194880, 194880], "mapped", [30452]], [[194881, 194881], "mapped", [151795]], [[194882, 194882], "mapped", [151794]], [[194883, 194883], "mapped", [151833]], [[194884, 194884], "mapped", [151859]], [[194885, 194885], "mapped", [30494]], [[194886, 194887], "mapped", [30495]], [[194888, 194888], "mapped", [30538]], [[194889, 194889], "mapped", [16441]], [[194890, 194890], "mapped", [30603]], [[194891, 194891], "mapped", [16454]], [[194892, 194892], "mapped", [16534]], [[194893, 194893], "mapped", [152605]], [[194894, 194894], "mapped", [30798]], [[194895, 194895], "mapped", [30860]], [[194896, 194896], "mapped", [30924]], [[194897, 194897], "mapped", [16611]], [[194898, 194898], "mapped", [153126]], [[194899, 194899], "mapped", [31062]], [[194900, 194900], "mapped", [153242]], [[194901, 194901], "mapped", [153285]], [[194902, 194902], "mapped", [31119]], [[194903, 194903], "mapped", [31211]], [[194904, 194904], "mapped", [16687]], [[194905, 194905], "mapped", [31296]], [[194906, 194906], "mapped", [31306]], [[194907, 194907], "mapped", [31311]], [[194908, 194908], "mapped", [153980]], [[194909, 194910], "mapped", [154279]], [[194911, 194911], "disallowed"], [[194912, 194912], "mapped", [16898]], [[194913, 194913], "mapped", [154539]], [[194914, 194914], "mapped", [31686]], [[194915, 194915], "mapped", [31689]], [[194916, 194916], "mapped", [16935]], [[194917, 194917], "mapped", [154752]], [[194918, 194918], "mapped", [31954]], [[194919, 194919], "mapped", [17056]], [[194920, 194920], "mapped", [31976]], [[194921, 194921], "mapped", [31971]], [[194922, 194922], "mapped", [32e3]], [[194923, 194923], "mapped", [155526]], [[194924, 194924], "mapped", [32099]], [[194925, 194925], "mapped", [17153]], [[194926, 194926], "mapped", [32199]], [[194927, 194927], "mapped", [32258]], [[194928, 194928], "mapped", [32325]], [[194929, 194929], "mapped", [17204]], [[194930, 194930], "mapped", [156200]], [[194931, 194931], "mapped", [156231]], [[194932, 194932], "mapped", [17241]], [[194933, 194933], "mapped", [156377]], [[194934, 194934], "mapped", [32634]], [[194935, 194935], "mapped", [156478]], [[194936, 194936], "mapped", [32661]], [[194937, 194937], "mapped", [32762]], [[194938, 194938], "mapped", [32773]], [[194939, 194939], "mapped", [156890]], [[194940, 194940], "mapped", [156963]], [[194941, 194941], "mapped", [32864]], [[194942, 194942], "mapped", [157096]], [[194943, 194943], "mapped", [32880]], [[194944, 194944], "mapped", [144223]], [[194945, 194945], "mapped", [17365]], [[194946, 194946], "mapped", [32946]], [[194947, 194947], "mapped", [33027]], [[194948, 194948], "mapped", [17419]], [[194949, 194949], "mapped", [33086]], [[194950, 194950], "mapped", [23221]], [[194951, 194951], "mapped", [157607]], [[194952, 194952], "mapped", [157621]], [[194953, 194953], "mapped", [144275]], [[194954, 194954], "mapped", [144284]], [[194955, 194955], "mapped", [33281]], [[194956, 194956], "mapped", [33284]], [[194957, 194957], "mapped", [36766]], [[194958, 194958], "mapped", [17515]], [[194959, 194959], "mapped", [33425]], [[194960, 194960], "mapped", [33419]], [[194961, 194961], "mapped", [33437]], [[194962, 194962], "mapped", [21171]], [[194963, 194963], "mapped", [33457]], [[194964, 194964], "mapped", [33459]], [[194965, 194965], "mapped", [33469]], [[194966, 194966], "mapped", [33510]], [[194967, 194967], "mapped", [158524]], [[194968, 194968], "mapped", [33509]], [[194969, 194969], "mapped", [33565]], [[194970, 194970], "mapped", [33635]], [[194971, 194971], "mapped", [33709]], [[194972, 194972], "mapped", [33571]], [[194973, 194973], "mapped", [33725]], [[194974, 194974], "mapped", [33767]], [[194975, 194975], "mapped", [33879]], [[194976, 194976], "mapped", [33619]], [[194977, 194977], "mapped", [33738]], [[194978, 194978], "mapped", [33740]], [[194979, 194979], "mapped", [33756]], [[194980, 194980], "mapped", [158774]], [[194981, 194981], "mapped", [159083]], [[194982, 194982], "mapped", [158933]], [[194983, 194983], "mapped", [17707]], [[194984, 194984], "mapped", [34033]], [[194985, 194985], "mapped", [34035]], [[194986, 194986], "mapped", [34070]], [[194987, 194987], "mapped", [160714]], [[194988, 194988], "mapped", [34148]], [[194989, 194989], "mapped", [159532]], [[194990, 194990], "mapped", [17757]], [[194991, 194991], "mapped", [17761]], [[194992, 194992], "mapped", [159665]], [[194993, 194993], "mapped", [159954]], [[194994, 194994], "mapped", [17771]], [[194995, 194995], "mapped", [34384]], [[194996, 194996], "mapped", [34396]], [[194997, 194997], "mapped", [34407]], [[194998, 194998], "mapped", [34409]], [[194999, 194999], "mapped", [34473]], [[195e3, 195e3], "mapped", [34440]], [[195001, 195001], "mapped", [34574]], [[195002, 195002], "mapped", [34530]], [[195003, 195003], "mapped", [34681]], [[195004, 195004], "mapped", [34600]], [[195005, 195005], "mapped", [34667]], [[195006, 195006], "mapped", [34694]], [[195007, 195007], "disallowed"], [[195008, 195008], "mapped", [34785]], [[195009, 195009], "mapped", [34817]], [[195010, 195010], "mapped", [17913]], [[195011, 195011], "mapped", [34912]], [[195012, 195012], "mapped", [34915]], [[195013, 195013], "mapped", [161383]], [[195014, 195014], "mapped", [35031]], [[195015, 195015], "mapped", [35038]], [[195016, 195016], "mapped", [17973]], [[195017, 195017], "mapped", [35066]], [[195018, 195018], "mapped", [13499]], [[195019, 195019], "mapped", [161966]], [[195020, 195020], "mapped", [162150]], [[195021, 195021], "mapped", [18110]], [[195022, 195022], "mapped", [18119]], [[195023, 195023], "mapped", [35488]], [[195024, 195024], "mapped", [35565]], [[195025, 195025], "mapped", [35722]], [[195026, 195026], "mapped", [35925]], [[195027, 195027], "mapped", [162984]], [[195028, 195028], "mapped", [36011]], [[195029, 195029], "mapped", [36033]], [[195030, 195030], "mapped", [36123]], [[195031, 195031], "mapped", [36215]], [[195032, 195032], "mapped", [163631]], [[195033, 195033], "mapped", [133124]], [[195034, 195034], "mapped", [36299]], [[195035, 195035], "mapped", [36284]], [[195036, 195036], "mapped", [36336]], [[195037, 195037], "mapped", [133342]], [[195038, 195038], "mapped", [36564]], [[195039, 195039], "mapped", [36664]], [[195040, 195040], "mapped", [165330]], [[195041, 195041], "mapped", [165357]], [[195042, 195042], "mapped", [37012]], [[195043, 195043], "mapped", [37105]], [[195044, 195044], "mapped", [37137]], [[195045, 195045], "mapped", [165678]], [[195046, 195046], "mapped", [37147]], [[195047, 195047], "mapped", [37432]], [[195048, 195048], "mapped", [37591]], [[195049, 195049], "mapped", [37592]], [[195050, 195050], "mapped", [37500]], [[195051, 195051], "mapped", [37881]], [[195052, 195052], "mapped", [37909]], [[195053, 195053], "mapped", [166906]], [[195054, 195054], "mapped", [38283]], [[195055, 195055], "mapped", [18837]], [[195056, 195056], "mapped", [38327]], [[195057, 195057], "mapped", [167287]], [[195058, 195058], "mapped", [18918]], [[195059, 195059], "mapped", [38595]], [[195060, 195060], "mapped", [23986]], [[195061, 195061], "mapped", [38691]], [[195062, 195062], "mapped", [168261]], [[195063, 195063], "mapped", [168474]], [[195064, 195064], "mapped", [19054]], [[195065, 195065], "mapped", [19062]], [[195066, 195066], "mapped", [38880]], [[195067, 195067], "mapped", [168970]], [[195068, 195068], "mapped", [19122]], [[195069, 195069], "mapped", [169110]], [[195070, 195071], "mapped", [38923]], [[195072, 195072], "mapped", [38953]], [[195073, 195073], "mapped", [169398]], [[195074, 195074], "mapped", [39138]], [[195075, 195075], "mapped", [19251]], [[195076, 195076], "mapped", [39209]], [[195077, 195077], "mapped", [39335]], [[195078, 195078], "mapped", [39362]], [[195079, 195079], "mapped", [39422]], [[195080, 195080], "mapped", [19406]], [[195081, 195081], "mapped", [170800]], [[195082, 195082], "mapped", [39698]], [[195083, 195083], "mapped", [4e4]], [[195084, 195084], "mapped", [40189]], [[195085, 195085], "mapped", [19662]], [[195086, 195086], "mapped", [19693]], [[195087, 195087], "mapped", [40295]], [[195088, 195088], "mapped", [172238]], [[195089, 195089], "mapped", [19704]], [[195090, 195090], "mapped", [172293]], [[195091, 195091], "mapped", [172558]], [[195092, 195092], "mapped", [172689]], [[195093, 195093], "mapped", [40635]], [[195094, 195094], "mapped", [19798]], [[195095, 195095], "mapped", [40697]], [[195096, 195096], "mapped", [40702]], [[195097, 195097], "mapped", [40709]], [[195098, 195098], "mapped", [40719]], [[195099, 195099], "mapped", [40726]], [[195100, 195100], "mapped", [40763]], [[195101, 195101], "mapped", [173568]], [[195102, 196605], "disallowed"], [[196606, 196607], "disallowed"], [[196608, 262141], "disallowed"], [[262142, 262143], "disallowed"], [[262144, 327677], "disallowed"], [[327678, 327679], "disallowed"], [[327680, 393213], "disallowed"], [[393214, 393215], "disallowed"], [[393216, 458749], "disallowed"], [[458750, 458751], "disallowed"], [[458752, 524285], "disallowed"], [[524286, 524287], "disallowed"], [[524288, 589821], "disallowed"], [[589822, 589823], "disallowed"], [[589824, 655357], "disallowed"], [[655358, 655359], "disallowed"], [[655360, 720893], "disallowed"], [[720894, 720895], "disallowed"], [[720896, 786429], "disallowed"], [[786430, 786431], "disallowed"], [[786432, 851965], "disallowed"], [[851966, 851967], "disallowed"], [[851968, 917501], "disallowed"], [[917502, 917503], "disallowed"], [[917504, 917504], "disallowed"], [[917505, 917505], "disallowed"], [[917506, 917535], "disallowed"], [[917536, 917631], "disallowed"], [[917632, 917759], "disallowed"], [[917760, 917999], "ignored"], [[918e3, 983037], "disallowed"], [[983038, 983039], "disallowed"], [[983040, 1048573], "disallowed"], [[1048574, 1048575], "disallowed"], [[1048576, 1114109], "disallowed"], [[1114110, 1114111], "disallowed"]];
  }
});

// node_modules/cross-fetch/node_modules/tr46/index.js
var require_tr46 = __commonJS({
  "node_modules/cross-fetch/node_modules/tr46/index.js"(exports2, module2) {
    "use strict";
    var punycode = require("punycode"), mappingTable = require_mappingTable(), PROCESSING_OPTIONS = {
      TRANSITIONAL: 0,
      NONTRANSITIONAL: 1
    };
    function normalize2(str2) {
      return str2.split("\0").map(function(s2) {
        return s2.normalize("NFC");
      }).join("\0");
    }
    function findStatus(val) {
      for (var start = 0, end = mappingTable.length - 1; start <= end; ) {
        var mid = Math.floor((start + end) / 2), target = mappingTable[mid];
        if (target[0][0] <= val && target[0][1] >= val)
          return target;
        target[0][0] > val ? end = mid - 1 : start = mid + 1;
      }
      return null;
    }
    var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
    function countSymbols(string3) {
      return string3.replace(regexAstralSymbols, "_").length;
    }
    function mapChars(domain_name, useSTD3, processing_option) {
      for (var hasError = !1, processed = "", len = countSymbols(domain_name), i = 0; i < len; ++i) {
        var codePoint = domain_name.codePointAt(i), status = findStatus(codePoint);
        switch (status[1]) {
          case "disallowed":
            hasError = !0, processed += String.fromCodePoint(codePoint);
            break;
          case "ignored":
            break;
          case "mapped":
            processed += String.fromCodePoint.apply(String, status[2]);
            break;
          case "deviation":
            processing_option === PROCESSING_OPTIONS.TRANSITIONAL ? processed += String.fromCodePoint.apply(String, status[2]) : processed += String.fromCodePoint(codePoint);
            break;
          case "valid":
            processed += String.fromCodePoint(codePoint);
            break;
          case "disallowed_STD3_mapped":
            useSTD3 ? (hasError = !0, processed += String.fromCodePoint(codePoint)) : processed += String.fromCodePoint.apply(String, status[2]);
            break;
          case "disallowed_STD3_valid":
            useSTD3 && (hasError = !0), processed += String.fromCodePoint(codePoint);
            break;
        }
      }
      return {
        string: processed,
        error: hasError
      };
    }
    var combiningMarksRegex = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;
    function validateLabel(label, processing_option) {
      label.substr(0, 4) === "xn--" && (label = punycode.toUnicode(label), processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL);
      var error = !1;
      (normalize2(label) !== label || label[3] === "-" && label[4] === "-" || label[0] === "-" || label[label.length - 1] === "-" || label.indexOf(".") !== -1 || label.search(combiningMarksRegex) === 0) && (error = !0);
      for (var len = countSymbols(label), i = 0; i < len; ++i) {
        var status = findStatus(label.codePointAt(i));
        if (processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== "valid" || processing === PROCESSING_OPTIONS.NONTRANSITIONAL && status[1] !== "valid" && status[1] !== "deviation") {
          error = !0;
          break;
        }
      }
      return {
        label,
        error
      };
    }
    function processing(domain_name, useSTD3, processing_option) {
      var result = mapChars(domain_name, useSTD3, processing_option);
      result.string = normalize2(result.string);
      for (var labels = result.string.split("."), i = 0; i < labels.length; ++i)
        try {
          var validation = validateLabel(labels[i]);
          labels[i] = validation.label, result.error = result.error || validation.error;
        } catch {
          result.error = !0;
        }
      return {
        string: labels.join("."),
        error: result.error
      };
    }
    module2.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {
      var result = processing(domain_name, useSTD3, processing_option), labels = result.string.split(".");
      if (labels = labels.map(function(l) {
        try {
          return punycode.toASCII(l);
        } catch {
          return result.error = !0, l;
        }
      }), verifyDnsLength) {
        var total = labels.slice(0, labels.length - 1).join(".").length;
        (total.length > 253 || total.length === 0) && (result.error = !0);
        for (var i = 0; i < labels.length; ++i)
          if (labels.length > 63 || labels.length === 0) {
            result.error = !0;
            break;
          }
      }
      return result.error ? null : labels.join(".");
    };
    module2.exports.toUnicode = function(domain_name, useSTD3) {
      var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);
      return {
        domain: result.string,
        error: result.error
      };
    };
    module2.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;
  }
});

// node_modules/cross-fetch/node_modules/whatwg-url/lib/url-state-machine.js
var require_url_state_machine = __commonJS({
  "node_modules/cross-fetch/node_modules/whatwg-url/lib/url-state-machine.js"(exports2, module2) {
    "use strict";
    var punycode = require("punycode"), tr46 = require_tr46(), specialSchemes = {
      ftp: 21,
      file: null,
      gopher: 70,
      http: 80,
      https: 443,
      ws: 80,
      wss: 443
    }, failure = Symbol("failure");
    function countSymbols(str2) {
      return punycode.ucs2.decode(str2).length;
    }
    function at(input, idx) {
      let c = input[idx];
      return isNaN(c) ? void 0 : String.fromCodePoint(c);
    }
    function isASCIIDigit(c) {
      return c >= 48 && c <= 57;
    }
    function isASCIIAlpha(c) {
      return c >= 65 && c <= 90 || c >= 97 && c <= 122;
    }
    function isASCIIAlphanumeric(c) {
      return isASCIIAlpha(c) || isASCIIDigit(c);
    }
    function isASCIIHex(c) {
      return isASCIIDigit(c) || c >= 65 && c <= 70 || c >= 97 && c <= 102;
    }
    function isSingleDot(buffer2) {
      return buffer2 === "." || buffer2.toLowerCase() === "%2e";
    }
    function isDoubleDot(buffer2) {
      return buffer2 = buffer2.toLowerCase(), buffer2 === ".." || buffer2 === "%2e." || buffer2 === ".%2e" || buffer2 === "%2e%2e";
    }
    function isWindowsDriveLetterCodePoints(cp1, cp2) {
      return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);
    }
    function isWindowsDriveLetterString(string3) {
      return string3.length === 2 && isASCIIAlpha(string3.codePointAt(0)) && (string3[1] === ":" || string3[1] === "|");
    }
    function isNormalizedWindowsDriveLetterString(string3) {
      return string3.length === 2 && isASCIIAlpha(string3.codePointAt(0)) && string3[1] === ":";
    }
    function containsForbiddenHostCodePoint(string3) {
      return string3.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
    }
    function containsForbiddenHostCodePointExcludingPercent(string3) {
      return string3.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
    }
    function isSpecialScheme(scheme) {
      return specialSchemes[scheme] !== void 0;
    }
    function isSpecial(url) {
      return isSpecialScheme(url.scheme);
    }
    function defaultPort(scheme) {
      return specialSchemes[scheme];
    }
    function percentEncode(c) {
      let hex = c.toString(16).toUpperCase();
      return hex.length === 1 && (hex = "0" + hex), "%" + hex;
    }
    function utf8PercentEncode(c) {
      let buf = new Buffer(c), str2 = "";
      for (let i = 0; i < buf.length; ++i)
        str2 += percentEncode(buf[i]);
      return str2;
    }
    function utf8PercentDecode(str2) {
      let input = new Buffer(str2), output = [];
      for (let i = 0; i < input.length; ++i)
        input[i] !== 37 ? output.push(input[i]) : input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2]) ? (output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16)), i += 2) : output.push(input[i]);
      return new Buffer(output).toString();
    }
    function isC0ControlPercentEncode(c) {
      return c <= 31 || c > 126;
    }
    var extraPathPercentEncodeSet = /* @__PURE__ */ new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
    function isPathPercentEncode(c) {
      return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);
    }
    var extraUserinfoPercentEncodeSet = /* @__PURE__ */ new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
    function isUserinfoPercentEncode(c) {
      return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);
    }
    function percentEncodeChar(c, encodeSetPredicate) {
      let cStr = String.fromCodePoint(c);
      return encodeSetPredicate(c) ? utf8PercentEncode(cStr) : cStr;
    }
    function parseIPv4Number(input) {
      let R = 10;
      return input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x" ? (input = input.substring(2), R = 16) : input.length >= 2 && input.charAt(0) === "0" && (input = input.substring(1), R = 8), input === "" ? 0 : (R === 10 ? /[^0-9]/ : R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/).test(input) ? failure : parseInt(input, R);
    }
    function parseIPv4(input) {
      let parts = input.split(".");
      if (parts[parts.length - 1] === "" && parts.length > 1 && parts.pop(), parts.length > 4)
        return input;
      let numbers = [];
      for (let part of parts) {
        if (part === "")
          return input;
        let n = parseIPv4Number(part);
        if (n === failure)
          return input;
        numbers.push(n);
      }
      for (let i = 0; i < numbers.length - 1; ++i)
        if (numbers[i] > 255)
          return failure;
      if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length))
        return failure;
      let ipv4 = numbers.pop(), counter = 0;
      for (let n of numbers)
        ipv4 += n * Math.pow(256, 3 - counter), ++counter;
      return ipv4;
    }
    function serializeIPv4(address) {
      let output = "", n = address;
      for (let i = 1; i <= 4; ++i)
        output = String(n % 256) + output, i !== 4 && (output = "." + output), n = Math.floor(n / 256);
      return output;
    }
    function parseIPv6(input) {
      let address = [0, 0, 0, 0, 0, 0, 0, 0], pieceIndex = 0, compress = null, pointer = 0;
      if (input = punycode.ucs2.decode(input), input[pointer] === 58) {
        if (input[pointer + 1] !== 58)
          return failure;
        pointer += 2, ++pieceIndex, compress = pieceIndex;
      }
      for (; pointer < input.length; ) {
        if (pieceIndex === 8)
          return failure;
        if (input[pointer] === 58) {
          if (compress !== null)
            return failure;
          ++pointer, ++pieceIndex, compress = pieceIndex;
          continue;
        }
        let value = 0, length = 0;
        for (; length < 4 && isASCIIHex(input[pointer]); )
          value = value * 16 + parseInt(at(input, pointer), 16), ++pointer, ++length;
        if (input[pointer] === 46) {
          if (length === 0 || (pointer -= length, pieceIndex > 6))
            return failure;
          let numbersSeen = 0;
          for (; input[pointer] !== void 0; ) {
            let ipv4Piece = null;
            if (numbersSeen > 0)
              if (input[pointer] === 46 && numbersSeen < 4)
                ++pointer;
              else
                return failure;
            if (!isASCIIDigit(input[pointer]))
              return failure;
            for (; isASCIIDigit(input[pointer]); ) {
              let number2 = parseInt(at(input, pointer));
              if (ipv4Piece === null)
                ipv4Piece = number2;
              else {
                if (ipv4Piece === 0)
                  return failure;
                ipv4Piece = ipv4Piece * 10 + number2;
              }
              if (ipv4Piece > 255)
                return failure;
              ++pointer;
            }
            address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece, ++numbersSeen, (numbersSeen === 2 || numbersSeen === 4) && ++pieceIndex;
          }
          if (numbersSeen !== 4)
            return failure;
          break;
        } else if (input[pointer] === 58) {
          if (++pointer, input[pointer] === void 0)
            return failure;
        } else if (input[pointer] !== void 0)
          return failure;
        address[pieceIndex] = value, ++pieceIndex;
      }
      if (compress !== null) {
        let swaps = pieceIndex - compress;
        for (pieceIndex = 7; pieceIndex !== 0 && swaps > 0; ) {
          let temp = address[compress + swaps - 1];
          address[compress + swaps - 1] = address[pieceIndex], address[pieceIndex] = temp, --pieceIndex, --swaps;
        }
      } else if (compress === null && pieceIndex !== 8)
        return failure;
      return address;
    }
    function serializeIPv6(address) {
      let output = "", compress = findLongestZeroSequence(address).idx, ignore0 = !1;
      for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex)
        if (!(ignore0 && address[pieceIndex] === 0)) {
          if (ignore0 && (ignore0 = !1), compress === pieceIndex) {
            output += pieceIndex === 0 ? "::" : ":", ignore0 = !0;
            continue;
          }
          output += address[pieceIndex].toString(16), pieceIndex !== 7 && (output += ":");
        }
      return output;
    }
    function parseHost(input, isSpecialArg) {
      if (input[0] === "[")
        return input[input.length - 1] !== "]" ? failure : parseIPv6(input.substring(1, input.length - 1));
      if (!isSpecialArg)
        return parseOpaqueHost(input);
      let domain2 = utf8PercentDecode(input), asciiDomain = tr46.toASCII(domain2, !1, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, !1);
      if (asciiDomain === null || containsForbiddenHostCodePoint(asciiDomain))
        return failure;
      let ipv4Host = parseIPv4(asciiDomain);
      return typeof ipv4Host == "number" || ipv4Host === failure ? ipv4Host : asciiDomain;
    }
    function parseOpaqueHost(input) {
      if (containsForbiddenHostCodePointExcludingPercent(input))
        return failure;
      let output = "", decoded = punycode.ucs2.decode(input);
      for (let i = 0; i < decoded.length; ++i)
        output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);
      return output;
    }
    function findLongestZeroSequence(arr) {
      let maxIdx = null, maxLen = 1, currStart = null, currLen = 0;
      for (let i = 0; i < arr.length; ++i)
        arr[i] !== 0 ? (currLen > maxLen && (maxIdx = currStart, maxLen = currLen), currStart = null, currLen = 0) : (currStart === null && (currStart = i), ++currLen);
      return currLen > maxLen && (maxIdx = currStart, maxLen = currLen), {
        idx: maxIdx,
        len: maxLen
      };
    }
    function serializeHost(host) {
      return typeof host == "number" ? serializeIPv4(host) : host instanceof Array ? "[" + serializeIPv6(host) + "]" : host;
    }
    function trimControlChars(url) {
      return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
    }
    function trimTabAndNewline(url) {
      return url.replace(/\u0009|\u000A|\u000D/g, "");
    }
    function shortenPath(url) {
      let path6 = url.path;
      path6.length !== 0 && (url.scheme === "file" && path6.length === 1 && isNormalizedWindowsDriveLetter(path6[0]) || path6.pop());
    }
    function includesCredentials(url) {
      return url.username !== "" || url.password !== "";
    }
    function cannotHaveAUsernamePasswordPort(url) {
      return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";
    }
    function isNormalizedWindowsDriveLetter(string3) {
      return /^[A-Za-z]:$/.test(string3);
    }
    function URLStateMachine(input, base3, encodingOverride, url, stateOverride) {
      if (this.pointer = 0, this.input = input, this.base = base3 || null, this.encodingOverride = encodingOverride || "utf-8", this.stateOverride = stateOverride, this.url = url, this.failure = !1, this.parseError = !1, !this.url) {
        this.url = {
          scheme: "",
          username: "",
          password: "",
          host: null,
          port: null,
          path: [],
          query: null,
          fragment: null,
          cannotBeABaseURL: !1
        };
        let res2 = trimControlChars(this.input);
        res2 !== this.input && (this.parseError = !0), this.input = res2;
      }
      let res = trimTabAndNewline(this.input);
      for (res !== this.input && (this.parseError = !0), this.input = res, this.state = stateOverride || "scheme start", this.buffer = "", this.atFlag = !1, this.arrFlag = !1, this.passwordTokenSeenFlag = !1, this.input = punycode.ucs2.decode(this.input); this.pointer <= this.input.length; ++this.pointer) {
        let c = this.input[this.pointer], cStr = isNaN(c) ? void 0 : String.fromCodePoint(c), ret = this["parse " + this.state](c, cStr);
        if (ret) {
          if (ret === failure) {
            this.failure = !0;
            break;
          }
        } else
          break;
      }
    }
    URLStateMachine.prototype["parse scheme start"] = function(c, cStr) {
      if (isASCIIAlpha(c))
        this.buffer += cStr.toLowerCase(), this.state = "scheme";
      else if (!this.stateOverride)
        this.state = "no scheme", --this.pointer;
      else
        return this.parseError = !0, failure;
      return !0;
    };
    URLStateMachine.prototype["parse scheme"] = function(c, cStr) {
      if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46)
        this.buffer += cStr.toLowerCase();
      else if (c === 58) {
        if (this.stateOverride && (isSpecial(this.url) && !isSpecialScheme(this.buffer) || !isSpecial(this.url) && isSpecialScheme(this.buffer) || (includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file" || this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) || (this.url.scheme = this.buffer, this.buffer = "", this.stateOverride))
          return !1;
        this.url.scheme === "file" ? ((this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) && (this.parseError = !0), this.state = "file") : isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme ? this.state = "special relative or authority" : isSpecial(this.url) ? this.state = "special authority slashes" : this.input[this.pointer + 1] === 47 ? (this.state = "path or authority", ++this.pointer) : (this.url.cannotBeABaseURL = !0, this.url.path.push(""), this.state = "cannot-be-a-base-URL path");
      } else if (!this.stateOverride)
        this.buffer = "", this.state = "no scheme", this.pointer = -1;
      else
        return this.parseError = !0, failure;
      return !0;
    };
    URLStateMachine.prototype["parse no scheme"] = function(c) {
      return this.base === null || this.base.cannotBeABaseURL && c !== 35 ? failure : (this.base.cannotBeABaseURL && c === 35 ? (this.url.scheme = this.base.scheme, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.url.cannotBeABaseURL = !0, this.state = "fragment") : this.base.scheme === "file" ? (this.state = "file", --this.pointer) : (this.state = "relative", --this.pointer), !0);
    };
    URLStateMachine.prototype["parse special relative or authority"] = function(c) {
      return c === 47 && this.input[this.pointer + 1] === 47 ? (this.state = "special authority ignore slashes", ++this.pointer) : (this.parseError = !0, this.state = "relative", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse path or authority"] = function(c) {
      return c === 47 ? this.state = "authority" : (this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse relative"] = function(c) {
      return this.url.scheme = this.base.scheme, isNaN(c) ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = this.base.query) : c === 47 ? this.state = "relative slash" : c === 63 ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = "", this.state = "query") : c === 35 ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.state = "fragment") : isSpecial(this.url) && c === 92 ? (this.parseError = !0, this.state = "relative slash") : (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(0, this.base.path.length - 1), this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse relative slash"] = function(c) {
      return isSpecial(this.url) && (c === 47 || c === 92) ? (c === 92 && (this.parseError = !0), this.state = "special authority ignore slashes") : c === 47 ? this.state = "authority" : (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse special authority slashes"] = function(c) {
      return c === 47 && this.input[this.pointer + 1] === 47 ? (this.state = "special authority ignore slashes", ++this.pointer) : (this.parseError = !0, this.state = "special authority ignore slashes", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse special authority ignore slashes"] = function(c) {
      return c !== 47 && c !== 92 ? (this.state = "authority", --this.pointer) : this.parseError = !0, !0;
    };
    URLStateMachine.prototype["parse authority"] = function(c, cStr) {
      if (c === 64) {
        this.parseError = !0, this.atFlag && (this.buffer = "%40" + this.buffer), this.atFlag = !0;
        let len = countSymbols(this.buffer);
        for (let pointer = 0; pointer < len; ++pointer) {
          let codePoint = this.buffer.codePointAt(pointer);
          if (codePoint === 58 && !this.passwordTokenSeenFlag) {
            this.passwordTokenSeenFlag = !0;
            continue;
          }
          let encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);
          this.passwordTokenSeenFlag ? this.url.password += encodedCodePoints : this.url.username += encodedCodePoints;
        }
        this.buffer = "";
      } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
        if (this.atFlag && this.buffer === "")
          return this.parseError = !0, failure;
        this.pointer -= countSymbols(this.buffer) + 1, this.buffer = "", this.state = "host";
      } else
        this.buffer += cStr;
      return !0;
    };
    URLStateMachine.prototype["parse hostname"] = URLStateMachine.prototype["parse host"] = function(c, cStr) {
      if (this.stateOverride && this.url.scheme === "file")
        --this.pointer, this.state = "file host";
      else if (c === 58 && !this.arrFlag) {
        if (this.buffer === "")
          return this.parseError = !0, failure;
        let host = parseHost(this.buffer, isSpecial(this.url));
        if (host === failure)
          return failure;
        if (this.url.host = host, this.buffer = "", this.state = "port", this.stateOverride === "hostname")
          return !1;
      } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
        if (--this.pointer, isSpecial(this.url) && this.buffer === "")
          return this.parseError = !0, failure;
        if (this.stateOverride && this.buffer === "" && (includesCredentials(this.url) || this.url.port !== null))
          return this.parseError = !0, !1;
        let host = parseHost(this.buffer, isSpecial(this.url));
        if (host === failure)
          return failure;
        if (this.url.host = host, this.buffer = "", this.state = "path start", this.stateOverride)
          return !1;
      } else
        c === 91 ? this.arrFlag = !0 : c === 93 && (this.arrFlag = !1), this.buffer += cStr;
      return !0;
    };
    URLStateMachine.prototype["parse port"] = function(c, cStr) {
      if (isASCIIDigit(c))
        this.buffer += cStr;
      else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {
        if (this.buffer !== "") {
          let port = parseInt(this.buffer);
          if (port > Math.pow(2, 16) - 1)
            return this.parseError = !0, failure;
          this.url.port = port === defaultPort(this.url.scheme) ? null : port, this.buffer = "";
        }
        if (this.stateOverride)
          return !1;
        this.state = "path start", --this.pointer;
      } else
        return this.parseError = !0, failure;
      return !0;
    };
    var fileOtherwiseCodePoints = /* @__PURE__ */ new Set([47, 92, 63, 35]);
    URLStateMachine.prototype["parse file"] = function(c) {
      return this.url.scheme = "file", c === 47 || c === 92 ? (c === 92 && (this.parseError = !0), this.state = "file slash") : this.base !== null && this.base.scheme === "file" ? isNaN(c) ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = this.base.query) : c === 63 ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = "", this.state = "query") : c === 35 ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.state = "fragment") : (this.input.length - this.pointer - 1 === 0 || !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 && !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]) ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), shortenPath(this.url)) : this.parseError = !0, this.state = "path", --this.pointer) : (this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse file slash"] = function(c) {
      return c === 47 || c === 92 ? (c === 92 && (this.parseError = !0), this.state = "file host") : (this.base !== null && this.base.scheme === "file" && (isNormalizedWindowsDriveLetterString(this.base.path[0]) ? this.url.path.push(this.base.path[0]) : this.url.host = this.base.host), this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse file host"] = function(c, cStr) {
      if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35)
        if (--this.pointer, !this.stateOverride && isWindowsDriveLetterString(this.buffer))
          this.parseError = !0, this.state = "path";
        else if (this.buffer === "") {
          if (this.url.host = "", this.stateOverride)
            return !1;
          this.state = "path start";
        } else {
          let host = parseHost(this.buffer, isSpecial(this.url));
          if (host === failure)
            return failure;
          if (host === "localhost" && (host = ""), this.url.host = host, this.stateOverride)
            return !1;
          this.buffer = "", this.state = "path start";
        }
      else
        this.buffer += cStr;
      return !0;
    };
    URLStateMachine.prototype["parse path start"] = function(c) {
      return isSpecial(this.url) ? (c === 92 && (this.parseError = !0), this.state = "path", c !== 47 && c !== 92 && --this.pointer) : !this.stateOverride && c === 63 ? (this.url.query = "", this.state = "query") : !this.stateOverride && c === 35 ? (this.url.fragment = "", this.state = "fragment") : c !== void 0 && (this.state = "path", c !== 47 && --this.pointer), !0;
    };
    URLStateMachine.prototype["parse path"] = function(c) {
      if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {
        if (isSpecial(this.url) && c === 92 && (this.parseError = !0), isDoubleDot(this.buffer) ? (shortenPath(this.url), c !== 47 && !(isSpecial(this.url) && c === 92) && this.url.path.push("")) : isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92) ? this.url.path.push("") : isSingleDot(this.buffer) || (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer) && (this.url.host !== "" && this.url.host !== null && (this.parseError = !0, this.url.host = ""), this.buffer = this.buffer[0] + ":"), this.url.path.push(this.buffer)), this.buffer = "", this.url.scheme === "file" && (c === void 0 || c === 63 || c === 35))
          for (; this.url.path.length > 1 && this.url.path[0] === ""; )
            this.parseError = !0, this.url.path.shift();
        c === 63 && (this.url.query = "", this.state = "query"), c === 35 && (this.url.fragment = "", this.state = "fragment");
      } else
        c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2])) && (this.parseError = !0), this.buffer += percentEncodeChar(c, isPathPercentEncode);
      return !0;
    };
    URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function(c) {
      return c === 63 ? (this.url.query = "", this.state = "query") : c === 35 ? (this.url.fragment = "", this.state = "fragment") : (!isNaN(c) && c !== 37 && (this.parseError = !0), c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2])) && (this.parseError = !0), isNaN(c) || (this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode))), !0;
    };
    URLStateMachine.prototype["parse query"] = function(c, cStr) {
      if (isNaN(c) || !this.stateOverride && c === 35) {
        (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") && (this.encodingOverride = "utf-8");
        let buffer2 = new Buffer(this.buffer);
        for (let i = 0; i < buffer2.length; ++i)
          buffer2[i] < 33 || buffer2[i] > 126 || buffer2[i] === 34 || buffer2[i] === 35 || buffer2[i] === 60 || buffer2[i] === 62 ? this.url.query += percentEncode(buffer2[i]) : this.url.query += String.fromCodePoint(buffer2[i]);
        this.buffer = "", c === 35 && (this.url.fragment = "", this.state = "fragment");
      } else
        c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2])) && (this.parseError = !0), this.buffer += cStr;
      return !0;
    };
    URLStateMachine.prototype["parse fragment"] = function(c) {
      return isNaN(c) || (c === 0 ? this.parseError = !0 : (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2])) && (this.parseError = !0), this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode))), !0;
    };
    function serializeURL(url, excludeFragment) {
      let output = url.scheme + ":";
      if (url.host !== null ? (output += "//", (url.username !== "" || url.password !== "") && (output += url.username, url.password !== "" && (output += ":" + url.password), output += "@"), output += serializeHost(url.host), url.port !== null && (output += ":" + url.port)) : url.host === null && url.scheme === "file" && (output += "//"), url.cannotBeABaseURL)
        output += url.path[0];
      else
        for (let string3 of url.path)
          output += "/" + string3;
      return url.query !== null && (output += "?" + url.query), !excludeFragment && url.fragment !== null && (output += "#" + url.fragment), output;
    }
    function serializeOrigin(tuple) {
      let result = tuple.scheme + "://";
      return result += serializeHost(tuple.host), tuple.port !== null && (result += ":" + tuple.port), result;
    }
    module2.exports.serializeURL = serializeURL;
    module2.exports.serializeURLOrigin = function(url) {
      switch (url.scheme) {
        case "blob":
          try {
            return module2.exports.serializeURLOrigin(module2.exports.parseURL(url.path[0]));
          } catch {
            return "null";
          }
        case "ftp":
        case "gopher":
        case "http":
        case "https":
        case "ws":
        case "wss":
          return serializeOrigin({
            scheme: url.scheme,
            host: url.host,
            port: url.port
          });
        case "file":
          return "file://";
        default:
          return "null";
      }
    };
    module2.exports.basicURLParse = function(input, options2) {
      options2 === void 0 && (options2 = {});
      let usm = new URLStateMachine(input, options2.baseURL, options2.encodingOverride, options2.url, options2.stateOverride);
      return usm.failure ? "failure" : usm.url;
    };
    module2.exports.setTheUsername = function(url, username) {
      url.username = "";
      let decoded = punycode.ucs2.decode(username);
      for (let i = 0; i < decoded.length; ++i)
        url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
    };
    module2.exports.setThePassword = function(url, password) {
      url.password = "";
      let decoded = punycode.ucs2.decode(password);
      for (let i = 0; i < decoded.length; ++i)
        url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
    };
    module2.exports.serializeHost = serializeHost;
    module2.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;
    module2.exports.serializeInteger = function(integer) {
      return String(integer);
    };
    module2.exports.parseURL = function(input, options2) {
      return options2 === void 0 && (options2 = {}), module2.exports.basicURLParse(input, { baseURL: options2.baseURL, encodingOverride: options2.encodingOverride });
    };
  }
});

// node_modules/cross-fetch/node_modules/whatwg-url/lib/URL-impl.js
var require_URL_impl = __commonJS({
  "node_modules/cross-fetch/node_modules/whatwg-url/lib/URL-impl.js"(exports2) {
    "use strict";
    var usm = require_url_state_machine();
    exports2.implementation = class {
      constructor(constructorArgs) {
        let url = constructorArgs[0], base3 = constructorArgs[1], parsedBase = null;
        if (base3 !== void 0 && (parsedBase = usm.basicURLParse(base3), parsedBase === "failure"))
          throw new TypeError("Invalid base URL");
        let parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });
        if (parsedURL === "failure")
          throw new TypeError("Invalid URL");
        this._url = parsedURL;
      }
      get href() {
        return usm.serializeURL(this._url);
      }
      set href(v) {
        let parsedURL = usm.basicURLParse(v);
        if (parsedURL === "failure")
          throw new TypeError("Invalid URL");
        this._url = parsedURL;
      }
      get origin() {
        return usm.serializeURLOrigin(this._url);
      }
      get protocol() {
        return this._url.scheme + ":";
      }
      set protocol(v) {
        usm.basicURLParse(v + ":", { url: this._url, stateOverride: "scheme start" });
      }
      get username() {
        return this._url.username;
      }
      set username(v) {
        usm.cannotHaveAUsernamePasswordPort(this._url) || usm.setTheUsername(this._url, v);
      }
      get password() {
        return this._url.password;
      }
      set password(v) {
        usm.cannotHaveAUsernamePasswordPort(this._url) || usm.setThePassword(this._url, v);
      }
      get host() {
        let url = this._url;
        return url.host === null ? "" : url.port === null ? usm.serializeHost(url.host) : usm.serializeHost(url.host) + ":" + usm.serializeInteger(url.port);
      }
      set host(v) {
        this._url.cannotBeABaseURL || usm.basicURLParse(v, { url: this._url, stateOverride: "host" });
      }
      get hostname() {
        return this._url.host === null ? "" : usm.serializeHost(this._url.host);
      }
      set hostname(v) {
        this._url.cannotBeABaseURL || usm.basicURLParse(v, { url: this._url, stateOverride: "hostname" });
      }
      get port() {
        return this._url.port === null ? "" : usm.serializeInteger(this._url.port);
      }
      set port(v) {
        usm.cannotHaveAUsernamePasswordPort(this._url) || (v === "" ? this._url.port = null : usm.basicURLParse(v, { url: this._url, stateOverride: "port" }));
      }
      get pathname() {
        return this._url.cannotBeABaseURL ? this._url.path[0] : this._url.path.length === 0 ? "" : "/" + this._url.path.join("/");
      }
      set pathname(v) {
        this._url.cannotBeABaseURL || (this._url.path = [], usm.basicURLParse(v, { url: this._url, stateOverride: "path start" }));
      }
      get search() {
        return this._url.query === null || this._url.query === "" ? "" : "?" + this._url.query;
      }
      set search(v) {
        let url = this._url;
        if (v === "") {
          url.query = null;
          return;
        }
        let input = v[0] === "?" ? v.substring(1) : v;
        url.query = "", usm.basicURLParse(input, { url, stateOverride: "query" });
      }
      get hash() {
        return this._url.fragment === null || this._url.fragment === "" ? "" : "#" + this._url.fragment;
      }
      set hash(v) {
        if (v === "") {
          this._url.fragment = null;
          return;
        }
        let input = v[0] === "#" ? v.substring(1) : v;
        this._url.fragment = "", usm.basicURLParse(input, { url: this._url, stateOverride: "fragment" });
      }
      toJSON() {
        return this.href;
      }
    };
  }
});

// node_modules/cross-fetch/node_modules/whatwg-url/lib/URL.js
var require_URL = __commonJS({
  "node_modules/cross-fetch/node_modules/whatwg-url/lib/URL.js"(exports2, module2) {
    "use strict";
    var conversions = require_lib(), utils = require_utils(), Impl = require_URL_impl(), impl = utils.implSymbol;
    function URL2(url) {
      if (!this || this[impl] || !(this instanceof URL2))
        throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
      if (arguments.length < 1)
        throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
      let args = [];
      for (let i = 0; i < arguments.length && i < 2; ++i)
        args[i] = arguments[i];
      args[0] = conversions.USVString(args[0]), args[1] !== void 0 && (args[1] = conversions.USVString(args[1])), module2.exports.setup(this, args);
    }
    URL2.prototype.toJSON = function() {
      if (!this || !module2.exports.is(this))
        throw new TypeError("Illegal invocation");
      let args = [];
      for (let i = 0; i < arguments.length && i < 0; ++i)
        args[i] = arguments[i];
      return this[impl].toJSON.apply(this[impl], args);
    };
    Object.defineProperty(URL2.prototype, "href", {
      get() {
        return this[impl].href;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].href = V;
      },
      enumerable: !0,
      configurable: !0
    });
    URL2.prototype.toString = function() {
      if (!this || !module2.exports.is(this))
        throw new TypeError("Illegal invocation");
      return this.href;
    };
    Object.defineProperty(URL2.prototype, "origin", {
      get() {
        return this[impl].origin;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "protocol", {
      get() {
        return this[impl].protocol;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].protocol = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "username", {
      get() {
        return this[impl].username;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].username = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "password", {
      get() {
        return this[impl].password;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].password = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "host", {
      get() {
        return this[impl].host;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].host = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "hostname", {
      get() {
        return this[impl].hostname;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].hostname = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "port", {
      get() {
        return this[impl].port;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].port = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "pathname", {
      get() {
        return this[impl].pathname;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].pathname = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "search", {
      get() {
        return this[impl].search;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].search = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "hash", {
      get() {
        return this[impl].hash;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].hash = V;
      },
      enumerable: !0,
      configurable: !0
    });
    module2.exports = {
      is(obj) {
        return !!obj && obj[impl] instanceof Impl.implementation;
      },
      create(constructorArgs, privateData) {
        let obj = Object.create(URL2.prototype);
        return this.setup(obj, constructorArgs, privateData), obj;
      },
      setup(obj, constructorArgs, privateData) {
        privateData || (privateData = {}), privateData.wrapper = obj, obj[impl] = new Impl.implementation(constructorArgs, privateData), obj[impl][utils.wrapperSymbol] = obj;
      },
      interface: URL2,
      expose: {
        Window: { URL: URL2 },
        Worker: { URL: URL2 }
      }
    };
  }
});

// node_modules/cross-fetch/node_modules/whatwg-url/lib/public-api.js
var require_public_api = __commonJS({
  "node_modules/cross-fetch/node_modules/whatwg-url/lib/public-api.js"(exports2) {
    "use strict";
    exports2.URL = require_URL().interface;
    exports2.serializeURL = require_url_state_machine().serializeURL;
    exports2.serializeURLOrigin = require_url_state_machine().serializeURLOrigin;
    exports2.basicURLParse = require_url_state_machine().basicURLParse;
    exports2.setTheUsername = require_url_state_machine().setTheUsername;
    exports2.setThePassword = require_url_state_machine().setThePassword;
    exports2.serializeHost = require_url_state_machine().serializeHost;
    exports2.serializeInteger = require_url_state_machine().serializeInteger;
    exports2.parseURL = require_url_state_machine().parseURL;
  }
});

// node_modules/cross-fetch/node_modules/node-fetch/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/cross-fetch/node_modules/node-fetch/lib/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function _interopDefault(ex) {
      return ex && typeof ex == "object" && "default" in ex ? ex.default : ex;
    }
    var Stream = _interopDefault(require("stream")), http7 = _interopDefault(require("http")), Url = _interopDefault(require("url")), whatwgUrl = _interopDefault(require_public_api()), https = _interopDefault(require("https")), zlib = _interopDefault(require("zlib")), Readable = Stream.Readable, BUFFER = Symbol("buffer"), TYPE = Symbol("type"), Blob2 = class {
      constructor() {
        this[TYPE] = "";
        let blobParts = arguments[0], options2 = arguments[1], buffers = [], size = 0;
        if (blobParts) {
          let a = blobParts, length = Number(a.length);
          for (let i = 0; i < length; i++) {
            let element5 = a[i], buffer2;
            element5 instanceof Buffer ? buffer2 = element5 : ArrayBuffer.isView(element5) ? buffer2 = Buffer.from(element5.buffer, element5.byteOffset, element5.byteLength) : element5 instanceof ArrayBuffer ? buffer2 = Buffer.from(element5) : element5 instanceof Blob2 ? buffer2 = element5[BUFFER] : buffer2 = Buffer.from(typeof element5 == "string" ? element5 : String(element5)), size += buffer2.length, buffers.push(buffer2);
          }
        }
        this[BUFFER] = Buffer.concat(buffers);
        let type = options2 && options2.type !== void 0 && String(options2.type).toLowerCase();
        type && !/[^\u0020-\u007E]/.test(type) && (this[TYPE] = type);
      }
      get size() {
        return this[BUFFER].length;
      }
      get type() {
        return this[TYPE];
      }
      text() {
        return Promise.resolve(this[BUFFER].toString());
      }
      arrayBuffer() {
        let buf = this[BUFFER], ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
        return Promise.resolve(ab);
      }
      stream() {
        let readable = new Readable();
        return readable._read = function() {
        }, readable.push(this[BUFFER]), readable.push(null), readable;
      }
      toString() {
        return "[object Blob]";
      }
      slice() {
        let size = this.size, start = arguments[0], end = arguments[1], relativeStart, relativeEnd;
        start === void 0 ? relativeStart = 0 : start < 0 ? relativeStart = Math.max(size + start, 0) : relativeStart = Math.min(start, size), end === void 0 ? relativeEnd = size : end < 0 ? relativeEnd = Math.max(size + end, 0) : relativeEnd = Math.min(end, size);
        let span = Math.max(relativeEnd - relativeStart, 0), slicedBuffer = this[BUFFER].slice(relativeStart, relativeStart + span), blob = new Blob2([], { type: arguments[2] });
        return blob[BUFFER] = slicedBuffer, blob;
      }
    };
    Object.defineProperties(Blob2.prototype, {
      size: { enumerable: !0 },
      type: { enumerable: !0 },
      slice: { enumerable: !0 }
    });
    Object.defineProperty(Blob2.prototype, Symbol.toStringTag, {
      value: "Blob",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    function FetchError(message, type, systemError) {
      Error.call(this, message), this.message = message, this.type = type, systemError && (this.code = this.errno = systemError.code), Error.captureStackTrace(this, this.constructor);
    }
    FetchError.prototype = Object.create(Error.prototype);
    FetchError.prototype.constructor = FetchError;
    FetchError.prototype.name = "FetchError";
    var convert2;
    try {
      convert2 = require("encoding").convert;
    } catch {
    }
    var INTERNALS = Symbol("Body internals"), PassThrough = Stream.PassThrough;
    function Body(body3) {
      var _this = this, _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$size = _ref.size;
      let size = _ref$size === void 0 ? 0 : _ref$size;
      var _ref$timeout = _ref.timeout;
      let timeout = _ref$timeout === void 0 ? 0 : _ref$timeout;
      body3 == null ? body3 = null : isURLSearchParams(body3) ? body3 = Buffer.from(body3.toString()) : isBlob(body3) || Buffer.isBuffer(body3) || (Object.prototype.toString.call(body3) === "[object ArrayBuffer]" ? body3 = Buffer.from(body3) : ArrayBuffer.isView(body3) ? body3 = Buffer.from(body3.buffer, body3.byteOffset, body3.byteLength) : body3 instanceof Stream || (body3 = Buffer.from(String(body3)))), this[INTERNALS] = {
        body: body3,
        disturbed: !1,
        error: null
      }, this.size = size, this.timeout = timeout, body3 instanceof Stream && body3.on("error", function(err) {
        let error = err.name === "AbortError" ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, "system", err);
        _this[INTERNALS].error = error;
      });
    }
    Body.prototype = {
      get body() {
        return this[INTERNALS].body;
      },
      get bodyUsed() {
        return this[INTERNALS].disturbed;
      },
      arrayBuffer() {
        return consumeBody.call(this).then(function(buf) {
          return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
        });
      },
      blob() {
        let ct = this.headers && this.headers.get("content-type") || "";
        return consumeBody.call(this).then(function(buf) {
          return Object.assign(
            new Blob2([], {
              type: ct.toLowerCase()
            }),
            {
              [BUFFER]: buf
            }
          );
        });
      },
      json() {
        var _this2 = this;
        return consumeBody.call(this).then(function(buffer2) {
          try {
            return JSON.parse(buffer2.toString());
          } catch (err) {
            return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, "invalid-json"));
          }
        });
      },
      text() {
        return consumeBody.call(this).then(function(buffer2) {
          return buffer2.toString();
        });
      },
      buffer() {
        return consumeBody.call(this);
      },
      textConverted() {
        var _this3 = this;
        return consumeBody.call(this).then(function(buffer2) {
          return convertBody(buffer2, _this3.headers);
        });
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: !0 },
      bodyUsed: { enumerable: !0 },
      arrayBuffer: { enumerable: !0 },
      blob: { enumerable: !0 },
      json: { enumerable: !0 },
      text: { enumerable: !0 }
    });
    Body.mixIn = function(proto2) {
      for (let name of Object.getOwnPropertyNames(Body.prototype))
        if (!(name in proto2)) {
          let desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
          Object.defineProperty(proto2, name, desc);
        }
    };
    function consumeBody() {
      var _this4 = this;
      if (this[INTERNALS].disturbed)
        return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
      if (this[INTERNALS].disturbed = !0, this[INTERNALS].error)
        return Body.Promise.reject(this[INTERNALS].error);
      let body3 = this.body;
      if (body3 === null)
        return Body.Promise.resolve(Buffer.alloc(0));
      if (isBlob(body3) && (body3 = body3.stream()), Buffer.isBuffer(body3))
        return Body.Promise.resolve(body3);
      if (!(body3 instanceof Stream))
        return Body.Promise.resolve(Buffer.alloc(0));
      let accum = [], accumBytes = 0, abort = !1;
      return new Body.Promise(function(resolve, reject) {
        let resTimeout;
        _this4.timeout && (resTimeout = setTimeout(function() {
          abort = !0, reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, "body-timeout"));
        }, _this4.timeout)), body3.on("error", function(err) {
          err.name === "AbortError" ? (abort = !0, reject(err)) : reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, "system", err));
        }), body3.on("data", function(chunk) {
          if (!(abort || chunk === null)) {
            if (_this4.size && accumBytes + chunk.length > _this4.size) {
              abort = !0, reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, "max-size"));
              return;
            }
            accumBytes += chunk.length, accum.push(chunk);
          }
        }), body3.on("end", function() {
          if (!abort) {
            clearTimeout(resTimeout);
            try {
              resolve(Buffer.concat(accum, accumBytes));
            } catch (err) {
              reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, "system", err));
            }
          }
        });
      });
    }
    function convertBody(buffer2, headers) {
      if (typeof convert2 != "function")
        throw new Error("The package `encoding` must be installed to use the textConverted() function");
      let ct = headers.get("content-type"), charset = "utf-8", res, str2;
      return ct && (res = /charset=([^;]*)/i.exec(ct)), str2 = buffer2.slice(0, 1024).toString(), !res && str2 && (res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str2)), !res && str2 && (res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str2), res || (res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str2), res && res.pop()), res && (res = /charset=(.*)/i.exec(res.pop()))), !res && str2 && (res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str2)), res && (charset = res.pop(), (charset === "gb2312" || charset === "gbk") && (charset = "gb18030")), convert2(buffer2, "UTF-8", charset).toString();
    }
    function isURLSearchParams(obj) {
      return typeof obj != "object" || typeof obj.append != "function" || typeof obj.delete != "function" || typeof obj.get != "function" || typeof obj.getAll != "function" || typeof obj.has != "function" || typeof obj.set != "function" ? !1 : obj.constructor.name === "URLSearchParams" || Object.prototype.toString.call(obj) === "[object URLSearchParams]" || typeof obj.sort == "function";
    }
    function isBlob(obj) {
      return typeof obj == "object" && typeof obj.arrayBuffer == "function" && typeof obj.type == "string" && typeof obj.stream == "function" && typeof obj.constructor == "function" && typeof obj.constructor.name == "string" && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
    }
    function clone(instance) {
      let p1, p2, body3 = instance.body;
      if (instance.bodyUsed)
        throw new Error("cannot clone body after it is used");
      return body3 instanceof Stream && typeof body3.getBoundary != "function" && (p1 = new PassThrough(), p2 = new PassThrough(), body3.pipe(p1), body3.pipe(p2), instance[INTERNALS].body = p1, body3 = p2), body3;
    }
    function extractContentType(body3) {
      return body3 === null ? null : typeof body3 == "string" ? "text/plain;charset=UTF-8" : isURLSearchParams(body3) ? "application/x-www-form-urlencoded;charset=UTF-8" : isBlob(body3) ? body3.type || null : Buffer.isBuffer(body3) || Object.prototype.toString.call(body3) === "[object ArrayBuffer]" || ArrayBuffer.isView(body3) ? null : typeof body3.getBoundary == "function" ? `multipart/form-data;boundary=${body3.getBoundary()}` : body3 instanceof Stream ? null : "text/plain;charset=UTF-8";
    }
    function getTotalBytes(instance) {
      let body3 = instance.body;
      return body3 === null ? 0 : isBlob(body3) ? body3.size : Buffer.isBuffer(body3) ? body3.length : body3 && typeof body3.getLengthSync == "function" && (body3._lengthRetrievers && body3._lengthRetrievers.length == 0 || body3.hasKnownLength && body3.hasKnownLength()) ? body3.getLengthSync() : null;
    }
    function writeToStream(dest, instance) {
      let body3 = instance.body;
      body3 === null ? dest.end() : isBlob(body3) ? body3.stream().pipe(dest) : Buffer.isBuffer(body3) ? (dest.write(body3), dest.end()) : body3.pipe(dest);
    }
    Body.Promise = global.Promise;
    var invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/, invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;
    function validateName(name) {
      if (name = `${name}`, invalidTokenRegex.test(name) || name === "")
        throw new TypeError(`${name} is not a legal HTTP header name`);
    }
    function validateValue(value) {
      if (value = `${value}`, invalidHeaderCharRegex.test(value))
        throw new TypeError(`${value} is not a legal HTTP header value`);
    }
    function find2(map2, name) {
      name = name.toLowerCase();
      for (let key2 in map2)
        if (key2.toLowerCase() === name)
          return key2;
    }
    var MAP = Symbol("map"), Headers2 = class {
      constructor() {
        let init = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
        if (this[MAP] = /* @__PURE__ */ Object.create(null), init instanceof Headers2) {
          let rawHeaders = init.raw(), headerNames = Object.keys(rawHeaders);
          for (let headerName of headerNames)
            for (let value of rawHeaders[headerName])
              this.append(headerName, value);
          return;
        }
        if (init != null)
          if (typeof init == "object") {
            let method = init[Symbol.iterator];
            if (method != null) {
              if (typeof method != "function")
                throw new TypeError("Header pairs must be iterable");
              let pairs = [];
              for (let pair of init) {
                if (typeof pair != "object" || typeof pair[Symbol.iterator] != "function")
                  throw new TypeError("Each header pair must be iterable");
                pairs.push(Array.from(pair));
              }
              for (let pair of pairs) {
                if (pair.length !== 2)
                  throw new TypeError("Each header pair must be a name/value tuple");
                this.append(pair[0], pair[1]);
              }
            } else
              for (let key2 of Object.keys(init)) {
                let value = init[key2];
                this.append(key2, value);
              }
          } else
            throw new TypeError("Provided initializer must be an object");
      }
      get(name) {
        name = `${name}`, validateName(name);
        let key2 = find2(this[MAP], name);
        return key2 === void 0 ? null : this[MAP][key2].join(", ");
      }
      forEach(callback) {
        let thisArg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0, pairs = getHeaders(this), i = 0;
        for (; i < pairs.length; ) {
          var _pairs$i = pairs[i];
          let name = _pairs$i[0], value = _pairs$i[1];
          callback.call(thisArg, value, name, this), pairs = getHeaders(this), i++;
        }
      }
      set(name, value) {
        name = `${name}`, value = `${value}`, validateName(name), validateValue(value);
        let key2 = find2(this[MAP], name);
        this[MAP][key2 !== void 0 ? key2 : name] = [value];
      }
      append(name, value) {
        name = `${name}`, value = `${value}`, validateName(name), validateValue(value);
        let key2 = find2(this[MAP], name);
        key2 !== void 0 ? this[MAP][key2].push(value) : this[MAP][name] = [value];
      }
      has(name) {
        return name = `${name}`, validateName(name), find2(this[MAP], name) !== void 0;
      }
      delete(name) {
        name = `${name}`, validateName(name);
        let key2 = find2(this[MAP], name);
        key2 !== void 0 && delete this[MAP][key2];
      }
      raw() {
        return this[MAP];
      }
      keys() {
        return createHeadersIterator(this, "key");
      }
      values() {
        return createHeadersIterator(this, "value");
      }
      [Symbol.iterator]() {
        return createHeadersIterator(this, "key+value");
      }
    };
    Headers2.prototype.entries = Headers2.prototype[Symbol.iterator];
    Object.defineProperty(Headers2.prototype, Symbol.toStringTag, {
      value: "Headers",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    Object.defineProperties(Headers2.prototype, {
      get: { enumerable: !0 },
      forEach: { enumerable: !0 },
      set: { enumerable: !0 },
      append: { enumerable: !0 },
      has: { enumerable: !0 },
      delete: { enumerable: !0 },
      keys: { enumerable: !0 },
      values: { enumerable: !0 },
      entries: { enumerable: !0 }
    });
    function getHeaders(headers) {
      let kind = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "key+value";
      return Object.keys(headers[MAP]).sort().map(kind === "key" ? function(k) {
        return k.toLowerCase();
      } : kind === "value" ? function(k) {
        return headers[MAP][k].join(", ");
      } : function(k) {
        return [k.toLowerCase(), headers[MAP][k].join(", ")];
      });
    }
    var INTERNAL = Symbol("internal");
    function createHeadersIterator(target, kind) {
      let iterator = Object.create(HeadersIteratorPrototype);
      return iterator[INTERNAL] = {
        target,
        kind,
        index: 0
      }, iterator;
    }
    var HeadersIteratorPrototype = Object.setPrototypeOf({
      next() {
        if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype)
          throw new TypeError("Value of `this` is not a HeadersIterator");
        var _INTERNAL = this[INTERNAL];
        let target = _INTERNAL.target, kind = _INTERNAL.kind, index2 = _INTERNAL.index, values = getHeaders(target, kind), len = values.length;
        return index2 >= len ? {
          value: void 0,
          done: !0
        } : (this[INTERNAL].index = index2 + 1, {
          value: values[index2],
          done: !1
        });
      }
    }, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));
    Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
      value: "HeadersIterator",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    function exportNodeCompatibleHeaders(headers) {
      let obj = Object.assign({ __proto__: null }, headers[MAP]), hostHeaderKey = find2(headers[MAP], "Host");
      return hostHeaderKey !== void 0 && (obj[hostHeaderKey] = obj[hostHeaderKey][0]), obj;
    }
    function createHeadersLenient(obj) {
      let headers = new Headers2();
      for (let name of Object.keys(obj))
        if (!invalidTokenRegex.test(name))
          if (Array.isArray(obj[name]))
            for (let val of obj[name])
              invalidHeaderCharRegex.test(val) || (headers[MAP][name] === void 0 ? headers[MAP][name] = [val] : headers[MAP][name].push(val));
          else
            invalidHeaderCharRegex.test(obj[name]) || (headers[MAP][name] = [obj[name]]);
      return headers;
    }
    var INTERNALS$1 = Symbol("Response internals"), STATUS_CODES = http7.STATUS_CODES, Response5 = class {
      constructor() {
        let body3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        Body.call(this, body3, opts);
        let status = opts.status || 200, headers = new Headers2(opts.headers);
        if (body3 != null && !headers.has("Content-Type")) {
          let contentType = extractContentType(body3);
          contentType && headers.append("Content-Type", contentType);
        }
        this[INTERNALS$1] = {
          url: opts.url,
          status,
          statusText: opts.statusText || STATUS_CODES[status],
          headers,
          counter: opts.counter
        };
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      clone() {
        return new Response5(clone(this), {
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected
        });
      }
    };
    Body.mixIn(Response5.prototype);
    Object.defineProperties(Response5.prototype, {
      url: { enumerable: !0 },
      status: { enumerable: !0 },
      ok: { enumerable: !0 },
      redirected: { enumerable: !0 },
      statusText: { enumerable: !0 },
      headers: { enumerable: !0 },
      clone: { enumerable: !0 }
    });
    Object.defineProperty(Response5.prototype, Symbol.toStringTag, {
      value: "Response",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    var INTERNALS$2 = Symbol("Request internals"), URL2 = Url.URL || whatwgUrl.URL, parse_url = Url.parse, format_url = Url.format;
    function parseURL(urlStr) {
      return /^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr) && (urlStr = new URL2(urlStr).toString()), parse_url(urlStr);
    }
    var streamDestructionSupported = "destroy" in Stream.Readable.prototype;
    function isRequest(input) {
      return typeof input == "object" && typeof input[INTERNALS$2] == "object";
    }
    function isAbortSignal(signal) {
      let proto2 = signal && typeof signal == "object" && Object.getPrototypeOf(signal);
      return !!(proto2 && proto2.constructor.name === "AbortSignal");
    }
    var Request2 = class {
      constructor(input) {
        let init = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, parsedURL;
        isRequest(input) ? parsedURL = parseURL(input.url) : (input && input.href ? parsedURL = parseURL(input.href) : parsedURL = parseURL(`${input}`), input = {});
        let method = init.method || input.method || "GET";
        if (method = method.toUpperCase(), (init.body != null || isRequest(input) && input.body !== null) && (method === "GET" || method === "HEAD"))
          throw new TypeError("Request with GET/HEAD method cannot have body");
        let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;
        Body.call(this, inputBody, {
          timeout: init.timeout || input.timeout || 0,
          size: init.size || input.size || 0
        });
        let headers = new Headers2(init.headers || input.headers || {});
        if (inputBody != null && !headers.has("Content-Type")) {
          let contentType = extractContentType(inputBody);
          contentType && headers.append("Content-Type", contentType);
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init && (signal = init.signal), signal != null && !isAbortSignal(signal))
          throw new TypeError("Expected signal to be an instanceof AbortSignal");
        this[INTERNALS$2] = {
          method,
          redirect: init.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal
        }, this.follow = init.follow !== void 0 ? init.follow : input.follow !== void 0 ? input.follow : 20, this.compress = init.compress !== void 0 ? init.compress : input.compress !== void 0 ? input.compress : !0, this.counter = init.counter || input.counter || 0, this.agent = init.agent || input.agent;
      }
      get method() {
        return this[INTERNALS$2].method;
      }
      get url() {
        return format_url(this[INTERNALS$2].parsedURL);
      }
      get headers() {
        return this[INTERNALS$2].headers;
      }
      get redirect() {
        return this[INTERNALS$2].redirect;
      }
      get signal() {
        return this[INTERNALS$2].signal;
      }
      clone() {
        return new Request2(this);
      }
    };
    Body.mixIn(Request2.prototype);
    Object.defineProperty(Request2.prototype, Symbol.toStringTag, {
      value: "Request",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    Object.defineProperties(Request2.prototype, {
      method: { enumerable: !0 },
      url: { enumerable: !0 },
      headers: { enumerable: !0 },
      redirect: { enumerable: !0 },
      clone: { enumerable: !0 },
      signal: { enumerable: !0 }
    });
    function getNodeRequestOptions(request) {
      let parsedURL = request[INTERNALS$2].parsedURL, headers = new Headers2(request[INTERNALS$2].headers);
      if (headers.has("Accept") || headers.set("Accept", "*/*"), !parsedURL.protocol || !parsedURL.hostname)
        throw new TypeError("Only absolute URLs are supported");
      if (!/^https?:$/.test(parsedURL.protocol))
        throw new TypeError("Only HTTP(S) protocols are supported");
      if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported)
        throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");
      let contentLengthValue = null;
      if (request.body == null && /^(POST|PUT)$/i.test(request.method) && (contentLengthValue = "0"), request.body != null) {
        let totalBytes = getTotalBytes(request);
        typeof totalBytes == "number" && (contentLengthValue = String(totalBytes));
      }
      contentLengthValue && headers.set("Content-Length", contentLengthValue), headers.has("User-Agent") || headers.set("User-Agent", "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"), request.compress && !headers.has("Accept-Encoding") && headers.set("Accept-Encoding", "gzip,deflate");
      let agent = request.agent;
      return typeof agent == "function" && (agent = agent(parsedURL)), !headers.has("Connection") && !agent && headers.set("Connection", "close"), Object.assign({}, parsedURL, {
        method: request.method,
        headers: exportNodeCompatibleHeaders(headers),
        agent
      });
    }
    function AbortError(message) {
      Error.call(this, message), this.type = "aborted", this.message = message, Error.captureStackTrace(this, this.constructor);
    }
    AbortError.prototype = Object.create(Error.prototype);
    AbortError.prototype.constructor = AbortError;
    AbortError.prototype.name = "AbortError";
    var URL$1 = Url.URL || whatwgUrl.URL, PassThrough$1 = Stream.PassThrough, isDomainOrSubdomain = function(destination, original) {
      let orig = new URL$1(original).hostname, dest = new URL$1(destination).hostname;
      return orig === dest || orig[orig.length - dest.length - 1] === "." && orig.endsWith(dest);
    };
    function fetch2(url, opts) {
      if (!fetch2.Promise)
        throw new Error("native promise missing, set fetch.Promise to your favorite alternative");
      return Body.Promise = fetch2.Promise, new fetch2.Promise(function(resolve, reject) {
        let request = new Request2(url, opts), options2 = getNodeRequestOptions(request), send = (options2.protocol === "https:" ? https : http7).request, signal = request.signal, response = null, abort = function() {
          let error = new AbortError("The user aborted a request.");
          reject(error), request.body && request.body instanceof Stream.Readable && request.body.destroy(error), !(!response || !response.body) && response.body.emit("error", error);
        };
        if (signal && signal.aborted) {
          abort();
          return;
        }
        let abortAndFinalize = function() {
          abort(), finalize();
        }, req = send(options2), reqTimeout;
        signal && signal.addEventListener("abort", abortAndFinalize);
        function finalize() {
          req.abort(), signal && signal.removeEventListener("abort", abortAndFinalize), clearTimeout(reqTimeout);
        }
        request.timeout && req.once("socket", function(socket) {
          reqTimeout = setTimeout(function() {
            reject(new FetchError(`network timeout at: ${request.url}`, "request-timeout")), finalize();
          }, request.timeout);
        }), req.on("error", function(err) {
          reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, "system", err)), finalize();
        }), req.on("response", function(res) {
          clearTimeout(reqTimeout);
          let headers = createHeadersLenient(res.headers);
          if (fetch2.isRedirect(res.statusCode)) {
            let location2 = headers.get("Location"), locationURL = null;
            try {
              locationURL = location2 === null ? null : new URL$1(location2, request.url).toString();
            } catch {
              if (request.redirect !== "manual") {
                reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location2}`, "invalid-redirect")), finalize();
                return;
              }
            }
            switch (request.redirect) {
              case "error":
                reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect")), finalize();
                return;
              case "manual":
                if (locationURL !== null)
                  try {
                    headers.set("Location", locationURL);
                  } catch (err) {
                    reject(err);
                  }
                break;
              case "follow":
                if (locationURL === null)
                  break;
                if (request.counter >= request.follow) {
                  reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect")), finalize();
                  return;
                }
                let requestOpts = {
                  headers: new Headers2(request.headers),
                  follow: request.follow,
                  counter: request.counter + 1,
                  agent: request.agent,
                  compress: request.compress,
                  method: request.method,
                  body: request.body,
                  signal: request.signal,
                  timeout: request.timeout,
                  size: request.size
                };
                if (!isDomainOrSubdomain(request.url, locationURL))
                  for (let name of ["authorization", "www-authenticate", "cookie", "cookie2"])
                    requestOpts.headers.delete(name);
                if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
                  reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect")), finalize();
                  return;
                }
                (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === "POST") && (requestOpts.method = "GET", requestOpts.body = void 0, requestOpts.headers.delete("content-length")), resolve(fetch2(new Request2(locationURL, requestOpts))), finalize();
                return;
            }
          }
          res.once("end", function() {
            signal && signal.removeEventListener("abort", abortAndFinalize);
          });
          let body3 = res.pipe(new PassThrough$1()), response_options = {
            url: request.url,
            status: res.statusCode,
            statusText: res.statusMessage,
            headers,
            size: request.size,
            timeout: request.timeout,
            counter: request.counter
          }, codings = headers.get("Content-Encoding");
          if (!request.compress || request.method === "HEAD" || codings === null || res.statusCode === 204 || res.statusCode === 304) {
            response = new Response5(body3, response_options), resolve(response);
            return;
          }
          let zlibOptions = {
            flush: zlib.Z_SYNC_FLUSH,
            finishFlush: zlib.Z_SYNC_FLUSH
          };
          if (codings == "gzip" || codings == "x-gzip") {
            body3 = body3.pipe(zlib.createGunzip(zlibOptions)), response = new Response5(body3, response_options), resolve(response);
            return;
          }
          if (codings == "deflate" || codings == "x-deflate") {
            res.pipe(new PassThrough$1()).once("data", function(chunk) {
              (chunk[0] & 15) === 8 ? body3 = body3.pipe(zlib.createInflate()) : body3 = body3.pipe(zlib.createInflateRaw()), response = new Response5(body3, response_options), resolve(response);
            });
            return;
          }
          if (codings == "br" && typeof zlib.createBrotliDecompress == "function") {
            body3 = body3.pipe(zlib.createBrotliDecompress()), response = new Response5(body3, response_options), resolve(response);
            return;
          }
          response = new Response5(body3, response_options), resolve(response);
        }), writeToStream(req, request);
      });
    }
    fetch2.isRedirect = function(code3) {
      return code3 === 301 || code3 === 302 || code3 === 303 || code3 === 307 || code3 === 308;
    };
    fetch2.Promise = global.Promise;
    module2.exports = exports2 = fetch2;
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    exports2.default = exports2;
    exports2.Headers = Headers2;
    exports2.Request = Request2;
    exports2.Response = Response5;
    exports2.FetchError = FetchError;
  }
});

// node_modules/cross-fetch/dist/node-ponyfill.js
var require_node_ponyfill = __commonJS({
  "node_modules/cross-fetch/dist/node-ponyfill.js"(exports2, module2) {
    var nodeFetch = require_lib2(), realFetch = nodeFetch.default || nodeFetch, fetch2 = function(url, options2) {
      return /^\/\//.test(url) && (url = "https:" + url), realFetch.call(this, url, options2);
    };
    fetch2.ponyfill = !0;
    module2.exports = exports2 = fetch2;
    exports2.fetch = fetch2;
    exports2.Headers = nodeFetch.Headers;
    exports2.Request = nodeFetch.Request;
    exports2.Response = nodeFetch.Response;
    exports2.default = fetch2;
  }
});

// node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS({
  "node_modules/delayed-stream/lib/delayed_stream.js"(exports2, module2) {
    var Stream = require("stream").Stream, util = require("util");
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null, this.dataSize = 0, this.maxDataSize = 1024 * 1024, this.pauseStream = !0, this._maxDataSizeExceeded = !1, this._released = !1, this._bufferedEvents = [];
    }
    util.inherits(DelayedStream, Stream);
    DelayedStream.create = function(source, options2) {
      var delayedStream = new this();
      options2 = options2 || {};
      for (var option2 in options2)
        delayedStream[option2] = options2[option2];
      delayedStream.source = source;
      var realEmit = source.emit;
      return source.emit = function() {
        return delayedStream._handleEmit(arguments), realEmit.apply(source, arguments);
      }, source.on("error", function() {
      }), delayedStream.pauseStream && source.pause(), delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, "readable", {
      configurable: !0,
      enumerable: !0,
      get: function() {
        return this.source.readable;
      }
    });
    DelayedStream.prototype.setEncoding = function() {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function() {
      this._released || this.release(), this.source.resume();
    };
    DelayedStream.prototype.pause = function() {
      this.source.pause();
    };
    DelayedStream.prototype.release = function() {
      this._released = !0, this._bufferedEvents.forEach(function(args) {
        this.emit.apply(this, args);
      }.bind(this)), this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function() {
      var r = Stream.prototype.pipe.apply(this, arguments);
      return this.resume(), r;
    };
    DelayedStream.prototype._handleEmit = function(args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      args[0] === "data" && (this.dataSize += args[1].length, this._checkIfMaxDataSizeExceeded()), this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
      if (!this._maxDataSizeExceeded && !(this.dataSize <= this.maxDataSize)) {
        this._maxDataSizeExceeded = !0;
        var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
        this.emit("error", new Error(message));
      }
    };
  }
});

// node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS({
  "node_modules/combined-stream/lib/combined_stream.js"(exports2, module2) {
    var util = require("util"), Stream = require("stream").Stream, DelayedStream = require_delayed_stream();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = !1, this.readable = !0, this.dataSize = 0, this.maxDataSize = 2 * 1024 * 1024, this.pauseStreams = !0, this._released = !1, this._streams = [], this._currentStream = null, this._insideLoop = !1, this._pendingNext = !1;
    }
    util.inherits(CombinedStream, Stream);
    CombinedStream.create = function(options2) {
      var combinedStream = new this();
      options2 = options2 || {};
      for (var option2 in options2)
        combinedStream[option2] = options2[option2];
      return combinedStream;
    };
    CombinedStream.isStreamLike = function(stream) {
      return typeof stream != "function" && typeof stream != "string" && typeof stream != "boolean" && typeof stream != "number" && !Buffer.isBuffer(stream);
    };
    CombinedStream.prototype.append = function(stream) {
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        if (!(stream instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream, {
            maxDataSize: 1 / 0,
            pauseStream: this.pauseStreams
          });
          stream.on("data", this._checkDataSize.bind(this)), stream = newStream;
        }
        this._handleErrors(stream), this.pauseStreams && stream.pause();
      }
      return this._streams.push(stream), this;
    };
    CombinedStream.prototype.pipe = function(dest, options2) {
      return Stream.prototype.pipe.call(this, dest, options2), this.resume(), dest;
    };
    CombinedStream.prototype._getNext = function() {
      if (this._currentStream = null, this._insideLoop) {
        this._pendingNext = !0;
        return;
      }
      this._insideLoop = !0;
      try {
        do
          this._pendingNext = !1, this._realGetNext();
        while (this._pendingNext);
      } finally {
        this._insideLoop = !1;
      }
    };
    CombinedStream.prototype._realGetNext = function() {
      var stream = this._streams.shift();
      if (typeof stream > "u") {
        this.end();
        return;
      }
      if (typeof stream != "function") {
        this._pipeNext(stream);
        return;
      }
      var getStream = stream;
      getStream(function(stream2) {
        var isStreamLike = CombinedStream.isStreamLike(stream2);
        isStreamLike && (stream2.on("data", this._checkDataSize.bind(this)), this._handleErrors(stream2)), this._pipeNext(stream2);
      }.bind(this));
    };
    CombinedStream.prototype._pipeNext = function(stream) {
      this._currentStream = stream;
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        stream.on("end", this._getNext.bind(this)), stream.pipe(this, { end: !1 });
        return;
      }
      var value = stream;
      this.write(value), this._getNext();
    };
    CombinedStream.prototype._handleErrors = function(stream) {
      var self2 = this;
      stream.on("error", function(err) {
        self2._emitError(err);
      });
    };
    CombinedStream.prototype.write = function(data) {
      this.emit("data", data);
    };
    CombinedStream.prototype.pause = function() {
      !this.pauseStreams || (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == "function" && this._currentStream.pause(), this.emit("pause"));
    };
    CombinedStream.prototype.resume = function() {
      this._released || (this._released = !0, this.writable = !0, this._getNext()), this.pauseStreams && this._currentStream && typeof this._currentStream.resume == "function" && this._currentStream.resume(), this.emit("resume");
    };
    CombinedStream.prototype.end = function() {
      this._reset(), this.emit("end");
    };
    CombinedStream.prototype.destroy = function() {
      this._reset(), this.emit("close");
    };
    CombinedStream.prototype._reset = function() {
      this.writable = !1, this._streams = [], this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function() {
      if (this._updateDataSize(), !(this.dataSize <= this.maxDataSize)) {
        var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
        this._emitError(new Error(message));
      }
    };
    CombinedStream.prototype._updateDataSize = function() {
      this.dataSize = 0;
      var self2 = this;
      this._streams.forEach(function(stream) {
        !stream.dataSize || (self2.dataSize += stream.dataSize);
      }), this._currentStream && this._currentStream.dataSize && (this.dataSize += this._currentStream.dataSize);
    };
    CombinedStream.prototype._emitError = function(err) {
      this._reset(), this.emit("error", err);
    };
  }
});

// node_modules/mime-db/db.json
var require_db = __commonJS({
  "node_modules/mime-db/db.json"(exports2, module2) {
    module2.exports = {
      "application/1d-interleaved-parityfec": {
        source: "iana"
      },
      "application/3gpdash-qoe-report+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/3gpp-ims+xml": {
        source: "iana",
        compressible: !0
      },
      "application/3gpphal+json": {
        source: "iana",
        compressible: !0
      },
      "application/3gpphalforms+json": {
        source: "iana",
        compressible: !0
      },
      "application/a2l": {
        source: "iana"
      },
      "application/ace+cbor": {
        source: "iana"
      },
      "application/activemessage": {
        source: "iana"
      },
      "application/activity+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-costmap+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-costmapfilter+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-directory+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-endpointcost+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-endpointcostparams+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-endpointprop+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-endpointpropparams+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-error+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-networkmap+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-networkmapfilter+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-updatestreamcontrol+json": {
        source: "iana",
        compressible: !0
      },
      "application/alto-updatestreamparams+json": {
        source: "iana",
        compressible: !0
      },
      "application/aml": {
        source: "iana"
      },
      "application/andrew-inset": {
        source: "iana",
        extensions: ["ez"]
      },
      "application/applefile": {
        source: "iana"
      },
      "application/applixware": {
        source: "apache",
        extensions: ["aw"]
      },
      "application/at+jwt": {
        source: "iana"
      },
      "application/atf": {
        source: "iana"
      },
      "application/atfx": {
        source: "iana"
      },
      "application/atom+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["atom"]
      },
      "application/atomcat+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["atomcat"]
      },
      "application/atomdeleted+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["atomdeleted"]
      },
      "application/atomicmail": {
        source: "iana"
      },
      "application/atomsvc+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["atomsvc"]
      },
      "application/atsc-dwd+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["dwd"]
      },
      "application/atsc-dynamic-event-message": {
        source: "iana"
      },
      "application/atsc-held+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["held"]
      },
      "application/atsc-rdt+json": {
        source: "iana",
        compressible: !0
      },
      "application/atsc-rsat+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rsat"]
      },
      "application/atxml": {
        source: "iana"
      },
      "application/auth-policy+xml": {
        source: "iana",
        compressible: !0
      },
      "application/bacnet-xdd+zip": {
        source: "iana",
        compressible: !1
      },
      "application/batch-smtp": {
        source: "iana"
      },
      "application/bdoc": {
        compressible: !1,
        extensions: ["bdoc"]
      },
      "application/beep+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/calendar+json": {
        source: "iana",
        compressible: !0
      },
      "application/calendar+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xcs"]
      },
      "application/call-completion": {
        source: "iana"
      },
      "application/cals-1840": {
        source: "iana"
      },
      "application/captive+json": {
        source: "iana",
        compressible: !0
      },
      "application/cbor": {
        source: "iana"
      },
      "application/cbor-seq": {
        source: "iana"
      },
      "application/cccex": {
        source: "iana"
      },
      "application/ccmp+xml": {
        source: "iana",
        compressible: !0
      },
      "application/ccxml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["ccxml"]
      },
      "application/cdfx+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["cdfx"]
      },
      "application/cdmi-capability": {
        source: "iana",
        extensions: ["cdmia"]
      },
      "application/cdmi-container": {
        source: "iana",
        extensions: ["cdmic"]
      },
      "application/cdmi-domain": {
        source: "iana",
        extensions: ["cdmid"]
      },
      "application/cdmi-object": {
        source: "iana",
        extensions: ["cdmio"]
      },
      "application/cdmi-queue": {
        source: "iana",
        extensions: ["cdmiq"]
      },
      "application/cdni": {
        source: "iana"
      },
      "application/cea": {
        source: "iana"
      },
      "application/cea-2018+xml": {
        source: "iana",
        compressible: !0
      },
      "application/cellml+xml": {
        source: "iana",
        compressible: !0
      },
      "application/cfw": {
        source: "iana"
      },
      "application/city+json": {
        source: "iana",
        compressible: !0
      },
      "application/clr": {
        source: "iana"
      },
      "application/clue+xml": {
        source: "iana",
        compressible: !0
      },
      "application/clue_info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/cms": {
        source: "iana"
      },
      "application/cnrp+xml": {
        source: "iana",
        compressible: !0
      },
      "application/coap-group+json": {
        source: "iana",
        compressible: !0
      },
      "application/coap-payload": {
        source: "iana"
      },
      "application/commonground": {
        source: "iana"
      },
      "application/conference-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/cose": {
        source: "iana"
      },
      "application/cose-key": {
        source: "iana"
      },
      "application/cose-key-set": {
        source: "iana"
      },
      "application/cpl+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["cpl"]
      },
      "application/csrattrs": {
        source: "iana"
      },
      "application/csta+xml": {
        source: "iana",
        compressible: !0
      },
      "application/cstadata+xml": {
        source: "iana",
        compressible: !0
      },
      "application/csvm+json": {
        source: "iana",
        compressible: !0
      },
      "application/cu-seeme": {
        source: "apache",
        extensions: ["cu"]
      },
      "application/cwt": {
        source: "iana"
      },
      "application/cybercash": {
        source: "iana"
      },
      "application/dart": {
        compressible: !0
      },
      "application/dash+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mpd"]
      },
      "application/dash-patch+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mpp"]
      },
      "application/dashdelta": {
        source: "iana"
      },
      "application/davmount+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["davmount"]
      },
      "application/dca-rft": {
        source: "iana"
      },
      "application/dcd": {
        source: "iana"
      },
      "application/dec-dx": {
        source: "iana"
      },
      "application/dialog-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/dicom": {
        source: "iana"
      },
      "application/dicom+json": {
        source: "iana",
        compressible: !0
      },
      "application/dicom+xml": {
        source: "iana",
        compressible: !0
      },
      "application/dii": {
        source: "iana"
      },
      "application/dit": {
        source: "iana"
      },
      "application/dns": {
        source: "iana"
      },
      "application/dns+json": {
        source: "iana",
        compressible: !0
      },
      "application/dns-message": {
        source: "iana"
      },
      "application/docbook+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["dbk"]
      },
      "application/dots+cbor": {
        source: "iana"
      },
      "application/dskpp+xml": {
        source: "iana",
        compressible: !0
      },
      "application/dssc+der": {
        source: "iana",
        extensions: ["dssc"]
      },
      "application/dssc+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xdssc"]
      },
      "application/dvcs": {
        source: "iana"
      },
      "application/ecmascript": {
        source: "iana",
        compressible: !0,
        extensions: ["es", "ecma"]
      },
      "application/edi-consent": {
        source: "iana"
      },
      "application/edi-x12": {
        source: "iana",
        compressible: !1
      },
      "application/edifact": {
        source: "iana",
        compressible: !1
      },
      "application/efi": {
        source: "iana"
      },
      "application/elm+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/elm+xml": {
        source: "iana",
        compressible: !0
      },
      "application/emergencycalldata.cap+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/emergencycalldata.comment+xml": {
        source: "iana",
        compressible: !0
      },
      "application/emergencycalldata.control+xml": {
        source: "iana",
        compressible: !0
      },
      "application/emergencycalldata.deviceinfo+xml": {
        source: "iana",
        compressible: !0
      },
      "application/emergencycalldata.ecall.msd": {
        source: "iana"
      },
      "application/emergencycalldata.providerinfo+xml": {
        source: "iana",
        compressible: !0
      },
      "application/emergencycalldata.serviceinfo+xml": {
        source: "iana",
        compressible: !0
      },
      "application/emergencycalldata.subscriberinfo+xml": {
        source: "iana",
        compressible: !0
      },
      "application/emergencycalldata.veds+xml": {
        source: "iana",
        compressible: !0
      },
      "application/emma+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["emma"]
      },
      "application/emotionml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["emotionml"]
      },
      "application/encaprtp": {
        source: "iana"
      },
      "application/epp+xml": {
        source: "iana",
        compressible: !0
      },
      "application/epub+zip": {
        source: "iana",
        compressible: !1,
        extensions: ["epub"]
      },
      "application/eshop": {
        source: "iana"
      },
      "application/exi": {
        source: "iana",
        extensions: ["exi"]
      },
      "application/expect-ct-report+json": {
        source: "iana",
        compressible: !0
      },
      "application/express": {
        source: "iana",
        extensions: ["exp"]
      },
      "application/fastinfoset": {
        source: "iana"
      },
      "application/fastsoap": {
        source: "iana"
      },
      "application/fdt+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["fdt"]
      },
      "application/fhir+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/fhir+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/fido.trusted-apps+json": {
        compressible: !0
      },
      "application/fits": {
        source: "iana"
      },
      "application/flexfec": {
        source: "iana"
      },
      "application/font-sfnt": {
        source: "iana"
      },
      "application/font-tdpfr": {
        source: "iana",
        extensions: ["pfr"]
      },
      "application/font-woff": {
        source: "iana",
        compressible: !1
      },
      "application/framework-attributes+xml": {
        source: "iana",
        compressible: !0
      },
      "application/geo+json": {
        source: "iana",
        compressible: !0,
        extensions: ["geojson"]
      },
      "application/geo+json-seq": {
        source: "iana"
      },
      "application/geopackage+sqlite3": {
        source: "iana"
      },
      "application/geoxacml+xml": {
        source: "iana",
        compressible: !0
      },
      "application/gltf-buffer": {
        source: "iana"
      },
      "application/gml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["gml"]
      },
      "application/gpx+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["gpx"]
      },
      "application/gxf": {
        source: "apache",
        extensions: ["gxf"]
      },
      "application/gzip": {
        source: "iana",
        compressible: !1,
        extensions: ["gz"]
      },
      "application/h224": {
        source: "iana"
      },
      "application/held+xml": {
        source: "iana",
        compressible: !0
      },
      "application/hjson": {
        extensions: ["hjson"]
      },
      "application/http": {
        source: "iana"
      },
      "application/hyperstudio": {
        source: "iana",
        extensions: ["stk"]
      },
      "application/ibe-key-request+xml": {
        source: "iana",
        compressible: !0
      },
      "application/ibe-pkg-reply+xml": {
        source: "iana",
        compressible: !0
      },
      "application/ibe-pp-data": {
        source: "iana"
      },
      "application/iges": {
        source: "iana"
      },
      "application/im-iscomposing+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/index": {
        source: "iana"
      },
      "application/index.cmd": {
        source: "iana"
      },
      "application/index.obj": {
        source: "iana"
      },
      "application/index.response": {
        source: "iana"
      },
      "application/index.vnd": {
        source: "iana"
      },
      "application/inkml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["ink", "inkml"]
      },
      "application/iotp": {
        source: "iana"
      },
      "application/ipfix": {
        source: "iana",
        extensions: ["ipfix"]
      },
      "application/ipp": {
        source: "iana"
      },
      "application/isup": {
        source: "iana"
      },
      "application/its+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["its"]
      },
      "application/java-archive": {
        source: "apache",
        compressible: !1,
        extensions: ["jar", "war", "ear"]
      },
      "application/java-serialized-object": {
        source: "apache",
        compressible: !1,
        extensions: ["ser"]
      },
      "application/java-vm": {
        source: "apache",
        compressible: !1,
        extensions: ["class"]
      },
      "application/javascript": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["js", "mjs"]
      },
      "application/jf2feed+json": {
        source: "iana",
        compressible: !0
      },
      "application/jose": {
        source: "iana"
      },
      "application/jose+json": {
        source: "iana",
        compressible: !0
      },
      "application/jrd+json": {
        source: "iana",
        compressible: !0
      },
      "application/jscalendar+json": {
        source: "iana",
        compressible: !0
      },
      "application/json": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["json", "map"]
      },
      "application/json-patch+json": {
        source: "iana",
        compressible: !0
      },
      "application/json-seq": {
        source: "iana"
      },
      "application/json5": {
        extensions: ["json5"]
      },
      "application/jsonml+json": {
        source: "apache",
        compressible: !0,
        extensions: ["jsonml"]
      },
      "application/jwk+json": {
        source: "iana",
        compressible: !0
      },
      "application/jwk-set+json": {
        source: "iana",
        compressible: !0
      },
      "application/jwt": {
        source: "iana"
      },
      "application/kpml-request+xml": {
        source: "iana",
        compressible: !0
      },
      "application/kpml-response+xml": {
        source: "iana",
        compressible: !0
      },
      "application/ld+json": {
        source: "iana",
        compressible: !0,
        extensions: ["jsonld"]
      },
      "application/lgr+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["lgr"]
      },
      "application/link-format": {
        source: "iana"
      },
      "application/load-control+xml": {
        source: "iana",
        compressible: !0
      },
      "application/lost+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["lostxml"]
      },
      "application/lostsync+xml": {
        source: "iana",
        compressible: !0
      },
      "application/lpf+zip": {
        source: "iana",
        compressible: !1
      },
      "application/lxf": {
        source: "iana"
      },
      "application/mac-binhex40": {
        source: "iana",
        extensions: ["hqx"]
      },
      "application/mac-compactpro": {
        source: "apache",
        extensions: ["cpt"]
      },
      "application/macwriteii": {
        source: "iana"
      },
      "application/mads+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mads"]
      },
      "application/manifest+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["webmanifest"]
      },
      "application/marc": {
        source: "iana",
        extensions: ["mrc"]
      },
      "application/marcxml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mrcx"]
      },
      "application/mathematica": {
        source: "iana",
        extensions: ["ma", "nb", "mb"]
      },
      "application/mathml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mathml"]
      },
      "application/mathml-content+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mathml-presentation+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-associated-procedure-description+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-deregister+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-envelope+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-msk+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-msk-response+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-protection-description+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-reception-report+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-register+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-register-response+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-schedule+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbms-user-service-description+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mbox": {
        source: "iana",
        extensions: ["mbox"]
      },
      "application/media-policy-dataset+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mpf"]
      },
      "application/media_control+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mediaservercontrol+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mscml"]
      },
      "application/merge-patch+json": {
        source: "iana",
        compressible: !0
      },
      "application/metalink+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["metalink"]
      },
      "application/metalink4+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["meta4"]
      },
      "application/mets+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mets"]
      },
      "application/mf4": {
        source: "iana"
      },
      "application/mikey": {
        source: "iana"
      },
      "application/mipc": {
        source: "iana"
      },
      "application/missing-blocks+cbor-seq": {
        source: "iana"
      },
      "application/mmt-aei+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["maei"]
      },
      "application/mmt-usd+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["musd"]
      },
      "application/mods+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mods"]
      },
      "application/moss-keys": {
        source: "iana"
      },
      "application/moss-signature": {
        source: "iana"
      },
      "application/mosskey-data": {
        source: "iana"
      },
      "application/mosskey-request": {
        source: "iana"
      },
      "application/mp21": {
        source: "iana",
        extensions: ["m21", "mp21"]
      },
      "application/mp4": {
        source: "iana",
        extensions: ["mp4s", "m4p"]
      },
      "application/mpeg4-generic": {
        source: "iana"
      },
      "application/mpeg4-iod": {
        source: "iana"
      },
      "application/mpeg4-iod-xmt": {
        source: "iana"
      },
      "application/mrb-consumer+xml": {
        source: "iana",
        compressible: !0
      },
      "application/mrb-publish+xml": {
        source: "iana",
        compressible: !0
      },
      "application/msc-ivr+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/msc-mixer+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/msword": {
        source: "iana",
        compressible: !1,
        extensions: ["doc", "dot"]
      },
      "application/mud+json": {
        source: "iana",
        compressible: !0
      },
      "application/multipart-core": {
        source: "iana"
      },
      "application/mxf": {
        source: "iana",
        extensions: ["mxf"]
      },
      "application/n-quads": {
        source: "iana",
        extensions: ["nq"]
      },
      "application/n-triples": {
        source: "iana",
        extensions: ["nt"]
      },
      "application/nasdata": {
        source: "iana"
      },
      "application/news-checkgroups": {
        source: "iana",
        charset: "US-ASCII"
      },
      "application/news-groupinfo": {
        source: "iana",
        charset: "US-ASCII"
      },
      "application/news-transmission": {
        source: "iana"
      },
      "application/nlsml+xml": {
        source: "iana",
        compressible: !0
      },
      "application/node": {
        source: "iana",
        extensions: ["cjs"]
      },
      "application/nss": {
        source: "iana"
      },
      "application/oauth-authz-req+jwt": {
        source: "iana"
      },
      "application/oblivious-dns-message": {
        source: "iana"
      },
      "application/ocsp-request": {
        source: "iana"
      },
      "application/ocsp-response": {
        source: "iana"
      },
      "application/octet-stream": {
        source: "iana",
        compressible: !1,
        extensions: ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"]
      },
      "application/oda": {
        source: "iana",
        extensions: ["oda"]
      },
      "application/odm+xml": {
        source: "iana",
        compressible: !0
      },
      "application/odx": {
        source: "iana"
      },
      "application/oebps-package+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["opf"]
      },
      "application/ogg": {
        source: "iana",
        compressible: !1,
        extensions: ["ogx"]
      },
      "application/omdoc+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["omdoc"]
      },
      "application/onenote": {
        source: "apache",
        extensions: ["onetoc", "onetoc2", "onetmp", "onepkg"]
      },
      "application/opc-nodeset+xml": {
        source: "iana",
        compressible: !0
      },
      "application/oscore": {
        source: "iana"
      },
      "application/oxps": {
        source: "iana",
        extensions: ["oxps"]
      },
      "application/p21": {
        source: "iana"
      },
      "application/p21+zip": {
        source: "iana",
        compressible: !1
      },
      "application/p2p-overlay+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["relo"]
      },
      "application/parityfec": {
        source: "iana"
      },
      "application/passport": {
        source: "iana"
      },
      "application/patch-ops-error+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xer"]
      },
      "application/pdf": {
        source: "iana",
        compressible: !1,
        extensions: ["pdf"]
      },
      "application/pdx": {
        source: "iana"
      },
      "application/pem-certificate-chain": {
        source: "iana"
      },
      "application/pgp-encrypted": {
        source: "iana",
        compressible: !1,
        extensions: ["pgp"]
      },
      "application/pgp-keys": {
        source: "iana",
        extensions: ["asc"]
      },
      "application/pgp-signature": {
        source: "iana",
        extensions: ["asc", "sig"]
      },
      "application/pics-rules": {
        source: "apache",
        extensions: ["prf"]
      },
      "application/pidf+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/pidf-diff+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/pkcs10": {
        source: "iana",
        extensions: ["p10"]
      },
      "application/pkcs12": {
        source: "iana"
      },
      "application/pkcs7-mime": {
        source: "iana",
        extensions: ["p7m", "p7c"]
      },
      "application/pkcs7-signature": {
        source: "iana",
        extensions: ["p7s"]
      },
      "application/pkcs8": {
        source: "iana",
        extensions: ["p8"]
      },
      "application/pkcs8-encrypted": {
        source: "iana"
      },
      "application/pkix-attr-cert": {
        source: "iana",
        extensions: ["ac"]
      },
      "application/pkix-cert": {
        source: "iana",
        extensions: ["cer"]
      },
      "application/pkix-crl": {
        source: "iana",
        extensions: ["crl"]
      },
      "application/pkix-pkipath": {
        source: "iana",
        extensions: ["pkipath"]
      },
      "application/pkixcmp": {
        source: "iana",
        extensions: ["pki"]
      },
      "application/pls+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["pls"]
      },
      "application/poc-settings+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/postscript": {
        source: "iana",
        compressible: !0,
        extensions: ["ai", "eps", "ps"]
      },
      "application/ppsp-tracker+json": {
        source: "iana",
        compressible: !0
      },
      "application/problem+json": {
        source: "iana",
        compressible: !0
      },
      "application/problem+xml": {
        source: "iana",
        compressible: !0
      },
      "application/provenance+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["provx"]
      },
      "application/prs.alvestrand.titrax-sheet": {
        source: "iana"
      },
      "application/prs.cww": {
        source: "iana",
        extensions: ["cww"]
      },
      "application/prs.cyn": {
        source: "iana",
        charset: "7-BIT"
      },
      "application/prs.hpub+zip": {
        source: "iana",
        compressible: !1
      },
      "application/prs.nprend": {
        source: "iana"
      },
      "application/prs.plucker": {
        source: "iana"
      },
      "application/prs.rdf-xml-crypt": {
        source: "iana"
      },
      "application/prs.xsf+xml": {
        source: "iana",
        compressible: !0
      },
      "application/pskc+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["pskcxml"]
      },
      "application/pvd+json": {
        source: "iana",
        compressible: !0
      },
      "application/qsig": {
        source: "iana"
      },
      "application/raml+yaml": {
        compressible: !0,
        extensions: ["raml"]
      },
      "application/raptorfec": {
        source: "iana"
      },
      "application/rdap+json": {
        source: "iana",
        compressible: !0
      },
      "application/rdf+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rdf", "owl"]
      },
      "application/reginfo+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rif"]
      },
      "application/relax-ng-compact-syntax": {
        source: "iana",
        extensions: ["rnc"]
      },
      "application/remote-printing": {
        source: "iana"
      },
      "application/reputon+json": {
        source: "iana",
        compressible: !0
      },
      "application/resource-lists+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rl"]
      },
      "application/resource-lists-diff+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rld"]
      },
      "application/rfc+xml": {
        source: "iana",
        compressible: !0
      },
      "application/riscos": {
        source: "iana"
      },
      "application/rlmi+xml": {
        source: "iana",
        compressible: !0
      },
      "application/rls-services+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rs"]
      },
      "application/route-apd+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rapd"]
      },
      "application/route-s-tsid+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["sls"]
      },
      "application/route-usd+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rusd"]
      },
      "application/rpki-ghostbusters": {
        source: "iana",
        extensions: ["gbr"]
      },
      "application/rpki-manifest": {
        source: "iana",
        extensions: ["mft"]
      },
      "application/rpki-publication": {
        source: "iana"
      },
      "application/rpki-roa": {
        source: "iana",
        extensions: ["roa"]
      },
      "application/rpki-updown": {
        source: "iana"
      },
      "application/rsd+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["rsd"]
      },
      "application/rss+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["rss"]
      },
      "application/rtf": {
        source: "iana",
        compressible: !0,
        extensions: ["rtf"]
      },
      "application/rtploopback": {
        source: "iana"
      },
      "application/rtx": {
        source: "iana"
      },
      "application/samlassertion+xml": {
        source: "iana",
        compressible: !0
      },
      "application/samlmetadata+xml": {
        source: "iana",
        compressible: !0
      },
      "application/sarif+json": {
        source: "iana",
        compressible: !0
      },
      "application/sarif-external-properties+json": {
        source: "iana",
        compressible: !0
      },
      "application/sbe": {
        source: "iana"
      },
      "application/sbml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["sbml"]
      },
      "application/scaip+xml": {
        source: "iana",
        compressible: !0
      },
      "application/scim+json": {
        source: "iana",
        compressible: !0
      },
      "application/scvp-cv-request": {
        source: "iana",
        extensions: ["scq"]
      },
      "application/scvp-cv-response": {
        source: "iana",
        extensions: ["scs"]
      },
      "application/scvp-vp-request": {
        source: "iana",
        extensions: ["spq"]
      },
      "application/scvp-vp-response": {
        source: "iana",
        extensions: ["spp"]
      },
      "application/sdp": {
        source: "iana",
        extensions: ["sdp"]
      },
      "application/secevent+jwt": {
        source: "iana"
      },
      "application/senml+cbor": {
        source: "iana"
      },
      "application/senml+json": {
        source: "iana",
        compressible: !0
      },
      "application/senml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["senmlx"]
      },
      "application/senml-etch+cbor": {
        source: "iana"
      },
      "application/senml-etch+json": {
        source: "iana",
        compressible: !0
      },
      "application/senml-exi": {
        source: "iana"
      },
      "application/sensml+cbor": {
        source: "iana"
      },
      "application/sensml+json": {
        source: "iana",
        compressible: !0
      },
      "application/sensml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["sensmlx"]
      },
      "application/sensml-exi": {
        source: "iana"
      },
      "application/sep+xml": {
        source: "iana",
        compressible: !0
      },
      "application/sep-exi": {
        source: "iana"
      },
      "application/session-info": {
        source: "iana"
      },
      "application/set-payment": {
        source: "iana"
      },
      "application/set-payment-initiation": {
        source: "iana",
        extensions: ["setpay"]
      },
      "application/set-registration": {
        source: "iana"
      },
      "application/set-registration-initiation": {
        source: "iana",
        extensions: ["setreg"]
      },
      "application/sgml": {
        source: "iana"
      },
      "application/sgml-open-catalog": {
        source: "iana"
      },
      "application/shf+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["shf"]
      },
      "application/sieve": {
        source: "iana",
        extensions: ["siv", "sieve"]
      },
      "application/simple-filter+xml": {
        source: "iana",
        compressible: !0
      },
      "application/simple-message-summary": {
        source: "iana"
      },
      "application/simplesymbolcontainer": {
        source: "iana"
      },
      "application/sipc": {
        source: "iana"
      },
      "application/slate": {
        source: "iana"
      },
      "application/smil": {
        source: "iana"
      },
      "application/smil+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["smi", "smil"]
      },
      "application/smpte336m": {
        source: "iana"
      },
      "application/soap+fastinfoset": {
        source: "iana"
      },
      "application/soap+xml": {
        source: "iana",
        compressible: !0
      },
      "application/sparql-query": {
        source: "iana",
        extensions: ["rq"]
      },
      "application/sparql-results+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["srx"]
      },
      "application/spdx+json": {
        source: "iana",
        compressible: !0
      },
      "application/spirits-event+xml": {
        source: "iana",
        compressible: !0
      },
      "application/sql": {
        source: "iana"
      },
      "application/srgs": {
        source: "iana",
        extensions: ["gram"]
      },
      "application/srgs+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["grxml"]
      },
      "application/sru+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["sru"]
      },
      "application/ssdl+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["ssdl"]
      },
      "application/ssml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["ssml"]
      },
      "application/stix+json": {
        source: "iana",
        compressible: !0
      },
      "application/swid+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["swidtag"]
      },
      "application/tamp-apex-update": {
        source: "iana"
      },
      "application/tamp-apex-update-confirm": {
        source: "iana"
      },
      "application/tamp-community-update": {
        source: "iana"
      },
      "application/tamp-community-update-confirm": {
        source: "iana"
      },
      "application/tamp-error": {
        source: "iana"
      },
      "application/tamp-sequence-adjust": {
        source: "iana"
      },
      "application/tamp-sequence-adjust-confirm": {
        source: "iana"
      },
      "application/tamp-status-query": {
        source: "iana"
      },
      "application/tamp-status-response": {
        source: "iana"
      },
      "application/tamp-update": {
        source: "iana"
      },
      "application/tamp-update-confirm": {
        source: "iana"
      },
      "application/tar": {
        compressible: !0
      },
      "application/taxii+json": {
        source: "iana",
        compressible: !0
      },
      "application/td+json": {
        source: "iana",
        compressible: !0
      },
      "application/tei+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["tei", "teicorpus"]
      },
      "application/tetra_isi": {
        source: "iana"
      },
      "application/thraud+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["tfi"]
      },
      "application/timestamp-query": {
        source: "iana"
      },
      "application/timestamp-reply": {
        source: "iana"
      },
      "application/timestamped-data": {
        source: "iana",
        extensions: ["tsd"]
      },
      "application/tlsrpt+gzip": {
        source: "iana"
      },
      "application/tlsrpt+json": {
        source: "iana",
        compressible: !0
      },
      "application/tnauthlist": {
        source: "iana"
      },
      "application/token-introspection+jwt": {
        source: "iana"
      },
      "application/toml": {
        compressible: !0,
        extensions: ["toml"]
      },
      "application/trickle-ice-sdpfrag": {
        source: "iana"
      },
      "application/trig": {
        source: "iana",
        extensions: ["trig"]
      },
      "application/ttml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["ttml"]
      },
      "application/tve-trigger": {
        source: "iana"
      },
      "application/tzif": {
        source: "iana"
      },
      "application/tzif-leap": {
        source: "iana"
      },
      "application/ubjson": {
        compressible: !1,
        extensions: ["ubj"]
      },
      "application/ulpfec": {
        source: "iana"
      },
      "application/urc-grpsheet+xml": {
        source: "iana",
        compressible: !0
      },
      "application/urc-ressheet+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["rsheet"]
      },
      "application/urc-targetdesc+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["td"]
      },
      "application/urc-uisocketdesc+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vcard+json": {
        source: "iana",
        compressible: !0
      },
      "application/vcard+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vemmi": {
        source: "iana"
      },
      "application/vividence.scriptfile": {
        source: "apache"
      },
      "application/vnd.1000minds.decision-model+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["1km"]
      },
      "application/vnd.3gpp-prose+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp-prose-pc3ch+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp-v2x-local-service-information": {
        source: "iana"
      },
      "application/vnd.3gpp.5gnas": {
        source: "iana"
      },
      "application/vnd.3gpp.access-transfer-events+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.bsf+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.gmop+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.gtpc": {
        source: "iana"
      },
      "application/vnd.3gpp.interworking-data": {
        source: "iana"
      },
      "application/vnd.3gpp.lpp": {
        source: "iana"
      },
      "application/vnd.3gpp.mc-signalling-ear": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-affiliation-command+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcdata-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcdata-payload": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-service-config+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcdata-signalling": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-ue-config+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcdata-user-profile+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-affiliation-command+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-floor-request+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-location-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-mbms-usage-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-service-config+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-signed+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-ue-config+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-ue-init-config+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcptt-user-profile+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-affiliation-command+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-affiliation-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-location-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-service-config+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-transmission-request+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-ue-config+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mcvideo-user-profile+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.mid-call+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.ngap": {
        source: "iana"
      },
      "application/vnd.3gpp.pfcp": {
        source: "iana"
      },
      "application/vnd.3gpp.pic-bw-large": {
        source: "iana",
        extensions: ["plb"]
      },
      "application/vnd.3gpp.pic-bw-small": {
        source: "iana",
        extensions: ["psb"]
      },
      "application/vnd.3gpp.pic-bw-var": {
        source: "iana",
        extensions: ["pvb"]
      },
      "application/vnd.3gpp.s1ap": {
        source: "iana"
      },
      "application/vnd.3gpp.sms": {
        source: "iana"
      },
      "application/vnd.3gpp.sms+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.srvcc-ext+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.srvcc-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.state-and-event-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp.ussd+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp2.bcmcsinfo+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.3gpp2.sms": {
        source: "iana"
      },
      "application/vnd.3gpp2.tcap": {
        source: "iana",
        extensions: ["tcap"]
      },
      "application/vnd.3lightssoftware.imagescal": {
        source: "iana"
      },
      "application/vnd.3m.post-it-notes": {
        source: "iana",
        extensions: ["pwn"]
      },
      "application/vnd.accpac.simply.aso": {
        source: "iana",
        extensions: ["aso"]
      },
      "application/vnd.accpac.simply.imp": {
        source: "iana",
        extensions: ["imp"]
      },
      "application/vnd.acucobol": {
        source: "iana",
        extensions: ["acu"]
      },
      "application/vnd.acucorp": {
        source: "iana",
        extensions: ["atc", "acutc"]
      },
      "application/vnd.adobe.air-application-installer-package+zip": {
        source: "apache",
        compressible: !1,
        extensions: ["air"]
      },
      "application/vnd.adobe.flash.movie": {
        source: "iana"
      },
      "application/vnd.adobe.formscentral.fcdt": {
        source: "iana",
        extensions: ["fcdt"]
      },
      "application/vnd.adobe.fxp": {
        source: "iana",
        extensions: ["fxp", "fxpl"]
      },
      "application/vnd.adobe.partial-upload": {
        source: "iana"
      },
      "application/vnd.adobe.xdp+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xdp"]
      },
      "application/vnd.adobe.xfdf": {
        source: "iana",
        extensions: ["xfdf"]
      },
      "application/vnd.aether.imp": {
        source: "iana"
      },
      "application/vnd.afpc.afplinedata": {
        source: "iana"
      },
      "application/vnd.afpc.afplinedata-pagedef": {
        source: "iana"
      },
      "application/vnd.afpc.cmoca-cmresource": {
        source: "iana"
      },
      "application/vnd.afpc.foca-charset": {
        source: "iana"
      },
      "application/vnd.afpc.foca-codedfont": {
        source: "iana"
      },
      "application/vnd.afpc.foca-codepage": {
        source: "iana"
      },
      "application/vnd.afpc.modca": {
        source: "iana"
      },
      "application/vnd.afpc.modca-cmtable": {
        source: "iana"
      },
      "application/vnd.afpc.modca-formdef": {
        source: "iana"
      },
      "application/vnd.afpc.modca-mediummap": {
        source: "iana"
      },
      "application/vnd.afpc.modca-objectcontainer": {
        source: "iana"
      },
      "application/vnd.afpc.modca-overlay": {
        source: "iana"
      },
      "application/vnd.afpc.modca-pagesegment": {
        source: "iana"
      },
      "application/vnd.age": {
        source: "iana",
        extensions: ["age"]
      },
      "application/vnd.ah-barcode": {
        source: "iana"
      },
      "application/vnd.ahead.space": {
        source: "iana",
        extensions: ["ahead"]
      },
      "application/vnd.airzip.filesecure.azf": {
        source: "iana",
        extensions: ["azf"]
      },
      "application/vnd.airzip.filesecure.azs": {
        source: "iana",
        extensions: ["azs"]
      },
      "application/vnd.amadeus+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.amazon.ebook": {
        source: "apache",
        extensions: ["azw"]
      },
      "application/vnd.amazon.mobi8-ebook": {
        source: "iana"
      },
      "application/vnd.americandynamics.acc": {
        source: "iana",
        extensions: ["acc"]
      },
      "application/vnd.amiga.ami": {
        source: "iana",
        extensions: ["ami"]
      },
      "application/vnd.amundsen.maze+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.android.ota": {
        source: "iana"
      },
      "application/vnd.android.package-archive": {
        source: "apache",
        compressible: !1,
        extensions: ["apk"]
      },
      "application/vnd.anki": {
        source: "iana"
      },
      "application/vnd.anser-web-certificate-issue-initiation": {
        source: "iana",
        extensions: ["cii"]
      },
      "application/vnd.anser-web-funds-transfer-initiation": {
        source: "apache",
        extensions: ["fti"]
      },
      "application/vnd.antix.game-component": {
        source: "iana",
        extensions: ["atx"]
      },
      "application/vnd.apache.arrow.file": {
        source: "iana"
      },
      "application/vnd.apache.arrow.stream": {
        source: "iana"
      },
      "application/vnd.apache.thrift.binary": {
        source: "iana"
      },
      "application/vnd.apache.thrift.compact": {
        source: "iana"
      },
      "application/vnd.apache.thrift.json": {
        source: "iana"
      },
      "application/vnd.api+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.aplextor.warrp+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.apothekende.reservation+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.apple.installer+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mpkg"]
      },
      "application/vnd.apple.keynote": {
        source: "iana",
        extensions: ["key"]
      },
      "application/vnd.apple.mpegurl": {
        source: "iana",
        extensions: ["m3u8"]
      },
      "application/vnd.apple.numbers": {
        source: "iana",
        extensions: ["numbers"]
      },
      "application/vnd.apple.pages": {
        source: "iana",
        extensions: ["pages"]
      },
      "application/vnd.apple.pkpass": {
        compressible: !1,
        extensions: ["pkpass"]
      },
      "application/vnd.arastra.swi": {
        source: "iana"
      },
      "application/vnd.aristanetworks.swi": {
        source: "iana",
        extensions: ["swi"]
      },
      "application/vnd.artisan+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.artsquare": {
        source: "iana"
      },
      "application/vnd.astraea-software.iota": {
        source: "iana",
        extensions: ["iota"]
      },
      "application/vnd.audiograph": {
        source: "iana",
        extensions: ["aep"]
      },
      "application/vnd.autopackage": {
        source: "iana"
      },
      "application/vnd.avalon+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.avistar+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.balsamiq.bmml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["bmml"]
      },
      "application/vnd.balsamiq.bmpr": {
        source: "iana"
      },
      "application/vnd.banana-accounting": {
        source: "iana"
      },
      "application/vnd.bbf.usp.error": {
        source: "iana"
      },
      "application/vnd.bbf.usp.msg": {
        source: "iana"
      },
      "application/vnd.bbf.usp.msg+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.bekitzur-stech+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.bint.med-content": {
        source: "iana"
      },
      "application/vnd.biopax.rdf+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.blink-idb-value-wrapper": {
        source: "iana"
      },
      "application/vnd.blueice.multipass": {
        source: "iana",
        extensions: ["mpm"]
      },
      "application/vnd.bluetooth.ep.oob": {
        source: "iana"
      },
      "application/vnd.bluetooth.le.oob": {
        source: "iana"
      },
      "application/vnd.bmi": {
        source: "iana",
        extensions: ["bmi"]
      },
      "application/vnd.bpf": {
        source: "iana"
      },
      "application/vnd.bpf3": {
        source: "iana"
      },
      "application/vnd.businessobjects": {
        source: "iana",
        extensions: ["rep"]
      },
      "application/vnd.byu.uapi+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.cab-jscript": {
        source: "iana"
      },
      "application/vnd.canon-cpdl": {
        source: "iana"
      },
      "application/vnd.canon-lips": {
        source: "iana"
      },
      "application/vnd.capasystems-pg+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.cendio.thinlinc.clientconf": {
        source: "iana"
      },
      "application/vnd.century-systems.tcp_stream": {
        source: "iana"
      },
      "application/vnd.chemdraw+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["cdxml"]
      },
      "application/vnd.chess-pgn": {
        source: "iana"
      },
      "application/vnd.chipnuts.karaoke-mmd": {
        source: "iana",
        extensions: ["mmd"]
      },
      "application/vnd.ciedi": {
        source: "iana"
      },
      "application/vnd.cinderella": {
        source: "iana",
        extensions: ["cdy"]
      },
      "application/vnd.cirpack.isdn-ext": {
        source: "iana"
      },
      "application/vnd.citationstyles.style+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["csl"]
      },
      "application/vnd.claymore": {
        source: "iana",
        extensions: ["cla"]
      },
      "application/vnd.cloanto.rp9": {
        source: "iana",
        extensions: ["rp9"]
      },
      "application/vnd.clonk.c4group": {
        source: "iana",
        extensions: ["c4g", "c4d", "c4f", "c4p", "c4u"]
      },
      "application/vnd.cluetrust.cartomobile-config": {
        source: "iana",
        extensions: ["c11amc"]
      },
      "application/vnd.cluetrust.cartomobile-config-pkg": {
        source: "iana",
        extensions: ["c11amz"]
      },
      "application/vnd.coffeescript": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.document": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.document-template": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.presentation": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.presentation-template": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.spreadsheet": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.spreadsheet-template": {
        source: "iana"
      },
      "application/vnd.collection+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.collection.doc+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.collection.next+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.comicbook+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.comicbook-rar": {
        source: "iana"
      },
      "application/vnd.commerce-battelle": {
        source: "iana"
      },
      "application/vnd.commonspace": {
        source: "iana",
        extensions: ["csp"]
      },
      "application/vnd.contact.cmsg": {
        source: "iana",
        extensions: ["cdbcmsg"]
      },
      "application/vnd.coreos.ignition+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.cosmocaller": {
        source: "iana",
        extensions: ["cmc"]
      },
      "application/vnd.crick.clicker": {
        source: "iana",
        extensions: ["clkx"]
      },
      "application/vnd.crick.clicker.keyboard": {
        source: "iana",
        extensions: ["clkk"]
      },
      "application/vnd.crick.clicker.palette": {
        source: "iana",
        extensions: ["clkp"]
      },
      "application/vnd.crick.clicker.template": {
        source: "iana",
        extensions: ["clkt"]
      },
      "application/vnd.crick.clicker.wordbank": {
        source: "iana",
        extensions: ["clkw"]
      },
      "application/vnd.criticaltools.wbs+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["wbs"]
      },
      "application/vnd.cryptii.pipe+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.crypto-shade-file": {
        source: "iana"
      },
      "application/vnd.cryptomator.encrypted": {
        source: "iana"
      },
      "application/vnd.cryptomator.vault": {
        source: "iana"
      },
      "application/vnd.ctc-posml": {
        source: "iana",
        extensions: ["pml"]
      },
      "application/vnd.ctct.ws+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.cups-pdf": {
        source: "iana"
      },
      "application/vnd.cups-postscript": {
        source: "iana"
      },
      "application/vnd.cups-ppd": {
        source: "iana",
        extensions: ["ppd"]
      },
      "application/vnd.cups-raster": {
        source: "iana"
      },
      "application/vnd.cups-raw": {
        source: "iana"
      },
      "application/vnd.curl": {
        source: "iana"
      },
      "application/vnd.curl.car": {
        source: "apache",
        extensions: ["car"]
      },
      "application/vnd.curl.pcurl": {
        source: "apache",
        extensions: ["pcurl"]
      },
      "application/vnd.cyan.dean.root+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.cybank": {
        source: "iana"
      },
      "application/vnd.cyclonedx+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.cyclonedx+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.d2l.coursepackage1p0+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.d3m-dataset": {
        source: "iana"
      },
      "application/vnd.d3m-problem": {
        source: "iana"
      },
      "application/vnd.dart": {
        source: "iana",
        compressible: !0,
        extensions: ["dart"]
      },
      "application/vnd.data-vision.rdz": {
        source: "iana",
        extensions: ["rdz"]
      },
      "application/vnd.datapackage+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dataresource+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dbf": {
        source: "iana",
        extensions: ["dbf"]
      },
      "application/vnd.debian.binary-package": {
        source: "iana"
      },
      "application/vnd.dece.data": {
        source: "iana",
        extensions: ["uvf", "uvvf", "uvd", "uvvd"]
      },
      "application/vnd.dece.ttml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["uvt", "uvvt"]
      },
      "application/vnd.dece.unspecified": {
        source: "iana",
        extensions: ["uvx", "uvvx"]
      },
      "application/vnd.dece.zip": {
        source: "iana",
        extensions: ["uvz", "uvvz"]
      },
      "application/vnd.denovo.fcselayout-link": {
        source: "iana",
        extensions: ["fe_launch"]
      },
      "application/vnd.desmume.movie": {
        source: "iana"
      },
      "application/vnd.dir-bi.plate-dl-nosuffix": {
        source: "iana"
      },
      "application/vnd.dm.delegation+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dna": {
        source: "iana",
        extensions: ["dna"]
      },
      "application/vnd.document+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dolby.mlp": {
        source: "apache",
        extensions: ["mlp"]
      },
      "application/vnd.dolby.mobile.1": {
        source: "iana"
      },
      "application/vnd.dolby.mobile.2": {
        source: "iana"
      },
      "application/vnd.doremir.scorecloud-binary-document": {
        source: "iana"
      },
      "application/vnd.dpgraph": {
        source: "iana",
        extensions: ["dpg"]
      },
      "application/vnd.dreamfactory": {
        source: "iana",
        extensions: ["dfac"]
      },
      "application/vnd.drive+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ds-keypoint": {
        source: "apache",
        extensions: ["kpxx"]
      },
      "application/vnd.dtg.local": {
        source: "iana"
      },
      "application/vnd.dtg.local.flash": {
        source: "iana"
      },
      "application/vnd.dtg.local.html": {
        source: "iana"
      },
      "application/vnd.dvb.ait": {
        source: "iana",
        extensions: ["ait"]
      },
      "application/vnd.dvb.dvbisl+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dvb.dvbj": {
        source: "iana"
      },
      "application/vnd.dvb.esgcontainer": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcdftnotifaccess": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgaccess": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgaccess2": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgpdd": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcroaming": {
        source: "iana"
      },
      "application/vnd.dvb.iptv.alfec-base": {
        source: "iana"
      },
      "application/vnd.dvb.iptv.alfec-enhancement": {
        source: "iana"
      },
      "application/vnd.dvb.notif-aggregate-root+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dvb.notif-container+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dvb.notif-generic+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dvb.notif-ia-msglist+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dvb.notif-ia-registration-request+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dvb.notif-ia-registration-response+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dvb.notif-init+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.dvb.pfr": {
        source: "iana"
      },
      "application/vnd.dvb.service": {
        source: "iana",
        extensions: ["svc"]
      },
      "application/vnd.dxr": {
        source: "iana"
      },
      "application/vnd.dynageo": {
        source: "iana",
        extensions: ["geo"]
      },
      "application/vnd.dzr": {
        source: "iana"
      },
      "application/vnd.easykaraoke.cdgdownload": {
        source: "iana"
      },
      "application/vnd.ecdis-update": {
        source: "iana"
      },
      "application/vnd.ecip.rlp": {
        source: "iana"
      },
      "application/vnd.eclipse.ditto+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ecowin.chart": {
        source: "iana",
        extensions: ["mag"]
      },
      "application/vnd.ecowin.filerequest": {
        source: "iana"
      },
      "application/vnd.ecowin.fileupdate": {
        source: "iana"
      },
      "application/vnd.ecowin.series": {
        source: "iana"
      },
      "application/vnd.ecowin.seriesrequest": {
        source: "iana"
      },
      "application/vnd.ecowin.seriesupdate": {
        source: "iana"
      },
      "application/vnd.efi.img": {
        source: "iana"
      },
      "application/vnd.efi.iso": {
        source: "iana"
      },
      "application/vnd.emclient.accessrequest+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.enliven": {
        source: "iana",
        extensions: ["nml"]
      },
      "application/vnd.enphase.envoy": {
        source: "iana"
      },
      "application/vnd.eprints.data+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.epson.esf": {
        source: "iana",
        extensions: ["esf"]
      },
      "application/vnd.epson.msf": {
        source: "iana",
        extensions: ["msf"]
      },
      "application/vnd.epson.quickanime": {
        source: "iana",
        extensions: ["qam"]
      },
      "application/vnd.epson.salt": {
        source: "iana",
        extensions: ["slt"]
      },
      "application/vnd.epson.ssf": {
        source: "iana",
        extensions: ["ssf"]
      },
      "application/vnd.ericsson.quickcall": {
        source: "iana"
      },
      "application/vnd.espass-espass+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.eszigno3+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["es3", "et3"]
      },
      "application/vnd.etsi.aoc+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.asic-e+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.etsi.asic-s+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.etsi.cug+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvcommand+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvdiscovery+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvprofile+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvsad-bc+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvsad-cod+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvsad-npvr+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvservice+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvsync+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.iptvueprofile+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.mcid+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.mheg5": {
        source: "iana"
      },
      "application/vnd.etsi.overload-control-policy-dataset+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.pstn+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.sci+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.simservs+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.timestamp-token": {
        source: "iana"
      },
      "application/vnd.etsi.tsl+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.etsi.tsl.der": {
        source: "iana"
      },
      "application/vnd.eu.kasparian.car+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.eudora.data": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.profile": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.settings": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.theme": {
        source: "iana"
      },
      "application/vnd.exstream-empower+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.exstream-package": {
        source: "iana"
      },
      "application/vnd.ezpix-album": {
        source: "iana",
        extensions: ["ez2"]
      },
      "application/vnd.ezpix-package": {
        source: "iana",
        extensions: ["ez3"]
      },
      "application/vnd.f-secure.mobile": {
        source: "iana"
      },
      "application/vnd.familysearch.gedcom+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.fastcopy-disk-image": {
        source: "iana"
      },
      "application/vnd.fdf": {
        source: "iana",
        extensions: ["fdf"]
      },
      "application/vnd.fdsn.mseed": {
        source: "iana",
        extensions: ["mseed"]
      },
      "application/vnd.fdsn.seed": {
        source: "iana",
        extensions: ["seed", "dataless"]
      },
      "application/vnd.ffsns": {
        source: "iana"
      },
      "application/vnd.ficlab.flb+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.filmit.zfc": {
        source: "iana"
      },
      "application/vnd.fints": {
        source: "iana"
      },
      "application/vnd.firemonkeys.cloudcell": {
        source: "iana"
      },
      "application/vnd.flographit": {
        source: "iana",
        extensions: ["gph"]
      },
      "application/vnd.fluxtime.clip": {
        source: "iana",
        extensions: ["ftc"]
      },
      "application/vnd.font-fontforge-sfd": {
        source: "iana"
      },
      "application/vnd.framemaker": {
        source: "iana",
        extensions: ["fm", "frame", "maker", "book"]
      },
      "application/vnd.frogans.fnc": {
        source: "iana",
        extensions: ["fnc"]
      },
      "application/vnd.frogans.ltf": {
        source: "iana",
        extensions: ["ltf"]
      },
      "application/vnd.fsc.weblaunch": {
        source: "iana",
        extensions: ["fsc"]
      },
      "application/vnd.fujifilm.fb.docuworks": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.docuworks.binder": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.docuworks.container": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.jfi+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.fujitsu.oasys": {
        source: "iana",
        extensions: ["oas"]
      },
      "application/vnd.fujitsu.oasys2": {
        source: "iana",
        extensions: ["oa2"]
      },
      "application/vnd.fujitsu.oasys3": {
        source: "iana",
        extensions: ["oa3"]
      },
      "application/vnd.fujitsu.oasysgp": {
        source: "iana",
        extensions: ["fg5"]
      },
      "application/vnd.fujitsu.oasysprs": {
        source: "iana",
        extensions: ["bh2"]
      },
      "application/vnd.fujixerox.art-ex": {
        source: "iana"
      },
      "application/vnd.fujixerox.art4": {
        source: "iana"
      },
      "application/vnd.fujixerox.ddd": {
        source: "iana",
        extensions: ["ddd"]
      },
      "application/vnd.fujixerox.docuworks": {
        source: "iana",
        extensions: ["xdw"]
      },
      "application/vnd.fujixerox.docuworks.binder": {
        source: "iana",
        extensions: ["xbd"]
      },
      "application/vnd.fujixerox.docuworks.container": {
        source: "iana"
      },
      "application/vnd.fujixerox.hbpl": {
        source: "iana"
      },
      "application/vnd.fut-misnet": {
        source: "iana"
      },
      "application/vnd.futoin+cbor": {
        source: "iana"
      },
      "application/vnd.futoin+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.fuzzysheet": {
        source: "iana",
        extensions: ["fzs"]
      },
      "application/vnd.genomatix.tuxedo": {
        source: "iana",
        extensions: ["txd"]
      },
      "application/vnd.gentics.grd+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.geo+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.geocube+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.geogebra.file": {
        source: "iana",
        extensions: ["ggb"]
      },
      "application/vnd.geogebra.slides": {
        source: "iana"
      },
      "application/vnd.geogebra.tool": {
        source: "iana",
        extensions: ["ggt"]
      },
      "application/vnd.geometry-explorer": {
        source: "iana",
        extensions: ["gex", "gre"]
      },
      "application/vnd.geonext": {
        source: "iana",
        extensions: ["gxt"]
      },
      "application/vnd.geoplan": {
        source: "iana",
        extensions: ["g2w"]
      },
      "application/vnd.geospace": {
        source: "iana",
        extensions: ["g3w"]
      },
      "application/vnd.gerber": {
        source: "iana"
      },
      "application/vnd.globalplatform.card-content-mgt": {
        source: "iana"
      },
      "application/vnd.globalplatform.card-content-mgt-response": {
        source: "iana"
      },
      "application/vnd.gmx": {
        source: "iana",
        extensions: ["gmx"]
      },
      "application/vnd.google-apps.document": {
        compressible: !1,
        extensions: ["gdoc"]
      },
      "application/vnd.google-apps.presentation": {
        compressible: !1,
        extensions: ["gslides"]
      },
      "application/vnd.google-apps.spreadsheet": {
        compressible: !1,
        extensions: ["gsheet"]
      },
      "application/vnd.google-earth.kml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["kml"]
      },
      "application/vnd.google-earth.kmz": {
        source: "iana",
        compressible: !1,
        extensions: ["kmz"]
      },
      "application/vnd.gov.sk.e-form+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.gov.sk.e-form+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.gov.sk.xmldatacontainer+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.grafeq": {
        source: "iana",
        extensions: ["gqf", "gqs"]
      },
      "application/vnd.gridmp": {
        source: "iana"
      },
      "application/vnd.groove-account": {
        source: "iana",
        extensions: ["gac"]
      },
      "application/vnd.groove-help": {
        source: "iana",
        extensions: ["ghf"]
      },
      "application/vnd.groove-identity-message": {
        source: "iana",
        extensions: ["gim"]
      },
      "application/vnd.groove-injector": {
        source: "iana",
        extensions: ["grv"]
      },
      "application/vnd.groove-tool-message": {
        source: "iana",
        extensions: ["gtm"]
      },
      "application/vnd.groove-tool-template": {
        source: "iana",
        extensions: ["tpl"]
      },
      "application/vnd.groove-vcard": {
        source: "iana",
        extensions: ["vcg"]
      },
      "application/vnd.hal+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.hal+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["hal"]
      },
      "application/vnd.handheld-entertainment+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["zmm"]
      },
      "application/vnd.hbci": {
        source: "iana",
        extensions: ["hbci"]
      },
      "application/vnd.hc+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.hcl-bireports": {
        source: "iana"
      },
      "application/vnd.hdt": {
        source: "iana"
      },
      "application/vnd.heroku+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.hhe.lesson-player": {
        source: "iana",
        extensions: ["les"]
      },
      "application/vnd.hl7cda+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/vnd.hl7v2+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/vnd.hp-hpgl": {
        source: "iana",
        extensions: ["hpgl"]
      },
      "application/vnd.hp-hpid": {
        source: "iana",
        extensions: ["hpid"]
      },
      "application/vnd.hp-hps": {
        source: "iana",
        extensions: ["hps"]
      },
      "application/vnd.hp-jlyt": {
        source: "iana",
        extensions: ["jlt"]
      },
      "application/vnd.hp-pcl": {
        source: "iana",
        extensions: ["pcl"]
      },
      "application/vnd.hp-pclxl": {
        source: "iana",
        extensions: ["pclxl"]
      },
      "application/vnd.httphone": {
        source: "iana"
      },
      "application/vnd.hydrostatix.sof-data": {
        source: "iana",
        extensions: ["sfd-hdstx"]
      },
      "application/vnd.hyper+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.hyper-item+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.hyperdrive+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.hzn-3d-crossword": {
        source: "iana"
      },
      "application/vnd.ibm.afplinedata": {
        source: "iana"
      },
      "application/vnd.ibm.electronic-media": {
        source: "iana"
      },
      "application/vnd.ibm.minipay": {
        source: "iana",
        extensions: ["mpy"]
      },
      "application/vnd.ibm.modcap": {
        source: "iana",
        extensions: ["afp", "listafp", "list3820"]
      },
      "application/vnd.ibm.rights-management": {
        source: "iana",
        extensions: ["irm"]
      },
      "application/vnd.ibm.secure-container": {
        source: "iana",
        extensions: ["sc"]
      },
      "application/vnd.iccprofile": {
        source: "iana",
        extensions: ["icc", "icm"]
      },
      "application/vnd.ieee.1905": {
        source: "iana"
      },
      "application/vnd.igloader": {
        source: "iana",
        extensions: ["igl"]
      },
      "application/vnd.imagemeter.folder+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.imagemeter.image+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.immervision-ivp": {
        source: "iana",
        extensions: ["ivp"]
      },
      "application/vnd.immervision-ivu": {
        source: "iana",
        extensions: ["ivu"]
      },
      "application/vnd.ims.imsccv1p1": {
        source: "iana"
      },
      "application/vnd.ims.imsccv1p2": {
        source: "iana"
      },
      "application/vnd.ims.imsccv1p3": {
        source: "iana"
      },
      "application/vnd.ims.lis.v2.result+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ims.lti.v2.toolproxy+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ims.lti.v2.toolproxy.id+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ims.lti.v2.toolsettings+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ims.lti.v2.toolsettings.simple+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.informedcontrol.rms+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.informix-visionary": {
        source: "iana"
      },
      "application/vnd.infotech.project": {
        source: "iana"
      },
      "application/vnd.infotech.project+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.innopath.wamp.notification": {
        source: "iana"
      },
      "application/vnd.insors.igm": {
        source: "iana",
        extensions: ["igm"]
      },
      "application/vnd.intercon.formnet": {
        source: "iana",
        extensions: ["xpw", "xpx"]
      },
      "application/vnd.intergeo": {
        source: "iana",
        extensions: ["i2g"]
      },
      "application/vnd.intertrust.digibox": {
        source: "iana"
      },
      "application/vnd.intertrust.nncp": {
        source: "iana"
      },
      "application/vnd.intu.qbo": {
        source: "iana",
        extensions: ["qbo"]
      },
      "application/vnd.intu.qfx": {
        source: "iana",
        extensions: ["qfx"]
      },
      "application/vnd.iptc.g2.catalogitem+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.iptc.g2.conceptitem+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.iptc.g2.knowledgeitem+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.iptc.g2.newsitem+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.iptc.g2.newsmessage+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.iptc.g2.packageitem+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.iptc.g2.planningitem+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ipunplugged.rcprofile": {
        source: "iana",
        extensions: ["rcprofile"]
      },
      "application/vnd.irepository.package+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["irp"]
      },
      "application/vnd.is-xpr": {
        source: "iana",
        extensions: ["xpr"]
      },
      "application/vnd.isac.fcs": {
        source: "iana",
        extensions: ["fcs"]
      },
      "application/vnd.iso11783-10+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.jam": {
        source: "iana",
        extensions: ["jam"]
      },
      "application/vnd.japannet-directory-service": {
        source: "iana"
      },
      "application/vnd.japannet-jpnstore-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-payment-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-registration": {
        source: "iana"
      },
      "application/vnd.japannet-registration-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-setstore-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-verification": {
        source: "iana"
      },
      "application/vnd.japannet-verification-wakeup": {
        source: "iana"
      },
      "application/vnd.jcp.javame.midlet-rms": {
        source: "iana",
        extensions: ["rms"]
      },
      "application/vnd.jisp": {
        source: "iana",
        extensions: ["jisp"]
      },
      "application/vnd.joost.joda-archive": {
        source: "iana",
        extensions: ["joda"]
      },
      "application/vnd.jsk.isdn-ngn": {
        source: "iana"
      },
      "application/vnd.kahootz": {
        source: "iana",
        extensions: ["ktz", "ktr"]
      },
      "application/vnd.kde.karbon": {
        source: "iana",
        extensions: ["karbon"]
      },
      "application/vnd.kde.kchart": {
        source: "iana",
        extensions: ["chrt"]
      },
      "application/vnd.kde.kformula": {
        source: "iana",
        extensions: ["kfo"]
      },
      "application/vnd.kde.kivio": {
        source: "iana",
        extensions: ["flw"]
      },
      "application/vnd.kde.kontour": {
        source: "iana",
        extensions: ["kon"]
      },
      "application/vnd.kde.kpresenter": {
        source: "iana",
        extensions: ["kpr", "kpt"]
      },
      "application/vnd.kde.kspread": {
        source: "iana",
        extensions: ["ksp"]
      },
      "application/vnd.kde.kword": {
        source: "iana",
        extensions: ["kwd", "kwt"]
      },
      "application/vnd.kenameaapp": {
        source: "iana",
        extensions: ["htke"]
      },
      "application/vnd.kidspiration": {
        source: "iana",
        extensions: ["kia"]
      },
      "application/vnd.kinar": {
        source: "iana",
        extensions: ["kne", "knp"]
      },
      "application/vnd.koan": {
        source: "iana",
        extensions: ["skp", "skd", "skt", "skm"]
      },
      "application/vnd.kodak-descriptor": {
        source: "iana",
        extensions: ["sse"]
      },
      "application/vnd.las": {
        source: "iana"
      },
      "application/vnd.las.las+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.las.las+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["lasxml"]
      },
      "application/vnd.laszip": {
        source: "iana"
      },
      "application/vnd.leap+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.liberty-request+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.llamagraphics.life-balance.desktop": {
        source: "iana",
        extensions: ["lbd"]
      },
      "application/vnd.llamagraphics.life-balance.exchange+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["lbe"]
      },
      "application/vnd.logipipe.circuit+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.loom": {
        source: "iana"
      },
      "application/vnd.lotus-1-2-3": {
        source: "iana",
        extensions: ["123"]
      },
      "application/vnd.lotus-approach": {
        source: "iana",
        extensions: ["apr"]
      },
      "application/vnd.lotus-freelance": {
        source: "iana",
        extensions: ["pre"]
      },
      "application/vnd.lotus-notes": {
        source: "iana",
        extensions: ["nsf"]
      },
      "application/vnd.lotus-organizer": {
        source: "iana",
        extensions: ["org"]
      },
      "application/vnd.lotus-screencam": {
        source: "iana",
        extensions: ["scm"]
      },
      "application/vnd.lotus-wordpro": {
        source: "iana",
        extensions: ["lwp"]
      },
      "application/vnd.macports.portpkg": {
        source: "iana",
        extensions: ["portpkg"]
      },
      "application/vnd.mapbox-vector-tile": {
        source: "iana",
        extensions: ["mvt"]
      },
      "application/vnd.marlin.drm.actiontoken+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.marlin.drm.conftoken+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.marlin.drm.license+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.marlin.drm.mdcf": {
        source: "iana"
      },
      "application/vnd.mason+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.maxar.archive.3tz+zip": {
        source: "iana",
        compressible: !1
      },
      "application/vnd.maxmind.maxmind-db": {
        source: "iana"
      },
      "application/vnd.mcd": {
        source: "iana",
        extensions: ["mcd"]
      },
      "application/vnd.medcalcdata": {
        source: "iana",
        extensions: ["mc1"]
      },
      "application/vnd.mediastation.cdkey": {
        source: "iana",
        extensions: ["cdkey"]
      },
      "application/vnd.meridian-slingshot": {
        source: "iana"
      },
      "application/vnd.mfer": {
        source: "iana",
        extensions: ["mwf"]
      },
      "application/vnd.mfmp": {
        source: "iana",
        extensions: ["mfm"]
      },
      "application/vnd.micro+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.micrografx.flo": {
        source: "iana",
        extensions: ["flo"]
      },
      "application/vnd.micrografx.igx": {
        source: "iana",
        extensions: ["igx"]
      },
      "application/vnd.microsoft.portable-executable": {
        source: "iana"
      },
      "application/vnd.microsoft.windows.thumbnail-cache": {
        source: "iana"
      },
      "application/vnd.miele+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.mif": {
        source: "iana",
        extensions: ["mif"]
      },
      "application/vnd.minisoft-hp3000-save": {
        source: "iana"
      },
      "application/vnd.mitsubishi.misty-guard.trustweb": {
        source: "iana"
      },
      "application/vnd.mobius.daf": {
        source: "iana",
        extensions: ["daf"]
      },
      "application/vnd.mobius.dis": {
        source: "iana",
        extensions: ["dis"]
      },
      "application/vnd.mobius.mbk": {
        source: "iana",
        extensions: ["mbk"]
      },
      "application/vnd.mobius.mqy": {
        source: "iana",
        extensions: ["mqy"]
      },
      "application/vnd.mobius.msl": {
        source: "iana",
        extensions: ["msl"]
      },
      "application/vnd.mobius.plc": {
        source: "iana",
        extensions: ["plc"]
      },
      "application/vnd.mobius.txf": {
        source: "iana",
        extensions: ["txf"]
      },
      "application/vnd.mophun.application": {
        source: "iana",
        extensions: ["mpn"]
      },
      "application/vnd.mophun.certificate": {
        source: "iana",
        extensions: ["mpc"]
      },
      "application/vnd.motorola.flexsuite": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.adsi": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.fis": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.gotap": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.kmr": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.ttc": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.wem": {
        source: "iana"
      },
      "application/vnd.motorola.iprm": {
        source: "iana"
      },
      "application/vnd.mozilla.xul+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xul"]
      },
      "application/vnd.ms-3mfdocument": {
        source: "iana"
      },
      "application/vnd.ms-artgalry": {
        source: "iana",
        extensions: ["cil"]
      },
      "application/vnd.ms-asf": {
        source: "iana"
      },
      "application/vnd.ms-cab-compressed": {
        source: "iana",
        extensions: ["cab"]
      },
      "application/vnd.ms-color.iccprofile": {
        source: "apache"
      },
      "application/vnd.ms-excel": {
        source: "iana",
        compressible: !1,
        extensions: ["xls", "xlm", "xla", "xlc", "xlt", "xlw"]
      },
      "application/vnd.ms-excel.addin.macroenabled.12": {
        source: "iana",
        extensions: ["xlam"]
      },
      "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
        source: "iana",
        extensions: ["xlsb"]
      },
      "application/vnd.ms-excel.sheet.macroenabled.12": {
        source: "iana",
        extensions: ["xlsm"]
      },
      "application/vnd.ms-excel.template.macroenabled.12": {
        source: "iana",
        extensions: ["xltm"]
      },
      "application/vnd.ms-fontobject": {
        source: "iana",
        compressible: !0,
        extensions: ["eot"]
      },
      "application/vnd.ms-htmlhelp": {
        source: "iana",
        extensions: ["chm"]
      },
      "application/vnd.ms-ims": {
        source: "iana",
        extensions: ["ims"]
      },
      "application/vnd.ms-lrm": {
        source: "iana",
        extensions: ["lrm"]
      },
      "application/vnd.ms-office.activex+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ms-officetheme": {
        source: "iana",
        extensions: ["thmx"]
      },
      "application/vnd.ms-opentype": {
        source: "apache",
        compressible: !0
      },
      "application/vnd.ms-outlook": {
        compressible: !1,
        extensions: ["msg"]
      },
      "application/vnd.ms-package.obfuscated-opentype": {
        source: "apache"
      },
      "application/vnd.ms-pki.seccat": {
        source: "apache",
        extensions: ["cat"]
      },
      "application/vnd.ms-pki.stl": {
        source: "apache",
        extensions: ["stl"]
      },
      "application/vnd.ms-playready.initiator+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ms-powerpoint": {
        source: "iana",
        compressible: !1,
        extensions: ["ppt", "pps", "pot"]
      },
      "application/vnd.ms-powerpoint.addin.macroenabled.12": {
        source: "iana",
        extensions: ["ppam"]
      },
      "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
        source: "iana",
        extensions: ["pptm"]
      },
      "application/vnd.ms-powerpoint.slide.macroenabled.12": {
        source: "iana",
        extensions: ["sldm"]
      },
      "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
        source: "iana",
        extensions: ["ppsm"]
      },
      "application/vnd.ms-powerpoint.template.macroenabled.12": {
        source: "iana",
        extensions: ["potm"]
      },
      "application/vnd.ms-printdevicecapabilities+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ms-printing.printticket+xml": {
        source: "apache",
        compressible: !0
      },
      "application/vnd.ms-printschematicket+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ms-project": {
        source: "iana",
        extensions: ["mpp", "mpt"]
      },
      "application/vnd.ms-tnef": {
        source: "iana"
      },
      "application/vnd.ms-windows.devicepairing": {
        source: "iana"
      },
      "application/vnd.ms-windows.nwprinting.oob": {
        source: "iana"
      },
      "application/vnd.ms-windows.printerpairing": {
        source: "iana"
      },
      "application/vnd.ms-windows.wsd.oob": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.lic-chlg-req": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.lic-resp": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.meter-chlg-req": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.meter-resp": {
        source: "iana"
      },
      "application/vnd.ms-word.document.macroenabled.12": {
        source: "iana",
        extensions: ["docm"]
      },
      "application/vnd.ms-word.template.macroenabled.12": {
        source: "iana",
        extensions: ["dotm"]
      },
      "application/vnd.ms-works": {
        source: "iana",
        extensions: ["wps", "wks", "wcm", "wdb"]
      },
      "application/vnd.ms-wpl": {
        source: "iana",
        extensions: ["wpl"]
      },
      "application/vnd.ms-xpsdocument": {
        source: "iana",
        compressible: !1,
        extensions: ["xps"]
      },
      "application/vnd.msa-disk-image": {
        source: "iana"
      },
      "application/vnd.mseq": {
        source: "iana",
        extensions: ["mseq"]
      },
      "application/vnd.msign": {
        source: "iana"
      },
      "application/vnd.multiad.creator": {
        source: "iana"
      },
      "application/vnd.multiad.creator.cif": {
        source: "iana"
      },
      "application/vnd.music-niff": {
        source: "iana"
      },
      "application/vnd.musician": {
        source: "iana",
        extensions: ["mus"]
      },
      "application/vnd.muvee.style": {
        source: "iana",
        extensions: ["msty"]
      },
      "application/vnd.mynfc": {
        source: "iana",
        extensions: ["taglet"]
      },
      "application/vnd.nacamar.ybrid+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.ncd.control": {
        source: "iana"
      },
      "application/vnd.ncd.reference": {
        source: "iana"
      },
      "application/vnd.nearst.inv+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.nebumind.line": {
        source: "iana"
      },
      "application/vnd.nervana": {
        source: "iana"
      },
      "application/vnd.netfpx": {
        source: "iana"
      },
      "application/vnd.neurolanguage.nlu": {
        source: "iana",
        extensions: ["nlu"]
      },
      "application/vnd.nimn": {
        source: "iana"
      },
      "application/vnd.nintendo.nitro.rom": {
        source: "iana"
      },
      "application/vnd.nintendo.snes.rom": {
        source: "iana"
      },
      "application/vnd.nitf": {
        source: "iana",
        extensions: ["ntf", "nitf"]
      },
      "application/vnd.noblenet-directory": {
        source: "iana",
        extensions: ["nnd"]
      },
      "application/vnd.noblenet-sealer": {
        source: "iana",
        extensions: ["nns"]
      },
      "application/vnd.noblenet-web": {
        source: "iana",
        extensions: ["nnw"]
      },
      "application/vnd.nokia.catalogs": {
        source: "iana"
      },
      "application/vnd.nokia.conml+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.conml+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.nokia.iptv.config+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.nokia.isds-radio-presets": {
        source: "iana"
      },
      "application/vnd.nokia.landmark+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.landmark+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.nokia.landmarkcollection+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.nokia.n-gage.ac+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["ac"]
      },
      "application/vnd.nokia.n-gage.data": {
        source: "iana",
        extensions: ["ngdat"]
      },
      "application/vnd.nokia.n-gage.symbian.install": {
        source: "iana",
        extensions: ["n-gage"]
      },
      "application/vnd.nokia.ncd": {
        source: "iana"
      },
      "application/vnd.nokia.pcd+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.pcd+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.nokia.radio-preset": {
        source: "iana",
        extensions: ["rpst"]
      },
      "application/vnd.nokia.radio-presets": {
        source: "iana",
        extensions: ["rpss"]
      },
      "application/vnd.novadigm.edm": {
        source: "iana",
        extensions: ["edm"]
      },
      "application/vnd.novadigm.edx": {
        source: "iana",
        extensions: ["edx"]
      },
      "application/vnd.novadigm.ext": {
        source: "iana",
        extensions: ["ext"]
      },
      "application/vnd.ntt-local.content-share": {
        source: "iana"
      },
      "application/vnd.ntt-local.file-transfer": {
        source: "iana"
      },
      "application/vnd.ntt-local.ogw_remote-access": {
        source: "iana"
      },
      "application/vnd.ntt-local.sip-ta_remote": {
        source: "iana"
      },
      "application/vnd.ntt-local.sip-ta_tcp_stream": {
        source: "iana"
      },
      "application/vnd.oasis.opendocument.chart": {
        source: "iana",
        extensions: ["odc"]
      },
      "application/vnd.oasis.opendocument.chart-template": {
        source: "iana",
        extensions: ["otc"]
      },
      "application/vnd.oasis.opendocument.database": {
        source: "iana",
        extensions: ["odb"]
      },
      "application/vnd.oasis.opendocument.formula": {
        source: "iana",
        extensions: ["odf"]
      },
      "application/vnd.oasis.opendocument.formula-template": {
        source: "iana",
        extensions: ["odft"]
      },
      "application/vnd.oasis.opendocument.graphics": {
        source: "iana",
        compressible: !1,
        extensions: ["odg"]
      },
      "application/vnd.oasis.opendocument.graphics-template": {
        source: "iana",
        extensions: ["otg"]
      },
      "application/vnd.oasis.opendocument.image": {
        source: "iana",
        extensions: ["odi"]
      },
      "application/vnd.oasis.opendocument.image-template": {
        source: "iana",
        extensions: ["oti"]
      },
      "application/vnd.oasis.opendocument.presentation": {
        source: "iana",
        compressible: !1,
        extensions: ["odp"]
      },
      "application/vnd.oasis.opendocument.presentation-template": {
        source: "iana",
        extensions: ["otp"]
      },
      "application/vnd.oasis.opendocument.spreadsheet": {
        source: "iana",
        compressible: !1,
        extensions: ["ods"]
      },
      "application/vnd.oasis.opendocument.spreadsheet-template": {
        source: "iana",
        extensions: ["ots"]
      },
      "application/vnd.oasis.opendocument.text": {
        source: "iana",
        compressible: !1,
        extensions: ["odt"]
      },
      "application/vnd.oasis.opendocument.text-master": {
        source: "iana",
        extensions: ["odm"]
      },
      "application/vnd.oasis.opendocument.text-template": {
        source: "iana",
        extensions: ["ott"]
      },
      "application/vnd.oasis.opendocument.text-web": {
        source: "iana",
        extensions: ["oth"]
      },
      "application/vnd.obn": {
        source: "iana"
      },
      "application/vnd.ocf+cbor": {
        source: "iana"
      },
      "application/vnd.oci.image.manifest.v1+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oftn.l10n+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.contentaccessdownload+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.contentaccessstreaming+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.cspg-hexbinary": {
        source: "iana"
      },
      "application/vnd.oipf.dae.svg+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.dae.xhtml+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.mippvcontrolmessage+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.pae.gem": {
        source: "iana"
      },
      "application/vnd.oipf.spdiscovery+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.spdlist+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.ueprofile+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oipf.userprofile+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.olpc-sugar": {
        source: "iana",
        extensions: ["xo"]
      },
      "application/vnd.oma-scws-config": {
        source: "iana"
      },
      "application/vnd.oma-scws-http-request": {
        source: "iana"
      },
      "application/vnd.oma-scws-http-response": {
        source: "iana"
      },
      "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.bcast.drm-trigger+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.bcast.imd+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.bcast.ltkm": {
        source: "iana"
      },
      "application/vnd.oma.bcast.notification+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.bcast.provisioningtrigger": {
        source: "iana"
      },
      "application/vnd.oma.bcast.sgboot": {
        source: "iana"
      },
      "application/vnd.oma.bcast.sgdd+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.bcast.sgdu": {
        source: "iana"
      },
      "application/vnd.oma.bcast.simple-symbol-container": {
        source: "iana"
      },
      "application/vnd.oma.bcast.smartcard-trigger+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.bcast.sprov+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.bcast.stkm": {
        source: "iana"
      },
      "application/vnd.oma.cab-address-book+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.cab-feature-handler+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.cab-pcc+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.cab-subs-invite+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.cab-user-prefs+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.dcd": {
        source: "iana"
      },
      "application/vnd.oma.dcdc": {
        source: "iana"
      },
      "application/vnd.oma.dd2+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["dd2"]
      },
      "application/vnd.oma.drm.risd+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.group-usage-list+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.lwm2m+cbor": {
        source: "iana"
      },
      "application/vnd.oma.lwm2m+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.lwm2m+tlv": {
        source: "iana"
      },
      "application/vnd.oma.pal+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.poc.detailed-progress-report+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.poc.final-report+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.poc.groups+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.poc.invocation-descriptor+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.poc.optimized-progress-report+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.push": {
        source: "iana"
      },
      "application/vnd.oma.scidm.messages+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oma.xcap-directory+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.omads-email+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/vnd.omads-file+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/vnd.omads-folder+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/vnd.omaloc-supl-init": {
        source: "iana"
      },
      "application/vnd.onepager": {
        source: "iana"
      },
      "application/vnd.onepagertamp": {
        source: "iana"
      },
      "application/vnd.onepagertamx": {
        source: "iana"
      },
      "application/vnd.onepagertat": {
        source: "iana"
      },
      "application/vnd.onepagertatp": {
        source: "iana"
      },
      "application/vnd.onepagertatx": {
        source: "iana"
      },
      "application/vnd.openblox.game+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["obgx"]
      },
      "application/vnd.openblox.game-binary": {
        source: "iana"
      },
      "application/vnd.openeye.oeb": {
        source: "iana"
      },
      "application/vnd.openofficeorg.extension": {
        source: "apache",
        extensions: ["oxt"]
      },
      "application/vnd.openstreetmap.data+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["osm"]
      },
      "application/vnd.opentimestamps.ots": {
        source: "iana"
      },
      "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.drawing+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
        source: "iana",
        compressible: !1,
        extensions: ["pptx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slide": {
        source: "iana",
        extensions: ["sldx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
        source: "iana",
        extensions: ["ppsx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.template": {
        source: "iana",
        extensions: ["potx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
        source: "iana",
        compressible: !1,
        extensions: ["xlsx"]
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
        source: "iana",
        extensions: ["xltx"]
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.theme+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.vmldrawing": {
        source: "iana"
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
        source: "iana",
        compressible: !1,
        extensions: ["docx"]
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
        source: "iana",
        extensions: ["dotx"]
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-package.core-properties+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.openxmlformats-package.relationships+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oracle.resource+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.orange.indata": {
        source: "iana"
      },
      "application/vnd.osa.netdeploy": {
        source: "iana"
      },
      "application/vnd.osgeo.mapguide.package": {
        source: "iana",
        extensions: ["mgp"]
      },
      "application/vnd.osgi.bundle": {
        source: "iana"
      },
      "application/vnd.osgi.dp": {
        source: "iana",
        extensions: ["dp"]
      },
      "application/vnd.osgi.subsystem": {
        source: "iana",
        extensions: ["esa"]
      },
      "application/vnd.otps.ct-kip+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.oxli.countgraph": {
        source: "iana"
      },
      "application/vnd.pagerduty+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.palm": {
        source: "iana",
        extensions: ["pdb", "pqa", "oprc"]
      },
      "application/vnd.panoply": {
        source: "iana"
      },
      "application/vnd.paos.xml": {
        source: "iana"
      },
      "application/vnd.patentdive": {
        source: "iana"
      },
      "application/vnd.patientecommsdoc": {
        source: "iana"
      },
      "application/vnd.pawaafile": {
        source: "iana",
        extensions: ["paw"]
      },
      "application/vnd.pcos": {
        source: "iana"
      },
      "application/vnd.pg.format": {
        source: "iana",
        extensions: ["str"]
      },
      "application/vnd.pg.osasli": {
        source: "iana",
        extensions: ["ei6"]
      },
      "application/vnd.piaccess.application-licence": {
        source: "iana"
      },
      "application/vnd.picsel": {
        source: "iana",
        extensions: ["efif"]
      },
      "application/vnd.pmi.widget": {
        source: "iana",
        extensions: ["wg"]
      },
      "application/vnd.poc.group-advertisement+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.pocketlearn": {
        source: "iana",
        extensions: ["plf"]
      },
      "application/vnd.powerbuilder6": {
        source: "iana",
        extensions: ["pbd"]
      },
      "application/vnd.powerbuilder6-s": {
        source: "iana"
      },
      "application/vnd.powerbuilder7": {
        source: "iana"
      },
      "application/vnd.powerbuilder7-s": {
        source: "iana"
      },
      "application/vnd.powerbuilder75": {
        source: "iana"
      },
      "application/vnd.powerbuilder75-s": {
        source: "iana"
      },
      "application/vnd.preminet": {
        source: "iana"
      },
      "application/vnd.previewsystems.box": {
        source: "iana",
        extensions: ["box"]
      },
      "application/vnd.proteus.magazine": {
        source: "iana",
        extensions: ["mgz"]
      },
      "application/vnd.psfs": {
        source: "iana"
      },
      "application/vnd.publishare-delta-tree": {
        source: "iana",
        extensions: ["qps"]
      },
      "application/vnd.pvi.ptid1": {
        source: "iana",
        extensions: ["ptid"]
      },
      "application/vnd.pwg-multiplexed": {
        source: "iana"
      },
      "application/vnd.pwg-xhtml-print+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.qualcomm.brew-app-res": {
        source: "iana"
      },
      "application/vnd.quarantainenet": {
        source: "iana"
      },
      "application/vnd.quark.quarkxpress": {
        source: "iana",
        extensions: ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"]
      },
      "application/vnd.quobject-quoxdocument": {
        source: "iana"
      },
      "application/vnd.radisys.moml+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-audit+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-audit-conf+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-audit-conn+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-audit-dialog+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-audit-stream+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-conf+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-dialog+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-dialog-base+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-dialog-fax-detect+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-dialog-group+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-dialog-speech+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.radisys.msml-dialog-transform+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.rainstor.data": {
        source: "iana"
      },
      "application/vnd.rapid": {
        source: "iana"
      },
      "application/vnd.rar": {
        source: "iana",
        extensions: ["rar"]
      },
      "application/vnd.realvnc.bed": {
        source: "iana",
        extensions: ["bed"]
      },
      "application/vnd.recordare.musicxml": {
        source: "iana",
        extensions: ["mxl"]
      },
      "application/vnd.recordare.musicxml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["musicxml"]
      },
      "application/vnd.renlearn.rlprint": {
        source: "iana"
      },
      "application/vnd.resilient.logic": {
        source: "iana"
      },
      "application/vnd.restful+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.rig.cryptonote": {
        source: "iana",
        extensions: ["cryptonote"]
      },
      "application/vnd.rim.cod": {
        source: "apache",
        extensions: ["cod"]
      },
      "application/vnd.rn-realmedia": {
        source: "apache",
        extensions: ["rm"]
      },
      "application/vnd.rn-realmedia-vbr": {
        source: "apache",
        extensions: ["rmvb"]
      },
      "application/vnd.route66.link66+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["link66"]
      },
      "application/vnd.rs-274x": {
        source: "iana"
      },
      "application/vnd.ruckus.download": {
        source: "iana"
      },
      "application/vnd.s3sms": {
        source: "iana"
      },
      "application/vnd.sailingtracker.track": {
        source: "iana",
        extensions: ["st"]
      },
      "application/vnd.sar": {
        source: "iana"
      },
      "application/vnd.sbm.cid": {
        source: "iana"
      },
      "application/vnd.sbm.mid2": {
        source: "iana"
      },
      "application/vnd.scribus": {
        source: "iana"
      },
      "application/vnd.sealed.3df": {
        source: "iana"
      },
      "application/vnd.sealed.csf": {
        source: "iana"
      },
      "application/vnd.sealed.doc": {
        source: "iana"
      },
      "application/vnd.sealed.eml": {
        source: "iana"
      },
      "application/vnd.sealed.mht": {
        source: "iana"
      },
      "application/vnd.sealed.net": {
        source: "iana"
      },
      "application/vnd.sealed.ppt": {
        source: "iana"
      },
      "application/vnd.sealed.tiff": {
        source: "iana"
      },
      "application/vnd.sealed.xls": {
        source: "iana"
      },
      "application/vnd.sealedmedia.softseal.html": {
        source: "iana"
      },
      "application/vnd.sealedmedia.softseal.pdf": {
        source: "iana"
      },
      "application/vnd.seemail": {
        source: "iana",
        extensions: ["see"]
      },
      "application/vnd.seis+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.sema": {
        source: "iana",
        extensions: ["sema"]
      },
      "application/vnd.semd": {
        source: "iana",
        extensions: ["semd"]
      },
      "application/vnd.semf": {
        source: "iana",
        extensions: ["semf"]
      },
      "application/vnd.shade-save-file": {
        source: "iana"
      },
      "application/vnd.shana.informed.formdata": {
        source: "iana",
        extensions: ["ifm"]
      },
      "application/vnd.shana.informed.formtemplate": {
        source: "iana",
        extensions: ["itp"]
      },
      "application/vnd.shana.informed.interchange": {
        source: "iana",
        extensions: ["iif"]
      },
      "application/vnd.shana.informed.package": {
        source: "iana",
        extensions: ["ipk"]
      },
      "application/vnd.shootproof+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.shopkick+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.shp": {
        source: "iana"
      },
      "application/vnd.shx": {
        source: "iana"
      },
      "application/vnd.sigrok.session": {
        source: "iana"
      },
      "application/vnd.simtech-mindmapper": {
        source: "iana",
        extensions: ["twd", "twds"]
      },
      "application/vnd.siren+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.smaf": {
        source: "iana",
        extensions: ["mmf"]
      },
      "application/vnd.smart.notebook": {
        source: "iana"
      },
      "application/vnd.smart.teacher": {
        source: "iana",
        extensions: ["teacher"]
      },
      "application/vnd.snesdev-page-table": {
        source: "iana"
      },
      "application/vnd.software602.filler.form+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["fo"]
      },
      "application/vnd.software602.filler.form-xml-zip": {
        source: "iana"
      },
      "application/vnd.solent.sdkm+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["sdkm", "sdkd"]
      },
      "application/vnd.spotfire.dxp": {
        source: "iana",
        extensions: ["dxp"]
      },
      "application/vnd.spotfire.sfs": {
        source: "iana",
        extensions: ["sfs"]
      },
      "application/vnd.sqlite3": {
        source: "iana"
      },
      "application/vnd.sss-cod": {
        source: "iana"
      },
      "application/vnd.sss-dtf": {
        source: "iana"
      },
      "application/vnd.sss-ntf": {
        source: "iana"
      },
      "application/vnd.stardivision.calc": {
        source: "apache",
        extensions: ["sdc"]
      },
      "application/vnd.stardivision.draw": {
        source: "apache",
        extensions: ["sda"]
      },
      "application/vnd.stardivision.impress": {
        source: "apache",
        extensions: ["sdd"]
      },
      "application/vnd.stardivision.math": {
        source: "apache",
        extensions: ["smf"]
      },
      "application/vnd.stardivision.writer": {
        source: "apache",
        extensions: ["sdw", "vor"]
      },
      "application/vnd.stardivision.writer-global": {
        source: "apache",
        extensions: ["sgl"]
      },
      "application/vnd.stepmania.package": {
        source: "iana",
        extensions: ["smzip"]
      },
      "application/vnd.stepmania.stepchart": {
        source: "iana",
        extensions: ["sm"]
      },
      "application/vnd.street-stream": {
        source: "iana"
      },
      "application/vnd.sun.wadl+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["wadl"]
      },
      "application/vnd.sun.xml.calc": {
        source: "apache",
        extensions: ["sxc"]
      },
      "application/vnd.sun.xml.calc.template": {
        source: "apache",
        extensions: ["stc"]
      },
      "application/vnd.sun.xml.draw": {
        source: "apache",
        extensions: ["sxd"]
      },
      "application/vnd.sun.xml.draw.template": {
        source: "apache",
        extensions: ["std"]
      },
      "application/vnd.sun.xml.impress": {
        source: "apache",
        extensions: ["sxi"]
      },
      "application/vnd.sun.xml.impress.template": {
        source: "apache",
        extensions: ["sti"]
      },
      "application/vnd.sun.xml.math": {
        source: "apache",
        extensions: ["sxm"]
      },
      "application/vnd.sun.xml.writer": {
        source: "apache",
        extensions: ["sxw"]
      },
      "application/vnd.sun.xml.writer.global": {
        source: "apache",
        extensions: ["sxg"]
      },
      "application/vnd.sun.xml.writer.template": {
        source: "apache",
        extensions: ["stw"]
      },
      "application/vnd.sus-calendar": {
        source: "iana",
        extensions: ["sus", "susp"]
      },
      "application/vnd.svd": {
        source: "iana",
        extensions: ["svd"]
      },
      "application/vnd.swiftview-ics": {
        source: "iana"
      },
      "application/vnd.sycle+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.syft+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.symbian.install": {
        source: "apache",
        extensions: ["sis", "sisx"]
      },
      "application/vnd.syncml+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["xsm"]
      },
      "application/vnd.syncml.dm+wbxml": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["bdm"]
      },
      "application/vnd.syncml.dm+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["xdm"]
      },
      "application/vnd.syncml.dm.notification": {
        source: "iana"
      },
      "application/vnd.syncml.dmddf+wbxml": {
        source: "iana"
      },
      "application/vnd.syncml.dmddf+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["ddf"]
      },
      "application/vnd.syncml.dmtnds+wbxml": {
        source: "iana"
      },
      "application/vnd.syncml.dmtnds+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0
      },
      "application/vnd.syncml.ds.notification": {
        source: "iana"
      },
      "application/vnd.tableschema+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.tao.intent-module-archive": {
        source: "iana",
        extensions: ["tao"]
      },
      "application/vnd.tcpdump.pcap": {
        source: "iana",
        extensions: ["pcap", "cap", "dmp"]
      },
      "application/vnd.think-cell.ppttc+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.tmd.mediaflex.api+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.tml": {
        source: "iana"
      },
      "application/vnd.tmobile-livetv": {
        source: "iana",
        extensions: ["tmo"]
      },
      "application/vnd.tri.onesource": {
        source: "iana"
      },
      "application/vnd.trid.tpt": {
        source: "iana",
        extensions: ["tpt"]
      },
      "application/vnd.triscape.mxs": {
        source: "iana",
        extensions: ["mxs"]
      },
      "application/vnd.trueapp": {
        source: "iana",
        extensions: ["tra"]
      },
      "application/vnd.truedoc": {
        source: "iana"
      },
      "application/vnd.ubisoft.webplayer": {
        source: "iana"
      },
      "application/vnd.ufdl": {
        source: "iana",
        extensions: ["ufd", "ufdl"]
      },
      "application/vnd.uiq.theme": {
        source: "iana",
        extensions: ["utz"]
      },
      "application/vnd.umajin": {
        source: "iana",
        extensions: ["umj"]
      },
      "application/vnd.unity": {
        source: "iana",
        extensions: ["unityweb"]
      },
      "application/vnd.uoml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["uoml"]
      },
      "application/vnd.uplanet.alert": {
        source: "iana"
      },
      "application/vnd.uplanet.alert-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.bearer-choice": {
        source: "iana"
      },
      "application/vnd.uplanet.bearer-choice-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.cacheop": {
        source: "iana"
      },
      "application/vnd.uplanet.cacheop-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.channel": {
        source: "iana"
      },
      "application/vnd.uplanet.channel-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.list": {
        source: "iana"
      },
      "application/vnd.uplanet.list-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.listcmd": {
        source: "iana"
      },
      "application/vnd.uplanet.listcmd-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.signal": {
        source: "iana"
      },
      "application/vnd.uri-map": {
        source: "iana"
      },
      "application/vnd.valve.source.material": {
        source: "iana"
      },
      "application/vnd.vcx": {
        source: "iana",
        extensions: ["vcx"]
      },
      "application/vnd.vd-study": {
        source: "iana"
      },
      "application/vnd.vectorworks": {
        source: "iana"
      },
      "application/vnd.vel+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.verimatrix.vcas": {
        source: "iana"
      },
      "application/vnd.veritone.aion+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.veryant.thin": {
        source: "iana"
      },
      "application/vnd.ves.encrypted": {
        source: "iana"
      },
      "application/vnd.vidsoft.vidconference": {
        source: "iana"
      },
      "application/vnd.visio": {
        source: "iana",
        extensions: ["vsd", "vst", "vss", "vsw"]
      },
      "application/vnd.visionary": {
        source: "iana",
        extensions: ["vis"]
      },
      "application/vnd.vividence.scriptfile": {
        source: "iana"
      },
      "application/vnd.vsf": {
        source: "iana",
        extensions: ["vsf"]
      },
      "application/vnd.wap.sic": {
        source: "iana"
      },
      "application/vnd.wap.slc": {
        source: "iana"
      },
      "application/vnd.wap.wbxml": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["wbxml"]
      },
      "application/vnd.wap.wmlc": {
        source: "iana",
        extensions: ["wmlc"]
      },
      "application/vnd.wap.wmlscriptc": {
        source: "iana",
        extensions: ["wmlsc"]
      },
      "application/vnd.webturbo": {
        source: "iana",
        extensions: ["wtb"]
      },
      "application/vnd.wfa.dpp": {
        source: "iana"
      },
      "application/vnd.wfa.p2p": {
        source: "iana"
      },
      "application/vnd.wfa.wsc": {
        source: "iana"
      },
      "application/vnd.windows.devicepairing": {
        source: "iana"
      },
      "application/vnd.wmc": {
        source: "iana"
      },
      "application/vnd.wmf.bootstrap": {
        source: "iana"
      },
      "application/vnd.wolfram.mathematica": {
        source: "iana"
      },
      "application/vnd.wolfram.mathematica.package": {
        source: "iana"
      },
      "application/vnd.wolfram.player": {
        source: "iana",
        extensions: ["nbp"]
      },
      "application/vnd.wordperfect": {
        source: "iana",
        extensions: ["wpd"]
      },
      "application/vnd.wqd": {
        source: "iana",
        extensions: ["wqd"]
      },
      "application/vnd.wrq-hp3000-labelled": {
        source: "iana"
      },
      "application/vnd.wt.stf": {
        source: "iana",
        extensions: ["stf"]
      },
      "application/vnd.wv.csp+wbxml": {
        source: "iana"
      },
      "application/vnd.wv.csp+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.wv.ssp+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.xacml+json": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.xara": {
        source: "iana",
        extensions: ["xar"]
      },
      "application/vnd.xfdl": {
        source: "iana",
        extensions: ["xfdl"]
      },
      "application/vnd.xfdl.webform": {
        source: "iana"
      },
      "application/vnd.xmi+xml": {
        source: "iana",
        compressible: !0
      },
      "application/vnd.xmpie.cpkg": {
        source: "iana"
      },
      "application/vnd.xmpie.dpkg": {
        source: "iana"
      },
      "application/vnd.xmpie.plan": {
        source: "iana"
      },
      "application/vnd.xmpie.ppkg": {
        source: "iana"
      },
      "application/vnd.xmpie.xlim": {
        source: "iana"
      },
      "application/vnd.yamaha.hv-dic": {
        source: "iana",
        extensions: ["hvd"]
      },
      "application/vnd.yamaha.hv-script": {
        source: "iana",
        extensions: ["hvs"]
      },
      "application/vnd.yamaha.hv-voice": {
        source: "iana",
        extensions: ["hvp"]
      },
      "application/vnd.yamaha.openscoreformat": {
        source: "iana",
        extensions: ["osf"]
      },
      "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["osfpvg"]
      },
      "application/vnd.yamaha.remote-setup": {
        source: "iana"
      },
      "application/vnd.yamaha.smaf-audio": {
        source: "iana",
        extensions: ["saf"]
      },
      "application/vnd.yamaha.smaf-phrase": {
        source: "iana",
        extensions: ["spf"]
      },
      "application/vnd.yamaha.through-ngn": {
        source: "iana"
      },
      "application/vnd.yamaha.tunnel-udpencap": {
        source: "iana"
      },
      "application/vnd.yaoweme": {
        source: "iana"
      },
      "application/vnd.yellowriver-custom-menu": {
        source: "iana",
        extensions: ["cmp"]
      },
      "application/vnd.youtube.yt": {
        source: "iana"
      },
      "application/vnd.zul": {
        source: "iana",
        extensions: ["zir", "zirz"]
      },
      "application/vnd.zzazz.deck+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["zaz"]
      },
      "application/voicexml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["vxml"]
      },
      "application/voucher-cms+json": {
        source: "iana",
        compressible: !0
      },
      "application/vq-rtcpxr": {
        source: "iana"
      },
      "application/wasm": {
        source: "iana",
        compressible: !0,
        extensions: ["wasm"]
      },
      "application/watcherinfo+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["wif"]
      },
      "application/webpush-options+json": {
        source: "iana",
        compressible: !0
      },
      "application/whoispp-query": {
        source: "iana"
      },
      "application/whoispp-response": {
        source: "iana"
      },
      "application/widget": {
        source: "iana",
        extensions: ["wgt"]
      },
      "application/winhlp": {
        source: "apache",
        extensions: ["hlp"]
      },
      "application/wita": {
        source: "iana"
      },
      "application/wordperfect5.1": {
        source: "iana"
      },
      "application/wsdl+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["wsdl"]
      },
      "application/wspolicy+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["wspolicy"]
      },
      "application/x-7z-compressed": {
        source: "apache",
        compressible: !1,
        extensions: ["7z"]
      },
      "application/x-abiword": {
        source: "apache",
        extensions: ["abw"]
      },
      "application/x-ace-compressed": {
        source: "apache",
        extensions: ["ace"]
      },
      "application/x-amf": {
        source: "apache"
      },
      "application/x-apple-diskimage": {
        source: "apache",
        extensions: ["dmg"]
      },
      "application/x-arj": {
        compressible: !1,
        extensions: ["arj"]
      },
      "application/x-authorware-bin": {
        source: "apache",
        extensions: ["aab", "x32", "u32", "vox"]
      },
      "application/x-authorware-map": {
        source: "apache",
        extensions: ["aam"]
      },
      "application/x-authorware-seg": {
        source: "apache",
        extensions: ["aas"]
      },
      "application/x-bcpio": {
        source: "apache",
        extensions: ["bcpio"]
      },
      "application/x-bdoc": {
        compressible: !1,
        extensions: ["bdoc"]
      },
      "application/x-bittorrent": {
        source: "apache",
        extensions: ["torrent"]
      },
      "application/x-blorb": {
        source: "apache",
        extensions: ["blb", "blorb"]
      },
      "application/x-bzip": {
        source: "apache",
        compressible: !1,
        extensions: ["bz"]
      },
      "application/x-bzip2": {
        source: "apache",
        compressible: !1,
        extensions: ["bz2", "boz"]
      },
      "application/x-cbr": {
        source: "apache",
        extensions: ["cbr", "cba", "cbt", "cbz", "cb7"]
      },
      "application/x-cdlink": {
        source: "apache",
        extensions: ["vcd"]
      },
      "application/x-cfs-compressed": {
        source: "apache",
        extensions: ["cfs"]
      },
      "application/x-chat": {
        source: "apache",
        extensions: ["chat"]
      },
      "application/x-chess-pgn": {
        source: "apache",
        extensions: ["pgn"]
      },
      "application/x-chrome-extension": {
        extensions: ["crx"]
      },
      "application/x-cocoa": {
        source: "nginx",
        extensions: ["cco"]
      },
      "application/x-compress": {
        source: "apache"
      },
      "application/x-conference": {
        source: "apache",
        extensions: ["nsc"]
      },
      "application/x-cpio": {
        source: "apache",
        extensions: ["cpio"]
      },
      "application/x-csh": {
        source: "apache",
        extensions: ["csh"]
      },
      "application/x-deb": {
        compressible: !1
      },
      "application/x-debian-package": {
        source: "apache",
        extensions: ["deb", "udeb"]
      },
      "application/x-dgc-compressed": {
        source: "apache",
        extensions: ["dgc"]
      },
      "application/x-director": {
        source: "apache",
        extensions: ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"]
      },
      "application/x-doom": {
        source: "apache",
        extensions: ["wad"]
      },
      "application/x-dtbncx+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["ncx"]
      },
      "application/x-dtbook+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["dtb"]
      },
      "application/x-dtbresource+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["res"]
      },
      "application/x-dvi": {
        source: "apache",
        compressible: !1,
        extensions: ["dvi"]
      },
      "application/x-envoy": {
        source: "apache",
        extensions: ["evy"]
      },
      "application/x-eva": {
        source: "apache",
        extensions: ["eva"]
      },
      "application/x-font-bdf": {
        source: "apache",
        extensions: ["bdf"]
      },
      "application/x-font-dos": {
        source: "apache"
      },
      "application/x-font-framemaker": {
        source: "apache"
      },
      "application/x-font-ghostscript": {
        source: "apache",
        extensions: ["gsf"]
      },
      "application/x-font-libgrx": {
        source: "apache"
      },
      "application/x-font-linux-psf": {
        source: "apache",
        extensions: ["psf"]
      },
      "application/x-font-pcf": {
        source: "apache",
        extensions: ["pcf"]
      },
      "application/x-font-snf": {
        source: "apache",
        extensions: ["snf"]
      },
      "application/x-font-speedo": {
        source: "apache"
      },
      "application/x-font-sunos-news": {
        source: "apache"
      },
      "application/x-font-type1": {
        source: "apache",
        extensions: ["pfa", "pfb", "pfm", "afm"]
      },
      "application/x-font-vfont": {
        source: "apache"
      },
      "application/x-freearc": {
        source: "apache",
        extensions: ["arc"]
      },
      "application/x-futuresplash": {
        source: "apache",
        extensions: ["spl"]
      },
      "application/x-gca-compressed": {
        source: "apache",
        extensions: ["gca"]
      },
      "application/x-glulx": {
        source: "apache",
        extensions: ["ulx"]
      },
      "application/x-gnumeric": {
        source: "apache",
        extensions: ["gnumeric"]
      },
      "application/x-gramps-xml": {
        source: "apache",
        extensions: ["gramps"]
      },
      "application/x-gtar": {
        source: "apache",
        extensions: ["gtar"]
      },
      "application/x-gzip": {
        source: "apache"
      },
      "application/x-hdf": {
        source: "apache",
        extensions: ["hdf"]
      },
      "application/x-httpd-php": {
        compressible: !0,
        extensions: ["php"]
      },
      "application/x-install-instructions": {
        source: "apache",
        extensions: ["install"]
      },
      "application/x-iso9660-image": {
        source: "apache",
        extensions: ["iso"]
      },
      "application/x-iwork-keynote-sffkey": {
        extensions: ["key"]
      },
      "application/x-iwork-numbers-sffnumbers": {
        extensions: ["numbers"]
      },
      "application/x-iwork-pages-sffpages": {
        extensions: ["pages"]
      },
      "application/x-java-archive-diff": {
        source: "nginx",
        extensions: ["jardiff"]
      },
      "application/x-java-jnlp-file": {
        source: "apache",
        compressible: !1,
        extensions: ["jnlp"]
      },
      "application/x-javascript": {
        compressible: !0
      },
      "application/x-keepass2": {
        extensions: ["kdbx"]
      },
      "application/x-latex": {
        source: "apache",
        compressible: !1,
        extensions: ["latex"]
      },
      "application/x-lua-bytecode": {
        extensions: ["luac"]
      },
      "application/x-lzh-compressed": {
        source: "apache",
        extensions: ["lzh", "lha"]
      },
      "application/x-makeself": {
        source: "nginx",
        extensions: ["run"]
      },
      "application/x-mie": {
        source: "apache",
        extensions: ["mie"]
      },
      "application/x-mobipocket-ebook": {
        source: "apache",
        extensions: ["prc", "mobi"]
      },
      "application/x-mpegurl": {
        compressible: !1
      },
      "application/x-ms-application": {
        source: "apache",
        extensions: ["application"]
      },
      "application/x-ms-shortcut": {
        source: "apache",
        extensions: ["lnk"]
      },
      "application/x-ms-wmd": {
        source: "apache",
        extensions: ["wmd"]
      },
      "application/x-ms-wmz": {
        source: "apache",
        extensions: ["wmz"]
      },
      "application/x-ms-xbap": {
        source: "apache",
        extensions: ["xbap"]
      },
      "application/x-msaccess": {
        source: "apache",
        extensions: ["mdb"]
      },
      "application/x-msbinder": {
        source: "apache",
        extensions: ["obd"]
      },
      "application/x-mscardfile": {
        source: "apache",
        extensions: ["crd"]
      },
      "application/x-msclip": {
        source: "apache",
        extensions: ["clp"]
      },
      "application/x-msdos-program": {
        extensions: ["exe"]
      },
      "application/x-msdownload": {
        source: "apache",
        extensions: ["exe", "dll", "com", "bat", "msi"]
      },
      "application/x-msmediaview": {
        source: "apache",
        extensions: ["mvb", "m13", "m14"]
      },
      "application/x-msmetafile": {
        source: "apache",
        extensions: ["wmf", "wmz", "emf", "emz"]
      },
      "application/x-msmoney": {
        source: "apache",
        extensions: ["mny"]
      },
      "application/x-mspublisher": {
        source: "apache",
        extensions: ["pub"]
      },
      "application/x-msschedule": {
        source: "apache",
        extensions: ["scd"]
      },
      "application/x-msterminal": {
        source: "apache",
        extensions: ["trm"]
      },
      "application/x-mswrite": {
        source: "apache",
        extensions: ["wri"]
      },
      "application/x-netcdf": {
        source: "apache",
        extensions: ["nc", "cdf"]
      },
      "application/x-ns-proxy-autoconfig": {
        compressible: !0,
        extensions: ["pac"]
      },
      "application/x-nzb": {
        source: "apache",
        extensions: ["nzb"]
      },
      "application/x-perl": {
        source: "nginx",
        extensions: ["pl", "pm"]
      },
      "application/x-pilot": {
        source: "nginx",
        extensions: ["prc", "pdb"]
      },
      "application/x-pkcs12": {
        source: "apache",
        compressible: !1,
        extensions: ["p12", "pfx"]
      },
      "application/x-pkcs7-certificates": {
        source: "apache",
        extensions: ["p7b", "spc"]
      },
      "application/x-pkcs7-certreqresp": {
        source: "apache",
        extensions: ["p7r"]
      },
      "application/x-pki-message": {
        source: "iana"
      },
      "application/x-rar-compressed": {
        source: "apache",
        compressible: !1,
        extensions: ["rar"]
      },
      "application/x-redhat-package-manager": {
        source: "nginx",
        extensions: ["rpm"]
      },
      "application/x-research-info-systems": {
        source: "apache",
        extensions: ["ris"]
      },
      "application/x-sea": {
        source: "nginx",
        extensions: ["sea"]
      },
      "application/x-sh": {
        source: "apache",
        compressible: !0,
        extensions: ["sh"]
      },
      "application/x-shar": {
        source: "apache",
        extensions: ["shar"]
      },
      "application/x-shockwave-flash": {
        source: "apache",
        compressible: !1,
        extensions: ["swf"]
      },
      "application/x-silverlight-app": {
        source: "apache",
        extensions: ["xap"]
      },
      "application/x-sql": {
        source: "apache",
        extensions: ["sql"]
      },
      "application/x-stuffit": {
        source: "apache",
        compressible: !1,
        extensions: ["sit"]
      },
      "application/x-stuffitx": {
        source: "apache",
        extensions: ["sitx"]
      },
      "application/x-subrip": {
        source: "apache",
        extensions: ["srt"]
      },
      "application/x-sv4cpio": {
        source: "apache",
        extensions: ["sv4cpio"]
      },
      "application/x-sv4crc": {
        source: "apache",
        extensions: ["sv4crc"]
      },
      "application/x-t3vm-image": {
        source: "apache",
        extensions: ["t3"]
      },
      "application/x-tads": {
        source: "apache",
        extensions: ["gam"]
      },
      "application/x-tar": {
        source: "apache",
        compressible: !0,
        extensions: ["tar"]
      },
      "application/x-tcl": {
        source: "apache",
        extensions: ["tcl", "tk"]
      },
      "application/x-tex": {
        source: "apache",
        extensions: ["tex"]
      },
      "application/x-tex-tfm": {
        source: "apache",
        extensions: ["tfm"]
      },
      "application/x-texinfo": {
        source: "apache",
        extensions: ["texinfo", "texi"]
      },
      "application/x-tgif": {
        source: "apache",
        extensions: ["obj"]
      },
      "application/x-ustar": {
        source: "apache",
        extensions: ["ustar"]
      },
      "application/x-virtualbox-hdd": {
        compressible: !0,
        extensions: ["hdd"]
      },
      "application/x-virtualbox-ova": {
        compressible: !0,
        extensions: ["ova"]
      },
      "application/x-virtualbox-ovf": {
        compressible: !0,
        extensions: ["ovf"]
      },
      "application/x-virtualbox-vbox": {
        compressible: !0,
        extensions: ["vbox"]
      },
      "application/x-virtualbox-vbox-extpack": {
        compressible: !1,
        extensions: ["vbox-extpack"]
      },
      "application/x-virtualbox-vdi": {
        compressible: !0,
        extensions: ["vdi"]
      },
      "application/x-virtualbox-vhd": {
        compressible: !0,
        extensions: ["vhd"]
      },
      "application/x-virtualbox-vmdk": {
        compressible: !0,
        extensions: ["vmdk"]
      },
      "application/x-wais-source": {
        source: "apache",
        extensions: ["src"]
      },
      "application/x-web-app-manifest+json": {
        compressible: !0,
        extensions: ["webapp"]
      },
      "application/x-www-form-urlencoded": {
        source: "iana",
        compressible: !0
      },
      "application/x-x509-ca-cert": {
        source: "iana",
        extensions: ["der", "crt", "pem"]
      },
      "application/x-x509-ca-ra-cert": {
        source: "iana"
      },
      "application/x-x509-next-ca-cert": {
        source: "iana"
      },
      "application/x-xfig": {
        source: "apache",
        extensions: ["fig"]
      },
      "application/x-xliff+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["xlf"]
      },
      "application/x-xpinstall": {
        source: "apache",
        compressible: !1,
        extensions: ["xpi"]
      },
      "application/x-xz": {
        source: "apache",
        extensions: ["xz"]
      },
      "application/x-zmachine": {
        source: "apache",
        extensions: ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"]
      },
      "application/x400-bp": {
        source: "iana"
      },
      "application/xacml+xml": {
        source: "iana",
        compressible: !0
      },
      "application/xaml+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["xaml"]
      },
      "application/xcap-att+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xav"]
      },
      "application/xcap-caps+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xca"]
      },
      "application/xcap-diff+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xdf"]
      },
      "application/xcap-el+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xel"]
      },
      "application/xcap-error+xml": {
        source: "iana",
        compressible: !0
      },
      "application/xcap-ns+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xns"]
      },
      "application/xcon-conference-info+xml": {
        source: "iana",
        compressible: !0
      },
      "application/xcon-conference-info-diff+xml": {
        source: "iana",
        compressible: !0
      },
      "application/xenc+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xenc"]
      },
      "application/xhtml+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xhtml", "xht"]
      },
      "application/xhtml-voice+xml": {
        source: "apache",
        compressible: !0
      },
      "application/xliff+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xlf"]
      },
      "application/xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xml", "xsl", "xsd", "rng"]
      },
      "application/xml-dtd": {
        source: "iana",
        compressible: !0,
        extensions: ["dtd"]
      },
      "application/xml-external-parsed-entity": {
        source: "iana"
      },
      "application/xml-patch+xml": {
        source: "iana",
        compressible: !0
      },
      "application/xmpp+xml": {
        source: "iana",
        compressible: !0
      },
      "application/xop+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xop"]
      },
      "application/xproc+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["xpl"]
      },
      "application/xslt+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xsl", "xslt"]
      },
      "application/xspf+xml": {
        source: "apache",
        compressible: !0,
        extensions: ["xspf"]
      },
      "application/xv+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["mxml", "xhvml", "xvml", "xvm"]
      },
      "application/yang": {
        source: "iana",
        extensions: ["yang"]
      },
      "application/yang-data+json": {
        source: "iana",
        compressible: !0
      },
      "application/yang-data+xml": {
        source: "iana",
        compressible: !0
      },
      "application/yang-patch+json": {
        source: "iana",
        compressible: !0
      },
      "application/yang-patch+xml": {
        source: "iana",
        compressible: !0
      },
      "application/yin+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["yin"]
      },
      "application/zip": {
        source: "iana",
        compressible: !1,
        extensions: ["zip"]
      },
      "application/zlib": {
        source: "iana"
      },
      "application/zstd": {
        source: "iana"
      },
      "audio/1d-interleaved-parityfec": {
        source: "iana"
      },
      "audio/32kadpcm": {
        source: "iana"
      },
      "audio/3gpp": {
        source: "iana",
        compressible: !1,
        extensions: ["3gpp"]
      },
      "audio/3gpp2": {
        source: "iana"
      },
      "audio/aac": {
        source: "iana"
      },
      "audio/ac3": {
        source: "iana"
      },
      "audio/adpcm": {
        source: "apache",
        extensions: ["adp"]
      },
      "audio/amr": {
        source: "iana",
        extensions: ["amr"]
      },
      "audio/amr-wb": {
        source: "iana"
      },
      "audio/amr-wb+": {
        source: "iana"
      },
      "audio/aptx": {
        source: "iana"
      },
      "audio/asc": {
        source: "iana"
      },
      "audio/atrac-advanced-lossless": {
        source: "iana"
      },
      "audio/atrac-x": {
        source: "iana"
      },
      "audio/atrac3": {
        source: "iana"
      },
      "audio/basic": {
        source: "iana",
        compressible: !1,
        extensions: ["au", "snd"]
      },
      "audio/bv16": {
        source: "iana"
      },
      "audio/bv32": {
        source: "iana"
      },
      "audio/clearmode": {
        source: "iana"
      },
      "audio/cn": {
        source: "iana"
      },
      "audio/dat12": {
        source: "iana"
      },
      "audio/dls": {
        source: "iana"
      },
      "audio/dsr-es201108": {
        source: "iana"
      },
      "audio/dsr-es202050": {
        source: "iana"
      },
      "audio/dsr-es202211": {
        source: "iana"
      },
      "audio/dsr-es202212": {
        source: "iana"
      },
      "audio/dv": {
        source: "iana"
      },
      "audio/dvi4": {
        source: "iana"
      },
      "audio/eac3": {
        source: "iana"
      },
      "audio/encaprtp": {
        source: "iana"
      },
      "audio/evrc": {
        source: "iana"
      },
      "audio/evrc-qcp": {
        source: "iana"
      },
      "audio/evrc0": {
        source: "iana"
      },
      "audio/evrc1": {
        source: "iana"
      },
      "audio/evrcb": {
        source: "iana"
      },
      "audio/evrcb0": {
        source: "iana"
      },
      "audio/evrcb1": {
        source: "iana"
      },
      "audio/evrcnw": {
        source: "iana"
      },
      "audio/evrcnw0": {
        source: "iana"
      },
      "audio/evrcnw1": {
        source: "iana"
      },
      "audio/evrcwb": {
        source: "iana"
      },
      "audio/evrcwb0": {
        source: "iana"
      },
      "audio/evrcwb1": {
        source: "iana"
      },
      "audio/evs": {
        source: "iana"
      },
      "audio/flexfec": {
        source: "iana"
      },
      "audio/fwdred": {
        source: "iana"
      },
      "audio/g711-0": {
        source: "iana"
      },
      "audio/g719": {
        source: "iana"
      },
      "audio/g722": {
        source: "iana"
      },
      "audio/g7221": {
        source: "iana"
      },
      "audio/g723": {
        source: "iana"
      },
      "audio/g726-16": {
        source: "iana"
      },
      "audio/g726-24": {
        source: "iana"
      },
      "audio/g726-32": {
        source: "iana"
      },
      "audio/g726-40": {
        source: "iana"
      },
      "audio/g728": {
        source: "iana"
      },
      "audio/g729": {
        source: "iana"
      },
      "audio/g7291": {
        source: "iana"
      },
      "audio/g729d": {
        source: "iana"
      },
      "audio/g729e": {
        source: "iana"
      },
      "audio/gsm": {
        source: "iana"
      },
      "audio/gsm-efr": {
        source: "iana"
      },
      "audio/gsm-hr-08": {
        source: "iana"
      },
      "audio/ilbc": {
        source: "iana"
      },
      "audio/ip-mr_v2.5": {
        source: "iana"
      },
      "audio/isac": {
        source: "apache"
      },
      "audio/l16": {
        source: "iana"
      },
      "audio/l20": {
        source: "iana"
      },
      "audio/l24": {
        source: "iana",
        compressible: !1
      },
      "audio/l8": {
        source: "iana"
      },
      "audio/lpc": {
        source: "iana"
      },
      "audio/melp": {
        source: "iana"
      },
      "audio/melp1200": {
        source: "iana"
      },
      "audio/melp2400": {
        source: "iana"
      },
      "audio/melp600": {
        source: "iana"
      },
      "audio/mhas": {
        source: "iana"
      },
      "audio/midi": {
        source: "apache",
        extensions: ["mid", "midi", "kar", "rmi"]
      },
      "audio/mobile-xmf": {
        source: "iana",
        extensions: ["mxmf"]
      },
      "audio/mp3": {
        compressible: !1,
        extensions: ["mp3"]
      },
      "audio/mp4": {
        source: "iana",
        compressible: !1,
        extensions: ["m4a", "mp4a"]
      },
      "audio/mp4a-latm": {
        source: "iana"
      },
      "audio/mpa": {
        source: "iana"
      },
      "audio/mpa-robust": {
        source: "iana"
      },
      "audio/mpeg": {
        source: "iana",
        compressible: !1,
        extensions: ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"]
      },
      "audio/mpeg4-generic": {
        source: "iana"
      },
      "audio/musepack": {
        source: "apache"
      },
      "audio/ogg": {
        source: "iana",
        compressible: !1,
        extensions: ["oga", "ogg", "spx", "opus"]
      },
      "audio/opus": {
        source: "iana"
      },
      "audio/parityfec": {
        source: "iana"
      },
      "audio/pcma": {
        source: "iana"
      },
      "audio/pcma-wb": {
        source: "iana"
      },
      "audio/pcmu": {
        source: "iana"
      },
      "audio/pcmu-wb": {
        source: "iana"
      },
      "audio/prs.sid": {
        source: "iana"
      },
      "audio/qcelp": {
        source: "iana"
      },
      "audio/raptorfec": {
        source: "iana"
      },
      "audio/red": {
        source: "iana"
      },
      "audio/rtp-enc-aescm128": {
        source: "iana"
      },
      "audio/rtp-midi": {
        source: "iana"
      },
      "audio/rtploopback": {
        source: "iana"
      },
      "audio/rtx": {
        source: "iana"
      },
      "audio/s3m": {
        source: "apache",
        extensions: ["s3m"]
      },
      "audio/scip": {
        source: "iana"
      },
      "audio/silk": {
        source: "apache",
        extensions: ["sil"]
      },
      "audio/smv": {
        source: "iana"
      },
      "audio/smv-qcp": {
        source: "iana"
      },
      "audio/smv0": {
        source: "iana"
      },
      "audio/sofa": {
        source: "iana"
      },
      "audio/sp-midi": {
        source: "iana"
      },
      "audio/speex": {
        source: "iana"
      },
      "audio/t140c": {
        source: "iana"
      },
      "audio/t38": {
        source: "iana"
      },
      "audio/telephone-event": {
        source: "iana"
      },
      "audio/tetra_acelp": {
        source: "iana"
      },
      "audio/tetra_acelp_bb": {
        source: "iana"
      },
      "audio/tone": {
        source: "iana"
      },
      "audio/tsvcis": {
        source: "iana"
      },
      "audio/uemclip": {
        source: "iana"
      },
      "audio/ulpfec": {
        source: "iana"
      },
      "audio/usac": {
        source: "iana"
      },
      "audio/vdvi": {
        source: "iana"
      },
      "audio/vmr-wb": {
        source: "iana"
      },
      "audio/vnd.3gpp.iufp": {
        source: "iana"
      },
      "audio/vnd.4sb": {
        source: "iana"
      },
      "audio/vnd.audiokoz": {
        source: "iana"
      },
      "audio/vnd.celp": {
        source: "iana"
      },
      "audio/vnd.cisco.nse": {
        source: "iana"
      },
      "audio/vnd.cmles.radio-events": {
        source: "iana"
      },
      "audio/vnd.cns.anp1": {
        source: "iana"
      },
      "audio/vnd.cns.inf1": {
        source: "iana"
      },
      "audio/vnd.dece.audio": {
        source: "iana",
        extensions: ["uva", "uvva"]
      },
      "audio/vnd.digital-winds": {
        source: "iana",
        extensions: ["eol"]
      },
      "audio/vnd.dlna.adts": {
        source: "iana"
      },
      "audio/vnd.dolby.heaac.1": {
        source: "iana"
      },
      "audio/vnd.dolby.heaac.2": {
        source: "iana"
      },
      "audio/vnd.dolby.mlp": {
        source: "iana"
      },
      "audio/vnd.dolby.mps": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2x": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2z": {
        source: "iana"
      },
      "audio/vnd.dolby.pulse.1": {
        source: "iana"
      },
      "audio/vnd.dra": {
        source: "iana",
        extensions: ["dra"]
      },
      "audio/vnd.dts": {
        source: "iana",
        extensions: ["dts"]
      },
      "audio/vnd.dts.hd": {
        source: "iana",
        extensions: ["dtshd"]
      },
      "audio/vnd.dts.uhd": {
        source: "iana"
      },
      "audio/vnd.dvb.file": {
        source: "iana"
      },
      "audio/vnd.everad.plj": {
        source: "iana"
      },
      "audio/vnd.hns.audio": {
        source: "iana"
      },
      "audio/vnd.lucent.voice": {
        source: "iana",
        extensions: ["lvp"]
      },
      "audio/vnd.ms-playready.media.pya": {
        source: "iana",
        extensions: ["pya"]
      },
      "audio/vnd.nokia.mobile-xmf": {
        source: "iana"
      },
      "audio/vnd.nortel.vbk": {
        source: "iana"
      },
      "audio/vnd.nuera.ecelp4800": {
        source: "iana",
        extensions: ["ecelp4800"]
      },
      "audio/vnd.nuera.ecelp7470": {
        source: "iana",
        extensions: ["ecelp7470"]
      },
      "audio/vnd.nuera.ecelp9600": {
        source: "iana",
        extensions: ["ecelp9600"]
      },
      "audio/vnd.octel.sbc": {
        source: "iana"
      },
      "audio/vnd.presonus.multitrack": {
        source: "iana"
      },
      "audio/vnd.qcelp": {
        source: "iana"
      },
      "audio/vnd.rhetorex.32kadpcm": {
        source: "iana"
      },
      "audio/vnd.rip": {
        source: "iana",
        extensions: ["rip"]
      },
      "audio/vnd.rn-realaudio": {
        compressible: !1
      },
      "audio/vnd.sealedmedia.softseal.mpeg": {
        source: "iana"
      },
      "audio/vnd.vmx.cvsd": {
        source: "iana"
      },
      "audio/vnd.wave": {
        compressible: !1
      },
      "audio/vorbis": {
        source: "iana",
        compressible: !1
      },
      "audio/vorbis-config": {
        source: "iana"
      },
      "audio/wav": {
        compressible: !1,
        extensions: ["wav"]
      },
      "audio/wave": {
        compressible: !1,
        extensions: ["wav"]
      },
      "audio/webm": {
        source: "apache",
        compressible: !1,
        extensions: ["weba"]
      },
      "audio/x-aac": {
        source: "apache",
        compressible: !1,
        extensions: ["aac"]
      },
      "audio/x-aiff": {
        source: "apache",
        extensions: ["aif", "aiff", "aifc"]
      },
      "audio/x-caf": {
        source: "apache",
        compressible: !1,
        extensions: ["caf"]
      },
      "audio/x-flac": {
        source: "apache",
        extensions: ["flac"]
      },
      "audio/x-m4a": {
        source: "nginx",
        extensions: ["m4a"]
      },
      "audio/x-matroska": {
        source: "apache",
        extensions: ["mka"]
      },
      "audio/x-mpegurl": {
        source: "apache",
        extensions: ["m3u"]
      },
      "audio/x-ms-wax": {
        source: "apache",
        extensions: ["wax"]
      },
      "audio/x-ms-wma": {
        source: "apache",
        extensions: ["wma"]
      },
      "audio/x-pn-realaudio": {
        source: "apache",
        extensions: ["ram", "ra"]
      },
      "audio/x-pn-realaudio-plugin": {
        source: "apache",
        extensions: ["rmp"]
      },
      "audio/x-realaudio": {
        source: "nginx",
        extensions: ["ra"]
      },
      "audio/x-tta": {
        source: "apache"
      },
      "audio/x-wav": {
        source: "apache",
        extensions: ["wav"]
      },
      "audio/xm": {
        source: "apache",
        extensions: ["xm"]
      },
      "chemical/x-cdx": {
        source: "apache",
        extensions: ["cdx"]
      },
      "chemical/x-cif": {
        source: "apache",
        extensions: ["cif"]
      },
      "chemical/x-cmdf": {
        source: "apache",
        extensions: ["cmdf"]
      },
      "chemical/x-cml": {
        source: "apache",
        extensions: ["cml"]
      },
      "chemical/x-csml": {
        source: "apache",
        extensions: ["csml"]
      },
      "chemical/x-pdb": {
        source: "apache"
      },
      "chemical/x-xyz": {
        source: "apache",
        extensions: ["xyz"]
      },
      "font/collection": {
        source: "iana",
        extensions: ["ttc"]
      },
      "font/otf": {
        source: "iana",
        compressible: !0,
        extensions: ["otf"]
      },
      "font/sfnt": {
        source: "iana"
      },
      "font/ttf": {
        source: "iana",
        compressible: !0,
        extensions: ["ttf"]
      },
      "font/woff": {
        source: "iana",
        extensions: ["woff"]
      },
      "font/woff2": {
        source: "iana",
        extensions: ["woff2"]
      },
      "image/aces": {
        source: "iana",
        extensions: ["exr"]
      },
      "image/apng": {
        compressible: !1,
        extensions: ["apng"]
      },
      "image/avci": {
        source: "iana",
        extensions: ["avci"]
      },
      "image/avcs": {
        source: "iana",
        extensions: ["avcs"]
      },
      "image/avif": {
        source: "iana",
        compressible: !1,
        extensions: ["avif"]
      },
      "image/bmp": {
        source: "iana",
        compressible: !0,
        extensions: ["bmp"]
      },
      "image/cgm": {
        source: "iana",
        extensions: ["cgm"]
      },
      "image/dicom-rle": {
        source: "iana",
        extensions: ["drle"]
      },
      "image/emf": {
        source: "iana",
        extensions: ["emf"]
      },
      "image/fits": {
        source: "iana",
        extensions: ["fits"]
      },
      "image/g3fax": {
        source: "iana",
        extensions: ["g3"]
      },
      "image/gif": {
        source: "iana",
        compressible: !1,
        extensions: ["gif"]
      },
      "image/heic": {
        source: "iana",
        extensions: ["heic"]
      },
      "image/heic-sequence": {
        source: "iana",
        extensions: ["heics"]
      },
      "image/heif": {
        source: "iana",
        extensions: ["heif"]
      },
      "image/heif-sequence": {
        source: "iana",
        extensions: ["heifs"]
      },
      "image/hej2k": {
        source: "iana",
        extensions: ["hej2"]
      },
      "image/hsj2": {
        source: "iana",
        extensions: ["hsj2"]
      },
      "image/ief": {
        source: "iana",
        extensions: ["ief"]
      },
      "image/jls": {
        source: "iana",
        extensions: ["jls"]
      },
      "image/jp2": {
        source: "iana",
        compressible: !1,
        extensions: ["jp2", "jpg2"]
      },
      "image/jpeg": {
        source: "iana",
        compressible: !1,
        extensions: ["jpeg", "jpg", "jpe"]
      },
      "image/jph": {
        source: "iana",
        extensions: ["jph"]
      },
      "image/jphc": {
        source: "iana",
        extensions: ["jhc"]
      },
      "image/jpm": {
        source: "iana",
        compressible: !1,
        extensions: ["jpm"]
      },
      "image/jpx": {
        source: "iana",
        compressible: !1,
        extensions: ["jpx", "jpf"]
      },
      "image/jxr": {
        source: "iana",
        extensions: ["jxr"]
      },
      "image/jxra": {
        source: "iana",
        extensions: ["jxra"]
      },
      "image/jxrs": {
        source: "iana",
        extensions: ["jxrs"]
      },
      "image/jxs": {
        source: "iana",
        extensions: ["jxs"]
      },
      "image/jxsc": {
        source: "iana",
        extensions: ["jxsc"]
      },
      "image/jxsi": {
        source: "iana",
        extensions: ["jxsi"]
      },
      "image/jxss": {
        source: "iana",
        extensions: ["jxss"]
      },
      "image/ktx": {
        source: "iana",
        extensions: ["ktx"]
      },
      "image/ktx2": {
        source: "iana",
        extensions: ["ktx2"]
      },
      "image/naplps": {
        source: "iana"
      },
      "image/pjpeg": {
        compressible: !1
      },
      "image/png": {
        source: "iana",
        compressible: !1,
        extensions: ["png"]
      },
      "image/prs.btif": {
        source: "iana",
        extensions: ["btif"]
      },
      "image/prs.pti": {
        source: "iana",
        extensions: ["pti"]
      },
      "image/pwg-raster": {
        source: "iana"
      },
      "image/sgi": {
        source: "apache",
        extensions: ["sgi"]
      },
      "image/svg+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["svg", "svgz"]
      },
      "image/t38": {
        source: "iana",
        extensions: ["t38"]
      },
      "image/tiff": {
        source: "iana",
        compressible: !1,
        extensions: ["tif", "tiff"]
      },
      "image/tiff-fx": {
        source: "iana",
        extensions: ["tfx"]
      },
      "image/vnd.adobe.photoshop": {
        source: "iana",
        compressible: !0,
        extensions: ["psd"]
      },
      "image/vnd.airzip.accelerator.azv": {
        source: "iana",
        extensions: ["azv"]
      },
      "image/vnd.cns.inf2": {
        source: "iana"
      },
      "image/vnd.dece.graphic": {
        source: "iana",
        extensions: ["uvi", "uvvi", "uvg", "uvvg"]
      },
      "image/vnd.djvu": {
        source: "iana",
        extensions: ["djvu", "djv"]
      },
      "image/vnd.dvb.subtitle": {
        source: "iana",
        extensions: ["sub"]
      },
      "image/vnd.dwg": {
        source: "iana",
        extensions: ["dwg"]
      },
      "image/vnd.dxf": {
        source: "iana",
        extensions: ["dxf"]
      },
      "image/vnd.fastbidsheet": {
        source: "iana",
        extensions: ["fbs"]
      },
      "image/vnd.fpx": {
        source: "iana",
        extensions: ["fpx"]
      },
      "image/vnd.fst": {
        source: "iana",
        extensions: ["fst"]
      },
      "image/vnd.fujixerox.edmics-mmr": {
        source: "iana",
        extensions: ["mmr"]
      },
      "image/vnd.fujixerox.edmics-rlc": {
        source: "iana",
        extensions: ["rlc"]
      },
      "image/vnd.globalgraphics.pgb": {
        source: "iana"
      },
      "image/vnd.microsoft.icon": {
        source: "iana",
        compressible: !0,
        extensions: ["ico"]
      },
      "image/vnd.mix": {
        source: "iana"
      },
      "image/vnd.mozilla.apng": {
        source: "iana"
      },
      "image/vnd.ms-dds": {
        compressible: !0,
        extensions: ["dds"]
      },
      "image/vnd.ms-modi": {
        source: "iana",
        extensions: ["mdi"]
      },
      "image/vnd.ms-photo": {
        source: "apache",
        extensions: ["wdp"]
      },
      "image/vnd.net-fpx": {
        source: "iana",
        extensions: ["npx"]
      },
      "image/vnd.pco.b16": {
        source: "iana",
        extensions: ["b16"]
      },
      "image/vnd.radiance": {
        source: "iana"
      },
      "image/vnd.sealed.png": {
        source: "iana"
      },
      "image/vnd.sealedmedia.softseal.gif": {
        source: "iana"
      },
      "image/vnd.sealedmedia.softseal.jpg": {
        source: "iana"
      },
      "image/vnd.svf": {
        source: "iana"
      },
      "image/vnd.tencent.tap": {
        source: "iana",
        extensions: ["tap"]
      },
      "image/vnd.valve.source.texture": {
        source: "iana",
        extensions: ["vtf"]
      },
      "image/vnd.wap.wbmp": {
        source: "iana",
        extensions: ["wbmp"]
      },
      "image/vnd.xiff": {
        source: "iana",
        extensions: ["xif"]
      },
      "image/vnd.zbrush.pcx": {
        source: "iana",
        extensions: ["pcx"]
      },
      "image/webp": {
        source: "apache",
        extensions: ["webp"]
      },
      "image/wmf": {
        source: "iana",
        extensions: ["wmf"]
      },
      "image/x-3ds": {
        source: "apache",
        extensions: ["3ds"]
      },
      "image/x-cmu-raster": {
        source: "apache",
        extensions: ["ras"]
      },
      "image/x-cmx": {
        source: "apache",
        extensions: ["cmx"]
      },
      "image/x-freehand": {
        source: "apache",
        extensions: ["fh", "fhc", "fh4", "fh5", "fh7"]
      },
      "image/x-icon": {
        source: "apache",
        compressible: !0,
        extensions: ["ico"]
      },
      "image/x-jng": {
        source: "nginx",
        extensions: ["jng"]
      },
      "image/x-mrsid-image": {
        source: "apache",
        extensions: ["sid"]
      },
      "image/x-ms-bmp": {
        source: "nginx",
        compressible: !0,
        extensions: ["bmp"]
      },
      "image/x-pcx": {
        source: "apache",
        extensions: ["pcx"]
      },
      "image/x-pict": {
        source: "apache",
        extensions: ["pic", "pct"]
      },
      "image/x-portable-anymap": {
        source: "apache",
        extensions: ["pnm"]
      },
      "image/x-portable-bitmap": {
        source: "apache",
        extensions: ["pbm"]
      },
      "image/x-portable-graymap": {
        source: "apache",
        extensions: ["pgm"]
      },
      "image/x-portable-pixmap": {
        source: "apache",
        extensions: ["ppm"]
      },
      "image/x-rgb": {
        source: "apache",
        extensions: ["rgb"]
      },
      "image/x-tga": {
        source: "apache",
        extensions: ["tga"]
      },
      "image/x-xbitmap": {
        source: "apache",
        extensions: ["xbm"]
      },
      "image/x-xcf": {
        compressible: !1
      },
      "image/x-xpixmap": {
        source: "apache",
        extensions: ["xpm"]
      },
      "image/x-xwindowdump": {
        source: "apache",
        extensions: ["xwd"]
      },
      "message/cpim": {
        source: "iana"
      },
      "message/delivery-status": {
        source: "iana"
      },
      "message/disposition-notification": {
        source: "iana",
        extensions: [
          "disposition-notification"
        ]
      },
      "message/external-body": {
        source: "iana"
      },
      "message/feedback-report": {
        source: "iana"
      },
      "message/global": {
        source: "iana",
        extensions: ["u8msg"]
      },
      "message/global-delivery-status": {
        source: "iana",
        extensions: ["u8dsn"]
      },
      "message/global-disposition-notification": {
        source: "iana",
        extensions: ["u8mdn"]
      },
      "message/global-headers": {
        source: "iana",
        extensions: ["u8hdr"]
      },
      "message/http": {
        source: "iana",
        compressible: !1
      },
      "message/imdn+xml": {
        source: "iana",
        compressible: !0
      },
      "message/news": {
        source: "iana"
      },
      "message/partial": {
        source: "iana",
        compressible: !1
      },
      "message/rfc822": {
        source: "iana",
        compressible: !0,
        extensions: ["eml", "mime"]
      },
      "message/s-http": {
        source: "iana"
      },
      "message/sip": {
        source: "iana"
      },
      "message/sipfrag": {
        source: "iana"
      },
      "message/tracking-status": {
        source: "iana"
      },
      "message/vnd.si.simp": {
        source: "iana"
      },
      "message/vnd.wfa.wsc": {
        source: "iana",
        extensions: ["wsc"]
      },
      "model/3mf": {
        source: "iana",
        extensions: ["3mf"]
      },
      "model/e57": {
        source: "iana"
      },
      "model/gltf+json": {
        source: "iana",
        compressible: !0,
        extensions: ["gltf"]
      },
      "model/gltf-binary": {
        source: "iana",
        compressible: !0,
        extensions: ["glb"]
      },
      "model/iges": {
        source: "iana",
        compressible: !1,
        extensions: ["igs", "iges"]
      },
      "model/mesh": {
        source: "iana",
        compressible: !1,
        extensions: ["msh", "mesh", "silo"]
      },
      "model/mtl": {
        source: "iana",
        extensions: ["mtl"]
      },
      "model/obj": {
        source: "iana",
        extensions: ["obj"]
      },
      "model/step": {
        source: "iana"
      },
      "model/step+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["stpx"]
      },
      "model/step+zip": {
        source: "iana",
        compressible: !1,
        extensions: ["stpz"]
      },
      "model/step-xml+zip": {
        source: "iana",
        compressible: !1,
        extensions: ["stpxz"]
      },
      "model/stl": {
        source: "iana",
        extensions: ["stl"]
      },
      "model/vnd.collada+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["dae"]
      },
      "model/vnd.dwf": {
        source: "iana",
        extensions: ["dwf"]
      },
      "model/vnd.flatland.3dml": {
        source: "iana"
      },
      "model/vnd.gdl": {
        source: "iana",
        extensions: ["gdl"]
      },
      "model/vnd.gs-gdl": {
        source: "apache"
      },
      "model/vnd.gs.gdl": {
        source: "iana"
      },
      "model/vnd.gtw": {
        source: "iana",
        extensions: ["gtw"]
      },
      "model/vnd.moml+xml": {
        source: "iana",
        compressible: !0
      },
      "model/vnd.mts": {
        source: "iana",
        extensions: ["mts"]
      },
      "model/vnd.opengex": {
        source: "iana",
        extensions: ["ogex"]
      },
      "model/vnd.parasolid.transmit.binary": {
        source: "iana",
        extensions: ["x_b"]
      },
      "model/vnd.parasolid.transmit.text": {
        source: "iana",
        extensions: ["x_t"]
      },
      "model/vnd.pytha.pyox": {
        source: "iana"
      },
      "model/vnd.rosette.annotated-data-model": {
        source: "iana"
      },
      "model/vnd.sap.vds": {
        source: "iana",
        extensions: ["vds"]
      },
      "model/vnd.usdz+zip": {
        source: "iana",
        compressible: !1,
        extensions: ["usdz"]
      },
      "model/vnd.valve.source.compiled-map": {
        source: "iana",
        extensions: ["bsp"]
      },
      "model/vnd.vtu": {
        source: "iana",
        extensions: ["vtu"]
      },
      "model/vrml": {
        source: "iana",
        compressible: !1,
        extensions: ["wrl", "vrml"]
      },
      "model/x3d+binary": {
        source: "apache",
        compressible: !1,
        extensions: ["x3db", "x3dbz"]
      },
      "model/x3d+fastinfoset": {
        source: "iana",
        extensions: ["x3db"]
      },
      "model/x3d+vrml": {
        source: "apache",
        compressible: !1,
        extensions: ["x3dv", "x3dvz"]
      },
      "model/x3d+xml": {
        source: "iana",
        compressible: !0,
        extensions: ["x3d", "x3dz"]
      },
      "model/x3d-vrml": {
        source: "iana",
        extensions: ["x3dv"]
      },
      "multipart/alternative": {
        source: "iana",
        compressible: !1
      },
      "multipart/appledouble": {
        source: "iana"
      },
      "multipart/byteranges": {
        source: "iana"
      },
      "multipart/digest": {
        source: "iana"
      },
      "multipart/encrypted": {
        source: "iana",
        compressible: !1
      },
      "multipart/form-data": {
        source: "iana",
        compressible: !1
      },
      "multipart/header-set": {
        source: "iana"
      },
      "multipart/mixed": {
        source: "iana"
      },
      "multipart/multilingual": {
        source: "iana"
      },
      "multipart/parallel": {
        source: "iana"
      },
      "multipart/related": {
        source: "iana",
        compressible: !1
      },
      "multipart/report": {
        source: "iana"
      },
      "multipart/signed": {
        source: "iana",
        compressible: !1
      },
      "multipart/vnd.bint.med-plus": {
        source: "iana"
      },
      "multipart/voice-message": {
        source: "iana"
      },
      "multipart/x-mixed-replace": {
        source: "iana"
      },
      "text/1d-interleaved-parityfec": {
        source: "iana"
      },
      "text/cache-manifest": {
        source: "iana",
        compressible: !0,
        extensions: ["appcache", "manifest"]
      },
      "text/calendar": {
        source: "iana",
        extensions: ["ics", "ifb"]
      },
      "text/calender": {
        compressible: !0
      },
      "text/cmd": {
        compressible: !0
      },
      "text/coffeescript": {
        extensions: ["coffee", "litcoffee"]
      },
      "text/cql": {
        source: "iana"
      },
      "text/cql-expression": {
        source: "iana"
      },
      "text/cql-identifier": {
        source: "iana"
      },
      "text/css": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["css"]
      },
      "text/csv": {
        source: "iana",
        compressible: !0,
        extensions: ["csv"]
      },
      "text/csv-schema": {
        source: "iana"
      },
      "text/directory": {
        source: "iana"
      },
      "text/dns": {
        source: "iana"
      },
      "text/ecmascript": {
        source: "iana"
      },
      "text/encaprtp": {
        source: "iana"
      },
      "text/enriched": {
        source: "iana"
      },
      "text/fhirpath": {
        source: "iana"
      },
      "text/flexfec": {
        source: "iana"
      },
      "text/fwdred": {
        source: "iana"
      },
      "text/gff3": {
        source: "iana"
      },
      "text/grammar-ref-list": {
        source: "iana"
      },
      "text/html": {
        source: "iana",
        compressible: !0,
        extensions: ["html", "htm", "shtml"]
      },
      "text/jade": {
        extensions: ["jade"]
      },
      "text/javascript": {
        source: "iana",
        compressible: !0
      },
      "text/jcr-cnd": {
        source: "iana"
      },
      "text/jsx": {
        compressible: !0,
        extensions: ["jsx"]
      },
      "text/less": {
        compressible: !0,
        extensions: ["less"]
      },
      "text/markdown": {
        source: "iana",
        compressible: !0,
        extensions: ["markdown", "md"]
      },
      "text/mathml": {
        source: "nginx",
        extensions: ["mml"]
      },
      "text/mdx": {
        compressible: !0,
        extensions: ["mdx"]
      },
      "text/mizar": {
        source: "iana"
      },
      "text/n3": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["n3"]
      },
      "text/parameters": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/parityfec": {
        source: "iana"
      },
      "text/plain": {
        source: "iana",
        compressible: !0,
        extensions: ["txt", "text", "conf", "def", "list", "log", "in", "ini"]
      },
      "text/provenance-notation": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/prs.fallenstein.rst": {
        source: "iana"
      },
      "text/prs.lines.tag": {
        source: "iana",
        extensions: ["dsc"]
      },
      "text/prs.prop.logic": {
        source: "iana"
      },
      "text/raptorfec": {
        source: "iana"
      },
      "text/red": {
        source: "iana"
      },
      "text/rfc822-headers": {
        source: "iana"
      },
      "text/richtext": {
        source: "iana",
        compressible: !0,
        extensions: ["rtx"]
      },
      "text/rtf": {
        source: "iana",
        compressible: !0,
        extensions: ["rtf"]
      },
      "text/rtp-enc-aescm128": {
        source: "iana"
      },
      "text/rtploopback": {
        source: "iana"
      },
      "text/rtx": {
        source: "iana"
      },
      "text/sgml": {
        source: "iana",
        extensions: ["sgml", "sgm"]
      },
      "text/shaclc": {
        source: "iana"
      },
      "text/shex": {
        source: "iana",
        extensions: ["shex"]
      },
      "text/slim": {
        extensions: ["slim", "slm"]
      },
      "text/spdx": {
        source: "iana",
        extensions: ["spdx"]
      },
      "text/strings": {
        source: "iana"
      },
      "text/stylus": {
        extensions: ["stylus", "styl"]
      },
      "text/t140": {
        source: "iana"
      },
      "text/tab-separated-values": {
        source: "iana",
        compressible: !0,
        extensions: ["tsv"]
      },
      "text/troff": {
        source: "iana",
        extensions: ["t", "tr", "roff", "man", "me", "ms"]
      },
      "text/turtle": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["ttl"]
      },
      "text/ulpfec": {
        source: "iana"
      },
      "text/uri-list": {
        source: "iana",
        compressible: !0,
        extensions: ["uri", "uris", "urls"]
      },
      "text/vcard": {
        source: "iana",
        compressible: !0,
        extensions: ["vcard"]
      },
      "text/vnd.a": {
        source: "iana"
      },
      "text/vnd.abc": {
        source: "iana"
      },
      "text/vnd.ascii-art": {
        source: "iana"
      },
      "text/vnd.curl": {
        source: "iana",
        extensions: ["curl"]
      },
      "text/vnd.curl.dcurl": {
        source: "apache",
        extensions: ["dcurl"]
      },
      "text/vnd.curl.mcurl": {
        source: "apache",
        extensions: ["mcurl"]
      },
      "text/vnd.curl.scurl": {
        source: "apache",
        extensions: ["scurl"]
      },
      "text/vnd.debian.copyright": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.dmclientscript": {
        source: "iana"
      },
      "text/vnd.dvb.subtitle": {
        source: "iana",
        extensions: ["sub"]
      },
      "text/vnd.esmertec.theme-descriptor": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.familysearch.gedcom": {
        source: "iana",
        extensions: ["ged"]
      },
      "text/vnd.ficlab.flt": {
        source: "iana"
      },
      "text/vnd.fly": {
        source: "iana",
        extensions: ["fly"]
      },
      "text/vnd.fmi.flexstor": {
        source: "iana",
        extensions: ["flx"]
      },
      "text/vnd.gml": {
        source: "iana"
      },
      "text/vnd.graphviz": {
        source: "iana",
        extensions: ["gv"]
      },
      "text/vnd.hans": {
        source: "iana"
      },
      "text/vnd.hgl": {
        source: "iana"
      },
      "text/vnd.in3d.3dml": {
        source: "iana",
        extensions: ["3dml"]
      },
      "text/vnd.in3d.spot": {
        source: "iana",
        extensions: ["spot"]
      },
      "text/vnd.iptc.newsml": {
        source: "iana"
      },
      "text/vnd.iptc.nitf": {
        source: "iana"
      },
      "text/vnd.latex-z": {
        source: "iana"
      },
      "text/vnd.motorola.reflex": {
        source: "iana"
      },
      "text/vnd.ms-mediapackage": {
        source: "iana"
      },
      "text/vnd.net2phone.commcenter.command": {
        source: "iana"
      },
      "text/vnd.radisys.msml-basic-layout": {
        source: "iana"
      },
      "text/vnd.senx.warpscript": {
        source: "iana"
      },
      "text/vnd.si.uricatalogue": {
        source: "iana"
      },
      "text/vnd.sosi": {
        source: "iana"
      },
      "text/vnd.sun.j2me.app-descriptor": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["jad"]
      },
      "text/vnd.trolltech.linguist": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.wap.si": {
        source: "iana"
      },
      "text/vnd.wap.sl": {
        source: "iana"
      },
      "text/vnd.wap.wml": {
        source: "iana",
        extensions: ["wml"]
      },
      "text/vnd.wap.wmlscript": {
        source: "iana",
        extensions: ["wmls"]
      },
      "text/vtt": {
        source: "iana",
        charset: "UTF-8",
        compressible: !0,
        extensions: ["vtt"]
      },
      "text/x-asm": {
        source: "apache",
        extensions: ["s", "asm"]
      },
      "text/x-c": {
        source: "apache",
        extensions: ["c", "cc", "cxx", "cpp", "h", "hh", "dic"]
      },
      "text/x-component": {
        source: "nginx",
        extensions: ["htc"]
      },
      "text/x-fortran": {
        source: "apache",
        extensions: ["f", "for", "f77", "f90"]
      },
      "text/x-gwt-rpc": {
        compressible: !0
      },
      "text/x-handlebars-template": {
        extensions: ["hbs"]
      },
      "text/x-java-source": {
        source: "apache",
        extensions: ["java"]
      },
      "text/x-jquery-tmpl": {
        compressible: !0
      },
      "text/x-lua": {
        extensions: ["lua"]
      },
      "text/x-markdown": {
        compressible: !0,
        extensions: ["mkd"]
      },
      "text/x-nfo": {
        source: "apache",
        extensions: ["nfo"]
      },
      "text/x-opml": {
        source: "apache",
        extensions: ["opml"]
      },
      "text/x-org": {
        compressible: !0,
        extensions: ["org"]
      },
      "text/x-pascal": {
        source: "apache",
        extensions: ["p", "pas"]
      },
      "text/x-processing": {
        compressible: !0,
        extensions: ["pde"]
      },
      "text/x-sass": {
        extensions: ["sass"]
      },
      "text/x-scss": {
        extensions: ["scss"]
      },
      "text/x-setext": {
        source: "apache",
        extensions: ["etx"]
      },
      "text/x-sfv": {
        source: "apache",
        extensions: ["sfv"]
      },
      "text/x-suse-ymp": {
        compressible: !0,
        extensions: ["ymp"]
      },
      "text/x-uuencode": {
        source: "apache",
        extensions: ["uu"]
      },
      "text/x-vcalendar": {
        source: "apache",
        extensions: ["vcs"]
      },
      "text/x-vcard": {
        source: "apache",
        extensions: ["vcf"]
      },
      "text/xml": {
        source: "iana",
        compressible: !0,
        extensions: ["xml"]
      },
      "text/xml-external-parsed-entity": {
        source: "iana"
      },
      "text/yaml": {
        compressible: !0,
        extensions: ["yaml", "yml"]
      },
      "video/1d-interleaved-parityfec": {
        source: "iana"
      },
      "video/3gpp": {
        source: "iana",
        extensions: ["3gp", "3gpp"]
      },
      "video/3gpp-tt": {
        source: "iana"
      },
      "video/3gpp2": {
        source: "iana",
        extensions: ["3g2"]
      },
      "video/av1": {
        source: "iana"
      },
      "video/bmpeg": {
        source: "iana"
      },
      "video/bt656": {
        source: "iana"
      },
      "video/celb": {
        source: "iana"
      },
      "video/dv": {
        source: "iana"
      },
      "video/encaprtp": {
        source: "iana"
      },
      "video/ffv1": {
        source: "iana"
      },
      "video/flexfec": {
        source: "iana"
      },
      "video/h261": {
        source: "iana",
        extensions: ["h261"]
      },
      "video/h263": {
        source: "iana",
        extensions: ["h263"]
      },
      "video/h263-1998": {
        source: "iana"
      },
      "video/h263-2000": {
        source: "iana"
      },
      "video/h264": {
        source: "iana",
        extensions: ["h264"]
      },
      "video/h264-rcdo": {
        source: "iana"
      },
      "video/h264-svc": {
        source: "iana"
      },
      "video/h265": {
        source: "iana"
      },
      "video/iso.segment": {
        source: "iana",
        extensions: ["m4s"]
      },
      "video/jpeg": {
        source: "iana",
        extensions: ["jpgv"]
      },
      "video/jpeg2000": {
        source: "iana"
      },
      "video/jpm": {
        source: "apache",
        extensions: ["jpm", "jpgm"]
      },
      "video/jxsv": {
        source: "iana"
      },
      "video/mj2": {
        source: "iana",
        extensions: ["mj2", "mjp2"]
      },
      "video/mp1s": {
        source: "iana"
      },
      "video/mp2p": {
        source: "iana"
      },
      "video/mp2t": {
        source: "iana",
        extensions: ["ts"]
      },
      "video/mp4": {
        source: "iana",
        compressible: !1,
        extensions: ["mp4", "mp4v", "mpg4"]
      },
      "video/mp4v-es": {
        source: "iana"
      },
      "video/mpeg": {
        source: "iana",
        compressible: !1,
        extensions: ["mpeg", "mpg", "mpe", "m1v", "m2v"]
      },
      "video/mpeg4-generic": {
        source: "iana"
      },
      "video/mpv": {
        source: "iana"
      },
      "video/nv": {
        source: "iana"
      },
      "video/ogg": {
        source: "iana",
        compressible: !1,
        extensions: ["ogv"]
      },
      "video/parityfec": {
        source: "iana"
      },
      "video/pointer": {
        source: "iana"
      },
      "video/quicktime": {
        source: "iana",
        compressible: !1,
        extensions: ["qt", "mov"]
      },
      "video/raptorfec": {
        source: "iana"
      },
      "video/raw": {
        source: "iana"
      },
      "video/rtp-enc-aescm128": {
        source: "iana"
      },
      "video/rtploopback": {
        source: "iana"
      },
      "video/rtx": {
        source: "iana"
      },
      "video/scip": {
        source: "iana"
      },
      "video/smpte291": {
        source: "iana"
      },
      "video/smpte292m": {
        source: "iana"
      },
      "video/ulpfec": {
        source: "iana"
      },
      "video/vc1": {
        source: "iana"
      },
      "video/vc2": {
        source: "iana"
      },
      "video/vnd.cctv": {
        source: "iana"
      },
      "video/vnd.dece.hd": {
        source: "iana",
        extensions: ["uvh", "uvvh"]
      },
      "video/vnd.dece.mobile": {
        source: "iana",
        extensions: ["uvm", "uvvm"]
      },
      "video/vnd.dece.mp4": {
        source: "iana"
      },
      "video/vnd.dece.pd": {
        source: "iana",
        extensions: ["uvp", "uvvp"]
      },
      "video/vnd.dece.sd": {
        source: "iana",
        extensions: ["uvs", "uvvs"]
      },
      "video/vnd.dece.video": {
        source: "iana",
        extensions: ["uvv", "uvvv"]
      },
      "video/vnd.directv.mpeg": {
        source: "iana"
      },
      "video/vnd.directv.mpeg-tts": {
        source: "iana"
      },
      "video/vnd.dlna.mpeg-tts": {
        source: "iana"
      },
      "video/vnd.dvb.file": {
        source: "iana",
        extensions: ["dvb"]
      },
      "video/vnd.fvt": {
        source: "iana",
        extensions: ["fvt"]
      },
      "video/vnd.hns.video": {
        source: "iana"
      },
      "video/vnd.iptvforum.1dparityfec-1010": {
        source: "iana"
      },
      "video/vnd.iptvforum.1dparityfec-2005": {
        source: "iana"
      },
      "video/vnd.iptvforum.2dparityfec-1010": {
        source: "iana"
      },
      "video/vnd.iptvforum.2dparityfec-2005": {
        source: "iana"
      },
      "video/vnd.iptvforum.ttsavc": {
        source: "iana"
      },
      "video/vnd.iptvforum.ttsmpeg2": {
        source: "iana"
      },
      "video/vnd.motorola.video": {
        source: "iana"
      },
      "video/vnd.motorola.videop": {
        source: "iana"
      },
      "video/vnd.mpegurl": {
        source: "iana",
        extensions: ["mxu", "m4u"]
      },
      "video/vnd.ms-playready.media.pyv": {
        source: "iana",
        extensions: ["pyv"]
      },
      "video/vnd.nokia.interleaved-multimedia": {
        source: "iana"
      },
      "video/vnd.nokia.mp4vr": {
        source: "iana"
      },
      "video/vnd.nokia.videovoip": {
        source: "iana"
      },
      "video/vnd.objectvideo": {
        source: "iana"
      },
      "video/vnd.radgamettools.bink": {
        source: "iana"
      },
      "video/vnd.radgamettools.smacker": {
        source: "iana"
      },
      "video/vnd.sealed.mpeg1": {
        source: "iana"
      },
      "video/vnd.sealed.mpeg4": {
        source: "iana"
      },
      "video/vnd.sealed.swf": {
        source: "iana"
      },
      "video/vnd.sealedmedia.softseal.mov": {
        source: "iana"
      },
      "video/vnd.uvvu.mp4": {
        source: "iana",
        extensions: ["uvu", "uvvu"]
      },
      "video/vnd.vivo": {
        source: "iana",
        extensions: ["viv"]
      },
      "video/vnd.youtube.yt": {
        source: "iana"
      },
      "video/vp8": {
        source: "iana"
      },
      "video/vp9": {
        source: "iana"
      },
      "video/webm": {
        source: "apache",
        compressible: !1,
        extensions: ["webm"]
      },
      "video/x-f4v": {
        source: "apache",
        extensions: ["f4v"]
      },
      "video/x-fli": {
        source: "apache",
        extensions: ["fli"]
      },
      "video/x-flv": {
        source: "apache",
        compressible: !1,
        extensions: ["flv"]
      },
      "video/x-m4v": {
        source: "apache",
        extensions: ["m4v"]
      },
      "video/x-matroska": {
        source: "apache",
        compressible: !1,
        extensions: ["mkv", "mk3d", "mks"]
      },
      "video/x-mng": {
        source: "apache",
        extensions: ["mng"]
      },
      "video/x-ms-asf": {
        source: "apache",
        extensions: ["asf", "asx"]
      },
      "video/x-ms-vob": {
        source: "apache",
        extensions: ["vob"]
      },
      "video/x-ms-wm": {
        source: "apache",
        extensions: ["wm"]
      },
      "video/x-ms-wmv": {
        source: "apache",
        compressible: !1,
        extensions: ["wmv"]
      },
      "video/x-ms-wmx": {
        source: "apache",
        extensions: ["wmx"]
      },
      "video/x-ms-wvx": {
        source: "apache",
        extensions: ["wvx"]
      },
      "video/x-msvideo": {
        source: "apache",
        extensions: ["avi"]
      },
      "video/x-sgi-movie": {
        source: "apache",
        extensions: ["movie"]
      },
      "video/x-smv": {
        source: "apache",
        extensions: ["smv"]
      },
      "x-conference/x-cooltalk": {
        source: "apache",
        extensions: ["ice"]
      },
      "x-shader/x-fragment": {
        compressible: !0
      },
      "x-shader/x-vertex": {
        compressible: !0
      }
    };
  }
});

// node_modules/mime-db/index.js
var require_mime_db = __commonJS({
  "node_modules/mime-db/index.js"(exports2, module2) {
    module2.exports = require_db();
  }
});

// node_modules/mime-types/index.js
var require_mime_types = __commonJS({
  "node_modules/mime-types/index.js"(exports2) {
    "use strict";
    var db = require_mime_db(), extname = require("path").extname, EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/, TEXT_TYPE_REGEXP = /^text\//i;
    exports2.charset = charset;
    exports2.charsets = { lookup: charset };
    exports2.contentType = contentType;
    exports2.extension = extension2;
    exports2.extensions = /* @__PURE__ */ Object.create(null);
    exports2.lookup = lookup;
    exports2.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports2.extensions, exports2.types);
    function charset(type) {
      if (!type || typeof type != "string")
        return !1;
      var match = EXTRACT_TYPE_REGEXP.exec(type), mime = match && db[match[1].toLowerCase()];
      return mime && mime.charset ? mime.charset : match && TEXT_TYPE_REGEXP.test(match[1]) ? "UTF-8" : !1;
    }
    function contentType(str2) {
      if (!str2 || typeof str2 != "string")
        return !1;
      var mime = str2.indexOf("/") === -1 ? exports2.lookup(str2) : str2;
      if (!mime)
        return !1;
      if (mime.indexOf("charset") === -1) {
        var charset2 = exports2.charset(mime);
        charset2 && (mime += "; charset=" + charset2.toLowerCase());
      }
      return mime;
    }
    function extension2(type) {
      if (!type || typeof type != "string")
        return !1;
      var match = EXTRACT_TYPE_REGEXP.exec(type), exts = match && exports2.extensions[match[1].toLowerCase()];
      return !exts || !exts.length ? !1 : exts[0];
    }
    function lookup(path6) {
      if (!path6 || typeof path6 != "string")
        return !1;
      var extension3 = extname("x." + path6).toLowerCase().substr(1);
      return extension3 && exports2.types[extension3] || !1;
    }
    function populateMaps(extensions, types) {
      var preference = ["nginx", "apache", void 0, "iana"];
      Object.keys(db).forEach(function(type) {
        var mime = db[type], exts = mime.extensions;
        if (!(!exts || !exts.length)) {
          extensions[type] = exts;
          for (var i = 0; i < exts.length; i++) {
            var extension3 = exts[i];
            if (types[extension3]) {
              var from = preference.indexOf(db[types[extension3]].source), to = preference.indexOf(mime.source);
              if (types[extension3] !== "application/octet-stream" && (from > to || from === to && types[extension3].substr(0, 12) === "application/"))
                continue;
            }
            types[extension3] = type;
          }
        }
      });
    }
  }
});

// node_modules/asynckit/lib/defer.js
var require_defer = __commonJS({
  "node_modules/asynckit/lib/defer.js"(exports2, module2) {
    module2.exports = defer;
    function defer(fn) {
      var nextTick = typeof setImmediate == "function" ? setImmediate : typeof process == "object" && typeof process.nextTick == "function" ? process.nextTick : null;
      nextTick ? nextTick(fn) : setTimeout(fn, 0);
    }
  }
});

// node_modules/asynckit/lib/async.js
var require_async = __commonJS({
  "node_modules/asynckit/lib/async.js"(exports2, module2) {
    var defer = require_defer();
    module2.exports = async;
    function async(callback) {
      var isAsync = !1;
      return defer(function() {
        isAsync = !0;
      }), function(err, result) {
        isAsync ? callback(err, result) : defer(function() {
          callback(err, result);
        });
      };
    }
  }
});

// node_modules/asynckit/lib/abort.js
var require_abort = __commonJS({
  "node_modules/asynckit/lib/abort.js"(exports2, module2) {
    module2.exports = abort;
    function abort(state) {
      Object.keys(state.jobs).forEach(clean2.bind(state)), state.jobs = {};
    }
    function clean2(key2) {
      typeof this.jobs[key2] == "function" && this.jobs[key2]();
    }
  }
});

// node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS({
  "node_modules/asynckit/lib/iterate.js"(exports2, module2) {
    var async = require_async(), abort = require_abort();
    module2.exports = iterate;
    function iterate(list3, iterator, state, callback) {
      var key2 = state.keyedList ? state.keyedList[state.index] : state.index;
      state.jobs[key2] = runJob(iterator, key2, list3[key2], function(error, output) {
        key2 in state.jobs && (delete state.jobs[key2], error ? abort(state) : state.results[key2] = output, callback(error, state.results));
      });
    }
    function runJob(iterator, key2, item, callback) {
      var aborter;
      return iterator.length == 2 ? aborter = iterator(item, async(callback)) : aborter = iterator(item, key2, async(callback)), aborter;
    }
  }
});

// node_modules/asynckit/lib/state.js
var require_state = __commonJS({
  "node_modules/asynckit/lib/state.js"(exports2, module2) {
    module2.exports = state;
    function state(list3, sortMethod) {
      var isNamedList = !Array.isArray(list3), initState = {
        index: 0,
        keyedList: isNamedList || sortMethod ? Object.keys(list3) : null,
        jobs: {},
        results: isNamedList ? {} : [],
        size: isNamedList ? Object.keys(list3).length : list3.length
      };
      return sortMethod && initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
        return sortMethod(list3[a], list3[b]);
      }), initState;
    }
  }
});

// node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS({
  "node_modules/asynckit/lib/terminator.js"(exports2, module2) {
    var abort = require_abort(), async = require_async();
    module2.exports = terminator;
    function terminator(callback) {
      !Object.keys(this.jobs).length || (this.index = this.size, abort(this), async(callback)(null, this.results));
    }
  }
});

// node_modules/asynckit/parallel.js
var require_parallel = __commonJS({
  "node_modules/asynckit/parallel.js"(exports2, module2) {
    var iterate = require_iterate(), initState = require_state(), terminator = require_terminator();
    module2.exports = parallel;
    function parallel(list3, iterator, callback) {
      for (var state = initState(list3); state.index < (state.keyedList || list3).length; )
        iterate(list3, iterator, state, function(error, result) {
          if (error) {
            callback(error, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        }), state.index++;
      return terminator.bind(state, callback);
    }
  }
});

// node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS({
  "node_modules/asynckit/serialOrdered.js"(exports2, module2) {
    var iterate = require_iterate(), initState = require_state(), terminator = require_terminator();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list3, iterator, sortMethod, callback) {
      var state = initState(list3, sortMethod);
      return iterate(list3, iterator, state, function iteratorHandler(error, result) {
        if (error) {
          callback(error, result);
          return;
        }
        if (state.index++, state.index < (state.keyedList || list3).length) {
          iterate(list3, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      }), terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  }
});

// node_modules/asynckit/serial.js
var require_serial = __commonJS({
  "node_modules/asynckit/serial.js"(exports2, module2) {
    var serialOrdered = require_serialOrdered();
    module2.exports = serial;
    function serial(list3, iterator, callback) {
      return serialOrdered(list3, iterator, null, callback);
    }
  }
});

// node_modules/asynckit/index.js
var require_asynckit = __commonJS({
  "node_modules/asynckit/index.js"(exports2, module2) {
    module2.exports = {
      parallel: require_parallel(),
      serial: require_serial(),
      serialOrdered: require_serialOrdered()
    };
  }
});

// node_modules/form-data/lib/populate.js
var require_populate = __commonJS({
  "node_modules/form-data/lib/populate.js"(exports2, module2) {
    module2.exports = function(dst, src) {
      return Object.keys(src).forEach(function(prop) {
        dst[prop] = dst[prop] || src[prop];
      }), dst;
    };
  }
});

// node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS({
  "node_modules/form-data/lib/form_data.js"(exports2, module2) {
    var CombinedStream = require_combined_stream(), util = require("util"), path6 = require("path"), http7 = require("http"), https = require("https"), parseUrl = require("url").parse, fs4 = require("fs"), Stream = require("stream").Stream, mime = require_mime_types(), asynckit = require_asynckit(), populate = require_populate();
    module2.exports = FormData2;
    util.inherits(FormData2, CombinedStream);
    function FormData2(options2) {
      if (!(this instanceof FormData2))
        return new FormData2(options2);
      this._overheadLength = 0, this._valueLength = 0, this._valuesToMeasure = [], CombinedStream.call(this), options2 = options2 || {};
      for (var option2 in options2)
        this[option2] = options2[option2];
    }
    FormData2.LINE_BREAK = `\r
`;
    FormData2.DEFAULT_CONTENT_TYPE = "application/octet-stream";
    FormData2.prototype.append = function(field, value, options2) {
      options2 = options2 || {}, typeof options2 == "string" && (options2 = { filename: options2 });
      var append = CombinedStream.prototype.append.bind(this);
      if (typeof value == "number" && (value = "" + value), util.isArray(value)) {
        this._error(new Error("Arrays are not supported."));
        return;
      }
      var header = this._multiPartHeader(field, value, options2), footer2 = this._multiPartFooter();
      append(header), append(value), append(footer2), this._trackLength(header, value, options2);
    };
    FormData2.prototype._trackLength = function(header, value, options2) {
      var valueLength = 0;
      options2.knownLength != null ? valueLength += +options2.knownLength : Buffer.isBuffer(value) ? valueLength = value.length : typeof value == "string" && (valueLength = Buffer.byteLength(value)), this._valueLength += valueLength, this._overheadLength += Buffer.byteLength(header) + FormData2.LINE_BREAK.length, !(!value || !value.path && !(value.readable && value.hasOwnProperty("httpVersion")) && !(value instanceof Stream)) && (options2.knownLength || this._valuesToMeasure.push(value));
    };
    FormData2.prototype._lengthRetriever = function(value, callback) {
      value.hasOwnProperty("fd") ? value.end != null && value.end != 1 / 0 && value.start != null ? callback(null, value.end + 1 - (value.start ? value.start : 0)) : fs4.stat(value.path, function(err, stat) {
        var fileSize;
        if (err) {
          callback(err);
          return;
        }
        fileSize = stat.size - (value.start ? value.start : 0), callback(null, fileSize);
      }) : value.hasOwnProperty("httpVersion") ? callback(null, +value.headers["content-length"]) : value.hasOwnProperty("httpModule") ? (value.on("response", function(response) {
        value.pause(), callback(null, +response.headers["content-length"]);
      }), value.resume()) : callback("Unknown stream");
    };
    FormData2.prototype._multiPartHeader = function(field, value, options2) {
      if (typeof options2.header == "string")
        return options2.header;
      var contentDisposition = this._getContentDisposition(value, options2), contentType = this._getContentType(value, options2), contents = "", headers = {
        "Content-Disposition": ["form-data", 'name="' + field + '"'].concat(contentDisposition || []),
        "Content-Type": [].concat(contentType || [])
      };
      typeof options2.header == "object" && populate(headers, options2.header);
      var header;
      for (var prop in headers)
        !headers.hasOwnProperty(prop) || (header = headers[prop], header != null && (Array.isArray(header) || (header = [header]), header.length && (contents += prop + ": " + header.join("; ") + FormData2.LINE_BREAK)));
      return "--" + this.getBoundary() + FormData2.LINE_BREAK + contents + FormData2.LINE_BREAK;
    };
    FormData2.prototype._getContentDisposition = function(value, options2) {
      var filename, contentDisposition;
      return typeof options2.filepath == "string" ? filename = path6.normalize(options2.filepath).replace(/\\/g, "/") : options2.filename || value.name || value.path ? filename = path6.basename(options2.filename || value.name || value.path) : value.readable && value.hasOwnProperty("httpVersion") && (filename = path6.basename(value.client._httpMessage.path || "")), filename && (contentDisposition = 'filename="' + filename + '"'), contentDisposition;
    };
    FormData2.prototype._getContentType = function(value, options2) {
      var contentType = options2.contentType;
      return !contentType && value.name && (contentType = mime.lookup(value.name)), !contentType && value.path && (contentType = mime.lookup(value.path)), !contentType && value.readable && value.hasOwnProperty("httpVersion") && (contentType = value.headers["content-type"]), !contentType && (options2.filepath || options2.filename) && (contentType = mime.lookup(options2.filepath || options2.filename)), !contentType && typeof value == "object" && (contentType = FormData2.DEFAULT_CONTENT_TYPE), contentType;
    };
    FormData2.prototype._multiPartFooter = function() {
      return function(next) {
        var footer2 = FormData2.LINE_BREAK, lastPart = this._streams.length === 0;
        lastPart && (footer2 += this._lastBoundary()), next(footer2);
      }.bind(this);
    };
    FormData2.prototype._lastBoundary = function() {
      return "--" + this.getBoundary() + "--" + FormData2.LINE_BREAK;
    };
    FormData2.prototype.getHeaders = function(userHeaders) {
      var header, formHeaders = {
        "content-type": "multipart/form-data; boundary=" + this.getBoundary()
      };
      for (header in userHeaders)
        userHeaders.hasOwnProperty(header) && (formHeaders[header.toLowerCase()] = userHeaders[header]);
      return formHeaders;
    };
    FormData2.prototype.setBoundary = function(boundary) {
      this._boundary = boundary;
    };
    FormData2.prototype.getBoundary = function() {
      return this._boundary || this._generateBoundary(), this._boundary;
    };
    FormData2.prototype.getBuffer = function() {
      for (var dataBuffer = new Buffer.alloc(0), boundary = this.getBoundary(), i = 0, len = this._streams.length; i < len; i++)
        typeof this._streams[i] != "function" && (Buffer.isBuffer(this._streams[i]) ? dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]) : dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]), (typeof this._streams[i] != "string" || this._streams[i].substring(2, boundary.length + 2) !== boundary) && (dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData2.LINE_BREAK)])));
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData2.prototype._generateBoundary = function() {
      for (var boundary = "--------------------------", i = 0; i < 24; i++)
        boundary += Math.floor(Math.random() * 10).toString(16);
      this._boundary = boundary;
    };
    FormData2.prototype.getLengthSync = function() {
      var knownLength = this._overheadLength + this._valueLength;
      return this._streams.length && (knownLength += this._lastBoundary().length), this.hasKnownLength() || this._error(new Error("Cannot calculate proper length in synchronous way.")), knownLength;
    };
    FormData2.prototype.hasKnownLength = function() {
      var hasKnownLength = !0;
      return this._valuesToMeasure.length && (hasKnownLength = !1), hasKnownLength;
    };
    FormData2.prototype.getLength = function(cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length && (knownLength += this._lastBoundary().length), !this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
        if (err) {
          cb(err);
          return;
        }
        values.forEach(function(length) {
          knownLength += length;
        }), cb(null, knownLength);
      });
    };
    FormData2.prototype.submit = function(params, cb) {
      var request, options2, defaults = { method: "post" };
      return typeof params == "string" ? (params = parseUrl(params), options2 = populate({
        port: params.port,
        path: params.pathname,
        host: params.hostname,
        protocol: params.protocol
      }, defaults)) : (options2 = populate(params, defaults), options2.port || (options2.port = options2.protocol == "https:" ? 443 : 80)), options2.headers = this.getHeaders(params.headers), options2.protocol == "https:" ? request = https.request(options2) : request = http7.request(options2), this.getLength(function(err, length) {
        if (err && err !== "Unknown stream") {
          this._error(err);
          return;
        }
        if (length && request.setHeader("Content-Length", length), this.pipe(request), cb) {
          var onResponse, callback = function(error, responce) {
            return request.removeListener("error", callback), request.removeListener("response", onResponse), cb.call(this, error, responce);
          };
          onResponse = callback.bind(this, null), request.on("error", callback), request.on("response", onResponse);
        }
      }.bind(this)), request;
    };
    FormData2.prototype._error = function(err) {
      this.error || (this.error = err, this.pause(), this.emit("error", err));
    };
    FormData2.prototype.toString = function() {
      return "[object FormData]";
    };
  }
});

// node_modules/@bradgarropy/http/dist/utils.js
var require_utils2 = __commonJS({
  "node_modules/@bradgarropy/http/dist/utils.js"(exports2) {
    "use strict";
    var __importDefault = exports2 && exports2.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { default: mod };
    };
    exports2.__esModule = !0;
    exports2.createUrl = exports2.createHeaders = exports2.createBody = void 0;
    var cross_fetch_1 = require_node_ponyfill(), form_data_1 = __importDefault(require_form_data()), createUrl = function(url, params) {
      if (!Object.entries(params).length)
        return url;
      var queryParams = new URLSearchParams(params), queryString = queryParams.toString(), newUrl = "".concat(url, "?").concat(queryString);
      return newUrl;
    };
    exports2.createUrl = createUrl;
    var createHeaders = function(_a2) {
      var _b = _a2.headers, headers = _b === void 0 ? new cross_fetch_1.Headers() : _b, _c = _a2.type, type = _c === void 0 ? "json" : _c, newHeaders = new cross_fetch_1.Headers(headers);
      switch (type) {
        case "json":
          newHeaders.set("content-type", "application/json");
          break;
        case "form":
          break;
      }
      return newHeaders;
    };
    exports2.createHeaders = createHeaders;
    var createBody = function(_a2) {
      var body3 = _a2.body, _b = _a2.type, type = _b === void 0 ? "json" : _b;
      if (!body3)
        return null;
      switch (type) {
        case "json": {
          var newBody = JSON.stringify(body3);
          return newBody;
        }
        case "form": {
          var form_1 = new form_data_1.default();
          return Object.entries(body3).forEach(function(_a3) {
            var key2 = _a3[0], value = _a3[1];
            form_1.append(key2, value);
          }), form_1;
        }
      }
    };
    exports2.createBody = createBody;
  }
});

// node_modules/@bradgarropy/http/dist/request.js
var require_request = __commonJS({
  "node_modules/@bradgarropy/http/dist/request.js"(exports2) {
    "use strict";
    var __awaiter3 = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }, __generator = exports2 && exports2.__generator || function(thisArg, body3) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        for (; _; )
          try {
            if (f = 1, y && (t = op[0] & 2 ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            switch (y = 0, t && (op = [op[0] & 2, t.value]), op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                return _.label++, { value: op[1], done: !1 };
              case 5:
                _.label++, y = op[1], op = [0];
                continue;
              case 7:
                op = _.ops.pop(), _.trys.pop();
                continue;
              default:
                if (t = _.trys, !(t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1], t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2], _.ops.push(op);
                  break;
                }
                t[2] && _.ops.pop(), _.trys.pop();
                continue;
            }
            op = body3.call(thisArg, _);
          } catch (e) {
            op = [6, e], y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: !0 };
      }
    }, __importDefault = exports2 && exports2.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { default: mod };
    };
    exports2.__esModule = !0;
    exports2.httpRequest = void 0;
    var cross_fetch_1 = __importDefault(require_node_ponyfill()), utils_1 = require_utils2(), httpRequest = function(url, method, options2) {
      return __awaiter3(void 0, void 0, void 0, function() {
        var headers, body3, response, json13, _a2, json13;
        return __generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              return options2 != null && options2.params && (url = (0, utils_1.createUrl)(url, options2.params)), headers = (0, utils_1.createHeaders)({
                headers: options2 == null ? void 0 : options2.headers,
                type: options2 == null ? void 0 : options2.type
              }), body3 = null, method !== "GET" && (body3 = (0, utils_1.createBody)({ body: options2 == null ? void 0 : options2.body, type: options2 == null ? void 0 : options2.type })), [4, (0, cross_fetch_1.default)(url, {
                method,
                headers,
                body: body3
              })];
            case 1:
              response = _b.sent(), _b.label = 2;
            case 2:
              return _b.trys.push([2, 4, , 5]), [4, response.json()];
            case 3:
              return json13 = _b.sent(), [2, json13];
            case 4:
              return _a2 = _b.sent(), json13 = {}, [2, json13];
            case 5:
              return [2];
          }
        });
      });
    };
    exports2.httpRequest = httpRequest;
  }
});

// node_modules/@bradgarropy/http/dist/delete.js
var require_delete = __commonJS({
  "node_modules/@bradgarropy/http/dist/delete.js"(exports2) {
    "use strict";
    var __awaiter3 = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }, __generator = exports2 && exports2.__generator || function(thisArg, body3) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        for (; _; )
          try {
            if (f = 1, y && (t = op[0] & 2 ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            switch (y = 0, t && (op = [op[0] & 2, t.value]), op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                return _.label++, { value: op[1], done: !1 };
              case 5:
                _.label++, y = op[1], op = [0];
                continue;
              case 7:
                op = _.ops.pop(), _.trys.pop();
                continue;
              default:
                if (t = _.trys, !(t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1], t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2], _.ops.push(op);
                  break;
                }
                t[2] && _.ops.pop(), _.trys.pop();
                continue;
            }
            op = body3.call(thisArg, _);
          } catch (e) {
            op = [6, e], y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: !0 };
      }
    };
    exports2.__esModule = !0;
    exports2.httpDelete = void 0;
    var request_1 = require_request(), httpDelete = function(url, options2) {
      return __awaiter3(void 0, void 0, void 0, function() {
        var response;
        return __generator(this, function(_a2) {
          switch (_a2.label) {
            case 0:
              return [4, (0, request_1.httpRequest)(url, "DELETE", options2)];
            case 1:
              return response = _a2.sent(), [2, response];
          }
        });
      });
    };
    exports2.httpDelete = httpDelete;
  }
});

// node_modules/@bradgarropy/http/dist/get.js
var require_get = __commonJS({
  "node_modules/@bradgarropy/http/dist/get.js"(exports2) {
    "use strict";
    var __awaiter3 = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }, __generator = exports2 && exports2.__generator || function(thisArg, body3) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        for (; _; )
          try {
            if (f = 1, y && (t = op[0] & 2 ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            switch (y = 0, t && (op = [op[0] & 2, t.value]), op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                return _.label++, { value: op[1], done: !1 };
              case 5:
                _.label++, y = op[1], op = [0];
                continue;
              case 7:
                op = _.ops.pop(), _.trys.pop();
                continue;
              default:
                if (t = _.trys, !(t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1], t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2], _.ops.push(op);
                  break;
                }
                t[2] && _.ops.pop(), _.trys.pop();
                continue;
            }
            op = body3.call(thisArg, _);
          } catch (e) {
            op = [6, e], y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: !0 };
      }
    };
    exports2.__esModule = !0;
    exports2.httpGet = void 0;
    var request_1 = require_request(), httpGet = function(url, options2) {
      return __awaiter3(void 0, void 0, void 0, function() {
        var response;
        return __generator(this, function(_a2) {
          switch (_a2.label) {
            case 0:
              return [4, (0, request_1.httpRequest)(url, "GET", options2)];
            case 1:
              return response = _a2.sent(), [2, response];
          }
        });
      });
    };
    exports2.httpGet = httpGet;
  }
});

// node_modules/@bradgarropy/http/dist/patch.js
var require_patch = __commonJS({
  "node_modules/@bradgarropy/http/dist/patch.js"(exports2) {
    "use strict";
    var __awaiter3 = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }, __generator = exports2 && exports2.__generator || function(thisArg, body3) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        for (; _; )
          try {
            if (f = 1, y && (t = op[0] & 2 ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            switch (y = 0, t && (op = [op[0] & 2, t.value]), op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                return _.label++, { value: op[1], done: !1 };
              case 5:
                _.label++, y = op[1], op = [0];
                continue;
              case 7:
                op = _.ops.pop(), _.trys.pop();
                continue;
              default:
                if (t = _.trys, !(t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1], t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2], _.ops.push(op);
                  break;
                }
                t[2] && _.ops.pop(), _.trys.pop();
                continue;
            }
            op = body3.call(thisArg, _);
          } catch (e) {
            op = [6, e], y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: !0 };
      }
    };
    exports2.__esModule = !0;
    exports2.httpPatch = void 0;
    var request_1 = require_request(), httpPatch = function(url, options2) {
      return __awaiter3(void 0, void 0, void 0, function() {
        var response;
        return __generator(this, function(_a2) {
          switch (_a2.label) {
            case 0:
              return [4, (0, request_1.httpRequest)(url, "PATCH", options2)];
            case 1:
              return response = _a2.sent(), [2, response];
          }
        });
      });
    };
    exports2.httpPatch = httpPatch;
  }
});

// node_modules/@bradgarropy/http/dist/post.js
var require_post = __commonJS({
  "node_modules/@bradgarropy/http/dist/post.js"(exports2) {
    "use strict";
    var __awaiter3 = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }, __generator = exports2 && exports2.__generator || function(thisArg, body3) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        for (; _; )
          try {
            if (f = 1, y && (t = op[0] & 2 ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            switch (y = 0, t && (op = [op[0] & 2, t.value]), op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                return _.label++, { value: op[1], done: !1 };
              case 5:
                _.label++, y = op[1], op = [0];
                continue;
              case 7:
                op = _.ops.pop(), _.trys.pop();
                continue;
              default:
                if (t = _.trys, !(t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1], t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2], _.ops.push(op);
                  break;
                }
                t[2] && _.ops.pop(), _.trys.pop();
                continue;
            }
            op = body3.call(thisArg, _);
          } catch (e) {
            op = [6, e], y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: !0 };
      }
    };
    exports2.__esModule = !0;
    exports2.httpPost = void 0;
    var request_1 = require_request(), httpPost = function(url, options2) {
      return __awaiter3(void 0, void 0, void 0, function() {
        var response;
        return __generator(this, function(_a2) {
          switch (_a2.label) {
            case 0:
              return [4, (0, request_1.httpRequest)(url, "POST", options2)];
            case 1:
              return response = _a2.sent(), [2, response];
          }
        });
      });
    };
    exports2.httpPost = httpPost;
  }
});

// node_modules/@bradgarropy/http/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/@bradgarropy/http/dist/index.js"(exports2) {
    "use strict";
    exports2.__esModule = !0;
    exports2.http = void 0;
    var delete_1 = require_delete(), get_1 = require_get(), patch_1 = require_patch(), post_1 = require_post(), http7 = {
      get: get_1.httpGet,
      post: post_1.httpPost,
      patch: patch_1.httpPatch,
      delete: delete_1.httpDelete
    };
    exports2.http = http7;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/base64.js
var require_base64 = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/base64.js"(exports2) {
    var intToCharMap = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
    exports2.encode = function(number2) {
      if (0 <= number2 && number2 < intToCharMap.length)
        return intToCharMap[number2];
      throw new TypeError("Must be between 0 and 63: " + number2);
    };
    exports2.decode = function(charCode) {
      var bigA = 65, bigZ = 90, littleA = 97, littleZ = 122, zero = 48, nine = 57, plus = 43, slash = 47, littleOffset = 26, numberOffset = 52;
      return bigA <= charCode && charCode <= bigZ ? charCode - bigA : littleA <= charCode && charCode <= littleZ ? charCode - littleA + littleOffset : zero <= charCode && charCode <= nine ? charCode - zero + numberOffset : charCode == plus ? 62 : charCode == slash ? 63 : -1;
    };
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js
var require_base64_vlq = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js"(exports2) {
    var base64 = require_base64(), VLQ_BASE_SHIFT = 5, VLQ_BASE = 1 << VLQ_BASE_SHIFT, VLQ_BASE_MASK = VLQ_BASE - 1, VLQ_CONTINUATION_BIT = VLQ_BASE;
    function toVLQSigned(aValue) {
      return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;
    }
    function fromVLQSigned(aValue) {
      var isNegative = (aValue & 1) === 1, shifted = aValue >> 1;
      return isNegative ? -shifted : shifted;
    }
    exports2.encode = function(aValue) {
      var encoded = "", digit, vlq = toVLQSigned(aValue);
      do
        digit = vlq & VLQ_BASE_MASK, vlq >>>= VLQ_BASE_SHIFT, vlq > 0 && (digit |= VLQ_CONTINUATION_BIT), encoded += base64.encode(digit);
      while (vlq > 0);
      return encoded;
    };
    exports2.decode = function(aStr, aIndex, aOutParam) {
      var strLen = aStr.length, result = 0, shift = 0, continuation, digit;
      do {
        if (aIndex >= strLen)
          throw new Error("Expected more digits in base 64 VLQ value.");
        if (digit = base64.decode(aStr.charCodeAt(aIndex++)), digit === -1)
          throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
        continuation = !!(digit & VLQ_CONTINUATION_BIT), digit &= VLQ_BASE_MASK, result = result + (digit << shift), shift += VLQ_BASE_SHIFT;
      } while (continuation);
      aOutParam.value = fromVLQSigned(result), aOutParam.rest = aIndex;
    };
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/util.js
var require_util = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/util.js"(exports2) {
    function getArg(aArgs, aName, aDefaultValue) {
      if (aName in aArgs)
        return aArgs[aName];
      if (arguments.length === 3)
        return aDefaultValue;
      throw new Error('"' + aName + '" is a required argument.');
    }
    exports2.getArg = getArg;
    var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/, dataUrlRegexp = /^data:.+\,.+$/;
    function urlParse(aUrl) {
      var match = aUrl.match(urlRegexp);
      return match ? {
        scheme: match[1],
        auth: match[2],
        host: match[3],
        port: match[4],
        path: match[5]
      } : null;
    }
    exports2.urlParse = urlParse;
    function urlGenerate(aParsedUrl) {
      var url = "";
      return aParsedUrl.scheme && (url += aParsedUrl.scheme + ":"), url += "//", aParsedUrl.auth && (url += aParsedUrl.auth + "@"), aParsedUrl.host && (url += aParsedUrl.host), aParsedUrl.port && (url += ":" + aParsedUrl.port), aParsedUrl.path && (url += aParsedUrl.path), url;
    }
    exports2.urlGenerate = urlGenerate;
    function normalize2(aPath) {
      var path6 = aPath, url = urlParse(aPath);
      if (url) {
        if (!url.path)
          return aPath;
        path6 = url.path;
      }
      for (var isAbsolute = exports2.isAbsolute(path6), parts = path6.split(/\/+/), part, up = 0, i = parts.length - 1; i >= 0; i--)
        part = parts[i], part === "." ? parts.splice(i, 1) : part === ".." ? up++ : up > 0 && (part === "" ? (parts.splice(i + 1, up), up = 0) : (parts.splice(i, 2), up--));
      return path6 = parts.join("/"), path6 === "" && (path6 = isAbsolute ? "/" : "."), url ? (url.path = path6, urlGenerate(url)) : path6;
    }
    exports2.normalize = normalize2;
    function join(aRoot, aPath) {
      aRoot === "" && (aRoot = "."), aPath === "" && (aPath = ".");
      var aPathUrl = urlParse(aPath), aRootUrl = urlParse(aRoot);
      if (aRootUrl && (aRoot = aRootUrl.path || "/"), aPathUrl && !aPathUrl.scheme)
        return aRootUrl && (aPathUrl.scheme = aRootUrl.scheme), urlGenerate(aPathUrl);
      if (aPathUrl || aPath.match(dataUrlRegexp))
        return aPath;
      if (aRootUrl && !aRootUrl.host && !aRootUrl.path)
        return aRootUrl.host = aPath, urlGenerate(aRootUrl);
      var joined = aPath.charAt(0) === "/" ? aPath : normalize2(aRoot.replace(/\/+$/, "") + "/" + aPath);
      return aRootUrl ? (aRootUrl.path = joined, urlGenerate(aRootUrl)) : joined;
    }
    exports2.join = join;
    exports2.isAbsolute = function(aPath) {
      return aPath.charAt(0) === "/" || urlRegexp.test(aPath);
    };
    function relative(aRoot, aPath) {
      aRoot === "" && (aRoot = "."), aRoot = aRoot.replace(/\/$/, "");
      for (var level = 0; aPath.indexOf(aRoot + "/") !== 0; ) {
        var index2 = aRoot.lastIndexOf("/");
        if (index2 < 0 || (aRoot = aRoot.slice(0, index2), aRoot.match(/^([^\/]+:\/)?\/*$/)))
          return aPath;
        ++level;
      }
      return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
    }
    exports2.relative = relative;
    var supportsNullProto = function() {
      var obj = /* @__PURE__ */ Object.create(null);
      return !("__proto__" in obj);
    }();
    function identity(s2) {
      return s2;
    }
    function toSetString(aStr) {
      return isProtoString(aStr) ? "$" + aStr : aStr;
    }
    exports2.toSetString = supportsNullProto ? identity : toSetString;
    function fromSetString(aStr) {
      return isProtoString(aStr) ? aStr.slice(1) : aStr;
    }
    exports2.fromSetString = supportsNullProto ? identity : fromSetString;
    function isProtoString(s2) {
      if (!s2)
        return !1;
      var length = s2.length;
      if (length < 9 || s2.charCodeAt(length - 1) !== 95 || s2.charCodeAt(length - 2) !== 95 || s2.charCodeAt(length - 3) !== 111 || s2.charCodeAt(length - 4) !== 116 || s2.charCodeAt(length - 5) !== 111 || s2.charCodeAt(length - 6) !== 114 || s2.charCodeAt(length - 7) !== 112 || s2.charCodeAt(length - 8) !== 95 || s2.charCodeAt(length - 9) !== 95)
        return !1;
      for (var i = length - 10; i >= 0; i--)
        if (s2.charCodeAt(i) !== 36)
          return !1;
      return !0;
    }
    function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
      var cmp = strcmp(mappingA.source, mappingB.source);
      return cmp !== 0 || (cmp = mappingA.originalLine - mappingB.originalLine, cmp !== 0) || (cmp = mappingA.originalColumn - mappingB.originalColumn, cmp !== 0 || onlyCompareOriginal) || (cmp = mappingA.generatedColumn - mappingB.generatedColumn, cmp !== 0) || (cmp = mappingA.generatedLine - mappingB.generatedLine, cmp !== 0) ? cmp : strcmp(mappingA.name, mappingB.name);
    }
    exports2.compareByOriginalPositions = compareByOriginalPositions;
    function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
      var cmp = mappingA.generatedLine - mappingB.generatedLine;
      return cmp !== 0 || (cmp = mappingA.generatedColumn - mappingB.generatedColumn, cmp !== 0 || onlyCompareGenerated) || (cmp = strcmp(mappingA.source, mappingB.source), cmp !== 0) || (cmp = mappingA.originalLine - mappingB.originalLine, cmp !== 0) || (cmp = mappingA.originalColumn - mappingB.originalColumn, cmp !== 0) ? cmp : strcmp(mappingA.name, mappingB.name);
    }
    exports2.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;
    function strcmp(aStr1, aStr2) {
      return aStr1 === aStr2 ? 0 : aStr1 === null ? 1 : aStr2 === null ? -1 : aStr1 > aStr2 ? 1 : -1;
    }
    function compareByGeneratedPositionsInflated(mappingA, mappingB) {
      var cmp = mappingA.generatedLine - mappingB.generatedLine;
      return cmp !== 0 || (cmp = mappingA.generatedColumn - mappingB.generatedColumn, cmp !== 0) || (cmp = strcmp(mappingA.source, mappingB.source), cmp !== 0) || (cmp = mappingA.originalLine - mappingB.originalLine, cmp !== 0) || (cmp = mappingA.originalColumn - mappingB.originalColumn, cmp !== 0) ? cmp : strcmp(mappingA.name, mappingB.name);
    }
    exports2.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;
    function parseSourceMapInput(str2) {
      return JSON.parse(str2.replace(/^\)]}'[^\n]*\n/, ""));
    }
    exports2.parseSourceMapInput = parseSourceMapInput;
    function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
      if (sourceURL = sourceURL || "", sourceRoot && (sourceRoot[sourceRoot.length - 1] !== "/" && sourceURL[0] !== "/" && (sourceRoot += "/"), sourceURL = sourceRoot + sourceURL), sourceMapURL) {
        var parsed = urlParse(sourceMapURL);
        if (!parsed)
          throw new Error("sourceMapURL could not be parsed");
        if (parsed.path) {
          var index2 = parsed.path.lastIndexOf("/");
          index2 >= 0 && (parsed.path = parsed.path.substring(0, index2 + 1));
        }
        sourceURL = join(urlGenerate(parsed), sourceURL);
      }
      return normalize2(sourceURL);
    }
    exports2.computeSourceURL = computeSourceURL;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/array-set.js
var require_array_set = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/array-set.js"(exports2) {
    var util = require_util(), has = Object.prototype.hasOwnProperty, hasNativeMap = typeof Map < "u";
    function ArraySet() {
      this._array = [], this._set = hasNativeMap ? /* @__PURE__ */ new Map() : /* @__PURE__ */ Object.create(null);
    }
    ArraySet.fromArray = function(aArray, aAllowDuplicates) {
      for (var set = new ArraySet(), i = 0, len = aArray.length; i < len; i++)
        set.add(aArray[i], aAllowDuplicates);
      return set;
    };
    ArraySet.prototype.size = function() {
      return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
    };
    ArraySet.prototype.add = function(aStr, aAllowDuplicates) {
      var sStr = hasNativeMap ? aStr : util.toSetString(aStr), isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr), idx = this._array.length;
      (!isDuplicate || aAllowDuplicates) && this._array.push(aStr), isDuplicate || (hasNativeMap ? this._set.set(aStr, idx) : this._set[sStr] = idx);
    };
    ArraySet.prototype.has = function(aStr) {
      if (hasNativeMap)
        return this._set.has(aStr);
      var sStr = util.toSetString(aStr);
      return has.call(this._set, sStr);
    };
    ArraySet.prototype.indexOf = function(aStr) {
      if (hasNativeMap) {
        var idx = this._set.get(aStr);
        if (idx >= 0)
          return idx;
      } else {
        var sStr = util.toSetString(aStr);
        if (has.call(this._set, sStr))
          return this._set[sStr];
      }
      throw new Error('"' + aStr + '" is not in the set.');
    };
    ArraySet.prototype.at = function(aIdx) {
      if (aIdx >= 0 && aIdx < this._array.length)
        return this._array[aIdx];
      throw new Error("No element indexed by " + aIdx);
    };
    ArraySet.prototype.toArray = function() {
      return this._array.slice();
    };
    exports2.ArraySet = ArraySet;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js
var require_mapping_list = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js"(exports2) {
    var util = require_util();
    function generatedPositionAfter(mappingA, mappingB) {
      var lineA = mappingA.generatedLine, lineB = mappingB.generatedLine, columnA = mappingA.generatedColumn, columnB = mappingB.generatedColumn;
      return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
    }
    function MappingList() {
      this._array = [], this._sorted = !0, this._last = { generatedLine: -1, generatedColumn: 0 };
    }
    MappingList.prototype.unsortedForEach = function(aCallback, aThisArg) {
      this._array.forEach(aCallback, aThisArg);
    };
    MappingList.prototype.add = function(aMapping) {
      generatedPositionAfter(this._last, aMapping) ? (this._last = aMapping, this._array.push(aMapping)) : (this._sorted = !1, this._array.push(aMapping));
    };
    MappingList.prototype.toArray = function() {
      return this._sorted || (this._array.sort(util.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
    };
    exports2.MappingList = MappingList;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js
var require_source_map_generator = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js"(exports2) {
    var base64VLQ = require_base64_vlq(), util = require_util(), ArraySet = require_array_set().ArraySet, MappingList = require_mapping_list().MappingList;
    function SourceMapGenerator(aArgs) {
      aArgs || (aArgs = {}), this._file = util.getArg(aArgs, "file", null), this._sourceRoot = util.getArg(aArgs, "sourceRoot", null), this._skipValidation = util.getArg(aArgs, "skipValidation", !1), this._sources = new ArraySet(), this._names = new ArraySet(), this._mappings = new MappingList(), this._sourcesContents = null;
    }
    SourceMapGenerator.prototype._version = 3;
    SourceMapGenerator.fromSourceMap = function(aSourceMapConsumer) {
      var sourceRoot = aSourceMapConsumer.sourceRoot, generator = new SourceMapGenerator({
        file: aSourceMapConsumer.file,
        sourceRoot
      });
      return aSourceMapConsumer.eachMapping(function(mapping) {
        var newMapping = {
          generated: {
            line: mapping.generatedLine,
            column: mapping.generatedColumn
          }
        };
        mapping.source != null && (newMapping.source = mapping.source, sourceRoot != null && (newMapping.source = util.relative(sourceRoot, newMapping.source)), newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        }, mapping.name != null && (newMapping.name = mapping.name)), generator.addMapping(newMapping);
      }), aSourceMapConsumer.sources.forEach(function(sourceFile) {
        var sourceRelative = sourceFile;
        sourceRoot !== null && (sourceRelative = util.relative(sourceRoot, sourceFile)), generator._sources.has(sourceRelative) || generator._sources.add(sourceRelative);
        var content3 = aSourceMapConsumer.sourceContentFor(sourceFile);
        content3 != null && generator.setSourceContent(sourceFile, content3);
      }), generator;
    };
    SourceMapGenerator.prototype.addMapping = function(aArgs) {
      var generated2 = util.getArg(aArgs, "generated"), original = util.getArg(aArgs, "original", null), source = util.getArg(aArgs, "source", null), name = util.getArg(aArgs, "name", null);
      this._skipValidation || this._validateMapping(generated2, original, source, name), source != null && (source = String(source), this._sources.has(source) || this._sources.add(source)), name != null && (name = String(name), this._names.has(name) || this._names.add(name)), this._mappings.add({
        generatedLine: generated2.line,
        generatedColumn: generated2.column,
        originalLine: original != null && original.line,
        originalColumn: original != null && original.column,
        source,
        name
      });
    };
    SourceMapGenerator.prototype.setSourceContent = function(aSourceFile, aSourceContent) {
      var source = aSourceFile;
      this._sourceRoot != null && (source = util.relative(this._sourceRoot, source)), aSourceContent != null ? (this._sourcesContents || (this._sourcesContents = /* @__PURE__ */ Object.create(null)), this._sourcesContents[util.toSetString(source)] = aSourceContent) : this._sourcesContents && (delete this._sourcesContents[util.toSetString(source)], Object.keys(this._sourcesContents).length === 0 && (this._sourcesContents = null));
    };
    SourceMapGenerator.prototype.applySourceMap = function(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
      var sourceFile = aSourceFile;
      if (aSourceFile == null) {
        if (aSourceMapConsumer.file == null)
          throw new Error(
            `SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`
          );
        sourceFile = aSourceMapConsumer.file;
      }
      var sourceRoot = this._sourceRoot;
      sourceRoot != null && (sourceFile = util.relative(sourceRoot, sourceFile));
      var newSources = new ArraySet(), newNames = new ArraySet();
      this._mappings.unsortedForEach(function(mapping) {
        if (mapping.source === sourceFile && mapping.originalLine != null) {
          var original = aSourceMapConsumer.originalPositionFor({
            line: mapping.originalLine,
            column: mapping.originalColumn
          });
          original.source != null && (mapping.source = original.source, aSourceMapPath != null && (mapping.source = util.join(aSourceMapPath, mapping.source)), sourceRoot != null && (mapping.source = util.relative(sourceRoot, mapping.source)), mapping.originalLine = original.line, mapping.originalColumn = original.column, original.name != null && (mapping.name = original.name));
        }
        var source = mapping.source;
        source != null && !newSources.has(source) && newSources.add(source);
        var name = mapping.name;
        name != null && !newNames.has(name) && newNames.add(name);
      }, this), this._sources = newSources, this._names = newNames, aSourceMapConsumer.sources.forEach(function(sourceFile2) {
        var content3 = aSourceMapConsumer.sourceContentFor(sourceFile2);
        content3 != null && (aSourceMapPath != null && (sourceFile2 = util.join(aSourceMapPath, sourceFile2)), sourceRoot != null && (sourceFile2 = util.relative(sourceRoot, sourceFile2)), this.setSourceContent(sourceFile2, content3));
      }, this);
    };
    SourceMapGenerator.prototype._validateMapping = function(aGenerated, aOriginal, aSource, aName) {
      if (aOriginal && typeof aOriginal.line != "number" && typeof aOriginal.column != "number")
        throw new Error(
          "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values."
        );
      if (!(aGenerated && "line" in aGenerated && "column" in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName)) {
        if (aGenerated && "line" in aGenerated && "column" in aGenerated && aOriginal && "line" in aOriginal && "column" in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource)
          return;
        throw new Error("Invalid mapping: " + JSON.stringify({
          generated: aGenerated,
          source: aSource,
          original: aOriginal,
          name: aName
        }));
      }
    };
    SourceMapGenerator.prototype._serializeMappings = function() {
      for (var previousGeneratedColumn = 0, previousGeneratedLine = 1, previousOriginalColumn = 0, previousOriginalLine = 0, previousName = 0, previousSource = 0, result = "", next, mapping, nameIdx, sourceIdx, mappings = this._mappings.toArray(), i = 0, len = mappings.length; i < len; i++) {
        if (mapping = mappings[i], next = "", mapping.generatedLine !== previousGeneratedLine)
          for (previousGeneratedColumn = 0; mapping.generatedLine !== previousGeneratedLine; )
            next += ";", previousGeneratedLine++;
        else if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1]))
            continue;
          next += ",";
        }
        next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn), previousGeneratedColumn = mapping.generatedColumn, mapping.source != null && (sourceIdx = this._sources.indexOf(mapping.source), next += base64VLQ.encode(sourceIdx - previousSource), previousSource = sourceIdx, next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine), previousOriginalLine = mapping.originalLine - 1, next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn), previousOriginalColumn = mapping.originalColumn, mapping.name != null && (nameIdx = this._names.indexOf(mapping.name), next += base64VLQ.encode(nameIdx - previousName), previousName = nameIdx)), result += next;
      }
      return result;
    };
    SourceMapGenerator.prototype._generateSourcesContent = function(aSources, aSourceRoot) {
      return aSources.map(function(source) {
        if (!this._sourcesContents)
          return null;
        aSourceRoot != null && (source = util.relative(aSourceRoot, source));
        var key2 = util.toSetString(source);
        return Object.prototype.hasOwnProperty.call(this._sourcesContents, key2) ? this._sourcesContents[key2] : null;
      }, this);
    };
    SourceMapGenerator.prototype.toJSON = function() {
      var map2 = {
        version: this._version,
        sources: this._sources.toArray(),
        names: this._names.toArray(),
        mappings: this._serializeMappings()
      };
      return this._file != null && (map2.file = this._file), this._sourceRoot != null && (map2.sourceRoot = this._sourceRoot), this._sourcesContents && (map2.sourcesContent = this._generateSourcesContent(map2.sources, map2.sourceRoot)), map2;
    };
    SourceMapGenerator.prototype.toString = function() {
      return JSON.stringify(this.toJSON());
    };
    exports2.SourceMapGenerator = SourceMapGenerator;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/binary-search.js
var require_binary_search = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/binary-search.js"(exports2) {
    exports2.GREATEST_LOWER_BOUND = 1;
    exports2.LEAST_UPPER_BOUND = 2;
    function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
      var mid = Math.floor((aHigh - aLow) / 2) + aLow, cmp = aCompare(aNeedle, aHaystack[mid], !0);
      return cmp === 0 ? mid : cmp > 0 ? aHigh - mid > 1 ? recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias) : aBias == exports2.LEAST_UPPER_BOUND ? aHigh < aHaystack.length ? aHigh : -1 : mid : mid - aLow > 1 ? recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias) : aBias == exports2.LEAST_UPPER_BOUND ? mid : aLow < 0 ? -1 : aLow;
    }
    exports2.search = function(aNeedle, aHaystack, aCompare, aBias) {
      if (aHaystack.length === 0)
        return -1;
      var index2 = recursiveSearch(
        -1,
        aHaystack.length,
        aNeedle,
        aHaystack,
        aCompare,
        aBias || exports2.GREATEST_LOWER_BOUND
      );
      if (index2 < 0)
        return -1;
      for (; index2 - 1 >= 0 && aCompare(aHaystack[index2], aHaystack[index2 - 1], !0) === 0; )
        --index2;
      return index2;
    };
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js
var require_quick_sort = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js"(exports2) {
    function swap(ary, x, y) {
      var temp = ary[x];
      ary[x] = ary[y], ary[y] = temp;
    }
    function randomIntInRange(low, high) {
      return Math.round(low + Math.random() * (high - low));
    }
    function doQuickSort(ary, comparator, p2, r) {
      if (p2 < r) {
        var pivotIndex = randomIntInRange(p2, r), i = p2 - 1;
        swap(ary, pivotIndex, r);
        for (var pivot = ary[r], j = p2; j < r; j++)
          comparator(ary[j], pivot) <= 0 && (i += 1, swap(ary, i, j));
        swap(ary, i + 1, j);
        var q = i + 1;
        doQuickSort(ary, comparator, p2, q - 1), doQuickSort(ary, comparator, q + 1, r);
      }
    }
    exports2.quickSort = function(ary, comparator) {
      doQuickSort(ary, comparator, 0, ary.length - 1);
    };
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js
var require_source_map_consumer = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js"(exports2) {
    var util = require_util(), binarySearch = require_binary_search(), ArraySet = require_array_set().ArraySet, base64VLQ = require_base64_vlq(), quickSort = require_quick_sort().quickSort;
    function SourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      return typeof aSourceMap == "string" && (sourceMap = util.parseSourceMapInput(aSourceMap)), sourceMap.sections != null ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL) : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);
    }
    SourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
      return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);
    };
    SourceMapConsumer.prototype._version = 3;
    SourceMapConsumer.prototype.__generatedMappings = null;
    Object.defineProperty(SourceMapConsumer.prototype, "_generatedMappings", {
      configurable: !0,
      enumerable: !0,
      get: function() {
        return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
      }
    });
    SourceMapConsumer.prototype.__originalMappings = null;
    Object.defineProperty(SourceMapConsumer.prototype, "_originalMappings", {
      configurable: !0,
      enumerable: !0,
      get: function() {
        return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
      }
    });
    SourceMapConsumer.prototype._charIsMappingSeparator = function(aStr, index2) {
      var c = aStr.charAt(index2);
      return c === ";" || c === ",";
    };
    SourceMapConsumer.prototype._parseMappings = function(aStr, aSourceRoot) {
      throw new Error("Subclasses must implement _parseMappings");
    };
    SourceMapConsumer.GENERATED_ORDER = 1;
    SourceMapConsumer.ORIGINAL_ORDER = 2;
    SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
    SourceMapConsumer.LEAST_UPPER_BOUND = 2;
    SourceMapConsumer.prototype.eachMapping = function(aCallback, aContext, aOrder) {
      var context = aContext || null, order2 = aOrder || SourceMapConsumer.GENERATED_ORDER, mappings;
      switch (order2) {
        case SourceMapConsumer.GENERATED_ORDER:
          mappings = this._generatedMappings;
          break;
        case SourceMapConsumer.ORIGINAL_ORDER:
          mappings = this._originalMappings;
          break;
        default:
          throw new Error("Unknown order of iteration.");
      }
      var sourceRoot = this.sourceRoot;
      mappings.map(function(mapping) {
        var source = mapping.source === null ? null : this._sources.at(mapping.source);
        return source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL), {
          source,
          generatedLine: mapping.generatedLine,
          generatedColumn: mapping.generatedColumn,
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: mapping.name === null ? null : this._names.at(mapping.name)
        };
      }, this).forEach(aCallback, context);
    };
    SourceMapConsumer.prototype.allGeneratedPositionsFor = function(aArgs) {
      var line = util.getArg(aArgs, "line"), needle = {
        source: util.getArg(aArgs, "source"),
        originalLine: line,
        originalColumn: util.getArg(aArgs, "column", 0)
      };
      if (needle.source = this._findSourceIndex(needle.source), needle.source < 0)
        return [];
      var mappings = [], index2 = this._findMapping(
        needle,
        this._originalMappings,
        "originalLine",
        "originalColumn",
        util.compareByOriginalPositions,
        binarySearch.LEAST_UPPER_BOUND
      );
      if (index2 >= 0) {
        var mapping = this._originalMappings[index2];
        if (aArgs.column === void 0)
          for (var originalLine = mapping.originalLine; mapping && mapping.originalLine === originalLine; )
            mappings.push({
              line: util.getArg(mapping, "generatedLine", null),
              column: util.getArg(mapping, "generatedColumn", null),
              lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
            }), mapping = this._originalMappings[++index2];
        else
          for (var originalColumn = mapping.originalColumn; mapping && mapping.originalLine === line && mapping.originalColumn == originalColumn; )
            mappings.push({
              line: util.getArg(mapping, "generatedLine", null),
              column: util.getArg(mapping, "generatedColumn", null),
              lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
            }), mapping = this._originalMappings[++index2];
      }
      return mappings;
    };
    exports2.SourceMapConsumer = SourceMapConsumer;
    function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      typeof aSourceMap == "string" && (sourceMap = util.parseSourceMapInput(aSourceMap));
      var version = util.getArg(sourceMap, "version"), sources = util.getArg(sourceMap, "sources"), names = util.getArg(sourceMap, "names", []), sourceRoot = util.getArg(sourceMap, "sourceRoot", null), sourcesContent = util.getArg(sourceMap, "sourcesContent", null), mappings = util.getArg(sourceMap, "mappings"), file = util.getArg(sourceMap, "file", null);
      if (version != this._version)
        throw new Error("Unsupported version: " + version);
      sourceRoot && (sourceRoot = util.normalize(sourceRoot)), sources = sources.map(String).map(util.normalize).map(function(source) {
        return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source) ? util.relative(sourceRoot, source) : source;
      }), this._names = ArraySet.fromArray(names.map(String), !0), this._sources = ArraySet.fromArray(sources, !0), this._absoluteSources = this._sources.toArray().map(function(s2) {
        return util.computeSourceURL(sourceRoot, s2, aSourceMapURL);
      }), this.sourceRoot = sourceRoot, this.sourcesContent = sourcesContent, this._mappings = mappings, this._sourceMapURL = aSourceMapURL, this.file = file;
    }
    BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
    BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;
    BasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {
      var relativeSource = aSource;
      if (this.sourceRoot != null && (relativeSource = util.relative(this.sourceRoot, relativeSource)), this._sources.has(relativeSource))
        return this._sources.indexOf(relativeSource);
      var i;
      for (i = 0; i < this._absoluteSources.length; ++i)
        if (this._absoluteSources[i] == aSource)
          return i;
      return -1;
    };
    BasicSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
      var smc = Object.create(BasicSourceMapConsumer.prototype), names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), !0), sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), !0);
      smc.sourceRoot = aSourceMap._sourceRoot, smc.sourcesContent = aSourceMap._generateSourcesContent(
        smc._sources.toArray(),
        smc.sourceRoot
      ), smc.file = aSourceMap._file, smc._sourceMapURL = aSourceMapURL, smc._absoluteSources = smc._sources.toArray().map(function(s2) {
        return util.computeSourceURL(smc.sourceRoot, s2, aSourceMapURL);
      });
      for (var generatedMappings = aSourceMap._mappings.toArray().slice(), destGeneratedMappings = smc.__generatedMappings = [], destOriginalMappings = smc.__originalMappings = [], i = 0, length = generatedMappings.length; i < length; i++) {
        var srcMapping = generatedMappings[i], destMapping = new Mapping();
        destMapping.generatedLine = srcMapping.generatedLine, destMapping.generatedColumn = srcMapping.generatedColumn, srcMapping.source && (destMapping.source = sources.indexOf(srcMapping.source), destMapping.originalLine = srcMapping.originalLine, destMapping.originalColumn = srcMapping.originalColumn, srcMapping.name && (destMapping.name = names.indexOf(srcMapping.name)), destOriginalMappings.push(destMapping)), destGeneratedMappings.push(destMapping);
      }
      return quickSort(smc.__originalMappings, util.compareByOriginalPositions), smc;
    };
    BasicSourceMapConsumer.prototype._version = 3;
    Object.defineProperty(BasicSourceMapConsumer.prototype, "sources", {
      get: function() {
        return this._absoluteSources.slice();
      }
    });
    function Mapping() {
      this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
    }
    BasicSourceMapConsumer.prototype._parseMappings = function(aStr, aSourceRoot) {
      for (var generatedLine = 1, previousGeneratedColumn = 0, previousOriginalLine = 0, previousOriginalColumn = 0, previousSource = 0, previousName = 0, length = aStr.length, index2 = 0, cachedSegments = {}, temp = {}, originalMappings = [], generatedMappings = [], mapping, str2, segment, end, value; index2 < length; )
        if (aStr.charAt(index2) === ";")
          generatedLine++, index2++, previousGeneratedColumn = 0;
        else if (aStr.charAt(index2) === ",")
          index2++;
        else {
          for (mapping = new Mapping(), mapping.generatedLine = generatedLine, end = index2; end < length && !this._charIsMappingSeparator(aStr, end); end++)
            ;
          if (str2 = aStr.slice(index2, end), segment = cachedSegments[str2], segment)
            index2 += str2.length;
          else {
            for (segment = []; index2 < end; )
              base64VLQ.decode(aStr, index2, temp), value = temp.value, index2 = temp.rest, segment.push(value);
            if (segment.length === 2)
              throw new Error("Found a source, but no line and column");
            if (segment.length === 3)
              throw new Error("Found a source and line, but no column");
            cachedSegments[str2] = segment;
          }
          mapping.generatedColumn = previousGeneratedColumn + segment[0], previousGeneratedColumn = mapping.generatedColumn, segment.length > 1 && (mapping.source = previousSource + segment[1], previousSource += segment[1], mapping.originalLine = previousOriginalLine + segment[2], previousOriginalLine = mapping.originalLine, mapping.originalLine += 1, mapping.originalColumn = previousOriginalColumn + segment[3], previousOriginalColumn = mapping.originalColumn, segment.length > 4 && (mapping.name = previousName + segment[4], previousName += segment[4])), generatedMappings.push(mapping), typeof mapping.originalLine == "number" && originalMappings.push(mapping);
        }
      quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated), this.__generatedMappings = generatedMappings, quickSort(originalMappings, util.compareByOriginalPositions), this.__originalMappings = originalMappings;
    };
    BasicSourceMapConsumer.prototype._findMapping = function(aNeedle, aMappings, aLineName, aColumnName, aComparator, aBias) {
      if (aNeedle[aLineName] <= 0)
        throw new TypeError("Line must be greater than or equal to 1, got " + aNeedle[aLineName]);
      if (aNeedle[aColumnName] < 0)
        throw new TypeError("Column must be greater than or equal to 0, got " + aNeedle[aColumnName]);
      return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
    };
    BasicSourceMapConsumer.prototype.computeColumnSpans = function() {
      for (var index2 = 0; index2 < this._generatedMappings.length; ++index2) {
        var mapping = this._generatedMappings[index2];
        if (index2 + 1 < this._generatedMappings.length) {
          var nextMapping = this._generatedMappings[index2 + 1];
          if (mapping.generatedLine === nextMapping.generatedLine) {
            mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
            continue;
          }
        }
        mapping.lastGeneratedColumn = 1 / 0;
      }
    };
    BasicSourceMapConsumer.prototype.originalPositionFor = function(aArgs) {
      var needle = {
        generatedLine: util.getArg(aArgs, "line"),
        generatedColumn: util.getArg(aArgs, "column")
      }, index2 = this._findMapping(
        needle,
        this._generatedMappings,
        "generatedLine",
        "generatedColumn",
        util.compareByGeneratedPositionsDeflated,
        util.getArg(aArgs, "bias", SourceMapConsumer.GREATEST_LOWER_BOUND)
      );
      if (index2 >= 0) {
        var mapping = this._generatedMappings[index2];
        if (mapping.generatedLine === needle.generatedLine) {
          var source = util.getArg(mapping, "source", null);
          source !== null && (source = this._sources.at(source), source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL));
          var name = util.getArg(mapping, "name", null);
          return name !== null && (name = this._names.at(name)), {
            source,
            line: util.getArg(mapping, "originalLine", null),
            column: util.getArg(mapping, "originalColumn", null),
            name
          };
        }
      }
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    };
    BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function() {
      return this.sourcesContent ? this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(sc) {
        return sc == null;
      }) : !1;
    };
    BasicSourceMapConsumer.prototype.sourceContentFor = function(aSource, nullOnMissing) {
      if (!this.sourcesContent)
        return null;
      var index2 = this._findSourceIndex(aSource);
      if (index2 >= 0)
        return this.sourcesContent[index2];
      var relativeSource = aSource;
      this.sourceRoot != null && (relativeSource = util.relative(this.sourceRoot, relativeSource));
      var url;
      if (this.sourceRoot != null && (url = util.urlParse(this.sourceRoot))) {
        var fileUriAbsPath = relativeSource.replace(/^file:\/\//, "");
        if (url.scheme == "file" && this._sources.has(fileUriAbsPath))
          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];
        if ((!url.path || url.path == "/") && this._sources.has("/" + relativeSource))
          return this.sourcesContent[this._sources.indexOf("/" + relativeSource)];
      }
      if (nullOnMissing)
        return null;
      throw new Error('"' + relativeSource + '" is not in the SourceMap.');
    };
    BasicSourceMapConsumer.prototype.generatedPositionFor = function(aArgs) {
      var source = util.getArg(aArgs, "source");
      if (source = this._findSourceIndex(source), source < 0)
        return {
          line: null,
          column: null,
          lastColumn: null
        };
      var needle = {
        source,
        originalLine: util.getArg(aArgs, "line"),
        originalColumn: util.getArg(aArgs, "column")
      }, index2 = this._findMapping(
        needle,
        this._originalMappings,
        "originalLine",
        "originalColumn",
        util.compareByOriginalPositions,
        util.getArg(aArgs, "bias", SourceMapConsumer.GREATEST_LOWER_BOUND)
      );
      if (index2 >= 0) {
        var mapping = this._originalMappings[index2];
        if (mapping.source === needle.source)
          return {
            line: util.getArg(mapping, "generatedLine", null),
            column: util.getArg(mapping, "generatedColumn", null),
            lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
          };
      }
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    };
    exports2.BasicSourceMapConsumer = BasicSourceMapConsumer;
    function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      typeof aSourceMap == "string" && (sourceMap = util.parseSourceMapInput(aSourceMap));
      var version = util.getArg(sourceMap, "version"), sections = util.getArg(sourceMap, "sections");
      if (version != this._version)
        throw new Error("Unsupported version: " + version);
      this._sources = new ArraySet(), this._names = new ArraySet();
      var lastOffset = {
        line: -1,
        column: 0
      };
      this._sections = sections.map(function(s2) {
        if (s2.url)
          throw new Error("Support for url field in sections not implemented.");
        var offset = util.getArg(s2, "offset"), offsetLine = util.getArg(offset, "line"), offsetColumn = util.getArg(offset, "column");
        if (offsetLine < lastOffset.line || offsetLine === lastOffset.line && offsetColumn < lastOffset.column)
          throw new Error("Section offsets must be ordered and non-overlapping.");
        return lastOffset = offset, {
          generatedOffset: {
            generatedLine: offsetLine + 1,
            generatedColumn: offsetColumn + 1
          },
          consumer: new SourceMapConsumer(util.getArg(s2, "map"), aSourceMapURL)
        };
      });
    }
    IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
    IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;
    IndexedSourceMapConsumer.prototype._version = 3;
    Object.defineProperty(IndexedSourceMapConsumer.prototype, "sources", {
      get: function() {
        for (var sources = [], i = 0; i < this._sections.length; i++)
          for (var j = 0; j < this._sections[i].consumer.sources.length; j++)
            sources.push(this._sections[i].consumer.sources[j]);
        return sources;
      }
    });
    IndexedSourceMapConsumer.prototype.originalPositionFor = function(aArgs) {
      var needle = {
        generatedLine: util.getArg(aArgs, "line"),
        generatedColumn: util.getArg(aArgs, "column")
      }, sectionIndex = binarySearch.search(
        needle,
        this._sections,
        function(needle2, section2) {
          var cmp = needle2.generatedLine - section2.generatedOffset.generatedLine;
          return cmp || needle2.generatedColumn - section2.generatedOffset.generatedColumn;
        }
      ), section = this._sections[sectionIndex];
      return section ? section.consumer.originalPositionFor({
        line: needle.generatedLine - (section.generatedOffset.generatedLine - 1),
        column: needle.generatedColumn - (section.generatedOffset.generatedLine === needle.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),
        bias: aArgs.bias
      }) : {
        source: null,
        line: null,
        column: null,
        name: null
      };
    };
    IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function() {
      return this._sections.every(function(s2) {
        return s2.consumer.hasContentsOfAllSources();
      });
    };
    IndexedSourceMapConsumer.prototype.sourceContentFor = function(aSource, nullOnMissing) {
      for (var i = 0; i < this._sections.length; i++) {
        var section = this._sections[i], content3 = section.consumer.sourceContentFor(aSource, !0);
        if (content3)
          return content3;
      }
      if (nullOnMissing)
        return null;
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    };
    IndexedSourceMapConsumer.prototype.generatedPositionFor = function(aArgs) {
      for (var i = 0; i < this._sections.length; i++) {
        var section = this._sections[i];
        if (section.consumer._findSourceIndex(util.getArg(aArgs, "source")) !== -1) {
          var generatedPosition = section.consumer.generatedPositionFor(aArgs);
          if (generatedPosition) {
            var ret = {
              line: generatedPosition.line + (section.generatedOffset.generatedLine - 1),
              column: generatedPosition.column + (section.generatedOffset.generatedLine === generatedPosition.line ? section.generatedOffset.generatedColumn - 1 : 0)
            };
            return ret;
          }
        }
      }
      return {
        line: null,
        column: null
      };
    };
    IndexedSourceMapConsumer.prototype._parseMappings = function(aStr, aSourceRoot) {
      this.__generatedMappings = [], this.__originalMappings = [];
      for (var i = 0; i < this._sections.length; i++)
        for (var section = this._sections[i], sectionMappings = section.consumer._generatedMappings, j = 0; j < sectionMappings.length; j++) {
          var mapping = sectionMappings[j], source = section.consumer._sources.at(mapping.source);
          source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL), this._sources.add(source), source = this._sources.indexOf(source);
          var name = null;
          mapping.name && (name = section.consumer._names.at(mapping.name), this._names.add(name), name = this._names.indexOf(name));
          var adjustedMapping = {
            source,
            generatedLine: mapping.generatedLine + (section.generatedOffset.generatedLine - 1),
            generatedColumn: mapping.generatedColumn + (section.generatedOffset.generatedLine === mapping.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),
            originalLine: mapping.originalLine,
            originalColumn: mapping.originalColumn,
            name
          };
          this.__generatedMappings.push(adjustedMapping), typeof adjustedMapping.originalLine == "number" && this.__originalMappings.push(adjustedMapping);
        }
      quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated), quickSort(this.__originalMappings, util.compareByOriginalPositions);
    };
    exports2.IndexedSourceMapConsumer = IndexedSourceMapConsumer;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/source-node.js
var require_source_node = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/source-node.js"(exports2) {
    var SourceMapGenerator = require_source_map_generator().SourceMapGenerator, util = require_util(), REGEX_NEWLINE = /(\r?\n)/, NEWLINE_CODE = 10, isSourceNode = "$$$isSourceNode$$$";
    function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
      this.children = [], this.sourceContents = {}, this.line = aLine ?? null, this.column = aColumn ?? null, this.source = aSource ?? null, this.name = aName ?? null, this[isSourceNode] = !0, aChunks != null && this.add(aChunks);
    }
    SourceNode.fromStringWithSourceMap = function(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
      var node2 = new SourceNode(), remainingLines = aGeneratedCode.split(REGEX_NEWLINE), remainingLinesIndex = 0, shiftNextLine = function() {
        var lineContents = getNextLine(), newLine = getNextLine() || "";
        return lineContents + newLine;
        function getNextLine() {
          return remainingLinesIndex < remainingLines.length ? remainingLines[remainingLinesIndex++] : void 0;
        }
      }, lastGeneratedLine = 1, lastGeneratedColumn = 0, lastMapping = null;
      return aSourceMapConsumer.eachMapping(function(mapping) {
        if (lastMapping !== null)
          if (lastGeneratedLine < mapping.generatedLine)
            addMappingWithCode(lastMapping, shiftNextLine()), lastGeneratedLine++, lastGeneratedColumn = 0;
          else {
            var nextLine = remainingLines[remainingLinesIndex] || "", code3 = nextLine.substr(0, mapping.generatedColumn - lastGeneratedColumn);
            remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn - lastGeneratedColumn), lastGeneratedColumn = mapping.generatedColumn, addMappingWithCode(lastMapping, code3), lastMapping = mapping;
            return;
          }
        for (; lastGeneratedLine < mapping.generatedLine; )
          node2.add(shiftNextLine()), lastGeneratedLine++;
        if (lastGeneratedColumn < mapping.generatedColumn) {
          var nextLine = remainingLines[remainingLinesIndex] || "";
          node2.add(nextLine.substr(0, mapping.generatedColumn)), remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn), lastGeneratedColumn = mapping.generatedColumn;
        }
        lastMapping = mapping;
      }, this), remainingLinesIndex < remainingLines.length && (lastMapping && addMappingWithCode(lastMapping, shiftNextLine()), node2.add(remainingLines.splice(remainingLinesIndex).join(""))), aSourceMapConsumer.sources.forEach(function(sourceFile) {
        var content3 = aSourceMapConsumer.sourceContentFor(sourceFile);
        content3 != null && (aRelativePath != null && (sourceFile = util.join(aRelativePath, sourceFile)), node2.setSourceContent(sourceFile, content3));
      }), node2;
      function addMappingWithCode(mapping, code3) {
        if (mapping === null || mapping.source === void 0)
          node2.add(code3);
        else {
          var source = aRelativePath ? util.join(aRelativePath, mapping.source) : mapping.source;
          node2.add(new SourceNode(
            mapping.originalLine,
            mapping.originalColumn,
            source,
            code3,
            mapping.name
          ));
        }
      }
    };
    SourceNode.prototype.add = function(aChunk) {
      if (Array.isArray(aChunk))
        aChunk.forEach(function(chunk) {
          this.add(chunk);
        }, this);
      else if (aChunk[isSourceNode] || typeof aChunk == "string")
        aChunk && this.children.push(aChunk);
      else
        throw new TypeError(
          "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
        );
      return this;
    };
    SourceNode.prototype.prepend = function(aChunk) {
      if (Array.isArray(aChunk))
        for (var i = aChunk.length - 1; i >= 0; i--)
          this.prepend(aChunk[i]);
      else if (aChunk[isSourceNode] || typeof aChunk == "string")
        this.children.unshift(aChunk);
      else
        throw new TypeError(
          "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
        );
      return this;
    };
    SourceNode.prototype.walk = function(aFn) {
      for (var chunk, i = 0, len = this.children.length; i < len; i++)
        chunk = this.children[i], chunk[isSourceNode] ? chunk.walk(aFn) : chunk !== "" && aFn(chunk, {
          source: this.source,
          line: this.line,
          column: this.column,
          name: this.name
        });
    };
    SourceNode.prototype.join = function(aSep) {
      var newChildren, i, len = this.children.length;
      if (len > 0) {
        for (newChildren = [], i = 0; i < len - 1; i++)
          newChildren.push(this.children[i]), newChildren.push(aSep);
        newChildren.push(this.children[i]), this.children = newChildren;
      }
      return this;
    };
    SourceNode.prototype.replaceRight = function(aPattern, aReplacement) {
      var lastChild = this.children[this.children.length - 1];
      return lastChild[isSourceNode] ? lastChild.replaceRight(aPattern, aReplacement) : typeof lastChild == "string" ? this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement) : this.children.push("".replace(aPattern, aReplacement)), this;
    };
    SourceNode.prototype.setSourceContent = function(aSourceFile, aSourceContent) {
      this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
    };
    SourceNode.prototype.walkSourceContents = function(aFn) {
      for (var i = 0, len = this.children.length; i < len; i++)
        this.children[i][isSourceNode] && this.children[i].walkSourceContents(aFn);
      for (var sources = Object.keys(this.sourceContents), i = 0, len = sources.length; i < len; i++)
        aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    };
    SourceNode.prototype.toString = function() {
      var str2 = "";
      return this.walk(function(chunk) {
        str2 += chunk;
      }), str2;
    };
    SourceNode.prototype.toStringWithSourceMap = function(aArgs) {
      var generated2 = {
        code: "",
        line: 1,
        column: 0
      }, map2 = new SourceMapGenerator(aArgs), sourceMappingActive = !1, lastOriginalSource = null, lastOriginalLine = null, lastOriginalColumn = null, lastOriginalName = null;
      return this.walk(function(chunk, original) {
        generated2.code += chunk, original.source !== null && original.line !== null && original.column !== null ? ((lastOriginalSource !== original.source || lastOriginalLine !== original.line || lastOriginalColumn !== original.column || lastOriginalName !== original.name) && map2.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated2.line,
            column: generated2.column
          },
          name: original.name
        }), lastOriginalSource = original.source, lastOriginalLine = original.line, lastOriginalColumn = original.column, lastOriginalName = original.name, sourceMappingActive = !0) : sourceMappingActive && (map2.addMapping({
          generated: {
            line: generated2.line,
            column: generated2.column
          }
        }), lastOriginalSource = null, sourceMappingActive = !1);
        for (var idx = 0, length = chunk.length; idx < length; idx++)
          chunk.charCodeAt(idx) === NEWLINE_CODE ? (generated2.line++, generated2.column = 0, idx + 1 === length ? (lastOriginalSource = null, sourceMappingActive = !1) : sourceMappingActive && map2.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated2.line,
              column: generated2.column
            },
            name: original.name
          })) : generated2.column++;
      }), this.walkSourceContents(function(sourceFile, sourceContent) {
        map2.setSourceContent(sourceFile, sourceContent);
      }), { code: generated2.code, map: map2 };
    };
    exports2.SourceNode = SourceNode;
  }
});

// node_modules/source-map-support/node_modules/source-map/source-map.js
var require_source_map = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/source-map.js"(exports2) {
    exports2.SourceMapGenerator = require_source_map_generator().SourceMapGenerator;
    exports2.SourceMapConsumer = require_source_map_consumer().SourceMapConsumer;
    exports2.SourceNode = require_source_node().SourceNode;
  }
});

// node_modules/buffer-from/index.js
var require_buffer_from = __commonJS({
  "node_modules/buffer-from/index.js"(exports2, module2) {
    var toString2 = Object.prototype.toString, isModern = typeof Buffer < "u" && typeof Buffer.alloc == "function" && typeof Buffer.allocUnsafe == "function" && typeof Buffer.from == "function";
    function isArrayBuffer(input) {
      return toString2.call(input).slice(8, -1) === "ArrayBuffer";
    }
    function fromArrayBuffer(obj, byteOffset, length) {
      byteOffset >>>= 0;
      var maxLength = obj.byteLength - byteOffset;
      if (maxLength < 0)
        throw new RangeError("'offset' is out of bounds");
      if (length === void 0)
        length = maxLength;
      else if (length >>>= 0, length > maxLength)
        throw new RangeError("'length' is out of bounds");
      return isModern ? Buffer.from(obj.slice(byteOffset, byteOffset + length)) : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)));
    }
    function fromString(string3, encoding) {
      if ((typeof encoding != "string" || encoding === "") && (encoding = "utf8"), !Buffer.isEncoding(encoding))
        throw new TypeError('"encoding" must be a valid string encoding');
      return isModern ? Buffer.from(string3, encoding) : new Buffer(string3, encoding);
    }
    function bufferFrom(value, encodingOrOffset, length) {
      if (typeof value == "number")
        throw new TypeError('"value" argument must not be a number');
      return isArrayBuffer(value) ? fromArrayBuffer(value, encodingOrOffset, length) : typeof value == "string" ? fromString(value, encodingOrOffset) : isModern ? Buffer.from(value) : new Buffer(value);
    }
    module2.exports = bufferFrom;
  }
});

// node_modules/source-map-support/source-map-support.js
var require_source_map_support = __commonJS({
  "node_modules/source-map-support/source-map-support.js"(exports2, module2) {
    var SourceMapConsumer = require_source_map().SourceMapConsumer, path6 = require("path"), fs4;
    try {
      fs4 = require("fs"), (!fs4.existsSync || !fs4.readFileSync) && (fs4 = null);
    } catch {
    }
    var bufferFrom = require_buffer_from();
    function dynamicRequire(mod, request) {
      return mod.require(request);
    }
    var errorFormatterInstalled = !1, uncaughtShimInstalled = !1, emptyCacheBetweenOperations = !1, environment = "auto", fileContentsCache = {}, sourceMapCache = {}, reSourceMap = /^data:application\/json[^,]+base64,/, retrieveFileHandlers = [], retrieveMapHandlers = [];
    function isInBrowser() {
      return environment === "browser" ? !0 : environment === "node" ? !1 : typeof window < "u" && typeof XMLHttpRequest == "function" && !(window.require && window.module && window.process && window.process.type === "renderer");
    }
    function hasGlobalProcessEventEmitter() {
      return typeof process == "object" && process !== null && typeof process.on == "function";
    }
    function globalProcessVersion() {
      return typeof process == "object" && process !== null ? process.version : "";
    }
    function globalProcessStderr() {
      if (typeof process == "object" && process !== null)
        return process.stderr;
    }
    function globalProcessExit(code3) {
      if (typeof process == "object" && process !== null && typeof process.exit == "function")
        return process.exit(code3);
    }
    function handlerExec(list3) {
      return function(arg) {
        for (var i = 0; i < list3.length; i++) {
          var ret = list3[i](arg);
          if (ret)
            return ret;
        }
        return null;
      };
    }
    var retrieveFile = handlerExec(retrieveFileHandlers);
    retrieveFileHandlers.push(function(path7) {
      if (path7 = path7.trim(), /^file:/.test(path7) && (path7 = path7.replace(/file:\/\/\/(\w:)?/, function(protocol, drive) {
        return drive ? "" : "/";
      })), path7 in fileContentsCache)
        return fileContentsCache[path7];
      var contents = "";
      try {
        if (fs4)
          fs4.existsSync(path7) && (contents = fs4.readFileSync(path7, "utf8"));
        else {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", path7, !1), xhr.send(null), xhr.readyState === 4 && xhr.status === 200 && (contents = xhr.responseText);
        }
      } catch {
      }
      return fileContentsCache[path7] = contents;
    });
    function supportRelativeURL(file, url) {
      if (!file)
        return url;
      var dir = path6.dirname(file), match = /^\w+:\/\/[^\/]*/.exec(dir), protocol = match ? match[0] : "", startPath = dir.slice(protocol.length);
      return protocol && /^\/\w\:/.test(startPath) ? (protocol += "/", protocol + path6.resolve(dir.slice(protocol.length), url).replace(/\\/g, "/")) : protocol + path6.resolve(dir.slice(protocol.length), url);
    }
    function retrieveSourceMapURL(source) {
      var fileData;
      if (isInBrowser())
        try {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", source, !1), xhr.send(null), fileData = xhr.readyState === 4 ? xhr.responseText : null;
          var sourceMapHeader = xhr.getResponseHeader("SourceMap") || xhr.getResponseHeader("X-SourceMap");
          if (sourceMapHeader)
            return sourceMapHeader;
        } catch {
        }
      fileData = retrieveFile(source);
      for (var re = /(?:\/\/[@#][\s]*sourceMappingURL=([^\s'"]+)[\s]*$)|(?:\/\*[@#][\s]*sourceMappingURL=([^\s*'"]+)[\s]*(?:\*\/)[\s]*$)/mg, lastMatch, match; match = re.exec(fileData); )
        lastMatch = match;
      return lastMatch ? lastMatch[1] : null;
    }
    var retrieveSourceMap = handlerExec(retrieveMapHandlers);
    retrieveMapHandlers.push(function(source) {
      var sourceMappingURL = retrieveSourceMapURL(source);
      if (!sourceMappingURL)
        return null;
      var sourceMapData;
      if (reSourceMap.test(sourceMappingURL)) {
        var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(",") + 1);
        sourceMapData = bufferFrom(rawData, "base64").toString(), sourceMappingURL = source;
      } else
        sourceMappingURL = supportRelativeURL(source, sourceMappingURL), sourceMapData = retrieveFile(sourceMappingURL);
      return sourceMapData ? {
        url: sourceMappingURL,
        map: sourceMapData
      } : null;
    });
    function mapSourcePosition(position4) {
      var sourceMap = sourceMapCache[position4.source];
      if (!sourceMap) {
        var urlAndMap = retrieveSourceMap(position4.source);
        urlAndMap ? (sourceMap = sourceMapCache[position4.source] = {
          url: urlAndMap.url,
          map: new SourceMapConsumer(urlAndMap.map)
        }, sourceMap.map.sourcesContent && sourceMap.map.sources.forEach(function(source, i) {
          var contents = sourceMap.map.sourcesContent[i];
          if (contents) {
            var url = supportRelativeURL(sourceMap.url, source);
            fileContentsCache[url] = contents;
          }
        })) : sourceMap = sourceMapCache[position4.source] = {
          url: null,
          map: null
        };
      }
      if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor == "function") {
        var originalPosition = sourceMap.map.originalPositionFor(position4);
        if (originalPosition.source !== null)
          return originalPosition.source = supportRelativeURL(
            sourceMap.url,
            originalPosition.source
          ), originalPosition;
      }
      return position4;
    }
    function mapEvalOrigin(origin) {
      var match = /^eval at ([^(]+) \((.+):(\d+):(\d+)\)$/.exec(origin);
      if (match) {
        var position4 = mapSourcePosition({
          source: match[2],
          line: +match[3],
          column: match[4] - 1
        });
        return "eval at " + match[1] + " (" + position4.source + ":" + position4.line + ":" + (position4.column + 1) + ")";
      }
      return match = /^eval at ([^(]+) \((.+)\)$/.exec(origin), match ? "eval at " + match[1] + " (" + mapEvalOrigin(match[2]) + ")" : origin;
    }
    function CallSiteToString() {
      var fileName, fileLocation = "";
      if (this.isNative())
        fileLocation = "native";
      else {
        fileName = this.getScriptNameOrSourceURL(), !fileName && this.isEval() && (fileLocation = this.getEvalOrigin(), fileLocation += ", "), fileName ? fileLocation += fileName : fileLocation += "<anonymous>";
        var lineNumber = this.getLineNumber();
        if (lineNumber != null) {
          fileLocation += ":" + lineNumber;
          var columnNumber = this.getColumnNumber();
          columnNumber && (fileLocation += ":" + columnNumber);
        }
      }
      var line = "", functionName = this.getFunctionName(), addSuffix = !0, isConstructor = this.isConstructor(), isMethodCall = !(this.isToplevel() || isConstructor);
      if (isMethodCall) {
        var typeName = this.getTypeName();
        typeName === "[object Object]" && (typeName = "null");
        var methodName = this.getMethodName();
        functionName ? (typeName && functionName.indexOf(typeName) != 0 && (line += typeName + "."), line += functionName, methodName && functionName.indexOf("." + methodName) != functionName.length - methodName.length - 1 && (line += " [as " + methodName + "]")) : line += typeName + "." + (methodName || "<anonymous>");
      } else
        isConstructor ? line += "new " + (functionName || "<anonymous>") : functionName ? line += functionName : (line += fileLocation, addSuffix = !1);
      return addSuffix && (line += " (" + fileLocation + ")"), line;
    }
    function cloneCallSite(frame) {
      var object = {};
      return Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {
        object[name] = /^(?:is|get)/.test(name) ? function() {
          return frame[name].call(frame);
        } : frame[name];
      }), object.toString = CallSiteToString, object;
    }
    function wrapCallSite(frame, state) {
      if (state === void 0 && (state = { nextPosition: null, curPosition: null }), frame.isNative())
        return state.curPosition = null, frame;
      var source = frame.getFileName() || frame.getScriptNameOrSourceURL();
      if (source) {
        var line = frame.getLineNumber(), column = frame.getColumnNumber() - 1, noHeader = /^v(10\.1[6-9]|10\.[2-9][0-9]|10\.[0-9]{3,}|1[2-9]\d*|[2-9]\d|\d{3,}|11\.11)/, headerLength = noHeader.test(globalProcessVersion()) ? 0 : 62;
        line === 1 && column > headerLength && !isInBrowser() && !frame.isEval() && (column -= headerLength);
        var position4 = mapSourcePosition({
          source,
          line,
          column
        });
        state.curPosition = position4, frame = cloneCallSite(frame);
        var originalFunctionName = frame.getFunctionName;
        return frame.getFunctionName = function() {
          return state.nextPosition == null ? originalFunctionName() : state.nextPosition.name || originalFunctionName();
        }, frame.getFileName = function() {
          return position4.source;
        }, frame.getLineNumber = function() {
          return position4.line;
        }, frame.getColumnNumber = function() {
          return position4.column + 1;
        }, frame.getScriptNameOrSourceURL = function() {
          return position4.source;
        }, frame;
      }
      var origin = frame.isEval() && frame.getEvalOrigin();
      return origin && (origin = mapEvalOrigin(origin), frame = cloneCallSite(frame), frame.getEvalOrigin = function() {
        return origin;
      }), frame;
    }
    function prepareStackTrace(error, stack) {
      emptyCacheBetweenOperations && (fileContentsCache = {}, sourceMapCache = {});
      for (var name = error.name || "Error", message = error.message || "", errorString = name + ": " + message, state = { nextPosition: null, curPosition: null }, processedStack = [], i = stack.length - 1; i >= 0; i--)
        processedStack.push(`
    at ` + wrapCallSite(stack[i], state)), state.nextPosition = state.curPosition;
      return state.curPosition = state.nextPosition = null, errorString + processedStack.reverse().join("");
    }
    function getErrorSource(error) {
      var match = /\n    at [^(]+ \((.*):(\d+):(\d+)\)/.exec(error.stack);
      if (match) {
        var source = match[1], line = +match[2], column = +match[3], contents = fileContentsCache[source];
        if (!contents && fs4 && fs4.existsSync(source))
          try {
            contents = fs4.readFileSync(source, "utf8");
          } catch {
            contents = "";
          }
        if (contents) {
          var code3 = contents.split(/(?:\r\n|\r|\n)/)[line - 1];
          if (code3)
            return source + ":" + line + `
` + code3 + `
` + new Array(column).join(" ") + "^";
        }
      }
      return null;
    }
    function printErrorAndExit(error) {
      var source = getErrorSource(error), stderr = globalProcessStderr();
      stderr && stderr._handle && stderr._handle.setBlocking && stderr._handle.setBlocking(!0), source && (console.error(), console.error(source)), console.error(error.stack), globalProcessExit(1);
    }
    function shimEmitUncaughtException() {
      var origEmit = process.emit;
      process.emit = function(type) {
        if (type === "uncaughtException") {
          var hasStack = arguments[1] && arguments[1].stack, hasListeners = this.listeners(type).length > 0;
          if (hasStack && !hasListeners)
            return printErrorAndExit(arguments[1]);
        }
        return origEmit.apply(this, arguments);
      };
    }
    var originalRetrieveFileHandlers = retrieveFileHandlers.slice(0), originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);
    exports2.wrapCallSite = wrapCallSite;
    exports2.getErrorSource = getErrorSource;
    exports2.mapSourcePosition = mapSourcePosition;
    exports2.retrieveSourceMap = retrieveSourceMap;
    exports2.install = function(options2) {
      if (options2 = options2 || {}, options2.environment && (environment = options2.environment, ["node", "browser", "auto"].indexOf(environment) === -1))
        throw new Error("environment " + environment + " was unknown. Available options are {auto, browser, node}");
      if (options2.retrieveFile && (options2.overrideRetrieveFile && (retrieveFileHandlers.length = 0), retrieveFileHandlers.unshift(options2.retrieveFile)), options2.retrieveSourceMap && (options2.overrideRetrieveSourceMap && (retrieveMapHandlers.length = 0), retrieveMapHandlers.unshift(options2.retrieveSourceMap)), options2.hookRequire && !isInBrowser()) {
        var Module = dynamicRequire(module2, "module"), $compile = Module.prototype._compile;
        $compile.__sourceMapSupport || (Module.prototype._compile = function(content3, filename) {
          return fileContentsCache[filename] = content3, sourceMapCache[filename] = void 0, $compile.call(this, content3, filename);
        }, Module.prototype._compile.__sourceMapSupport = !0);
      }
      if (emptyCacheBetweenOperations || (emptyCacheBetweenOperations = "emptyCacheBetweenOperations" in options2 ? options2.emptyCacheBetweenOperations : !1), errorFormatterInstalled || (errorFormatterInstalled = !0, Error.prepareStackTrace = prepareStackTrace), !uncaughtShimInstalled) {
        var installHandler = "handleUncaughtExceptions" in options2 ? options2.handleUncaughtExceptions : !0;
        try {
          var worker_threads = dynamicRequire(module2, "worker_threads");
          worker_threads.isMainThread === !1 && (installHandler = !1);
        } catch {
        }
        installHandler && hasGlobalProcessEventEmitter() && (uncaughtShimInstalled = !0, shimEmitUncaughtException());
      }
    };
    exports2.resetRetrieveHandlers = function() {
      retrieveFileHandlers.length = 0, retrieveMapHandlers.length = 0, retrieveFileHandlers = originalRetrieveFileHandlers.slice(0), retrieveMapHandlers = originalRetrieveMapHandlers.slice(0), retrieveSourceMap = handlerExec(retrieveMapHandlers), retrieveFile = handlerExec(retrieveFileHandlers);
    };
  }
});

// node_modules/event-target-shim/dist/event-target-shim.js
var require_event_target_shim = __commonJS({
  "node_modules/event-target-shim/dist/event-target-shim.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var privateData = /* @__PURE__ */ new WeakMap(), wrappers = /* @__PURE__ */ new WeakMap();
    function pd(event) {
      let retv = privateData.get(event);
      return console.assert(
        retv != null,
        "'this' is expected an Event object, but got",
        event
      ), retv;
    }
    function setCancelFlag(data) {
      if (data.passiveListener != null) {
        typeof console < "u" && typeof console.error == "function" && console.error(
          "Unable to preventDefault inside passive event listener invocation.",
          data.passiveListener
        );
        return;
      }
      !data.event.cancelable || (data.canceled = !0, typeof data.event.preventDefault == "function" && data.event.preventDefault());
    }
    function Event(eventTarget, event) {
      privateData.set(this, {
        eventTarget,
        event,
        eventPhase: 2,
        currentTarget: eventTarget,
        canceled: !1,
        stopped: !1,
        immediateStopped: !1,
        passiveListener: null,
        timeStamp: event.timeStamp || Date.now()
      }), Object.defineProperty(this, "isTrusted", { value: !1, enumerable: !0 });
      let keys2 = Object.keys(event);
      for (let i = 0; i < keys2.length; ++i) {
        let key2 = keys2[i];
        key2 in this || Object.defineProperty(this, key2, defineRedirectDescriptor(key2));
      }
    }
    Event.prototype = {
      get type() {
        return pd(this).event.type;
      },
      get target() {
        return pd(this).eventTarget;
      },
      get currentTarget() {
        return pd(this).currentTarget;
      },
      composedPath() {
        let currentTarget = pd(this).currentTarget;
        return currentTarget == null ? [] : [currentTarget];
      },
      get NONE() {
        return 0;
      },
      get CAPTURING_PHASE() {
        return 1;
      },
      get AT_TARGET() {
        return 2;
      },
      get BUBBLING_PHASE() {
        return 3;
      },
      get eventPhase() {
        return pd(this).eventPhase;
      },
      stopPropagation() {
        let data = pd(this);
        data.stopped = !0, typeof data.event.stopPropagation == "function" && data.event.stopPropagation();
      },
      stopImmediatePropagation() {
        let data = pd(this);
        data.stopped = !0, data.immediateStopped = !0, typeof data.event.stopImmediatePropagation == "function" && data.event.stopImmediatePropagation();
      },
      get bubbles() {
        return Boolean(pd(this).event.bubbles);
      },
      get cancelable() {
        return Boolean(pd(this).event.cancelable);
      },
      preventDefault() {
        setCancelFlag(pd(this));
      },
      get defaultPrevented() {
        return pd(this).canceled;
      },
      get composed() {
        return Boolean(pd(this).event.composed);
      },
      get timeStamp() {
        return pd(this).timeStamp;
      },
      get srcElement() {
        return pd(this).eventTarget;
      },
      get cancelBubble() {
        return pd(this).stopped;
      },
      set cancelBubble(value) {
        if (!value)
          return;
        let data = pd(this);
        data.stopped = !0, typeof data.event.cancelBubble == "boolean" && (data.event.cancelBubble = !0);
      },
      get returnValue() {
        return !pd(this).canceled;
      },
      set returnValue(value) {
        value || setCancelFlag(pd(this));
      },
      initEvent() {
      }
    };
    Object.defineProperty(Event.prototype, "constructor", {
      value: Event,
      configurable: !0,
      writable: !0
    });
    typeof window < "u" && typeof window.Event < "u" && (Object.setPrototypeOf(Event.prototype, window.Event.prototype), wrappers.set(window.Event.prototype, Event));
    function defineRedirectDescriptor(key2) {
      return {
        get() {
          return pd(this).event[key2];
        },
        set(value) {
          pd(this).event[key2] = value;
        },
        configurable: !0,
        enumerable: !0
      };
    }
    function defineCallDescriptor(key2) {
      return {
        value() {
          let event = pd(this).event;
          return event[key2].apply(event, arguments);
        },
        configurable: !0,
        enumerable: !0
      };
    }
    function defineWrapper(BaseEvent, proto2) {
      let keys2 = Object.keys(proto2);
      if (keys2.length === 0)
        return BaseEvent;
      function CustomEvent(eventTarget, event) {
        BaseEvent.call(this, eventTarget, event);
      }
      CustomEvent.prototype = Object.create(BaseEvent.prototype, {
        constructor: { value: CustomEvent, configurable: !0, writable: !0 }
      });
      for (let i = 0; i < keys2.length; ++i) {
        let key2 = keys2[i];
        if (!(key2 in BaseEvent.prototype)) {
          let isFunc = typeof Object.getOwnPropertyDescriptor(proto2, key2).value == "function";
          Object.defineProperty(
            CustomEvent.prototype,
            key2,
            isFunc ? defineCallDescriptor(key2) : defineRedirectDescriptor(key2)
          );
        }
      }
      return CustomEvent;
    }
    function getWrapper(proto2) {
      if (proto2 == null || proto2 === Object.prototype)
        return Event;
      let wrapper = wrappers.get(proto2);
      return wrapper == null && (wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto2)), proto2), wrappers.set(proto2, wrapper)), wrapper;
    }
    function wrapEvent(eventTarget, event) {
      let Wrapper = getWrapper(Object.getPrototypeOf(event));
      return new Wrapper(eventTarget, event);
    }
    function isStopped(event) {
      return pd(event).immediateStopped;
    }
    function setEventPhase(event, eventPhase) {
      pd(event).eventPhase = eventPhase;
    }
    function setCurrentTarget(event, currentTarget) {
      pd(event).currentTarget = currentTarget;
    }
    function setPassiveListener(event, passiveListener) {
      pd(event).passiveListener = passiveListener;
    }
    var listenersMap = /* @__PURE__ */ new WeakMap(), CAPTURE = 1, BUBBLE = 2, ATTRIBUTE = 3;
    function isObject(x) {
      return x !== null && typeof x == "object";
    }
    function getListeners(eventTarget) {
      let listeners = listenersMap.get(eventTarget);
      if (listeners == null)
        throw new TypeError(
          "'this' is expected an EventTarget object, but got another value."
        );
      return listeners;
    }
    function defineEventAttributeDescriptor(eventName) {
      return {
        get() {
          let node2 = getListeners(this).get(eventName);
          for (; node2 != null; ) {
            if (node2.listenerType === ATTRIBUTE)
              return node2.listener;
            node2 = node2.next;
          }
          return null;
        },
        set(listener) {
          typeof listener != "function" && !isObject(listener) && (listener = null);
          let listeners = getListeners(this), prev = null, node2 = listeners.get(eventName);
          for (; node2 != null; )
            node2.listenerType === ATTRIBUTE ? prev !== null ? prev.next = node2.next : node2.next !== null ? listeners.set(eventName, node2.next) : listeners.delete(eventName) : prev = node2, node2 = node2.next;
          if (listener !== null) {
            let newNode = {
              listener,
              listenerType: ATTRIBUTE,
              passive: !1,
              once: !1,
              next: null
            };
            prev === null ? listeners.set(eventName, newNode) : prev.next = newNode;
          }
        },
        configurable: !0,
        enumerable: !0
      };
    }
    function defineEventAttribute(eventTargetPrototype, eventName) {
      Object.defineProperty(
        eventTargetPrototype,
        `on${eventName}`,
        defineEventAttributeDescriptor(eventName)
      );
    }
    function defineCustomEventTarget(eventNames) {
      function CustomEventTarget() {
        EventTarget.call(this);
      }
      CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
        constructor: {
          value: CustomEventTarget,
          configurable: !0,
          writable: !0
        }
      });
      for (let i = 0; i < eventNames.length; ++i)
        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
      return CustomEventTarget;
    }
    function EventTarget() {
      if (this instanceof EventTarget) {
        listenersMap.set(this, /* @__PURE__ */ new Map());
        return;
      }
      if (arguments.length === 1 && Array.isArray(arguments[0]))
        return defineCustomEventTarget(arguments[0]);
      if (arguments.length > 0) {
        let types = new Array(arguments.length);
        for (let i = 0; i < arguments.length; ++i)
          types[i] = arguments[i];
        return defineCustomEventTarget(types);
      }
      throw new TypeError("Cannot call a class as a function");
    }
    EventTarget.prototype = {
      addEventListener(eventName, listener, options2) {
        if (listener == null)
          return;
        if (typeof listener != "function" && !isObject(listener))
          throw new TypeError("'listener' should be a function or an object.");
        let listeners = getListeners(this), optionsIsObj = isObject(options2), listenerType = Boolean(optionsIsObj ? options2.capture : options2) ? CAPTURE : BUBBLE, newNode = {
          listener,
          listenerType,
          passive: optionsIsObj && Boolean(options2.passive),
          once: optionsIsObj && Boolean(options2.once),
          next: null
        }, node2 = listeners.get(eventName);
        if (node2 === void 0) {
          listeners.set(eventName, newNode);
          return;
        }
        let prev = null;
        for (; node2 != null; ) {
          if (node2.listener === listener && node2.listenerType === listenerType)
            return;
          prev = node2, node2 = node2.next;
        }
        prev.next = newNode;
      },
      removeEventListener(eventName, listener, options2) {
        if (listener == null)
          return;
        let listeners = getListeners(this), listenerType = (isObject(options2) ? Boolean(options2.capture) : Boolean(options2)) ? CAPTURE : BUBBLE, prev = null, node2 = listeners.get(eventName);
        for (; node2 != null; ) {
          if (node2.listener === listener && node2.listenerType === listenerType) {
            prev !== null ? prev.next = node2.next : node2.next !== null ? listeners.set(eventName, node2.next) : listeners.delete(eventName);
            return;
          }
          prev = node2, node2 = node2.next;
        }
      },
      dispatchEvent(event) {
        if (event == null || typeof event.type != "string")
          throw new TypeError('"event.type" should be a string.');
        let listeners = getListeners(this), eventName = event.type, node2 = listeners.get(eventName);
        if (node2 == null)
          return !0;
        let wrappedEvent = wrapEvent(this, event), prev = null;
        for (; node2 != null; ) {
          if (node2.once ? prev !== null ? prev.next = node2.next : node2.next !== null ? listeners.set(eventName, node2.next) : listeners.delete(eventName) : prev = node2, setPassiveListener(
            wrappedEvent,
            node2.passive ? node2.listener : null
          ), typeof node2.listener == "function")
            try {
              node2.listener.call(this, wrappedEvent);
            } catch (err) {
              typeof console < "u" && typeof console.error == "function" && console.error(err);
            }
          else
            node2.listenerType !== ATTRIBUTE && typeof node2.listener.handleEvent == "function" && node2.listener.handleEvent(wrappedEvent);
          if (isStopped(wrappedEvent))
            break;
          node2 = node2.next;
        }
        return setPassiveListener(wrappedEvent, null), setEventPhase(wrappedEvent, 0), setCurrentTarget(wrappedEvent, null), !wrappedEvent.defaultPrevented;
      }
    };
    Object.defineProperty(EventTarget.prototype, "constructor", {
      value: EventTarget,
      configurable: !0,
      writable: !0
    });
    typeof window < "u" && typeof window.EventTarget < "u" && Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
    exports2.defineEventAttribute = defineEventAttribute;
    exports2.EventTarget = EventTarget;
    exports2.default = EventTarget;
    module2.exports = EventTarget;
    module2.exports.EventTarget = module2.exports.default = EventTarget;
    module2.exports.defineEventAttribute = defineEventAttribute;
  }
});

// node_modules/abort-controller/dist/abort-controller.js
var require_abort_controller = __commonJS({
  "node_modules/abort-controller/dist/abort-controller.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var eventTargetShim = require_event_target_shim(), AbortSignal = class extends eventTargetShim.EventTarget {
      constructor() {
        throw super(), new TypeError("AbortSignal cannot be constructed directly");
      }
      get aborted() {
        let aborted = abortedFlags.get(this);
        if (typeof aborted != "boolean")
          throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? "null" : typeof this}`);
        return aborted;
      }
    };
    eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");
    function createAbortSignal() {
      let signal = Object.create(AbortSignal.prototype);
      return eventTargetShim.EventTarget.call(signal), abortedFlags.set(signal, !1), signal;
    }
    function abortSignal(signal) {
      abortedFlags.get(signal) === !1 && (abortedFlags.set(signal, !0), signal.dispatchEvent({ type: "abort" }));
    }
    var abortedFlags = /* @__PURE__ */ new WeakMap();
    Object.defineProperties(AbortSignal.prototype, {
      aborted: { enumerable: !0 }
    });
    typeof Symbol == "function" && typeof Symbol.toStringTag == "symbol" && Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {
      configurable: !0,
      value: "AbortSignal"
    });
    var AbortController2 = class {
      constructor() {
        signals.set(this, createAbortSignal());
      }
      get signal() {
        return getSignal(this);
      }
      abort() {
        abortSignal(getSignal(this));
      }
    }, signals = /* @__PURE__ */ new WeakMap();
    function getSignal(controller) {
      let signal = signals.get(controller);
      if (signal == null)
        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? "null" : typeof controller}`);
      return signal;
    }
    Object.defineProperties(AbortController2.prototype, {
      signal: { enumerable: !0 },
      abort: { enumerable: !0 }
    });
    typeof Symbol == "function" && typeof Symbol.toStringTag == "symbol" && Object.defineProperty(AbortController2.prototype, Symbol.toStringTag, {
      configurable: !0,
      value: "AbortController"
    });
    exports2.AbortController = AbortController2;
    exports2.AbortSignal = AbortSignal;
    exports2.default = AbortController2;
    module2.exports = AbortController2;
    module2.exports.AbortController = module2.exports.default = AbortController2;
    module2.exports.AbortSignal = AbortSignal;
  }
});

// node_modules/mrmime/index.js
var require_mrmime = __commonJS({
  "node_modules/mrmime/index.js"(exports2) {
    var mimes = {
      ez: "application/andrew-inset",
      aw: "application/applixware",
      atom: "application/atom+xml",
      atomcat: "application/atomcat+xml",
      atomdeleted: "application/atomdeleted+xml",
      atomsvc: "application/atomsvc+xml",
      dwd: "application/atsc-dwd+xml",
      held: "application/atsc-held+xml",
      rsat: "application/atsc-rsat+xml",
      bdoc: "application/bdoc",
      xcs: "application/calendar+xml",
      ccxml: "application/ccxml+xml",
      cdfx: "application/cdfx+xml",
      cdmia: "application/cdmi-capability",
      cdmic: "application/cdmi-container",
      cdmid: "application/cdmi-domain",
      cdmio: "application/cdmi-object",
      cdmiq: "application/cdmi-queue",
      cu: "application/cu-seeme",
      mpd: "application/dash+xml",
      davmount: "application/davmount+xml",
      dbk: "application/docbook+xml",
      dssc: "application/dssc+der",
      xdssc: "application/dssc+xml",
      es: "application/ecmascript",
      ecma: "application/ecmascript",
      emma: "application/emma+xml",
      emotionml: "application/emotionml+xml",
      epub: "application/epub+zip",
      exi: "application/exi",
      fdt: "application/fdt+xml",
      pfr: "application/font-tdpfr",
      geojson: "application/geo+json",
      gml: "application/gml+xml",
      gpx: "application/gpx+xml",
      gxf: "application/gxf",
      gz: "application/gzip",
      hjson: "application/hjson",
      stk: "application/hyperstudio",
      ink: "application/inkml+xml",
      inkml: "application/inkml+xml",
      ipfix: "application/ipfix",
      its: "application/its+xml",
      jar: "application/java-archive",
      war: "application/java-archive",
      ear: "application/java-archive",
      ser: "application/java-serialized-object",
      class: "application/java-vm",
      js: "application/javascript",
      mjs: "application/javascript",
      json: "application/json",
      map: "application/json",
      json5: "application/json5",
      jsonml: "application/jsonml+json",
      jsonld: "application/ld+json",
      lgr: "application/lgr+xml",
      lostxml: "application/lost+xml",
      hqx: "application/mac-binhex40",
      cpt: "application/mac-compactpro",
      mads: "application/mads+xml",
      webmanifest: "application/manifest+json",
      mrc: "application/marc",
      mrcx: "application/marcxml+xml",
      ma: "application/mathematica",
      nb: "application/mathematica",
      mb: "application/mathematica",
      mathml: "application/mathml+xml",
      mbox: "application/mbox",
      mscml: "application/mediaservercontrol+xml",
      metalink: "application/metalink+xml",
      meta4: "application/metalink4+xml",
      mets: "application/mets+xml",
      maei: "application/mmt-aei+xml",
      musd: "application/mmt-usd+xml",
      mods: "application/mods+xml",
      m21: "application/mp21",
      mp21: "application/mp21",
      mp4s: "application/mp4",
      m4p: "application/mp4",
      doc: "application/msword",
      dot: "application/msword",
      mxf: "application/mxf",
      nq: "application/n-quads",
      nt: "application/n-triples",
      cjs: "application/node",
      bin: "application/octet-stream",
      dms: "application/octet-stream",
      lrf: "application/octet-stream",
      mar: "application/octet-stream",
      so: "application/octet-stream",
      dist: "application/octet-stream",
      distz: "application/octet-stream",
      pkg: "application/octet-stream",
      bpk: "application/octet-stream",
      dump: "application/octet-stream",
      elc: "application/octet-stream",
      deploy: "application/octet-stream",
      exe: "application/octet-stream",
      dll: "application/octet-stream",
      deb: "application/octet-stream",
      dmg: "application/octet-stream",
      iso: "application/octet-stream",
      img: "application/octet-stream",
      msi: "application/octet-stream",
      msp: "application/octet-stream",
      msm: "application/octet-stream",
      buffer: "application/octet-stream",
      oda: "application/oda",
      opf: "application/oebps-package+xml",
      ogx: "application/ogg",
      omdoc: "application/omdoc+xml",
      onetoc: "application/onenote",
      onetoc2: "application/onenote",
      onetmp: "application/onenote",
      onepkg: "application/onenote",
      oxps: "application/oxps",
      relo: "application/p2p-overlay+xml",
      xer: "application/patch-ops-error+xml",
      pdf: "application/pdf",
      pgp: "application/pgp-encrypted",
      asc: "application/pgp-signature",
      sig: "application/pgp-signature",
      prf: "application/pics-rules",
      p10: "application/pkcs10",
      p7m: "application/pkcs7-mime",
      p7c: "application/pkcs7-mime",
      p7s: "application/pkcs7-signature",
      p8: "application/pkcs8",
      ac: "application/pkix-attr-cert",
      cer: "application/pkix-cert",
      crl: "application/pkix-crl",
      pkipath: "application/pkix-pkipath",
      pki: "application/pkixcmp",
      pls: "application/pls+xml",
      ai: "application/postscript",
      eps: "application/postscript",
      ps: "application/postscript",
      provx: "application/provenance+xml",
      cww: "application/prs.cww",
      pskcxml: "application/pskc+xml",
      raml: "application/raml+yaml",
      rdf: "application/rdf+xml",
      owl: "application/rdf+xml",
      rif: "application/reginfo+xml",
      rnc: "application/relax-ng-compact-syntax",
      rl: "application/resource-lists+xml",
      rld: "application/resource-lists-diff+xml",
      rs: "application/rls-services+xml",
      rapd: "application/route-apd+xml",
      sls: "application/route-s-tsid+xml",
      rusd: "application/route-usd+xml",
      gbr: "application/rpki-ghostbusters",
      mft: "application/rpki-manifest",
      roa: "application/rpki-roa",
      rsd: "application/rsd+xml",
      rss: "application/rss+xml",
      rtf: "application/rtf",
      sbml: "application/sbml+xml",
      scq: "application/scvp-cv-request",
      scs: "application/scvp-cv-response",
      spq: "application/scvp-vp-request",
      spp: "application/scvp-vp-response",
      sdp: "application/sdp",
      senmlx: "application/senml+xml",
      sensmlx: "application/sensml+xml",
      setpay: "application/set-payment-initiation",
      setreg: "application/set-registration-initiation",
      shf: "application/shf+xml",
      siv: "application/sieve",
      sieve: "application/sieve",
      smi: "application/smil+xml",
      smil: "application/smil+xml",
      rq: "application/sparql-query",
      srx: "application/sparql-results+xml",
      gram: "application/srgs",
      grxml: "application/srgs+xml",
      sru: "application/sru+xml",
      ssdl: "application/ssdl+xml",
      ssml: "application/ssml+xml",
      swidtag: "application/swid+xml",
      tei: "application/tei+xml",
      teicorpus: "application/tei+xml",
      tfi: "application/thraud+xml",
      tsd: "application/timestamped-data",
      toml: "application/toml",
      trig: "application/trig",
      ttml: "application/ttml+xml",
      ubj: "application/ubjson",
      rsheet: "application/urc-ressheet+xml",
      td: "application/urc-targetdesc+xml",
      vxml: "application/voicexml+xml",
      wasm: "application/wasm",
      wgt: "application/widget",
      hlp: "application/winhlp",
      wsdl: "application/wsdl+xml",
      wspolicy: "application/wspolicy+xml",
      xaml: "application/xaml+xml",
      xav: "application/xcap-att+xml",
      xca: "application/xcap-caps+xml",
      xdf: "application/xcap-diff+xml",
      xel: "application/xcap-el+xml",
      xns: "application/xcap-ns+xml",
      xenc: "application/xenc+xml",
      xhtml: "application/xhtml+xml",
      xht: "application/xhtml+xml",
      xlf: "application/xliff+xml",
      xml: "application/xml",
      xsl: "application/xml",
      xsd: "application/xml",
      rng: "application/xml",
      dtd: "application/xml-dtd",
      xop: "application/xop+xml",
      xpl: "application/xproc+xml",
      xslt: "application/xml",
      xspf: "application/xspf+xml",
      mxml: "application/xv+xml",
      xhvml: "application/xv+xml",
      xvml: "application/xv+xml",
      xvm: "application/xv+xml",
      yang: "application/yang",
      yin: "application/yin+xml",
      zip: "application/zip",
      "3gpp": "video/3gpp",
      adp: "audio/adpcm",
      amr: "audio/amr",
      au: "audio/basic",
      snd: "audio/basic",
      mid: "audio/midi",
      midi: "audio/midi",
      kar: "audio/midi",
      rmi: "audio/midi",
      mxmf: "audio/mobile-xmf",
      mp3: "audio/mpeg",
      m4a: "audio/mp4",
      mp4a: "audio/mp4",
      mpga: "audio/mpeg",
      mp2: "audio/mpeg",
      mp2a: "audio/mpeg",
      m2a: "audio/mpeg",
      m3a: "audio/mpeg",
      oga: "audio/ogg",
      ogg: "audio/ogg",
      spx: "audio/ogg",
      opus: "audio/ogg",
      s3m: "audio/s3m",
      sil: "audio/silk",
      wav: "audio/wav",
      weba: "audio/webm",
      xm: "audio/xm",
      ttc: "font/collection",
      otf: "font/otf",
      ttf: "font/ttf",
      woff: "font/woff",
      woff2: "font/woff2",
      exr: "image/aces",
      apng: "image/apng",
      avif: "image/avif",
      bmp: "image/bmp",
      cgm: "image/cgm",
      drle: "image/dicom-rle",
      emf: "image/emf",
      fits: "image/fits",
      g3: "image/g3fax",
      gif: "image/gif",
      heic: "image/heic",
      heics: "image/heic-sequence",
      heif: "image/heif",
      heifs: "image/heif-sequence",
      hej2: "image/hej2k",
      hsj2: "image/hsj2",
      ief: "image/ief",
      jls: "image/jls",
      jp2: "image/jp2",
      jpg2: "image/jp2",
      jpeg: "image/jpeg",
      jpg: "image/jpeg",
      jpe: "image/jpeg",
      jph: "image/jph",
      jhc: "image/jphc",
      jpm: "image/jpm",
      jpx: "image/jpx",
      jpf: "image/jpx",
      jxr: "image/jxr",
      jxra: "image/jxra",
      jxrs: "image/jxrs",
      jxs: "image/jxs",
      jxsc: "image/jxsc",
      jxsi: "image/jxsi",
      jxss: "image/jxss",
      ktx: "image/ktx",
      ktx2: "image/ktx2",
      png: "image/png",
      btif: "image/prs.btif",
      pti: "image/prs.pti",
      sgi: "image/sgi",
      svg: "image/svg+xml",
      svgz: "image/svg+xml",
      t38: "image/t38",
      tif: "image/tiff",
      tiff: "image/tiff",
      tfx: "image/tiff-fx",
      webp: "image/webp",
      wmf: "image/wmf",
      "disposition-notification": "message/disposition-notification",
      u8msg: "message/global",
      u8dsn: "message/global-delivery-status",
      u8mdn: "message/global-disposition-notification",
      u8hdr: "message/global-headers",
      eml: "message/rfc822",
      mime: "message/rfc822",
      "3mf": "model/3mf",
      gltf: "model/gltf+json",
      glb: "model/gltf-binary",
      igs: "model/iges",
      iges: "model/iges",
      msh: "model/mesh",
      mesh: "model/mesh",
      silo: "model/mesh",
      mtl: "model/mtl",
      obj: "model/obj",
      stpz: "model/step+zip",
      stpxz: "model/step-xml+zip",
      stl: "model/stl",
      wrl: "model/vrml",
      vrml: "model/vrml",
      x3db: "model/x3d+fastinfoset",
      x3dbz: "model/x3d+binary",
      x3dv: "model/x3d-vrml",
      x3dvz: "model/x3d+vrml",
      x3d: "model/x3d+xml",
      x3dz: "model/x3d+xml",
      appcache: "text/cache-manifest",
      manifest: "text/cache-manifest",
      ics: "text/calendar",
      ifb: "text/calendar",
      coffee: "text/coffeescript",
      litcoffee: "text/coffeescript",
      css: "text/css",
      csv: "text/csv",
      html: "text/html",
      htm: "text/html",
      shtml: "text/html",
      jade: "text/jade",
      jsx: "text/jsx",
      less: "text/less",
      markdown: "text/markdown",
      md: "text/markdown",
      mml: "text/mathml",
      mdx: "text/mdx",
      n3: "text/n3",
      txt: "text/plain",
      text: "text/plain",
      conf: "text/plain",
      def: "text/plain",
      list: "text/plain",
      log: "text/plain",
      in: "text/plain",
      ini: "text/plain",
      dsc: "text/prs.lines.tag",
      rtx: "text/richtext",
      sgml: "text/sgml",
      sgm: "text/sgml",
      shex: "text/shex",
      slim: "text/slim",
      slm: "text/slim",
      spdx: "text/spdx",
      stylus: "text/stylus",
      styl: "text/stylus",
      tsv: "text/tab-separated-values",
      t: "text/troff",
      tr: "text/troff",
      roff: "text/troff",
      man: "text/troff",
      me: "text/troff",
      ms: "text/troff",
      ttl: "text/turtle",
      uri: "text/uri-list",
      uris: "text/uri-list",
      urls: "text/uri-list",
      vcard: "text/vcard",
      vtt: "text/vtt",
      yaml: "text/yaml",
      yml: "text/yaml",
      "3gp": "video/3gpp",
      "3g2": "video/3gpp2",
      h261: "video/h261",
      h263: "video/h263",
      h264: "video/h264",
      m4s: "video/iso.segment",
      jpgv: "video/jpeg",
      jpgm: "image/jpm",
      mj2: "video/mj2",
      mjp2: "video/mj2",
      ts: "video/mp2t",
      mp4: "video/mp4",
      mp4v: "video/mp4",
      mpg4: "video/mp4",
      mpeg: "video/mpeg",
      mpg: "video/mpeg",
      mpe: "video/mpeg",
      m1v: "video/mpeg",
      m2v: "video/mpeg",
      ogv: "video/ogg",
      qt: "video/quicktime",
      mov: "video/quicktime",
      webm: "video/webm"
    };
    function lookup(extn) {
      let tmp = ("" + extn).trim().toLowerCase(), idx = tmp.lastIndexOf(".");
      return mimes[~idx ? tmp.substring(++idx) : tmp];
    }
    exports2.lookup = lookup;
    exports2.mimes = mimes;
  }
});

// node_modules/data-uri-to-buffer/dist/src/index.js
var require_src = __commonJS({
  "node_modules/data-uri-to-buffer/dist/src/index.js"(exports2, module2) {
    "use strict";
    function dataUriToBuffer(uri) {
      if (!/^data:/i.test(uri))
        throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
      uri = uri.replace(/\r?\n/g, "");
      let firstComma = uri.indexOf(",");
      if (firstComma === -1 || firstComma <= 4)
        throw new TypeError("malformed data: URI");
      let meta13 = uri.substring(5, firstComma).split(";"), charset = "", base64 = !1, type = meta13[0] || "text/plain", typeFull = type;
      for (let i = 1; i < meta13.length; i++)
        meta13[i] === "base64" ? base64 = !0 : (typeFull += `;${meta13[i]}`, meta13[i].indexOf("charset=") === 0 && (charset = meta13[i].substring(8)));
      !meta13[0] && !charset.length && (typeFull += ";charset=US-ASCII", charset = "US-ASCII");
      let encoding = base64 ? "base64" : "ascii", data = unescape(uri.substring(firstComma + 1)), buffer2 = Buffer.from(data, encoding);
      return buffer2.type = type, buffer2.typeFull = typeFull, buffer2.charset = charset, buffer2;
    }
    module2.exports = dataUriToBuffer;
  }
});

// node_modules/web-encoding/src/lib.js
var require_lib3 = __commonJS({
  "node_modules/web-encoding/src/lib.js"(exports2) {
    "use strict";
    exports2.TextEncoder = typeof TextEncoder < "u" ? TextEncoder : require("util").TextEncoder;
    exports2.TextDecoder = typeof TextDecoder < "u" ? TextDecoder : require("util").TextDecoder;
  }
});

// node_modules/web-streams-polyfill/dist/ponyfill.js
var require_ponyfill = __commonJS({
  "node_modules/web-streams-polyfill/dist/ponyfill.js"(exports2, module2) {
    (function(global2, factory) {
      typeof exports2 == "object" && typeof module2 < "u" ? factory(exports2) : typeof define == "function" && define.amd ? define(["exports"], factory) : (global2 = typeof globalThis < "u" ? globalThis : global2 || self, factory(global2.WebStreamsPolyfill = {}));
    })(exports2, function(exports3) {
      "use strict";
      var SymbolPolyfill = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol : function(description) {
        return "Symbol(" + description + ")";
      };
      function noop() {
      }
      function getGlobals() {
        if (typeof self < "u")
          return self;
        if (typeof window < "u")
          return window;
        if (typeof global < "u")
          return global;
      }
      var globals = getGlobals();
      function typeIsObject(x) {
        return typeof x == "object" && x !== null || typeof x == "function";
      }
      var rethrowAssertionErrorRejection = noop, originalPromise = Promise, originalPromiseThen = Promise.prototype.then, originalPromiseResolve = Promise.resolve.bind(originalPromise), originalPromiseReject = Promise.reject.bind(originalPromise);
      function newPromise(executor) {
        return new originalPromise(executor);
      }
      function promiseResolvedWith(value) {
        return originalPromiseResolve(value);
      }
      function promiseRejectedWith(reason) {
        return originalPromiseReject(reason);
      }
      function PerformPromiseThen(promise, onFulfilled, onRejected) {
        return originalPromiseThen.call(promise, onFulfilled, onRejected);
      }
      function uponPromise(promise, onFulfilled, onRejected) {
        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
      }
      function uponFulfillment(promise, onFulfilled) {
        uponPromise(promise, onFulfilled);
      }
      function uponRejection(promise, onRejected) {
        uponPromise(promise, void 0, onRejected);
      }
      function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
      }
      function setPromiseIsHandledToTrue(promise) {
        PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
      }
      var queueMicrotask = function() {
        var globalQueueMicrotask = globals && globals.queueMicrotask;
        if (typeof globalQueueMicrotask == "function")
          return globalQueueMicrotask;
        var resolvedPromise = promiseResolvedWith(void 0);
        return function(fn) {
          return PerformPromiseThen(resolvedPromise, fn);
        };
      }();
      function reflectCall(F, V, args) {
        if (typeof F != "function")
          throw new TypeError("Argument is not a function");
        return Function.prototype.apply.call(F, V, args);
      }
      function promiseCall(F, V, args) {
        try {
          return promiseResolvedWith(reflectCall(F, V, args));
        } catch (value) {
          return promiseRejectedWith(value);
        }
      }
      var QUEUE_MAX_ARRAY_SIZE = 16384, SimpleQueue = function() {
        function SimpleQueue2() {
          this._cursor = 0, this._size = 0, this._front = {
            _elements: [],
            _next: void 0
          }, this._back = this._front, this._cursor = 0, this._size = 0;
        }
        return Object.defineProperty(SimpleQueue2.prototype, "length", {
          get: function() {
            return this._size;
          },
          enumerable: !1,
          configurable: !0
        }), SimpleQueue2.prototype.push = function(element5) {
          var oldBack = this._back, newBack = oldBack;
          oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1 && (newBack = {
            _elements: [],
            _next: void 0
          }), oldBack._elements.push(element5), newBack !== oldBack && (this._back = newBack, oldBack._next = newBack), ++this._size;
        }, SimpleQueue2.prototype.shift = function() {
          var oldFront = this._front, newFront = oldFront, oldCursor = this._cursor, newCursor = oldCursor + 1, elements = oldFront._elements, element5 = elements[oldCursor];
          return newCursor === QUEUE_MAX_ARRAY_SIZE && (newFront = oldFront._next, newCursor = 0), --this._size, this._cursor = newCursor, oldFront !== newFront && (this._front = newFront), elements[oldCursor] = void 0, element5;
        }, SimpleQueue2.prototype.forEach = function(callback) {
          for (var i = this._cursor, node2 = this._front, elements = node2._elements; (i !== elements.length || node2._next !== void 0) && !(i === elements.length && (node2 = node2._next, elements = node2._elements, i = 0, elements.length === 0)); )
            callback(elements[i]), ++i;
        }, SimpleQueue2.prototype.peek = function() {
          var front = this._front, cursor = this._cursor;
          return front._elements[cursor];
        }, SimpleQueue2;
      }();
      function ReadableStreamReaderGenericInitialize(reader, stream) {
        reader._ownerReadableStream = stream, stream._reader = reader, stream._state === "readable" ? defaultReaderClosedPromiseInitialize(reader) : stream._state === "closed" ? defaultReaderClosedPromiseInitializeAsResolved(reader) : defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
      }
      function ReadableStreamReaderGenericCancel(reader, reason) {
        var stream = reader._ownerReadableStream;
        return ReadableStreamCancel(stream, reason);
      }
      function ReadableStreamReaderGenericRelease(reader) {
        reader._ownerReadableStream._state === "readable" ? defaultReaderClosedPromiseReject(reader, new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")) : defaultReaderClosedPromiseResetToRejected(reader, new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")), reader._ownerReadableStream._reader = void 0, reader._ownerReadableStream = void 0;
      }
      function readerLockException(name) {
        return new TypeError("Cannot " + name + " a stream using a released reader");
      }
      function defaultReaderClosedPromiseInitialize(reader) {
        reader._closedPromise = newPromise(function(resolve, reject) {
          reader._closedPromise_resolve = resolve, reader._closedPromise_reject = reject;
        });
      }
      function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
        defaultReaderClosedPromiseInitialize(reader), defaultReaderClosedPromiseReject(reader, reason);
      }
      function defaultReaderClosedPromiseInitializeAsResolved(reader) {
        defaultReaderClosedPromiseInitialize(reader), defaultReaderClosedPromiseResolve(reader);
      }
      function defaultReaderClosedPromiseReject(reader, reason) {
        reader._closedPromise_reject !== void 0 && (setPromiseIsHandledToTrue(reader._closedPromise), reader._closedPromise_reject(reason), reader._closedPromise_resolve = void 0, reader._closedPromise_reject = void 0);
      }
      function defaultReaderClosedPromiseResetToRejected(reader, reason) {
        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
      }
      function defaultReaderClosedPromiseResolve(reader) {
        reader._closedPromise_resolve !== void 0 && (reader._closedPromise_resolve(void 0), reader._closedPromise_resolve = void 0, reader._closedPromise_reject = void 0);
      }
      var AbortSteps = SymbolPolyfill("[[AbortSteps]]"), ErrorSteps = SymbolPolyfill("[[ErrorSteps]]"), CancelSteps = SymbolPolyfill("[[CancelSteps]]"), PullSteps = SymbolPolyfill("[[PullSteps]]"), NumberIsFinite = Number.isFinite || function(x) {
        return typeof x == "number" && isFinite(x);
      }, MathTrunc = Math.trunc || function(v) {
        return v < 0 ? Math.ceil(v) : Math.floor(v);
      };
      function isDictionary(x) {
        return typeof x == "object" || typeof x == "function";
      }
      function assertDictionary(obj, context) {
        if (obj !== void 0 && !isDictionary(obj))
          throw new TypeError(context + " is not an object.");
      }
      function assertFunction(x, context) {
        if (typeof x != "function")
          throw new TypeError(context + " is not a function.");
      }
      function isObject(x) {
        return typeof x == "object" && x !== null || typeof x == "function";
      }
      function assertObject(x, context) {
        if (!isObject(x))
          throw new TypeError(context + " is not an object.");
      }
      function assertRequiredArgument(x, position4, context) {
        if (x === void 0)
          throw new TypeError("Parameter " + position4 + " is required in '" + context + "'.");
      }
      function assertRequiredField(x, field, context) {
        if (x === void 0)
          throw new TypeError(field + " is required in '" + context + "'.");
      }
      function convertUnrestrictedDouble(value) {
        return Number(value);
      }
      function censorNegativeZero(x) {
        return x === 0 ? 0 : x;
      }
      function integerPart(x) {
        return censorNegativeZero(MathTrunc(x));
      }
      function convertUnsignedLongLongWithEnforceRange(value, context) {
        var lowerBound = 0, upperBound = Number.MAX_SAFE_INTEGER, x = Number(value);
        if (x = censorNegativeZero(x), !NumberIsFinite(x))
          throw new TypeError(context + " is not a finite number");
        if (x = integerPart(x), x < lowerBound || x > upperBound)
          throw new TypeError(context + " is outside the accepted range of " + lowerBound + " to " + upperBound + ", inclusive");
        return !NumberIsFinite(x) || x === 0 ? 0 : x;
      }
      function assertReadableStream(x, context) {
        if (!IsReadableStream(x))
          throw new TypeError(context + " is not a ReadableStream.");
      }
      function AcquireReadableStreamDefaultReader(stream) {
        return new ReadableStreamDefaultReader(stream);
      }
      function ReadableStreamAddReadRequest(stream, readRequest) {
        stream._reader._readRequests.push(readRequest);
      }
      function ReadableStreamFulfillReadRequest(stream, chunk, done) {
        var reader = stream._reader, readRequest = reader._readRequests.shift();
        done ? readRequest._closeSteps() : readRequest._chunkSteps(chunk);
      }
      function ReadableStreamGetNumReadRequests(stream) {
        return stream._reader._readRequests.length;
      }
      function ReadableStreamHasDefaultReader(stream) {
        var reader = stream._reader;
        return !(reader === void 0 || !IsReadableStreamDefaultReader(reader));
      }
      var ReadableStreamDefaultReader = function() {
        function ReadableStreamDefaultReader2(stream) {
          if (assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader"), assertReadableStream(stream, "First parameter"), IsReadableStreamLocked(stream))
            throw new TypeError("This stream has already been locked for exclusive reading by another reader");
          ReadableStreamReaderGenericInitialize(this, stream), this._readRequests = new SimpleQueue();
        }
        return Object.defineProperty(ReadableStreamDefaultReader2.prototype, "closed", {
          get: function() {
            return IsReadableStreamDefaultReader(this) ? this._closedPromise : promiseRejectedWith(defaultReaderBrandCheckException("closed"));
          },
          enumerable: !1,
          configurable: !0
        }), ReadableStreamDefaultReader2.prototype.cancel = function(reason) {
          return reason === void 0 && (reason = void 0), IsReadableStreamDefaultReader(this) ? this._ownerReadableStream === void 0 ? promiseRejectedWith(readerLockException("cancel")) : ReadableStreamReaderGenericCancel(this, reason) : promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
        }, ReadableStreamDefaultReader2.prototype.read = function() {
          if (!IsReadableStreamDefaultReader(this))
            return promiseRejectedWith(defaultReaderBrandCheckException("read"));
          if (this._ownerReadableStream === void 0)
            return promiseRejectedWith(readerLockException("read from"));
          var resolvePromise, rejectPromise, promise = newPromise(function(resolve, reject) {
            resolvePromise = resolve, rejectPromise = reject;
          }), readRequest = {
            _chunkSteps: function(chunk) {
              return resolvePromise({ value: chunk, done: !1 });
            },
            _closeSteps: function() {
              return resolvePromise({ value: void 0, done: !0 });
            },
            _errorSteps: function(e) {
              return rejectPromise(e);
            }
          };
          return ReadableStreamDefaultReaderRead(this, readRequest), promise;
        }, ReadableStreamDefaultReader2.prototype.releaseLock = function() {
          if (!IsReadableStreamDefaultReader(this))
            throw defaultReaderBrandCheckException("releaseLock");
          if (this._ownerReadableStream !== void 0) {
            if (this._readRequests.length > 0)
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            ReadableStreamReaderGenericRelease(this);
          }
        }, ReadableStreamDefaultReader2;
      }();
      Object.defineProperties(ReadableStreamDefaultReader.prototype, {
        cancel: { enumerable: !0 },
        read: { enumerable: !0 },
        releaseLock: { enumerable: !0 },
        closed: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStreamDefaultReader",
        configurable: !0
      });
      function IsReadableStreamDefaultReader(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_readRequests") ? !1 : x instanceof ReadableStreamDefaultReader;
      }
      function ReadableStreamDefaultReaderRead(reader, readRequest) {
        var stream = reader._ownerReadableStream;
        stream._disturbed = !0, stream._state === "closed" ? readRequest._closeSteps() : stream._state === "errored" ? readRequest._errorSteps(stream._storedError) : stream._readableStreamController[PullSteps](readRequest);
      }
      function defaultReaderBrandCheckException(name) {
        return new TypeError("ReadableStreamDefaultReader.prototype." + name + " can only be used on a ReadableStreamDefaultReader");
      }
      var _a2, AsyncIteratorPrototype;
      typeof SymbolPolyfill.asyncIterator == "symbol" && (AsyncIteratorPrototype = (_a2 = {}, _a2[SymbolPolyfill.asyncIterator] = function() {
        return this;
      }, _a2), Object.defineProperty(AsyncIteratorPrototype, SymbolPolyfill.asyncIterator, { enumerable: !1 }));
      var ReadableStreamAsyncIteratorImpl = function() {
        function ReadableStreamAsyncIteratorImpl2(reader, preventCancel) {
          this._ongoingPromise = void 0, this._isFinished = !1, this._reader = reader, this._preventCancel = preventCancel;
        }
        return ReadableStreamAsyncIteratorImpl2.prototype.next = function() {
          var _this = this, nextSteps = function() {
            return _this._nextSteps();
          };
          return this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps(), this._ongoingPromise;
        }, ReadableStreamAsyncIteratorImpl2.prototype.return = function(value) {
          var _this = this, returnSteps = function() {
            return _this._returnSteps(value);
          };
          return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
        }, ReadableStreamAsyncIteratorImpl2.prototype._nextSteps = function() {
          var _this = this;
          if (this._isFinished)
            return Promise.resolve({ value: void 0, done: !0 });
          var reader = this._reader;
          if (reader._ownerReadableStream === void 0)
            return promiseRejectedWith(readerLockException("iterate"));
          var resolvePromise, rejectPromise, promise = newPromise(function(resolve, reject) {
            resolvePromise = resolve, rejectPromise = reject;
          }), readRequest = {
            _chunkSteps: function(chunk) {
              _this._ongoingPromise = void 0, queueMicrotask(function() {
                return resolvePromise({ value: chunk, done: !1 });
              });
            },
            _closeSteps: function() {
              _this._ongoingPromise = void 0, _this._isFinished = !0, ReadableStreamReaderGenericRelease(reader), resolvePromise({ value: void 0, done: !0 });
            },
            _errorSteps: function(reason) {
              _this._ongoingPromise = void 0, _this._isFinished = !0, ReadableStreamReaderGenericRelease(reader), rejectPromise(reason);
            }
          };
          return ReadableStreamDefaultReaderRead(reader, readRequest), promise;
        }, ReadableStreamAsyncIteratorImpl2.prototype._returnSteps = function(value) {
          if (this._isFinished)
            return Promise.resolve({ value, done: !0 });
          this._isFinished = !0;
          var reader = this._reader;
          if (reader._ownerReadableStream === void 0)
            return promiseRejectedWith(readerLockException("finish iterating"));
          if (!this._preventCancel) {
            var result = ReadableStreamReaderGenericCancel(reader, value);
            return ReadableStreamReaderGenericRelease(reader), transformPromiseWith(result, function() {
              return { value, done: !0 };
            });
          }
          return ReadableStreamReaderGenericRelease(reader), promiseResolvedWith({ value, done: !0 });
        }, ReadableStreamAsyncIteratorImpl2;
      }(), ReadableStreamAsyncIteratorPrototype = {
        next: function() {
          return IsReadableStreamAsyncIterator(this) ? this._asyncIteratorImpl.next() : promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
        },
        return: function(value) {
          return IsReadableStreamAsyncIterator(this) ? this._asyncIteratorImpl.return(value) : promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
        }
      };
      AsyncIteratorPrototype !== void 0 && Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
      function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
        var reader = AcquireReadableStreamDefaultReader(stream), impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel), iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
        return iterator._asyncIteratorImpl = impl, iterator;
      }
      function IsReadableStreamAsyncIterator(x) {
        if (!typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_asyncIteratorImpl"))
          return !1;
        try {
          return x._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
        } catch {
          return !1;
        }
      }
      function streamAsyncIteratorBrandCheckException(name) {
        return new TypeError("ReadableStreamAsyncIterator." + name + " can only be used on a ReadableSteamAsyncIterator");
      }
      var NumberIsNaN = Number.isNaN || function(x) {
        return x !== x;
      };
      function CreateArrayFromList(elements) {
        return elements.slice();
      }
      function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {
        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);
      }
      function TransferArrayBuffer(O) {
        return O;
      }
      function IsDetachedBuffer(O) {
        return !1;
      }
      function ArrayBufferSlice(buffer2, begin, end) {
        if (buffer2.slice)
          return buffer2.slice(begin, end);
        var length = end - begin, slice = new ArrayBuffer(length);
        return CopyDataBlockBytes(slice, 0, buffer2, begin, length), slice;
      }
      function IsNonNegativeNumber(v) {
        return !(typeof v != "number" || NumberIsNaN(v) || v < 0);
      }
      function CloneAsUint8Array(O) {
        var buffer2 = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
        return new Uint8Array(buffer2);
      }
      function DequeueValue(container) {
        var pair = container._queue.shift();
        return container._queueTotalSize -= pair.size, container._queueTotalSize < 0 && (container._queueTotalSize = 0), pair.value;
      }
      function EnqueueValueWithSize(container, value, size) {
        if (!IsNonNegativeNumber(size) || size === 1 / 0)
          throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
        container._queue.push({ value, size }), container._queueTotalSize += size;
      }
      function PeekQueueValue(container) {
        var pair = container._queue.peek();
        return pair.value;
      }
      function ResetQueue(container) {
        container._queue = new SimpleQueue(), container._queueTotalSize = 0;
      }
      var ReadableStreamBYOBRequest = function() {
        function ReadableStreamBYOBRequest2() {
          throw new TypeError("Illegal constructor");
        }
        return Object.defineProperty(ReadableStreamBYOBRequest2.prototype, "view", {
          get: function() {
            if (!IsReadableStreamBYOBRequest(this))
              throw byobRequestBrandCheckException("view");
            return this._view;
          },
          enumerable: !1,
          configurable: !0
        }), ReadableStreamBYOBRequest2.prototype.respond = function(bytesWritten) {
          if (!IsReadableStreamBYOBRequest(this))
            throw byobRequestBrandCheckException("respond");
          if (assertRequiredArgument(bytesWritten, 1, "respond"), bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter"), this._associatedReadableByteStreamController === void 0)
            throw new TypeError("This BYOB request has been invalidated");
          IsDetachedBuffer(this._view.buffer), ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
        }, ReadableStreamBYOBRequest2.prototype.respondWithNewView = function(view) {
          if (!IsReadableStreamBYOBRequest(this))
            throw byobRequestBrandCheckException("respondWithNewView");
          if (assertRequiredArgument(view, 1, "respondWithNewView"), !ArrayBuffer.isView(view))
            throw new TypeError("You can only respond with array buffer views");
          if (this._associatedReadableByteStreamController === void 0)
            throw new TypeError("This BYOB request has been invalidated");
          IsDetachedBuffer(view.buffer), ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
        }, ReadableStreamBYOBRequest2;
      }();
      Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
        respond: { enumerable: !0 },
        respondWithNewView: { enumerable: !0 },
        view: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStreamBYOBRequest",
        configurable: !0
      });
      var ReadableByteStreamController = function() {
        function ReadableByteStreamController2() {
          throw new TypeError("Illegal constructor");
        }
        return Object.defineProperty(ReadableByteStreamController2.prototype, "byobRequest", {
          get: function() {
            if (!IsReadableByteStreamController(this))
              throw byteStreamControllerBrandCheckException("byobRequest");
            return ReadableByteStreamControllerGetBYOBRequest(this);
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(ReadableByteStreamController2.prototype, "desiredSize", {
          get: function() {
            if (!IsReadableByteStreamController(this))
              throw byteStreamControllerBrandCheckException("desiredSize");
            return ReadableByteStreamControllerGetDesiredSize(this);
          },
          enumerable: !1,
          configurable: !0
        }), ReadableByteStreamController2.prototype.close = function() {
          if (!IsReadableByteStreamController(this))
            throw byteStreamControllerBrandCheckException("close");
          if (this._closeRequested)
            throw new TypeError("The stream has already been closed; do not close it again!");
          var state = this._controlledReadableByteStream._state;
          if (state !== "readable")
            throw new TypeError("The stream (in " + state + " state) is not in the readable state and cannot be closed");
          ReadableByteStreamControllerClose(this);
        }, ReadableByteStreamController2.prototype.enqueue = function(chunk) {
          if (!IsReadableByteStreamController(this))
            throw byteStreamControllerBrandCheckException("enqueue");
          if (assertRequiredArgument(chunk, 1, "enqueue"), !ArrayBuffer.isView(chunk))
            throw new TypeError("chunk must be an array buffer view");
          if (chunk.byteLength === 0)
            throw new TypeError("chunk must have non-zero byteLength");
          if (chunk.buffer.byteLength === 0)
            throw new TypeError("chunk's buffer must have non-zero byteLength");
          if (this._closeRequested)
            throw new TypeError("stream is closed or draining");
          var state = this._controlledReadableByteStream._state;
          if (state !== "readable")
            throw new TypeError("The stream (in " + state + " state) is not in the readable state and cannot be enqueued to");
          ReadableByteStreamControllerEnqueue(this, chunk);
        }, ReadableByteStreamController2.prototype.error = function(e) {
          if (e === void 0 && (e = void 0), !IsReadableByteStreamController(this))
            throw byteStreamControllerBrandCheckException("error");
          ReadableByteStreamControllerError(this, e);
        }, ReadableByteStreamController2.prototype[CancelSteps] = function(reason) {
          ReadableByteStreamControllerClearPendingPullIntos(this), ResetQueue(this);
          var result = this._cancelAlgorithm(reason);
          return ReadableByteStreamControllerClearAlgorithms(this), result;
        }, ReadableByteStreamController2.prototype[PullSteps] = function(readRequest) {
          var stream = this._controlledReadableByteStream;
          if (this._queueTotalSize > 0) {
            var entry2 = this._queue.shift();
            this._queueTotalSize -= entry2.byteLength, ReadableByteStreamControllerHandleQueueDrain(this);
            var view = new Uint8Array(entry2.buffer, entry2.byteOffset, entry2.byteLength);
            readRequest._chunkSteps(view);
            return;
          }
          var autoAllocateChunkSize = this._autoAllocateChunkSize;
          if (autoAllocateChunkSize !== void 0) {
            var buffer2 = void 0;
            try {
              buffer2 = new ArrayBuffer(autoAllocateChunkSize);
            } catch (bufferE) {
              readRequest._errorSteps(bufferE);
              return;
            }
            var pullIntoDescriptor = {
              buffer: buffer2,
              bufferByteLength: autoAllocateChunkSize,
              byteOffset: 0,
              byteLength: autoAllocateChunkSize,
              bytesFilled: 0,
              elementSize: 1,
              viewConstructor: Uint8Array,
              readerType: "default"
            };
            this._pendingPullIntos.push(pullIntoDescriptor);
          }
          ReadableStreamAddReadRequest(stream, readRequest), ReadableByteStreamControllerCallPullIfNeeded(this);
        }, ReadableByteStreamController2;
      }();
      Object.defineProperties(ReadableByteStreamController.prototype, {
        close: { enumerable: !0 },
        enqueue: { enumerable: !0 },
        error: { enumerable: !0 },
        byobRequest: { enumerable: !0 },
        desiredSize: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableByteStreamController",
        configurable: !0
      });
      function IsReadableByteStreamController(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_controlledReadableByteStream") ? !1 : x instanceof ReadableByteStreamController;
      }
      function IsReadableStreamBYOBRequest(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_associatedReadableByteStreamController") ? !1 : x instanceof ReadableStreamBYOBRequest;
      }
      function ReadableByteStreamControllerCallPullIfNeeded(controller) {
        var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
        if (!!shouldPull) {
          if (controller._pulling) {
            controller._pullAgain = !0;
            return;
          }
          controller._pulling = !0;
          var pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, function() {
            controller._pulling = !1, controller._pullAgain && (controller._pullAgain = !1, ReadableByteStreamControllerCallPullIfNeeded(controller));
          }, function(e) {
            ReadableByteStreamControllerError(controller, e);
          });
        }
      }
      function ReadableByteStreamControllerClearPendingPullIntos(controller) {
        ReadableByteStreamControllerInvalidateBYOBRequest(controller), controller._pendingPullIntos = new SimpleQueue();
      }
      function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
        var done = !1;
        stream._state === "closed" && (done = !0);
        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
        pullIntoDescriptor.readerType === "default" ? ReadableStreamFulfillReadRequest(stream, filledView, done) : ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
      }
      function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
        var bytesFilled = pullIntoDescriptor.bytesFilled, elementSize = pullIntoDescriptor.elementSize;
        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
      }
      function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer2, byteOffset, byteLength) {
        controller._queue.push({ buffer: buffer2, byteOffset, byteLength }), controller._queueTotalSize += byteLength;
      }
      function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
        var elementSize = pullIntoDescriptor.elementSize, currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize, maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled), maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy, maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize, totalBytesToCopyRemaining = maxBytesToCopy, ready = !1;
        maxAlignedBytes > currentAlignedBytes && (totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled, ready = !0);
        for (var queue = controller._queue; totalBytesToCopyRemaining > 0; ) {
          var headOfQueue = queue.peek(), bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength), destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
          CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy), headOfQueue.byteLength === bytesToCopy ? queue.shift() : (headOfQueue.byteOffset += bytesToCopy, headOfQueue.byteLength -= bytesToCopy), controller._queueTotalSize -= bytesToCopy, ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor), totalBytesToCopyRemaining -= bytesToCopy;
        }
        return ready;
      }
      function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
        pullIntoDescriptor.bytesFilled += size;
      }
      function ReadableByteStreamControllerHandleQueueDrain(controller) {
        controller._queueTotalSize === 0 && controller._closeRequested ? (ReadableByteStreamControllerClearAlgorithms(controller), ReadableStreamClose(controller._controlledReadableByteStream)) : ReadableByteStreamControllerCallPullIfNeeded(controller);
      }
      function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
        controller._byobRequest !== null && (controller._byobRequest._associatedReadableByteStreamController = void 0, controller._byobRequest._view = null, controller._byobRequest = null);
      }
      function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
        for (; controller._pendingPullIntos.length > 0; ) {
          if (controller._queueTotalSize === 0)
            return;
          var pullIntoDescriptor = controller._pendingPullIntos.peek();
          ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) && (ReadableByteStreamControllerShiftPendingPullInto(controller), ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor));
        }
      }
      function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
        var stream = controller._controlledReadableByteStream, elementSize = 1;
        view.constructor !== DataView && (elementSize = view.constructor.BYTES_PER_ELEMENT);
        var ctor = view.constructor, buffer2 = view.buffer, pullIntoDescriptor = {
          buffer: buffer2,
          bufferByteLength: buffer2.byteLength,
          byteOffset: view.byteOffset,
          byteLength: view.byteLength,
          bytesFilled: 0,
          elementSize,
          viewConstructor: ctor,
          readerType: "byob"
        };
        if (controller._pendingPullIntos.length > 0) {
          controller._pendingPullIntos.push(pullIntoDescriptor), ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
          return;
        }
        if (stream._state === "closed") {
          var emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
          readIntoRequest._closeSteps(emptyView);
          return;
        }
        if (controller._queueTotalSize > 0) {
          if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
            var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
            ReadableByteStreamControllerHandleQueueDrain(controller), readIntoRequest._chunkSteps(filledView);
            return;
          }
          if (controller._closeRequested) {
            var e = new TypeError("Insufficient bytes to fill elements in the given buffer");
            ReadableByteStreamControllerError(controller, e), readIntoRequest._errorSteps(e);
            return;
          }
        }
        controller._pendingPullIntos.push(pullIntoDescriptor), ReadableStreamAddReadIntoRequest(stream, readIntoRequest), ReadableByteStreamControllerCallPullIfNeeded(controller);
      }
      function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
        var stream = controller._controlledReadableByteStream;
        if (ReadableStreamHasBYOBReader(stream))
          for (; ReadableStreamGetNumReadIntoRequests(stream) > 0; ) {
            var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
            ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
          }
      }
      function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
        if (ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor), !(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize)) {
          ReadableByteStreamControllerShiftPendingPullInto(controller);
          var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
          if (remainderSize > 0) {
            var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled, remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
          }
          pullIntoDescriptor.bytesFilled -= remainderSize, ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor), ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
        }
      }
      function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
        var firstDescriptor = controller._pendingPullIntos.peek();
        ReadableByteStreamControllerInvalidateBYOBRequest(controller);
        var state = controller._controlledReadableByteStream._state;
        state === "closed" ? ReadableByteStreamControllerRespondInClosedState(controller) : ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor), ReadableByteStreamControllerCallPullIfNeeded(controller);
      }
      function ReadableByteStreamControllerShiftPendingPullInto(controller) {
        var descriptor = controller._pendingPullIntos.shift();
        return descriptor;
      }
      function ReadableByteStreamControllerShouldCallPull(controller) {
        var stream = controller._controlledReadableByteStream;
        if (stream._state !== "readable" || controller._closeRequested || !controller._started)
          return !1;
        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0 || ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0)
          return !0;
        var desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
        return desiredSize > 0;
      }
      function ReadableByteStreamControllerClearAlgorithms(controller) {
        controller._pullAlgorithm = void 0, controller._cancelAlgorithm = void 0;
      }
      function ReadableByteStreamControllerClose(controller) {
        var stream = controller._controlledReadableByteStream;
        if (!(controller._closeRequested || stream._state !== "readable")) {
          if (controller._queueTotalSize > 0) {
            controller._closeRequested = !0;
            return;
          }
          if (controller._pendingPullIntos.length > 0) {
            var firstPendingPullInto = controller._pendingPullIntos.peek();
            if (firstPendingPullInto.bytesFilled > 0) {
              var e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              throw ReadableByteStreamControllerError(controller, e), e;
            }
          }
          ReadableByteStreamControllerClearAlgorithms(controller), ReadableStreamClose(stream);
        }
      }
      function ReadableByteStreamControllerEnqueue(controller, chunk) {
        var stream = controller._controlledReadableByteStream;
        if (!(controller._closeRequested || stream._state !== "readable")) {
          var buffer2 = chunk.buffer, byteOffset = chunk.byteOffset, byteLength = chunk.byteLength, transferredBuffer = buffer2;
          if (controller._pendingPullIntos.length > 0) {
            var firstPendingPullInto = controller._pendingPullIntos.peek();
            IsDetachedBuffer(firstPendingPullInto.buffer), firstPendingPullInto.buffer = firstPendingPullInto.buffer;
          }
          if (ReadableByteStreamControllerInvalidateBYOBRequest(controller), ReadableStreamHasDefaultReader(stream))
            if (ReadableStreamGetNumReadRequests(stream) === 0)
              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            else {
              controller._pendingPullIntos.length > 0 && ReadableByteStreamControllerShiftPendingPullInto(controller);
              var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
              ReadableStreamFulfillReadRequest(stream, transferredView, !1);
            }
          else
            ReadableStreamHasBYOBReader(stream) ? (ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength), ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller)) : ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
      }
      function ReadableByteStreamControllerError(controller, e) {
        var stream = controller._controlledReadableByteStream;
        stream._state === "readable" && (ReadableByteStreamControllerClearPendingPullIntos(controller), ResetQueue(controller), ReadableByteStreamControllerClearAlgorithms(controller), ReadableStreamError(stream, e));
      }
      function ReadableByteStreamControllerGetBYOBRequest(controller) {
        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
          var firstDescriptor = controller._pendingPullIntos.peek(), view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled), byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
          SetUpReadableStreamBYOBRequest(byobRequest, controller, view), controller._byobRequest = byobRequest;
        }
        return controller._byobRequest;
      }
      function ReadableByteStreamControllerGetDesiredSize(controller) {
        var state = controller._controlledReadableByteStream._state;
        return state === "errored" ? null : state === "closed" ? 0 : controller._strategyHWM - controller._queueTotalSize;
      }
      function ReadableByteStreamControllerRespond(controller, bytesWritten) {
        var firstDescriptor = controller._pendingPullIntos.peek(), state = controller._controlledReadableByteStream._state;
        if (state === "closed") {
          if (bytesWritten !== 0)
            throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
        } else {
          if (bytesWritten === 0)
            throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
          if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength)
            throw new RangeError("bytesWritten out of range");
        }
        firstDescriptor.buffer = firstDescriptor.buffer, ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
      }
      function ReadableByteStreamControllerRespondWithNewView(controller, view) {
        var firstDescriptor = controller._pendingPullIntos.peek(), state = controller._controlledReadableByteStream._state;
        if (state === "closed") {
          if (view.byteLength !== 0)
            throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
        } else if (view.byteLength === 0)
          throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset)
          throw new RangeError("The region specified by view does not match byobRequest");
        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength)
          throw new RangeError("The buffer of view has different capacity than byobRequest");
        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength)
          throw new RangeError("The region specified by view is larger than byobRequest");
        var viewByteLength = view.byteLength;
        firstDescriptor.buffer = view.buffer, ReadableByteStreamControllerRespondInternal(controller, viewByteLength);
      }
      function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
        controller._controlledReadableByteStream = stream, controller._pullAgain = !1, controller._pulling = !1, controller._byobRequest = null, controller._queue = controller._queueTotalSize = void 0, ResetQueue(controller), controller._closeRequested = !1, controller._started = !1, controller._strategyHWM = highWaterMark, controller._pullAlgorithm = pullAlgorithm, controller._cancelAlgorithm = cancelAlgorithm, controller._autoAllocateChunkSize = autoAllocateChunkSize, controller._pendingPullIntos = new SimpleQueue(), stream._readableStreamController = controller;
        var startResult = startAlgorithm();
        uponPromise(promiseResolvedWith(startResult), function() {
          controller._started = !0, ReadableByteStreamControllerCallPullIfNeeded(controller);
        }, function(r) {
          ReadableByteStreamControllerError(controller, r);
        });
      }
      function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
        var controller = Object.create(ReadableByteStreamController.prototype), startAlgorithm = function() {
        }, pullAlgorithm = function() {
          return promiseResolvedWith(void 0);
        }, cancelAlgorithm = function() {
          return promiseResolvedWith(void 0);
        };
        underlyingByteSource.start !== void 0 && (startAlgorithm = function() {
          return underlyingByteSource.start(controller);
        }), underlyingByteSource.pull !== void 0 && (pullAlgorithm = function() {
          return underlyingByteSource.pull(controller);
        }), underlyingByteSource.cancel !== void 0 && (cancelAlgorithm = function(reason) {
          return underlyingByteSource.cancel(reason);
        });
        var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
        if (autoAllocateChunkSize === 0)
          throw new TypeError("autoAllocateChunkSize must be greater than 0");
        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
      }
      function SetUpReadableStreamBYOBRequest(request, controller, view) {
        request._associatedReadableByteStreamController = controller, request._view = view;
      }
      function byobRequestBrandCheckException(name) {
        return new TypeError("ReadableStreamBYOBRequest.prototype." + name + " can only be used on a ReadableStreamBYOBRequest");
      }
      function byteStreamControllerBrandCheckException(name) {
        return new TypeError("ReadableByteStreamController.prototype." + name + " can only be used on a ReadableByteStreamController");
      }
      function AcquireReadableStreamBYOBReader(stream) {
        return new ReadableStreamBYOBReader(stream);
      }
      function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
        stream._reader._readIntoRequests.push(readIntoRequest);
      }
      function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
        var reader = stream._reader, readIntoRequest = reader._readIntoRequests.shift();
        done ? readIntoRequest._closeSteps(chunk) : readIntoRequest._chunkSteps(chunk);
      }
      function ReadableStreamGetNumReadIntoRequests(stream) {
        return stream._reader._readIntoRequests.length;
      }
      function ReadableStreamHasBYOBReader(stream) {
        var reader = stream._reader;
        return !(reader === void 0 || !IsReadableStreamBYOBReader(reader));
      }
      var ReadableStreamBYOBReader = function() {
        function ReadableStreamBYOBReader2(stream) {
          if (assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader"), assertReadableStream(stream, "First parameter"), IsReadableStreamLocked(stream))
            throw new TypeError("This stream has already been locked for exclusive reading by another reader");
          if (!IsReadableByteStreamController(stream._readableStreamController))
            throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
          ReadableStreamReaderGenericInitialize(this, stream), this._readIntoRequests = new SimpleQueue();
        }
        return Object.defineProperty(ReadableStreamBYOBReader2.prototype, "closed", {
          get: function() {
            return IsReadableStreamBYOBReader(this) ? this._closedPromise : promiseRejectedWith(byobReaderBrandCheckException("closed"));
          },
          enumerable: !1,
          configurable: !0
        }), ReadableStreamBYOBReader2.prototype.cancel = function(reason) {
          return reason === void 0 && (reason = void 0), IsReadableStreamBYOBReader(this) ? this._ownerReadableStream === void 0 ? promiseRejectedWith(readerLockException("cancel")) : ReadableStreamReaderGenericCancel(this, reason) : promiseRejectedWith(byobReaderBrandCheckException("cancel"));
        }, ReadableStreamBYOBReader2.prototype.read = function(view) {
          if (!IsReadableStreamBYOBReader(this))
            return promiseRejectedWith(byobReaderBrandCheckException("read"));
          if (!ArrayBuffer.isView(view))
            return promiseRejectedWith(new TypeError("view must be an array buffer view"));
          if (view.byteLength === 0)
            return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
          if (view.buffer.byteLength === 0)
            return promiseRejectedWith(new TypeError("view's buffer must have non-zero byteLength"));
          if (IsDetachedBuffer(view.buffer), this._ownerReadableStream === void 0)
            return promiseRejectedWith(readerLockException("read from"));
          var resolvePromise, rejectPromise, promise = newPromise(function(resolve, reject) {
            resolvePromise = resolve, rejectPromise = reject;
          }), readIntoRequest = {
            _chunkSteps: function(chunk) {
              return resolvePromise({ value: chunk, done: !1 });
            },
            _closeSteps: function(chunk) {
              return resolvePromise({ value: chunk, done: !0 });
            },
            _errorSteps: function(e) {
              return rejectPromise(e);
            }
          };
          return ReadableStreamBYOBReaderRead(this, view, readIntoRequest), promise;
        }, ReadableStreamBYOBReader2.prototype.releaseLock = function() {
          if (!IsReadableStreamBYOBReader(this))
            throw byobReaderBrandCheckException("releaseLock");
          if (this._ownerReadableStream !== void 0) {
            if (this._readIntoRequests.length > 0)
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            ReadableStreamReaderGenericRelease(this);
          }
        }, ReadableStreamBYOBReader2;
      }();
      Object.defineProperties(ReadableStreamBYOBReader.prototype, {
        cancel: { enumerable: !0 },
        read: { enumerable: !0 },
        releaseLock: { enumerable: !0 },
        closed: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStreamBYOBReader",
        configurable: !0
      });
      function IsReadableStreamBYOBReader(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_readIntoRequests") ? !1 : x instanceof ReadableStreamBYOBReader;
      }
      function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
        var stream = reader._ownerReadableStream;
        stream._disturbed = !0, stream._state === "errored" ? readIntoRequest._errorSteps(stream._storedError) : ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
      }
      function byobReaderBrandCheckException(name) {
        return new TypeError("ReadableStreamBYOBReader.prototype." + name + " can only be used on a ReadableStreamBYOBReader");
      }
      function ExtractHighWaterMark(strategy, defaultHWM) {
        var highWaterMark = strategy.highWaterMark;
        if (highWaterMark === void 0)
          return defaultHWM;
        if (NumberIsNaN(highWaterMark) || highWaterMark < 0)
          throw new RangeError("Invalid highWaterMark");
        return highWaterMark;
      }
      function ExtractSizeAlgorithm(strategy) {
        var size = strategy.size;
        return size || function() {
          return 1;
        };
      }
      function convertQueuingStrategy(init, context) {
        assertDictionary(init, context);
        var highWaterMark = init == null ? void 0 : init.highWaterMark, size = init == null ? void 0 : init.size;
        return {
          highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
          size: size === void 0 ? void 0 : convertQueuingStrategySize(size, context + " has member 'size' that")
        };
      }
      function convertQueuingStrategySize(fn, context) {
        return assertFunction(fn, context), function(chunk) {
          return convertUnrestrictedDouble(fn(chunk));
        };
      }
      function convertUnderlyingSink(original, context) {
        assertDictionary(original, context);
        var abort = original == null ? void 0 : original.abort, close = original == null ? void 0 : original.close, start = original == null ? void 0 : original.start, type = original == null ? void 0 : original.type, write = original == null ? void 0 : original.write;
        return {
          abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, context + " has member 'abort' that"),
          close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, context + " has member 'close' that"),
          start: start === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start, original, context + " has member 'start' that"),
          write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, context + " has member 'write' that"),
          type
        };
      }
      function convertUnderlyingSinkAbortCallback(fn, original, context) {
        return assertFunction(fn, context), function(reason) {
          return promiseCall(fn, original, [reason]);
        };
      }
      function convertUnderlyingSinkCloseCallback(fn, original, context) {
        return assertFunction(fn, context), function() {
          return promiseCall(fn, original, []);
        };
      }
      function convertUnderlyingSinkStartCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return reflectCall(fn, original, [controller]);
        };
      }
      function convertUnderlyingSinkWriteCallback(fn, original, context) {
        return assertFunction(fn, context), function(chunk, controller) {
          return promiseCall(fn, original, [chunk, controller]);
        };
      }
      function assertWritableStream(x, context) {
        if (!IsWritableStream(x))
          throw new TypeError(context + " is not a WritableStream.");
      }
      function isAbortSignal(value) {
        if (typeof value != "object" || value === null)
          return !1;
        try {
          return typeof value.aborted == "boolean";
        } catch {
          return !1;
        }
      }
      var supportsAbortController = typeof AbortController == "function";
      function createAbortController() {
        if (supportsAbortController)
          return new AbortController();
      }
      var WritableStream = function() {
        function WritableStream2(rawUnderlyingSink, rawStrategy) {
          rawUnderlyingSink === void 0 && (rawUnderlyingSink = {}), rawStrategy === void 0 && (rawStrategy = {}), rawUnderlyingSink === void 0 ? rawUnderlyingSink = null : assertObject(rawUnderlyingSink, "First parameter");
          var strategy = convertQueuingStrategy(rawStrategy, "Second parameter"), underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
          InitializeWritableStream(this);
          var type = underlyingSink.type;
          if (type !== void 0)
            throw new RangeError("Invalid type is specified");
          var sizeAlgorithm = ExtractSizeAlgorithm(strategy), highWaterMark = ExtractHighWaterMark(strategy, 1);
          SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
        }
        return Object.defineProperty(WritableStream2.prototype, "locked", {
          get: function() {
            if (!IsWritableStream(this))
              throw streamBrandCheckException$2("locked");
            return IsWritableStreamLocked(this);
          },
          enumerable: !1,
          configurable: !0
        }), WritableStream2.prototype.abort = function(reason) {
          return reason === void 0 && (reason = void 0), IsWritableStream(this) ? IsWritableStreamLocked(this) ? promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer")) : WritableStreamAbort(this, reason) : promiseRejectedWith(streamBrandCheckException$2("abort"));
        }, WritableStream2.prototype.close = function() {
          return IsWritableStream(this) ? IsWritableStreamLocked(this) ? promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer")) : WritableStreamCloseQueuedOrInFlight(this) ? promiseRejectedWith(new TypeError("Cannot close an already-closing stream")) : WritableStreamClose(this) : promiseRejectedWith(streamBrandCheckException$2("close"));
        }, WritableStream2.prototype.getWriter = function() {
          if (!IsWritableStream(this))
            throw streamBrandCheckException$2("getWriter");
          return AcquireWritableStreamDefaultWriter(this);
        }, WritableStream2;
      }();
      Object.defineProperties(WritableStream.prototype, {
        abort: { enumerable: !0 },
        close: { enumerable: !0 },
        getWriter: { enumerable: !0 },
        locked: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
        value: "WritableStream",
        configurable: !0
      });
      function AcquireWritableStreamDefaultWriter(stream) {
        return new WritableStreamDefaultWriter(stream);
      }
      function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
        highWaterMark === void 0 && (highWaterMark = 1), sizeAlgorithm === void 0 && (sizeAlgorithm = function() {
          return 1;
        });
        var stream = Object.create(WritableStream.prototype);
        InitializeWritableStream(stream);
        var controller = Object.create(WritableStreamDefaultController.prototype);
        return SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm), stream;
      }
      function InitializeWritableStream(stream) {
        stream._state = "writable", stream._storedError = void 0, stream._writer = void 0, stream._writableStreamController = void 0, stream._writeRequests = new SimpleQueue(), stream._inFlightWriteRequest = void 0, stream._closeRequest = void 0, stream._inFlightCloseRequest = void 0, stream._pendingAbortRequest = void 0, stream._backpressure = !1;
      }
      function IsWritableStream(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_writableStreamController") ? !1 : x instanceof WritableStream;
      }
      function IsWritableStreamLocked(stream) {
        return stream._writer !== void 0;
      }
      function WritableStreamAbort(stream, reason) {
        var _a3;
        if (stream._state === "closed" || stream._state === "errored")
          return promiseResolvedWith(void 0);
        stream._writableStreamController._abortReason = reason, (_a3 = stream._writableStreamController._abortController) === null || _a3 === void 0 || _a3.abort();
        var state = stream._state;
        if (state === "closed" || state === "errored")
          return promiseResolvedWith(void 0);
        if (stream._pendingAbortRequest !== void 0)
          return stream._pendingAbortRequest._promise;
        var wasAlreadyErroring = !1;
        state === "erroring" && (wasAlreadyErroring = !0, reason = void 0);
        var promise = newPromise(function(resolve, reject) {
          stream._pendingAbortRequest = {
            _promise: void 0,
            _resolve: resolve,
            _reject: reject,
            _reason: reason,
            _wasAlreadyErroring: wasAlreadyErroring
          };
        });
        return stream._pendingAbortRequest._promise = promise, wasAlreadyErroring || WritableStreamStartErroring(stream, reason), promise;
      }
      function WritableStreamClose(stream) {
        var state = stream._state;
        if (state === "closed" || state === "errored")
          return promiseRejectedWith(new TypeError("The stream (in " + state + " state) is not in the writable state and cannot be closed"));
        var promise = newPromise(function(resolve, reject) {
          var closeRequest = {
            _resolve: resolve,
            _reject: reject
          };
          stream._closeRequest = closeRequest;
        }), writer = stream._writer;
        return writer !== void 0 && stream._backpressure && state === "writable" && defaultWriterReadyPromiseResolve(writer), WritableStreamDefaultControllerClose(stream._writableStreamController), promise;
      }
      function WritableStreamAddWriteRequest(stream) {
        var promise = newPromise(function(resolve, reject) {
          var writeRequest = {
            _resolve: resolve,
            _reject: reject
          };
          stream._writeRequests.push(writeRequest);
        });
        return promise;
      }
      function WritableStreamDealWithRejection(stream, error) {
        var state = stream._state;
        if (state === "writable") {
          WritableStreamStartErroring(stream, error);
          return;
        }
        WritableStreamFinishErroring(stream);
      }
      function WritableStreamStartErroring(stream, reason) {
        var controller = stream._writableStreamController;
        stream._state = "erroring", stream._storedError = reason;
        var writer = stream._writer;
        writer !== void 0 && WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason), !WritableStreamHasOperationMarkedInFlight(stream) && controller._started && WritableStreamFinishErroring(stream);
      }
      function WritableStreamFinishErroring(stream) {
        stream._state = "errored", stream._writableStreamController[ErrorSteps]();
        var storedError = stream._storedError;
        if (stream._writeRequests.forEach(function(writeRequest) {
          writeRequest._reject(storedError);
        }), stream._writeRequests = new SimpleQueue(), stream._pendingAbortRequest === void 0) {
          WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          return;
        }
        var abortRequest = stream._pendingAbortRequest;
        if (stream._pendingAbortRequest = void 0, abortRequest._wasAlreadyErroring) {
          abortRequest._reject(storedError), WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          return;
        }
        var promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
        uponPromise(promise, function() {
          abortRequest._resolve(), WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
        }, function(reason) {
          abortRequest._reject(reason), WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
        });
      }
      function WritableStreamFinishInFlightWrite(stream) {
        stream._inFlightWriteRequest._resolve(void 0), stream._inFlightWriteRequest = void 0;
      }
      function WritableStreamFinishInFlightWriteWithError(stream, error) {
        stream._inFlightWriteRequest._reject(error), stream._inFlightWriteRequest = void 0, WritableStreamDealWithRejection(stream, error);
      }
      function WritableStreamFinishInFlightClose(stream) {
        stream._inFlightCloseRequest._resolve(void 0), stream._inFlightCloseRequest = void 0;
        var state = stream._state;
        state === "erroring" && (stream._storedError = void 0, stream._pendingAbortRequest !== void 0 && (stream._pendingAbortRequest._resolve(), stream._pendingAbortRequest = void 0)), stream._state = "closed";
        var writer = stream._writer;
        writer !== void 0 && defaultWriterClosedPromiseResolve(writer);
      }
      function WritableStreamFinishInFlightCloseWithError(stream, error) {
        stream._inFlightCloseRequest._reject(error), stream._inFlightCloseRequest = void 0, stream._pendingAbortRequest !== void 0 && (stream._pendingAbortRequest._reject(error), stream._pendingAbortRequest = void 0), WritableStreamDealWithRejection(stream, error);
      }
      function WritableStreamCloseQueuedOrInFlight(stream) {
        return !(stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0);
      }
      function WritableStreamHasOperationMarkedInFlight(stream) {
        return !(stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0);
      }
      function WritableStreamMarkCloseRequestInFlight(stream) {
        stream._inFlightCloseRequest = stream._closeRequest, stream._closeRequest = void 0;
      }
      function WritableStreamMarkFirstWriteRequestInFlight(stream) {
        stream._inFlightWriteRequest = stream._writeRequests.shift();
      }
      function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
        stream._closeRequest !== void 0 && (stream._closeRequest._reject(stream._storedError), stream._closeRequest = void 0);
        var writer = stream._writer;
        writer !== void 0 && defaultWriterClosedPromiseReject(writer, stream._storedError);
      }
      function WritableStreamUpdateBackpressure(stream, backpressure) {
        var writer = stream._writer;
        writer !== void 0 && backpressure !== stream._backpressure && (backpressure ? defaultWriterReadyPromiseReset(writer) : defaultWriterReadyPromiseResolve(writer)), stream._backpressure = backpressure;
      }
      var WritableStreamDefaultWriter = function() {
        function WritableStreamDefaultWriter2(stream) {
          if (assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter"), assertWritableStream(stream, "First parameter"), IsWritableStreamLocked(stream))
            throw new TypeError("This stream has already been locked for exclusive writing by another writer");
          this._ownerWritableStream = stream, stream._writer = this;
          var state = stream._state;
          if (state === "writable")
            !WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure ? defaultWriterReadyPromiseInitialize(this) : defaultWriterReadyPromiseInitializeAsResolved(this), defaultWriterClosedPromiseInitialize(this);
          else if (state === "erroring")
            defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError), defaultWriterClosedPromiseInitialize(this);
          else if (state === "closed")
            defaultWriterReadyPromiseInitializeAsResolved(this), defaultWriterClosedPromiseInitializeAsResolved(this);
          else {
            var storedError = stream._storedError;
            defaultWriterReadyPromiseInitializeAsRejected(this, storedError), defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
          }
        }
        return Object.defineProperty(WritableStreamDefaultWriter2.prototype, "closed", {
          get: function() {
            return IsWritableStreamDefaultWriter(this) ? this._closedPromise : promiseRejectedWith(defaultWriterBrandCheckException("closed"));
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(WritableStreamDefaultWriter2.prototype, "desiredSize", {
          get: function() {
            if (!IsWritableStreamDefaultWriter(this))
              throw defaultWriterBrandCheckException("desiredSize");
            if (this._ownerWritableStream === void 0)
              throw defaultWriterLockException("desiredSize");
            return WritableStreamDefaultWriterGetDesiredSize(this);
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(WritableStreamDefaultWriter2.prototype, "ready", {
          get: function() {
            return IsWritableStreamDefaultWriter(this) ? this._readyPromise : promiseRejectedWith(defaultWriterBrandCheckException("ready"));
          },
          enumerable: !1,
          configurable: !0
        }), WritableStreamDefaultWriter2.prototype.abort = function(reason) {
          return reason === void 0 && (reason = void 0), IsWritableStreamDefaultWriter(this) ? this._ownerWritableStream === void 0 ? promiseRejectedWith(defaultWriterLockException("abort")) : WritableStreamDefaultWriterAbort(this, reason) : promiseRejectedWith(defaultWriterBrandCheckException("abort"));
        }, WritableStreamDefaultWriter2.prototype.close = function() {
          if (!IsWritableStreamDefaultWriter(this))
            return promiseRejectedWith(defaultWriterBrandCheckException("close"));
          var stream = this._ownerWritableStream;
          return stream === void 0 ? promiseRejectedWith(defaultWriterLockException("close")) : WritableStreamCloseQueuedOrInFlight(stream) ? promiseRejectedWith(new TypeError("Cannot close an already-closing stream")) : WritableStreamDefaultWriterClose(this);
        }, WritableStreamDefaultWriter2.prototype.releaseLock = function() {
          if (!IsWritableStreamDefaultWriter(this))
            throw defaultWriterBrandCheckException("releaseLock");
          var stream = this._ownerWritableStream;
          stream !== void 0 && WritableStreamDefaultWriterRelease(this);
        }, WritableStreamDefaultWriter2.prototype.write = function(chunk) {
          return chunk === void 0 && (chunk = void 0), IsWritableStreamDefaultWriter(this) ? this._ownerWritableStream === void 0 ? promiseRejectedWith(defaultWriterLockException("write to")) : WritableStreamDefaultWriterWrite(this, chunk) : promiseRejectedWith(defaultWriterBrandCheckException("write"));
        }, WritableStreamDefaultWriter2;
      }();
      Object.defineProperties(WritableStreamDefaultWriter.prototype, {
        abort: { enumerable: !0 },
        close: { enumerable: !0 },
        releaseLock: { enumerable: !0 },
        write: { enumerable: !0 },
        closed: { enumerable: !0 },
        desiredSize: { enumerable: !0 },
        ready: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
        value: "WritableStreamDefaultWriter",
        configurable: !0
      });
      function IsWritableStreamDefaultWriter(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_ownerWritableStream") ? !1 : x instanceof WritableStreamDefaultWriter;
      }
      function WritableStreamDefaultWriterAbort(writer, reason) {
        var stream = writer._ownerWritableStream;
        return WritableStreamAbort(stream, reason);
      }
      function WritableStreamDefaultWriterClose(writer) {
        var stream = writer._ownerWritableStream;
        return WritableStreamClose(stream);
      }
      function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
        var stream = writer._ownerWritableStream, state = stream._state;
        return WritableStreamCloseQueuedOrInFlight(stream) || state === "closed" ? promiseResolvedWith(void 0) : state === "errored" ? promiseRejectedWith(stream._storedError) : WritableStreamDefaultWriterClose(writer);
      }
      function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {
        writer._closedPromiseState === "pending" ? defaultWriterClosedPromiseReject(writer, error) : defaultWriterClosedPromiseResetToRejected(writer, error);
      }
      function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {
        writer._readyPromiseState === "pending" ? defaultWriterReadyPromiseReject(writer, error) : defaultWriterReadyPromiseResetToRejected(writer, error);
      }
      function WritableStreamDefaultWriterGetDesiredSize(writer) {
        var stream = writer._ownerWritableStream, state = stream._state;
        return state === "errored" || state === "erroring" ? null : state === "closed" ? 0 : WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
      }
      function WritableStreamDefaultWriterRelease(writer) {
        var stream = writer._ownerWritableStream, releasedError = new TypeError("Writer was released and can no longer be used to monitor the stream's closedness");
        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError), WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError), stream._writer = void 0, writer._ownerWritableStream = void 0;
      }
      function WritableStreamDefaultWriterWrite(writer, chunk) {
        var stream = writer._ownerWritableStream, controller = stream._writableStreamController, chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
        if (stream !== writer._ownerWritableStream)
          return promiseRejectedWith(defaultWriterLockException("write to"));
        var state = stream._state;
        if (state === "errored")
          return promiseRejectedWith(stream._storedError);
        if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed")
          return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
        if (state === "erroring")
          return promiseRejectedWith(stream._storedError);
        var promise = WritableStreamAddWriteRequest(stream);
        return WritableStreamDefaultControllerWrite(controller, chunk, chunkSize), promise;
      }
      var closeSentinel = {}, WritableStreamDefaultController = function() {
        function WritableStreamDefaultController2() {
          throw new TypeError("Illegal constructor");
        }
        return Object.defineProperty(WritableStreamDefaultController2.prototype, "abortReason", {
          get: function() {
            if (!IsWritableStreamDefaultController(this))
              throw defaultControllerBrandCheckException$2("abortReason");
            return this._abortReason;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(WritableStreamDefaultController2.prototype, "signal", {
          get: function() {
            if (!IsWritableStreamDefaultController(this))
              throw defaultControllerBrandCheckException$2("signal");
            if (this._abortController === void 0)
              throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
            return this._abortController.signal;
          },
          enumerable: !1,
          configurable: !0
        }), WritableStreamDefaultController2.prototype.error = function(e) {
          if (e === void 0 && (e = void 0), !IsWritableStreamDefaultController(this))
            throw defaultControllerBrandCheckException$2("error");
          var state = this._controlledWritableStream._state;
          state === "writable" && WritableStreamDefaultControllerError(this, e);
        }, WritableStreamDefaultController2.prototype[AbortSteps] = function(reason) {
          var result = this._abortAlgorithm(reason);
          return WritableStreamDefaultControllerClearAlgorithms(this), result;
        }, WritableStreamDefaultController2.prototype[ErrorSteps] = function() {
          ResetQueue(this);
        }, WritableStreamDefaultController2;
      }();
      Object.defineProperties(WritableStreamDefaultController.prototype, {
        abortReason: { enumerable: !0 },
        signal: { enumerable: !0 },
        error: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
        value: "WritableStreamDefaultController",
        configurable: !0
      });
      function IsWritableStreamDefaultController(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_controlledWritableStream") ? !1 : x instanceof WritableStreamDefaultController;
      }
      function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
        controller._controlledWritableStream = stream, stream._writableStreamController = controller, controller._queue = void 0, controller._queueTotalSize = void 0, ResetQueue(controller), controller._abortReason = void 0, controller._abortController = createAbortController(), controller._started = !1, controller._strategySizeAlgorithm = sizeAlgorithm, controller._strategyHWM = highWaterMark, controller._writeAlgorithm = writeAlgorithm, controller._closeAlgorithm = closeAlgorithm, controller._abortAlgorithm = abortAlgorithm;
        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
        WritableStreamUpdateBackpressure(stream, backpressure);
        var startResult = startAlgorithm(), startPromise = promiseResolvedWith(startResult);
        uponPromise(startPromise, function() {
          controller._started = !0, WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }, function(r) {
          controller._started = !0, WritableStreamDealWithRejection(stream, r);
        });
      }
      function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
        var controller = Object.create(WritableStreamDefaultController.prototype), startAlgorithm = function() {
        }, writeAlgorithm = function() {
          return promiseResolvedWith(void 0);
        }, closeAlgorithm = function() {
          return promiseResolvedWith(void 0);
        }, abortAlgorithm = function() {
          return promiseResolvedWith(void 0);
        };
        underlyingSink.start !== void 0 && (startAlgorithm = function() {
          return underlyingSink.start(controller);
        }), underlyingSink.write !== void 0 && (writeAlgorithm = function(chunk) {
          return underlyingSink.write(chunk, controller);
        }), underlyingSink.close !== void 0 && (closeAlgorithm = function() {
          return underlyingSink.close();
        }), underlyingSink.abort !== void 0 && (abortAlgorithm = function(reason) {
          return underlyingSink.abort(reason);
        }), SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
      }
      function WritableStreamDefaultControllerClearAlgorithms(controller) {
        controller._writeAlgorithm = void 0, controller._closeAlgorithm = void 0, controller._abortAlgorithm = void 0, controller._strategySizeAlgorithm = void 0;
      }
      function WritableStreamDefaultControllerClose(controller) {
        EnqueueValueWithSize(controller, closeSentinel, 0), WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
      }
      function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
        try {
          return controller._strategySizeAlgorithm(chunk);
        } catch (chunkSizeE) {
          return WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE), 1;
        }
      }
      function WritableStreamDefaultControllerGetDesiredSize(controller) {
        return controller._strategyHWM - controller._queueTotalSize;
      }
      function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
        try {
          EnqueueValueWithSize(controller, chunk, chunkSize);
        } catch (enqueueE) {
          WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
          return;
        }
        var stream = controller._controlledWritableStream;
        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
          var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
          WritableStreamUpdateBackpressure(stream, backpressure);
        }
        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
      }
      function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
        var stream = controller._controlledWritableStream;
        if (!!controller._started && stream._inFlightWriteRequest === void 0) {
          var state = stream._state;
          if (state === "erroring") {
            WritableStreamFinishErroring(stream);
            return;
          }
          if (controller._queue.length !== 0) {
            var value = PeekQueueValue(controller);
            value === closeSentinel ? WritableStreamDefaultControllerProcessClose(controller) : WritableStreamDefaultControllerProcessWrite(controller, value);
          }
        }
      }
      function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {
        controller._controlledWritableStream._state === "writable" && WritableStreamDefaultControllerError(controller, error);
      }
      function WritableStreamDefaultControllerProcessClose(controller) {
        var stream = controller._controlledWritableStream;
        WritableStreamMarkCloseRequestInFlight(stream), DequeueValue(controller);
        var sinkClosePromise = controller._closeAlgorithm();
        WritableStreamDefaultControllerClearAlgorithms(controller), uponPromise(sinkClosePromise, function() {
          WritableStreamFinishInFlightClose(stream);
        }, function(reason) {
          WritableStreamFinishInFlightCloseWithError(stream, reason);
        });
      }
      function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
        var stream = controller._controlledWritableStream;
        WritableStreamMarkFirstWriteRequestInFlight(stream);
        var sinkWritePromise = controller._writeAlgorithm(chunk);
        uponPromise(sinkWritePromise, function() {
          WritableStreamFinishInFlightWrite(stream);
          var state = stream._state;
          if (DequeueValue(controller), !WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
            var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
            WritableStreamUpdateBackpressure(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }, function(reason) {
          stream._state === "writable" && WritableStreamDefaultControllerClearAlgorithms(controller), WritableStreamFinishInFlightWriteWithError(stream, reason);
        });
      }
      function WritableStreamDefaultControllerGetBackpressure(controller) {
        var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
        return desiredSize <= 0;
      }
      function WritableStreamDefaultControllerError(controller, error) {
        var stream = controller._controlledWritableStream;
        WritableStreamDefaultControllerClearAlgorithms(controller), WritableStreamStartErroring(stream, error);
      }
      function streamBrandCheckException$2(name) {
        return new TypeError("WritableStream.prototype." + name + " can only be used on a WritableStream");
      }
      function defaultControllerBrandCheckException$2(name) {
        return new TypeError("WritableStreamDefaultController.prototype." + name + " can only be used on a WritableStreamDefaultController");
      }
      function defaultWriterBrandCheckException(name) {
        return new TypeError("WritableStreamDefaultWriter.prototype." + name + " can only be used on a WritableStreamDefaultWriter");
      }
      function defaultWriterLockException(name) {
        return new TypeError("Cannot " + name + " a stream using a released writer");
      }
      function defaultWriterClosedPromiseInitialize(writer) {
        writer._closedPromise = newPromise(function(resolve, reject) {
          writer._closedPromise_resolve = resolve, writer._closedPromise_reject = reject, writer._closedPromiseState = "pending";
        });
      }
      function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
        defaultWriterClosedPromiseInitialize(writer), defaultWriterClosedPromiseReject(writer, reason);
      }
      function defaultWriterClosedPromiseInitializeAsResolved(writer) {
        defaultWriterClosedPromiseInitialize(writer), defaultWriterClosedPromiseResolve(writer);
      }
      function defaultWriterClosedPromiseReject(writer, reason) {
        writer._closedPromise_reject !== void 0 && (setPromiseIsHandledToTrue(writer._closedPromise), writer._closedPromise_reject(reason), writer._closedPromise_resolve = void 0, writer._closedPromise_reject = void 0, writer._closedPromiseState = "rejected");
      }
      function defaultWriterClosedPromiseResetToRejected(writer, reason) {
        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
      }
      function defaultWriterClosedPromiseResolve(writer) {
        writer._closedPromise_resolve !== void 0 && (writer._closedPromise_resolve(void 0), writer._closedPromise_resolve = void 0, writer._closedPromise_reject = void 0, writer._closedPromiseState = "resolved");
      }
      function defaultWriterReadyPromiseInitialize(writer) {
        writer._readyPromise = newPromise(function(resolve, reject) {
          writer._readyPromise_resolve = resolve, writer._readyPromise_reject = reject;
        }), writer._readyPromiseState = "pending";
      }
      function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
        defaultWriterReadyPromiseInitialize(writer), defaultWriterReadyPromiseReject(writer, reason);
      }
      function defaultWriterReadyPromiseInitializeAsResolved(writer) {
        defaultWriterReadyPromiseInitialize(writer), defaultWriterReadyPromiseResolve(writer);
      }
      function defaultWriterReadyPromiseReject(writer, reason) {
        writer._readyPromise_reject !== void 0 && (setPromiseIsHandledToTrue(writer._readyPromise), writer._readyPromise_reject(reason), writer._readyPromise_resolve = void 0, writer._readyPromise_reject = void 0, writer._readyPromiseState = "rejected");
      }
      function defaultWriterReadyPromiseReset(writer) {
        defaultWriterReadyPromiseInitialize(writer);
      }
      function defaultWriterReadyPromiseResetToRejected(writer, reason) {
        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
      }
      function defaultWriterReadyPromiseResolve(writer) {
        writer._readyPromise_resolve !== void 0 && (writer._readyPromise_resolve(void 0), writer._readyPromise_resolve = void 0, writer._readyPromise_reject = void 0, writer._readyPromiseState = "fulfilled");
      }
      var NativeDOMException = typeof DOMException < "u" ? DOMException : void 0;
      function isDOMExceptionConstructor(ctor) {
        if (!(typeof ctor == "function" || typeof ctor == "object"))
          return !1;
        try {
          return new ctor(), !0;
        } catch {
          return !1;
        }
      }
      function createDOMExceptionPolyfill() {
        var ctor = function(message, name) {
          this.message = message || "", this.name = name || "Error", Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
        };
        return ctor.prototype = Object.create(Error.prototype), Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: !0, configurable: !0 }), ctor;
      }
      var DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
      function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
        var reader = AcquireReadableStreamDefaultReader(source), writer = AcquireWritableStreamDefaultWriter(dest);
        source._disturbed = !0;
        var shuttingDown = !1, currentWrite = promiseResolvedWith(void 0);
        return newPromise(function(resolve, reject) {
          var abortAlgorithm;
          if (signal !== void 0) {
            if (abortAlgorithm = function() {
              var error = new DOMException$1("Aborted", "AbortError"), actions = [];
              preventAbort || actions.push(function() {
                return dest._state === "writable" ? WritableStreamAbort(dest, error) : promiseResolvedWith(void 0);
              }), preventCancel || actions.push(function() {
                return source._state === "readable" ? ReadableStreamCancel(source, error) : promiseResolvedWith(void 0);
              }), shutdownWithAction(function() {
                return Promise.all(actions.map(function(action2) {
                  return action2();
                }));
              }, !0, error);
            }, signal.aborted) {
              abortAlgorithm();
              return;
            }
            signal.addEventListener("abort", abortAlgorithm);
          }
          function pipeLoop() {
            return newPromise(function(resolveLoop, rejectLoop) {
              function next(done) {
                done ? resolveLoop() : PerformPromiseThen(pipeStep(), next, rejectLoop);
              }
              next(!1);
            });
          }
          function pipeStep() {
            return shuttingDown ? promiseResolvedWith(!0) : PerformPromiseThen(writer._readyPromise, function() {
              return newPromise(function(resolveRead, rejectRead) {
                ReadableStreamDefaultReaderRead(reader, {
                  _chunkSteps: function(chunk) {
                    currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop), resolveRead(!1);
                  },
                  _closeSteps: function() {
                    return resolveRead(!0);
                  },
                  _errorSteps: rejectRead
                });
              });
            });
          }
          if (isOrBecomesErrored(source, reader._closedPromise, function(storedError) {
            preventAbort ? shutdown(!0, storedError) : shutdownWithAction(function() {
              return WritableStreamAbort(dest, storedError);
            }, !0, storedError);
          }), isOrBecomesErrored(dest, writer._closedPromise, function(storedError) {
            preventCancel ? shutdown(!0, storedError) : shutdownWithAction(function() {
              return ReadableStreamCancel(source, storedError);
            }, !0, storedError);
          }), isOrBecomesClosed(source, reader._closedPromise, function() {
            preventClose ? shutdown() : shutdownWithAction(function() {
              return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);
            });
          }), WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
            var destClosed_1 = new TypeError("the destination writable stream closed before all data could be piped to it");
            preventCancel ? shutdown(!0, destClosed_1) : shutdownWithAction(function() {
              return ReadableStreamCancel(source, destClosed_1);
            }, !0, destClosed_1);
          }
          setPromiseIsHandledToTrue(pipeLoop());
          function waitForWritesToFinish() {
            var oldCurrentWrite = currentWrite;
            return PerformPromiseThen(currentWrite, function() {
              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0;
            });
          }
          function isOrBecomesErrored(stream, promise, action2) {
            stream._state === "errored" ? action2(stream._storedError) : uponRejection(promise, action2);
          }
          function isOrBecomesClosed(stream, promise, action2) {
            stream._state === "closed" ? action2() : uponFulfillment(promise, action2);
          }
          function shutdownWithAction(action2, originalIsError, originalError) {
            if (shuttingDown)
              return;
            shuttingDown = !0, dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest) ? uponFulfillment(waitForWritesToFinish(), doTheRest) : doTheRest();
            function doTheRest() {
              uponPromise(action2(), function() {
                return finalize(originalIsError, originalError);
              }, function(newError) {
                return finalize(!0, newError);
              });
            }
          }
          function shutdown(isError, error) {
            shuttingDown || (shuttingDown = !0, dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest) ? uponFulfillment(waitForWritesToFinish(), function() {
              return finalize(isError, error);
            }) : finalize(isError, error));
          }
          function finalize(isError, error) {
            WritableStreamDefaultWriterRelease(writer), ReadableStreamReaderGenericRelease(reader), signal !== void 0 && signal.removeEventListener("abort", abortAlgorithm), isError ? reject(error) : resolve(void 0);
          }
        });
      }
      var ReadableStreamDefaultController = function() {
        function ReadableStreamDefaultController2() {
          throw new TypeError("Illegal constructor");
        }
        return Object.defineProperty(ReadableStreamDefaultController2.prototype, "desiredSize", {
          get: function() {
            if (!IsReadableStreamDefaultController(this))
              throw defaultControllerBrandCheckException$1("desiredSize");
            return ReadableStreamDefaultControllerGetDesiredSize(this);
          },
          enumerable: !1,
          configurable: !0
        }), ReadableStreamDefaultController2.prototype.close = function() {
          if (!IsReadableStreamDefaultController(this))
            throw defaultControllerBrandCheckException$1("close");
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this))
            throw new TypeError("The stream is not in a state that permits close");
          ReadableStreamDefaultControllerClose(this);
        }, ReadableStreamDefaultController2.prototype.enqueue = function(chunk) {
          if (chunk === void 0 && (chunk = void 0), !IsReadableStreamDefaultController(this))
            throw defaultControllerBrandCheckException$1("enqueue");
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this))
            throw new TypeError("The stream is not in a state that permits enqueue");
          return ReadableStreamDefaultControllerEnqueue(this, chunk);
        }, ReadableStreamDefaultController2.prototype.error = function(e) {
          if (e === void 0 && (e = void 0), !IsReadableStreamDefaultController(this))
            throw defaultControllerBrandCheckException$1("error");
          ReadableStreamDefaultControllerError(this, e);
        }, ReadableStreamDefaultController2.prototype[CancelSteps] = function(reason) {
          ResetQueue(this);
          var result = this._cancelAlgorithm(reason);
          return ReadableStreamDefaultControllerClearAlgorithms(this), result;
        }, ReadableStreamDefaultController2.prototype[PullSteps] = function(readRequest) {
          var stream = this._controlledReadableStream;
          if (this._queue.length > 0) {
            var chunk = DequeueValue(this);
            this._closeRequested && this._queue.length === 0 ? (ReadableStreamDefaultControllerClearAlgorithms(this), ReadableStreamClose(stream)) : ReadableStreamDefaultControllerCallPullIfNeeded(this), readRequest._chunkSteps(chunk);
          } else
            ReadableStreamAddReadRequest(stream, readRequest), ReadableStreamDefaultControllerCallPullIfNeeded(this);
        }, ReadableStreamDefaultController2;
      }();
      Object.defineProperties(ReadableStreamDefaultController.prototype, {
        close: { enumerable: !0 },
        enqueue: { enumerable: !0 },
        error: { enumerable: !0 },
        desiredSize: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStreamDefaultController",
        configurable: !0
      });
      function IsReadableStreamDefaultController(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_controlledReadableStream") ? !1 : x instanceof ReadableStreamDefaultController;
      }
      function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
        var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
        if (!!shouldPull) {
          if (controller._pulling) {
            controller._pullAgain = !0;
            return;
          }
          controller._pulling = !0;
          var pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, function() {
            controller._pulling = !1, controller._pullAgain && (controller._pullAgain = !1, ReadableStreamDefaultControllerCallPullIfNeeded(controller));
          }, function(e) {
            ReadableStreamDefaultControllerError(controller, e);
          });
        }
      }
      function ReadableStreamDefaultControllerShouldCallPull(controller) {
        var stream = controller._controlledReadableStream;
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) || !controller._started)
          return !1;
        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0)
          return !0;
        var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
        return desiredSize > 0;
      }
      function ReadableStreamDefaultControllerClearAlgorithms(controller) {
        controller._pullAlgorithm = void 0, controller._cancelAlgorithm = void 0, controller._strategySizeAlgorithm = void 0;
      }
      function ReadableStreamDefaultControllerClose(controller) {
        if (!!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
          var stream = controller._controlledReadableStream;
          controller._closeRequested = !0, controller._queue.length === 0 && (ReadableStreamDefaultControllerClearAlgorithms(controller), ReadableStreamClose(stream));
        }
      }
      function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
        if (!!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
          var stream = controller._controlledReadableStream;
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0)
            ReadableStreamFulfillReadRequest(stream, chunk, !1);
          else {
            var chunkSize = void 0;
            try {
              chunkSize = controller._strategySizeAlgorithm(chunk);
            } catch (chunkSizeE) {
              throw ReadableStreamDefaultControllerError(controller, chunkSizeE), chunkSizeE;
            }
            try {
              EnqueueValueWithSize(controller, chunk, chunkSize);
            } catch (enqueueE) {
              throw ReadableStreamDefaultControllerError(controller, enqueueE), enqueueE;
            }
          }
          ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }
      }
      function ReadableStreamDefaultControllerError(controller, e) {
        var stream = controller._controlledReadableStream;
        stream._state === "readable" && (ResetQueue(controller), ReadableStreamDefaultControllerClearAlgorithms(controller), ReadableStreamError(stream, e));
      }
      function ReadableStreamDefaultControllerGetDesiredSize(controller) {
        var state = controller._controlledReadableStream._state;
        return state === "errored" ? null : state === "closed" ? 0 : controller._strategyHWM - controller._queueTotalSize;
      }
      function ReadableStreamDefaultControllerHasBackpressure(controller) {
        return !ReadableStreamDefaultControllerShouldCallPull(controller);
      }
      function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
        var state = controller._controlledReadableStream._state;
        return !controller._closeRequested && state === "readable";
      }
      function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
        controller._controlledReadableStream = stream, controller._queue = void 0, controller._queueTotalSize = void 0, ResetQueue(controller), controller._started = !1, controller._closeRequested = !1, controller._pullAgain = !1, controller._pulling = !1, controller._strategySizeAlgorithm = sizeAlgorithm, controller._strategyHWM = highWaterMark, controller._pullAlgorithm = pullAlgorithm, controller._cancelAlgorithm = cancelAlgorithm, stream._readableStreamController = controller;
        var startResult = startAlgorithm();
        uponPromise(promiseResolvedWith(startResult), function() {
          controller._started = !0, ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }, function(r) {
          ReadableStreamDefaultControllerError(controller, r);
        });
      }
      function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
        var controller = Object.create(ReadableStreamDefaultController.prototype), startAlgorithm = function() {
        }, pullAlgorithm = function() {
          return promiseResolvedWith(void 0);
        }, cancelAlgorithm = function() {
          return promiseResolvedWith(void 0);
        };
        underlyingSource.start !== void 0 && (startAlgorithm = function() {
          return underlyingSource.start(controller);
        }), underlyingSource.pull !== void 0 && (pullAlgorithm = function() {
          return underlyingSource.pull(controller);
        }), underlyingSource.cancel !== void 0 && (cancelAlgorithm = function(reason) {
          return underlyingSource.cancel(reason);
        }), SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
      }
      function defaultControllerBrandCheckException$1(name) {
        return new TypeError("ReadableStreamDefaultController.prototype." + name + " can only be used on a ReadableStreamDefaultController");
      }
      function ReadableStreamTee(stream, cloneForBranch2) {
        return IsReadableByteStreamController(stream._readableStreamController) ? ReadableByteStreamTee(stream) : ReadableStreamDefaultTee(stream);
      }
      function ReadableStreamDefaultTee(stream, cloneForBranch2) {
        var reader = AcquireReadableStreamDefaultReader(stream), reading = !1, readAgain = !1, canceled1 = !1, canceled2 = !1, reason1, reason2, branch1, branch2, resolveCancelPromise, cancelPromise = newPromise(function(resolve) {
          resolveCancelPromise = resolve;
        });
        function pullAlgorithm() {
          if (reading)
            return readAgain = !0, promiseResolvedWith(void 0);
          reading = !0;
          var readRequest = {
            _chunkSteps: function(chunk) {
              queueMicrotask(function() {
                readAgain = !1;
                var chunk1 = chunk, chunk2 = chunk;
                canceled1 || ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1), canceled2 || ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2), reading = !1, readAgain && pullAlgorithm();
              });
            },
            _closeSteps: function() {
              reading = !1, canceled1 || ReadableStreamDefaultControllerClose(branch1._readableStreamController), canceled2 || ReadableStreamDefaultControllerClose(branch2._readableStreamController), (!canceled1 || !canceled2) && resolveCancelPromise(void 0);
            },
            _errorSteps: function() {
              reading = !1;
            }
          };
          return ReadableStreamDefaultReaderRead(reader, readRequest), promiseResolvedWith(void 0);
        }
        function cancel1Algorithm(reason) {
          if (canceled1 = !0, reason1 = reason, canceled2) {
            var compositeReason = CreateArrayFromList([reason1, reason2]), cancelResult = ReadableStreamCancel(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function cancel2Algorithm(reason) {
          if (canceled2 = !0, reason2 = reason, canceled1) {
            var compositeReason = CreateArrayFromList([reason1, reason2]), cancelResult = ReadableStreamCancel(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function startAlgorithm() {
        }
        return branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm), branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm), uponRejection(reader._closedPromise, function(r) {
          ReadableStreamDefaultControllerError(branch1._readableStreamController, r), ReadableStreamDefaultControllerError(branch2._readableStreamController, r), (!canceled1 || !canceled2) && resolveCancelPromise(void 0);
        }), [branch1, branch2];
      }
      function ReadableByteStreamTee(stream) {
        var reader = AcquireReadableStreamDefaultReader(stream), reading = !1, readAgainForBranch1 = !1, readAgainForBranch2 = !1, canceled1 = !1, canceled2 = !1, reason1, reason2, branch1, branch2, resolveCancelPromise, cancelPromise = newPromise(function(resolve) {
          resolveCancelPromise = resolve;
        });
        function forwardReaderError(thisReader) {
          uponRejection(thisReader._closedPromise, function(r) {
            thisReader === reader && (ReadableByteStreamControllerError(branch1._readableStreamController, r), ReadableByteStreamControllerError(branch2._readableStreamController, r), (!canceled1 || !canceled2) && resolveCancelPromise(void 0));
          });
        }
        function pullWithDefaultReader() {
          IsReadableStreamBYOBReader(reader) && (ReadableStreamReaderGenericRelease(reader), reader = AcquireReadableStreamDefaultReader(stream), forwardReaderError(reader));
          var readRequest = {
            _chunkSteps: function(chunk) {
              queueMicrotask(function() {
                readAgainForBranch1 = !1, readAgainForBranch2 = !1;
                var chunk1 = chunk, chunk2 = chunk;
                if (!canceled1 && !canceled2)
                  try {
                    chunk2 = CloneAsUint8Array(chunk);
                  } catch (cloneE) {
                    ReadableByteStreamControllerError(branch1._readableStreamController, cloneE), ReadableByteStreamControllerError(branch2._readableStreamController, cloneE), resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                    return;
                  }
                canceled1 || ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1), canceled2 || ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2), reading = !1, readAgainForBranch1 ? pull1Algorithm() : readAgainForBranch2 && pull2Algorithm();
              });
            },
            _closeSteps: function() {
              reading = !1, canceled1 || ReadableByteStreamControllerClose(branch1._readableStreamController), canceled2 || ReadableByteStreamControllerClose(branch2._readableStreamController), branch1._readableStreamController._pendingPullIntos.length > 0 && ReadableByteStreamControllerRespond(branch1._readableStreamController, 0), branch2._readableStreamController._pendingPullIntos.length > 0 && ReadableByteStreamControllerRespond(branch2._readableStreamController, 0), (!canceled1 || !canceled2) && resolveCancelPromise(void 0);
            },
            _errorSteps: function() {
              reading = !1;
            }
          };
          ReadableStreamDefaultReaderRead(reader, readRequest);
        }
        function pullWithBYOBReader(view, forBranch2) {
          IsReadableStreamDefaultReader(reader) && (ReadableStreamReaderGenericRelease(reader), reader = AcquireReadableStreamBYOBReader(stream), forwardReaderError(reader));
          var byobBranch = forBranch2 ? branch2 : branch1, otherBranch = forBranch2 ? branch1 : branch2, readIntoRequest = {
            _chunkSteps: function(chunk) {
              queueMicrotask(function() {
                readAgainForBranch1 = !1, readAgainForBranch2 = !1;
                var byobCanceled = forBranch2 ? canceled2 : canceled1, otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (otherCanceled)
                  byobCanceled || ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                else {
                  var clonedChunk = void 0;
                  try {
                    clonedChunk = CloneAsUint8Array(chunk);
                  } catch (cloneE) {
                    ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE), ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE), resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                    return;
                  }
                  byobCanceled || ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk), ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
                }
                reading = !1, readAgainForBranch1 ? pull1Algorithm() : readAgainForBranch2 && pull2Algorithm();
              });
            },
            _closeSteps: function(chunk) {
              reading = !1;
              var byobCanceled = forBranch2 ? canceled2 : canceled1, otherCanceled = forBranch2 ? canceled1 : canceled2;
              byobCanceled || ReadableByteStreamControllerClose(byobBranch._readableStreamController), otherCanceled || ReadableByteStreamControllerClose(otherBranch._readableStreamController), chunk !== void 0 && (byobCanceled || ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk), !otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0 && ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0)), (!byobCanceled || !otherCanceled) && resolveCancelPromise(void 0);
            },
            _errorSteps: function() {
              reading = !1;
            }
          };
          ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
        }
        function pull1Algorithm() {
          if (reading)
            return readAgainForBranch1 = !0, promiseResolvedWith(void 0);
          reading = !0;
          var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
          return byobRequest === null ? pullWithDefaultReader() : pullWithBYOBReader(byobRequest._view, !1), promiseResolvedWith(void 0);
        }
        function pull2Algorithm() {
          if (reading)
            return readAgainForBranch2 = !0, promiseResolvedWith(void 0);
          reading = !0;
          var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
          return byobRequest === null ? pullWithDefaultReader() : pullWithBYOBReader(byobRequest._view, !0), promiseResolvedWith(void 0);
        }
        function cancel1Algorithm(reason) {
          if (canceled1 = !0, reason1 = reason, canceled2) {
            var compositeReason = CreateArrayFromList([reason1, reason2]), cancelResult = ReadableStreamCancel(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function cancel2Algorithm(reason) {
          if (canceled2 = !0, reason2 = reason, canceled1) {
            var compositeReason = CreateArrayFromList([reason1, reason2]), cancelResult = ReadableStreamCancel(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function startAlgorithm() {
        }
        return branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm), branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm), forwardReaderError(reader), [branch1, branch2];
      }
      function convertUnderlyingDefaultOrByteSource(source, context) {
        assertDictionary(source, context);
        var original = source, autoAllocateChunkSize = original == null ? void 0 : original.autoAllocateChunkSize, cancel = original == null ? void 0 : original.cancel, pull = original == null ? void 0 : original.pull, start = original == null ? void 0 : original.start, type = original == null ? void 0 : original.type;
        return {
          autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, context + " has member 'autoAllocateChunkSize' that"),
          cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, context + " has member 'cancel' that"),
          pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, context + " has member 'pull' that"),
          start: start === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start, original, context + " has member 'start' that"),
          type: type === void 0 ? void 0 : convertReadableStreamType(type, context + " has member 'type' that")
        };
      }
      function convertUnderlyingSourceCancelCallback(fn, original, context) {
        return assertFunction(fn, context), function(reason) {
          return promiseCall(fn, original, [reason]);
        };
      }
      function convertUnderlyingSourcePullCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return promiseCall(fn, original, [controller]);
        };
      }
      function convertUnderlyingSourceStartCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return reflectCall(fn, original, [controller]);
        };
      }
      function convertReadableStreamType(type, context) {
        if (type = "" + type, type !== "bytes")
          throw new TypeError(context + " '" + type + "' is not a valid enumeration value for ReadableStreamType");
        return type;
      }
      function convertReaderOptions(options2, context) {
        assertDictionary(options2, context);
        var mode = options2 == null ? void 0 : options2.mode;
        return {
          mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, context + " has member 'mode' that")
        };
      }
      function convertReadableStreamReaderMode(mode, context) {
        if (mode = "" + mode, mode !== "byob")
          throw new TypeError(context + " '" + mode + "' is not a valid enumeration value for ReadableStreamReaderMode");
        return mode;
      }
      function convertIteratorOptions(options2, context) {
        assertDictionary(options2, context);
        var preventCancel = options2 == null ? void 0 : options2.preventCancel;
        return { preventCancel: Boolean(preventCancel) };
      }
      function convertPipeOptions(options2, context) {
        assertDictionary(options2, context);
        var preventAbort = options2 == null ? void 0 : options2.preventAbort, preventCancel = options2 == null ? void 0 : options2.preventCancel, preventClose = options2 == null ? void 0 : options2.preventClose, signal = options2 == null ? void 0 : options2.signal;
        return signal !== void 0 && assertAbortSignal(signal, context + " has member 'signal' that"), {
          preventAbort: Boolean(preventAbort),
          preventCancel: Boolean(preventCancel),
          preventClose: Boolean(preventClose),
          signal
        };
      }
      function assertAbortSignal(signal, context) {
        if (!isAbortSignal(signal))
          throw new TypeError(context + " is not an AbortSignal.");
      }
      function convertReadableWritablePair(pair, context) {
        assertDictionary(pair, context);
        var readable = pair == null ? void 0 : pair.readable;
        assertRequiredField(readable, "readable", "ReadableWritablePair"), assertReadableStream(readable, context + " has member 'readable' that");
        var writable = pair == null ? void 0 : pair.writable;
        return assertRequiredField(writable, "writable", "ReadableWritablePair"), assertWritableStream(writable, context + " has member 'writable' that"), { readable, writable };
      }
      var ReadableStream2 = function() {
        function ReadableStream3(rawUnderlyingSource, rawStrategy) {
          rawUnderlyingSource === void 0 && (rawUnderlyingSource = {}), rawStrategy === void 0 && (rawStrategy = {}), rawUnderlyingSource === void 0 ? rawUnderlyingSource = null : assertObject(rawUnderlyingSource, "First parameter");
          var strategy = convertQueuingStrategy(rawStrategy, "Second parameter"), underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
          if (InitializeReadableStream(this), underlyingSource.type === "bytes") {
            if (strategy.size !== void 0)
              throw new RangeError("The strategy for a byte stream cannot have a size function");
            var highWaterMark = ExtractHighWaterMark(strategy, 0);
            SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
          } else {
            var sizeAlgorithm = ExtractSizeAlgorithm(strategy), highWaterMark = ExtractHighWaterMark(strategy, 1);
            SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
          }
        }
        return Object.defineProperty(ReadableStream3.prototype, "locked", {
          get: function() {
            if (!IsReadableStream(this))
              throw streamBrandCheckException$1("locked");
            return IsReadableStreamLocked(this);
          },
          enumerable: !1,
          configurable: !0
        }), ReadableStream3.prototype.cancel = function(reason) {
          return reason === void 0 && (reason = void 0), IsReadableStream(this) ? IsReadableStreamLocked(this) ? promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader")) : ReadableStreamCancel(this, reason) : promiseRejectedWith(streamBrandCheckException$1("cancel"));
        }, ReadableStream3.prototype.getReader = function(rawOptions) {
          if (rawOptions === void 0 && (rawOptions = void 0), !IsReadableStream(this))
            throw streamBrandCheckException$1("getReader");
          var options2 = convertReaderOptions(rawOptions, "First parameter");
          return options2.mode === void 0 ? AcquireReadableStreamDefaultReader(this) : AcquireReadableStreamBYOBReader(this);
        }, ReadableStream3.prototype.pipeThrough = function(rawTransform, rawOptions) {
          if (rawOptions === void 0 && (rawOptions = {}), !IsReadableStream(this))
            throw streamBrandCheckException$1("pipeThrough");
          assertRequiredArgument(rawTransform, 1, "pipeThrough");
          var transform2 = convertReadableWritablePair(rawTransform, "First parameter"), options2 = convertPipeOptions(rawOptions, "Second parameter");
          if (IsReadableStreamLocked(this))
            throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
          if (IsWritableStreamLocked(transform2.writable))
            throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
          var promise = ReadableStreamPipeTo(this, transform2.writable, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
          return setPromiseIsHandledToTrue(promise), transform2.readable;
        }, ReadableStream3.prototype.pipeTo = function(destination, rawOptions) {
          if (rawOptions === void 0 && (rawOptions = {}), !IsReadableStream(this))
            return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
          if (destination === void 0)
            return promiseRejectedWith("Parameter 1 is required in 'pipeTo'.");
          if (!IsWritableStream(destination))
            return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo's first argument must be a WritableStream"));
          var options2;
          try {
            options2 = convertPipeOptions(rawOptions, "Second parameter");
          } catch (e) {
            return promiseRejectedWith(e);
          }
          return IsReadableStreamLocked(this) ? promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream")) : IsWritableStreamLocked(destination) ? promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream")) : ReadableStreamPipeTo(this, destination, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
        }, ReadableStream3.prototype.tee = function() {
          if (!IsReadableStream(this))
            throw streamBrandCheckException$1("tee");
          var branches = ReadableStreamTee(this);
          return CreateArrayFromList(branches);
        }, ReadableStream3.prototype.values = function(rawOptions) {
          if (rawOptions === void 0 && (rawOptions = void 0), !IsReadableStream(this))
            throw streamBrandCheckException$1("values");
          var options2 = convertIteratorOptions(rawOptions, "First parameter");
          return AcquireReadableStreamAsyncIterator(this, options2.preventCancel);
        }, ReadableStream3;
      }();
      Object.defineProperties(ReadableStream2.prototype, {
        cancel: { enumerable: !0 },
        getReader: { enumerable: !0 },
        pipeThrough: { enumerable: !0 },
        pipeTo: { enumerable: !0 },
        tee: { enumerable: !0 },
        values: { enumerable: !0 },
        locked: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStream",
        configurable: !0
      }), typeof SymbolPolyfill.asyncIterator == "symbol" && Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {
        value: ReadableStream2.prototype.values,
        writable: !0,
        configurable: !0
      });
      function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
        highWaterMark === void 0 && (highWaterMark = 1), sizeAlgorithm === void 0 && (sizeAlgorithm = function() {
          return 1;
        });
        var stream = Object.create(ReadableStream2.prototype);
        InitializeReadableStream(stream);
        var controller = Object.create(ReadableStreamDefaultController.prototype);
        return SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm), stream;
      }
      function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
        var stream = Object.create(ReadableStream2.prototype);
        InitializeReadableStream(stream);
        var controller = Object.create(ReadableByteStreamController.prototype);
        return SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0), stream;
      }
      function InitializeReadableStream(stream) {
        stream._state = "readable", stream._reader = void 0, stream._storedError = void 0, stream._disturbed = !1;
      }
      function IsReadableStream(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_readableStreamController") ? !1 : x instanceof ReadableStream2;
      }
      function IsReadableStreamLocked(stream) {
        return stream._reader !== void 0;
      }
      function ReadableStreamCancel(stream, reason) {
        if (stream._disturbed = !0, stream._state === "closed")
          return promiseResolvedWith(void 0);
        if (stream._state === "errored")
          return promiseRejectedWith(stream._storedError);
        ReadableStreamClose(stream);
        var reader = stream._reader;
        reader !== void 0 && IsReadableStreamBYOBReader(reader) && (reader._readIntoRequests.forEach(function(readIntoRequest) {
          readIntoRequest._closeSteps(void 0);
        }), reader._readIntoRequests = new SimpleQueue());
        var sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
        return transformPromiseWith(sourceCancelPromise, noop);
      }
      function ReadableStreamClose(stream) {
        stream._state = "closed";
        var reader = stream._reader;
        reader !== void 0 && (defaultReaderClosedPromiseResolve(reader), IsReadableStreamDefaultReader(reader) && (reader._readRequests.forEach(function(readRequest) {
          readRequest._closeSteps();
        }), reader._readRequests = new SimpleQueue()));
      }
      function ReadableStreamError(stream, e) {
        stream._state = "errored", stream._storedError = e;
        var reader = stream._reader;
        reader !== void 0 && (defaultReaderClosedPromiseReject(reader, e), IsReadableStreamDefaultReader(reader) ? (reader._readRequests.forEach(function(readRequest) {
          readRequest._errorSteps(e);
        }), reader._readRequests = new SimpleQueue()) : (reader._readIntoRequests.forEach(function(readIntoRequest) {
          readIntoRequest._errorSteps(e);
        }), reader._readIntoRequests = new SimpleQueue()));
      }
      function streamBrandCheckException$1(name) {
        return new TypeError("ReadableStream.prototype." + name + " can only be used on a ReadableStream");
      }
      function convertQueuingStrategyInit(init, context) {
        assertDictionary(init, context);
        var highWaterMark = init == null ? void 0 : init.highWaterMark;
        return assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit"), {
          highWaterMark: convertUnrestrictedDouble(highWaterMark)
        };
      }
      var byteLengthSizeFunction = function(chunk) {
        return chunk.byteLength;
      };
      try {
        Object.defineProperty(byteLengthSizeFunction, "name", {
          value: "size",
          configurable: !0
        });
      } catch {
      }
      var ByteLengthQueuingStrategy = function() {
        function ByteLengthQueuingStrategy2(options2) {
          assertRequiredArgument(options2, 1, "ByteLengthQueuingStrategy"), options2 = convertQueuingStrategyInit(options2, "First parameter"), this._byteLengthQueuingStrategyHighWaterMark = options2.highWaterMark;
        }
        return Object.defineProperty(ByteLengthQueuingStrategy2.prototype, "highWaterMark", {
          get: function() {
            if (!IsByteLengthQueuingStrategy(this))
              throw byteLengthBrandCheckException("highWaterMark");
            return this._byteLengthQueuingStrategyHighWaterMark;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(ByteLengthQueuingStrategy2.prototype, "size", {
          get: function() {
            if (!IsByteLengthQueuingStrategy(this))
              throw byteLengthBrandCheckException("size");
            return byteLengthSizeFunction;
          },
          enumerable: !1,
          configurable: !0
        }), ByteLengthQueuingStrategy2;
      }();
      Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
        highWaterMark: { enumerable: !0 },
        size: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
        value: "ByteLengthQueuingStrategy",
        configurable: !0
      });
      function byteLengthBrandCheckException(name) {
        return new TypeError("ByteLengthQueuingStrategy.prototype." + name + " can only be used on a ByteLengthQueuingStrategy");
      }
      function IsByteLengthQueuingStrategy(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_byteLengthQueuingStrategyHighWaterMark") ? !1 : x instanceof ByteLengthQueuingStrategy;
      }
      var countSizeFunction = function() {
        return 1;
      };
      try {
        Object.defineProperty(countSizeFunction, "name", {
          value: "size",
          configurable: !0
        });
      } catch {
      }
      var CountQueuingStrategy = function() {
        function CountQueuingStrategy2(options2) {
          assertRequiredArgument(options2, 1, "CountQueuingStrategy"), options2 = convertQueuingStrategyInit(options2, "First parameter"), this._countQueuingStrategyHighWaterMark = options2.highWaterMark;
        }
        return Object.defineProperty(CountQueuingStrategy2.prototype, "highWaterMark", {
          get: function() {
            if (!IsCountQueuingStrategy(this))
              throw countBrandCheckException("highWaterMark");
            return this._countQueuingStrategyHighWaterMark;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(CountQueuingStrategy2.prototype, "size", {
          get: function() {
            if (!IsCountQueuingStrategy(this))
              throw countBrandCheckException("size");
            return countSizeFunction;
          },
          enumerable: !1,
          configurable: !0
        }), CountQueuingStrategy2;
      }();
      Object.defineProperties(CountQueuingStrategy.prototype, {
        highWaterMark: { enumerable: !0 },
        size: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
        value: "CountQueuingStrategy",
        configurable: !0
      });
      function countBrandCheckException(name) {
        return new TypeError("CountQueuingStrategy.prototype." + name + " can only be used on a CountQueuingStrategy");
      }
      function IsCountQueuingStrategy(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_countQueuingStrategyHighWaterMark") ? !1 : x instanceof CountQueuingStrategy;
      }
      function convertTransformer(original, context) {
        assertDictionary(original, context);
        var flush = original == null ? void 0 : original.flush, readableType = original == null ? void 0 : original.readableType, start = original == null ? void 0 : original.start, transform2 = original == null ? void 0 : original.transform, writableType = original == null ? void 0 : original.writableType;
        return {
          flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, context + " has member 'flush' that"),
          readableType,
          start: start === void 0 ? void 0 : convertTransformerStartCallback(start, original, context + " has member 'start' that"),
          transform: transform2 === void 0 ? void 0 : convertTransformerTransformCallback(transform2, original, context + " has member 'transform' that"),
          writableType
        };
      }
      function convertTransformerFlushCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return promiseCall(fn, original, [controller]);
        };
      }
      function convertTransformerStartCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return reflectCall(fn, original, [controller]);
        };
      }
      function convertTransformerTransformCallback(fn, original, context) {
        return assertFunction(fn, context), function(chunk, controller) {
          return promiseCall(fn, original, [chunk, controller]);
        };
      }
      var TransformStream = function() {
        function TransformStream2(rawTransformer, rawWritableStrategy, rawReadableStrategy) {
          rawTransformer === void 0 && (rawTransformer = {}), rawWritableStrategy === void 0 && (rawWritableStrategy = {}), rawReadableStrategy === void 0 && (rawReadableStrategy = {}), rawTransformer === void 0 && (rawTransformer = null);
          var writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter"), readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter"), transformer = convertTransformer(rawTransformer, "First parameter");
          if (transformer.readableType !== void 0)
            throw new RangeError("Invalid readableType specified");
          if (transformer.writableType !== void 0)
            throw new RangeError("Invalid writableType specified");
          var readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0), readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy), writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1), writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy), startPromise_resolve, startPromise = newPromise(function(resolve) {
            startPromise_resolve = resolve;
          });
          InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm), SetUpTransformStreamDefaultControllerFromTransformer(this, transformer), transformer.start !== void 0 ? startPromise_resolve(transformer.start(this._transformStreamController)) : startPromise_resolve(void 0);
        }
        return Object.defineProperty(TransformStream2.prototype, "readable", {
          get: function() {
            if (!IsTransformStream(this))
              throw streamBrandCheckException("readable");
            return this._readable;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(TransformStream2.prototype, "writable", {
          get: function() {
            if (!IsTransformStream(this))
              throw streamBrandCheckException("writable");
            return this._writable;
          },
          enumerable: !1,
          configurable: !0
        }), TransformStream2;
      }();
      Object.defineProperties(TransformStream.prototype, {
        readable: { enumerable: !0 },
        writable: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {
        value: "TransformStream",
        configurable: !0
      });
      function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
        function startAlgorithm() {
          return startPromise;
        }
        function writeAlgorithm(chunk) {
          return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
        }
        function abortAlgorithm(reason) {
          return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
        }
        function closeAlgorithm() {
          return TransformStreamDefaultSinkCloseAlgorithm(stream);
        }
        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
        function pullAlgorithm() {
          return TransformStreamDefaultSourcePullAlgorithm(stream);
        }
        function cancelAlgorithm(reason) {
          return TransformStreamErrorWritableAndUnblockWrite(stream, reason), promiseResolvedWith(void 0);
        }
        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm), stream._backpressure = void 0, stream._backpressureChangePromise = void 0, stream._backpressureChangePromise_resolve = void 0, TransformStreamSetBackpressure(stream, !0), stream._transformStreamController = void 0;
      }
      function IsTransformStream(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_transformStreamController") ? !1 : x instanceof TransformStream;
      }
      function TransformStreamError(stream, e) {
        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e), TransformStreamErrorWritableAndUnblockWrite(stream, e);
      }
      function TransformStreamErrorWritableAndUnblockWrite(stream, e) {
        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController), WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e), stream._backpressure && TransformStreamSetBackpressure(stream, !1);
      }
      function TransformStreamSetBackpressure(stream, backpressure) {
        stream._backpressureChangePromise !== void 0 && stream._backpressureChangePromise_resolve(), stream._backpressureChangePromise = newPromise(function(resolve) {
          stream._backpressureChangePromise_resolve = resolve;
        }), stream._backpressure = backpressure;
      }
      var TransformStreamDefaultController = function() {
        function TransformStreamDefaultController2() {
          throw new TypeError("Illegal constructor");
        }
        return Object.defineProperty(TransformStreamDefaultController2.prototype, "desiredSize", {
          get: function() {
            if (!IsTransformStreamDefaultController(this))
              throw defaultControllerBrandCheckException("desiredSize");
            var readableController = this._controlledTransformStream._readable._readableStreamController;
            return ReadableStreamDefaultControllerGetDesiredSize(readableController);
          },
          enumerable: !1,
          configurable: !0
        }), TransformStreamDefaultController2.prototype.enqueue = function(chunk) {
          if (chunk === void 0 && (chunk = void 0), !IsTransformStreamDefaultController(this))
            throw defaultControllerBrandCheckException("enqueue");
          TransformStreamDefaultControllerEnqueue(this, chunk);
        }, TransformStreamDefaultController2.prototype.error = function(reason) {
          if (reason === void 0 && (reason = void 0), !IsTransformStreamDefaultController(this))
            throw defaultControllerBrandCheckException("error");
          TransformStreamDefaultControllerError(this, reason);
        }, TransformStreamDefaultController2.prototype.terminate = function() {
          if (!IsTransformStreamDefaultController(this))
            throw defaultControllerBrandCheckException("terminate");
          TransformStreamDefaultControllerTerminate(this);
        }, TransformStreamDefaultController2;
      }();
      Object.defineProperties(TransformStreamDefaultController.prototype, {
        enqueue: { enumerable: !0 },
        error: { enumerable: !0 },
        terminate: { enumerable: !0 },
        desiredSize: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
        value: "TransformStreamDefaultController",
        configurable: !0
      });
      function IsTransformStreamDefaultController(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_controlledTransformStream") ? !1 : x instanceof TransformStreamDefaultController;
      }
      function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
        controller._controlledTransformStream = stream, stream._transformStreamController = controller, controller._transformAlgorithm = transformAlgorithm, controller._flushAlgorithm = flushAlgorithm;
      }
      function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {
        var controller = Object.create(TransformStreamDefaultController.prototype), transformAlgorithm = function(chunk) {
          try {
            return TransformStreamDefaultControllerEnqueue(controller, chunk), promiseResolvedWith(void 0);
          } catch (transformResultE) {
            return promiseRejectedWith(transformResultE);
          }
        }, flushAlgorithm = function() {
          return promiseResolvedWith(void 0);
        };
        transformer.transform !== void 0 && (transformAlgorithm = function(chunk) {
          return transformer.transform(chunk, controller);
        }), transformer.flush !== void 0 && (flushAlgorithm = function() {
          return transformer.flush(controller);
        }), SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
      }
      function TransformStreamDefaultControllerClearAlgorithms(controller) {
        controller._transformAlgorithm = void 0, controller._flushAlgorithm = void 0;
      }
      function TransformStreamDefaultControllerEnqueue(controller, chunk) {
        var stream = controller._controlledTransformStream, readableController = stream._readable._readableStreamController;
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController))
          throw new TypeError("Readable side is not in a state that permits enqueue");
        try {
          ReadableStreamDefaultControllerEnqueue(readableController, chunk);
        } catch (e) {
          throw TransformStreamErrorWritableAndUnblockWrite(stream, e), stream._readable._storedError;
        }
        var backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
        backpressure !== stream._backpressure && TransformStreamSetBackpressure(stream, !0);
      }
      function TransformStreamDefaultControllerError(controller, e) {
        TransformStreamError(controller._controlledTransformStream, e);
      }
      function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
        var transformPromise = controller._transformAlgorithm(chunk);
        return transformPromiseWith(transformPromise, void 0, function(r) {
          throw TransformStreamError(controller._controlledTransformStream, r), r;
        });
      }
      function TransformStreamDefaultControllerTerminate(controller) {
        var stream = controller._controlledTransformStream, readableController = stream._readable._readableStreamController;
        ReadableStreamDefaultControllerClose(readableController);
        var error = new TypeError("TransformStream terminated");
        TransformStreamErrorWritableAndUnblockWrite(stream, error);
      }
      function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
        var controller = stream._transformStreamController;
        if (stream._backpressure) {
          var backpressureChangePromise = stream._backpressureChangePromise;
          return transformPromiseWith(backpressureChangePromise, function() {
            var writable = stream._writable, state = writable._state;
            if (state === "erroring")
              throw writable._storedError;
            return TransformStreamDefaultControllerPerformTransform(controller, chunk);
          });
        }
        return TransformStreamDefaultControllerPerformTransform(controller, chunk);
      }
      function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
        return TransformStreamError(stream, reason), promiseResolvedWith(void 0);
      }
      function TransformStreamDefaultSinkCloseAlgorithm(stream) {
        var readable = stream._readable, controller = stream._transformStreamController, flushPromise = controller._flushAlgorithm();
        return TransformStreamDefaultControllerClearAlgorithms(controller), transformPromiseWith(flushPromise, function() {
          if (readable._state === "errored")
            throw readable._storedError;
          ReadableStreamDefaultControllerClose(readable._readableStreamController);
        }, function(r) {
          throw TransformStreamError(stream, r), readable._storedError;
        });
      }
      function TransformStreamDefaultSourcePullAlgorithm(stream) {
        return TransformStreamSetBackpressure(stream, !1), stream._backpressureChangePromise;
      }
      function defaultControllerBrandCheckException(name) {
        return new TypeError("TransformStreamDefaultController.prototype." + name + " can only be used on a TransformStreamDefaultController");
      }
      function streamBrandCheckException(name) {
        return new TypeError("TransformStream.prototype." + name + " can only be used on a TransformStream");
      }
      exports3.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy, exports3.CountQueuingStrategy = CountQueuingStrategy, exports3.ReadableByteStreamController = ReadableByteStreamController, exports3.ReadableStream = ReadableStream2, exports3.ReadableStreamBYOBReader = ReadableStreamBYOBReader, exports3.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest, exports3.ReadableStreamDefaultController = ReadableStreamDefaultController, exports3.ReadableStreamDefaultReader = ReadableStreamDefaultReader, exports3.TransformStream = TransformStream, exports3.TransformStreamDefaultController = TransformStreamDefaultController, exports3.WritableStream = WritableStream, exports3.WritableStreamDefaultController = WritableStreamDefaultController, exports3.WritableStreamDefaultWriter = WritableStreamDefaultWriter, Object.defineProperty(exports3, "__esModule", { value: !0 });
    });
  }
});

// node_modules/@remix-run/web-stream/src/stream.cjs
var require_stream = __commonJS({
  "node_modules/@remix-run/web-stream/src/stream.cjs"(exports2, module2) {
    module2.exports = require_ponyfill();
  }
});

// node_modules/@remix-run/web-blob/dist/src/blob.cjs
var require_blob = __commonJS({
  "node_modules/@remix-run/web-blob/dist/src/blob.cjs"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var webEncoding = require_lib3(), webStream = require_stream(), WebBlob = class Blob3 {
      constructor(init = [], options2 = {}) {
        let parts = [], size = 0;
        for (let part of init)
          if (typeof part == "string") {
            let bytes = new webEncoding.TextEncoder().encode(part);
            parts.push(bytes), size += bytes.byteLength;
          } else if (part instanceof WebBlob)
            size += part.size, parts.push(...part._parts);
          else if (part instanceof ArrayBuffer)
            parts.push(new Uint8Array(part)), size += part.byteLength;
          else if (part instanceof Uint8Array)
            parts.push(part), size += part.byteLength;
          else if (ArrayBuffer.isView(part)) {
            let { buffer: buffer2, byteOffset, byteLength } = part;
            parts.push(new Uint8Array(buffer2, byteOffset, byteLength)), size += byteLength;
          } else {
            let bytes = new webEncoding.TextEncoder().encode(String(part));
            parts.push(bytes), size += bytes.byteLength;
          }
        this._size = size, this._type = readType(options2.type), this._parts = parts, Object.defineProperties(this, {
          _size: { enumerable: !1 },
          _type: { enumerable: !1 },
          _parts: { enumerable: !1 }
        });
      }
      get type() {
        return this._type;
      }
      get size() {
        return this._size;
      }
      slice(start = 0, end = this.size, type = "") {
        let { size, _parts } = this, offset = start < 0 ? Math.max(size + start, 0) : Math.min(start, size), limit = end < 0 ? Math.max(size + end, 0) : Math.min(end, size), span = Math.max(limit - offset, 0), blob = new Blob3([], { type });
        if (span === 0)
          return blob;
        let blobSize = 0, blobParts = [];
        for (let part of _parts) {
          let { byteLength } = part;
          if (offset > 0 && byteLength <= offset)
            offset -= byteLength, limit -= byteLength;
          else {
            let chunk = part.subarray(offset, Math.min(byteLength, limit));
            if (blobParts.push(chunk), blobSize += chunk.byteLength, offset = 0, blobSize >= span)
              break;
          }
        }
        return blob._parts = blobParts, blob._size = blobSize, blob;
      }
      async arrayBuffer() {
        let buffer2 = new ArrayBuffer(this.size), bytes = new Uint8Array(buffer2), offset = 0;
        for (let part of this._parts)
          bytes.set(part, offset), offset += part.byteLength;
        return buffer2;
      }
      async text() {
        let decoder = new webEncoding.TextDecoder(), text7 = "";
        for (let part of this._parts)
          text7 += decoder.decode(part);
        return text7;
      }
      stream() {
        return new BlobStream(this._parts);
      }
      toString() {
        return "[object Blob]";
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
    }, Blob2 = WebBlob, BlobStream = class extends webStream.ReadableStream {
      constructor(chunks) {
        super(new BlobStreamController(chunks.values()), { type: "bytes" }), this._chunks = chunks;
      }
      async *[Symbol.asyncIterator](_options) {
        let reader = this.getReader();
        yield* this._chunks, reader.releaseLock();
      }
    }, BlobStreamController = class {
      constructor(chunks) {
        this.chunks = chunks;
      }
      start(controller) {
        this.work(controller), this.isWorking = !1, this.isCancelled = !1;
      }
      async work(controller) {
        let { chunks } = this;
        for (this.isWorking = !0; !this.isCancelled && (controller.desiredSize || 0) > 0; ) {
          let next = null;
          try {
            next = chunks.next();
          } catch (error) {
            controller.error(error);
            break;
          }
          next && (!next.done && !this.isCancelled ? controller.enqueue(next.value) : controller.close());
        }
        this.isWorking = !1;
      }
      pull(controller) {
        this.isWorking || this.work(controller);
      }
      cancel() {
        this.isCancelled = !0;
      }
    }, readType = (input = "") => {
      let type = String(input).toLowerCase();
      return /[^\u0020-\u007E]/.test(type) ? "" : type;
    };
    Object.defineProperty(exports2, "TextDecoder", {
      enumerable: !0,
      get: function() {
        return webEncoding.TextDecoder;
      }
    });
    Object.defineProperty(exports2, "TextEncoder", {
      enumerable: !0,
      get: function() {
        return webEncoding.TextEncoder;
      }
    });
    Object.defineProperty(exports2, "ReadableStream", {
      enumerable: !0,
      get: function() {
        return webStream.ReadableStream;
      }
    });
    exports2.Blob = Blob2;
  }
});

// node_modules/@remix-run/web-blob/dist/src/lib.node.cjs
var require_lib_node = __commonJS({
  "node_modules/@remix-run/web-blob/dist/src/lib.node.cjs"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var webEncoding = require_lib3(), webStream = require_stream(), blob = require_blob(), Blob2 = globalThis.Blob || blob.Blob;
    Object.defineProperty(exports2, "TextDecoder", {
      enumerable: !0,
      get: function() {
        return webEncoding.TextDecoder;
      }
    });
    Object.defineProperty(exports2, "TextEncoder", {
      enumerable: !0,
      get: function() {
        return webEncoding.TextEncoder;
      }
    });
    Object.defineProperty(exports2, "ReadableStream", {
      enumerable: !0,
      get: function() {
        return webStream.ReadableStream;
      }
    });
    exports2.Blob = Blob2;
  }
});

// node_modules/@remix-run/web-form-data/dist/src/form-data.cjs
var require_form_data2 = __commonJS({
  "node_modules/@remix-run/web-form-data/dist/src/form-data.cjs"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var FormData2 = class {
      constructor(form) {
        if (this._entries = [], Object.defineProperty(this, "_entries", { enumerable: !1 }), isHTMLFormElement(form))
          for (let element5 of form.elements)
            if (isSelectElement(element5))
              for (let option2 of element5.options)
                option2.selected && this.append(element5.name, option2.value);
            else
              isInputElement(element5) && (element5.checked || !["radio", "checkbox"].includes(element5.type)) && element5.name && this.append(element5.name, element5.value);
      }
      get [Symbol.toStringTag]() {
        return "FormData";
      }
      append(name, value = panic(
        new TypeError("FormData.append: requires at least 2 arguments")
      ), filename) {
        this._entries.push([name, toEntryValue(value, filename)]);
      }
      delete(name = panic(new TypeError("FormData.delete: requires string argument"))) {
        let entries = this._entries, index2 = 0;
        for (; index2 < entries.length; ) {
          let [entryName] = entries[index2];
          entryName === name ? entries.splice(index2, 1) : index2++;
        }
      }
      get(name = panic(new TypeError("FormData.get: requires string argument"))) {
        for (let [entryName, value] of this._entries)
          if (entryName === name)
            return value;
        return null;
      }
      getAll(name = panic(new TypeError("FormData.getAll: requires string argument"))) {
        let values = [];
        for (let [entryName, value] of this._entries)
          entryName === name && values.push(value);
        return values;
      }
      has(name = panic(new TypeError("FormData.has: requires string argument"))) {
        for (let [entryName] of this._entries)
          if (entryName === name)
            return !0;
        return !1;
      }
      set(name, value = panic(new TypeError("FormData.set: requires at least 2 arguments")), filename) {
        let index2 = 0, { _entries: entries } = this, entryValue = toEntryValue(value, filename), wasSet = !1;
        for (; index2 < entries.length; ) {
          let entry2 = entries[index2];
          entry2[0] === name ? wasSet ? entries.splice(index2, 1) : (wasSet = !0, entry2[1] = entryValue, index2++) : index2++;
        }
        wasSet || entries.push([name, entryValue]);
      }
      entries() {
        return this._entries.values();
      }
      *keys() {
        for (let [name] of this._entries)
          yield name;
      }
      *values() {
        for (let [_, value] of this._entries)
          yield value;
      }
      [Symbol.iterator]() {
        return this._entries.values();
      }
      forEach(fn, thisArg) {
        for (let [key2, value] of this._entries)
          fn.call(thisArg, value, key2, this);
      }
    }, isHTMLFormElement = (value) => Object.prototype.toString.call(value) === "[object HTMLFormElement]", toEntryValue = (value, filename) => {
      if (isFile2(value))
        return filename != null ? new BlobFile([value], filename, value) : value;
      if (isBlob(value))
        return new BlobFile([value], filename ?? "blob");
      if (filename != null && filename != "")
        throw new TypeError(
          "filename is only supported when value is Blob or File"
        );
      return `${value}`;
    }, isFile2 = (value) => Object.prototype.toString.call(value) === "[object File]" && typeof value.name == "string", isBlob = (value) => Object.prototype.toString.call(value) === "[object Blob]", BlobFile = class {
      constructor([blob], name, { lastModified = Date.now() } = {}) {
        this.blob = blob, this.name = name, this.lastModified = lastModified;
      }
      get webkitRelativePath() {
        return "";
      }
      get size() {
        return this.blob.size;
      }
      get type() {
        return this.blob.type;
      }
      slice(start, end, contentType) {
        return this.blob.slice(start, end, contentType);
      }
      stream() {
        return this.blob.stream();
      }
      text() {
        return this.blob.text();
      }
      arrayBuffer() {
        return this.blob.arrayBuffer();
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
    }, panic = (error) => {
      throw error;
    };
    function isSelectElement(element5) {
      return element5.tagName === "SELECT";
    }
    function isInputElement(element5) {
      return element5.tagName === "INPUT" || element5.tagName === "TEXTAREA";
    }
    exports2.FormData = FormData2;
  }
});

// node_modules/@remix-run/web-form-data/dist/src/lib.node.cjs
var require_lib_node2 = __commonJS({
  "node_modules/@remix-run/web-form-data/dist/src/lib.node.cjs"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var formData = require_form_data2(), FormData2 = formData.FormData;
    exports2.FormData = FormData2;
  }
});

// node_modules/@web3-storage/multipart-parser/cjs/src/utils.js
var require_utils3 = __commonJS({
  "node_modules/@web3-storage/multipart-parser/cjs/src/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function stringToArray(s2) {
      let utf8 = unescape(encodeURIComponent(s2));
      return Uint8Array.from(utf8, (_, i) => utf8.charCodeAt(i));
    }
    function arrayToString(a) {
      let utf8 = String.fromCharCode.apply(null, a);
      return decodeURIComponent(escape(utf8));
    }
    function mergeArrays(...arrays) {
      let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0)), offset = 0;
      for (let arr of arrays)
        out.set(arr, offset), offset += arr.length;
      return out;
    }
    function arraysEqual(a, b) {
      if (a.length !== b.length)
        return !1;
      for (let i = 0; i < a.length; i++)
        if (a[i] !== b[i])
          return !1;
      return !0;
    }
    exports2.arrayToString = arrayToString;
    exports2.arraysEqual = arraysEqual;
    exports2.mergeArrays = mergeArrays;
    exports2.stringToArray = stringToArray;
  }
});

// node_modules/@web3-storage/multipart-parser/cjs/src/search.js
var require_search = __commonJS({
  "node_modules/@web3-storage/multipart-parser/cjs/src/search.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var utils = require_utils3();
    function coerce(a) {
      return a instanceof Uint8Array ? (index2) => a[index2] : a;
    }
    function jsmemcmp(buf1, pos1, buf2, pos2, len) {
      let fn1 = coerce(buf1), fn2 = coerce(buf2);
      for (let i = 0; i < len; ++i)
        if (fn1(pos1 + i) !== fn2(pos2 + i))
          return !1;
      return !0;
    }
    function createOccurenceTable(s2) {
      let table2 = new Array(256).fill(s2.length);
      if (s2.length > 1)
        for (let i = 0; i < s2.length - 1; i++)
          table2[s2[i]] = s2.length - 1 - i;
      return table2;
    }
    var MATCH = Symbol("Match"), StreamSearch = class {
      constructor(needle) {
        this._lookbehind = new Uint8Array(), typeof needle == "string" ? this._needle = needle = utils.stringToArray(needle) : this._needle = needle, this._lastChar = needle[needle.length - 1], this._occ = createOccurenceTable(needle);
      }
      feed(chunk) {
        let pos = 0, tokens, allTokens = [];
        for (; pos !== chunk.length; )
          [pos, ...tokens] = this._feed(chunk, pos), allTokens.push(...tokens);
        return allTokens;
      }
      end() {
        let tail = this._lookbehind;
        return this._lookbehind = new Uint8Array(), tail;
      }
      _feed(data, bufPos) {
        let tokens = [], pos = -this._lookbehind.length;
        if (pos < 0) {
          for (; pos < 0 && pos <= data.length - this._needle.length; ) {
            let ch = this._charAt(data, pos + this._needle.length - 1);
            if (ch === this._lastChar && this._memcmp(data, pos, this._needle.length - 1))
              return pos > -this._lookbehind.length && tokens.push(this._lookbehind.slice(0, this._lookbehind.length + pos)), tokens.push(MATCH), this._lookbehind = new Uint8Array(), [
                pos + this._needle.length,
                ...tokens
              ];
            pos += this._occ[ch];
          }
          if (pos < 0)
            for (; pos < 0 && !this._memcmp(data, pos, data.length - pos); )
              pos++;
          if (pos >= 0)
            tokens.push(this._lookbehind), this._lookbehind = new Uint8Array();
          else {
            let bytesToCutOff = this._lookbehind.length + pos;
            return bytesToCutOff > 0 && (tokens.push(this._lookbehind.slice(0, bytesToCutOff)), this._lookbehind = this._lookbehind.slice(bytesToCutOff)), this._lookbehind = Uint8Array.from(new Array(this._lookbehind.length + data.length), (_, i) => this._charAt(data, i - this._lookbehind.length)), [
              data.length,
              ...tokens
            ];
          }
        }
        for (pos += bufPos; pos <= data.length - this._needle.length; ) {
          let ch = data[pos + this._needle.length - 1];
          if (ch === this._lastChar && data[pos] === this._needle[0] && jsmemcmp(this._needle, 0, data, pos, this._needle.length - 1))
            return pos > bufPos && tokens.push(data.slice(bufPos, pos)), tokens.push(MATCH), [
              pos + this._needle.length,
              ...tokens
            ];
          pos += this._occ[ch];
        }
        if (pos < data.length) {
          for (; pos < data.length && (data[pos] !== this._needle[0] || !jsmemcmp(data, pos, this._needle, 0, data.length - pos)); )
            ++pos;
          pos < data.length && (this._lookbehind = data.slice(pos));
        }
        return pos > 0 && tokens.push(data.slice(bufPos, pos < data.length ? pos : data.length)), [
          data.length,
          ...tokens
        ];
      }
      _charAt(data, pos) {
        return pos < 0 ? this._lookbehind[this._lookbehind.length + pos] : data[pos];
      }
      _memcmp(data, pos, len) {
        return jsmemcmp(this._charAt.bind(this, data), pos, this._needle, 0, len);
      }
    }, ReadableStreamSearch = class {
      constructor(needle, _readableStream) {
        this._readableStream = _readableStream, this._search = new StreamSearch(needle);
      }
      async *[Symbol.asyncIterator]() {
        let reader = this._readableStream.getReader();
        try {
          for (; ; ) {
            let result = await reader.read();
            if (result.done)
              break;
            yield* this._search.feed(result.value);
          }
          let tail = this._search.end();
          tail.length && (yield tail);
        } finally {
          reader.releaseLock();
        }
      }
    }, EOQ = Symbol("End of Queue"), QueueableStreamSearch = class {
      constructor(needle) {
        this._chunksQueue = [], this._closed = !1, this._search = new StreamSearch(needle);
      }
      push(...chunks) {
        if (this._closed)
          throw new Error("cannot call push after close");
        this._chunksQueue.push(...chunks), this._notify && this._notify();
      }
      close() {
        if (this._closed)
          throw new Error("close was already called");
        this._closed = !0, this._chunksQueue.push(EOQ), this._notify && this._notify();
      }
      async *[Symbol.asyncIterator]() {
        for (; ; ) {
          let chunk;
          for (; !(chunk = this._chunksQueue.shift()); )
            await new Promise((resolve) => this._notify = resolve), this._notify = void 0;
          if (chunk === EOQ)
            break;
          yield* this._search.feed(chunk);
        }
        let tail = this._search.end();
        tail.length && (yield tail);
      }
    };
    function splitChunks(chunks, needle) {
      let search3 = new StreamSearch(needle), outchunks = [[]];
      for (let chunk of chunks)
        for (let token of search3.feed(chunk))
          token === MATCH ? outchunks.push([]) : outchunks[outchunks.length - 1].push(token);
      let end = search3.end();
      return outchunks[outchunks.length - 1].push(end), outchunks.map((chunks2) => utils.mergeArrays(...chunks2));
    }
    function split(buf, needle) {
      return splitChunks([buf], needle);
    }
    async function* chunksIterator(iter) {
      let chunks = [];
      for await (let value of iter)
        value === MATCH ? (yield chunks, chunks = []) : chunks.push(value);
      yield chunks;
    }
    async function* stringIterator(iter) {
      for await (let chunk of chunksIterator(iter))
        yield chunk.map(utils.arrayToString).join("");
    }
    async function allStrings(iter) {
      let segments = [];
      for await (let value of stringIterator(iter))
        segments.push(value);
      return segments;
    }
    async function* arrayIterator(iter) {
      for await (let chunk of chunksIterator(iter))
        yield utils.mergeArrays(...chunk);
    }
    exports2.MATCH = MATCH;
    exports2.QueueableStreamSearch = QueueableStreamSearch;
    exports2.ReadableStreamSearch = ReadableStreamSearch;
    exports2.StreamSearch = StreamSearch;
    exports2.allStrings = allStrings;
    exports2.arrayIterator = arrayIterator;
    exports2.chunksIterator = chunksIterator;
    exports2.split = split;
    exports2.splitChunks = splitChunks;
    exports2.stringIterator = stringIterator;
  }
});

// node_modules/@web3-storage/multipart-parser/cjs/src/index.js
var require_src2 = __commonJS({
  "node_modules/@web3-storage/multipart-parser/cjs/src/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var search3 = require_search(), utils = require_utils3(), mergeArrays2 = Function.prototype.apply.bind(utils.mergeArrays, void 0), dash2 = utils.stringToArray("--"), CRLF = utils.stringToArray(`\r
`);
    function parseContentDisposition(header) {
      let parts = header.split(";").map((part) => part.trim());
      if (parts.shift() !== "form-data")
        throw new Error('malformed content-disposition header: missing "form-data" in `' + JSON.stringify(parts) + "`");
      let out = {};
      for (let part of parts) {
        let kv = part.split("=", 2);
        if (kv.length !== 2)
          throw new Error("malformed content-disposition header: key-value pair not found - " + part + " in `" + header + "`");
        let [name, value] = kv;
        if (value[0] === '"' && value[value.length - 1] === '"')
          out[name] = value.slice(1, -1).replace(/\\"/g, '"');
        else if (value[0] !== '"' && value[value.length - 1] !== '"')
          out[name] = value;
        else if (value[0] === '"' && value[value.length - 1] !== '"' || value[0] !== '"' && value[value.length - 1] === '"')
          throw new Error("malformed content-disposition header: mismatched quotations in `" + header + "`");
      }
      if (!out.name)
        throw new Error("malformed content-disposition header: missing field name in `" + header + "`");
      return out;
    }
    function parsePartHeaders(lines) {
      let entries = [], disposition = !1, line;
      for (; typeof (line = lines.shift()) < "u"; ) {
        let colon = line.indexOf(":");
        if (colon === -1)
          throw new Error("malformed multipart-form header: missing colon");
        let header = line.slice(0, colon).trim().toLowerCase(), value = line.slice(colon + 1).trim();
        switch (header) {
          case "content-disposition":
            disposition = !0, entries.push(...Object.entries(parseContentDisposition(value)));
            break;
          case "content-type":
            entries.push([
              "contentType",
              value
            ]);
        }
      }
      if (!disposition)
        throw new Error("malformed multipart-form header: missing content-disposition");
      return Object.fromEntries(entries);
    }
    async function readHeaderLines(it, needle) {
      let firstChunk = !0, lastTokenWasMatch = !1, headerLines = [[]], crlfSearch = new search3.StreamSearch(CRLF);
      for (; ; ) {
        let result = await it.next();
        if (result.done)
          throw new Error("malformed multipart-form data: unexpected end of stream");
        if (firstChunk && result.value !== search3.MATCH && utils.arraysEqual(result.value.slice(0, 2), dash2))
          return [
            void 0,
            new Uint8Array()
          ];
        let chunk;
        if (result.value !== search3.MATCH)
          chunk = result.value;
        else if (!lastTokenWasMatch)
          chunk = needle;
        else
          throw new Error("malformed multipart-form data: unexpected boundary");
        if (!chunk.length)
          continue;
        firstChunk && (firstChunk = !1);
        let tokens = crlfSearch.feed(chunk);
        for (let [i, token] of tokens.entries()) {
          let isMatch = token === search3.MATCH;
          if (!(!isMatch && !token.length)) {
            if (lastTokenWasMatch && isMatch)
              return tokens.push(crlfSearch.end()), [
                headerLines.filter((chunks) => chunks.length).map(mergeArrays2).map(utils.arrayToString),
                utils.mergeArrays(...tokens.slice(i + 1).map((token2) => token2 === search3.MATCH ? CRLF : token2))
              ];
            (lastTokenWasMatch = isMatch) ? headerLines.push([]) : headerLines[headerLines.length - 1].push(token);
          }
        }
      }
    }
    async function* streamMultipart(body3, boundary) {
      let needle = utils.mergeArrays(dash2, utils.stringToArray(boundary)), it = new search3.ReadableStreamSearch(needle, body3)[Symbol.asyncIterator]();
      for (; ; ) {
        let result = await it.next();
        if (result.done)
          return;
        if (result.value === search3.MATCH)
          break;
      }
      let crlfSearch = new search3.StreamSearch(CRLF);
      for (; ; ) {
        let feedChunk = function(chunk) {
          let chunks = [];
          for (let token of crlfSearch.feed(chunk))
            trailingCRLF && chunks.push(CRLF), (trailingCRLF = token === search3.MATCH) || chunks.push(token);
          return utils.mergeArrays(...chunks);
        }, [headerLines, tail] = await readHeaderLines(it, needle);
        if (!headerLines)
          return;
        async function nextToken() {
          let result = await it.next();
          if (result.done)
            throw new Error("malformed multipart-form data: unexpected end of stream");
          return result;
        }
        let trailingCRLF = !1, done = !1;
        async function nextChunk() {
          let result = await nextToken(), chunk;
          if (result.value !== search3.MATCH)
            chunk = result.value;
          else if (!trailingCRLF)
            chunk = CRLF;
          else
            return done = !0, { value: crlfSearch.end() };
          return { value: feedChunk(chunk) };
        }
        let bufferedChunks = [{ value: feedChunk(tail) }];
        for (yield {
          ...parsePartHeaders(headerLines),
          data: {
            [Symbol.asyncIterator]() {
              return this;
            },
            async next() {
              for (; ; ) {
                let result = bufferedChunks.shift();
                if (!result)
                  break;
                if (result.value.length > 0)
                  return result;
              }
              for (; ; ) {
                if (done)
                  return {
                    done,
                    value: void 0
                  };
                let result = await nextChunk();
                if (result.value.length > 0)
                  return result;
              }
            }
          }
        }; !done; )
          bufferedChunks.push(await nextChunk());
      }
    }
    async function* iterateMultipart(body3, boundary) {
      for await (let part of streamMultipart(body3, boundary)) {
        let chunks = [];
        for await (let chunk of part.data)
          chunks.push(chunk);
        yield {
          ...part,
          data: utils.mergeArrays(...chunks)
        };
      }
    }
    exports2.iterateMultipart = iterateMultipart;
    exports2.streamMultipart = streamMultipart;
  }
});

// node_modules/@remix-run/web-fetch/dist/lib.node.cjs
var require_lib_node3 = __commonJS({
  "node_modules/@remix-run/web-fetch/dist/lib.node.cjs"(exports2, module2) {
    "use strict";
    var http7 = require("http"), https = require("https"), zlib = require("zlib"), fs4 = require("fs"), mime = require_mrmime(), dataUriToBuffer = require_src(), Stream = require("stream"), util = require("util"), webBlob = require_lib_node(), webFormData = require_lib_node2(), crypto = require("crypto"), multipartParser = require_src2(), url = require("url"), abortController = require_abort_controller(), FetchBaseError = class extends Error {
      constructor(message, type) {
        super(message), Error.captureStackTrace(this, this.constructor), this.type = type;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    }, FetchError = class extends FetchBaseError {
      constructor(message, type, systemError) {
        super(message, type), systemError && (this.code = this.errno = systemError.code, this.erroredSysCall = systemError.syscall);
      }
    }, NAME = Symbol.toStringTag, isURLSearchParameters = (object) => typeof object == "object" && typeof object.append == "function" && typeof object.delete == "function" && typeof object.get == "function" && typeof object.getAll == "function" && typeof object.has == "function" && typeof object.set == "function" && typeof object.sort == "function" && object[NAME] === "URLSearchParams", isBlob = (object) => typeof object == "object" && typeof object.arrayBuffer == "function" && typeof object.type == "string" && typeof object.stream == "function" && typeof object.constructor == "function" && /^(Blob|File)$/.test(object[NAME]);
    function isFormData(object) {
      return typeof object == "object" && typeof object.append == "function" && typeof object.set == "function" && typeof object.get == "function" && typeof object.getAll == "function" && typeof object.delete == "function" && typeof object.keys == "function" && typeof object.values == "function" && typeof object.entries == "function" && typeof object.constructor == "function" && object[NAME] === "FormData";
    }
    var isMultipartFormDataStream = (value) => value instanceof Stream && typeof value.getBoundary == "function" && typeof value.hasKnownLength == "function" && typeof value.getLengthSync == "function", isAbortSignal = (object) => typeof object == "object" && (object[NAME] === "AbortSignal" || object[NAME] === "EventTarget"), isReadableStream = (value) => typeof value == "object" && typeof value.getReader == "function" && typeof value.cancel == "function" && typeof value.tee == "function", isIterable = (value) => value && Symbol.iterator in value, carriage = `\r
`, dashes = "-".repeat(2), carriageLength = Buffer.byteLength(carriage), getFooter = (boundary) => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;
    function getHeader(boundary, name, field) {
      let header = "";
      if (header += `${dashes}${boundary}${carriage}`, header += `Content-Disposition: form-data; name="${name}"`, isBlob(field)) {
        let { name: name2 = "blob", type } = field;
        header += `; filename="${name2}"${carriage}`, header += `Content-Type: ${type || "application/octet-stream"}`;
      }
      return `${header}${carriage.repeat(2)}`;
    }
    var getBoundary = () => crypto.randomBytes(8).toString("hex");
    async function* formDataIterator(form, boundary) {
      let encoder2 = new TextEncoder();
      for (let [name, value] of form)
        yield encoder2.encode(getHeader(boundary, name, value)), isBlob(value) ? yield* value.stream() : yield encoder2.encode(value), yield encoder2.encode(carriage);
      yield encoder2.encode(getFooter(boundary));
    }
    function getFormDataLength(form, boundary) {
      let length = 0;
      for (let [name, value] of form)
        length += Buffer.byteLength(getHeader(boundary, name, value)), isBlob(value) ? length += value.size : length += Buffer.byteLength(String(value)), length += carriageLength;
      return length += Buffer.byteLength(getFooter(boundary)), length;
    }
    var toFormData = async (source) => {
      let { body: body3, headers } = source, contentType = (headers == null ? void 0 : headers.get("Content-Type")) || "";
      if (contentType.startsWith("application/x-www-form-urlencoded") && body3 != null) {
        let form = new webFormData.FormData(), bodyText = await source.text();
        return new URLSearchParams(bodyText).forEach((v, k) => form.append(k, v)), form;
      }
      let [type, boundary] = contentType.split(/\s*;\s*boundary=/);
      if (type === "multipart/form-data" && boundary != null && body3 != null) {
        let form = new webFormData.FormData(), parts = multipartParser.iterateMultipart(body3, boundary);
        for await (let { name, data, filename, contentType: contentType2 } of parts)
          filename ? form.append(name, new File([data], filename, { type: contentType2 })) : form.append(name, new TextDecoder().decode(data), filename);
        return form;
      } else
        throw new TypeError("Could not parse content as FormData.");
    }, encoder = new util.TextEncoder(), decoder = new util.TextDecoder(), encode = (text7) => encoder.encode(text7), decode2 = (bytes) => decoder.decode(bytes), { readableHighWaterMark } = new Stream.Readable(), INTERNALS$2 = Symbol("Body internals"), Body = class {
      constructor(body3, {
        size = 0
      } = {}) {
        let state = {
          body: null,
          type: null,
          size: null,
          boundary: null,
          disturbed: !1,
          error: null
        };
        if (this[INTERNALS$2] = state, body3 === null)
          state.body = null, state.size = 0;
        else if (isURLSearchParameters(body3)) {
          let bytes = encode(body3.toString());
          state.body = fromBytes(bytes), state.size = bytes.byteLength, state.type = "application/x-www-form-urlencoded;charset=UTF-8";
        } else if (isBlob(body3))
          state.size = body3.size, state.type = body3.type || null, state.body = body3.stream();
        else if (body3 instanceof Uint8Array)
          state.body = fromBytes(body3), state.size = body3.byteLength;
        else if (util.types.isAnyArrayBuffer(body3)) {
          let bytes = new Uint8Array(body3);
          state.body = fromBytes(bytes), state.size = bytes.byteLength;
        } else if (ArrayBuffer.isView(body3)) {
          let bytes = new Uint8Array(body3.buffer, body3.byteOffset, body3.byteLength);
          state.body = fromBytes(bytes), state.size = bytes.byteLength;
        } else if (isReadableStream(body3))
          state.body = body3;
        else if (isFormData(body3)) {
          let boundary = `NodeFetchFormDataBoundary${getBoundary()}`;
          state.type = `multipart/form-data; boundary=${boundary}`, state.size = getFormDataLength(body3, boundary), state.body = fromAsyncIterable(formDataIterator(body3, boundary));
        } else if (isMultipartFormDataStream(body3))
          state.type = `multipart/form-data; boundary=${body3.getBoundary()}`, state.size = body3.hasKnownLength() ? body3.getLengthSync() : null, state.body = fromStream(body3);
        else if (body3 instanceof Stream)
          state.body = fromStream(body3);
        else {
          let bytes = encode(String(body3));
          state.type = "text/plain;charset=UTF-8", state.size = bytes.byteLength, state.body = fromBytes(bytes);
        }
        this.size = size;
      }
      get headers() {
        throw new TypeError("'get headers' called on an object that does not implements interface.");
      }
      get body() {
        return this[INTERNALS$2].body;
      }
      get bodyUsed() {
        return this[INTERNALS$2].disturbed;
      }
      async arrayBuffer() {
        let { buffer: buffer2, byteOffset, byteLength } = await consumeBody(this);
        return buffer2.slice(byteOffset, byteOffset + byteLength);
      }
      async blob() {
        let ct = this.headers && this.headers.get("content-type") || this[INTERNALS$2].body && this[INTERNALS$2].type || "", buf = await consumeBody(this);
        return new webBlob.Blob([buf], {
          type: ct
        });
      }
      async json() {
        return JSON.parse(await this.text());
      }
      async text() {
        let buffer2 = await consumeBody(this);
        return decode2(buffer2);
      }
      async formData() {
        return toFormData(this);
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: !0 },
      bodyUsed: { enumerable: !0 },
      arrayBuffer: { enumerable: !0 },
      blob: { enumerable: !0 },
      json: { enumerable: !0 },
      text: { enumerable: !0 },
      formData: { enumerable: !0 }
    });
    async function consumeBody(data) {
      let state = data[INTERNALS$2];
      if (state.disturbed)
        throw new TypeError(`body used already for: ${data.url}`);
      if (state.disturbed = !0, state.error)
        throw state.error;
      let { body: body3 } = state;
      if (body3 === null)
        return new Uint8Array(0);
      let [buffer2, chunks, limit] = data.size > 0 ? [new Uint8Array(data.size), [], data.size] : [null, [], 1 / 0], offset = 0, source = streamIterator(body3);
      try {
        for await (let chunk of source) {
          let bytes = chunk instanceof Uint8Array ? chunk : Buffer.from(chunk);
          if (offset + bytes.byteLength > limit) {
            let error = new FetchError(`content size at ${data.url} over limit: ${limit}`, "max-size");
            throw source.throw(error), error;
          } else
            buffer2 ? buffer2.set(bytes, offset) : chunks.push(bytes);
          offset += bytes.byteLength;
        }
        if (buffer2) {
          if (offset < buffer2.byteLength)
            throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`, "premature-close");
          return buffer2;
        } else
          return writeBytes(new Uint8Array(offset), chunks);
      } catch (error) {
        if (error instanceof FetchBaseError)
          throw error;
        if (error && error.name === "AbortError")
          throw error;
        {
          let e = error;
          throw new FetchError(`Invalid response body while trying to fetch ${data.url}: ${e.message}`, "system", e);
        }
      }
    }
    var clone = (instance) => {
      let { body: body3 } = instance;
      if (instance.bodyUsed)
        throw new Error("cannot clone body after it is used");
      if (!body3)
        return null;
      let [left, right] = body3.tee();
      return instance[INTERNALS$2].body = left, right;
    }, extractContentType = (source) => source[INTERNALS$2].type, getTotalBytes = (source) => source[INTERNALS$2].size, writeToStream = (dest, { body: body3 }) => {
      body3 === null ? dest.end() : Stream.Readable.from(streamIterator(body3)).pipe(dest);
    }, StreamIterableIterator = class {
      constructor(stream) {
        this.stream = stream, this.reader = null;
      }
      [Symbol.asyncIterator]() {
        return this;
      }
      getReader() {
        if (this.reader)
          return this.reader;
        let reader = this.stream.getReader();
        return this.reader = reader, reader;
      }
      next() {
        return this.getReader().read();
      }
      async return() {
        return this.reader && await this.reader.cancel(), { done: !0, value: void 0 };
      }
      async throw(error) {
        return await this.getReader().cancel(error), { done: !0, value: void 0 };
      }
    }, streamIterator = (stream) => new StreamIterableIterator(stream), writeBytes = (buffer2, chunks) => {
      let offset = 0;
      for (let chunk of chunks)
        buffer2.set(chunk, offset), offset += chunk.byteLength;
      return buffer2;
    }, fromBytes = (bytes) => new webBlob.ReadableStream({
      start(controller) {
        controller.enqueue(bytes), controller.close();
      }
    }), fromAsyncIterable = (content3) => new webBlob.ReadableStream(new AsyncIterablePump(content3)), AsyncIterablePump = class {
      constructor(source) {
        this.source = source[Symbol.asyncIterator]();
      }
      async pull(controller) {
        try {
          for (; controller.desiredSize || 0 > 0; ) {
            let next = await this.source.next();
            if (next.done) {
              controller.close();
              break;
            } else
              controller.enqueue(next.value);
          }
        } catch (error) {
          controller.error(error);
        }
      }
      cancel(reason) {
        reason ? typeof this.source.throw == "function" ? this.source.throw(reason) : typeof this.source.return == "function" && this.source.return() : typeof this.source.return == "function" && this.source.return();
      }
    }, fromStream = (source) => {
      let pump = new StreamPump(source);
      return new webBlob.ReadableStream(pump, pump);
    }, StreamPump = class {
      constructor(stream) {
        this.highWaterMark = stream.readableHighWaterMark || readableHighWaterMark, this.accumalatedSize = 0, this.stream = stream, this.enqueue = this.enqueue.bind(this), this.error = this.error.bind(this), this.close = this.close.bind(this);
      }
      size(chunk) {
        return (chunk == null ? void 0 : chunk.byteLength) || 0;
      }
      start(controller) {
        this.controller = controller, this.stream.on("data", this.enqueue), this.stream.once("error", this.error), this.stream.once("end", this.close), this.stream.once("close", this.close);
      }
      pull() {
        this.resume();
      }
      cancel(reason) {
        this.stream.destroy && this.stream.destroy(reason), this.stream.off("data", this.enqueue), this.stream.off("error", this.error), this.stream.off("end", this.close), this.stream.off("close", this.close);
      }
      enqueue(chunk) {
        if (this.controller)
          try {
            let bytes = chunk instanceof Uint8Array ? chunk : Buffer.from(chunk), available = (this.controller.desiredSize || 0) - bytes.byteLength;
            this.controller.enqueue(bytes), available <= 0 && this.pause();
          } catch {
            this.controller.error(new Error("Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object")), this.cancel();
          }
      }
      pause() {
        this.stream.pause && this.stream.pause();
      }
      resume() {
        this.stream.readable && this.stream.resume && this.stream.resume();
      }
      close() {
        this.controller && (this.controller.close(), delete this.controller);
      }
      error(error) {
        this.controller && (this.controller.error(error), delete this.controller);
      }
    }, validators = http7, validateHeaderName = typeof validators.validateHeaderName == "function" ? validators.validateHeaderName : (name) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name)) {
        let err = new TypeError(`Header name must be a valid HTTP token [${name}]`);
        throw Object.defineProperty(err, "code", { value: "ERR_INVALID_HTTP_TOKEN" }), err;
      }
    }, validateHeaderValue = typeof validators.validateHeaderValue == "function" ? validators.validateHeaderValue : (name, value) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
        let err = new TypeError(`Invalid character in header content ["${name}"]`);
        throw Object.defineProperty(err, "code", { value: "ERR_INVALID_CHAR" }), err;
      }
    }, Headers2 = class extends URLSearchParams {
      constructor(init) {
        let result = [];
        if (init instanceof Headers2) {
          let raw3 = init.raw();
          for (let [name, values] of Object.entries(raw3))
            result.push(...values.map((value) => [name, value]));
        } else if (init != null)
          if (isIterable(init))
            result = [...init].map((pair) => {
              if (typeof pair != "object" || util.types.isBoxedPrimitive(pair))
                throw new TypeError("Each header pair must be an iterable object");
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2)
                throw new TypeError("Each header pair must be a name/value tuple");
              return [...pair];
            });
          else if (typeof init == "object" && init !== null)
            result.push(...Object.entries(init));
          else
            throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        return result = result.length > 0 ? result.map(([name, value]) => (validateHeaderName(name), validateHeaderValue(name, String(value)), [String(name).toLowerCase(), String(value)])) : [], super(result), new Proxy(this, {
          get(target, p2, receiver) {
            switch (p2) {
              case "append":
              case "set":
                return (name, value) => (validateHeaderName(name), validateHeaderValue(name, String(value)), URLSearchParams.prototype[p2].call(
                  receiver,
                  String(name).toLowerCase(),
                  String(value)
                ));
              case "delete":
              case "has":
              case "getAll":
                return (name) => (validateHeaderName(name), URLSearchParams.prototype[p2].call(
                  receiver,
                  String(name).toLowerCase()
                ));
              case "keys":
                return () => (target.sort(), new Set(URLSearchParams.prototype.keys.call(target)).keys());
              default:
                return Reflect.get(target, p2, receiver);
            }
          }
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(name) {
        let values = this.getAll(name);
        if (values.length === 0)
          return null;
        let value = values.join(", ");
        return /^content-encoding$/i.test(name) && (value = value.toLowerCase()), value;
      }
      forEach(callback, thisArg = void 0) {
        for (let name of this.keys())
          Reflect.apply(callback, thisArg, [this.get(name), name, this]);
      }
      *values() {
        for (let name of this.keys())
          yield this.get(name);
      }
      *entries() {
        for (let name of this.keys())
          yield [name, this.get(name)];
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((result, key2) => (result[key2] = this.getAll(key2), result), {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((result, key2) => {
          let values = this.getAll(key2);
          return key2 === "host" ? result[key2] = values[0] : result[key2] = values.length > 1 ? values : values[0], result;
        }, {});
      }
    };
    Object.defineProperties(
      Headers2.prototype,
      ["get", "entries", "forEach", "values"].reduce((result, property) => (result[property] = { enumerable: !0 }, result), {})
    );
    function fromRawHeaders(headers = []) {
      return new Headers2(
        headers.reduce((result, value, index2, array) => (index2 % 2 === 0 && result.push(array.slice(index2, index2 + 2)), result), []).filter(([name, value]) => {
          try {
            return validateHeaderName(name), validateHeaderValue(name, String(value)), !0;
          } catch {
            return !1;
          }
        })
      );
    }
    var redirectStatus = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), isRedirect = (code3) => redirectStatus.has(code3), INTERNALS$1 = Symbol("Response internals"), Response5 = class extends Body {
      constructor(body3 = null, options2 = {}) {
        super(body3, options2);
        let status = options2.status || 200, headers = new Headers2(options2.headers);
        if (body3 !== null && !headers.has("Content-Type")) {
          let contentType = extractContentType(this);
          contentType && headers.append("Content-Type", contentType);
        }
        this[INTERNALS$1] = {
          url: options2.url,
          status,
          statusText: options2.statusText || "",
          headers,
          counter: options2.counter || 0,
          highWaterMark: options2.highWaterMark
        };
      }
      get type() {
        return "default";
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      get highWaterMark() {
        return this[INTERNALS$1].highWaterMark;
      }
      clone() {
        return new Response5(clone(this), {
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          size: this.size
        });
      }
      static redirect(url2, status = 302) {
        if (!isRedirect(status))
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        return new Response5(null, {
          headers: {
            location: new URL(url2).toString()
          },
          status
        });
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response5.prototype, {
      url: { enumerable: !0 },
      status: { enumerable: !0 },
      ok: { enumerable: !0 },
      redirected: { enumerable: !0 },
      statusText: { enumerable: !0 },
      headers: { enumerable: !0 },
      clone: { enumerable: !0 }
    });
    var getSearch = (parsedURL) => {
      if (parsedURL.search)
        return parsedURL.search;
      let lastOffset = parsedURL.href.length - 1, hash = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash.length] === "?" ? "?" : "";
    }, INTERNALS = Symbol("Request internals"), isRequest = (object) => typeof object == "object" && typeof object[INTERNALS] == "object", Request2 = class extends Body {
      constructor(info, init = {}) {
        let parsedURL, settings;
        isRequest(info) ? (parsedURL = new URL(info.url), settings = info) : (parsedURL = new URL(info), settings = {});
        let method = init.method || settings.method || "GET";
        method = method.toUpperCase();
        let inputBody = init.body != null ? init.body : isRequest(info) && info.body !== null ? clone(info) : null;
        if (inputBody != null && (method === "GET" || method === "HEAD"))
          throw new TypeError("Request with GET/HEAD method cannot have body");
        super(inputBody, {
          size: init.size || settings.size || 0
        });
        let input = settings, headers = new Headers2(init.headers || input.headers || {});
        if (inputBody !== null && !headers.has("Content-Type")) {
          let contentType = extractContentType(this);
          contentType && headers.append("Content-Type", contentType);
        }
        let signal = "signal" in init ? init.signal : isRequest(input) ? input.signal : null;
        if (signal != null && !isAbortSignal(signal))
          throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        if (!signal) {
          let AbortControllerConstructor = typeof AbortController < "u" ? AbortController : abortController.AbortController;
          signal = new AbortControllerConstructor().signal;
        }
        this[INTERNALS] = {
          method,
          redirect: init.redirect || input.redirect || "follow",
          headers,
          credentials: init.credentials || "same-origin",
          parsedURL,
          signal: signal || null
        }, this.keepalive, this.follow = init.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init.follow, this.compress = init.compress === void 0 ? input.compress === void 0 ? !0 : input.compress : init.compress, this.counter = init.counter || input.counter || 0, this.agent = init.agent || input.agent, this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384, this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || !1;
      }
      get cache() {
        return "default";
      }
      get credentials() {
        return this[INTERNALS].credentials;
      }
      get destination() {
        return "";
      }
      get integrity() {
        return "";
      }
      get mode() {
        return "cors";
      }
      get referrer() {
        return "";
      }
      get referrerPolicy() {
        return "";
      }
      get method() {
        return this[INTERNALS].method;
      }
      get url() {
        return url.format(this[INTERNALS].parsedURL);
      }
      get headers() {
        return this[INTERNALS].headers;
      }
      get redirect() {
        return this[INTERNALS].redirect;
      }
      get signal() {
        return this[INTERNALS].signal;
      }
      clone() {
        return new Request2(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request2.prototype, {
      method: { enumerable: !0 },
      url: { enumerable: !0 },
      headers: { enumerable: !0 },
      redirect: { enumerable: !0 },
      clone: { enumerable: !0 },
      signal: { enumerable: !0 }
    });
    var getNodeRequestOptions = (request) => {
      let { parsedURL } = request[INTERNALS], headers = new Headers2(request[INTERNALS].headers);
      headers.has("Accept") || headers.set("Accept", "*/*");
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method) && (contentLengthValue = "0"), request.body !== null) {
        let totalBytes = getTotalBytes(request);
        typeof totalBytes == "number" && !Number.isNaN(totalBytes) && (contentLengthValue = String(totalBytes));
      }
      contentLengthValue && headers.set("Content-Length", contentLengthValue), headers.has("User-Agent") || headers.set("User-Agent", "node-fetch"), request.compress && !headers.has("Accept-Encoding") && headers.set("Accept-Encoding", "gzip,deflate,br");
      let { agent } = request;
      typeof agent == "function" && (agent = agent(parsedURL)), !headers.has("Connection") && !agent && headers.set("Connection", "close");
      let search3 = getSearch(parsedURL);
      return {
        path: parsedURL.pathname + search3,
        pathname: parsedURL.pathname,
        hostname: parsedURL.hostname,
        protocol: parsedURL.protocol,
        port: parsedURL.port,
        hash: parsedURL.hash,
        search: parsedURL.search,
        query: parsedURL.query,
        href: parsedURL.href,
        method: request.method,
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
    }, AbortError = class extends FetchBaseError {
      constructor(message, type = "aborted") {
        super(message, type);
      }
    }, supportedSchemas = /* @__PURE__ */ new Set(["data:", "http:", "https:", "file:"]);
    async function fetch2(url2, options_ = {}) {
      return new Promise((resolve, reject) => {
        let request = new Request2(url2, options_), options2 = getNodeRequestOptions(request);
        if (!supportedSchemas.has(options2.protocol))
          throw new TypeError(`node-fetch cannot load ${url2}. URL scheme "${options2.protocol.replace(/:$/, "")}" is not supported.`);
        if (options2.protocol === "data:") {
          let data = dataUriToBuffer(request.url.toString()), response2 = new Response5(data, { headers: { "Content-Type": data.typeFull } });
          resolve(response2);
          return;
        }
        if (options2.protocol === "file:") {
          let stream = fs4.createReadStream(new URL(request.url)), type = mime.lookup(request.url) || "application/octet-stream", response2 = new Response5(stream, { headers: { "Content-Type": type } });
          resolve(response2);
          return;
        }
        let send = (options2.protocol === "https:" ? https : http7).request, { signal } = request, response = null, response_ = null, abort = () => {
          let error = new AbortError("The operation was aborted.");
          reject(error), request.body && request.body.cancel(error), response_ && response_.emit("error", error);
        };
        if (signal && signal.aborted) {
          abort();
          return;
        }
        let abortAndFinalize = () => {
          abort(), finalize();
        }, request_ = send(options2);
        signal && signal.addEventListener("abort", abortAndFinalize);
        let finalize = () => {
          request_.abort(), signal && signal.removeEventListener("abort", abortAndFinalize);
        };
        request_.on("error", (err) => {
          reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, "system", err)), finalize();
        }), fixResponseChunkedTransferBadEnding(request_, (err) => {
          signal && signal.aborted || response_ == null || response_.emit("error", err);
        }), parseInt(process.version.substring(1)) < 14 && request_.on("socket", (s2) => {
          s2.prependListener("close", (hadError) => {
            let hasDataListener = s2.listenerCount("data") > 0;
            if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {
              let err = Object.assign(new Error("Premature close"), {
                code: "ERR_STREAM_PREMATURE_CLOSE"
              });
              response_ == null || response_.emit("error", err);
            }
          });
        }), request_.on("response", (incoming) => {
          response_ = incoming, request_.setTimeout(0);
          let headers = fromRawHeaders(response_.rawHeaders);
          if (isRedirect(Number(response_.statusCode))) {
            let location2 = headers.get("Location"), locationURL = location2 === null ? null : new URL(location2, request.url);
            switch (request.redirect) {
              case "error":
                reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect")), finalize();
                return;
              case "manual":
                locationURL !== null && headers.set("Location", locationURL.toString());
                break;
              case "follow": {
                if (locationURL === null)
                  break;
                if (request.counter >= request.follow) {
                  reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect")), finalize();
                  return;
                }
                let requestOptions = {
                  headers: new Headers2(request.headers),
                  follow: request.follow,
                  counter: request.counter + 1,
                  agent: request.agent,
                  compress: request.compress,
                  method: request.method,
                  body: options_.body,
                  signal,
                  size: request.size
                }, isStreamBody = requestOptions.body instanceof webBlob.ReadableStream || requestOptions.body instanceof Stream.Readable;
                if (response_.statusCode !== 303 && isStreamBody) {
                  reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect")), finalize();
                  return;
                }
                (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") && (requestOptions.method = "GET", requestOptions.body = void 0, requestOptions.headers.delete("content-length")), fetch2(new Request2(locationURL.href, requestOptions)).then(resolve, reject), finalize();
                return;
              }
              default:
                return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
            }
          }
          signal && response_.once("end", () => {
            signal.removeEventListener("abort", abortAndFinalize);
          });
          let body3 = Stream.pipeline(response_, new Stream.PassThrough(), reject);
          process.version < "v12.10" && response_.on("aborted", abortAndFinalize);
          let responseOptions = {
            url: request.url,
            status: response_.statusCode,
            statusText: response_.statusMessage,
            headers,
            size: request.size,
            counter: request.counter,
            highWaterMark: request.highWaterMark
          }, codings = headers.get("Content-Encoding");
          if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
            response = new Response5(body3, responseOptions), resolve(response);
            return;
          }
          let zlibOptions = {
            flush: zlib.Z_SYNC_FLUSH,
            finishFlush: zlib.Z_SYNC_FLUSH
          };
          if (codings === "gzip" || codings === "x-gzip") {
            body3 = Stream.pipeline(body3, zlib.createGunzip(zlibOptions), reject), response = new Response5(fromAsyncIterable(body3), responseOptions), resolve(response);
            return;
          }
          if (codings === "deflate" || codings === "x-deflate") {
            Stream.pipeline(response_, new Stream.PassThrough(), reject).once("data", (chunk) => {
              (chunk[0] & 15) === 8 ? body3 = Stream.pipeline(body3, zlib.createInflate(), reject) : body3 = Stream.pipeline(body3, zlib.createInflateRaw(), reject), response = new Response5(fromAsyncIterable(body3), responseOptions), resolve(response);
            });
            return;
          }
          if (codings === "br") {
            body3 = Stream.pipeline(body3, zlib.createBrotliDecompress(), reject), response = new Response5(fromAsyncIterable(body3), responseOptions), resolve(response);
            return;
          }
          response = new Response5(fromAsyncIterable(body3), responseOptions), resolve(response);
        }), writeToStream(request_, request);
      });
    }
    function fixResponseChunkedTransferBadEnding(request, errorCallback) {
      let LAST_CHUNK = Buffer.from(`0\r
\r
`), isChunkedTransfer = !1, properLastChunkReceived = !1, previousChunk;
      request.on("response", (response) => {
        let { headers } = response;
        isChunkedTransfer = headers["transfer-encoding"] === "chunked" && !headers["content-length"];
      }), request.on("socket", (socket) => {
        let onSocketClose = () => {
          if (isChunkedTransfer && !properLastChunkReceived) {
            let error = Object.assign(new Error("Premature close"), {
              code: "ERR_STREAM_PREMATURE_CLOSE"
            });
            errorCallback(error);
          }
        }, onData = (buf) => {
          properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0, !properLastChunkReceived && previousChunk && (properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0), previousChunk = buf;
        };
        socket.prependListener("close", onSocketClose), socket.on("data", onData), request.on("close", () => {
          socket.removeListener("close", onSocketClose), socket.removeListener("data", onData);
        });
      });
    }
    Object.defineProperty(exports2, "Blob", {
      enumerable: !0,
      get: function() {
        return webBlob.Blob;
      }
    });
    Object.defineProperty(exports2, "ReadableStream", {
      enumerable: !0,
      get: function() {
        return webBlob.ReadableStream;
      }
    });
    Object.defineProperty(exports2, "FormData", {
      enumerable: !0,
      get: function() {
        return webFormData.FormData;
      }
    });
    exports2.Headers = Headers2;
    exports2.Request = Request2;
    exports2.Response = Response5;
    exports2.default = fetch2;
    exports2.fetch = fetch2;
    exports2 = module2.exports = Object.assign(fetch2, exports2);
  }
});

// node_modules/@remix-run/web-file/dist/src/file.cjs
var require_file = __commonJS({
  "node_modules/@remix-run/web-file/dist/src/file.cjs"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var webBlob = require_lib_node(), File2 = class extends webBlob.Blob {
      constructor(init, name = panic(new TypeError("File constructor requires name argument")), options2 = {}) {
        super(init, options2), this._name = name, this._lastModified = options2.lastModified || Date.now();
      }
      get name() {
        return this._name;
      }
      get webkitRelativePath() {
        return "";
      }
      get lastModified() {
        return this._lastModified;
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
    }, panic = (error) => {
      throw error;
    };
    exports2.File = File2;
  }
});

// node_modules/@remix-run/web-file/dist/src/lib.node.cjs
var require_lib_node4 = __commonJS({
  "node_modules/@remix-run/web-file/dist/src/lib.node.cjs"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var webBlob = require_lib_node(), file = require_file(), File2 = file.File;
    Object.defineProperty(exports2, "Blob", {
      enumerable: !0,
      get: function() {
        return webBlob.Blob;
      }
    });
    exports2.File = File2;
  }
});

// node_modules/@remix-run/node/dist/fetch.js
var require_fetch = __commonJS({
  "node_modules/@remix-run/node/dist/fetch.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var webFetch = require_lib_node3(), webFile = require_lib_node4(), NodeRequest = class extends webFetch.Request {
      constructor(info, init) {
        super(info, init);
      }
      get headers() {
        return super.headers;
      }
      clone() {
        return super.clone();
      }
    }, NodeResponse = class extends webFetch.Response {
      get headers() {
        return super.headers;
      }
      clone() {
        return super.clone();
      }
    }, fetch2 = (info, init) => (init = {
      compress: !1,
      ...init
    }, webFetch.fetch(info, init));
    Object.defineProperty(exports2, "FormData", {
      enumerable: !0,
      get: function() {
        return webFetch.FormData;
      }
    });
    Object.defineProperty(exports2, "Headers", {
      enumerable: !0,
      get: function() {
        return webFetch.Headers;
      }
    });
    Object.defineProperty(exports2, "Blob", {
      enumerable: !0,
      get: function() {
        return webFile.Blob;
      }
    });
    Object.defineProperty(exports2, "File", {
      enumerable: !0,
      get: function() {
        return webFile.File;
      }
    });
    exports2.Request = NodeRequest;
    exports2.Response = NodeResponse;
    exports2.fetch = fetch2;
  }
});

// node_modules/@remix-run/node/dist/base64.js
var require_base642 = __commonJS({
  "node_modules/@remix-run/node/dist/base64.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function atob2(a) {
      return Buffer.from(a, "base64").toString("binary");
    }
    function btoa2(b) {
      return Buffer.from(b, "binary").toString("base64");
    }
    exports2.atob = atob2;
    exports2.btoa = btoa2;
  }
});

// node_modules/@remix-run/node/dist/globals.js
var require_globals = __commonJS({
  "node_modules/@remix-run/node/dist/globals.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var webStream = require_stream(), abortController = require_abort_controller(), base64 = require_base642(), fetch2 = require_fetch(), webFile = require_lib_node4(), webFetch = require_lib_node3();
    function installGlobals() {
      global.atob = base64.atob, global.btoa = base64.btoa, global.Blob = webFile.Blob, global.File = webFile.File, global.Headers = webFetch.Headers, global.Request = fetch2.Request, global.Response = fetch2.Response, global.fetch = fetch2.fetch, global.FormData = webFetch.FormData, global.ReadableStream = webStream.ReadableStream, global.WritableStream = webStream.WritableStream, global.AbortController = global.AbortController || abortController.AbortController;
    }
    exports2.installGlobals = installGlobals;
  }
});

// node_modules/cookie/index.js
var require_cookie = __commonJS({
  "node_modules/cookie/index.js"(exports2) {
    "use strict";
    exports2.parse = parse6;
    exports2.serialize = serialize3;
    var decode2 = decodeURIComponent, encode = encodeURIComponent, fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse6(str2, options2) {
      if (typeof str2 != "string")
        throw new TypeError("argument str must be a string");
      for (var obj = {}, opt = options2 || {}, pairs = str2.split(";"), dec = opt.decode || decode2, i = 0; i < pairs.length; i++) {
        var pair = pairs[i], index2 = pair.indexOf("=");
        if (!(index2 < 0)) {
          var key2 = pair.substring(0, index2).trim();
          if (obj[key2] == null) {
            var val = pair.substring(index2 + 1, pair.length).trim();
            val[0] === '"' && (val = val.slice(1, -1)), obj[key2] = tryDecode(val, dec);
          }
        }
      }
      return obj;
    }
    function serialize3(name, val, options2) {
      var opt = options2 || {}, enc = opt.encode || encode;
      if (typeof enc != "function")
        throw new TypeError("option encode is invalid");
      if (!fieldContentRegExp.test(name))
        throw new TypeError("argument name is invalid");
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value))
        throw new TypeError("argument val is invalid");
      var str2 = name + "=" + value;
      if (opt.maxAge != null) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge))
          throw new TypeError("option maxAge is invalid");
        str2 += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain))
          throw new TypeError("option domain is invalid");
        str2 += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path))
          throw new TypeError("option path is invalid");
        str2 += "; Path=" + opt.path;
      }
      if (opt.expires) {
        if (typeof opt.expires.toUTCString != "function")
          throw new TypeError("option expires is invalid");
        str2 += "; Expires=" + opt.expires.toUTCString();
      }
      if (opt.httpOnly && (str2 += "; HttpOnly"), opt.secure && (str2 += "; Secure"), opt.sameSite) {
        var sameSite = typeof opt.sameSite == "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case !0:
            str2 += "; SameSite=Strict";
            break;
          case "lax":
            str2 += "; SameSite=Lax";
            break;
          case "strict":
            str2 += "; SameSite=Strict";
            break;
          case "none":
            str2 += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str2;
    }
    function tryDecode(str2, decode3) {
      try {
        return decode3(str2);
      } catch {
        return str2;
      }
    }
  }
});

// node_modules/@remix-run/server-runtime/dist/warnings.js
var require_warnings2 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/warnings.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var alreadyWarned = {};
    function warnOnce(condition, message) {
      !condition && !alreadyWarned[message] && (alreadyWarned[message] = !0, console.warn(message));
    }
    exports2.warnOnce = warnOnce;
  }
});

// node_modules/@remix-run/server-runtime/dist/cookies.js
var require_cookies = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/cookies.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var cookie = require_cookie(), warnings = require_warnings2(), createCookieFactory = ({
      sign,
      unsign
    }) => (name, cookieOptions = {}) => {
      let {
        secrets,
        ...options2
      } = {
        secrets: [],
        path: "/",
        sameSite: "lax",
        ...cookieOptions
      };
      return warnOnceAboutExpiresCookie(name, options2.expires), {
        get name() {
          return name;
        },
        get isSigned() {
          return secrets.length > 0;
        },
        get expires() {
          return typeof options2.maxAge < "u" ? new Date(Date.now() + options2.maxAge * 1e3) : options2.expires;
        },
        async parse(cookieHeader, parseOptions2) {
          if (!cookieHeader)
            return null;
          let cookies = cookie.parse(cookieHeader, {
            ...options2,
            ...parseOptions2
          });
          return name in cookies ? cookies[name] === "" ? "" : await decodeCookieValue(unsign, cookies[name], secrets) : null;
        },
        async serialize(value, serializeOptions) {
          return cookie.serialize(name, value === "" ? "" : await encodeCookieValue(sign, value, secrets), {
            ...options2,
            ...serializeOptions
          });
        }
      };
    }, isCookie = (object) => object != null && typeof object.name == "string" && typeof object.isSigned == "boolean" && typeof object.parse == "function" && typeof object.serialize == "function";
    async function encodeCookieValue(sign, value, secrets) {
      let encoded = encodeData(value);
      return secrets.length > 0 && (encoded = await sign(encoded, secrets[0])), encoded;
    }
    async function decodeCookieValue(unsign, value, secrets) {
      if (secrets.length > 0) {
        for (let secret of secrets) {
          let unsignedValue = await unsign(value, secret);
          if (unsignedValue !== !1)
            return decodeData(unsignedValue);
        }
        return null;
      }
      return decodeData(value);
    }
    function encodeData(value) {
      return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));
    }
    function decodeData(value) {
      try {
        return JSON.parse(decodeURIComponent(myEscape(atob(value))));
      } catch {
        return {};
      }
    }
    function myEscape(value) {
      let str2 = value.toString(), result = "", index2 = 0, chr, code3;
      for (; index2 < str2.length; )
        chr = str2.charAt(index2++), /[\w*+\-./@]/.exec(chr) ? result += chr : (code3 = chr.charCodeAt(0), code3 < 256 ? result += "%" + hex(code3, 2) : result += "%u" + hex(code3, 4).toUpperCase());
      return result;
    }
    function hex(code3, length) {
      let result = code3.toString(16);
      for (; result.length < length; )
        result = "0" + result;
      return result;
    }
    function myUnescape(value) {
      let str2 = value.toString(), result = "", index2 = 0, chr, part;
      for (; index2 < str2.length; ) {
        if (chr = str2.charAt(index2++), chr === "%") {
          if (str2.charAt(index2) === "u") {
            if (part = str2.slice(index2 + 1, index2 + 5), /^[\da-f]{4}$/i.exec(part)) {
              result += String.fromCharCode(parseInt(part, 16)), index2 += 5;
              continue;
            }
          } else if (part = str2.slice(index2, index2 + 2), /^[\da-f]{2}$/i.exec(part)) {
            result += String.fromCharCode(parseInt(part, 16)), index2 += 2;
            continue;
          }
        }
        result += chr;
      }
      return result;
    }
    function warnOnceAboutExpiresCookie(name, expires) {
      warnings.warnOnce(!expires, `The "${name}" cookie has an "expires" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \`commitSession(session, { expires })\` if using a session storage object, or \`cookie.serialize("value", { expires })\` if you're using the cookie directly.`);
    }
    exports2.createCookieFactory = createCookieFactory;
    exports2.isCookie = isCookie;
  }
});

// node_modules/@remix-run/server-runtime/dist/formData.js
var require_formData = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/formData.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var multipartParser = require_src2();
    function composeUploadHandlers(...handlers2) {
      return async (part) => {
        for (let handler of handlers2) {
          let value = await handler(part);
          if (typeof value < "u" && value !== null)
            return value;
        }
      };
    }
    async function parseMultipartFormData(request, uploadHandler) {
      let contentType = request.headers.get("Content-Type") || "", [type, boundary] = contentType.split(/\s*;\s*boundary=/);
      if (!request.body || !boundary || type !== "multipart/form-data")
        throw new TypeError("Could not parse content as FormData.");
      let formData = new FormData(), parts = multipartParser.streamMultipart(request.body, boundary);
      for await (let part of parts) {
        if (part.done)
          break;
        typeof part.filename == "string" && (part.filename = part.filename.split(/[/\\]/).pop());
        let value = await uploadHandler(part);
        typeof value < "u" && value !== null && formData.append(part.name, value);
      }
      return formData;
    }
    exports2.composeUploadHandlers = composeUploadHandlers;
    exports2.parseMultipartFormData = parseMultipartFormData;
  }
});

// node_modules/@remix-run/server-runtime/dist/errors.js
var require_errors2 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/errors.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var router = require_router_cjs();
    async function serializeError(error) {
      return {
        message: error.message,
        stack: error.stack
      };
    }
    function serializeErrors(errors2) {
      if (!errors2)
        return null;
      let entries = Object.entries(errors2), serialized = {};
      for (let [key2, val] of entries)
        router.isRouteErrorResponse(val) ? serialized[key2] = {
          ...val,
          __type: "RouteErrorResponse"
        } : val instanceof Error ? serialized[key2] = {
          message: val.message,
          stack: val.stack,
          __type: "Error"
        } : serialized[key2] = val;
      return serialized;
    }
    exports2.serializeError = serializeError;
    exports2.serializeErrors = serializeErrors;
  }
});

// node_modules/@remix-run/server-runtime/dist/responses.js
var require_responses = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/responses.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var router = require_router_cjs(), errors2 = require_errors2(), json13 = (data, init = {}) => {
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), new Response(JSON.stringify(data), {
        ...responseInit,
        headers
      });
    }, defer = (data, init = {}) => {
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), router.defer(data, {
        ...responseInit,
        headers
      });
    }, redirect = (url, init = 302) => {
      let responseInit = init;
      typeof responseInit == "number" ? responseInit = {
        status: responseInit
      } : typeof responseInit.status > "u" && (responseInit.status = 302);
      let headers = new Headers(responseInit.headers);
      return headers.set("Location", url), new Response(null, {
        ...responseInit,
        headers
      });
    };
    function isDeferredData(value) {
      let deferred = value;
      return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
    }
    function isResponse(value) {
      return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
    }
    var redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
    function isRedirectStatusCode(statusCode) {
      return redirectStatusCodes.has(statusCode);
    }
    function isRedirectResponse(response) {
      return isRedirectStatusCode(response.status);
    }
    function isTrackedPromise(value) {
      return value != null && typeof value.then == "function" && value._tracked === !0;
    }
    var DEFERRED_VALUE_PLACEHOLDER_PREFIX = "__deferred_promise:";
    function createDeferredReadableStream(deferredData, signal) {
      let encoder = new TextEncoder();
      return new ReadableStream({
        async start(controller) {
          let criticalData = {}, preresolvedKeys = [];
          for (let [key2, value] of Object.entries(deferredData.data))
            isTrackedPromise(value) ? (criticalData[key2] = `${DEFERRED_VALUE_PLACEHOLDER_PREFIX}${key2}`, (typeof value._data < "u" || typeof value._error < "u") && preresolvedKeys.push(key2)) : criticalData[key2] = value;
          controller.enqueue(encoder.encode(JSON.stringify(criticalData) + `

`));
          for (let preresolvedKey of preresolvedKeys)
            enqueueTrackedPromise(controller, encoder, preresolvedKey, deferredData.data[preresolvedKey]);
          let unsubscribe = deferredData.subscribe((aborted, settledKey) => {
            settledKey && enqueueTrackedPromise(controller, encoder, settledKey, deferredData.data[settledKey]);
          });
          await deferredData.resolveData(signal), unsubscribe(), controller.close();
        }
      });
    }
    function enqueueTrackedPromise(controller, encoder, settledKey, promise) {
      "_error" in promise ? controller.enqueue(encoder.encode("error:" + JSON.stringify({
        [settledKey]: errors2.serializeError(promise._error)
      }) + `

`)) : controller.enqueue(encoder.encode("data:" + JSON.stringify({
        [settledKey]: promise._data ?? null
      }) + `

`));
    }
    exports2.createDeferredReadableStream = createDeferredReadableStream;
    exports2.defer = defer;
    exports2.isDeferredData = isDeferredData;
    exports2.isRedirectResponse = isRedirectResponse;
    exports2.isRedirectStatusCode = isRedirectStatusCode;
    exports2.isResponse = isResponse;
    exports2.json = json13;
    exports2.redirect = redirect;
  }
});

// node_modules/@remix-run/server-runtime/dist/entry.js
var require_entry = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/entry.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function createEntryRouteModules(manifest) {
      return Object.keys(manifest).reduce((memo, routeId) => (memo[routeId] = manifest[routeId].module, memo), {});
    }
    exports2.createEntryRouteModules = createEntryRouteModules;
  }
});

// node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "node_modules/set-cookie-parser/lib/set-cookie.js"(exports2, module2) {
    "use strict";
    var defaultParseOptions = {
      decodeValues: !0,
      map: !1,
      silent: !1
    };
    function isNonEmptyString(str2) {
      return typeof str2 == "string" && !!str2.trim();
    }
    function parseString(setCookieValue, options2) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString), nameValuePairStr = parts.shift(), parsed = parseNameValuePair(nameValuePairStr), name = parsed.name, value = parsed.value;
      options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
      try {
        value = options2.decodeValues ? decodeURIComponent(value) : value;
      } catch (e) {
        console.error(
          "set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.",
          e
        );
      }
      var cookie = {
        name,
        value
      };
      return parts.forEach(function(part) {
        var sides = part.split("="), key2 = sides.shift().trimLeft().toLowerCase(), value2 = sides.join("=");
        key2 === "expires" ? cookie.expires = new Date(value2) : key2 === "max-age" ? cookie.maxAge = parseInt(value2, 10) : key2 === "secure" ? cookie.secure = !0 : key2 === "httponly" ? cookie.httpOnly = !0 : key2 === "samesite" ? cookie.sameSite = value2 : cookie[key2] = value2;
      }), cookie;
    }
    function parseNameValuePair(nameValuePairStr) {
      var name = "", value = "", nameValueArr = nameValuePairStr.split("=");
      return nameValueArr.length > 1 ? (name = nameValueArr.shift(), value = nameValueArr.join("=")) : value = nameValuePairStr, { name, value };
    }
    function parse6(input, options2) {
      if (options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions, !input)
        return options2.map ? {} : [];
      if (input.headers && input.headers["set-cookie"])
        input = input.headers["set-cookie"];
      else if (input.headers) {
        var sch = input.headers[Object.keys(input.headers).find(function(key2) {
          return key2.toLowerCase() === "set-cookie";
        })];
        !sch && input.headers.cookie && !options2.silent && console.warn(
          "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
        ), input = sch;
      }
      if (Array.isArray(input) || (input = [input]), options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions, options2.map) {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str2) {
          var cookie = parseString(str2, options2);
          return cookies2[cookie.name] = cookie, cookies2;
        }, cookies);
      } else
        return input.filter(isNonEmptyString).map(function(str2) {
          return parseString(str2, options2);
        });
    }
    function splitCookiesString(cookiesString) {
      if (Array.isArray(cookiesString))
        return cookiesString;
      if (typeof cookiesString != "string")
        return [];
      var cookiesStrings = [], pos = 0, start, ch, lastComma, nextStart, cookiesSeparatorFound;
      function skipWhitespace() {
        for (; pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos)); )
          pos += 1;
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        return ch = cookiesString.charAt(pos), ch !== "=" && ch !== ";" && ch !== ",";
      }
      for (; pos < cookiesString.length; ) {
        for (start = pos, cookiesSeparatorFound = !1; skipWhitespace(); )
          if (ch = cookiesString.charAt(pos), ch === ",") {
            for (lastComma = pos, pos += 1, skipWhitespace(), nextStart = pos; pos < cookiesString.length && notSpecialChar(); )
              pos += 1;
            pos < cookiesString.length && cookiesString.charAt(pos) === "=" ? (cookiesSeparatorFound = !0, pos = nextStart, cookiesStrings.push(cookiesString.substring(start, lastComma)), start = pos) : pos = lastComma + 1;
          } else
            pos += 1;
        (!cookiesSeparatorFound || pos >= cookiesString.length) && cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
      }
      return cookiesStrings;
    }
    module2.exports = parse6;
    module2.exports.parse = parse6;
    module2.exports.parseString = parseString;
    module2.exports.splitCookiesString = splitCookiesString;
  }
});

// node_modules/@remix-run/server-runtime/dist/headers.js
var require_headers = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/headers.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var setCookieParser = require_set_cookie();
    function getDocumentHeadersRR(build, context) {
      return (context.errors ? context.matches.slice(0, context.matches.findIndex((m) => context.errors[m.route.id]) + 1) : context.matches).reduce((parentHeaders, match) => {
        let {
          id
        } = match.route, routeModule = build.routes[id].module, loaderHeaders = context.loaderHeaders[id] || new Headers(), actionHeaders = context.actionHeaders[id] || new Headers(), headers = new Headers(routeModule.headers ? typeof routeModule.headers == "function" ? routeModule.headers({
          loaderHeaders,
          parentHeaders,
          actionHeaders
        }) : routeModule.headers : void 0);
        return prependCookies(actionHeaders, headers), prependCookies(loaderHeaders, headers), prependCookies(parentHeaders, headers), headers;
      }, new Headers());
    }
    function prependCookies(parentHeaders, childHeaders) {
      let parentSetCookieString = parentHeaders.get("Set-Cookie");
      parentSetCookieString && setCookieParser.splitCookiesString(parentSetCookieString).forEach((cookie) => {
        childHeaders.append("Set-Cookie", cookie);
      });
    }
    exports2.getDocumentHeadersRR = getDocumentHeadersRR;
  }
});

// node_modules/@remix-run/server-runtime/dist/invariant.js
var require_invariant2 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/invariant.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function invariant(value, message) {
      if (value === !1 || value === null || typeof value > "u")
        throw console.error("The following error is a bug in Remix; please open an issue! https://github.com/remix-run/remix/issues/new"), new Error(message);
    }
    exports2.default = invariant;
  }
});

// node_modules/@remix-run/server-runtime/dist/mode.js
var require_mode = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/mode.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    exports2.ServerMode = void 0;
    (function(ServerMode) {
      ServerMode.Development = "development", ServerMode.Production = "production", ServerMode.Test = "test";
    })(exports2.ServerMode || (exports2.ServerMode = {}));
    function isServerMode(value) {
      return value === exports2.ServerMode.Development || value === exports2.ServerMode.Production || value === exports2.ServerMode.Test;
    }
    exports2.isServerMode = isServerMode;
  }
});

// node_modules/@remix-run/server-runtime/dist/routeMatching.js
var require_routeMatching = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/routeMatching.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var router = require_router_cjs();
    function matchServerRoutes(routes2, pathname) {
      let matches = router.matchRoutes(routes2, pathname);
      return matches ? matches.map((match) => ({
        params: match.params,
        pathname: match.pathname,
        route: match.route
      })) : null;
    }
    exports2.matchServerRoutes = matchServerRoutes;
  }
});

// node_modules/@remix-run/server-runtime/dist/data.js
var require_data2 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/data.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var responses = require_responses();
    async function callRouteActionRR({
      loadContext,
      action: action2,
      params,
      request,
      routeId
    }) {
      let result = await action2({
        request: stripDataParam(stripIndexParam(request)),
        context: loadContext,
        params
      });
      if (result === void 0)
        throw new Error(`You defined an action for route "${routeId}" but didn't return anything from your \`action\` function. Please return a value or \`null\`.`);
      return responses.isResponse(result) ? result : responses.json(result);
    }
    async function callRouteLoaderRR({
      loadContext,
      loader: loader12,
      params,
      request,
      routeId
    }) {
      let result = await loader12({
        request: stripDataParam(stripIndexParam(request)),
        context: loadContext,
        params
      });
      if (result === void 0)
        throw new Error(`You defined a loader for route "${routeId}" but didn't return anything from your \`loader\` function. Please return a value or \`null\`.`);
      return responses.isDeferredData(result) ? result.init && responses.isRedirectStatusCode(result.init.status || 200) ? responses.redirect(new Headers(result.init.headers).get("Location"), result.init) : result : responses.isResponse(result) ? result : responses.json(result);
    }
    function stripIndexParam(request) {
      let url = new URL(request.url), indexValues = url.searchParams.getAll("index");
      url.searchParams.delete("index");
      let indexValuesToKeep = [];
      for (let indexValue of indexValues)
        indexValue && indexValuesToKeep.push(indexValue);
      for (let toKeep of indexValuesToKeep)
        url.searchParams.append("index", toKeep);
      return new Request(url.href, request);
    }
    function stripDataParam(request) {
      let url = new URL(request.url);
      return url.searchParams.delete("_data"), new Request(url.href, request);
    }
    exports2.callRouteActionRR = callRouteActionRR;
    exports2.callRouteLoaderRR = callRouteLoaderRR;
  }
});

// node_modules/@remix-run/server-runtime/dist/routes.js
var require_routes2 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/routes.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var data = require_data2();
    function groupRoutesByParentId(manifest) {
      let routes2 = {};
      return Object.values(manifest).forEach((route) => {
        let parentId = route.parentId || "";
        routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
      }), routes2;
    }
    function createRoutes(manifest, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
      return (routesByParentId[parentId] || []).map((route) => ({
        ...route,
        children: createRoutes(manifest, route.id, routesByParentId)
      }));
    }
    function createStaticHandlerDataRoutes(manifest, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
      return (routesByParentId[parentId] || []).map((route) => {
        let commonRoute = {
          hasErrorBoundary: future2.v2_errorBoundary === !0 ? route.id === "root" || route.module.ErrorBoundary != null : route.id === "root" || route.module.CatchBoundary != null || route.module.ErrorBoundary != null,
          id: route.id,
          path: route.path,
          loader: route.module.loader ? (args) => data.callRouteLoaderRR({
            request: args.request,
            params: args.params,
            loadContext: args.context,
            loader: route.module.loader,
            routeId: route.id
          }) : void 0,
          action: route.module.action ? (args) => data.callRouteActionRR({
            request: args.request,
            params: args.params,
            loadContext: args.context,
            action: route.module.action,
            routeId: route.id
          }) : void 0,
          handle: route.module.handle
        };
        return route.index ? {
          index: !0,
          ...commonRoute
        } : {
          caseSensitive: route.caseSensitive,
          children: createStaticHandlerDataRoutes(manifest, future2, route.id, routesByParentId),
          ...commonRoute
        };
      });
    }
    exports2.createRoutes = createRoutes;
    exports2.createStaticHandlerDataRoutes = createStaticHandlerDataRoutes;
  }
});

// node_modules/@remix-run/server-runtime/dist/markup.js
var require_markup2 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/markup.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var ESCAPE_LOOKUP = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
    function escapeHtml(html6) {
      return html6.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
    }
    exports2.escapeHtml = escapeHtml;
  }
});

// node_modules/@remix-run/server-runtime/dist/serverHandoff.js
var require_serverHandoff = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/serverHandoff.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var markup = require_markup2();
    function createServerHandoffString(serverHandoff) {
      return markup.escapeHtml(JSON.stringify(serverHandoff));
    }
    exports2.createServerHandoffString = createServerHandoffString;
  }
});

// node_modules/@remix-run/server-runtime/dist/server.js
var require_server3 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/server.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var router = require_router_cjs(), entry2 = require_entry(), errors2 = require_errors2(), headers = require_headers(), invariant = require_invariant2(), mode = require_mode(), routeMatching = require_routeMatching(), routes2 = require_routes2(), responses = require_responses(), serverHandoff = require_serverHandoff(), createRequestHandler2 = (build, mode$1) => {
      let routes$1 = routes2.createRoutes(build.routes), dataRoutes = routes2.createStaticHandlerDataRoutes(build.routes, build.future), serverMode = mode.isServerMode(mode$1) ? mode$1 : mode.ServerMode.Production, staticHandler = router.createStaticHandler(dataRoutes);
      return async function(request, loadContext = {}) {
        let url = new URL(request.url), {
          unstable_dev
        } = build.future;
        if (mode$1 === "development" && unstable_dev !== !1 && url.pathname === (unstable_dev === !0 ? "/__REMIX_ASSETS_MANIFEST" : (unstable_dev.remixRequestHandlerPath ?? "") + "/__REMIX_ASSETS_MANIFEST"))
          return request.method !== "GET" ? new Response("Method not allowed", {
            status: 405
          }) : new Response(JSON.stringify(build.assets), {
            status: 200,
            headers: {
              "Content-Type": "application/json"
            }
          });
        let matches = routeMatching.matchServerRoutes(routes$1, url.pathname), response;
        if (url.searchParams.has("_data")) {
          let routeId = url.searchParams.get("_data");
          if (response = await handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext), build.entry.module.handleDataRequest) {
            let match = matches.find((match2) => match2.route.id == routeId);
            response = await build.entry.module.handleDataRequest(response, {
              context: loadContext,
              params: match.params,
              request
            });
          }
        } else
          matches && matches[matches.length - 1].route.module.default == null ? response = await handleResourceRequestRR(serverMode, staticHandler, matches.slice(-1)[0].route.id, request, loadContext) : response = await handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext);
        return request.method === "HEAD" ? new Response(null, {
          headers: response.headers,
          status: response.status,
          statusText: response.statusText
        }) : response;
      };
    };
    async function handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext) {
      try {
        let response = await staticHandler.queryRoute(request, {
          routeId,
          requestContext: loadContext
        });
        if (responses.isRedirectResponse(response)) {
          let headers2 = new Headers(response.headers);
          return headers2.set("X-Remix-Redirect", headers2.get("Location")), headers2.set("X-Remix-Status", response.status), headers2.delete("Location"), response.headers.get("Set-Cookie") !== null && headers2.set("X-Remix-Revalidate", "yes"), new Response(null, {
            status: 204,
            headers: headers2
          });
        }
        if (router.UNSAFE_DEFERRED_SYMBOL in response) {
          let deferredData = response[router.UNSAFE_DEFERRED_SYMBOL], body3 = responses.createDeferredReadableStream(deferredData, request.signal), init = deferredData.init || {}, headers2 = new Headers(init.headers);
          return headers2.set("Content-Type", "text/remix-deferred"), init.headers = headers2, new Response(body3, init);
        }
        return response;
      } catch (error) {
        if (responses.isResponse(error))
          return error.headers.set("X-Remix-Catch", "yes"), error;
        let status = 500, errorInstance = error;
        return router.isRouteErrorResponse(error) && (status = error.status, errorInstance = error.error || errorInstance), serverMode !== mode.ServerMode.Test && !request.signal.aborted && console.error(errorInstance), serverMode === mode.ServerMode.Development && errorInstance instanceof Error ? errorBoundaryError(errorInstance, status) : errorBoundaryError(new Error("Unexpected Server Error"), status);
      }
    }
    function findParentBoundary(routes3, routeId, error) {
      let route = routes3[routeId] || routes3.root, isCatch = router.isRouteErrorResponse(error) && (!error.error || error.status === 404);
      return isCatch && route.module.CatchBoundary || !isCatch && route.module.ErrorBoundary || !route.parentId ? route.id : findParentBoundary(routes3, route.parentId, error);
    }
    function differentiateCatchVersusErrorBoundaries(build, context) {
      if (!context.errors)
        return;
      let errors3 = {};
      for (let routeId of Object.keys(context.errors)) {
        let error = context.errors[routeId], handlingRouteId = findParentBoundary(build.routes, routeId, error);
        errors3[handlingRouteId] = error;
      }
      context.errors = errors3;
    }
    async function handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext) {
      let context;
      try {
        context = await staticHandler.query(request, {
          requestContext: loadContext
        });
      } catch (error) {
        return !request.signal.aborted && serverMode !== mode.ServerMode.Test && console.error(error), new Response(null, {
          status: 500
        });
      }
      if (responses.isResponse(context))
        return context;
      build.future.v2_errorBoundary !== !0 && differentiateCatchVersusErrorBoundaries(build, context);
      let headers$1 = headers.getDocumentHeadersRR(build, context), entryContext = {
        manifest: build.assets,
        routeModules: entry2.createEntryRouteModules(build.routes),
        staticHandlerContext: context,
        serverHandoffString: serverHandoff.createServerHandoffString({
          state: {
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: errors2.serializeErrors(context.errors)
          },
          future: build.future,
          dev: build.dev
        }),
        future: build.future
      }, handleDocumentRequestFunction = build.entry.module.default;
      try {
        return await handleDocumentRequestFunction(request, context.statusCode, headers$1, entryContext);
      } catch (error) {
        context = router.getStaticContextFromError(staticHandler.dataRoutes, context, error), build.future.v2_errorBoundary !== !0 && differentiateCatchVersusErrorBoundaries(build, context), entryContext = {
          ...entryContext,
          staticHandlerContext: context,
          serverHandoffString: serverHandoff.createServerHandoffString({
            state: {
              loaderData: context.loaderData,
              actionData: context.actionData,
              errors: errors2.serializeErrors(context.errors)
            },
            future: build.future
          })
        };
        try {
          return await handleDocumentRequestFunction(request, context.statusCode, headers$1, entryContext);
        } catch (error2) {
          return returnLastResortErrorResponse(error2, serverMode);
        }
      }
    }
    async function handleResourceRequestRR(serverMode, staticHandler, routeId, request, loadContext) {
      try {
        let response = await staticHandler.queryRoute(request, {
          routeId,
          requestContext: loadContext
        });
        return invariant.default(responses.isResponse(response), "Expected a Response to be returned from queryRoute"), response;
      } catch (error) {
        return responses.isResponse(error) ? (error.headers.set("X-Remix-Catch", "yes"), error) : returnLastResortErrorResponse(error, serverMode);
      }
    }
    async function errorBoundaryError(error, status) {
      return responses.json(await errors2.serializeError(error), {
        status,
        headers: {
          "X-Remix-Error": "yes"
        }
      });
    }
    function returnLastResortErrorResponse(error, serverMode) {
      serverMode !== mode.ServerMode.Test && console.error(error);
      let message = "Unexpected Server Error";
      return serverMode !== mode.ServerMode.Production && (message += `

${String(error)}`), new Response(message, {
        status: 500,
        headers: {
          "Content-Type": "text/plain"
        }
      });
    }
    exports2.createRequestHandler = createRequestHandler2;
    exports2.differentiateCatchVersusErrorBoundaries = differentiateCatchVersusErrorBoundaries;
  }
});

// node_modules/@remix-run/server-runtime/dist/sessions.js
var require_sessions = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/sessions.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var cookies = require_cookies(), warnings = require_warnings2();
    function flash(name) {
      return `__flash_${name}__`;
    }
    var createSession = (initialData = {}, id = "") => {
      let map2 = new Map(Object.entries(initialData));
      return {
        get id() {
          return id;
        },
        get data() {
          return Object.fromEntries(map2);
        },
        has(name) {
          return map2.has(name) || map2.has(flash(name));
        },
        get(name) {
          if (map2.has(name))
            return map2.get(name);
          let flashName = flash(name);
          if (map2.has(flashName)) {
            let value = map2.get(flashName);
            return map2.delete(flashName), value;
          }
        },
        set(name, value) {
          map2.set(name, value);
        },
        flash(name, value) {
          map2.set(flash(name), value);
        },
        unset(name) {
          map2.delete(name);
        }
      };
    }, isSession = (object) => object != null && typeof object.id == "string" && typeof object.data < "u" && typeof object.has == "function" && typeof object.get == "function" && typeof object.set == "function" && typeof object.flash == "function" && typeof object.unset == "function", createSessionStorageFactory = (createCookie) => ({
      cookie: cookieArg,
      createData,
      readData,
      updateData,
      deleteData
    }) => {
      let cookie = cookies.isCookie(cookieArg) ? cookieArg : createCookie((cookieArg == null ? void 0 : cookieArg.name) || "__session", cookieArg);
      return warnOnceAboutSigningSessionCookie(cookie), {
        async getSession(cookieHeader, options2) {
          let id = cookieHeader && await cookie.parse(cookieHeader, options2), data = id && await readData(id);
          return createSession(data || {}, id || "");
        },
        async commitSession(session, options2) {
          let {
            id,
            data
          } = session;
          return id ? await updateData(id, data, cookie.expires) : id = await createData(data, cookie.expires), cookie.serialize(id, options2);
        },
        async destroySession(session, options2) {
          return await deleteData(session.id), cookie.serialize("", {
            ...options2,
            expires: new Date(0)
          });
        }
      };
    };
    function warnOnceAboutSigningSessionCookie(cookie) {
      warnings.warnOnce(cookie.isSigned, `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`);
    }
    exports2.createSession = createSession;
    exports2.createSessionStorageFactory = createSessionStorageFactory;
    exports2.isSession = isSession;
    exports2.warnOnceAboutSigningSessionCookie = warnOnceAboutSigningSessionCookie;
  }
});

// node_modules/@remix-run/server-runtime/dist/sessions/cookieStorage.js
var require_cookieStorage = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/sessions/cookieStorage.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var cookies = require_cookies(), sessions = require_sessions(), createCookieSessionStorageFactory = (createCookie) => ({
      cookie: cookieArg
    } = {}) => {
      let cookie = cookies.isCookie(cookieArg) ? cookieArg : createCookie((cookieArg == null ? void 0 : cookieArg.name) || "__session", cookieArg);
      return sessions.warnOnceAboutSigningSessionCookie(cookie), {
        async getSession(cookieHeader, options2) {
          return sessions.createSession(cookieHeader && await cookie.parse(cookieHeader, options2) || {});
        },
        async commitSession(session, options2) {
          let serializedCookie = await cookie.serialize(session.data, options2);
          if (serializedCookie.length > 4096)
            throw new Error("Cookie length will exceed browser maximum. Length: " + serializedCookie.length);
          return serializedCookie;
        },
        async destroySession(_session, options2) {
          return cookie.serialize("", {
            ...options2,
            expires: new Date(0)
          });
        }
      };
    };
    exports2.createCookieSessionStorageFactory = createCookieSessionStorageFactory;
  }
});

// node_modules/@remix-run/server-runtime/dist/sessions/memoryStorage.js
var require_memoryStorage = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/sessions/memoryStorage.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var createMemorySessionStorageFactory = (createSessionStorage) => ({
      cookie
    } = {}) => {
      let uniqueId = 0, map2 = /* @__PURE__ */ new Map();
      return createSessionStorage({
        cookie,
        async createData(data, expires) {
          let id = (++uniqueId).toString();
          return map2.set(id, {
            data,
            expires
          }), id;
        },
        async readData(id) {
          if (map2.has(id)) {
            let {
              data,
              expires
            } = map2.get(id);
            if (!expires || expires > new Date())
              return data;
            expires && map2.delete(id);
          }
          return null;
        },
        async updateData(id, data, expires) {
          map2.set(id, {
            data,
            expires
          });
        },
        async deleteData(id) {
          map2.delete(id);
        }
      });
    };
    exports2.createMemorySessionStorageFactory = createMemorySessionStorageFactory;
  }
});

// node_modules/@remix-run/server-runtime/dist/upload/errors.js
var require_errors3 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/upload/errors.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var MaxPartSizeExceededError = class extends Error {
      constructor(field, maxBytes) {
        super(`Field "${field}" exceeded upload size of ${maxBytes} bytes.`), this.field = field, this.maxBytes = maxBytes;
      }
    };
    exports2.MaxPartSizeExceededError = MaxPartSizeExceededError;
  }
});

// node_modules/@remix-run/server-runtime/dist/upload/memoryUploadHandler.js
var require_memoryUploadHandler = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/upload/memoryUploadHandler.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var errors2 = require_errors3();
    function createMemoryUploadHandler({
      filter,
      maxPartSize = 3e6
    } = {}) {
      return async ({
        filename,
        contentType,
        name,
        data
      }) => {
        if (filter && !await filter({
          filename,
          contentType,
          name
        }))
          return;
        let size = 0, chunks = [];
        for await (let chunk of data) {
          if (size += chunk.byteLength, size > maxPartSize)
            throw new errors2.MaxPartSizeExceededError(name, maxPartSize);
          chunks.push(chunk);
        }
        return typeof filename == "string" ? new File(chunks, filename, {
          type: contentType
        }) : await new Blob(chunks, {
          type: contentType
        }).text();
      };
    }
    exports2.createMemoryUploadHandler = createMemoryUploadHandler;
  }
});

// node_modules/@remix-run/server-runtime/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var cookies = require_cookies(), formData = require_formData(), responses = require_responses(), server = require_server3(), sessions = require_sessions(), cookieStorage = require_cookieStorage(), memoryStorage = require_memoryStorage(), memoryUploadHandler = require_memoryUploadHandler(), errors2 = require_errors3();
    exports2.createCookieFactory = cookies.createCookieFactory;
    exports2.isCookie = cookies.isCookie;
    exports2.unstable_composeUploadHandlers = formData.composeUploadHandlers;
    exports2.unstable_parseMultipartFormData = formData.parseMultipartFormData;
    exports2.defer = responses.defer;
    exports2.json = responses.json;
    exports2.redirect = responses.redirect;
    exports2.createRequestHandler = server.createRequestHandler;
    exports2.createSession = sessions.createSession;
    exports2.createSessionStorageFactory = sessions.createSessionStorageFactory;
    exports2.isSession = sessions.isSession;
    exports2.createCookieSessionStorageFactory = cookieStorage.createCookieSessionStorageFactory;
    exports2.createMemorySessionStorageFactory = memoryStorage.createMemorySessionStorageFactory;
    exports2.unstable_createMemoryUploadHandler = memoryUploadHandler.createMemoryUploadHandler;
    exports2.MaxPartSizeExceededError = errors2.MaxPartSizeExceededError;
  }
});

// node_modules/cookie-signature/index.js
var require_cookie_signature = __commonJS({
  "node_modules/cookie-signature/index.js"(exports2) {
    var crypto = require("crypto");
    exports2.sign = function(val, secret) {
      if (typeof val != "string")
        throw new TypeError("Cookie value must be provided as a string.");
      if (secret == null)
        throw new TypeError("Secret key must be provided.");
      return val + "." + crypto.createHmac("sha256", secret).update(val).digest("base64").replace(/\=+$/, "");
    };
    exports2.unsign = function(input, secret) {
      if (typeof input != "string")
        throw new TypeError("Signed cookie string must be provided.");
      if (secret == null)
        throw new TypeError("Secret key must be provided.");
      var tentativeValue = input.slice(0, input.lastIndexOf(".")), expectedInput = exports2.sign(tentativeValue, secret), expectedBuffer = Buffer.from(expectedInput), inputBuffer = Buffer.from(input);
      return expectedBuffer.length === inputBuffer.length && crypto.timingSafeEqual(expectedBuffer, inputBuffer) ? tentativeValue : !1;
    };
  }
});

// node_modules/@remix-run/node/dist/crypto.js
var require_crypto = __commonJS({
  "node_modules/@remix-run/node/dist/crypto.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var cookieSignature = require_cookie_signature();
    function _interopDefaultLegacy(e) {
      return e && typeof e == "object" && "default" in e ? e : { default: e };
    }
    var cookieSignature__default = /* @__PURE__ */ _interopDefaultLegacy(cookieSignature), sign = async (value, secret) => cookieSignature__default.default.sign(value, secret), unsign = async (signed, secret) => cookieSignature__default.default.unsign(signed, secret);
    exports2.sign = sign;
    exports2.unsign = unsign;
  }
});

// node_modules/@remix-run/node/dist/implementations.js
var require_implementations = __commonJS({
  "node_modules/@remix-run/node/dist/implementations.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var serverRuntime = require_dist3(), crypto = require_crypto(), createCookie = serverRuntime.createCookieFactory({
      sign: crypto.sign,
      unsign: crypto.unsign
    }), createCookieSessionStorage = serverRuntime.createCookieSessionStorageFactory(createCookie), createSessionStorage = serverRuntime.createSessionStorageFactory(createCookie), createMemorySessionStorage = serverRuntime.createMemorySessionStorageFactory(createSessionStorage);
    exports2.createCookie = createCookie;
    exports2.createCookieSessionStorage = createCookieSessionStorage;
    exports2.createMemorySessionStorage = createMemorySessionStorage;
    exports2.createSessionStorage = createSessionStorage;
  }
});

// node_modules/@remix-run/node/dist/sessions/fileStorage.js
var require_fileStorage = __commonJS({
  "node_modules/@remix-run/node/dist/sessions/fileStorage.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var crypto = require("crypto"), fs4 = require("fs"), path6 = require("path"), implementations = require_implementations();
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var crypto__namespace = /* @__PURE__ */ _interopNamespace(crypto), path__namespace = /* @__PURE__ */ _interopNamespace(path6);
    function createFileSessionStorage({
      cookie,
      dir
    }) {
      return implementations.createSessionStorage({
        cookie,
        async createData(data, expires) {
          let content3 = JSON.stringify({
            data,
            expires
          });
          for (; ; ) {
            let randomBytes = crypto__namespace.randomBytes(8), id = Buffer.from(randomBytes).toString("hex");
            try {
              let file = getFile(dir, id);
              return await fs4.promises.mkdir(path__namespace.dirname(file), {
                recursive: !0
              }), await fs4.promises.writeFile(file, content3, {
                encoding: "utf-8",
                flag: "wx"
              }), id;
            } catch (error) {
              if (error.code !== "EEXIST")
                throw error;
            }
          }
        },
        async readData(id) {
          try {
            let file = getFile(dir, id), content3 = JSON.parse(await fs4.promises.readFile(file, "utf-8")), data = content3.data, expires = typeof content3.expires == "string" ? new Date(content3.expires) : null;
            return !expires || expires > new Date() ? data : (expires && await fs4.promises.unlink(file), null);
          } catch (error) {
            if (error.code !== "ENOENT")
              throw error;
            return null;
          }
        },
        async updateData(id, data, expires) {
          let content3 = JSON.stringify({
            data,
            expires
          }), file = getFile(dir, id);
          await fs4.promises.mkdir(path__namespace.dirname(file), {
            recursive: !0
          }), await fs4.promises.writeFile(file, content3, "utf-8");
        },
        async deleteData(id) {
          if (!!id)
            try {
              await fs4.promises.unlink(getFile(dir, id));
            } catch (error) {
              if (error.code !== "ENOENT")
                throw error;
            }
        }
      });
    }
    function getFile(dir, id) {
      return path__namespace.join(dir, id.slice(0, 4), id.slice(4));
    }
    exports2.createFileSessionStorage = createFileSessionStorage;
  }
});

// node_modules/stream-slice/index.js
var require_stream_slice = __commonJS({
  "node_modules/stream-slice/index.js"(exports2) {
    var util = require("util"), Transform = require("stream").Transform;
    util.inherits(SliceStream, Transform);
    function SliceStream(start, end) {
      if (!(this instanceof SliceStream))
        return new SliceStream();
      Transform.call(this), this._start = start || 0, this._end = end || 1 / 0, this._offset = 0, this._state = 0, this._emitUp = !1, this._emitDown = !1;
    }
    SliceStream.prototype._transform = function(chunk, encoding, done) {
      if (this._offset += chunk.length, !this._emitUp && this._offset >= this._start) {
        this._emitUp = !0;
        var start = chunk.length - (this._offset - this._start);
        if (this._offset > this._end) {
          var end = chunk.length - (this._offset - this._end);
          this._emitDown = !0, this.push(chunk.slice(start, end));
        } else
          this.push(chunk.slice(start, chunk.length));
        return done();
      }
      return this._emitUp && !this._emitDown && (this._offset >= this._end ? (this._emitDown = !0, this.push(chunk.slice(0, chunk.length - (this._offset - this._end)))) : this.push(chunk)), done();
    };
    exports2.slice = function(start, end) {
      return new SliceStream(start, end);
    };
  }
});

// node_modules/@remix-run/node/dist/stream.js
var require_stream2 = __commonJS({
  "node_modules/@remix-run/node/dist/stream.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var stream = require("stream");
    async function writeReadableStreamToWritable(stream2, writable) {
      let reader = stream2.getReader();
      async function read() {
        let {
          done,
          value
        } = await reader.read();
        if (done) {
          writable.end();
          return;
        }
        writable.write(value);
        let flushable = writable;
        typeof flushable.flush == "function" && flushable.flush(), await read();
      }
      try {
        await read();
      } catch (error) {
        throw writable.destroy(error), error;
      }
    }
    async function writeAsyncIterableToWritable(iterable, writable) {
      try {
        for await (let chunk of iterable)
          writable.write(chunk);
        writable.end();
      } catch (error) {
        throw writable.destroy(error), error;
      }
    }
    async function readableStreamToString(stream2, encoding) {
      let reader = stream2.getReader(), chunks = [];
      async function read() {
        let {
          done,
          value
        } = await reader.read();
        done || (value && chunks.push(value), await read());
      }
      return await read(), Buffer.concat(chunks).toString(encoding);
    }
    var createReadableStreamFromReadable = (source) => {
      let pump = new StreamPump(source);
      return new ReadableStream(pump, pump);
    }, StreamPump = class {
      constructor(stream$1) {
        this.highWaterMark = stream$1.readableHighWaterMark || new stream.Stream.Readable().readableHighWaterMark, this.accumalatedSize = 0, this.stream = stream$1, this.enqueue = this.enqueue.bind(this), this.error = this.error.bind(this), this.close = this.close.bind(this);
      }
      size(chunk) {
        return (chunk == null ? void 0 : chunk.byteLength) || 0;
      }
      start(controller) {
        this.controller = controller, this.stream.on("data", this.enqueue), this.stream.once("error", this.error), this.stream.once("end", this.close), this.stream.once("close", this.close);
      }
      pull() {
        this.resume();
      }
      cancel(reason) {
        this.stream.destroy && this.stream.destroy(reason), this.stream.off("data", this.enqueue), this.stream.off("error", this.error), this.stream.off("end", this.close), this.stream.off("close", this.close);
      }
      enqueue(chunk) {
        if (this.controller)
          try {
            let bytes = chunk instanceof Uint8Array ? chunk : Buffer.from(chunk), available = (this.controller.desiredSize || 0) - bytes.byteLength;
            this.controller.enqueue(bytes), available <= 0 && this.pause();
          } catch {
            this.controller.error(new Error("Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object")), this.cancel();
          }
      }
      pause() {
        this.stream.pause && this.stream.pause();
      }
      resume() {
        this.stream.readable && this.stream.resume && this.stream.resume();
      }
      close() {
        this.controller && (this.controller.close(), delete this.controller);
      }
      error(error) {
        this.controller && (this.controller.error(error), delete this.controller);
      }
    };
    exports2.createReadableStreamFromReadable = createReadableStreamFromReadable;
    exports2.readableStreamToString = readableStreamToString;
    exports2.writeAsyncIterableToWritable = writeAsyncIterableToWritable;
    exports2.writeReadableStreamToWritable = writeReadableStreamToWritable;
  }
});

// node_modules/@remix-run/node/dist/upload/fileUploadHandler.js
var require_fileUploadHandler = __commonJS({
  "node_modules/@remix-run/node/dist/upload/fileUploadHandler.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var crypto = require("crypto"), fs4 = require("fs"), promises = require("fs/promises"), os = require("os"), path6 = require("path"), stream = require("stream"), util = require("util"), serverRuntime = require_dist3(), streamSlice = require_stream_slice(), stream$1 = require_stream2();
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var streamSlice__namespace = /* @__PURE__ */ _interopNamespace(streamSlice), defaultFilePathResolver = ({
      filename
    }) => {
      let ext = filename ? path6.extname(filename) : "";
      return "upload_" + crypto.randomBytes(4).readUInt32LE(0) + ext;
    };
    async function uniqueFile(filepath) {
      let ext = path6.extname(filepath), uniqueFilepath = filepath;
      for (let i = 1; await promises.stat(uniqueFilepath).then(() => !0).catch(() => !1); i++)
        uniqueFilepath = (ext ? filepath.slice(0, -ext.length) : filepath) + `-${new Date().getTime()}${ext}`;
      return uniqueFilepath;
    }
    function createFileUploadHandler({
      directory = os.tmpdir(),
      avoidFileConflicts = !0,
      file = defaultFilePathResolver,
      filter,
      maxPartSize = 3e6
    } = {}) {
      return async ({
        name,
        filename,
        contentType,
        data
      }) => {
        if (!filename || filter && !await filter({
          name,
          filename,
          contentType
        }))
          return;
        let dir = typeof directory == "string" ? directory : directory({
          name,
          filename,
          contentType
        });
        if (!dir)
          return;
        let filedir = path6.resolve(dir), path$1 = typeof file == "string" ? file : file({
          name,
          filename,
          contentType
        });
        if (!path$1)
          return;
        let filepath = path6.resolve(filedir, path$1);
        avoidFileConflicts && (filepath = await uniqueFile(filepath)), await promises.mkdir(path6.dirname(filepath), {
          recursive: !0
        }).catch(() => {
        });
        let writeFileStream = fs4.createWriteStream(filepath), size = 0, deleteFile = !1;
        try {
          for await (let chunk of data) {
            if (size += chunk.byteLength, size > maxPartSize)
              throw deleteFile = !0, new serverRuntime.MaxPartSizeExceededError(name, maxPartSize);
            writeFileStream.write(chunk);
          }
        } finally {
          writeFileStream.end(), await util.promisify(stream.finished)(writeFileStream), deleteFile && await promises.rm(filepath).catch(() => {
          });
        }
        return new NodeOnDiskFile(filepath, contentType);
      };
    }
    var NodeOnDiskFile = class {
      lastModified = 0;
      webkitRelativePath = "";
      constructor(filepath, type, slicer) {
        this.filepath = filepath, this.type = type, this.slicer = slicer, this.name = path6.basename(filepath);
      }
      get size() {
        let stats = fs4.statSync(this.filepath);
        if (this.slicer) {
          let slice = this.slicer.end - this.slicer.start;
          return slice < 0 ? 0 : slice > stats.size ? stats.size : slice;
        }
        return stats.size;
      }
      slice(start, end, type) {
        var _this$slicer;
        typeof start == "number" && start < 0 && (start = this.size + start), typeof end == "number" && end < 0 && (end = this.size + end);
        let startOffset = ((_this$slicer = this.slicer) === null || _this$slicer === void 0 ? void 0 : _this$slicer.start) || 0;
        return start = startOffset + (start || 0), end = startOffset + (end || this.size), new NodeOnDiskFile(this.filepath, typeof type == "string" ? type : this.type, {
          start,
          end
        });
      }
      async arrayBuffer() {
        let stream2 = fs4.createReadStream(this.filepath);
        return this.slicer && (stream2 = stream2.pipe(streamSlice__namespace.slice(this.slicer.start, this.slicer.end))), new Promise((resolve, reject) => {
          let buf = [];
          stream2.on("data", (chunk) => buf.push(chunk)), stream2.on("end", () => resolve(Buffer.concat(buf))), stream2.on("error", (err) => reject(err));
        });
      }
      stream() {
        let stream2 = fs4.createReadStream(this.filepath);
        return this.slicer && (stream2 = stream2.pipe(streamSlice__namespace.slice(this.slicer.start, this.slicer.end))), stream$1.createReadableStreamFromReadable(stream2);
      }
      async text() {
        return stream$1.readableStreamToString(this.stream());
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
      remove() {
        return promises.unlink(this.filepath);
      }
      getFilePath() {
        return this.filepath;
      }
    };
    exports2.NodeOnDiskFile = NodeOnDiskFile;
    exports2.createFileUploadHandler = createFileUploadHandler;
  }
});

// node_modules/@remix-run/node/dist/index.js
var require_dist4 = __commonJS({
  "node_modules/@remix-run/node/dist/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var sourceMapSupport = require_source_map_support(), abortController = require_abort_controller(), fetch2 = require_fetch(), globals = require_globals(), fileStorage = require_fileStorage(), fileUploadHandler = require_fileUploadHandler(), implementations = require_implementations(), stream = require_stream2(), serverRuntime = require_dist3(), webFetch = require_lib_node3();
    function _interopDefaultLegacy(e) {
      return e && typeof e == "object" && "default" in e ? e : { default: e };
    }
    var sourceMapSupport__default = /* @__PURE__ */ _interopDefaultLegacy(sourceMapSupport);
    sourceMapSupport__default.default.install();
    Object.defineProperty(exports2, "AbortController", {
      enumerable: !0,
      get: function() {
        return abortController.AbortController;
      }
    });
    exports2.Request = fetch2.Request;
    exports2.Response = fetch2.Response;
    exports2.fetch = fetch2.fetch;
    exports2.installGlobals = globals.installGlobals;
    exports2.createFileSessionStorage = fileStorage.createFileSessionStorage;
    exports2.NodeOnDiskFile = fileUploadHandler.NodeOnDiskFile;
    exports2.unstable_createFileUploadHandler = fileUploadHandler.createFileUploadHandler;
    exports2.createCookie = implementations.createCookie;
    exports2.createCookieSessionStorage = implementations.createCookieSessionStorage;
    exports2.createMemorySessionStorage = implementations.createMemorySessionStorage;
    exports2.createSessionStorage = implementations.createSessionStorage;
    exports2.createReadableStreamFromReadable = stream.createReadableStreamFromReadable;
    exports2.readableStreamToString = stream.readableStreamToString;
    exports2.writeAsyncIterableToWritable = stream.writeAsyncIterableToWritable;
    exports2.writeReadableStreamToWritable = stream.writeReadableStreamToWritable;
    Object.defineProperty(exports2, "MaxPartSizeExceededError", {
      enumerable: !0,
      get: function() {
        return serverRuntime.MaxPartSizeExceededError;
      }
    });
    Object.defineProperty(exports2, "createRequestHandler", {
      enumerable: !0,
      get: function() {
        return serverRuntime.createRequestHandler;
      }
    });
    Object.defineProperty(exports2, "createSession", {
      enumerable: !0,
      get: function() {
        return serverRuntime.createSession;
      }
    });
    Object.defineProperty(exports2, "defer", {
      enumerable: !0,
      get: function() {
        return serverRuntime.defer;
      }
    });
    Object.defineProperty(exports2, "isCookie", {
      enumerable: !0,
      get: function() {
        return serverRuntime.isCookie;
      }
    });
    Object.defineProperty(exports2, "isSession", {
      enumerable: !0,
      get: function() {
        return serverRuntime.isSession;
      }
    });
    Object.defineProperty(exports2, "json", {
      enumerable: !0,
      get: function() {
        return serverRuntime.json;
      }
    });
    Object.defineProperty(exports2, "redirect", {
      enumerable: !0,
      get: function() {
        return serverRuntime.redirect;
      }
    });
    Object.defineProperty(exports2, "unstable_composeUploadHandlers", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_composeUploadHandlers;
      }
    });
    Object.defineProperty(exports2, "unstable_createMemoryUploadHandler", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_createMemoryUploadHandler;
      }
    });
    Object.defineProperty(exports2, "unstable_parseMultipartFormData", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_parseMultipartFormData;
      }
    });
    Object.defineProperty(exports2, "FormData", {
      enumerable: !0,
      get: function() {
        return webFetch.FormData;
      }
    });
    Object.defineProperty(exports2, "Headers", {
      enumerable: !0,
      get: function() {
        return webFetch.Headers;
      }
    });
  }
});

// node_modules/slugify/slugify.js
var require_slugify = __commonJS({
  "node_modules/slugify/slugify.js"(exports2, module2) {
    (function(name, root4, factory) {
      typeof exports2 == "object" ? (module2.exports = factory(), module2.exports.default = factory()) : typeof define == "function" && define.amd ? define(factory) : root4[name] = factory();
    })("slugify", exports2, function() {
      var charMap = JSON.parse(`{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","\xA2":"cent","\xA3":"pound","\xA4":"currency","\xA5":"yen","\xA9":"(c)","\xAA":"a","\xAE":"(r)","\xBA":"o","\xC0":"A","\xC1":"A","\xC2":"A","\xC3":"A","\xC4":"A","\xC5":"A","\xC6":"AE","\xC7":"C","\xC8":"E","\xC9":"E","\xCA":"E","\xCB":"E","\xCC":"I","\xCD":"I","\xCE":"I","\xCF":"I","\xD0":"D","\xD1":"N","\xD2":"O","\xD3":"O","\xD4":"O","\xD5":"O","\xD6":"O","\xD8":"O","\xD9":"U","\xDA":"U","\xDB":"U","\xDC":"U","\xDD":"Y","\xDE":"TH","\xDF":"ss","\xE0":"a","\xE1":"a","\xE2":"a","\xE3":"a","\xE4":"a","\xE5":"a","\xE6":"ae","\xE7":"c","\xE8":"e","\xE9":"e","\xEA":"e","\xEB":"e","\xEC":"i","\xED":"i","\xEE":"i","\xEF":"i","\xF0":"d","\xF1":"n","\xF2":"o","\xF3":"o","\xF4":"o","\xF5":"o","\xF6":"o","\xF8":"o","\xF9":"u","\xFA":"u","\xFB":"u","\xFC":"u","\xFD":"y","\xFE":"th","\xFF":"y","\u0100":"A","\u0101":"a","\u0102":"A","\u0103":"a","\u0104":"A","\u0105":"a","\u0106":"C","\u0107":"c","\u010C":"C","\u010D":"c","\u010E":"D","\u010F":"d","\u0110":"DJ","\u0111":"dj","\u0112":"E","\u0113":"e","\u0116":"E","\u0117":"e","\u0118":"e","\u0119":"e","\u011A":"E","\u011B":"e","\u011E":"G","\u011F":"g","\u0122":"G","\u0123":"g","\u0128":"I","\u0129":"i","\u012A":"i","\u012B":"i","\u012E":"I","\u012F":"i","\u0130":"I","\u0131":"i","\u0136":"k","\u0137":"k","\u013B":"L","\u013C":"l","\u013D":"L","\u013E":"l","\u0141":"L","\u0142":"l","\u0143":"N","\u0144":"n","\u0145":"N","\u0146":"n","\u0147":"N","\u0148":"n","\u014C":"O","\u014D":"o","\u0150":"O","\u0151":"o","\u0152":"OE","\u0153":"oe","\u0154":"R","\u0155":"r","\u0158":"R","\u0159":"r","\u015A":"S","\u015B":"s","\u015E":"S","\u015F":"s","\u0160":"S","\u0161":"s","\u0162":"T","\u0163":"t","\u0164":"T","\u0165":"t","\u0168":"U","\u0169":"u","\u016A":"u","\u016B":"u","\u016E":"U","\u016F":"u","\u0170":"U","\u0171":"u","\u0172":"U","\u0173":"u","\u0174":"W","\u0175":"w","\u0176":"Y","\u0177":"y","\u0178":"Y","\u0179":"Z","\u017A":"z","\u017B":"Z","\u017C":"z","\u017D":"Z","\u017E":"z","\u018F":"E","\u0192":"f","\u01A0":"O","\u01A1":"o","\u01AF":"U","\u01B0":"u","\u01C8":"LJ","\u01C9":"lj","\u01CB":"NJ","\u01CC":"nj","\u0218":"S","\u0219":"s","\u021A":"T","\u021B":"t","\u0259":"e","\u02DA":"o","\u0386":"A","\u0388":"E","\u0389":"H","\u038A":"I","\u038C":"O","\u038E":"Y","\u038F":"W","\u0390":"i","\u0391":"A","\u0392":"B","\u0393":"G","\u0394":"D","\u0395":"E","\u0396":"Z","\u0397":"H","\u0398":"8","\u0399":"I","\u039A":"K","\u039B":"L","\u039C":"M","\u039D":"N","\u039E":"3","\u039F":"O","\u03A0":"P","\u03A1":"R","\u03A3":"S","\u03A4":"T","\u03A5":"Y","\u03A6":"F","\u03A7":"X","\u03A8":"PS","\u03A9":"W","\u03AA":"I","\u03AB":"Y","\u03AC":"a","\u03AD":"e","\u03AE":"h","\u03AF":"i","\u03B0":"y","\u03B1":"a","\u03B2":"b","\u03B3":"g","\u03B4":"d","\u03B5":"e","\u03B6":"z","\u03B7":"h","\u03B8":"8","\u03B9":"i","\u03BA":"k","\u03BB":"l","\u03BC":"m","\u03BD":"n","\u03BE":"3","\u03BF":"o","\u03C0":"p","\u03C1":"r","\u03C2":"s","\u03C3":"s","\u03C4":"t","\u03C5":"y","\u03C6":"f","\u03C7":"x","\u03C8":"ps","\u03C9":"w","\u03CA":"i","\u03CB":"y","\u03CC":"o","\u03CD":"y","\u03CE":"w","\u0401":"Yo","\u0402":"DJ","\u0404":"Ye","\u0406":"I","\u0407":"Yi","\u0408":"J","\u0409":"LJ","\u040A":"NJ","\u040B":"C","\u040F":"DZ","\u0410":"A","\u0411":"B","\u0412":"V","\u0413":"G","\u0414":"D","\u0415":"E","\u0416":"Zh","\u0417":"Z","\u0418":"I","\u0419":"J","\u041A":"K","\u041B":"L","\u041C":"M","\u041D":"N","\u041E":"O","\u041F":"P","\u0420":"R","\u0421":"S","\u0422":"T","\u0423":"U","\u0424":"F","\u0425":"H","\u0426":"C","\u0427":"Ch","\u0428":"Sh","\u0429":"Sh","\u042A":"U","\u042B":"Y","\u042C":"","\u042D":"E","\u042E":"Yu","\u042F":"Ya","\u0430":"a","\u0431":"b","\u0432":"v","\u0433":"g","\u0434":"d","\u0435":"e","\u0436":"zh","\u0437":"z","\u0438":"i","\u0439":"j","\u043A":"k","\u043B":"l","\u043C":"m","\u043D":"n","\u043E":"o","\u043F":"p","\u0440":"r","\u0441":"s","\u0442":"t","\u0443":"u","\u0444":"f","\u0445":"h","\u0446":"c","\u0447":"ch","\u0448":"sh","\u0449":"sh","\u044A":"u","\u044B":"y","\u044C":"","\u044D":"e","\u044E":"yu","\u044F":"ya","\u0451":"yo","\u0452":"dj","\u0454":"ye","\u0456":"i","\u0457":"yi","\u0458":"j","\u0459":"lj","\u045A":"nj","\u045B":"c","\u045D":"u","\u045F":"dz","\u0490":"G","\u0491":"g","\u0492":"GH","\u0493":"gh","\u049A":"KH","\u049B":"kh","\u04A2":"NG","\u04A3":"ng","\u04AE":"UE","\u04AF":"ue","\u04B0":"U","\u04B1":"u","\u04BA":"H","\u04BB":"h","\u04D8":"AE","\u04D9":"ae","\u04E8":"OE","\u04E9":"oe","\u0531":"A","\u0532":"B","\u0533":"G","\u0534":"D","\u0535":"E","\u0536":"Z","\u0537":"E'","\u0538":"Y'","\u0539":"T'","\u053A":"JH","\u053B":"I","\u053C":"L","\u053D":"X","\u053E":"C'","\u053F":"K","\u0540":"H","\u0541":"D'","\u0542":"GH","\u0543":"TW","\u0544":"M","\u0545":"Y","\u0546":"N","\u0547":"SH","\u0549":"CH","\u054A":"P","\u054B":"J","\u054C":"R'","\u054D":"S","\u054E":"V","\u054F":"T","\u0550":"R","\u0551":"C","\u0553":"P'","\u0554":"Q'","\u0555":"O''","\u0556":"F","\u0587":"EV","\u0621":"a","\u0622":"aa","\u0623":"a","\u0624":"u","\u0625":"i","\u0626":"e","\u0627":"a","\u0628":"b","\u0629":"h","\u062A":"t","\u062B":"th","\u062C":"j","\u062D":"h","\u062E":"kh","\u062F":"d","\u0630":"th","\u0631":"r","\u0632":"z","\u0633":"s","\u0634":"sh","\u0635":"s","\u0636":"dh","\u0637":"t","\u0638":"z","\u0639":"a","\u063A":"gh","\u0641":"f","\u0642":"q","\u0643":"k","\u0644":"l","\u0645":"m","\u0646":"n","\u0647":"h","\u0648":"w","\u0649":"a","\u064A":"y","\u064B":"an","\u064C":"on","\u064D":"en","\u064E":"a","\u064F":"u","\u0650":"e","\u0652":"","\u0660":"0","\u0661":"1","\u0662":"2","\u0663":"3","\u0664":"4","\u0665":"5","\u0666":"6","\u0667":"7","\u0668":"8","\u0669":"9","\u067E":"p","\u0686":"ch","\u0698":"zh","\u06A9":"k","\u06AF":"g","\u06CC":"y","\u06F0":"0","\u06F1":"1","\u06F2":"2","\u06F3":"3","\u06F4":"4","\u06F5":"5","\u06F6":"6","\u06F7":"7","\u06F8":"8","\u06F9":"9","\u0E3F":"baht","\u10D0":"a","\u10D1":"b","\u10D2":"g","\u10D3":"d","\u10D4":"e","\u10D5":"v","\u10D6":"z","\u10D7":"t","\u10D8":"i","\u10D9":"k","\u10DA":"l","\u10DB":"m","\u10DC":"n","\u10DD":"o","\u10DE":"p","\u10DF":"zh","\u10E0":"r","\u10E1":"s","\u10E2":"t","\u10E3":"u","\u10E4":"f","\u10E5":"k","\u10E6":"gh","\u10E7":"q","\u10E8":"sh","\u10E9":"ch","\u10EA":"ts","\u10EB":"dz","\u10EC":"ts","\u10ED":"ch","\u10EE":"kh","\u10EF":"j","\u10F0":"h","\u1E62":"S","\u1E63":"s","\u1E80":"W","\u1E81":"w","\u1E82":"W","\u1E83":"w","\u1E84":"W","\u1E85":"w","\u1E9E":"SS","\u1EA0":"A","\u1EA1":"a","\u1EA2":"A","\u1EA3":"a","\u1EA4":"A","\u1EA5":"a","\u1EA6":"A","\u1EA7":"a","\u1EA8":"A","\u1EA9":"a","\u1EAA":"A","\u1EAB":"a","\u1EAC":"A","\u1EAD":"a","\u1EAE":"A","\u1EAF":"a","\u1EB0":"A","\u1EB1":"a","\u1EB2":"A","\u1EB3":"a","\u1EB4":"A","\u1EB5":"a","\u1EB6":"A","\u1EB7":"a","\u1EB8":"E","\u1EB9":"e","\u1EBA":"E","\u1EBB":"e","\u1EBC":"E","\u1EBD":"e","\u1EBE":"E","\u1EBF":"e","\u1EC0":"E","\u1EC1":"e","\u1EC2":"E","\u1EC3":"e","\u1EC4":"E","\u1EC5":"e","\u1EC6":"E","\u1EC7":"e","\u1EC8":"I","\u1EC9":"i","\u1ECA":"I","\u1ECB":"i","\u1ECC":"O","\u1ECD":"o","\u1ECE":"O","\u1ECF":"o","\u1ED0":"O","\u1ED1":"o","\u1ED2":"O","\u1ED3":"o","\u1ED4":"O","\u1ED5":"o","\u1ED6":"O","\u1ED7":"o","\u1ED8":"O","\u1ED9":"o","\u1EDA":"O","\u1EDB":"o","\u1EDC":"O","\u1EDD":"o","\u1EDE":"O","\u1EDF":"o","\u1EE0":"O","\u1EE1":"o","\u1EE2":"O","\u1EE3":"o","\u1EE4":"U","\u1EE5":"u","\u1EE6":"U","\u1EE7":"u","\u1EE8":"U","\u1EE9":"u","\u1EEA":"U","\u1EEB":"u","\u1EEC":"U","\u1EED":"u","\u1EEE":"U","\u1EEF":"u","\u1EF0":"U","\u1EF1":"u","\u1EF2":"Y","\u1EF3":"y","\u1EF4":"Y","\u1EF5":"y","\u1EF6":"Y","\u1EF7":"y","\u1EF8":"Y","\u1EF9":"y","\u2013":"-","\u2018":"'","\u2019":"'","\u201C":"\\"","\u201D":"\\"","\u201E":"\\"","\u2020":"+","\u2022":"*","\u2026":"...","\u20A0":"ecu","\u20A2":"cruzeiro","\u20A3":"french franc","\u20A4":"lira","\u20A5":"mill","\u20A6":"naira","\u20A7":"peseta","\u20A8":"rupee","\u20A9":"won","\u20AA":"new shequel","\u20AB":"dong","\u20AC":"euro","\u20AD":"kip","\u20AE":"tugrik","\u20AF":"drachma","\u20B0":"penny","\u20B1":"peso","\u20B2":"guarani","\u20B3":"austral","\u20B4":"hryvnia","\u20B5":"cedi","\u20B8":"kazakhstani tenge","\u20B9":"indian rupee","\u20BA":"turkish lira","\u20BD":"russian ruble","\u20BF":"bitcoin","\u2120":"sm","\u2122":"tm","\u2202":"d","\u2206":"delta","\u2211":"sum","\u221E":"infinity","\u2665":"love","\u5143":"yuan","\u5186":"yen","\uFDFC":"rial","\uFEF5":"laa","\uFEF7":"laa","\uFEF9":"lai","\uFEFB":"la"}`), locales = JSON.parse('{"bg":{"\u0419":"Y","\u0426":"Ts","\u0429":"Sht","\u042A":"A","\u042C":"Y","\u0439":"y","\u0446":"ts","\u0449":"sht","\u044A":"a","\u044C":"y"},"de":{"\xC4":"AE","\xE4":"ae","\xD6":"OE","\xF6":"oe","\xDC":"UE","\xFC":"ue","\xDF":"ss","%":"prozent","&":"und","|":"oder","\u2211":"summe","\u221E":"unendlich","\u2665":"liebe"},"es":{"%":"por ciento","&":"y","<":"menor que",">":"mayor que","|":"o","\xA2":"centavos","\xA3":"libras","\xA4":"moneda","\u20A3":"francos","\u2211":"suma","\u221E":"infinito","\u2665":"amor"},"fr":{"%":"pourcent","&":"et","<":"plus petit",">":"plus grand","|":"ou","\xA2":"centime","\xA3":"livre","\xA4":"devise","\u20A3":"franc","\u2211":"somme","\u221E":"infini","\u2665":"amour"},"pt":{"%":"porcento","&":"e","<":"menor",">":"maior","|":"ou","\xA2":"centavo","\u2211":"soma","\xA3":"libra","\u221E":"infinito","\u2665":"amor"},"uk":{"\u0418":"Y","\u0438":"y","\u0419":"Y","\u0439":"y","\u0426":"Ts","\u0446":"ts","\u0425":"Kh","\u0445":"kh","\u0429":"Shch","\u0449":"shch","\u0413":"H","\u0433":"h"},"vi":{"\u0110":"D","\u0111":"d"},"da":{"\xD8":"OE","\xF8":"oe","\xC5":"AA","\xE5":"aa","%":"procent","&":"og","|":"eller","$":"dollar","<":"mindre end",">":"st\xF8rre end"},"nb":{"&":"og","\xC5":"AA","\xC6":"AE","\xD8":"OE","\xE5":"aa","\xE6":"ae","\xF8":"oe"},"it":{"&":"e"},"nl":{"&":"en"},"sv":{"&":"och","\xC5":"AA","\xC4":"AE","\xD6":"OE","\xE5":"aa","\xE4":"ae","\xF6":"oe"}}');
      function replace2(string3, options2) {
        if (typeof string3 != "string")
          throw new Error("slugify: string argument expected");
        options2 = typeof options2 == "string" ? { replacement: options2 } : options2 || {};
        var locale = locales[options2.locale] || {}, replacement = options2.replacement === void 0 ? "-" : options2.replacement, trim = options2.trim === void 0 ? !0 : options2.trim, slug = string3.normalize().split("").reduce(function(result, ch) {
          var appendChar = locale[ch] || charMap[ch] || ch;
          return appendChar === replacement && (appendChar = " "), result + appendChar.replace(options2.remove || /[^\w\s$*_+~.()'"!\-:@]+/g, "");
        }, "");
        return options2.strict && (slug = slug.replace(/[^A-Za-z0-9\s]/g, "")), trim && (slug = slug.trim()), slug = slug.replace(/\s+/g, replacement), options2.lower && (slug = slug.toLowerCase()), slug;
      }
      return replace2.extend = function(customMap) {
        Object.assign(charMap, customMap);
      }, replace2;
    });
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/common/unicode.js
var require_unicode = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/common/unicode.js"(exports2) {
    "use strict";
    var UNDEFINED_CODE_POINTS2 = [
      65534,
      65535,
      131070,
      131071,
      196606,
      196607,
      262142,
      262143,
      327678,
      327679,
      393214,
      393215,
      458750,
      458751,
      524286,
      524287,
      589822,
      589823,
      655358,
      655359,
      720894,
      720895,
      786430,
      786431,
      851966,
      851967,
      917502,
      917503,
      983038,
      983039,
      1048574,
      1048575,
      1114110,
      1114111
    ];
    exports2.REPLACEMENT_CHARACTER = "\uFFFD";
    exports2.CODE_POINTS = {
      EOF: -1,
      NULL: 0,
      TABULATION: 9,
      CARRIAGE_RETURN: 13,
      LINE_FEED: 10,
      FORM_FEED: 12,
      SPACE: 32,
      EXCLAMATION_MARK: 33,
      QUOTATION_MARK: 34,
      NUMBER_SIGN: 35,
      AMPERSAND: 38,
      APOSTROPHE: 39,
      HYPHEN_MINUS: 45,
      SOLIDUS: 47,
      DIGIT_0: 48,
      DIGIT_9: 57,
      SEMICOLON: 59,
      LESS_THAN_SIGN: 60,
      EQUALS_SIGN: 61,
      GREATER_THAN_SIGN: 62,
      QUESTION_MARK: 63,
      LATIN_CAPITAL_A: 65,
      LATIN_CAPITAL_F: 70,
      LATIN_CAPITAL_X: 88,
      LATIN_CAPITAL_Z: 90,
      RIGHT_SQUARE_BRACKET: 93,
      GRAVE_ACCENT: 96,
      LATIN_SMALL_A: 97,
      LATIN_SMALL_F: 102,
      LATIN_SMALL_X: 120,
      LATIN_SMALL_Z: 122,
      REPLACEMENT_CHARACTER: 65533
    };
    exports2.CODE_POINT_SEQUENCES = {
      DASH_DASH_STRING: [45, 45],
      DOCTYPE_STRING: [68, 79, 67, 84, 89, 80, 69],
      CDATA_START_STRING: [91, 67, 68, 65, 84, 65, 91],
      SCRIPT_STRING: [115, 99, 114, 105, 112, 116],
      PUBLIC_STRING: [80, 85, 66, 76, 73, 67],
      SYSTEM_STRING: [83, 89, 83, 84, 69, 77]
    };
    exports2.isSurrogate = function(cp) {
      return cp >= 55296 && cp <= 57343;
    };
    exports2.isSurrogatePair = function(cp) {
      return cp >= 56320 && cp <= 57343;
    };
    exports2.getSurrogatePairCodePoint = function(cp1, cp2) {
      return (cp1 - 55296) * 1024 + 9216 + cp2;
    };
    exports2.isControlCodePoint = function(cp) {
      return cp !== 32 && cp !== 10 && cp !== 13 && cp !== 9 && cp !== 12 && cp >= 1 && cp <= 31 || cp >= 127 && cp <= 159;
    };
    exports2.isUndefinedCodePoint = function(cp) {
      return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS2.indexOf(cp) > -1;
    };
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/common/error-codes.js
var require_error_codes = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/common/error-codes.js"(exports2, module2) {
    "use strict";
    module2.exports = {
      controlCharacterInInputStream: "control-character-in-input-stream",
      noncharacterInInputStream: "noncharacter-in-input-stream",
      surrogateInInputStream: "surrogate-in-input-stream",
      nonVoidHtmlElementStartTagWithTrailingSolidus: "non-void-html-element-start-tag-with-trailing-solidus",
      endTagWithAttributes: "end-tag-with-attributes",
      endTagWithTrailingSolidus: "end-tag-with-trailing-solidus",
      unexpectedSolidusInTag: "unexpected-solidus-in-tag",
      unexpectedNullCharacter: "unexpected-null-character",
      unexpectedQuestionMarkInsteadOfTagName: "unexpected-question-mark-instead-of-tag-name",
      invalidFirstCharacterOfTagName: "invalid-first-character-of-tag-name",
      unexpectedEqualsSignBeforeAttributeName: "unexpected-equals-sign-before-attribute-name",
      missingEndTagName: "missing-end-tag-name",
      unexpectedCharacterInAttributeName: "unexpected-character-in-attribute-name",
      unknownNamedCharacterReference: "unknown-named-character-reference",
      missingSemicolonAfterCharacterReference: "missing-semicolon-after-character-reference",
      unexpectedCharacterAfterDoctypeSystemIdentifier: "unexpected-character-after-doctype-system-identifier",
      unexpectedCharacterInUnquotedAttributeValue: "unexpected-character-in-unquoted-attribute-value",
      eofBeforeTagName: "eof-before-tag-name",
      eofInTag: "eof-in-tag",
      missingAttributeValue: "missing-attribute-value",
      missingWhitespaceBetweenAttributes: "missing-whitespace-between-attributes",
      missingWhitespaceAfterDoctypePublicKeyword: "missing-whitespace-after-doctype-public-keyword",
      missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: "missing-whitespace-between-doctype-public-and-system-identifiers",
      missingWhitespaceAfterDoctypeSystemKeyword: "missing-whitespace-after-doctype-system-keyword",
      missingQuoteBeforeDoctypePublicIdentifier: "missing-quote-before-doctype-public-identifier",
      missingQuoteBeforeDoctypeSystemIdentifier: "missing-quote-before-doctype-system-identifier",
      missingDoctypePublicIdentifier: "missing-doctype-public-identifier",
      missingDoctypeSystemIdentifier: "missing-doctype-system-identifier",
      abruptDoctypePublicIdentifier: "abrupt-doctype-public-identifier",
      abruptDoctypeSystemIdentifier: "abrupt-doctype-system-identifier",
      cdataInHtmlContent: "cdata-in-html-content",
      incorrectlyOpenedComment: "incorrectly-opened-comment",
      eofInScriptHtmlCommentLikeText: "eof-in-script-html-comment-like-text",
      eofInDoctype: "eof-in-doctype",
      nestedComment: "nested-comment",
      abruptClosingOfEmptyComment: "abrupt-closing-of-empty-comment",
      eofInComment: "eof-in-comment",
      incorrectlyClosedComment: "incorrectly-closed-comment",
      eofInCdata: "eof-in-cdata",
      absenceOfDigitsInNumericCharacterReference: "absence-of-digits-in-numeric-character-reference",
      nullCharacterReference: "null-character-reference",
      surrogateCharacterReference: "surrogate-character-reference",
      characterReferenceOutsideUnicodeRange: "character-reference-outside-unicode-range",
      controlCharacterReference: "control-character-reference",
      noncharacterCharacterReference: "noncharacter-character-reference",
      missingWhitespaceBeforeDoctypeName: "missing-whitespace-before-doctype-name",
      missingDoctypeName: "missing-doctype-name",
      invalidCharacterSequenceAfterDoctypeName: "invalid-character-sequence-after-doctype-name",
      duplicateAttribute: "duplicate-attribute",
      nonConformingDoctype: "non-conforming-doctype",
      missingDoctype: "missing-doctype",
      misplacedDoctype: "misplaced-doctype",
      endTagWithoutMatchingOpenElement: "end-tag-without-matching-open-element",
      closingOfElementWithOpenChildElements: "closing-of-element-with-open-child-elements",
      disallowedContentInNoscriptInHead: "disallowed-content-in-noscript-in-head",
      openElementsLeftAfterEof: "open-elements-left-after-eof",
      abandonedHeadElementChild: "abandoned-head-element-child",
      misplacedStartTagForHeadElement: "misplaced-start-tag-for-head-element",
      nestedNoscriptInHead: "nested-noscript-in-head",
      eofInElementThatCanContainOnlyText: "eof-in-element-that-can-contain-only-text"
    };
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/preprocessor.js
var require_preprocessor = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/preprocessor.js"(exports2, module2) {
    "use strict";
    var unicode = require_unicode(), ERR2 = require_error_codes(), $2 = unicode.CODE_POINTS, DEFAULT_BUFFER_WATERLINE2 = 1 << 16, Preprocessor2 = class {
      constructor() {
        this.html = null, this.pos = -1, this.lastGapPos = -1, this.lastCharPos = -1, this.gapStack = [], this.skipNextNewLine = !1, this.lastChunkWritten = !1, this.endOfChunkHit = !1, this.bufferWaterline = DEFAULT_BUFFER_WATERLINE2;
      }
      _err() {
      }
      _addGap() {
        this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos;
      }
      _processSurrogate(cp) {
        if (this.pos !== this.lastCharPos) {
          let nextCp = this.html.charCodeAt(this.pos + 1);
          if (unicode.isSurrogatePair(nextCp))
            return this.pos++, this._addGap(), unicode.getSurrogatePairCodePoint(cp, nextCp);
        } else if (!this.lastChunkWritten)
          return this.endOfChunkHit = !0, $2.EOF;
        return this._err(ERR2.surrogateInInputStream), cp;
      }
      dropParsedChunk() {
        this.pos > this.bufferWaterline && (this.lastCharPos -= this.pos, this.html = this.html.substring(this.pos), this.pos = 0, this.lastGapPos = -1, this.gapStack = []);
      }
      write(chunk, isLastChunk) {
        this.html ? this.html += chunk : this.html = chunk, this.lastCharPos = this.html.length - 1, this.endOfChunkHit = !1, this.lastChunkWritten = isLastChunk;
      }
      insertHtmlAtCurrentPos(chunk) {
        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length), this.lastCharPos = this.html.length - 1, this.endOfChunkHit = !1;
      }
      advance() {
        if (this.pos++, this.pos > this.lastCharPos)
          return this.endOfChunkHit = !this.lastChunkWritten, $2.EOF;
        let cp = this.html.charCodeAt(this.pos);
        return this.skipNextNewLine && cp === $2.LINE_FEED ? (this.skipNextNewLine = !1, this._addGap(), this.advance()) : cp === $2.CARRIAGE_RETURN ? (this.skipNextNewLine = !0, $2.LINE_FEED) : (this.skipNextNewLine = !1, unicode.isSurrogate(cp) && (cp = this._processSurrogate(cp)), cp > 31 && cp < 127 || cp === $2.LINE_FEED || cp === $2.CARRIAGE_RETURN || cp > 159 && cp < 64976 || this._checkForProblematicCharacters(cp), cp);
      }
      _checkForProblematicCharacters(cp) {
        unicode.isControlCodePoint(cp) ? this._err(ERR2.controlCharacterInInputStream) : unicode.isUndefinedCodePoint(cp) && this._err(ERR2.noncharacterInInputStream);
      }
      retreat() {
        this.pos === this.lastGapPos && (this.lastGapPos = this.gapStack.pop(), this.pos--), this.pos--;
      }
    };
    module2.exports = Preprocessor2;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/named-entity-data.js
var require_named_entity_data = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/named-entity-data.js"(exports2, module2) {
    "use strict";
    module2.exports = new Uint16Array([4, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 106, 303, 412, 810, 1432, 1701, 1796, 1987, 2114, 2360, 2420, 2484, 3170, 3251, 4140, 4393, 4575, 4610, 5106, 5512, 5728, 6117, 6274, 6315, 6345, 6427, 6516, 7002, 7910, 8733, 9323, 9870, 10170, 10631, 10893, 11318, 11386, 11467, 12773, 13092, 14474, 14922, 15448, 15542, 16419, 17666, 18166, 18611, 19004, 19095, 19298, 19397, 4, 16, 69, 77, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 140, 150, 158, 169, 176, 194, 199, 210, 216, 222, 226, 242, 256, 266, 283, 294, 108, 105, 103, 5, 198, 1, 59, 148, 1, 198, 80, 5, 38, 1, 59, 156, 1, 38, 99, 117, 116, 101, 5, 193, 1, 59, 167, 1, 193, 114, 101, 118, 101, 59, 1, 258, 4, 2, 105, 121, 182, 191, 114, 99, 5, 194, 1, 59, 189, 1, 194, 59, 1, 1040, 114, 59, 3, 55349, 56580, 114, 97, 118, 101, 5, 192, 1, 59, 208, 1, 192, 112, 104, 97, 59, 1, 913, 97, 99, 114, 59, 1, 256, 100, 59, 1, 10835, 4, 2, 103, 112, 232, 237, 111, 110, 59, 1, 260, 102, 59, 3, 55349, 56632, 112, 108, 121, 70, 117, 110, 99, 116, 105, 111, 110, 59, 1, 8289, 105, 110, 103, 5, 197, 1, 59, 264, 1, 197, 4, 2, 99, 115, 272, 277, 114, 59, 3, 55349, 56476, 105, 103, 110, 59, 1, 8788, 105, 108, 100, 101, 5, 195, 1, 59, 292, 1, 195, 109, 108, 5, 196, 1, 59, 301, 1, 196, 4, 8, 97, 99, 101, 102, 111, 114, 115, 117, 321, 350, 354, 383, 388, 394, 400, 405, 4, 2, 99, 114, 327, 336, 107, 115, 108, 97, 115, 104, 59, 1, 8726, 4, 2, 118, 119, 342, 345, 59, 1, 10983, 101, 100, 59, 1, 8966, 121, 59, 1, 1041, 4, 3, 99, 114, 116, 362, 369, 379, 97, 117, 115, 101, 59, 1, 8757, 110, 111, 117, 108, 108, 105, 115, 59, 1, 8492, 97, 59, 1, 914, 114, 59, 3, 55349, 56581, 112, 102, 59, 3, 55349, 56633, 101, 118, 101, 59, 1, 728, 99, 114, 59, 1, 8492, 109, 112, 101, 113, 59, 1, 8782, 4, 14, 72, 79, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 117, 442, 447, 456, 504, 542, 547, 569, 573, 577, 616, 678, 784, 790, 796, 99, 121, 59, 1, 1063, 80, 89, 5, 169, 1, 59, 454, 1, 169, 4, 3, 99, 112, 121, 464, 470, 497, 117, 116, 101, 59, 1, 262, 4, 2, 59, 105, 476, 478, 1, 8914, 116, 97, 108, 68, 105, 102, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8517, 108, 101, 121, 115, 59, 1, 8493, 4, 4, 97, 101, 105, 111, 514, 520, 530, 535, 114, 111, 110, 59, 1, 268, 100, 105, 108, 5, 199, 1, 59, 528, 1, 199, 114, 99, 59, 1, 264, 110, 105, 110, 116, 59, 1, 8752, 111, 116, 59, 1, 266, 4, 2, 100, 110, 553, 560, 105, 108, 108, 97, 59, 1, 184, 116, 101, 114, 68, 111, 116, 59, 1, 183, 114, 59, 1, 8493, 105, 59, 1, 935, 114, 99, 108, 101, 4, 4, 68, 77, 80, 84, 591, 596, 603, 609, 111, 116, 59, 1, 8857, 105, 110, 117, 115, 59, 1, 8854, 108, 117, 115, 59, 1, 8853, 105, 109, 101, 115, 59, 1, 8855, 111, 4, 2, 99, 115, 623, 646, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8754, 101, 67, 117, 114, 108, 121, 4, 2, 68, 81, 658, 671, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8221, 117, 111, 116, 101, 59, 1, 8217, 4, 4, 108, 110, 112, 117, 688, 701, 736, 753, 111, 110, 4, 2, 59, 101, 696, 698, 1, 8759, 59, 1, 10868, 4, 3, 103, 105, 116, 709, 717, 722, 114, 117, 101, 110, 116, 59, 1, 8801, 110, 116, 59, 1, 8751, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8750, 4, 2, 102, 114, 742, 745, 59, 1, 8450, 111, 100, 117, 99, 116, 59, 1, 8720, 110, 116, 101, 114, 67, 108, 111, 99, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8755, 111, 115, 115, 59, 1, 10799, 99, 114, 59, 3, 55349, 56478, 112, 4, 2, 59, 67, 803, 805, 1, 8915, 97, 112, 59, 1, 8781, 4, 11, 68, 74, 83, 90, 97, 99, 101, 102, 105, 111, 115, 834, 850, 855, 860, 865, 888, 903, 916, 921, 1011, 1415, 4, 2, 59, 111, 840, 842, 1, 8517, 116, 114, 97, 104, 100, 59, 1, 10513, 99, 121, 59, 1, 1026, 99, 121, 59, 1, 1029, 99, 121, 59, 1, 1039, 4, 3, 103, 114, 115, 873, 879, 883, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8609, 104, 118, 59, 1, 10980, 4, 2, 97, 121, 894, 900, 114, 111, 110, 59, 1, 270, 59, 1, 1044, 108, 4, 2, 59, 116, 910, 912, 1, 8711, 97, 59, 1, 916, 114, 59, 3, 55349, 56583, 4, 2, 97, 102, 927, 998, 4, 2, 99, 109, 933, 992, 114, 105, 116, 105, 99, 97, 108, 4, 4, 65, 68, 71, 84, 950, 957, 978, 985, 99, 117, 116, 101, 59, 1, 180, 111, 4, 2, 116, 117, 964, 967, 59, 1, 729, 98, 108, 101, 65, 99, 117, 116, 101, 59, 1, 733, 114, 97, 118, 101, 59, 1, 96, 105, 108, 100, 101, 59, 1, 732, 111, 110, 100, 59, 1, 8900, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8518, 4, 4, 112, 116, 117, 119, 1021, 1026, 1048, 1249, 102, 59, 3, 55349, 56635, 4, 3, 59, 68, 69, 1034, 1036, 1041, 1, 168, 111, 116, 59, 1, 8412, 113, 117, 97, 108, 59, 1, 8784, 98, 108, 101, 4, 6, 67, 68, 76, 82, 85, 86, 1065, 1082, 1101, 1189, 1211, 1236, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8751, 111, 4, 2, 116, 119, 1089, 1092, 59, 1, 168, 110, 65, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 101, 111, 1107, 1141, 102, 116, 4, 3, 65, 82, 84, 1117, 1124, 1136, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8660, 101, 101, 59, 1, 10980, 110, 103, 4, 2, 76, 82, 1149, 1177, 101, 102, 116, 4, 2, 65, 82, 1158, 1165, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10233, 105, 103, 104, 116, 4, 2, 65, 84, 1199, 1206, 114, 114, 111, 119, 59, 1, 8658, 101, 101, 59, 1, 8872, 112, 4, 2, 65, 68, 1218, 1225, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8741, 110, 4, 6, 65, 66, 76, 82, 84, 97, 1264, 1292, 1299, 1352, 1391, 1408, 114, 114, 111, 119, 4, 3, 59, 66, 85, 1276, 1278, 1283, 1, 8595, 97, 114, 59, 1, 10515, 112, 65, 114, 114, 111, 119, 59, 1, 8693, 114, 101, 118, 101, 59, 1, 785, 101, 102, 116, 4, 3, 82, 84, 86, 1310, 1323, 1334, 105, 103, 104, 116, 86, 101, 99, 116, 111, 114, 59, 1, 10576, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10590, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1345, 1347, 1, 8637, 97, 114, 59, 1, 10582, 105, 103, 104, 116, 4, 2, 84, 86, 1362, 1373, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10591, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1384, 1386, 1, 8641, 97, 114, 59, 1, 10583, 101, 101, 4, 2, 59, 65, 1399, 1401, 1, 8868, 114, 114, 111, 119, 59, 1, 8615, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 99, 116, 1421, 1426, 114, 59, 3, 55349, 56479, 114, 111, 107, 59, 1, 272, 4, 16, 78, 84, 97, 99, 100, 102, 103, 108, 109, 111, 112, 113, 115, 116, 117, 120, 1466, 1470, 1478, 1489, 1515, 1520, 1525, 1536, 1544, 1593, 1609, 1617, 1650, 1664, 1668, 1677, 71, 59, 1, 330, 72, 5, 208, 1, 59, 1476, 1, 208, 99, 117, 116, 101, 5, 201, 1, 59, 1487, 1, 201, 4, 3, 97, 105, 121, 1497, 1503, 1512, 114, 111, 110, 59, 1, 282, 114, 99, 5, 202, 1, 59, 1510, 1, 202, 59, 1, 1069, 111, 116, 59, 1, 278, 114, 59, 3, 55349, 56584, 114, 97, 118, 101, 5, 200, 1, 59, 1534, 1, 200, 101, 109, 101, 110, 116, 59, 1, 8712, 4, 2, 97, 112, 1550, 1555, 99, 114, 59, 1, 274, 116, 121, 4, 2, 83, 86, 1563, 1576, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9723, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9643, 4, 2, 103, 112, 1599, 1604, 111, 110, 59, 1, 280, 102, 59, 3, 55349, 56636, 115, 105, 108, 111, 110, 59, 1, 917, 117, 4, 2, 97, 105, 1624, 1640, 108, 4, 2, 59, 84, 1631, 1633, 1, 10869, 105, 108, 100, 101, 59, 1, 8770, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8652, 4, 2, 99, 105, 1656, 1660, 114, 59, 1, 8496, 109, 59, 1, 10867, 97, 59, 1, 919, 109, 108, 5, 203, 1, 59, 1675, 1, 203, 4, 2, 105, 112, 1683, 1689, 115, 116, 115, 59, 1, 8707, 111, 110, 101, 110, 116, 105, 97, 108, 69, 59, 1, 8519, 4, 5, 99, 102, 105, 111, 115, 1713, 1717, 1722, 1762, 1791, 121, 59, 1, 1060, 114, 59, 3, 55349, 56585, 108, 108, 101, 100, 4, 2, 83, 86, 1732, 1745, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9724, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9642, 4, 3, 112, 114, 117, 1770, 1775, 1781, 102, 59, 3, 55349, 56637, 65, 108, 108, 59, 1, 8704, 114, 105, 101, 114, 116, 114, 102, 59, 1, 8497, 99, 114, 59, 1, 8497, 4, 12, 74, 84, 97, 98, 99, 100, 102, 103, 111, 114, 115, 116, 1822, 1827, 1834, 1848, 1855, 1877, 1882, 1887, 1890, 1896, 1978, 1984, 99, 121, 59, 1, 1027, 5, 62, 1, 59, 1832, 1, 62, 109, 109, 97, 4, 2, 59, 100, 1843, 1845, 1, 915, 59, 1, 988, 114, 101, 118, 101, 59, 1, 286, 4, 3, 101, 105, 121, 1863, 1869, 1874, 100, 105, 108, 59, 1, 290, 114, 99, 59, 1, 284, 59, 1, 1043, 111, 116, 59, 1, 288, 114, 59, 3, 55349, 56586, 59, 1, 8921, 112, 102, 59, 3, 55349, 56638, 101, 97, 116, 101, 114, 4, 6, 69, 70, 71, 76, 83, 84, 1915, 1933, 1944, 1953, 1959, 1971, 113, 117, 97, 108, 4, 2, 59, 76, 1925, 1927, 1, 8805, 101, 115, 115, 59, 1, 8923, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8807, 114, 101, 97, 116, 101, 114, 59, 1, 10914, 101, 115, 115, 59, 1, 8823, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10878, 105, 108, 100, 101, 59, 1, 8819, 99, 114, 59, 3, 55349, 56482, 59, 1, 8811, 4, 8, 65, 97, 99, 102, 105, 111, 115, 117, 2005, 2012, 2026, 2032, 2036, 2049, 2073, 2089, 82, 68, 99, 121, 59, 1, 1066, 4, 2, 99, 116, 2018, 2023, 101, 107, 59, 1, 711, 59, 1, 94, 105, 114, 99, 59, 1, 292, 114, 59, 1, 8460, 108, 98, 101, 114, 116, 83, 112, 97, 99, 101, 59, 1, 8459, 4, 2, 112, 114, 2055, 2059, 102, 59, 1, 8461, 105, 122, 111, 110, 116, 97, 108, 76, 105, 110, 101, 59, 1, 9472, 4, 2, 99, 116, 2079, 2083, 114, 59, 1, 8459, 114, 111, 107, 59, 1, 294, 109, 112, 4, 2, 68, 69, 2097, 2107, 111, 119, 110, 72, 117, 109, 112, 59, 1, 8782, 113, 117, 97, 108, 59, 1, 8783, 4, 14, 69, 74, 79, 97, 99, 100, 102, 103, 109, 110, 111, 115, 116, 117, 2144, 2149, 2155, 2160, 2171, 2189, 2194, 2198, 2209, 2245, 2307, 2329, 2334, 2341, 99, 121, 59, 1, 1045, 108, 105, 103, 59, 1, 306, 99, 121, 59, 1, 1025, 99, 117, 116, 101, 5, 205, 1, 59, 2169, 1, 205, 4, 2, 105, 121, 2177, 2186, 114, 99, 5, 206, 1, 59, 2184, 1, 206, 59, 1, 1048, 111, 116, 59, 1, 304, 114, 59, 1, 8465, 114, 97, 118, 101, 5, 204, 1, 59, 2207, 1, 204, 4, 3, 59, 97, 112, 2217, 2219, 2238, 1, 8465, 4, 2, 99, 103, 2225, 2229, 114, 59, 1, 298, 105, 110, 97, 114, 121, 73, 59, 1, 8520, 108, 105, 101, 115, 59, 1, 8658, 4, 2, 116, 118, 2251, 2281, 4, 2, 59, 101, 2257, 2259, 1, 8748, 4, 2, 103, 114, 2265, 2271, 114, 97, 108, 59, 1, 8747, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8898, 105, 115, 105, 98, 108, 101, 4, 2, 67, 84, 2293, 2300, 111, 109, 109, 97, 59, 1, 8291, 105, 109, 101, 115, 59, 1, 8290, 4, 3, 103, 112, 116, 2315, 2320, 2325, 111, 110, 59, 1, 302, 102, 59, 3, 55349, 56640, 97, 59, 1, 921, 99, 114, 59, 1, 8464, 105, 108, 100, 101, 59, 1, 296, 4, 2, 107, 109, 2347, 2352, 99, 121, 59, 1, 1030, 108, 5, 207, 1, 59, 2358, 1, 207, 4, 5, 99, 102, 111, 115, 117, 2372, 2386, 2391, 2397, 2414, 4, 2, 105, 121, 2378, 2383, 114, 99, 59, 1, 308, 59, 1, 1049, 114, 59, 3, 55349, 56589, 112, 102, 59, 3, 55349, 56641, 4, 2, 99, 101, 2403, 2408, 114, 59, 3, 55349, 56485, 114, 99, 121, 59, 1, 1032, 107, 99, 121, 59, 1, 1028, 4, 7, 72, 74, 97, 99, 102, 111, 115, 2436, 2441, 2446, 2452, 2467, 2472, 2478, 99, 121, 59, 1, 1061, 99, 121, 59, 1, 1036, 112, 112, 97, 59, 1, 922, 4, 2, 101, 121, 2458, 2464, 100, 105, 108, 59, 1, 310, 59, 1, 1050, 114, 59, 3, 55349, 56590, 112, 102, 59, 3, 55349, 56642, 99, 114, 59, 3, 55349, 56486, 4, 11, 74, 84, 97, 99, 101, 102, 108, 109, 111, 115, 116, 2508, 2513, 2520, 2562, 2585, 2981, 2986, 3004, 3011, 3146, 3167, 99, 121, 59, 1, 1033, 5, 60, 1, 59, 2518, 1, 60, 4, 5, 99, 109, 110, 112, 114, 2532, 2538, 2544, 2548, 2558, 117, 116, 101, 59, 1, 313, 98, 100, 97, 59, 1, 923, 103, 59, 1, 10218, 108, 97, 99, 101, 116, 114, 102, 59, 1, 8466, 114, 59, 1, 8606, 4, 3, 97, 101, 121, 2570, 2576, 2582, 114, 111, 110, 59, 1, 317, 100, 105, 108, 59, 1, 315, 59, 1, 1051, 4, 2, 102, 115, 2591, 2907, 116, 4, 10, 65, 67, 68, 70, 82, 84, 85, 86, 97, 114, 2614, 2663, 2672, 2728, 2735, 2760, 2820, 2870, 2888, 2895, 4, 2, 110, 114, 2620, 2633, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10216, 114, 111, 119, 4, 3, 59, 66, 82, 2644, 2646, 2651, 1, 8592, 97, 114, 59, 1, 8676, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8646, 101, 105, 108, 105, 110, 103, 59, 1, 8968, 111, 4, 2, 117, 119, 2679, 2692, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10214, 110, 4, 2, 84, 86, 2699, 2710, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10593, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2721, 2723, 1, 8643, 97, 114, 59, 1, 10585, 108, 111, 111, 114, 59, 1, 8970, 105, 103, 104, 116, 4, 2, 65, 86, 2745, 2752, 114, 114, 111, 119, 59, 1, 8596, 101, 99, 116, 111, 114, 59, 1, 10574, 4, 2, 101, 114, 2766, 2792, 101, 4, 3, 59, 65, 86, 2775, 2777, 2784, 1, 8867, 114, 114, 111, 119, 59, 1, 8612, 101, 99, 116, 111, 114, 59, 1, 10586, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 2806, 2808, 2813, 1, 8882, 97, 114, 59, 1, 10703, 113, 117, 97, 108, 59, 1, 8884, 112, 4, 3, 68, 84, 86, 2829, 2841, 2852, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10577, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10592, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2863, 2865, 1, 8639, 97, 114, 59, 1, 10584, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2881, 2883, 1, 8636, 97, 114, 59, 1, 10578, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8660, 115, 4, 6, 69, 70, 71, 76, 83, 84, 2922, 2936, 2947, 2956, 2962, 2974, 113, 117, 97, 108, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8922, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8806, 114, 101, 97, 116, 101, 114, 59, 1, 8822, 101, 115, 115, 59, 1, 10913, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10877, 105, 108, 100, 101, 59, 1, 8818, 114, 59, 3, 55349, 56591, 4, 2, 59, 101, 2992, 2994, 1, 8920, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8666, 105, 100, 111, 116, 59, 1, 319, 4, 3, 110, 112, 119, 3019, 3110, 3115, 103, 4, 4, 76, 82, 108, 114, 3030, 3058, 3070, 3098, 101, 102, 116, 4, 2, 65, 82, 3039, 3046, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10231, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10230, 101, 102, 116, 4, 2, 97, 114, 3079, 3086, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10233, 102, 59, 3, 55349, 56643, 101, 114, 4, 2, 76, 82, 3123, 3134, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8601, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8600, 4, 3, 99, 104, 116, 3154, 3158, 3161, 114, 59, 1, 8466, 59, 1, 8624, 114, 111, 107, 59, 1, 321, 59, 1, 8810, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 3188, 3192, 3196, 3222, 3227, 3237, 3243, 3248, 112, 59, 1, 10501, 121, 59, 1, 1052, 4, 2, 100, 108, 3202, 3213, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8287, 108, 105, 110, 116, 114, 102, 59, 1, 8499, 114, 59, 3, 55349, 56592, 110, 117, 115, 80, 108, 117, 115, 59, 1, 8723, 112, 102, 59, 3, 55349, 56644, 99, 114, 59, 1, 8499, 59, 1, 924, 4, 9, 74, 97, 99, 101, 102, 111, 115, 116, 117, 3271, 3276, 3283, 3306, 3422, 3427, 4120, 4126, 4137, 99, 121, 59, 1, 1034, 99, 117, 116, 101, 59, 1, 323, 4, 3, 97, 101, 121, 3291, 3297, 3303, 114, 111, 110, 59, 1, 327, 100, 105, 108, 59, 1, 325, 59, 1, 1053, 4, 3, 103, 115, 119, 3314, 3380, 3415, 97, 116, 105, 118, 101, 4, 3, 77, 84, 86, 3327, 3340, 3365, 101, 100, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8203, 104, 105, 4, 2, 99, 110, 3348, 3357, 107, 83, 112, 97, 99, 101, 59, 1, 8203, 83, 112, 97, 99, 101, 59, 1, 8203, 101, 114, 121, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8203, 116, 101, 100, 4, 2, 71, 76, 3389, 3405, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8811, 101, 115, 115, 76, 101, 115, 115, 59, 1, 8810, 76, 105, 110, 101, 59, 1, 10, 114, 59, 3, 55349, 56593, 4, 4, 66, 110, 112, 116, 3437, 3444, 3460, 3464, 114, 101, 97, 107, 59, 1, 8288, 66, 114, 101, 97, 107, 105, 110, 103, 83, 112, 97, 99, 101, 59, 1, 160, 102, 59, 1, 8469, 4, 13, 59, 67, 68, 69, 71, 72, 76, 78, 80, 82, 83, 84, 86, 3492, 3494, 3517, 3536, 3578, 3657, 3685, 3784, 3823, 3860, 3915, 4066, 4107, 1, 10988, 4, 2, 111, 117, 3500, 3510, 110, 103, 114, 117, 101, 110, 116, 59, 1, 8802, 112, 67, 97, 112, 59, 1, 8813, 111, 117, 98, 108, 101, 86, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8742, 4, 3, 108, 113, 120, 3544, 3552, 3571, 101, 109, 101, 110, 116, 59, 1, 8713, 117, 97, 108, 4, 2, 59, 84, 3561, 3563, 1, 8800, 105, 108, 100, 101, 59, 3, 8770, 824, 105, 115, 116, 115, 59, 1, 8708, 114, 101, 97, 116, 101, 114, 4, 7, 59, 69, 70, 71, 76, 83, 84, 3600, 3602, 3609, 3621, 3631, 3637, 3650, 1, 8815, 113, 117, 97, 108, 59, 1, 8817, 117, 108, 108, 69, 113, 117, 97, 108, 59, 3, 8807, 824, 114, 101, 97, 116, 101, 114, 59, 3, 8811, 824, 101, 115, 115, 59, 1, 8825, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10878, 824, 105, 108, 100, 101, 59, 1, 8821, 117, 109, 112, 4, 2, 68, 69, 3666, 3677, 111, 119, 110, 72, 117, 109, 112, 59, 3, 8782, 824, 113, 117, 97, 108, 59, 3, 8783, 824, 101, 4, 2, 102, 115, 3692, 3724, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3709, 3711, 3717, 1, 8938, 97, 114, 59, 3, 10703, 824, 113, 117, 97, 108, 59, 1, 8940, 115, 4, 6, 59, 69, 71, 76, 83, 84, 3739, 3741, 3748, 3757, 3764, 3777, 1, 8814, 113, 117, 97, 108, 59, 1, 8816, 114, 101, 97, 116, 101, 114, 59, 1, 8824, 101, 115, 115, 59, 3, 8810, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10877, 824, 105, 108, 100, 101, 59, 1, 8820, 101, 115, 116, 101, 100, 4, 2, 71, 76, 3795, 3812, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 3, 10914, 824, 101, 115, 115, 76, 101, 115, 115, 59, 3, 10913, 824, 114, 101, 99, 101, 100, 101, 115, 4, 3, 59, 69, 83, 3838, 3840, 3848, 1, 8832, 113, 117, 97, 108, 59, 3, 10927, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8928, 4, 2, 101, 105, 3866, 3881, 118, 101, 114, 115, 101, 69, 108, 101, 109, 101, 110, 116, 59, 1, 8716, 103, 104, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3900, 3902, 3908, 1, 8939, 97, 114, 59, 3, 10704, 824, 113, 117, 97, 108, 59, 1, 8941, 4, 2, 113, 117, 3921, 3973, 117, 97, 114, 101, 83, 117, 4, 2, 98, 112, 3933, 3952, 115, 101, 116, 4, 2, 59, 69, 3942, 3945, 3, 8847, 824, 113, 117, 97, 108, 59, 1, 8930, 101, 114, 115, 101, 116, 4, 2, 59, 69, 3963, 3966, 3, 8848, 824, 113, 117, 97, 108, 59, 1, 8931, 4, 3, 98, 99, 112, 3981, 4e3, 4045, 115, 101, 116, 4, 2, 59, 69, 3990, 3993, 3, 8834, 8402, 113, 117, 97, 108, 59, 1, 8840, 99, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 4015, 4017, 4025, 4037, 1, 8833, 113, 117, 97, 108, 59, 3, 10928, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8929, 105, 108, 100, 101, 59, 3, 8831, 824, 101, 114, 115, 101, 116, 4, 2, 59, 69, 4056, 4059, 3, 8835, 8402, 113, 117, 97, 108, 59, 1, 8841, 105, 108, 100, 101, 4, 4, 59, 69, 70, 84, 4080, 4082, 4089, 4100, 1, 8769, 113, 117, 97, 108, 59, 1, 8772, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8775, 105, 108, 100, 101, 59, 1, 8777, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8740, 99, 114, 59, 3, 55349, 56489, 105, 108, 100, 101, 5, 209, 1, 59, 4135, 1, 209, 59, 1, 925, 4, 14, 69, 97, 99, 100, 102, 103, 109, 111, 112, 114, 115, 116, 117, 118, 4170, 4176, 4187, 4205, 4212, 4217, 4228, 4253, 4259, 4292, 4295, 4316, 4337, 4346, 108, 105, 103, 59, 1, 338, 99, 117, 116, 101, 5, 211, 1, 59, 4185, 1, 211, 4, 2, 105, 121, 4193, 4202, 114, 99, 5, 212, 1, 59, 4200, 1, 212, 59, 1, 1054, 98, 108, 97, 99, 59, 1, 336, 114, 59, 3, 55349, 56594, 114, 97, 118, 101, 5, 210, 1, 59, 4226, 1, 210, 4, 3, 97, 101, 105, 4236, 4241, 4246, 99, 114, 59, 1, 332, 103, 97, 59, 1, 937, 99, 114, 111, 110, 59, 1, 927, 112, 102, 59, 3, 55349, 56646, 101, 110, 67, 117, 114, 108, 121, 4, 2, 68, 81, 4272, 4285, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8220, 117, 111, 116, 101, 59, 1, 8216, 59, 1, 10836, 4, 2, 99, 108, 4301, 4306, 114, 59, 3, 55349, 56490, 97, 115, 104, 5, 216, 1, 59, 4314, 1, 216, 105, 4, 2, 108, 109, 4323, 4332, 100, 101, 5, 213, 1, 59, 4330, 1, 213, 101, 115, 59, 1, 10807, 109, 108, 5, 214, 1, 59, 4344, 1, 214, 101, 114, 4, 2, 66, 80, 4354, 4380, 4, 2, 97, 114, 4360, 4364, 114, 59, 1, 8254, 97, 99, 4, 2, 101, 107, 4372, 4375, 59, 1, 9182, 101, 116, 59, 1, 9140, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9180, 4, 9, 97, 99, 102, 104, 105, 108, 111, 114, 115, 4413, 4422, 4426, 4431, 4435, 4438, 4448, 4471, 4561, 114, 116, 105, 97, 108, 68, 59, 1, 8706, 121, 59, 1, 1055, 114, 59, 3, 55349, 56595, 105, 59, 1, 934, 59, 1, 928, 117, 115, 77, 105, 110, 117, 115, 59, 1, 177, 4, 2, 105, 112, 4454, 4467, 110, 99, 97, 114, 101, 112, 108, 97, 110, 101, 59, 1, 8460, 102, 59, 1, 8473, 4, 4, 59, 101, 105, 111, 4481, 4483, 4526, 4531, 1, 10939, 99, 101, 100, 101, 115, 4, 4, 59, 69, 83, 84, 4498, 4500, 4507, 4519, 1, 8826, 113, 117, 97, 108, 59, 1, 10927, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8828, 105, 108, 100, 101, 59, 1, 8830, 109, 101, 59, 1, 8243, 4, 2, 100, 112, 4537, 4543, 117, 99, 116, 59, 1, 8719, 111, 114, 116, 105, 111, 110, 4, 2, 59, 97, 4555, 4557, 1, 8759, 108, 59, 1, 8733, 4, 2, 99, 105, 4567, 4572, 114, 59, 3, 55349, 56491, 59, 1, 936, 4, 4, 85, 102, 111, 115, 4585, 4594, 4599, 4604, 79, 84, 5, 34, 1, 59, 4592, 1, 34, 114, 59, 3, 55349, 56596, 112, 102, 59, 1, 8474, 99, 114, 59, 3, 55349, 56492, 4, 12, 66, 69, 97, 99, 101, 102, 104, 105, 111, 114, 115, 117, 4636, 4642, 4650, 4681, 4704, 4763, 4767, 4771, 5047, 5069, 5081, 5094, 97, 114, 114, 59, 1, 10512, 71, 5, 174, 1, 59, 4648, 1, 174, 4, 3, 99, 110, 114, 4658, 4664, 4668, 117, 116, 101, 59, 1, 340, 103, 59, 1, 10219, 114, 4, 2, 59, 116, 4675, 4677, 1, 8608, 108, 59, 1, 10518, 4, 3, 97, 101, 121, 4689, 4695, 4701, 114, 111, 110, 59, 1, 344, 100, 105, 108, 59, 1, 342, 59, 1, 1056, 4, 2, 59, 118, 4710, 4712, 1, 8476, 101, 114, 115, 101, 4, 2, 69, 85, 4722, 4748, 4, 2, 108, 113, 4728, 4736, 101, 109, 101, 110, 116, 59, 1, 8715, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8651, 112, 69, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10607, 114, 59, 1, 8476, 111, 59, 1, 929, 103, 104, 116, 4, 8, 65, 67, 68, 70, 84, 85, 86, 97, 4792, 4840, 4849, 4905, 4912, 4972, 5022, 5040, 4, 2, 110, 114, 4798, 4811, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10217, 114, 111, 119, 4, 3, 59, 66, 76, 4822, 4824, 4829, 1, 8594, 97, 114, 59, 1, 8677, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8644, 101, 105, 108, 105, 110, 103, 59, 1, 8969, 111, 4, 2, 117, 119, 4856, 4869, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10215, 110, 4, 2, 84, 86, 4876, 4887, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10589, 101, 99, 116, 111, 114, 4, 2, 59, 66, 4898, 4900, 1, 8642, 97, 114, 59, 1, 10581, 108, 111, 111, 114, 59, 1, 8971, 4, 2, 101, 114, 4918, 4944, 101, 4, 3, 59, 65, 86, 4927, 4929, 4936, 1, 8866, 114, 114, 111, 119, 59, 1, 8614, 101, 99, 116, 111, 114, 59, 1, 10587, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 4958, 4960, 4965, 1, 8883, 97, 114, 59, 1, 10704, 113, 117, 97, 108, 59, 1, 8885, 112, 4, 3, 68, 84, 86, 4981, 4993, 5004, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10575, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10588, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5015, 5017, 1, 8638, 97, 114, 59, 1, 10580, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5033, 5035, 1, 8640, 97, 114, 59, 1, 10579, 114, 114, 111, 119, 59, 1, 8658, 4, 2, 112, 117, 5053, 5057, 102, 59, 1, 8477, 110, 100, 73, 109, 112, 108, 105, 101, 115, 59, 1, 10608, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8667, 4, 2, 99, 104, 5087, 5091, 114, 59, 1, 8475, 59, 1, 8625, 108, 101, 68, 101, 108, 97, 121, 101, 100, 59, 1, 10740, 4, 13, 72, 79, 97, 99, 102, 104, 105, 109, 111, 113, 115, 116, 117, 5134, 5150, 5157, 5164, 5198, 5203, 5259, 5265, 5277, 5283, 5374, 5380, 5385, 4, 2, 67, 99, 5140, 5146, 72, 99, 121, 59, 1, 1065, 121, 59, 1, 1064, 70, 84, 99, 121, 59, 1, 1068, 99, 117, 116, 101, 59, 1, 346, 4, 5, 59, 97, 101, 105, 121, 5176, 5178, 5184, 5190, 5195, 1, 10940, 114, 111, 110, 59, 1, 352, 100, 105, 108, 59, 1, 350, 114, 99, 59, 1, 348, 59, 1, 1057, 114, 59, 3, 55349, 56598, 111, 114, 116, 4, 4, 68, 76, 82, 85, 5216, 5227, 5238, 5250, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8595, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8592, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8594, 112, 65, 114, 114, 111, 119, 59, 1, 8593, 103, 109, 97, 59, 1, 931, 97, 108, 108, 67, 105, 114, 99, 108, 101, 59, 1, 8728, 112, 102, 59, 3, 55349, 56650, 4, 2, 114, 117, 5289, 5293, 116, 59, 1, 8730, 97, 114, 101, 4, 4, 59, 73, 83, 85, 5306, 5308, 5322, 5367, 1, 9633, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8851, 117, 4, 2, 98, 112, 5329, 5347, 115, 101, 116, 4, 2, 59, 69, 5338, 5340, 1, 8847, 113, 117, 97, 108, 59, 1, 8849, 101, 114, 115, 101, 116, 4, 2, 59, 69, 5358, 5360, 1, 8848, 113, 117, 97, 108, 59, 1, 8850, 110, 105, 111, 110, 59, 1, 8852, 99, 114, 59, 3, 55349, 56494, 97, 114, 59, 1, 8902, 4, 4, 98, 99, 109, 112, 5395, 5420, 5475, 5478, 4, 2, 59, 115, 5401, 5403, 1, 8912, 101, 116, 4, 2, 59, 69, 5411, 5413, 1, 8912, 113, 117, 97, 108, 59, 1, 8838, 4, 2, 99, 104, 5426, 5468, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 5440, 5442, 5449, 5461, 1, 8827, 113, 117, 97, 108, 59, 1, 10928, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8829, 105, 108, 100, 101, 59, 1, 8831, 84, 104, 97, 116, 59, 1, 8715, 59, 1, 8721, 4, 3, 59, 101, 115, 5486, 5488, 5507, 1, 8913, 114, 115, 101, 116, 4, 2, 59, 69, 5498, 5500, 1, 8835, 113, 117, 97, 108, 59, 1, 8839, 101, 116, 59, 1, 8913, 4, 11, 72, 82, 83, 97, 99, 102, 104, 105, 111, 114, 115, 5536, 5546, 5552, 5567, 5579, 5602, 5607, 5655, 5695, 5701, 5711, 79, 82, 78, 5, 222, 1, 59, 5544, 1, 222, 65, 68, 69, 59, 1, 8482, 4, 2, 72, 99, 5558, 5563, 99, 121, 59, 1, 1035, 121, 59, 1, 1062, 4, 2, 98, 117, 5573, 5576, 59, 1, 9, 59, 1, 932, 4, 3, 97, 101, 121, 5587, 5593, 5599, 114, 111, 110, 59, 1, 356, 100, 105, 108, 59, 1, 354, 59, 1, 1058, 114, 59, 3, 55349, 56599, 4, 2, 101, 105, 5613, 5631, 4, 2, 114, 116, 5619, 5627, 101, 102, 111, 114, 101, 59, 1, 8756, 97, 59, 1, 920, 4, 2, 99, 110, 5637, 5647, 107, 83, 112, 97, 99, 101, 59, 3, 8287, 8202, 83, 112, 97, 99, 101, 59, 1, 8201, 108, 100, 101, 4, 4, 59, 69, 70, 84, 5668, 5670, 5677, 5688, 1, 8764, 113, 117, 97, 108, 59, 1, 8771, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8773, 105, 108, 100, 101, 59, 1, 8776, 112, 102, 59, 3, 55349, 56651, 105, 112, 108, 101, 68, 111, 116, 59, 1, 8411, 4, 2, 99, 116, 5717, 5722, 114, 59, 3, 55349, 56495, 114, 111, 107, 59, 1, 358, 4, 14, 97, 98, 99, 100, 102, 103, 109, 110, 111, 112, 114, 115, 116, 117, 5758, 5789, 5805, 5823, 5830, 5835, 5846, 5852, 5921, 5937, 6089, 6095, 6101, 6108, 4, 2, 99, 114, 5764, 5774, 117, 116, 101, 5, 218, 1, 59, 5772, 1, 218, 114, 4, 2, 59, 111, 5781, 5783, 1, 8607, 99, 105, 114, 59, 1, 10569, 114, 4, 2, 99, 101, 5796, 5800, 121, 59, 1, 1038, 118, 101, 59, 1, 364, 4, 2, 105, 121, 5811, 5820, 114, 99, 5, 219, 1, 59, 5818, 1, 219, 59, 1, 1059, 98, 108, 97, 99, 59, 1, 368, 114, 59, 3, 55349, 56600, 114, 97, 118, 101, 5, 217, 1, 59, 5844, 1, 217, 97, 99, 114, 59, 1, 362, 4, 2, 100, 105, 5858, 5905, 101, 114, 4, 2, 66, 80, 5866, 5892, 4, 2, 97, 114, 5872, 5876, 114, 59, 1, 95, 97, 99, 4, 2, 101, 107, 5884, 5887, 59, 1, 9183, 101, 116, 59, 1, 9141, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9181, 111, 110, 4, 2, 59, 80, 5913, 5915, 1, 8899, 108, 117, 115, 59, 1, 8846, 4, 2, 103, 112, 5927, 5932, 111, 110, 59, 1, 370, 102, 59, 3, 55349, 56652, 4, 8, 65, 68, 69, 84, 97, 100, 112, 115, 5955, 5985, 5996, 6009, 6026, 6033, 6044, 6075, 114, 114, 111, 119, 4, 3, 59, 66, 68, 5967, 5969, 5974, 1, 8593, 97, 114, 59, 1, 10514, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8645, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8597, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10606, 101, 101, 4, 2, 59, 65, 6017, 6019, 1, 8869, 114, 114, 111, 119, 59, 1, 8613, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 4, 2, 76, 82, 6052, 6063, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8598, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8599, 105, 4, 2, 59, 108, 6082, 6084, 1, 978, 111, 110, 59, 1, 933, 105, 110, 103, 59, 1, 366, 99, 114, 59, 3, 55349, 56496, 105, 108, 100, 101, 59, 1, 360, 109, 108, 5, 220, 1, 59, 6115, 1, 220, 4, 9, 68, 98, 99, 100, 101, 102, 111, 115, 118, 6137, 6143, 6148, 6152, 6166, 6250, 6255, 6261, 6267, 97, 115, 104, 59, 1, 8875, 97, 114, 59, 1, 10987, 121, 59, 1, 1042, 97, 115, 104, 4, 2, 59, 108, 6161, 6163, 1, 8873, 59, 1, 10982, 4, 2, 101, 114, 6172, 6175, 59, 1, 8897, 4, 3, 98, 116, 121, 6183, 6188, 6238, 97, 114, 59, 1, 8214, 4, 2, 59, 105, 6194, 6196, 1, 8214, 99, 97, 108, 4, 4, 66, 76, 83, 84, 6209, 6214, 6220, 6231, 97, 114, 59, 1, 8739, 105, 110, 101, 59, 1, 124, 101, 112, 97, 114, 97, 116, 111, 114, 59, 1, 10072, 105, 108, 100, 101, 59, 1, 8768, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8202, 114, 59, 3, 55349, 56601, 112, 102, 59, 3, 55349, 56653, 99, 114, 59, 3, 55349, 56497, 100, 97, 115, 104, 59, 1, 8874, 4, 5, 99, 101, 102, 111, 115, 6286, 6292, 6298, 6303, 6309, 105, 114, 99, 59, 1, 372, 100, 103, 101, 59, 1, 8896, 114, 59, 3, 55349, 56602, 112, 102, 59, 3, 55349, 56654, 99, 114, 59, 3, 55349, 56498, 4, 4, 102, 105, 111, 115, 6325, 6330, 6333, 6339, 114, 59, 3, 55349, 56603, 59, 1, 926, 112, 102, 59, 3, 55349, 56655, 99, 114, 59, 3, 55349, 56499, 4, 9, 65, 73, 85, 97, 99, 102, 111, 115, 117, 6365, 6370, 6375, 6380, 6391, 6405, 6410, 6416, 6422, 99, 121, 59, 1, 1071, 99, 121, 59, 1, 1031, 99, 121, 59, 1, 1070, 99, 117, 116, 101, 5, 221, 1, 59, 6389, 1, 221, 4, 2, 105, 121, 6397, 6402, 114, 99, 59, 1, 374, 59, 1, 1067, 114, 59, 3, 55349, 56604, 112, 102, 59, 3, 55349, 56656, 99, 114, 59, 3, 55349, 56500, 109, 108, 59, 1, 376, 4, 8, 72, 97, 99, 100, 101, 102, 111, 115, 6445, 6450, 6457, 6472, 6477, 6501, 6505, 6510, 99, 121, 59, 1, 1046, 99, 117, 116, 101, 59, 1, 377, 4, 2, 97, 121, 6463, 6469, 114, 111, 110, 59, 1, 381, 59, 1, 1047, 111, 116, 59, 1, 379, 4, 2, 114, 116, 6483, 6497, 111, 87, 105, 100, 116, 104, 83, 112, 97, 99, 101, 59, 1, 8203, 97, 59, 1, 918, 114, 59, 1, 8488, 112, 102, 59, 1, 8484, 99, 114, 59, 3, 55349, 56501, 4, 16, 97, 98, 99, 101, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 6550, 6561, 6568, 6612, 6622, 6634, 6645, 6672, 6699, 6854, 6870, 6923, 6933, 6963, 6974, 6983, 99, 117, 116, 101, 5, 225, 1, 59, 6559, 1, 225, 114, 101, 118, 101, 59, 1, 259, 4, 6, 59, 69, 100, 105, 117, 121, 6582, 6584, 6588, 6591, 6600, 6609, 1, 8766, 59, 3, 8766, 819, 59, 1, 8767, 114, 99, 5, 226, 1, 59, 6598, 1, 226, 116, 101, 5, 180, 1, 59, 6607, 1, 180, 59, 1, 1072, 108, 105, 103, 5, 230, 1, 59, 6620, 1, 230, 4, 2, 59, 114, 6628, 6630, 1, 8289, 59, 3, 55349, 56606, 114, 97, 118, 101, 5, 224, 1, 59, 6643, 1, 224, 4, 2, 101, 112, 6651, 6667, 4, 2, 102, 112, 6657, 6663, 115, 121, 109, 59, 1, 8501, 104, 59, 1, 8501, 104, 97, 59, 1, 945, 4, 2, 97, 112, 6678, 6692, 4, 2, 99, 108, 6684, 6688, 114, 59, 1, 257, 103, 59, 1, 10815, 5, 38, 1, 59, 6697, 1, 38, 4, 2, 100, 103, 6705, 6737, 4, 5, 59, 97, 100, 115, 118, 6717, 6719, 6724, 6727, 6734, 1, 8743, 110, 100, 59, 1, 10837, 59, 1, 10844, 108, 111, 112, 101, 59, 1, 10840, 59, 1, 10842, 4, 7, 59, 101, 108, 109, 114, 115, 122, 6753, 6755, 6758, 6762, 6814, 6835, 6848, 1, 8736, 59, 1, 10660, 101, 59, 1, 8736, 115, 100, 4, 2, 59, 97, 6770, 6772, 1, 8737, 4, 8, 97, 98, 99, 100, 101, 102, 103, 104, 6790, 6793, 6796, 6799, 6802, 6805, 6808, 6811, 59, 1, 10664, 59, 1, 10665, 59, 1, 10666, 59, 1, 10667, 59, 1, 10668, 59, 1, 10669, 59, 1, 10670, 59, 1, 10671, 116, 4, 2, 59, 118, 6821, 6823, 1, 8735, 98, 4, 2, 59, 100, 6830, 6832, 1, 8894, 59, 1, 10653, 4, 2, 112, 116, 6841, 6845, 104, 59, 1, 8738, 59, 1, 197, 97, 114, 114, 59, 1, 9084, 4, 2, 103, 112, 6860, 6865, 111, 110, 59, 1, 261, 102, 59, 3, 55349, 56658, 4, 7, 59, 69, 97, 101, 105, 111, 112, 6886, 6888, 6891, 6897, 6900, 6904, 6908, 1, 8776, 59, 1, 10864, 99, 105, 114, 59, 1, 10863, 59, 1, 8778, 100, 59, 1, 8779, 115, 59, 1, 39, 114, 111, 120, 4, 2, 59, 101, 6917, 6919, 1, 8776, 113, 59, 1, 8778, 105, 110, 103, 5, 229, 1, 59, 6931, 1, 229, 4, 3, 99, 116, 121, 6941, 6946, 6949, 114, 59, 3, 55349, 56502, 59, 1, 42, 109, 112, 4, 2, 59, 101, 6957, 6959, 1, 8776, 113, 59, 1, 8781, 105, 108, 100, 101, 5, 227, 1, 59, 6972, 1, 227, 109, 108, 5, 228, 1, 59, 6981, 1, 228, 4, 2, 99, 105, 6989, 6997, 111, 110, 105, 110, 116, 59, 1, 8755, 110, 116, 59, 1, 10769, 4, 16, 78, 97, 98, 99, 100, 101, 102, 105, 107, 108, 110, 111, 112, 114, 115, 117, 7036, 7041, 7119, 7135, 7149, 7155, 7219, 7224, 7347, 7354, 7463, 7489, 7786, 7793, 7814, 7866, 111, 116, 59, 1, 10989, 4, 2, 99, 114, 7047, 7094, 107, 4, 4, 99, 101, 112, 115, 7058, 7064, 7073, 7080, 111, 110, 103, 59, 1, 8780, 112, 115, 105, 108, 111, 110, 59, 1, 1014, 114, 105, 109, 101, 59, 1, 8245, 105, 109, 4, 2, 59, 101, 7088, 7090, 1, 8765, 113, 59, 1, 8909, 4, 2, 118, 119, 7100, 7105, 101, 101, 59, 1, 8893, 101, 100, 4, 2, 59, 103, 7113, 7115, 1, 8965, 101, 59, 1, 8965, 114, 107, 4, 2, 59, 116, 7127, 7129, 1, 9141, 98, 114, 107, 59, 1, 9142, 4, 2, 111, 121, 7141, 7146, 110, 103, 59, 1, 8780, 59, 1, 1073, 113, 117, 111, 59, 1, 8222, 4, 5, 99, 109, 112, 114, 116, 7167, 7181, 7188, 7193, 7199, 97, 117, 115, 4, 2, 59, 101, 7176, 7178, 1, 8757, 59, 1, 8757, 112, 116, 121, 118, 59, 1, 10672, 115, 105, 59, 1, 1014, 110, 111, 117, 59, 1, 8492, 4, 3, 97, 104, 119, 7207, 7210, 7213, 59, 1, 946, 59, 1, 8502, 101, 101, 110, 59, 1, 8812, 114, 59, 3, 55349, 56607, 103, 4, 7, 99, 111, 115, 116, 117, 118, 119, 7241, 7262, 7288, 7305, 7328, 7335, 7340, 4, 3, 97, 105, 117, 7249, 7253, 7258, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 4, 3, 100, 112, 116, 7270, 7275, 7281, 111, 116, 59, 1, 10752, 108, 117, 115, 59, 1, 10753, 105, 109, 101, 115, 59, 1, 10754, 4, 2, 113, 116, 7294, 7300, 99, 117, 112, 59, 1, 10758, 97, 114, 59, 1, 9733, 114, 105, 97, 110, 103, 108, 101, 4, 2, 100, 117, 7318, 7324, 111, 119, 110, 59, 1, 9661, 112, 59, 1, 9651, 112, 108, 117, 115, 59, 1, 10756, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 97, 114, 111, 119, 59, 1, 10509, 4, 3, 97, 107, 111, 7362, 7436, 7458, 4, 2, 99, 110, 7368, 7432, 107, 4, 3, 108, 115, 116, 7377, 7386, 7394, 111, 122, 101, 110, 103, 101, 59, 1, 10731, 113, 117, 97, 114, 101, 59, 1, 9642, 114, 105, 97, 110, 103, 108, 101, 4, 4, 59, 100, 108, 114, 7411, 7413, 7419, 7425, 1, 9652, 111, 119, 110, 59, 1, 9662, 101, 102, 116, 59, 1, 9666, 105, 103, 104, 116, 59, 1, 9656, 107, 59, 1, 9251, 4, 2, 49, 51, 7442, 7454, 4, 2, 50, 52, 7448, 7451, 59, 1, 9618, 59, 1, 9617, 52, 59, 1, 9619, 99, 107, 59, 1, 9608, 4, 2, 101, 111, 7469, 7485, 4, 2, 59, 113, 7475, 7478, 3, 61, 8421, 117, 105, 118, 59, 3, 8801, 8421, 116, 59, 1, 8976, 4, 4, 112, 116, 119, 120, 7499, 7504, 7517, 7523, 102, 59, 3, 55349, 56659, 4, 2, 59, 116, 7510, 7512, 1, 8869, 111, 109, 59, 1, 8869, 116, 105, 101, 59, 1, 8904, 4, 12, 68, 72, 85, 86, 98, 100, 104, 109, 112, 116, 117, 118, 7549, 7571, 7597, 7619, 7655, 7660, 7682, 7708, 7715, 7721, 7728, 7750, 4, 4, 76, 82, 108, 114, 7559, 7562, 7565, 7568, 59, 1, 9559, 59, 1, 9556, 59, 1, 9558, 59, 1, 9555, 4, 5, 59, 68, 85, 100, 117, 7583, 7585, 7588, 7591, 7594, 1, 9552, 59, 1, 9574, 59, 1, 9577, 59, 1, 9572, 59, 1, 9575, 4, 4, 76, 82, 108, 114, 7607, 7610, 7613, 7616, 59, 1, 9565, 59, 1, 9562, 59, 1, 9564, 59, 1, 9561, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7635, 7637, 7640, 7643, 7646, 7649, 7652, 1, 9553, 59, 1, 9580, 59, 1, 9571, 59, 1, 9568, 59, 1, 9579, 59, 1, 9570, 59, 1, 9567, 111, 120, 59, 1, 10697, 4, 4, 76, 82, 108, 114, 7670, 7673, 7676, 7679, 59, 1, 9557, 59, 1, 9554, 59, 1, 9488, 59, 1, 9484, 4, 5, 59, 68, 85, 100, 117, 7694, 7696, 7699, 7702, 7705, 1, 9472, 59, 1, 9573, 59, 1, 9576, 59, 1, 9516, 59, 1, 9524, 105, 110, 117, 115, 59, 1, 8863, 108, 117, 115, 59, 1, 8862, 105, 109, 101, 115, 59, 1, 8864, 4, 4, 76, 82, 108, 114, 7738, 7741, 7744, 7747, 59, 1, 9563, 59, 1, 9560, 59, 1, 9496, 59, 1, 9492, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7766, 7768, 7771, 7774, 7777, 7780, 7783, 1, 9474, 59, 1, 9578, 59, 1, 9569, 59, 1, 9566, 59, 1, 9532, 59, 1, 9508, 59, 1, 9500, 114, 105, 109, 101, 59, 1, 8245, 4, 2, 101, 118, 7799, 7804, 118, 101, 59, 1, 728, 98, 97, 114, 5, 166, 1, 59, 7812, 1, 166, 4, 4, 99, 101, 105, 111, 7824, 7829, 7834, 7846, 114, 59, 3, 55349, 56503, 109, 105, 59, 1, 8271, 109, 4, 2, 59, 101, 7841, 7843, 1, 8765, 59, 1, 8909, 108, 4, 3, 59, 98, 104, 7855, 7857, 7860, 1, 92, 59, 1, 10693, 115, 117, 98, 59, 1, 10184, 4, 2, 108, 109, 7872, 7885, 108, 4, 2, 59, 101, 7879, 7881, 1, 8226, 116, 59, 1, 8226, 112, 4, 3, 59, 69, 101, 7894, 7896, 7899, 1, 8782, 59, 1, 10926, 4, 2, 59, 113, 7905, 7907, 1, 8783, 59, 1, 8783, 4, 15, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 116, 117, 119, 121, 7942, 8021, 8075, 8080, 8121, 8126, 8157, 8279, 8295, 8430, 8446, 8485, 8491, 8707, 8726, 4, 3, 99, 112, 114, 7950, 7956, 8007, 117, 116, 101, 59, 1, 263, 4, 6, 59, 97, 98, 99, 100, 115, 7970, 7972, 7977, 7984, 7998, 8003, 1, 8745, 110, 100, 59, 1, 10820, 114, 99, 117, 112, 59, 1, 10825, 4, 2, 97, 117, 7990, 7994, 112, 59, 1, 10827, 112, 59, 1, 10823, 111, 116, 59, 1, 10816, 59, 3, 8745, 65024, 4, 2, 101, 111, 8013, 8017, 116, 59, 1, 8257, 110, 59, 1, 711, 4, 4, 97, 101, 105, 117, 8031, 8046, 8056, 8061, 4, 2, 112, 114, 8037, 8041, 115, 59, 1, 10829, 111, 110, 59, 1, 269, 100, 105, 108, 5, 231, 1, 59, 8054, 1, 231, 114, 99, 59, 1, 265, 112, 115, 4, 2, 59, 115, 8069, 8071, 1, 10828, 109, 59, 1, 10832, 111, 116, 59, 1, 267, 4, 3, 100, 109, 110, 8088, 8097, 8104, 105, 108, 5, 184, 1, 59, 8095, 1, 184, 112, 116, 121, 118, 59, 1, 10674, 116, 5, 162, 2, 59, 101, 8112, 8114, 1, 162, 114, 100, 111, 116, 59, 1, 183, 114, 59, 3, 55349, 56608, 4, 3, 99, 101, 105, 8134, 8138, 8154, 121, 59, 1, 1095, 99, 107, 4, 2, 59, 109, 8146, 8148, 1, 10003, 97, 114, 107, 59, 1, 10003, 59, 1, 967, 114, 4, 7, 59, 69, 99, 101, 102, 109, 115, 8174, 8176, 8179, 8258, 8261, 8268, 8273, 1, 9675, 59, 1, 10691, 4, 3, 59, 101, 108, 8187, 8189, 8193, 1, 710, 113, 59, 1, 8791, 101, 4, 2, 97, 100, 8200, 8223, 114, 114, 111, 119, 4, 2, 108, 114, 8210, 8216, 101, 102, 116, 59, 1, 8634, 105, 103, 104, 116, 59, 1, 8635, 4, 5, 82, 83, 97, 99, 100, 8235, 8238, 8241, 8246, 8252, 59, 1, 174, 59, 1, 9416, 115, 116, 59, 1, 8859, 105, 114, 99, 59, 1, 8858, 97, 115, 104, 59, 1, 8861, 59, 1, 8791, 110, 105, 110, 116, 59, 1, 10768, 105, 100, 59, 1, 10991, 99, 105, 114, 59, 1, 10690, 117, 98, 115, 4, 2, 59, 117, 8288, 8290, 1, 9827, 105, 116, 59, 1, 9827, 4, 4, 108, 109, 110, 112, 8305, 8326, 8376, 8400, 111, 110, 4, 2, 59, 101, 8313, 8315, 1, 58, 4, 2, 59, 113, 8321, 8323, 1, 8788, 59, 1, 8788, 4, 2, 109, 112, 8332, 8344, 97, 4, 2, 59, 116, 8339, 8341, 1, 44, 59, 1, 64, 4, 3, 59, 102, 108, 8352, 8354, 8358, 1, 8705, 110, 59, 1, 8728, 101, 4, 2, 109, 120, 8365, 8371, 101, 110, 116, 59, 1, 8705, 101, 115, 59, 1, 8450, 4, 2, 103, 105, 8382, 8395, 4, 2, 59, 100, 8388, 8390, 1, 8773, 111, 116, 59, 1, 10861, 110, 116, 59, 1, 8750, 4, 3, 102, 114, 121, 8408, 8412, 8417, 59, 3, 55349, 56660, 111, 100, 59, 1, 8720, 5, 169, 2, 59, 115, 8424, 8426, 1, 169, 114, 59, 1, 8471, 4, 2, 97, 111, 8436, 8441, 114, 114, 59, 1, 8629, 115, 115, 59, 1, 10007, 4, 2, 99, 117, 8452, 8457, 114, 59, 3, 55349, 56504, 4, 2, 98, 112, 8463, 8474, 4, 2, 59, 101, 8469, 8471, 1, 10959, 59, 1, 10961, 4, 2, 59, 101, 8480, 8482, 1, 10960, 59, 1, 10962, 100, 111, 116, 59, 1, 8943, 4, 7, 100, 101, 108, 112, 114, 118, 119, 8507, 8522, 8536, 8550, 8600, 8697, 8702, 97, 114, 114, 4, 2, 108, 114, 8516, 8519, 59, 1, 10552, 59, 1, 10549, 4, 2, 112, 115, 8528, 8532, 114, 59, 1, 8926, 99, 59, 1, 8927, 97, 114, 114, 4, 2, 59, 112, 8545, 8547, 1, 8630, 59, 1, 10557, 4, 6, 59, 98, 99, 100, 111, 115, 8564, 8566, 8573, 8587, 8592, 8596, 1, 8746, 114, 99, 97, 112, 59, 1, 10824, 4, 2, 97, 117, 8579, 8583, 112, 59, 1, 10822, 112, 59, 1, 10826, 111, 116, 59, 1, 8845, 114, 59, 1, 10821, 59, 3, 8746, 65024, 4, 4, 97, 108, 114, 118, 8610, 8623, 8663, 8672, 114, 114, 4, 2, 59, 109, 8618, 8620, 1, 8631, 59, 1, 10556, 121, 4, 3, 101, 118, 119, 8632, 8651, 8656, 113, 4, 2, 112, 115, 8639, 8645, 114, 101, 99, 59, 1, 8926, 117, 99, 99, 59, 1, 8927, 101, 101, 59, 1, 8910, 101, 100, 103, 101, 59, 1, 8911, 101, 110, 5, 164, 1, 59, 8670, 1, 164, 101, 97, 114, 114, 111, 119, 4, 2, 108, 114, 8684, 8690, 101, 102, 116, 59, 1, 8630, 105, 103, 104, 116, 59, 1, 8631, 101, 101, 59, 1, 8910, 101, 100, 59, 1, 8911, 4, 2, 99, 105, 8713, 8721, 111, 110, 105, 110, 116, 59, 1, 8754, 110, 116, 59, 1, 8753, 108, 99, 116, 121, 59, 1, 9005, 4, 19, 65, 72, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 114, 115, 116, 117, 119, 122, 8773, 8778, 8783, 8821, 8839, 8854, 8887, 8914, 8930, 8944, 9036, 9041, 9058, 9197, 9227, 9258, 9281, 9297, 9305, 114, 114, 59, 1, 8659, 97, 114, 59, 1, 10597, 4, 4, 103, 108, 114, 115, 8793, 8799, 8805, 8809, 103, 101, 114, 59, 1, 8224, 101, 116, 104, 59, 1, 8504, 114, 59, 1, 8595, 104, 4, 2, 59, 118, 8816, 8818, 1, 8208, 59, 1, 8867, 4, 2, 107, 108, 8827, 8834, 97, 114, 111, 119, 59, 1, 10511, 97, 99, 59, 1, 733, 4, 2, 97, 121, 8845, 8851, 114, 111, 110, 59, 1, 271, 59, 1, 1076, 4, 3, 59, 97, 111, 8862, 8864, 8880, 1, 8518, 4, 2, 103, 114, 8870, 8876, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8650, 116, 115, 101, 113, 59, 1, 10871, 4, 3, 103, 108, 109, 8895, 8902, 8907, 5, 176, 1, 59, 8900, 1, 176, 116, 97, 59, 1, 948, 112, 116, 121, 118, 59, 1, 10673, 4, 2, 105, 114, 8920, 8926, 115, 104, 116, 59, 1, 10623, 59, 3, 55349, 56609, 97, 114, 4, 2, 108, 114, 8938, 8941, 59, 1, 8643, 59, 1, 8642, 4, 5, 97, 101, 103, 115, 118, 8956, 8986, 8989, 8996, 9001, 109, 4, 3, 59, 111, 115, 8965, 8967, 8983, 1, 8900, 110, 100, 4, 2, 59, 115, 8975, 8977, 1, 8900, 117, 105, 116, 59, 1, 9830, 59, 1, 9830, 59, 1, 168, 97, 109, 109, 97, 59, 1, 989, 105, 110, 59, 1, 8946, 4, 3, 59, 105, 111, 9009, 9011, 9031, 1, 247, 100, 101, 5, 247, 2, 59, 111, 9020, 9022, 1, 247, 110, 116, 105, 109, 101, 115, 59, 1, 8903, 110, 120, 59, 1, 8903, 99, 121, 59, 1, 1106, 99, 4, 2, 111, 114, 9048, 9053, 114, 110, 59, 1, 8990, 111, 112, 59, 1, 8973, 4, 5, 108, 112, 116, 117, 119, 9070, 9076, 9081, 9130, 9144, 108, 97, 114, 59, 1, 36, 102, 59, 3, 55349, 56661, 4, 5, 59, 101, 109, 112, 115, 9093, 9095, 9109, 9116, 9122, 1, 729, 113, 4, 2, 59, 100, 9102, 9104, 1, 8784, 111, 116, 59, 1, 8785, 105, 110, 117, 115, 59, 1, 8760, 108, 117, 115, 59, 1, 8724, 113, 117, 97, 114, 101, 59, 1, 8865, 98, 108, 101, 98, 97, 114, 119, 101, 100, 103, 101, 59, 1, 8966, 110, 4, 3, 97, 100, 104, 9153, 9160, 9172, 114, 114, 111, 119, 59, 1, 8595, 111, 119, 110, 97, 114, 114, 111, 119, 115, 59, 1, 8650, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 9184, 9190, 101, 102, 116, 59, 1, 8643, 105, 103, 104, 116, 59, 1, 8642, 4, 2, 98, 99, 9203, 9211, 107, 97, 114, 111, 119, 59, 1, 10512, 4, 2, 111, 114, 9217, 9222, 114, 110, 59, 1, 8991, 111, 112, 59, 1, 8972, 4, 3, 99, 111, 116, 9235, 9248, 9252, 4, 2, 114, 121, 9241, 9245, 59, 3, 55349, 56505, 59, 1, 1109, 108, 59, 1, 10742, 114, 111, 107, 59, 1, 273, 4, 2, 100, 114, 9264, 9269, 111, 116, 59, 1, 8945, 105, 4, 2, 59, 102, 9276, 9278, 1, 9663, 59, 1, 9662, 4, 2, 97, 104, 9287, 9292, 114, 114, 59, 1, 8693, 97, 114, 59, 1, 10607, 97, 110, 103, 108, 101, 59, 1, 10662, 4, 2, 99, 105, 9311, 9315, 121, 59, 1, 1119, 103, 114, 97, 114, 114, 59, 1, 10239, 4, 18, 68, 97, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 9361, 9376, 9398, 9439, 9444, 9447, 9462, 9495, 9531, 9585, 9598, 9614, 9659, 9755, 9771, 9792, 9808, 9826, 4, 2, 68, 111, 9367, 9372, 111, 116, 59, 1, 10871, 116, 59, 1, 8785, 4, 2, 99, 115, 9382, 9392, 117, 116, 101, 5, 233, 1, 59, 9390, 1, 233, 116, 101, 114, 59, 1, 10862, 4, 4, 97, 105, 111, 121, 9408, 9414, 9430, 9436, 114, 111, 110, 59, 1, 283, 114, 4, 2, 59, 99, 9421, 9423, 1, 8790, 5, 234, 1, 59, 9428, 1, 234, 108, 111, 110, 59, 1, 8789, 59, 1, 1101, 111, 116, 59, 1, 279, 59, 1, 8519, 4, 2, 68, 114, 9453, 9458, 111, 116, 59, 1, 8786, 59, 3, 55349, 56610, 4, 3, 59, 114, 115, 9470, 9472, 9482, 1, 10906, 97, 118, 101, 5, 232, 1, 59, 9480, 1, 232, 4, 2, 59, 100, 9488, 9490, 1, 10902, 111, 116, 59, 1, 10904, 4, 4, 59, 105, 108, 115, 9505, 9507, 9515, 9518, 1, 10905, 110, 116, 101, 114, 115, 59, 1, 9191, 59, 1, 8467, 4, 2, 59, 100, 9524, 9526, 1, 10901, 111, 116, 59, 1, 10903, 4, 3, 97, 112, 115, 9539, 9544, 9564, 99, 114, 59, 1, 275, 116, 121, 4, 3, 59, 115, 118, 9554, 9556, 9561, 1, 8709, 101, 116, 59, 1, 8709, 59, 1, 8709, 112, 4, 2, 49, 59, 9571, 9583, 4, 2, 51, 52, 9577, 9580, 59, 1, 8196, 59, 1, 8197, 1, 8195, 4, 2, 103, 115, 9591, 9594, 59, 1, 331, 112, 59, 1, 8194, 4, 2, 103, 112, 9604, 9609, 111, 110, 59, 1, 281, 102, 59, 3, 55349, 56662, 4, 3, 97, 108, 115, 9622, 9635, 9640, 114, 4, 2, 59, 115, 9629, 9631, 1, 8917, 108, 59, 1, 10723, 117, 115, 59, 1, 10865, 105, 4, 3, 59, 108, 118, 9649, 9651, 9656, 1, 949, 111, 110, 59, 1, 949, 59, 1, 1013, 4, 4, 99, 115, 117, 118, 9669, 9686, 9716, 9747, 4, 2, 105, 111, 9675, 9680, 114, 99, 59, 1, 8790, 108, 111, 110, 59, 1, 8789, 4, 2, 105, 108, 9692, 9696, 109, 59, 1, 8770, 97, 110, 116, 4, 2, 103, 108, 9705, 9710, 116, 114, 59, 1, 10902, 101, 115, 115, 59, 1, 10901, 4, 3, 97, 101, 105, 9724, 9729, 9734, 108, 115, 59, 1, 61, 115, 116, 59, 1, 8799, 118, 4, 2, 59, 68, 9741, 9743, 1, 8801, 68, 59, 1, 10872, 112, 97, 114, 115, 108, 59, 1, 10725, 4, 2, 68, 97, 9761, 9766, 111, 116, 59, 1, 8787, 114, 114, 59, 1, 10609, 4, 3, 99, 100, 105, 9779, 9783, 9788, 114, 59, 1, 8495, 111, 116, 59, 1, 8784, 109, 59, 1, 8770, 4, 2, 97, 104, 9798, 9801, 59, 1, 951, 5, 240, 1, 59, 9806, 1, 240, 4, 2, 109, 114, 9814, 9822, 108, 5, 235, 1, 59, 9820, 1, 235, 111, 59, 1, 8364, 4, 3, 99, 105, 112, 9834, 9838, 9843, 108, 59, 1, 33, 115, 116, 59, 1, 8707, 4, 2, 101, 111, 9849, 9859, 99, 116, 97, 116, 105, 111, 110, 59, 1, 8496, 110, 101, 110, 116, 105, 97, 108, 101, 59, 1, 8519, 4, 12, 97, 99, 101, 102, 105, 106, 108, 110, 111, 112, 114, 115, 9896, 9910, 9914, 9921, 9954, 9960, 9967, 9989, 9994, 10027, 10036, 10164, 108, 108, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8786, 121, 59, 1, 1092, 109, 97, 108, 101, 59, 1, 9792, 4, 3, 105, 108, 114, 9929, 9935, 9950, 108, 105, 103, 59, 1, 64259, 4, 2, 105, 108, 9941, 9945, 103, 59, 1, 64256, 105, 103, 59, 1, 64260, 59, 3, 55349, 56611, 108, 105, 103, 59, 1, 64257, 108, 105, 103, 59, 3, 102, 106, 4, 3, 97, 108, 116, 9975, 9979, 9984, 116, 59, 1, 9837, 105, 103, 59, 1, 64258, 110, 115, 59, 1, 9649, 111, 102, 59, 1, 402, 4, 2, 112, 114, 1e4, 10005, 102, 59, 3, 55349, 56663, 4, 2, 97, 107, 10011, 10016, 108, 108, 59, 1, 8704, 4, 2, 59, 118, 10022, 10024, 1, 8916, 59, 1, 10969, 97, 114, 116, 105, 110, 116, 59, 1, 10765, 4, 2, 97, 111, 10042, 10159, 4, 2, 99, 115, 10048, 10155, 4, 6, 49, 50, 51, 52, 53, 55, 10062, 10102, 10114, 10135, 10139, 10151, 4, 6, 50, 51, 52, 53, 54, 56, 10076, 10083, 10086, 10093, 10096, 10099, 5, 189, 1, 59, 10081, 1, 189, 59, 1, 8531, 5, 188, 1, 59, 10091, 1, 188, 59, 1, 8533, 59, 1, 8537, 59, 1, 8539, 4, 2, 51, 53, 10108, 10111, 59, 1, 8532, 59, 1, 8534, 4, 3, 52, 53, 56, 10122, 10129, 10132, 5, 190, 1, 59, 10127, 1, 190, 59, 1, 8535, 59, 1, 8540, 53, 59, 1, 8536, 4, 2, 54, 56, 10145, 10148, 59, 1, 8538, 59, 1, 8541, 56, 59, 1, 8542, 108, 59, 1, 8260, 119, 110, 59, 1, 8994, 99, 114, 59, 3, 55349, 56507, 4, 17, 69, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 114, 115, 116, 118, 10206, 10217, 10247, 10254, 10268, 10273, 10358, 10363, 10374, 10380, 10385, 10406, 10458, 10464, 10470, 10497, 10610, 4, 2, 59, 108, 10212, 10214, 1, 8807, 59, 1, 10892, 4, 3, 99, 109, 112, 10225, 10231, 10244, 117, 116, 101, 59, 1, 501, 109, 97, 4, 2, 59, 100, 10239, 10241, 1, 947, 59, 1, 989, 59, 1, 10886, 114, 101, 118, 101, 59, 1, 287, 4, 2, 105, 121, 10260, 10265, 114, 99, 59, 1, 285, 59, 1, 1075, 111, 116, 59, 1, 289, 4, 4, 59, 108, 113, 115, 10283, 10285, 10288, 10308, 1, 8805, 59, 1, 8923, 4, 3, 59, 113, 115, 10296, 10298, 10301, 1, 8805, 59, 1, 8807, 108, 97, 110, 116, 59, 1, 10878, 4, 4, 59, 99, 100, 108, 10318, 10320, 10324, 10345, 1, 10878, 99, 59, 1, 10921, 111, 116, 4, 2, 59, 111, 10332, 10334, 1, 10880, 4, 2, 59, 108, 10340, 10342, 1, 10882, 59, 1, 10884, 4, 2, 59, 101, 10351, 10354, 3, 8923, 65024, 115, 59, 1, 10900, 114, 59, 3, 55349, 56612, 4, 2, 59, 103, 10369, 10371, 1, 8811, 59, 1, 8921, 109, 101, 108, 59, 1, 8503, 99, 121, 59, 1, 1107, 4, 4, 59, 69, 97, 106, 10395, 10397, 10400, 10403, 1, 8823, 59, 1, 10898, 59, 1, 10917, 59, 1, 10916, 4, 4, 69, 97, 101, 115, 10416, 10419, 10434, 10453, 59, 1, 8809, 112, 4, 2, 59, 112, 10426, 10428, 1, 10890, 114, 111, 120, 59, 1, 10890, 4, 2, 59, 113, 10440, 10442, 1, 10888, 4, 2, 59, 113, 10448, 10450, 1, 10888, 59, 1, 8809, 105, 109, 59, 1, 8935, 112, 102, 59, 3, 55349, 56664, 97, 118, 101, 59, 1, 96, 4, 2, 99, 105, 10476, 10480, 114, 59, 1, 8458, 109, 4, 3, 59, 101, 108, 10489, 10491, 10494, 1, 8819, 59, 1, 10894, 59, 1, 10896, 5, 62, 6, 59, 99, 100, 108, 113, 114, 10512, 10514, 10527, 10532, 10538, 10545, 1, 62, 4, 2, 99, 105, 10520, 10523, 59, 1, 10919, 114, 59, 1, 10874, 111, 116, 59, 1, 8919, 80, 97, 114, 59, 1, 10645, 117, 101, 115, 116, 59, 1, 10876, 4, 5, 97, 100, 101, 108, 115, 10557, 10574, 10579, 10599, 10605, 4, 2, 112, 114, 10563, 10570, 112, 114, 111, 120, 59, 1, 10886, 114, 59, 1, 10616, 111, 116, 59, 1, 8919, 113, 4, 2, 108, 113, 10586, 10592, 101, 115, 115, 59, 1, 8923, 108, 101, 115, 115, 59, 1, 10892, 101, 115, 115, 59, 1, 8823, 105, 109, 59, 1, 8819, 4, 2, 101, 110, 10616, 10626, 114, 116, 110, 101, 113, 113, 59, 3, 8809, 65024, 69, 59, 3, 8809, 65024, 4, 10, 65, 97, 98, 99, 101, 102, 107, 111, 115, 121, 10653, 10658, 10713, 10718, 10724, 10760, 10765, 10786, 10850, 10875, 114, 114, 59, 1, 8660, 4, 4, 105, 108, 109, 114, 10668, 10674, 10678, 10684, 114, 115, 112, 59, 1, 8202, 102, 59, 1, 189, 105, 108, 116, 59, 1, 8459, 4, 2, 100, 114, 10690, 10695, 99, 121, 59, 1, 1098, 4, 3, 59, 99, 119, 10703, 10705, 10710, 1, 8596, 105, 114, 59, 1, 10568, 59, 1, 8621, 97, 114, 59, 1, 8463, 105, 114, 99, 59, 1, 293, 4, 3, 97, 108, 114, 10732, 10748, 10754, 114, 116, 115, 4, 2, 59, 117, 10741, 10743, 1, 9829, 105, 116, 59, 1, 9829, 108, 105, 112, 59, 1, 8230, 99, 111, 110, 59, 1, 8889, 114, 59, 3, 55349, 56613, 115, 4, 2, 101, 119, 10772, 10779, 97, 114, 111, 119, 59, 1, 10533, 97, 114, 111, 119, 59, 1, 10534, 4, 5, 97, 109, 111, 112, 114, 10798, 10803, 10809, 10839, 10844, 114, 114, 59, 1, 8703, 116, 104, 116, 59, 1, 8763, 107, 4, 2, 108, 114, 10816, 10827, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8617, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8618, 102, 59, 3, 55349, 56665, 98, 97, 114, 59, 1, 8213, 4, 3, 99, 108, 116, 10858, 10863, 10869, 114, 59, 3, 55349, 56509, 97, 115, 104, 59, 1, 8463, 114, 111, 107, 59, 1, 295, 4, 2, 98, 112, 10881, 10887, 117, 108, 108, 59, 1, 8259, 104, 101, 110, 59, 1, 8208, 4, 15, 97, 99, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 10925, 10936, 10958, 10977, 10990, 11001, 11039, 11045, 11101, 11192, 11220, 11226, 11237, 11285, 11299, 99, 117, 116, 101, 5, 237, 1, 59, 10934, 1, 237, 4, 3, 59, 105, 121, 10944, 10946, 10955, 1, 8291, 114, 99, 5, 238, 1, 59, 10953, 1, 238, 59, 1, 1080, 4, 2, 99, 120, 10964, 10968, 121, 59, 1, 1077, 99, 108, 5, 161, 1, 59, 10975, 1, 161, 4, 2, 102, 114, 10983, 10986, 59, 1, 8660, 59, 3, 55349, 56614, 114, 97, 118, 101, 5, 236, 1, 59, 10999, 1, 236, 4, 4, 59, 105, 110, 111, 11011, 11013, 11028, 11034, 1, 8520, 4, 2, 105, 110, 11019, 11024, 110, 116, 59, 1, 10764, 116, 59, 1, 8749, 102, 105, 110, 59, 1, 10716, 116, 97, 59, 1, 8489, 108, 105, 103, 59, 1, 307, 4, 3, 97, 111, 112, 11053, 11092, 11096, 4, 3, 99, 103, 116, 11061, 11065, 11088, 114, 59, 1, 299, 4, 3, 101, 108, 112, 11073, 11076, 11082, 59, 1, 8465, 105, 110, 101, 59, 1, 8464, 97, 114, 116, 59, 1, 8465, 104, 59, 1, 305, 102, 59, 1, 8887, 101, 100, 59, 1, 437, 4, 5, 59, 99, 102, 111, 116, 11113, 11115, 11121, 11136, 11142, 1, 8712, 97, 114, 101, 59, 1, 8453, 105, 110, 4, 2, 59, 116, 11129, 11131, 1, 8734, 105, 101, 59, 1, 10717, 100, 111, 116, 59, 1, 305, 4, 5, 59, 99, 101, 108, 112, 11154, 11156, 11161, 11179, 11186, 1, 8747, 97, 108, 59, 1, 8890, 4, 2, 103, 114, 11167, 11173, 101, 114, 115, 59, 1, 8484, 99, 97, 108, 59, 1, 8890, 97, 114, 104, 107, 59, 1, 10775, 114, 111, 100, 59, 1, 10812, 4, 4, 99, 103, 112, 116, 11202, 11206, 11211, 11216, 121, 59, 1, 1105, 111, 110, 59, 1, 303, 102, 59, 3, 55349, 56666, 97, 59, 1, 953, 114, 111, 100, 59, 1, 10812, 117, 101, 115, 116, 5, 191, 1, 59, 11235, 1, 191, 4, 2, 99, 105, 11243, 11248, 114, 59, 3, 55349, 56510, 110, 4, 5, 59, 69, 100, 115, 118, 11261, 11263, 11266, 11271, 11282, 1, 8712, 59, 1, 8953, 111, 116, 59, 1, 8949, 4, 2, 59, 118, 11277, 11279, 1, 8948, 59, 1, 8947, 59, 1, 8712, 4, 2, 59, 105, 11291, 11293, 1, 8290, 108, 100, 101, 59, 1, 297, 4, 2, 107, 109, 11305, 11310, 99, 121, 59, 1, 1110, 108, 5, 239, 1, 59, 11316, 1, 239, 4, 6, 99, 102, 109, 111, 115, 117, 11332, 11346, 11351, 11357, 11363, 11380, 4, 2, 105, 121, 11338, 11343, 114, 99, 59, 1, 309, 59, 1, 1081, 114, 59, 3, 55349, 56615, 97, 116, 104, 59, 1, 567, 112, 102, 59, 3, 55349, 56667, 4, 2, 99, 101, 11369, 11374, 114, 59, 3, 55349, 56511, 114, 99, 121, 59, 1, 1112, 107, 99, 121, 59, 1, 1108, 4, 8, 97, 99, 102, 103, 104, 106, 111, 115, 11404, 11418, 11433, 11438, 11445, 11450, 11455, 11461, 112, 112, 97, 4, 2, 59, 118, 11413, 11415, 1, 954, 59, 1, 1008, 4, 2, 101, 121, 11424, 11430, 100, 105, 108, 59, 1, 311, 59, 1, 1082, 114, 59, 3, 55349, 56616, 114, 101, 101, 110, 59, 1, 312, 99, 121, 59, 1, 1093, 99, 121, 59, 1, 1116, 112, 102, 59, 3, 55349, 56668, 99, 114, 59, 3, 55349, 56512, 4, 23, 65, 66, 69, 72, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 11515, 11538, 11544, 11555, 11560, 11721, 11780, 11818, 11868, 12136, 12160, 12171, 12203, 12208, 12246, 12275, 12327, 12509, 12523, 12569, 12641, 12732, 12752, 4, 3, 97, 114, 116, 11523, 11528, 11532, 114, 114, 59, 1, 8666, 114, 59, 1, 8656, 97, 105, 108, 59, 1, 10523, 97, 114, 114, 59, 1, 10510, 4, 2, 59, 103, 11550, 11552, 1, 8806, 59, 1, 10891, 97, 114, 59, 1, 10594, 4, 9, 99, 101, 103, 109, 110, 112, 113, 114, 116, 11580, 11586, 11594, 11600, 11606, 11624, 11627, 11636, 11694, 117, 116, 101, 59, 1, 314, 109, 112, 116, 121, 118, 59, 1, 10676, 114, 97, 110, 59, 1, 8466, 98, 100, 97, 59, 1, 955, 103, 4, 3, 59, 100, 108, 11615, 11617, 11620, 1, 10216, 59, 1, 10641, 101, 59, 1, 10216, 59, 1, 10885, 117, 111, 5, 171, 1, 59, 11634, 1, 171, 114, 4, 8, 59, 98, 102, 104, 108, 112, 115, 116, 11655, 11657, 11669, 11673, 11677, 11681, 11685, 11690, 1, 8592, 4, 2, 59, 102, 11663, 11665, 1, 8676, 115, 59, 1, 10527, 115, 59, 1, 10525, 107, 59, 1, 8617, 112, 59, 1, 8619, 108, 59, 1, 10553, 105, 109, 59, 1, 10611, 108, 59, 1, 8610, 4, 3, 59, 97, 101, 11702, 11704, 11709, 1, 10923, 105, 108, 59, 1, 10521, 4, 2, 59, 115, 11715, 11717, 1, 10925, 59, 3, 10925, 65024, 4, 3, 97, 98, 114, 11729, 11734, 11739, 114, 114, 59, 1, 10508, 114, 107, 59, 1, 10098, 4, 2, 97, 107, 11745, 11758, 99, 4, 2, 101, 107, 11752, 11755, 59, 1, 123, 59, 1, 91, 4, 2, 101, 115, 11764, 11767, 59, 1, 10635, 108, 4, 2, 100, 117, 11774, 11777, 59, 1, 10639, 59, 1, 10637, 4, 4, 97, 101, 117, 121, 11790, 11796, 11811, 11815, 114, 111, 110, 59, 1, 318, 4, 2, 100, 105, 11802, 11807, 105, 108, 59, 1, 316, 108, 59, 1, 8968, 98, 59, 1, 123, 59, 1, 1083, 4, 4, 99, 113, 114, 115, 11828, 11832, 11845, 11864, 97, 59, 1, 10550, 117, 111, 4, 2, 59, 114, 11840, 11842, 1, 8220, 59, 1, 8222, 4, 2, 100, 117, 11851, 11857, 104, 97, 114, 59, 1, 10599, 115, 104, 97, 114, 59, 1, 10571, 104, 59, 1, 8626, 4, 5, 59, 102, 103, 113, 115, 11880, 11882, 12008, 12011, 12031, 1, 8804, 116, 4, 5, 97, 104, 108, 114, 116, 11895, 11913, 11935, 11947, 11996, 114, 114, 111, 119, 4, 2, 59, 116, 11905, 11907, 1, 8592, 97, 105, 108, 59, 1, 8610, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 11925, 11931, 111, 119, 110, 59, 1, 8637, 112, 59, 1, 8636, 101, 102, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8647, 105, 103, 104, 116, 4, 3, 97, 104, 115, 11959, 11974, 11984, 114, 114, 111, 119, 4, 2, 59, 115, 11969, 11971, 1, 8596, 59, 1, 8646, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8651, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8621, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8907, 59, 1, 8922, 4, 3, 59, 113, 115, 12019, 12021, 12024, 1, 8804, 59, 1, 8806, 108, 97, 110, 116, 59, 1, 10877, 4, 5, 59, 99, 100, 103, 115, 12043, 12045, 12049, 12070, 12083, 1, 10877, 99, 59, 1, 10920, 111, 116, 4, 2, 59, 111, 12057, 12059, 1, 10879, 4, 2, 59, 114, 12065, 12067, 1, 10881, 59, 1, 10883, 4, 2, 59, 101, 12076, 12079, 3, 8922, 65024, 115, 59, 1, 10899, 4, 5, 97, 100, 101, 103, 115, 12095, 12103, 12108, 12126, 12131, 112, 112, 114, 111, 120, 59, 1, 10885, 111, 116, 59, 1, 8918, 113, 4, 2, 103, 113, 12115, 12120, 116, 114, 59, 1, 8922, 103, 116, 114, 59, 1, 10891, 116, 114, 59, 1, 8822, 105, 109, 59, 1, 8818, 4, 3, 105, 108, 114, 12144, 12150, 12156, 115, 104, 116, 59, 1, 10620, 111, 111, 114, 59, 1, 8970, 59, 3, 55349, 56617, 4, 2, 59, 69, 12166, 12168, 1, 8822, 59, 1, 10897, 4, 2, 97, 98, 12177, 12198, 114, 4, 2, 100, 117, 12184, 12187, 59, 1, 8637, 4, 2, 59, 108, 12193, 12195, 1, 8636, 59, 1, 10602, 108, 107, 59, 1, 9604, 99, 121, 59, 1, 1113, 4, 5, 59, 97, 99, 104, 116, 12220, 12222, 12227, 12235, 12241, 1, 8810, 114, 114, 59, 1, 8647, 111, 114, 110, 101, 114, 59, 1, 8990, 97, 114, 100, 59, 1, 10603, 114, 105, 59, 1, 9722, 4, 2, 105, 111, 12252, 12258, 100, 111, 116, 59, 1, 320, 117, 115, 116, 4, 2, 59, 97, 12267, 12269, 1, 9136, 99, 104, 101, 59, 1, 9136, 4, 4, 69, 97, 101, 115, 12285, 12288, 12303, 12322, 59, 1, 8808, 112, 4, 2, 59, 112, 12295, 12297, 1, 10889, 114, 111, 120, 59, 1, 10889, 4, 2, 59, 113, 12309, 12311, 1, 10887, 4, 2, 59, 113, 12317, 12319, 1, 10887, 59, 1, 8808, 105, 109, 59, 1, 8934, 4, 8, 97, 98, 110, 111, 112, 116, 119, 122, 12345, 12359, 12364, 12421, 12446, 12467, 12474, 12490, 4, 2, 110, 114, 12351, 12355, 103, 59, 1, 10220, 114, 59, 1, 8701, 114, 107, 59, 1, 10214, 103, 4, 3, 108, 109, 114, 12373, 12401, 12409, 101, 102, 116, 4, 2, 97, 114, 12382, 12389, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10231, 97, 112, 115, 116, 111, 59, 1, 10236, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10230, 112, 97, 114, 114, 111, 119, 4, 2, 108, 114, 12433, 12439, 101, 102, 116, 59, 1, 8619, 105, 103, 104, 116, 59, 1, 8620, 4, 3, 97, 102, 108, 12454, 12458, 12462, 114, 59, 1, 10629, 59, 3, 55349, 56669, 117, 115, 59, 1, 10797, 105, 109, 101, 115, 59, 1, 10804, 4, 2, 97, 98, 12480, 12485, 115, 116, 59, 1, 8727, 97, 114, 59, 1, 95, 4, 3, 59, 101, 102, 12498, 12500, 12506, 1, 9674, 110, 103, 101, 59, 1, 9674, 59, 1, 10731, 97, 114, 4, 2, 59, 108, 12517, 12519, 1, 40, 116, 59, 1, 10643, 4, 5, 97, 99, 104, 109, 116, 12535, 12540, 12548, 12561, 12564, 114, 114, 59, 1, 8646, 111, 114, 110, 101, 114, 59, 1, 8991, 97, 114, 4, 2, 59, 100, 12556, 12558, 1, 8651, 59, 1, 10605, 59, 1, 8206, 114, 105, 59, 1, 8895, 4, 6, 97, 99, 104, 105, 113, 116, 12583, 12589, 12594, 12597, 12614, 12635, 113, 117, 111, 59, 1, 8249, 114, 59, 3, 55349, 56513, 59, 1, 8624, 109, 4, 3, 59, 101, 103, 12606, 12608, 12611, 1, 8818, 59, 1, 10893, 59, 1, 10895, 4, 2, 98, 117, 12620, 12623, 59, 1, 91, 111, 4, 2, 59, 114, 12630, 12632, 1, 8216, 59, 1, 8218, 114, 111, 107, 59, 1, 322, 5, 60, 8, 59, 99, 100, 104, 105, 108, 113, 114, 12660, 12662, 12675, 12680, 12686, 12692, 12698, 12705, 1, 60, 4, 2, 99, 105, 12668, 12671, 59, 1, 10918, 114, 59, 1, 10873, 111, 116, 59, 1, 8918, 114, 101, 101, 59, 1, 8907, 109, 101, 115, 59, 1, 8905, 97, 114, 114, 59, 1, 10614, 117, 101, 115, 116, 59, 1, 10875, 4, 2, 80, 105, 12711, 12716, 97, 114, 59, 1, 10646, 4, 3, 59, 101, 102, 12724, 12726, 12729, 1, 9667, 59, 1, 8884, 59, 1, 9666, 114, 4, 2, 100, 117, 12739, 12746, 115, 104, 97, 114, 59, 1, 10570, 104, 97, 114, 59, 1, 10598, 4, 2, 101, 110, 12758, 12768, 114, 116, 110, 101, 113, 113, 59, 3, 8808, 65024, 69, 59, 3, 8808, 65024, 4, 14, 68, 97, 99, 100, 101, 102, 104, 105, 108, 110, 111, 112, 115, 117, 12803, 12809, 12893, 12908, 12914, 12928, 12933, 12937, 13011, 13025, 13032, 13049, 13052, 13069, 68, 111, 116, 59, 1, 8762, 4, 4, 99, 108, 112, 114, 12819, 12827, 12849, 12887, 114, 5, 175, 1, 59, 12825, 1, 175, 4, 2, 101, 116, 12833, 12836, 59, 1, 9794, 4, 2, 59, 101, 12842, 12844, 1, 10016, 115, 101, 59, 1, 10016, 4, 2, 59, 115, 12855, 12857, 1, 8614, 116, 111, 4, 4, 59, 100, 108, 117, 12869, 12871, 12877, 12883, 1, 8614, 111, 119, 110, 59, 1, 8615, 101, 102, 116, 59, 1, 8612, 112, 59, 1, 8613, 107, 101, 114, 59, 1, 9646, 4, 2, 111, 121, 12899, 12905, 109, 109, 97, 59, 1, 10793, 59, 1, 1084, 97, 115, 104, 59, 1, 8212, 97, 115, 117, 114, 101, 100, 97, 110, 103, 108, 101, 59, 1, 8737, 114, 59, 3, 55349, 56618, 111, 59, 1, 8487, 4, 3, 99, 100, 110, 12945, 12954, 12985, 114, 111, 5, 181, 1, 59, 12952, 1, 181, 4, 4, 59, 97, 99, 100, 12964, 12966, 12971, 12976, 1, 8739, 115, 116, 59, 1, 42, 105, 114, 59, 1, 10992, 111, 116, 5, 183, 1, 59, 12983, 1, 183, 117, 115, 4, 3, 59, 98, 100, 12995, 12997, 13e3, 1, 8722, 59, 1, 8863, 4, 2, 59, 117, 13006, 13008, 1, 8760, 59, 1, 10794, 4, 2, 99, 100, 13017, 13021, 112, 59, 1, 10971, 114, 59, 1, 8230, 112, 108, 117, 115, 59, 1, 8723, 4, 2, 100, 112, 13038, 13044, 101, 108, 115, 59, 1, 8871, 102, 59, 3, 55349, 56670, 59, 1, 8723, 4, 2, 99, 116, 13058, 13063, 114, 59, 3, 55349, 56514, 112, 111, 115, 59, 1, 8766, 4, 3, 59, 108, 109, 13077, 13079, 13087, 1, 956, 116, 105, 109, 97, 112, 59, 1, 8888, 97, 112, 59, 1, 8888, 4, 24, 71, 76, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 13142, 13165, 13217, 13229, 13247, 13330, 13359, 13414, 13420, 13508, 13513, 13579, 13602, 13626, 13631, 13762, 13767, 13855, 13936, 13995, 14214, 14285, 14312, 14432, 4, 2, 103, 116, 13148, 13152, 59, 3, 8921, 824, 4, 2, 59, 118, 13158, 13161, 3, 8811, 8402, 59, 3, 8811, 824, 4, 3, 101, 108, 116, 13173, 13200, 13204, 102, 116, 4, 2, 97, 114, 13181, 13188, 114, 114, 111, 119, 59, 1, 8653, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8654, 59, 3, 8920, 824, 4, 2, 59, 118, 13210, 13213, 3, 8810, 8402, 59, 3, 8810, 824, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8655, 4, 2, 68, 100, 13235, 13241, 97, 115, 104, 59, 1, 8879, 97, 115, 104, 59, 1, 8878, 4, 5, 98, 99, 110, 112, 116, 13259, 13264, 13270, 13275, 13308, 108, 97, 59, 1, 8711, 117, 116, 101, 59, 1, 324, 103, 59, 3, 8736, 8402, 4, 5, 59, 69, 105, 111, 112, 13287, 13289, 13293, 13298, 13302, 1, 8777, 59, 3, 10864, 824, 100, 59, 3, 8779, 824, 115, 59, 1, 329, 114, 111, 120, 59, 1, 8777, 117, 114, 4, 2, 59, 97, 13316, 13318, 1, 9838, 108, 4, 2, 59, 115, 13325, 13327, 1, 9838, 59, 1, 8469, 4, 2, 115, 117, 13336, 13344, 112, 5, 160, 1, 59, 13342, 1, 160, 109, 112, 4, 2, 59, 101, 13352, 13355, 3, 8782, 824, 59, 3, 8783, 824, 4, 5, 97, 101, 111, 117, 121, 13371, 13385, 13391, 13407, 13411, 4, 2, 112, 114, 13377, 13380, 59, 1, 10819, 111, 110, 59, 1, 328, 100, 105, 108, 59, 1, 326, 110, 103, 4, 2, 59, 100, 13399, 13401, 1, 8775, 111, 116, 59, 3, 10861, 824, 112, 59, 1, 10818, 59, 1, 1085, 97, 115, 104, 59, 1, 8211, 4, 7, 59, 65, 97, 100, 113, 115, 120, 13436, 13438, 13443, 13466, 13472, 13478, 13494, 1, 8800, 114, 114, 59, 1, 8663, 114, 4, 2, 104, 114, 13450, 13454, 107, 59, 1, 10532, 4, 2, 59, 111, 13460, 13462, 1, 8599, 119, 59, 1, 8599, 111, 116, 59, 3, 8784, 824, 117, 105, 118, 59, 1, 8802, 4, 2, 101, 105, 13484, 13489, 97, 114, 59, 1, 10536, 109, 59, 3, 8770, 824, 105, 115, 116, 4, 2, 59, 115, 13503, 13505, 1, 8708, 59, 1, 8708, 114, 59, 3, 55349, 56619, 4, 4, 69, 101, 115, 116, 13523, 13527, 13563, 13568, 59, 3, 8807, 824, 4, 3, 59, 113, 115, 13535, 13537, 13559, 1, 8817, 4, 3, 59, 113, 115, 13545, 13547, 13551, 1, 8817, 59, 3, 8807, 824, 108, 97, 110, 116, 59, 3, 10878, 824, 59, 3, 10878, 824, 105, 109, 59, 1, 8821, 4, 2, 59, 114, 13574, 13576, 1, 8815, 59, 1, 8815, 4, 3, 65, 97, 112, 13587, 13592, 13597, 114, 114, 59, 1, 8654, 114, 114, 59, 1, 8622, 97, 114, 59, 1, 10994, 4, 3, 59, 115, 118, 13610, 13612, 13623, 1, 8715, 4, 2, 59, 100, 13618, 13620, 1, 8956, 59, 1, 8954, 59, 1, 8715, 99, 121, 59, 1, 1114, 4, 7, 65, 69, 97, 100, 101, 115, 116, 13647, 13652, 13656, 13661, 13665, 13737, 13742, 114, 114, 59, 1, 8653, 59, 3, 8806, 824, 114, 114, 59, 1, 8602, 114, 59, 1, 8229, 4, 4, 59, 102, 113, 115, 13675, 13677, 13703, 13725, 1, 8816, 116, 4, 2, 97, 114, 13684, 13691, 114, 114, 111, 119, 59, 1, 8602, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8622, 4, 3, 59, 113, 115, 13711, 13713, 13717, 1, 8816, 59, 3, 8806, 824, 108, 97, 110, 116, 59, 3, 10877, 824, 4, 2, 59, 115, 13731, 13734, 3, 10877, 824, 59, 1, 8814, 105, 109, 59, 1, 8820, 4, 2, 59, 114, 13748, 13750, 1, 8814, 105, 4, 2, 59, 101, 13757, 13759, 1, 8938, 59, 1, 8940, 105, 100, 59, 1, 8740, 4, 2, 112, 116, 13773, 13778, 102, 59, 3, 55349, 56671, 5, 172, 3, 59, 105, 110, 13787, 13789, 13829, 1, 172, 110, 4, 4, 59, 69, 100, 118, 13800, 13802, 13806, 13812, 1, 8713, 59, 3, 8953, 824, 111, 116, 59, 3, 8949, 824, 4, 3, 97, 98, 99, 13820, 13823, 13826, 59, 1, 8713, 59, 1, 8951, 59, 1, 8950, 105, 4, 2, 59, 118, 13836, 13838, 1, 8716, 4, 3, 97, 98, 99, 13846, 13849, 13852, 59, 1, 8716, 59, 1, 8958, 59, 1, 8957, 4, 3, 97, 111, 114, 13863, 13892, 13899, 114, 4, 4, 59, 97, 115, 116, 13874, 13876, 13883, 13888, 1, 8742, 108, 108, 101, 108, 59, 1, 8742, 108, 59, 3, 11005, 8421, 59, 3, 8706, 824, 108, 105, 110, 116, 59, 1, 10772, 4, 3, 59, 99, 101, 13907, 13909, 13914, 1, 8832, 117, 101, 59, 1, 8928, 4, 2, 59, 99, 13920, 13923, 3, 10927, 824, 4, 2, 59, 101, 13929, 13931, 1, 8832, 113, 59, 3, 10927, 824, 4, 4, 65, 97, 105, 116, 13946, 13951, 13971, 13982, 114, 114, 59, 1, 8655, 114, 114, 4, 3, 59, 99, 119, 13961, 13963, 13967, 1, 8603, 59, 3, 10547, 824, 59, 3, 8605, 824, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8603, 114, 105, 4, 2, 59, 101, 13990, 13992, 1, 8939, 59, 1, 8941, 4, 7, 99, 104, 105, 109, 112, 113, 117, 14011, 14036, 14060, 14080, 14085, 14090, 14106, 4, 4, 59, 99, 101, 114, 14021, 14023, 14028, 14032, 1, 8833, 117, 101, 59, 1, 8929, 59, 3, 10928, 824, 59, 3, 55349, 56515, 111, 114, 116, 4, 2, 109, 112, 14045, 14050, 105, 100, 59, 1, 8740, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8742, 109, 4, 2, 59, 101, 14067, 14069, 1, 8769, 4, 2, 59, 113, 14075, 14077, 1, 8772, 59, 1, 8772, 105, 100, 59, 1, 8740, 97, 114, 59, 1, 8742, 115, 117, 4, 2, 98, 112, 14098, 14102, 101, 59, 1, 8930, 101, 59, 1, 8931, 4, 3, 98, 99, 112, 14114, 14157, 14171, 4, 4, 59, 69, 101, 115, 14124, 14126, 14130, 14133, 1, 8836, 59, 3, 10949, 824, 59, 1, 8840, 101, 116, 4, 2, 59, 101, 14141, 14144, 3, 8834, 8402, 113, 4, 2, 59, 113, 14151, 14153, 1, 8840, 59, 3, 10949, 824, 99, 4, 2, 59, 101, 14164, 14166, 1, 8833, 113, 59, 3, 10928, 824, 4, 4, 59, 69, 101, 115, 14181, 14183, 14187, 14190, 1, 8837, 59, 3, 10950, 824, 59, 1, 8841, 101, 116, 4, 2, 59, 101, 14198, 14201, 3, 8835, 8402, 113, 4, 2, 59, 113, 14208, 14210, 1, 8841, 59, 3, 10950, 824, 4, 4, 103, 105, 108, 114, 14224, 14228, 14238, 14242, 108, 59, 1, 8825, 108, 100, 101, 5, 241, 1, 59, 14236, 1, 241, 103, 59, 1, 8824, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 14254, 14269, 101, 102, 116, 4, 2, 59, 101, 14263, 14265, 1, 8938, 113, 59, 1, 8940, 105, 103, 104, 116, 4, 2, 59, 101, 14279, 14281, 1, 8939, 113, 59, 1, 8941, 4, 2, 59, 109, 14291, 14293, 1, 957, 4, 3, 59, 101, 115, 14301, 14303, 14308, 1, 35, 114, 111, 59, 1, 8470, 112, 59, 1, 8199, 4, 9, 68, 72, 97, 100, 103, 105, 108, 114, 115, 14332, 14338, 14344, 14349, 14355, 14369, 14376, 14408, 14426, 97, 115, 104, 59, 1, 8877, 97, 114, 114, 59, 1, 10500, 112, 59, 3, 8781, 8402, 97, 115, 104, 59, 1, 8876, 4, 2, 101, 116, 14361, 14365, 59, 3, 8805, 8402, 59, 3, 62, 8402, 110, 102, 105, 110, 59, 1, 10718, 4, 3, 65, 101, 116, 14384, 14389, 14393, 114, 114, 59, 1, 10498, 59, 3, 8804, 8402, 4, 2, 59, 114, 14399, 14402, 3, 60, 8402, 105, 101, 59, 3, 8884, 8402, 4, 2, 65, 116, 14414, 14419, 114, 114, 59, 1, 10499, 114, 105, 101, 59, 3, 8885, 8402, 105, 109, 59, 3, 8764, 8402, 4, 3, 65, 97, 110, 14440, 14445, 14468, 114, 114, 59, 1, 8662, 114, 4, 2, 104, 114, 14452, 14456, 107, 59, 1, 10531, 4, 2, 59, 111, 14462, 14464, 1, 8598, 119, 59, 1, 8598, 101, 97, 114, 59, 1, 10535, 4, 18, 83, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 14512, 14515, 14535, 14560, 14597, 14603, 14618, 14643, 14657, 14662, 14701, 14741, 14747, 14769, 14851, 14877, 14907, 14916, 59, 1, 9416, 4, 2, 99, 115, 14521, 14531, 117, 116, 101, 5, 243, 1, 59, 14529, 1, 243, 116, 59, 1, 8859, 4, 2, 105, 121, 14541, 14557, 114, 4, 2, 59, 99, 14548, 14550, 1, 8858, 5, 244, 1, 59, 14555, 1, 244, 59, 1, 1086, 4, 5, 97, 98, 105, 111, 115, 14572, 14577, 14583, 14587, 14591, 115, 104, 59, 1, 8861, 108, 97, 99, 59, 1, 337, 118, 59, 1, 10808, 116, 59, 1, 8857, 111, 108, 100, 59, 1, 10684, 108, 105, 103, 59, 1, 339, 4, 2, 99, 114, 14609, 14614, 105, 114, 59, 1, 10687, 59, 3, 55349, 56620, 4, 3, 111, 114, 116, 14626, 14630, 14640, 110, 59, 1, 731, 97, 118, 101, 5, 242, 1, 59, 14638, 1, 242, 59, 1, 10689, 4, 2, 98, 109, 14649, 14654, 97, 114, 59, 1, 10677, 59, 1, 937, 110, 116, 59, 1, 8750, 4, 4, 97, 99, 105, 116, 14672, 14677, 14693, 14698, 114, 114, 59, 1, 8634, 4, 2, 105, 114, 14683, 14687, 114, 59, 1, 10686, 111, 115, 115, 59, 1, 10683, 110, 101, 59, 1, 8254, 59, 1, 10688, 4, 3, 97, 101, 105, 14709, 14714, 14719, 99, 114, 59, 1, 333, 103, 97, 59, 1, 969, 4, 3, 99, 100, 110, 14727, 14733, 14736, 114, 111, 110, 59, 1, 959, 59, 1, 10678, 117, 115, 59, 1, 8854, 112, 102, 59, 3, 55349, 56672, 4, 3, 97, 101, 108, 14755, 14759, 14764, 114, 59, 1, 10679, 114, 112, 59, 1, 10681, 117, 115, 59, 1, 8853, 4, 7, 59, 97, 100, 105, 111, 115, 118, 14785, 14787, 14792, 14831, 14837, 14841, 14848, 1, 8744, 114, 114, 59, 1, 8635, 4, 4, 59, 101, 102, 109, 14802, 14804, 14817, 14824, 1, 10845, 114, 4, 2, 59, 111, 14811, 14813, 1, 8500, 102, 59, 1, 8500, 5, 170, 1, 59, 14822, 1, 170, 5, 186, 1, 59, 14829, 1, 186, 103, 111, 102, 59, 1, 8886, 114, 59, 1, 10838, 108, 111, 112, 101, 59, 1, 10839, 59, 1, 10843, 4, 3, 99, 108, 111, 14859, 14863, 14873, 114, 59, 1, 8500, 97, 115, 104, 5, 248, 1, 59, 14871, 1, 248, 108, 59, 1, 8856, 105, 4, 2, 108, 109, 14884, 14893, 100, 101, 5, 245, 1, 59, 14891, 1, 245, 101, 115, 4, 2, 59, 97, 14901, 14903, 1, 8855, 115, 59, 1, 10806, 109, 108, 5, 246, 1, 59, 14914, 1, 246, 98, 97, 114, 59, 1, 9021, 4, 12, 97, 99, 101, 102, 104, 105, 108, 109, 111, 114, 115, 117, 14948, 14992, 14996, 15033, 15038, 15068, 15090, 15189, 15192, 15222, 15427, 15441, 114, 4, 4, 59, 97, 115, 116, 14959, 14961, 14976, 14989, 1, 8741, 5, 182, 2, 59, 108, 14968, 14970, 1, 182, 108, 101, 108, 59, 1, 8741, 4, 2, 105, 108, 14982, 14986, 109, 59, 1, 10995, 59, 1, 11005, 59, 1, 8706, 121, 59, 1, 1087, 114, 4, 5, 99, 105, 109, 112, 116, 15009, 15014, 15019, 15024, 15027, 110, 116, 59, 1, 37, 111, 100, 59, 1, 46, 105, 108, 59, 1, 8240, 59, 1, 8869, 101, 110, 107, 59, 1, 8241, 114, 59, 3, 55349, 56621, 4, 3, 105, 109, 111, 15046, 15057, 15063, 4, 2, 59, 118, 15052, 15054, 1, 966, 59, 1, 981, 109, 97, 116, 59, 1, 8499, 110, 101, 59, 1, 9742, 4, 3, 59, 116, 118, 15076, 15078, 15087, 1, 960, 99, 104, 102, 111, 114, 107, 59, 1, 8916, 59, 1, 982, 4, 2, 97, 117, 15096, 15119, 110, 4, 2, 99, 107, 15103, 15115, 107, 4, 2, 59, 104, 15110, 15112, 1, 8463, 59, 1, 8462, 118, 59, 1, 8463, 115, 4, 9, 59, 97, 98, 99, 100, 101, 109, 115, 116, 15140, 15142, 15148, 15151, 15156, 15168, 15171, 15179, 15184, 1, 43, 99, 105, 114, 59, 1, 10787, 59, 1, 8862, 105, 114, 59, 1, 10786, 4, 2, 111, 117, 15162, 15165, 59, 1, 8724, 59, 1, 10789, 59, 1, 10866, 110, 5, 177, 1, 59, 15177, 1, 177, 105, 109, 59, 1, 10790, 119, 111, 59, 1, 10791, 59, 1, 177, 4, 3, 105, 112, 117, 15200, 15208, 15213, 110, 116, 105, 110, 116, 59, 1, 10773, 102, 59, 3, 55349, 56673, 110, 100, 5, 163, 1, 59, 15220, 1, 163, 4, 10, 59, 69, 97, 99, 101, 105, 110, 111, 115, 117, 15244, 15246, 15249, 15253, 15258, 15334, 15347, 15367, 15416, 15421, 1, 8826, 59, 1, 10931, 112, 59, 1, 10935, 117, 101, 59, 1, 8828, 4, 2, 59, 99, 15264, 15266, 1, 10927, 4, 6, 59, 97, 99, 101, 110, 115, 15280, 15282, 15290, 15299, 15303, 15329, 1, 8826, 112, 112, 114, 111, 120, 59, 1, 10935, 117, 114, 108, 121, 101, 113, 59, 1, 8828, 113, 59, 1, 10927, 4, 3, 97, 101, 115, 15311, 15319, 15324, 112, 112, 114, 111, 120, 59, 1, 10937, 113, 113, 59, 1, 10933, 105, 109, 59, 1, 8936, 105, 109, 59, 1, 8830, 109, 101, 4, 2, 59, 115, 15342, 15344, 1, 8242, 59, 1, 8473, 4, 3, 69, 97, 115, 15355, 15358, 15362, 59, 1, 10933, 112, 59, 1, 10937, 105, 109, 59, 1, 8936, 4, 3, 100, 102, 112, 15375, 15378, 15404, 59, 1, 8719, 4, 3, 97, 108, 115, 15386, 15392, 15398, 108, 97, 114, 59, 1, 9006, 105, 110, 101, 59, 1, 8978, 117, 114, 102, 59, 1, 8979, 4, 2, 59, 116, 15410, 15412, 1, 8733, 111, 59, 1, 8733, 105, 109, 59, 1, 8830, 114, 101, 108, 59, 1, 8880, 4, 2, 99, 105, 15433, 15438, 114, 59, 3, 55349, 56517, 59, 1, 968, 110, 99, 115, 112, 59, 1, 8200, 4, 6, 102, 105, 111, 112, 115, 117, 15462, 15467, 15472, 15478, 15485, 15491, 114, 59, 3, 55349, 56622, 110, 116, 59, 1, 10764, 112, 102, 59, 3, 55349, 56674, 114, 105, 109, 101, 59, 1, 8279, 99, 114, 59, 3, 55349, 56518, 4, 3, 97, 101, 111, 15499, 15520, 15534, 116, 4, 2, 101, 105, 15506, 15515, 114, 110, 105, 111, 110, 115, 59, 1, 8461, 110, 116, 59, 1, 10774, 115, 116, 4, 2, 59, 101, 15528, 15530, 1, 63, 113, 59, 1, 8799, 116, 5, 34, 1, 59, 15540, 1, 34, 4, 21, 65, 66, 72, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 15586, 15609, 15615, 15620, 15796, 15855, 15893, 15931, 15977, 16001, 16039, 16183, 16204, 16222, 16228, 16285, 16312, 16318, 16363, 16408, 16416, 4, 3, 97, 114, 116, 15594, 15599, 15603, 114, 114, 59, 1, 8667, 114, 59, 1, 8658, 97, 105, 108, 59, 1, 10524, 97, 114, 114, 59, 1, 10511, 97, 114, 59, 1, 10596, 4, 7, 99, 100, 101, 110, 113, 114, 116, 15636, 15651, 15656, 15664, 15687, 15696, 15770, 4, 2, 101, 117, 15642, 15646, 59, 3, 8765, 817, 116, 101, 59, 1, 341, 105, 99, 59, 1, 8730, 109, 112, 116, 121, 118, 59, 1, 10675, 103, 4, 4, 59, 100, 101, 108, 15675, 15677, 15680, 15683, 1, 10217, 59, 1, 10642, 59, 1, 10661, 101, 59, 1, 10217, 117, 111, 5, 187, 1, 59, 15694, 1, 187, 114, 4, 11, 59, 97, 98, 99, 102, 104, 108, 112, 115, 116, 119, 15721, 15723, 15727, 15739, 15742, 15746, 15750, 15754, 15758, 15763, 15767, 1, 8594, 112, 59, 1, 10613, 4, 2, 59, 102, 15733, 15735, 1, 8677, 115, 59, 1, 10528, 59, 1, 10547, 115, 59, 1, 10526, 107, 59, 1, 8618, 112, 59, 1, 8620, 108, 59, 1, 10565, 105, 109, 59, 1, 10612, 108, 59, 1, 8611, 59, 1, 8605, 4, 2, 97, 105, 15776, 15781, 105, 108, 59, 1, 10522, 111, 4, 2, 59, 110, 15788, 15790, 1, 8758, 97, 108, 115, 59, 1, 8474, 4, 3, 97, 98, 114, 15804, 15809, 15814, 114, 114, 59, 1, 10509, 114, 107, 59, 1, 10099, 4, 2, 97, 107, 15820, 15833, 99, 4, 2, 101, 107, 15827, 15830, 59, 1, 125, 59, 1, 93, 4, 2, 101, 115, 15839, 15842, 59, 1, 10636, 108, 4, 2, 100, 117, 15849, 15852, 59, 1, 10638, 59, 1, 10640, 4, 4, 97, 101, 117, 121, 15865, 15871, 15886, 15890, 114, 111, 110, 59, 1, 345, 4, 2, 100, 105, 15877, 15882, 105, 108, 59, 1, 343, 108, 59, 1, 8969, 98, 59, 1, 125, 59, 1, 1088, 4, 4, 99, 108, 113, 115, 15903, 15907, 15914, 15927, 97, 59, 1, 10551, 100, 104, 97, 114, 59, 1, 10601, 117, 111, 4, 2, 59, 114, 15922, 15924, 1, 8221, 59, 1, 8221, 104, 59, 1, 8627, 4, 3, 97, 99, 103, 15939, 15966, 15970, 108, 4, 4, 59, 105, 112, 115, 15950, 15952, 15957, 15963, 1, 8476, 110, 101, 59, 1, 8475, 97, 114, 116, 59, 1, 8476, 59, 1, 8477, 116, 59, 1, 9645, 5, 174, 1, 59, 15975, 1, 174, 4, 3, 105, 108, 114, 15985, 15991, 15997, 115, 104, 116, 59, 1, 10621, 111, 111, 114, 59, 1, 8971, 59, 3, 55349, 56623, 4, 2, 97, 111, 16007, 16028, 114, 4, 2, 100, 117, 16014, 16017, 59, 1, 8641, 4, 2, 59, 108, 16023, 16025, 1, 8640, 59, 1, 10604, 4, 2, 59, 118, 16034, 16036, 1, 961, 59, 1, 1009, 4, 3, 103, 110, 115, 16047, 16167, 16171, 104, 116, 4, 6, 97, 104, 108, 114, 115, 116, 16063, 16081, 16103, 16130, 16143, 16155, 114, 114, 111, 119, 4, 2, 59, 116, 16073, 16075, 1, 8594, 97, 105, 108, 59, 1, 8611, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 16093, 16099, 111, 119, 110, 59, 1, 8641, 112, 59, 1, 8640, 101, 102, 116, 4, 2, 97, 104, 16112, 16120, 114, 114, 111, 119, 115, 59, 1, 8644, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8652, 105, 103, 104, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8649, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8605, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8908, 103, 59, 1, 730, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8787, 4, 3, 97, 104, 109, 16191, 16196, 16201, 114, 114, 59, 1, 8644, 97, 114, 59, 1, 8652, 59, 1, 8207, 111, 117, 115, 116, 4, 2, 59, 97, 16214, 16216, 1, 9137, 99, 104, 101, 59, 1, 9137, 109, 105, 100, 59, 1, 10990, 4, 4, 97, 98, 112, 116, 16238, 16252, 16257, 16278, 4, 2, 110, 114, 16244, 16248, 103, 59, 1, 10221, 114, 59, 1, 8702, 114, 107, 59, 1, 10215, 4, 3, 97, 102, 108, 16265, 16269, 16273, 114, 59, 1, 10630, 59, 3, 55349, 56675, 117, 115, 59, 1, 10798, 105, 109, 101, 115, 59, 1, 10805, 4, 2, 97, 112, 16291, 16304, 114, 4, 2, 59, 103, 16298, 16300, 1, 41, 116, 59, 1, 10644, 111, 108, 105, 110, 116, 59, 1, 10770, 97, 114, 114, 59, 1, 8649, 4, 4, 97, 99, 104, 113, 16328, 16334, 16339, 16342, 113, 117, 111, 59, 1, 8250, 114, 59, 3, 55349, 56519, 59, 1, 8625, 4, 2, 98, 117, 16348, 16351, 59, 1, 93, 111, 4, 2, 59, 114, 16358, 16360, 1, 8217, 59, 1, 8217, 4, 3, 104, 105, 114, 16371, 16377, 16383, 114, 101, 101, 59, 1, 8908, 109, 101, 115, 59, 1, 8906, 105, 4, 4, 59, 101, 102, 108, 16394, 16396, 16399, 16402, 1, 9657, 59, 1, 8885, 59, 1, 9656, 116, 114, 105, 59, 1, 10702, 108, 117, 104, 97, 114, 59, 1, 10600, 59, 1, 8478, 4, 19, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 16459, 16466, 16472, 16572, 16590, 16672, 16687, 16746, 16844, 16850, 16924, 16963, 16988, 17115, 17121, 17154, 17206, 17614, 17656, 99, 117, 116, 101, 59, 1, 347, 113, 117, 111, 59, 1, 8218, 4, 10, 59, 69, 97, 99, 101, 105, 110, 112, 115, 121, 16494, 16496, 16499, 16513, 16518, 16531, 16536, 16556, 16564, 16569, 1, 8827, 59, 1, 10932, 4, 2, 112, 114, 16505, 16508, 59, 1, 10936, 111, 110, 59, 1, 353, 117, 101, 59, 1, 8829, 4, 2, 59, 100, 16524, 16526, 1, 10928, 105, 108, 59, 1, 351, 114, 99, 59, 1, 349, 4, 3, 69, 97, 115, 16544, 16547, 16551, 59, 1, 10934, 112, 59, 1, 10938, 105, 109, 59, 1, 8937, 111, 108, 105, 110, 116, 59, 1, 10771, 105, 109, 59, 1, 8831, 59, 1, 1089, 111, 116, 4, 3, 59, 98, 101, 16582, 16584, 16587, 1, 8901, 59, 1, 8865, 59, 1, 10854, 4, 7, 65, 97, 99, 109, 115, 116, 120, 16606, 16611, 16634, 16642, 16646, 16652, 16668, 114, 114, 59, 1, 8664, 114, 4, 2, 104, 114, 16618, 16622, 107, 59, 1, 10533, 4, 2, 59, 111, 16628, 16630, 1, 8600, 119, 59, 1, 8600, 116, 5, 167, 1, 59, 16640, 1, 167, 105, 59, 1, 59, 119, 97, 114, 59, 1, 10537, 109, 4, 2, 105, 110, 16659, 16665, 110, 117, 115, 59, 1, 8726, 59, 1, 8726, 116, 59, 1, 10038, 114, 4, 2, 59, 111, 16679, 16682, 3, 55349, 56624, 119, 110, 59, 1, 8994, 4, 4, 97, 99, 111, 121, 16697, 16702, 16716, 16739, 114, 112, 59, 1, 9839, 4, 2, 104, 121, 16708, 16713, 99, 121, 59, 1, 1097, 59, 1, 1096, 114, 116, 4, 2, 109, 112, 16724, 16729, 105, 100, 59, 1, 8739, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8741, 5, 173, 1, 59, 16744, 1, 173, 4, 2, 103, 109, 16752, 16770, 109, 97, 4, 3, 59, 102, 118, 16762, 16764, 16767, 1, 963, 59, 1, 962, 59, 1, 962, 4, 8, 59, 100, 101, 103, 108, 110, 112, 114, 16788, 16790, 16795, 16806, 16817, 16828, 16832, 16838, 1, 8764, 111, 116, 59, 1, 10858, 4, 2, 59, 113, 16801, 16803, 1, 8771, 59, 1, 8771, 4, 2, 59, 69, 16812, 16814, 1, 10910, 59, 1, 10912, 4, 2, 59, 69, 16823, 16825, 1, 10909, 59, 1, 10911, 101, 59, 1, 8774, 108, 117, 115, 59, 1, 10788, 97, 114, 114, 59, 1, 10610, 97, 114, 114, 59, 1, 8592, 4, 4, 97, 101, 105, 116, 16860, 16883, 16891, 16904, 4, 2, 108, 115, 16866, 16878, 108, 115, 101, 116, 109, 105, 110, 117, 115, 59, 1, 8726, 104, 112, 59, 1, 10803, 112, 97, 114, 115, 108, 59, 1, 10724, 4, 2, 100, 108, 16897, 16900, 59, 1, 8739, 101, 59, 1, 8995, 4, 2, 59, 101, 16910, 16912, 1, 10922, 4, 2, 59, 115, 16918, 16920, 1, 10924, 59, 3, 10924, 65024, 4, 3, 102, 108, 112, 16932, 16938, 16958, 116, 99, 121, 59, 1, 1100, 4, 2, 59, 98, 16944, 16946, 1, 47, 4, 2, 59, 97, 16952, 16954, 1, 10692, 114, 59, 1, 9023, 102, 59, 3, 55349, 56676, 97, 4, 2, 100, 114, 16970, 16985, 101, 115, 4, 2, 59, 117, 16978, 16980, 1, 9824, 105, 116, 59, 1, 9824, 59, 1, 8741, 4, 3, 99, 115, 117, 16996, 17028, 17089, 4, 2, 97, 117, 17002, 17015, 112, 4, 2, 59, 115, 17009, 17011, 1, 8851, 59, 3, 8851, 65024, 112, 4, 2, 59, 115, 17022, 17024, 1, 8852, 59, 3, 8852, 65024, 117, 4, 2, 98, 112, 17035, 17062, 4, 3, 59, 101, 115, 17043, 17045, 17048, 1, 8847, 59, 1, 8849, 101, 116, 4, 2, 59, 101, 17056, 17058, 1, 8847, 113, 59, 1, 8849, 4, 3, 59, 101, 115, 17070, 17072, 17075, 1, 8848, 59, 1, 8850, 101, 116, 4, 2, 59, 101, 17083, 17085, 1, 8848, 113, 59, 1, 8850, 4, 3, 59, 97, 102, 17097, 17099, 17112, 1, 9633, 114, 4, 2, 101, 102, 17106, 17109, 59, 1, 9633, 59, 1, 9642, 59, 1, 9642, 97, 114, 114, 59, 1, 8594, 4, 4, 99, 101, 109, 116, 17131, 17136, 17142, 17148, 114, 59, 3, 55349, 56520, 116, 109, 110, 59, 1, 8726, 105, 108, 101, 59, 1, 8995, 97, 114, 102, 59, 1, 8902, 4, 2, 97, 114, 17160, 17172, 114, 4, 2, 59, 102, 17167, 17169, 1, 9734, 59, 1, 9733, 4, 2, 97, 110, 17178, 17202, 105, 103, 104, 116, 4, 2, 101, 112, 17188, 17197, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 104, 105, 59, 1, 981, 115, 59, 1, 175, 4, 5, 98, 99, 109, 110, 112, 17218, 17351, 17420, 17423, 17427, 4, 9, 59, 69, 100, 101, 109, 110, 112, 114, 115, 17238, 17240, 17243, 17248, 17261, 17267, 17279, 17285, 17291, 1, 8834, 59, 1, 10949, 111, 116, 59, 1, 10941, 4, 2, 59, 100, 17254, 17256, 1, 8838, 111, 116, 59, 1, 10947, 117, 108, 116, 59, 1, 10945, 4, 2, 69, 101, 17273, 17276, 59, 1, 10955, 59, 1, 8842, 108, 117, 115, 59, 1, 10943, 97, 114, 114, 59, 1, 10617, 4, 3, 101, 105, 117, 17299, 17335, 17339, 116, 4, 3, 59, 101, 110, 17308, 17310, 17322, 1, 8834, 113, 4, 2, 59, 113, 17317, 17319, 1, 8838, 59, 1, 10949, 101, 113, 4, 2, 59, 113, 17330, 17332, 1, 8842, 59, 1, 10955, 109, 59, 1, 10951, 4, 2, 98, 112, 17345, 17348, 59, 1, 10965, 59, 1, 10963, 99, 4, 6, 59, 97, 99, 101, 110, 115, 17366, 17368, 17376, 17385, 17389, 17415, 1, 8827, 112, 112, 114, 111, 120, 59, 1, 10936, 117, 114, 108, 121, 101, 113, 59, 1, 8829, 113, 59, 1, 10928, 4, 3, 97, 101, 115, 17397, 17405, 17410, 112, 112, 114, 111, 120, 59, 1, 10938, 113, 113, 59, 1, 10934, 105, 109, 59, 1, 8937, 105, 109, 59, 1, 8831, 59, 1, 8721, 103, 59, 1, 9834, 4, 13, 49, 50, 51, 59, 69, 100, 101, 104, 108, 109, 110, 112, 115, 17455, 17462, 17469, 17476, 17478, 17481, 17496, 17509, 17524, 17530, 17536, 17548, 17554, 5, 185, 1, 59, 17460, 1, 185, 5, 178, 1, 59, 17467, 1, 178, 5, 179, 1, 59, 17474, 1, 179, 1, 8835, 59, 1, 10950, 4, 2, 111, 115, 17487, 17491, 116, 59, 1, 10942, 117, 98, 59, 1, 10968, 4, 2, 59, 100, 17502, 17504, 1, 8839, 111, 116, 59, 1, 10948, 115, 4, 2, 111, 117, 17516, 17520, 108, 59, 1, 10185, 98, 59, 1, 10967, 97, 114, 114, 59, 1, 10619, 117, 108, 116, 59, 1, 10946, 4, 2, 69, 101, 17542, 17545, 59, 1, 10956, 59, 1, 8843, 108, 117, 115, 59, 1, 10944, 4, 3, 101, 105, 117, 17562, 17598, 17602, 116, 4, 3, 59, 101, 110, 17571, 17573, 17585, 1, 8835, 113, 4, 2, 59, 113, 17580, 17582, 1, 8839, 59, 1, 10950, 101, 113, 4, 2, 59, 113, 17593, 17595, 1, 8843, 59, 1, 10956, 109, 59, 1, 10952, 4, 2, 98, 112, 17608, 17611, 59, 1, 10964, 59, 1, 10966, 4, 3, 65, 97, 110, 17622, 17627, 17650, 114, 114, 59, 1, 8665, 114, 4, 2, 104, 114, 17634, 17638, 107, 59, 1, 10534, 4, 2, 59, 111, 17644, 17646, 1, 8601, 119, 59, 1, 8601, 119, 97, 114, 59, 1, 10538, 108, 105, 103, 5, 223, 1, 59, 17664, 1, 223, 4, 13, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 114, 115, 119, 17694, 17709, 17714, 17737, 17742, 17749, 17754, 17860, 17905, 17957, 17964, 18090, 18122, 4, 2, 114, 117, 17700, 17706, 103, 101, 116, 59, 1, 8982, 59, 1, 964, 114, 107, 59, 1, 9140, 4, 3, 97, 101, 121, 17722, 17728, 17734, 114, 111, 110, 59, 1, 357, 100, 105, 108, 59, 1, 355, 59, 1, 1090, 111, 116, 59, 1, 8411, 108, 114, 101, 99, 59, 1, 8981, 114, 59, 3, 55349, 56625, 4, 4, 101, 105, 107, 111, 17764, 17805, 17836, 17851, 4, 2, 114, 116, 17770, 17786, 101, 4, 2, 52, 102, 17777, 17780, 59, 1, 8756, 111, 114, 101, 59, 1, 8756, 97, 4, 3, 59, 115, 118, 17795, 17797, 17802, 1, 952, 121, 109, 59, 1, 977, 59, 1, 977, 4, 2, 99, 110, 17811, 17831, 107, 4, 2, 97, 115, 17818, 17826, 112, 112, 114, 111, 120, 59, 1, 8776, 105, 109, 59, 1, 8764, 115, 112, 59, 1, 8201, 4, 2, 97, 115, 17842, 17846, 112, 59, 1, 8776, 105, 109, 59, 1, 8764, 114, 110, 5, 254, 1, 59, 17858, 1, 254, 4, 3, 108, 109, 110, 17868, 17873, 17901, 100, 101, 59, 1, 732, 101, 115, 5, 215, 3, 59, 98, 100, 17884, 17886, 17898, 1, 215, 4, 2, 59, 97, 17892, 17894, 1, 8864, 114, 59, 1, 10801, 59, 1, 10800, 116, 59, 1, 8749, 4, 3, 101, 112, 115, 17913, 17917, 17953, 97, 59, 1, 10536, 4, 4, 59, 98, 99, 102, 17927, 17929, 17934, 17939, 1, 8868, 111, 116, 59, 1, 9014, 105, 114, 59, 1, 10993, 4, 2, 59, 111, 17945, 17948, 3, 55349, 56677, 114, 107, 59, 1, 10970, 97, 59, 1, 10537, 114, 105, 109, 101, 59, 1, 8244, 4, 3, 97, 105, 112, 17972, 17977, 18082, 100, 101, 59, 1, 8482, 4, 7, 97, 100, 101, 109, 112, 115, 116, 17993, 18051, 18056, 18059, 18066, 18072, 18076, 110, 103, 108, 101, 4, 5, 59, 100, 108, 113, 114, 18009, 18011, 18017, 18032, 18035, 1, 9653, 111, 119, 110, 59, 1, 9663, 101, 102, 116, 4, 2, 59, 101, 18026, 18028, 1, 9667, 113, 59, 1, 8884, 59, 1, 8796, 105, 103, 104, 116, 4, 2, 59, 101, 18045, 18047, 1, 9657, 113, 59, 1, 8885, 111, 116, 59, 1, 9708, 59, 1, 8796, 105, 110, 117, 115, 59, 1, 10810, 108, 117, 115, 59, 1, 10809, 98, 59, 1, 10701, 105, 109, 101, 59, 1, 10811, 101, 122, 105, 117, 109, 59, 1, 9186, 4, 3, 99, 104, 116, 18098, 18111, 18116, 4, 2, 114, 121, 18104, 18108, 59, 3, 55349, 56521, 59, 1, 1094, 99, 121, 59, 1, 1115, 114, 111, 107, 59, 1, 359, 4, 2, 105, 111, 18128, 18133, 120, 116, 59, 1, 8812, 104, 101, 97, 100, 4, 2, 108, 114, 18143, 18154, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8606, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8608, 4, 18, 65, 72, 97, 98, 99, 100, 102, 103, 104, 108, 109, 111, 112, 114, 115, 116, 117, 119, 18204, 18209, 18214, 18234, 18250, 18268, 18292, 18308, 18319, 18343, 18379, 18397, 18413, 18504, 18547, 18553, 18584, 18603, 114, 114, 59, 1, 8657, 97, 114, 59, 1, 10595, 4, 2, 99, 114, 18220, 18230, 117, 116, 101, 5, 250, 1, 59, 18228, 1, 250, 114, 59, 1, 8593, 114, 4, 2, 99, 101, 18241, 18245, 121, 59, 1, 1118, 118, 101, 59, 1, 365, 4, 2, 105, 121, 18256, 18265, 114, 99, 5, 251, 1, 59, 18263, 1, 251, 59, 1, 1091, 4, 3, 97, 98, 104, 18276, 18281, 18287, 114, 114, 59, 1, 8645, 108, 97, 99, 59, 1, 369, 97, 114, 59, 1, 10606, 4, 2, 105, 114, 18298, 18304, 115, 104, 116, 59, 1, 10622, 59, 3, 55349, 56626, 114, 97, 118, 101, 5, 249, 1, 59, 18317, 1, 249, 4, 2, 97, 98, 18325, 18338, 114, 4, 2, 108, 114, 18332, 18335, 59, 1, 8639, 59, 1, 8638, 108, 107, 59, 1, 9600, 4, 2, 99, 116, 18349, 18374, 4, 2, 111, 114, 18355, 18369, 114, 110, 4, 2, 59, 101, 18363, 18365, 1, 8988, 114, 59, 1, 8988, 111, 112, 59, 1, 8975, 114, 105, 59, 1, 9720, 4, 2, 97, 108, 18385, 18390, 99, 114, 59, 1, 363, 5, 168, 1, 59, 18395, 1, 168, 4, 2, 103, 112, 18403, 18408, 111, 110, 59, 1, 371, 102, 59, 3, 55349, 56678, 4, 6, 97, 100, 104, 108, 115, 117, 18427, 18434, 18445, 18470, 18475, 18494, 114, 114, 111, 119, 59, 1, 8593, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8597, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 18457, 18463, 101, 102, 116, 59, 1, 8639, 105, 103, 104, 116, 59, 1, 8638, 117, 115, 59, 1, 8846, 105, 4, 3, 59, 104, 108, 18484, 18486, 18489, 1, 965, 59, 1, 978, 111, 110, 59, 1, 965, 112, 97, 114, 114, 111, 119, 115, 59, 1, 8648, 4, 3, 99, 105, 116, 18512, 18537, 18542, 4, 2, 111, 114, 18518, 18532, 114, 110, 4, 2, 59, 101, 18526, 18528, 1, 8989, 114, 59, 1, 8989, 111, 112, 59, 1, 8974, 110, 103, 59, 1, 367, 114, 105, 59, 1, 9721, 99, 114, 59, 3, 55349, 56522, 4, 3, 100, 105, 114, 18561, 18566, 18572, 111, 116, 59, 1, 8944, 108, 100, 101, 59, 1, 361, 105, 4, 2, 59, 102, 18579, 18581, 1, 9653, 59, 1, 9652, 4, 2, 97, 109, 18590, 18595, 114, 114, 59, 1, 8648, 108, 5, 252, 1, 59, 18601, 1, 252, 97, 110, 103, 108, 101, 59, 1, 10663, 4, 15, 65, 66, 68, 97, 99, 100, 101, 102, 108, 110, 111, 112, 114, 115, 122, 18643, 18648, 18661, 18667, 18847, 18851, 18857, 18904, 18909, 18915, 18931, 18937, 18943, 18949, 18996, 114, 114, 59, 1, 8661, 97, 114, 4, 2, 59, 118, 18656, 18658, 1, 10984, 59, 1, 10985, 97, 115, 104, 59, 1, 8872, 4, 2, 110, 114, 18673, 18679, 103, 114, 116, 59, 1, 10652, 4, 7, 101, 107, 110, 112, 114, 115, 116, 18695, 18704, 18711, 18720, 18742, 18754, 18810, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 97, 112, 112, 97, 59, 1, 1008, 111, 116, 104, 105, 110, 103, 59, 1, 8709, 4, 3, 104, 105, 114, 18728, 18732, 18735, 105, 59, 1, 981, 59, 1, 982, 111, 112, 116, 111, 59, 1, 8733, 4, 2, 59, 104, 18748, 18750, 1, 8597, 111, 59, 1, 1009, 4, 2, 105, 117, 18760, 18766, 103, 109, 97, 59, 1, 962, 4, 2, 98, 112, 18772, 18791, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18784, 18787, 3, 8842, 65024, 59, 3, 10955, 65024, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18803, 18806, 3, 8843, 65024, 59, 3, 10956, 65024, 4, 2, 104, 114, 18816, 18822, 101, 116, 97, 59, 1, 977, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 18834, 18840, 101, 102, 116, 59, 1, 8882, 105, 103, 104, 116, 59, 1, 8883, 121, 59, 1, 1074, 97, 115, 104, 59, 1, 8866, 4, 3, 101, 108, 114, 18865, 18884, 18890, 4, 3, 59, 98, 101, 18873, 18875, 18880, 1, 8744, 97, 114, 59, 1, 8891, 113, 59, 1, 8794, 108, 105, 112, 59, 1, 8942, 4, 2, 98, 116, 18896, 18901, 97, 114, 59, 1, 124, 59, 1, 124, 114, 59, 3, 55349, 56627, 116, 114, 105, 59, 1, 8882, 115, 117, 4, 2, 98, 112, 18923, 18927, 59, 3, 8834, 8402, 59, 3, 8835, 8402, 112, 102, 59, 3, 55349, 56679, 114, 111, 112, 59, 1, 8733, 116, 114, 105, 59, 1, 8883, 4, 2, 99, 117, 18955, 18960, 114, 59, 3, 55349, 56523, 4, 2, 98, 112, 18966, 18981, 110, 4, 2, 69, 101, 18973, 18977, 59, 3, 10955, 65024, 59, 3, 8842, 65024, 110, 4, 2, 69, 101, 18988, 18992, 59, 3, 10956, 65024, 59, 3, 8843, 65024, 105, 103, 122, 97, 103, 59, 1, 10650, 4, 7, 99, 101, 102, 111, 112, 114, 115, 19020, 19026, 19061, 19066, 19072, 19075, 19089, 105, 114, 99, 59, 1, 373, 4, 2, 100, 105, 19032, 19055, 4, 2, 98, 103, 19038, 19043, 97, 114, 59, 1, 10847, 101, 4, 2, 59, 113, 19050, 19052, 1, 8743, 59, 1, 8793, 101, 114, 112, 59, 1, 8472, 114, 59, 3, 55349, 56628, 112, 102, 59, 3, 55349, 56680, 59, 1, 8472, 4, 2, 59, 101, 19081, 19083, 1, 8768, 97, 116, 104, 59, 1, 8768, 99, 114, 59, 3, 55349, 56524, 4, 14, 99, 100, 102, 104, 105, 108, 109, 110, 111, 114, 115, 117, 118, 119, 19125, 19146, 19152, 19157, 19173, 19176, 19192, 19197, 19202, 19236, 19252, 19269, 19286, 19291, 4, 3, 97, 105, 117, 19133, 19137, 19142, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 116, 114, 105, 59, 1, 9661, 114, 59, 3, 55349, 56629, 4, 2, 65, 97, 19163, 19168, 114, 114, 59, 1, 10234, 114, 114, 59, 1, 10231, 59, 1, 958, 4, 2, 65, 97, 19182, 19187, 114, 114, 59, 1, 10232, 114, 114, 59, 1, 10229, 97, 112, 59, 1, 10236, 105, 115, 59, 1, 8955, 4, 3, 100, 112, 116, 19210, 19215, 19230, 111, 116, 59, 1, 10752, 4, 2, 102, 108, 19221, 19225, 59, 3, 55349, 56681, 117, 115, 59, 1, 10753, 105, 109, 101, 59, 1, 10754, 4, 2, 65, 97, 19242, 19247, 114, 114, 59, 1, 10233, 114, 114, 59, 1, 10230, 4, 2, 99, 113, 19258, 19263, 114, 59, 3, 55349, 56525, 99, 117, 112, 59, 1, 10758, 4, 2, 112, 116, 19275, 19281, 108, 117, 115, 59, 1, 10756, 114, 105, 59, 1, 9651, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 19316, 19335, 19349, 19357, 19362, 19367, 19373, 19379, 99, 4, 2, 117, 121, 19323, 19332, 116, 101, 5, 253, 1, 59, 19330, 1, 253, 59, 1, 1103, 4, 2, 105, 121, 19341, 19346, 114, 99, 59, 1, 375, 59, 1, 1099, 110, 5, 165, 1, 59, 19355, 1, 165, 114, 59, 3, 55349, 56630, 99, 121, 59, 1, 1111, 112, 102, 59, 3, 55349, 56682, 99, 114, 59, 3, 55349, 56526, 4, 2, 99, 109, 19385, 19389, 121, 59, 1, 1102, 108, 5, 255, 1, 59, 19395, 1, 255, 4, 10, 97, 99, 100, 101, 102, 104, 105, 111, 115, 119, 19419, 19426, 19441, 19446, 19462, 19467, 19472, 19480, 19486, 19492, 99, 117, 116, 101, 59, 1, 378, 4, 2, 97, 121, 19432, 19438, 114, 111, 110, 59, 1, 382, 59, 1, 1079, 111, 116, 59, 1, 380, 4, 2, 101, 116, 19452, 19458, 116, 114, 102, 59, 1, 8488, 97, 59, 1, 950, 114, 59, 3, 55349, 56631, 99, 121, 59, 1, 1078, 103, 114, 97, 114, 114, 59, 1, 8669, 112, 102, 59, 3, 55349, 56683, 99, 114, 59, 3, 55349, 56527, 4, 2, 106, 110, 19498, 19501, 59, 1, 8205, 106, 59, 1, 8204]);
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/index.js
var require_tokenizer = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/index.js"(exports2, module2) {
    "use strict";
    var Preprocessor2 = require_preprocessor(), unicode = require_unicode(), neTree = require_named_entity_data(), ERR2 = require_error_codes(), $2 = unicode.CODE_POINTS, $$ = unicode.CODE_POINT_SEQUENCES, C1_CONTROLS_REFERENCE_REPLACEMENTS2 = {
      128: 8364,
      130: 8218,
      131: 402,
      132: 8222,
      133: 8230,
      134: 8224,
      135: 8225,
      136: 710,
      137: 8240,
      138: 352,
      139: 8249,
      140: 338,
      142: 381,
      145: 8216,
      146: 8217,
      147: 8220,
      148: 8221,
      149: 8226,
      150: 8211,
      151: 8212,
      152: 732,
      153: 8482,
      154: 353,
      155: 8250,
      156: 339,
      158: 382,
      159: 376
    }, HAS_DATA_FLAG = 1 << 0, DATA_DUPLET_FLAG = 1 << 1, HAS_BRANCHES_FLAG = 1 << 2, MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG, DATA_STATE = "DATA_STATE", RCDATA_STATE = "RCDATA_STATE", RAWTEXT_STATE = "RAWTEXT_STATE", SCRIPT_DATA_STATE = "SCRIPT_DATA_STATE", PLAINTEXT_STATE = "PLAINTEXT_STATE", TAG_OPEN_STATE = "TAG_OPEN_STATE", END_TAG_OPEN_STATE = "END_TAG_OPEN_STATE", TAG_NAME_STATE = "TAG_NAME_STATE", RCDATA_LESS_THAN_SIGN_STATE = "RCDATA_LESS_THAN_SIGN_STATE", RCDATA_END_TAG_OPEN_STATE = "RCDATA_END_TAG_OPEN_STATE", RCDATA_END_TAG_NAME_STATE = "RCDATA_END_TAG_NAME_STATE", RAWTEXT_LESS_THAN_SIGN_STATE = "RAWTEXT_LESS_THAN_SIGN_STATE", RAWTEXT_END_TAG_OPEN_STATE = "RAWTEXT_END_TAG_OPEN_STATE", RAWTEXT_END_TAG_NAME_STATE = "RAWTEXT_END_TAG_NAME_STATE", SCRIPT_DATA_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_LESS_THAN_SIGN_STATE", SCRIPT_DATA_END_TAG_OPEN_STATE = "SCRIPT_DATA_END_TAG_OPEN_STATE", SCRIPT_DATA_END_TAG_NAME_STATE = "SCRIPT_DATA_END_TAG_NAME_STATE", SCRIPT_DATA_ESCAPE_START_STATE = "SCRIPT_DATA_ESCAPE_START_STATE", SCRIPT_DATA_ESCAPE_START_DASH_STATE = "SCRIPT_DATA_ESCAPE_START_DASH_STATE", SCRIPT_DATA_ESCAPED_STATE = "SCRIPT_DATA_ESCAPED_STATE", SCRIPT_DATA_ESCAPED_DASH_STATE = "SCRIPT_DATA_ESCAPED_DASH_STATE", SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = "SCRIPT_DATA_ESCAPED_DASH_DASH_STATE", SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE", SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE", SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = "SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE", SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = "SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE", SCRIPT_DATA_DOUBLE_ESCAPED_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_STATE", SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE", SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE", SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE", SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = "SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE", BEFORE_ATTRIBUTE_NAME_STATE = "BEFORE_ATTRIBUTE_NAME_STATE", ATTRIBUTE_NAME_STATE = "ATTRIBUTE_NAME_STATE", AFTER_ATTRIBUTE_NAME_STATE = "AFTER_ATTRIBUTE_NAME_STATE", BEFORE_ATTRIBUTE_VALUE_STATE = "BEFORE_ATTRIBUTE_VALUE_STATE", ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = "ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE", ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = "ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE", ATTRIBUTE_VALUE_UNQUOTED_STATE = "ATTRIBUTE_VALUE_UNQUOTED_STATE", AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = "AFTER_ATTRIBUTE_VALUE_QUOTED_STATE", SELF_CLOSING_START_TAG_STATE = "SELF_CLOSING_START_TAG_STATE", BOGUS_COMMENT_STATE = "BOGUS_COMMENT_STATE", MARKUP_DECLARATION_OPEN_STATE = "MARKUP_DECLARATION_OPEN_STATE", COMMENT_START_STATE = "COMMENT_START_STATE", COMMENT_START_DASH_STATE = "COMMENT_START_DASH_STATE", COMMENT_STATE = "COMMENT_STATE", COMMENT_LESS_THAN_SIGN_STATE = "COMMENT_LESS_THAN_SIGN_STATE", COMMENT_LESS_THAN_SIGN_BANG_STATE = "COMMENT_LESS_THAN_SIGN_BANG_STATE", COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = "COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE", COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE", COMMENT_END_DASH_STATE = "COMMENT_END_DASH_STATE", COMMENT_END_STATE = "COMMENT_END_STATE", COMMENT_END_BANG_STATE = "COMMENT_END_BANG_STATE", DOCTYPE_STATE = "DOCTYPE_STATE", BEFORE_DOCTYPE_NAME_STATE = "BEFORE_DOCTYPE_NAME_STATE", DOCTYPE_NAME_STATE = "DOCTYPE_NAME_STATE", AFTER_DOCTYPE_NAME_STATE = "AFTER_DOCTYPE_NAME_STATE", AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = "AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE", BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE", DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE", DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE", AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE", BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE", AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = "AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE", BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE", DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE", DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE", AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE", BOGUS_DOCTYPE_STATE = "BOGUS_DOCTYPE_STATE", CDATA_SECTION_STATE = "CDATA_SECTION_STATE", CDATA_SECTION_BRACKET_STATE = "CDATA_SECTION_BRACKET_STATE", CDATA_SECTION_END_STATE = "CDATA_SECTION_END_STATE", CHARACTER_REFERENCE_STATE = "CHARACTER_REFERENCE_STATE", NAMED_CHARACTER_REFERENCE_STATE = "NAMED_CHARACTER_REFERENCE_STATE", AMBIGUOUS_AMPERSAND_STATE = "AMBIGUOS_AMPERSAND_STATE", NUMERIC_CHARACTER_REFERENCE_STATE = "NUMERIC_CHARACTER_REFERENCE_STATE", HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = "HEXADEMICAL_CHARACTER_REFERENCE_START_STATE", DECIMAL_CHARACTER_REFERENCE_START_STATE = "DECIMAL_CHARACTER_REFERENCE_START_STATE", HEXADEMICAL_CHARACTER_REFERENCE_STATE = "HEXADEMICAL_CHARACTER_REFERENCE_STATE", DECIMAL_CHARACTER_REFERENCE_STATE = "DECIMAL_CHARACTER_REFERENCE_STATE", NUMERIC_CHARACTER_REFERENCE_END_STATE = "NUMERIC_CHARACTER_REFERENCE_END_STATE";
    function isWhitespace2(cp) {
      return cp === $2.SPACE || cp === $2.LINE_FEED || cp === $2.TABULATION || cp === $2.FORM_FEED;
    }
    function isAsciiDigit2(cp) {
      return cp >= $2.DIGIT_0 && cp <= $2.DIGIT_9;
    }
    function isAsciiUpper2(cp) {
      return cp >= $2.LATIN_CAPITAL_A && cp <= $2.LATIN_CAPITAL_Z;
    }
    function isAsciiLower2(cp) {
      return cp >= $2.LATIN_SMALL_A && cp <= $2.LATIN_SMALL_Z;
    }
    function isAsciiLetter2(cp) {
      return isAsciiLower2(cp) || isAsciiUpper2(cp);
    }
    function isAsciiAlphaNumeric2(cp) {
      return isAsciiLetter2(cp) || isAsciiDigit2(cp);
    }
    function isAsciiUpperHexDigit2(cp) {
      return cp >= $2.LATIN_CAPITAL_A && cp <= $2.LATIN_CAPITAL_F;
    }
    function isAsciiLowerHexDigit2(cp) {
      return cp >= $2.LATIN_SMALL_A && cp <= $2.LATIN_SMALL_F;
    }
    function isAsciiHexDigit2(cp) {
      return isAsciiDigit2(cp) || isAsciiUpperHexDigit2(cp) || isAsciiLowerHexDigit2(cp);
    }
    function toAsciiLowerCodePoint(cp) {
      return cp + 32;
    }
    function toChar(cp) {
      return cp <= 65535 ? String.fromCharCode(cp) : (cp -= 65536, String.fromCharCode(cp >>> 10 & 1023 | 55296) + String.fromCharCode(56320 | cp & 1023));
    }
    function toAsciiLowerChar(cp) {
      return String.fromCharCode(toAsciiLowerCodePoint(cp));
    }
    function findNamedEntityTreeBranch(nodeIx, cp) {
      let branchCount = neTree[++nodeIx], lo = ++nodeIx, hi = lo + branchCount - 1;
      for (; lo <= hi; ) {
        let mid = lo + hi >>> 1, midCp = neTree[mid];
        if (midCp < cp)
          lo = mid + 1;
        else if (midCp > cp)
          hi = mid - 1;
        else
          return neTree[mid + branchCount];
      }
      return -1;
    }
    var Tokenizer2 = class {
      constructor() {
        this.preprocessor = new Preprocessor2(), this.tokenQueue = [], this.allowCDATA = !1, this.state = DATA_STATE, this.returnState = "", this.charRefCode = -1, this.tempBuff = [], this.lastStartTagName = "", this.consumedAfterSnapshot = -1, this.active = !1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = null;
      }
      _err() {
      }
      _errOnNextCodePoint(err) {
        this._consume(), this._err(err), this._unconsume();
      }
      getNextToken() {
        for (; !this.tokenQueue.length && this.active; ) {
          this.consumedAfterSnapshot = 0;
          let cp = this._consume();
          this._ensureHibernation() || this[this.state](cp);
        }
        return this.tokenQueue.shift();
      }
      write(chunk, isLastChunk) {
        this.active = !0, this.preprocessor.write(chunk, isLastChunk);
      }
      insertHtmlAtCurrentPos(chunk) {
        this.active = !0, this.preprocessor.insertHtmlAtCurrentPos(chunk);
      }
      _ensureHibernation() {
        if (this.preprocessor.endOfChunkHit) {
          for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)
            this.preprocessor.retreat();
          return this.active = !1, this.tokenQueue.push({ type: Tokenizer2.HIBERNATION_TOKEN }), !0;
        }
        return !1;
      }
      _consume() {
        return this.consumedAfterSnapshot++, this.preprocessor.advance();
      }
      _unconsume() {
        this.consumedAfterSnapshot--, this.preprocessor.retreat();
      }
      _reconsumeInState(state) {
        this.state = state, this._unconsume();
      }
      _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {
        let consumedCount = 0, isMatch = !0, patternLength = pattern.length, patternPos = 0, cp = startCp, patternCp;
        for (; patternPos < patternLength; patternPos++) {
          if (patternPos > 0 && (cp = this._consume(), consumedCount++), cp === $2.EOF) {
            isMatch = !1;
            break;
          }
          if (patternCp = pattern[patternPos], cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {
            isMatch = !1;
            break;
          }
        }
        if (!isMatch)
          for (; consumedCount--; )
            this._unconsume();
        return isMatch;
      }
      _isTempBufferEqualToScriptString() {
        if (this.tempBuff.length !== $$.SCRIPT_STRING.length)
          return !1;
        for (let i = 0; i < this.tempBuff.length; i++)
          if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])
            return !1;
        return !0;
      }
      _createStartTagToken() {
        this.currentToken = {
          type: Tokenizer2.START_TAG_TOKEN,
          tagName: "",
          selfClosing: !1,
          ackSelfClosing: !1,
          attrs: []
        };
      }
      _createEndTagToken() {
        this.currentToken = {
          type: Tokenizer2.END_TAG_TOKEN,
          tagName: "",
          selfClosing: !1,
          attrs: []
        };
      }
      _createCommentToken() {
        this.currentToken = {
          type: Tokenizer2.COMMENT_TOKEN,
          data: ""
        };
      }
      _createDoctypeToken(initialName) {
        this.currentToken = {
          type: Tokenizer2.DOCTYPE_TOKEN,
          name: initialName,
          forceQuirks: !1,
          publicId: null,
          systemId: null
        };
      }
      _createCharacterToken(type, ch) {
        this.currentCharacterToken = {
          type,
          chars: ch
        };
      }
      _createEOFToken() {
        this.currentToken = { type: Tokenizer2.EOF_TOKEN };
      }
      _createAttr(attrNameFirstCh) {
        this.currentAttr = {
          name: attrNameFirstCh,
          value: ""
        };
      }
      _leaveAttrName(toState) {
        Tokenizer2.getTokenAttr(this.currentToken, this.currentAttr.name) === null ? this.currentToken.attrs.push(this.currentAttr) : this._err(ERR2.duplicateAttribute), this.state = toState;
      }
      _leaveAttrValue(toState) {
        this.state = toState;
      }
      _emitCurrentToken() {
        this._emitCurrentCharacterToken();
        let ct = this.currentToken;
        this.currentToken = null, ct.type === Tokenizer2.START_TAG_TOKEN ? this.lastStartTagName = ct.tagName : ct.type === Tokenizer2.END_TAG_TOKEN && (ct.attrs.length > 0 && this._err(ERR2.endTagWithAttributes), ct.selfClosing && this._err(ERR2.endTagWithTrailingSolidus)), this.tokenQueue.push(ct);
      }
      _emitCurrentCharacterToken() {
        this.currentCharacterToken && (this.tokenQueue.push(this.currentCharacterToken), this.currentCharacterToken = null);
      }
      _emitEOFToken() {
        this._createEOFToken(), this._emitCurrentToken();
      }
      _appendCharToCurrentCharacterToken(type, ch) {
        this.currentCharacterToken && this.currentCharacterToken.type !== type && this._emitCurrentCharacterToken(), this.currentCharacterToken ? this.currentCharacterToken.chars += ch : this._createCharacterToken(type, ch);
      }
      _emitCodePoint(cp) {
        let type = Tokenizer2.CHARACTER_TOKEN;
        isWhitespace2(cp) ? type = Tokenizer2.WHITESPACE_CHARACTER_TOKEN : cp === $2.NULL && (type = Tokenizer2.NULL_CHARACTER_TOKEN), this._appendCharToCurrentCharacterToken(type, toChar(cp));
      }
      _emitSeveralCodePoints(codePoints) {
        for (let i = 0; i < codePoints.length; i++)
          this._emitCodePoint(codePoints[i]);
      }
      _emitChars(ch) {
        this._appendCharToCurrentCharacterToken(Tokenizer2.CHARACTER_TOKEN, ch);
      }
      _matchNamedCharacterReference(startCp) {
        let result = null, excess = 1, i = findNamedEntityTreeBranch(0, startCp);
        for (this.tempBuff.push(startCp); i > -1; ) {
          let current = neTree[i], inNode = current < MAX_BRANCH_MARKER_VALUE;
          inNode && current & HAS_DATA_FLAG && (result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]], excess = 0);
          let cp = this._consume();
          if (this.tempBuff.push(cp), excess++, cp === $2.EOF)
            break;
          inNode ? i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1 : i = cp === current ? ++i : -1;
        }
        for (; excess--; )
          this.tempBuff.pop(), this._unconsume();
        return result;
      }
      _isCharacterReferenceInAttribute() {
        return this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE || this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE || this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE;
      }
      _isCharacterReferenceAttributeQuirk(withSemicolon) {
        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {
          let nextCp = this._consume();
          return this._unconsume(), nextCp === $2.EQUALS_SIGN || isAsciiAlphaNumeric2(nextCp);
        }
        return !1;
      }
      _flushCodePointsConsumedAsCharacterReference() {
        if (this._isCharacterReferenceInAttribute())
          for (let i = 0; i < this.tempBuff.length; i++)
            this.currentAttr.value += toChar(this.tempBuff[i]);
        else
          this._emitSeveralCodePoints(this.tempBuff);
        this.tempBuff = [];
      }
      [DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.LESS_THAN_SIGN ? this.state = TAG_OPEN_STATE : cp === $2.AMPERSAND ? (this.returnState = DATA_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitCodePoint(cp)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [RCDATA_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.AMPERSAND ? (this.returnState = RCDATA_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.LESS_THAN_SIGN ? this.state = RCDATA_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [RAWTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.LESS_THAN_SIGN ? this.state = RAWTEXT_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [SCRIPT_DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.LESS_THAN_SIGN ? this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [PLAINTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [TAG_OPEN_STATE](cp) {
        cp === $2.EXCLAMATION_MARK ? this.state = MARKUP_DECLARATION_OPEN_STATE : cp === $2.SOLIDUS ? this.state = END_TAG_OPEN_STATE : isAsciiLetter2(cp) ? (this._createStartTagToken(), this._reconsumeInState(TAG_NAME_STATE)) : cp === $2.QUESTION_MARK ? (this._err(ERR2.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(), this._reconsumeInState(BOGUS_COMMENT_STATE)) : cp === $2.EOF ? (this._err(ERR2.eofBeforeTagName), this._emitChars("<"), this._emitEOFToken()) : (this._err(ERR2.invalidFirstCharacterOfTagName), this._emitChars("<"), this._reconsumeInState(DATA_STATE));
      }
      [END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(TAG_NAME_STATE)) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingEndTagName), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofBeforeTagName), this._emitChars("</"), this._emitEOFToken()) : (this._err(ERR2.invalidFirstCharacterOfTagName), this._createCommentToken(), this._reconsumeInState(BOGUS_COMMENT_STATE));
      }
      [TAG_NAME_STATE](cp) {
        isWhitespace2(cp) ? this.state = BEFORE_ATTRIBUTE_NAME_STATE : cp === $2.SOLIDUS ? this.state = SELF_CLOSING_START_TAG_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : isAsciiUpper2(cp) ? this.currentToken.tagName += toAsciiLowerChar(cp) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : this.currentToken.tagName += toChar(cp);
      }
      [RCDATA_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = RCDATA_END_TAG_OPEN_STATE) : (this._emitChars("<"), this._reconsumeInState(RCDATA_STATE));
      }
      [RCDATA_END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(RCDATA_END_TAG_NAME_STATE)) : (this._emitChars("</"), this._reconsumeInState(RCDATA_STATE));
      }
      [RCDATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper2(cp))
          this.currentToken.tagName += toAsciiLowerChar(cp), this.tempBuff.push(cp);
        else if (isAsciiLower2(cp))
          this.currentToken.tagName += toChar(cp), this.tempBuff.push(cp);
        else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace2(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $2.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $2.GREATER_THAN_SIGN) {
              this.state = DATA_STATE, this._emitCurrentToken();
              return;
            }
          }
          this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(RCDATA_STATE);
        }
      }
      [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = RAWTEXT_END_TAG_OPEN_STATE) : (this._emitChars("<"), this._reconsumeInState(RAWTEXT_STATE));
      }
      [RAWTEXT_END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE)) : (this._emitChars("</"), this._reconsumeInState(RAWTEXT_STATE));
      }
      [RAWTEXT_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper2(cp))
          this.currentToken.tagName += toAsciiLowerChar(cp), this.tempBuff.push(cp);
        else if (isAsciiLower2(cp))
          this.currentToken.tagName += toChar(cp), this.tempBuff.push(cp);
        else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace2(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $2.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $2.GREATER_THAN_SIGN) {
              this._emitCurrentToken(), this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(RAWTEXT_STATE);
        }
      }
      [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = SCRIPT_DATA_END_TAG_OPEN_STATE) : cp === $2.EXCLAMATION_MARK ? (this.state = SCRIPT_DATA_ESCAPE_START_STATE, this._emitChars("<!")) : (this._emitChars("<"), this._reconsumeInState(SCRIPT_DATA_STATE));
      }
      [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE)) : (this._emitChars("</"), this._reconsumeInState(SCRIPT_DATA_STATE));
      }
      [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper2(cp))
          this.currentToken.tagName += toAsciiLowerChar(cp), this.tempBuff.push(cp);
        else if (isAsciiLower2(cp))
          this.currentToken.tagName += toChar(cp), this.tempBuff.push(cp);
        else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace2(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            } else if (cp === $2.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            } else if (cp === $2.GREATER_THAN_SIGN) {
              this._emitCurrentToken(), this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(SCRIPT_DATA_STATE);
        }
      }
      [SCRIPT_DATA_ESCAPE_START_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE, this._emitChars("-")) : this._reconsumeInState(SCRIPT_DATA_STATE);
      }
      [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE, this._emitChars("-")) : this._reconsumeInState(SCRIPT_DATA_STATE);
      }
      [SCRIPT_DATA_ESCAPED_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_ESCAPED_DASH_STATE, this._emitChars("-")) : cp === $2.LESS_THAN_SIGN ? this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : this._emitCodePoint(cp);
      }
      [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE, this._emitChars("-")) : cp === $2.LESS_THAN_SIGN ? this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.state = SCRIPT_DATA_ESCAPED_STATE, this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = SCRIPT_DATA_ESCAPED_STATE, this._emitCodePoint(cp));
      }
      [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this._emitChars("-") : cp === $2.LESS_THAN_SIGN ? this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = SCRIPT_DATA_STATE, this._emitChars(">")) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.state = SCRIPT_DATA_ESCAPED_STATE, this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = SCRIPT_DATA_ESCAPED_STATE, this._emitCodePoint(cp));
      }
      [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE) : isAsciiLetter2(cp) ? (this.tempBuff = [], this._emitChars("<"), this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE)) : (this._emitChars("<"), this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE));
      }
      [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE)) : (this._emitChars("</"), this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE));
      }
      [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper2(cp))
          this.currentToken.tagName += toAsciiLowerChar(cp), this.tempBuff.push(cp);
        else if (isAsciiLower2(cp))
          this.currentToken.tagName += toChar(cp), this.tempBuff.push(cp);
        else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace2(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $2.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $2.GREATER_THAN_SIGN) {
              this._emitCurrentToken(), this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
      }
      [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {
        isWhitespace2(cp) || cp === $2.SOLIDUS || cp === $2.GREATER_THAN_SIGN ? (this.state = this._isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE, this._emitCodePoint(cp)) : isAsciiUpper2(cp) ? (this.tempBuff.push(toAsciiLowerCodePoint(cp)), this._emitCodePoint(cp)) : isAsciiLower2(cp) ? (this.tempBuff.push(cp), this._emitCodePoint(cp)) : this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE, this._emitChars("-")) : cp === $2.LESS_THAN_SIGN ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE, this._emitChars("<")) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : this._emitCodePoint(cp);
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE, this._emitChars("-")) : cp === $2.LESS_THAN_SIGN ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE, this._emitChars("<")) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitCodePoint(cp));
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this._emitChars("-") : cp === $2.LESS_THAN_SIGN ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE, this._emitChars("<")) : cp === $2.GREATER_THAN_SIGN ? (this.state = SCRIPT_DATA_STATE, this._emitChars(">")) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitCodePoint(cp));
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE, this._emitChars("/")) : this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
      }
      [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {
        isWhitespace2(cp) || cp === $2.SOLIDUS || cp === $2.GREATER_THAN_SIGN ? (this.state = this._isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitCodePoint(cp)) : isAsciiUpper2(cp) ? (this.tempBuff.push(toAsciiLowerCodePoint(cp)), this._emitCodePoint(cp)) : isAsciiLower2(cp) ? (this.tempBuff.push(cp), this._emitCodePoint(cp)) : this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
      }
      [BEFORE_ATTRIBUTE_NAME_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.SOLIDUS || cp === $2.GREATER_THAN_SIGN || cp === $2.EOF ? this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE) : cp === $2.EQUALS_SIGN ? (this._err(ERR2.unexpectedEqualsSignBeforeAttributeName), this._createAttr("="), this.state = ATTRIBUTE_NAME_STATE) : (this._createAttr(""), this._reconsumeInState(ATTRIBUTE_NAME_STATE)));
      }
      [ATTRIBUTE_NAME_STATE](cp) {
        isWhitespace2(cp) || cp === $2.SOLIDUS || cp === $2.GREATER_THAN_SIGN || cp === $2.EOF ? (this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE), this._unconsume()) : cp === $2.EQUALS_SIGN ? this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE) : isAsciiUpper2(cp) ? this.currentAttr.name += toAsciiLowerChar(cp) : cp === $2.QUOTATION_MARK || cp === $2.APOSTROPHE || cp === $2.LESS_THAN_SIGN ? (this._err(ERR2.unexpectedCharacterInAttributeName), this.currentAttr.name += toChar(cp)) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentAttr.name += unicode.REPLACEMENT_CHARACTER) : this.currentAttr.name += toChar(cp);
      }
      [AFTER_ATTRIBUTE_NAME_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.SOLIDUS ? this.state = SELF_CLOSING_START_TAG_STATE : cp === $2.EQUALS_SIGN ? this.state = BEFORE_ATTRIBUTE_VALUE_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : (this._createAttr(""), this._reconsumeInState(ATTRIBUTE_NAME_STATE)));
      }
      [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.QUOTATION_MARK ? this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE : cp === $2.APOSTROPHE ? this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingAttributeValue), this.state = DATA_STATE, this._emitCurrentToken()) : this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE));
      }
      [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {
        cp === $2.QUOTATION_MARK ? this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE : cp === $2.AMPERSAND ? (this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentAttr.value += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : this.currentAttr.value += toChar(cp);
      }
      [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {
        cp === $2.APOSTROPHE ? this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE : cp === $2.AMPERSAND ? (this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentAttr.value += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : this.currentAttr.value += toChar(cp);
      }
      [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {
        isWhitespace2(cp) ? this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE) : cp === $2.AMPERSAND ? (this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._leaveAttrValue(DATA_STATE), this._emitCurrentToken()) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentAttr.value += unicode.REPLACEMENT_CHARACTER) : cp === $2.QUOTATION_MARK || cp === $2.APOSTROPHE || cp === $2.LESS_THAN_SIGN || cp === $2.EQUALS_SIGN || cp === $2.GRAVE_ACCENT ? (this._err(ERR2.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += toChar(cp)) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : this.currentAttr.value += toChar(cp);
      }
      [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {
        isWhitespace2(cp) ? this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE) : cp === $2.SOLIDUS ? this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._leaveAttrValue(DATA_STATE), this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : (this._err(ERR2.missingWhitespaceBetweenAttributes), this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE));
      }
      [SELF_CLOSING_START_TAG_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? (this.currentToken.selfClosing = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : (this._err(ERR2.unexpectedSolidusInTag), this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE));
      }
      [BOGUS_COMMENT_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._emitCurrentToken(), this._emitEOFToken()) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.data += unicode.REPLACEMENT_CHARACTER) : this.currentToken.data += toChar(cp);
      }
      [MARKUP_DECLARATION_OPEN_STATE](cp) {
        this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, !0) ? (this._createCommentToken(), this.state = COMMENT_START_STATE) : this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, !1) ? this.state = DOCTYPE_STATE : this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, !0) ? this.allowCDATA ? this.state = CDATA_SECTION_STATE : (this._err(ERR2.cdataInHtmlContent), this._createCommentToken(), this.currentToken.data = "[CDATA[", this.state = BOGUS_COMMENT_STATE) : this._ensureHibernation() || (this._err(ERR2.incorrectlyOpenedComment), this._createCommentToken(), this._reconsumeInState(BOGUS_COMMENT_STATE));
      }
      [COMMENT_START_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_START_DASH_STATE : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptClosingOfEmptyComment), this.state = DATA_STATE, this._emitCurrentToken()) : this._reconsumeInState(COMMENT_STATE);
      }
      [COMMENT_START_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_END_STATE : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptClosingOfEmptyComment), this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "-", this._reconsumeInState(COMMENT_STATE));
      }
      [COMMENT_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_END_DASH_STATE : cp === $2.LESS_THAN_SIGN ? (this.currentToken.data += "<", this.state = COMMENT_LESS_THAN_SIGN_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.data += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.data += toChar(cp);
      }
      [COMMENT_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.EXCLAMATION_MARK ? (this.currentToken.data += "!", this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE) : cp === $2.LESS_THAN_SIGN ? this.currentToken.data += "!" : this._reconsumeInState(COMMENT_STATE);
      }
      [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE : this._reconsumeInState(COMMENT_STATE);
      }
      [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE : this._reconsumeInState(COMMENT_END_DASH_STATE);
      }
      [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {
        cp !== $2.GREATER_THAN_SIGN && cp !== $2.EOF && this._err(ERR2.nestedComment), this._reconsumeInState(COMMENT_END_STATE);
      }
      [COMMENT_END_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_END_STATE : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "-", this._reconsumeInState(COMMENT_STATE));
      }
      [COMMENT_END_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EXCLAMATION_MARK ? this.state = COMMENT_END_BANG_STATE : cp === $2.HYPHEN_MINUS ? this.currentToken.data += "-" : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "--", this._reconsumeInState(COMMENT_STATE));
      }
      [COMMENT_END_BANG_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.currentToken.data += "--!", this.state = COMMENT_END_DASH_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.incorrectlyClosedComment), this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "--!", this._reconsumeInState(COMMENT_STATE));
      }
      [DOCTYPE_STATE](cp) {
        isWhitespace2(cp) ? this.state = BEFORE_DOCTYPE_NAME_STATE : cp === $2.GREATER_THAN_SIGN ? this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingWhitespaceBeforeDoctypeName), this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE));
      }
      [BEFORE_DOCTYPE_NAME_STATE](cp) {
        isWhitespace2(cp) || (isAsciiUpper2(cp) ? (this._createDoctypeToken(toAsciiLowerChar(cp)), this.state = DOCTYPE_NAME_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER), this.state = DOCTYPE_NAME_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypeName), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._createDoctypeToken(toChar(cp)), this.state = DOCTYPE_NAME_STATE));
      }
      [DOCTYPE_NAME_STATE](cp) {
        isWhitespace2(cp) ? this.state = AFTER_DOCTYPE_NAME_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : isAsciiUpper2(cp) ? this.currentToken.name += toAsciiLowerChar(cp) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.name += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.name += toChar(cp);
      }
      [AFTER_DOCTYPE_NAME_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, !1) ? this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE : this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, !1) ? this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE : this._ensureHibernation() || (this._err(ERR2.invalidCharacterSequenceAfterDoctypeName), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {
        isWhitespace2(cp) ? this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE : cp === $2.QUOTATION_MARK ? (this._err(ERR2.missingWhitespaceAfterDoctypePublicKeyword), this.currentToken.publicId = "", this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this._err(ERR2.missingWhitespaceAfterDoctypePublicKeyword), this.currentToken.publicId = "", this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE));
      }
      [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.QUOTATION_MARK ? (this.currentToken.publicId = "", this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this.currentToken.publicId = "", this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        cp === $2.QUOTATION_MARK ? this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.publicId += toChar(cp);
      }
      [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        cp === $2.APOSTROPHE ? this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.publicId += toChar(cp);
      }
      [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        isWhitespace2(cp) ? this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.QUOTATION_MARK ? (this._err(ERR2.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this._err(ERR2.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE));
      }
      [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.QUOTATION_MARK ? (this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {
        isWhitespace2(cp) ? this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE : cp === $2.QUOTATION_MARK ? (this._err(ERR2.missingWhitespaceAfterDoctypeSystemKeyword), this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this._err(ERR2.missingWhitespaceAfterDoctypeSystemKeyword), this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE));
      }
      [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.QUOTATION_MARK ? (this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        cp === $2.QUOTATION_MARK ? this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.systemId += toChar(cp);
      }
      [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        cp === $2.APOSTROPHE ? this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.systemId += toChar(cp);
      }
      [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.unexpectedCharacterAfterDoctypeSystemIdentifier), this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [BOGUS_DOCTYPE_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.NULL ? this._err(ERR2.unexpectedNullCharacter) : cp === $2.EOF && (this._emitCurrentToken(), this._emitEOFToken());
      }
      [CDATA_SECTION_STATE](cp) {
        cp === $2.RIGHT_SQUARE_BRACKET ? this.state = CDATA_SECTION_BRACKET_STATE : cp === $2.EOF ? (this._err(ERR2.eofInCdata), this._emitEOFToken()) : this._emitCodePoint(cp);
      }
      [CDATA_SECTION_BRACKET_STATE](cp) {
        cp === $2.RIGHT_SQUARE_BRACKET ? this.state = CDATA_SECTION_END_STATE : (this._emitChars("]"), this._reconsumeInState(CDATA_SECTION_STATE));
      }
      [CDATA_SECTION_END_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? this.state = DATA_STATE : cp === $2.RIGHT_SQUARE_BRACKET ? this._emitChars("]") : (this._emitChars("]]"), this._reconsumeInState(CDATA_SECTION_STATE));
      }
      [CHARACTER_REFERENCE_STATE](cp) {
        this.tempBuff = [$2.AMPERSAND], cp === $2.NUMBER_SIGN ? (this.tempBuff.push(cp), this.state = NUMERIC_CHARACTER_REFERENCE_STATE) : isAsciiAlphaNumeric2(cp) ? this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE) : (this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
      }
      [NAMED_CHARACTER_REFERENCE_STATE](cp) {
        let matchResult = this._matchNamedCharacterReference(cp);
        if (this._ensureHibernation())
          this.tempBuff = [$2.AMPERSAND];
        else if (matchResult) {
          let withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $2.SEMICOLON;
          this._isCharacterReferenceAttributeQuirk(withSemicolon) || (withSemicolon || this._errOnNextCodePoint(ERR2.missingSemicolonAfterCharacterReference), this.tempBuff = matchResult), this._flushCodePointsConsumedAsCharacterReference(), this.state = this.returnState;
        } else
          this._flushCodePointsConsumedAsCharacterReference(), this.state = AMBIGUOUS_AMPERSAND_STATE;
      }
      [AMBIGUOUS_AMPERSAND_STATE](cp) {
        isAsciiAlphaNumeric2(cp) ? this._isCharacterReferenceInAttribute() ? this.currentAttr.value += toChar(cp) : this._emitCodePoint(cp) : (cp === $2.SEMICOLON && this._err(ERR2.unknownNamedCharacterReference), this._reconsumeInState(this.returnState));
      }
      [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {
        this.charRefCode = 0, cp === $2.LATIN_SMALL_X || cp === $2.LATIN_CAPITAL_X ? (this.tempBuff.push(cp), this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE) : this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);
      }
      [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {
        isAsciiHexDigit2(cp) ? this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE) : (this._err(ERR2.absenceOfDigitsInNumericCharacterReference), this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
      }
      [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {
        isAsciiDigit2(cp) ? this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE) : (this._err(ERR2.absenceOfDigitsInNumericCharacterReference), this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
      }
      [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {
        isAsciiUpperHexDigit2(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 55 : isAsciiLowerHexDigit2(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 87 : isAsciiDigit2(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 48 : cp === $2.SEMICOLON ? this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE : (this._err(ERR2.missingSemicolonAfterCharacterReference), this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE));
      }
      [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {
        isAsciiDigit2(cp) ? this.charRefCode = this.charRefCode * 10 + cp - 48 : cp === $2.SEMICOLON ? this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE : (this._err(ERR2.missingSemicolonAfterCharacterReference), this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE));
      }
      [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {
        if (this.charRefCode === $2.NULL)
          this._err(ERR2.nullCharacterReference), this.charRefCode = $2.REPLACEMENT_CHARACTER;
        else if (this.charRefCode > 1114111)
          this._err(ERR2.characterReferenceOutsideUnicodeRange), this.charRefCode = $2.REPLACEMENT_CHARACTER;
        else if (unicode.isSurrogate(this.charRefCode))
          this._err(ERR2.surrogateCharacterReference), this.charRefCode = $2.REPLACEMENT_CHARACTER;
        else if (unicode.isUndefinedCodePoint(this.charRefCode))
          this._err(ERR2.noncharacterCharacterReference);
        else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $2.CARRIAGE_RETURN) {
          this._err(ERR2.controlCharacterReference);
          let replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS2[this.charRefCode];
          replacement && (this.charRefCode = replacement);
        }
        this.tempBuff = [this.charRefCode], this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState);
      }
    };
    Tokenizer2.CHARACTER_TOKEN = "CHARACTER_TOKEN";
    Tokenizer2.NULL_CHARACTER_TOKEN = "NULL_CHARACTER_TOKEN";
    Tokenizer2.WHITESPACE_CHARACTER_TOKEN = "WHITESPACE_CHARACTER_TOKEN";
    Tokenizer2.START_TAG_TOKEN = "START_TAG_TOKEN";
    Tokenizer2.END_TAG_TOKEN = "END_TAG_TOKEN";
    Tokenizer2.COMMENT_TOKEN = "COMMENT_TOKEN";
    Tokenizer2.DOCTYPE_TOKEN = "DOCTYPE_TOKEN";
    Tokenizer2.EOF_TOKEN = "EOF_TOKEN";
    Tokenizer2.HIBERNATION_TOKEN = "HIBERNATION_TOKEN";
    Tokenizer2.MODE = {
      DATA: DATA_STATE,
      RCDATA: RCDATA_STATE,
      RAWTEXT: RAWTEXT_STATE,
      SCRIPT_DATA: SCRIPT_DATA_STATE,
      PLAINTEXT: PLAINTEXT_STATE
    };
    Tokenizer2.getTokenAttr = function(token, attrName) {
      for (let i = token.attrs.length - 1; i >= 0; i--)
        if (token.attrs[i].name === attrName)
          return token.attrs[i].value;
      return null;
    };
    module2.exports = Tokenizer2;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/common/html.js
var require_html = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/common/html.js"(exports2) {
    "use strict";
    var NS2 = exports2.NAMESPACES = {
      HTML: "http://www.w3.org/1999/xhtml",
      MATHML: "http://www.w3.org/1998/Math/MathML",
      SVG: "http://www.w3.org/2000/svg",
      XLINK: "http://www.w3.org/1999/xlink",
      XML: "http://www.w3.org/XML/1998/namespace",
      XMLNS: "http://www.w3.org/2000/xmlns/"
    };
    exports2.ATTRS = {
      TYPE: "type",
      ACTION: "action",
      ENCODING: "encoding",
      PROMPT: "prompt",
      NAME: "name",
      COLOR: "color",
      FACE: "face",
      SIZE: "size"
    };
    exports2.DOCUMENT_MODE = {
      NO_QUIRKS: "no-quirks",
      QUIRKS: "quirks",
      LIMITED_QUIRKS: "limited-quirks"
    };
    var $2 = exports2.TAG_NAMES = {
      A: "a",
      ADDRESS: "address",
      ANNOTATION_XML: "annotation-xml",
      APPLET: "applet",
      AREA: "area",
      ARTICLE: "article",
      ASIDE: "aside",
      B: "b",
      BASE: "base",
      BASEFONT: "basefont",
      BGSOUND: "bgsound",
      BIG: "big",
      BLOCKQUOTE: "blockquote",
      BODY: "body",
      BR: "br",
      BUTTON: "button",
      CAPTION: "caption",
      CENTER: "center",
      CODE: "code",
      COL: "col",
      COLGROUP: "colgroup",
      DD: "dd",
      DESC: "desc",
      DETAILS: "details",
      DIALOG: "dialog",
      DIR: "dir",
      DIV: "div",
      DL: "dl",
      DT: "dt",
      EM: "em",
      EMBED: "embed",
      FIELDSET: "fieldset",
      FIGCAPTION: "figcaption",
      FIGURE: "figure",
      FONT: "font",
      FOOTER: "footer",
      FOREIGN_OBJECT: "foreignObject",
      FORM: "form",
      FRAME: "frame",
      FRAMESET: "frameset",
      H1: "h1",
      H2: "h2",
      H3: "h3",
      H4: "h4",
      H5: "h5",
      H6: "h6",
      HEAD: "head",
      HEADER: "header",
      HGROUP: "hgroup",
      HR: "hr",
      HTML: "html",
      I: "i",
      IMG: "img",
      IMAGE: "image",
      INPUT: "input",
      IFRAME: "iframe",
      KEYGEN: "keygen",
      LABEL: "label",
      LI: "li",
      LINK: "link",
      LISTING: "listing",
      MAIN: "main",
      MALIGNMARK: "malignmark",
      MARQUEE: "marquee",
      MATH: "math",
      MENU: "menu",
      META: "meta",
      MGLYPH: "mglyph",
      MI: "mi",
      MO: "mo",
      MN: "mn",
      MS: "ms",
      MTEXT: "mtext",
      NAV: "nav",
      NOBR: "nobr",
      NOFRAMES: "noframes",
      NOEMBED: "noembed",
      NOSCRIPT: "noscript",
      OBJECT: "object",
      OL: "ol",
      OPTGROUP: "optgroup",
      OPTION: "option",
      P: "p",
      PARAM: "param",
      PLAINTEXT: "plaintext",
      PRE: "pre",
      RB: "rb",
      RP: "rp",
      RT: "rt",
      RTC: "rtc",
      RUBY: "ruby",
      S: "s",
      SCRIPT: "script",
      SECTION: "section",
      SELECT: "select",
      SOURCE: "source",
      SMALL: "small",
      SPAN: "span",
      STRIKE: "strike",
      STRONG: "strong",
      STYLE: "style",
      SUB: "sub",
      SUMMARY: "summary",
      SUP: "sup",
      TABLE: "table",
      TBODY: "tbody",
      TEMPLATE: "template",
      TEXTAREA: "textarea",
      TFOOT: "tfoot",
      TD: "td",
      TH: "th",
      THEAD: "thead",
      TITLE: "title",
      TR: "tr",
      TRACK: "track",
      TT: "tt",
      U: "u",
      UL: "ul",
      SVG: "svg",
      VAR: "var",
      WBR: "wbr",
      XMP: "xmp"
    };
    exports2.SPECIAL_ELEMENTS = {
      [NS2.HTML]: {
        [$2.ADDRESS]: !0,
        [$2.APPLET]: !0,
        [$2.AREA]: !0,
        [$2.ARTICLE]: !0,
        [$2.ASIDE]: !0,
        [$2.BASE]: !0,
        [$2.BASEFONT]: !0,
        [$2.BGSOUND]: !0,
        [$2.BLOCKQUOTE]: !0,
        [$2.BODY]: !0,
        [$2.BR]: !0,
        [$2.BUTTON]: !0,
        [$2.CAPTION]: !0,
        [$2.CENTER]: !0,
        [$2.COL]: !0,
        [$2.COLGROUP]: !0,
        [$2.DD]: !0,
        [$2.DETAILS]: !0,
        [$2.DIR]: !0,
        [$2.DIV]: !0,
        [$2.DL]: !0,
        [$2.DT]: !0,
        [$2.EMBED]: !0,
        [$2.FIELDSET]: !0,
        [$2.FIGCAPTION]: !0,
        [$2.FIGURE]: !0,
        [$2.FOOTER]: !0,
        [$2.FORM]: !0,
        [$2.FRAME]: !0,
        [$2.FRAMESET]: !0,
        [$2.H1]: !0,
        [$2.H2]: !0,
        [$2.H3]: !0,
        [$2.H4]: !0,
        [$2.H5]: !0,
        [$2.H6]: !0,
        [$2.HEAD]: !0,
        [$2.HEADER]: !0,
        [$2.HGROUP]: !0,
        [$2.HR]: !0,
        [$2.HTML]: !0,
        [$2.IFRAME]: !0,
        [$2.IMG]: !0,
        [$2.INPUT]: !0,
        [$2.LI]: !0,
        [$2.LINK]: !0,
        [$2.LISTING]: !0,
        [$2.MAIN]: !0,
        [$2.MARQUEE]: !0,
        [$2.MENU]: !0,
        [$2.META]: !0,
        [$2.NAV]: !0,
        [$2.NOEMBED]: !0,
        [$2.NOFRAMES]: !0,
        [$2.NOSCRIPT]: !0,
        [$2.OBJECT]: !0,
        [$2.OL]: !0,
        [$2.P]: !0,
        [$2.PARAM]: !0,
        [$2.PLAINTEXT]: !0,
        [$2.PRE]: !0,
        [$2.SCRIPT]: !0,
        [$2.SECTION]: !0,
        [$2.SELECT]: !0,
        [$2.SOURCE]: !0,
        [$2.STYLE]: !0,
        [$2.SUMMARY]: !0,
        [$2.TABLE]: !0,
        [$2.TBODY]: !0,
        [$2.TD]: !0,
        [$2.TEMPLATE]: !0,
        [$2.TEXTAREA]: !0,
        [$2.TFOOT]: !0,
        [$2.TH]: !0,
        [$2.THEAD]: !0,
        [$2.TITLE]: !0,
        [$2.TR]: !0,
        [$2.TRACK]: !0,
        [$2.UL]: !0,
        [$2.WBR]: !0,
        [$2.XMP]: !0
      },
      [NS2.MATHML]: {
        [$2.MI]: !0,
        [$2.MO]: !0,
        [$2.MN]: !0,
        [$2.MS]: !0,
        [$2.MTEXT]: !0,
        [$2.ANNOTATION_XML]: !0
      },
      [NS2.SVG]: {
        [$2.TITLE]: !0,
        [$2.FOREIGN_OBJECT]: !0,
        [$2.DESC]: !0
      }
    };
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/parser/open-element-stack.js
var require_open_element_stack = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/parser/open-element-stack.js"(exports2, module2) {
    "use strict";
    var HTML = require_html(), $2 = HTML.TAG_NAMES, NS2 = HTML.NAMESPACES;
    function isImpliedEndTagRequired(tn) {
      switch (tn.length) {
        case 1:
          return tn === $2.P;
        case 2:
          return tn === $2.RB || tn === $2.RP || tn === $2.RT || tn === $2.DD || tn === $2.DT || tn === $2.LI;
        case 3:
          return tn === $2.RTC;
        case 6:
          return tn === $2.OPTION;
        case 8:
          return tn === $2.OPTGROUP;
      }
      return !1;
    }
    function isImpliedEndTagRequiredThoroughly(tn) {
      switch (tn.length) {
        case 1:
          return tn === $2.P;
        case 2:
          return tn === $2.RB || tn === $2.RP || tn === $2.RT || tn === $2.DD || tn === $2.DT || tn === $2.LI || tn === $2.TD || tn === $2.TH || tn === $2.TR;
        case 3:
          return tn === $2.RTC;
        case 5:
          return tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD;
        case 6:
          return tn === $2.OPTION;
        case 7:
          return tn === $2.CAPTION;
        case 8:
          return tn === $2.OPTGROUP || tn === $2.COLGROUP;
      }
      return !1;
    }
    function isScopingElement(tn, ns) {
      switch (tn.length) {
        case 2:
          if (tn === $2.TD || tn === $2.TH)
            return ns === NS2.HTML;
          if (tn === $2.MI || tn === $2.MO || tn === $2.MN || tn === $2.MS)
            return ns === NS2.MATHML;
          break;
        case 4:
          if (tn === $2.HTML)
            return ns === NS2.HTML;
          if (tn === $2.DESC)
            return ns === NS2.SVG;
          break;
        case 5:
          if (tn === $2.TABLE)
            return ns === NS2.HTML;
          if (tn === $2.MTEXT)
            return ns === NS2.MATHML;
          if (tn === $2.TITLE)
            return ns === NS2.SVG;
          break;
        case 6:
          return (tn === $2.APPLET || tn === $2.OBJECT) && ns === NS2.HTML;
        case 7:
          return (tn === $2.CAPTION || tn === $2.MARQUEE) && ns === NS2.HTML;
        case 8:
          return tn === $2.TEMPLATE && ns === NS2.HTML;
        case 13:
          return tn === $2.FOREIGN_OBJECT && ns === NS2.SVG;
        case 14:
          return tn === $2.ANNOTATION_XML && ns === NS2.MATHML;
      }
      return !1;
    }
    var OpenElementStack2 = class {
      constructor(document4, treeAdapter) {
        this.stackTop = -1, this.items = [], this.current = document4, this.currentTagName = null, this.currentTmplContent = null, this.tmplCount = 0, this.treeAdapter = treeAdapter;
      }
      _indexOf(element5) {
        let idx = -1;
        for (let i = this.stackTop; i >= 0; i--)
          if (this.items[i] === element5) {
            idx = i;
            break;
          }
        return idx;
      }
      _isInTemplate() {
        return this.currentTagName === $2.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS2.HTML;
      }
      _updateCurrentElement() {
        this.current = this.items[this.stackTop], this.currentTagName = this.current && this.treeAdapter.getTagName(this.current), this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
      }
      push(element5) {
        this.items[++this.stackTop] = element5, this._updateCurrentElement(), this._isInTemplate() && this.tmplCount++;
      }
      pop() {
        this.stackTop--, this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this._updateCurrentElement();
      }
      replace(oldElement, newElement) {
        let idx = this._indexOf(oldElement);
        this.items[idx] = newElement, idx === this.stackTop && this._updateCurrentElement();
      }
      insertAfter(referenceElement, newElement) {
        let insertionIdx = this._indexOf(referenceElement) + 1;
        this.items.splice(insertionIdx, 0, newElement), insertionIdx === ++this.stackTop && this._updateCurrentElement();
      }
      popUntilTagNamePopped(tagName) {
        for (; this.stackTop > -1; ) {
          let tn = this.currentTagName, ns = this.treeAdapter.getNamespaceURI(this.current);
          if (this.pop(), tn === tagName && ns === NS2.HTML)
            break;
        }
      }
      popUntilElementPopped(element5) {
        for (; this.stackTop > -1; ) {
          let poppedElement = this.current;
          if (this.pop(), poppedElement === element5)
            break;
        }
      }
      popUntilNumberedHeaderPopped() {
        for (; this.stackTop > -1; ) {
          let tn = this.currentTagName, ns = this.treeAdapter.getNamespaceURI(this.current);
          if (this.pop(), tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6 && ns === NS2.HTML)
            break;
        }
      }
      popUntilTableCellPopped() {
        for (; this.stackTop > -1; ) {
          let tn = this.currentTagName, ns = this.treeAdapter.getNamespaceURI(this.current);
          if (this.pop(), tn === $2.TD || tn === $2.TH && ns === NS2.HTML)
            break;
        }
      }
      popAllUpToHtmlElement() {
        this.stackTop = 0, this._updateCurrentElement();
      }
      clearBackToTableContext() {
        for (; this.currentTagName !== $2.TABLE && this.currentTagName !== $2.TEMPLATE && this.currentTagName !== $2.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS2.HTML; )
          this.pop();
      }
      clearBackToTableBodyContext() {
        for (; this.currentTagName !== $2.TBODY && this.currentTagName !== $2.TFOOT && this.currentTagName !== $2.THEAD && this.currentTagName !== $2.TEMPLATE && this.currentTagName !== $2.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS2.HTML; )
          this.pop();
      }
      clearBackToTableRowContext() {
        for (; this.currentTagName !== $2.TR && this.currentTagName !== $2.TEMPLATE && this.currentTagName !== $2.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS2.HTML; )
          this.pop();
      }
      remove(element5) {
        for (let i = this.stackTop; i >= 0; i--)
          if (this.items[i] === element5) {
            this.items.splice(i, 1), this.stackTop--, this._updateCurrentElement();
            break;
          }
      }
      tryPeekProperlyNestedBodyElement() {
        let element5 = this.items[1];
        return element5 && this.treeAdapter.getTagName(element5) === $2.BODY ? element5 : null;
      }
      contains(element5) {
        return this._indexOf(element5) > -1;
      }
      getCommonAncestor(element5) {
        let elementIdx = this._indexOf(element5);
        return --elementIdx >= 0 ? this.items[elementIdx] : null;
      }
      isRootHtmlElementCurrent() {
        return this.stackTop === 0 && this.currentTagName === $2.HTML;
      }
      hasInScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]), ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS2.HTML)
            return !0;
          if (isScopingElement(tn, ns))
            return !1;
        }
        return !0;
      }
      hasNumberedHeaderInScope() {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]), ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if ((tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6) && ns === NS2.HTML)
            return !0;
          if (isScopingElement(tn, ns))
            return !1;
        }
        return !0;
      }
      hasInListItemScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]), ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS2.HTML)
            return !0;
          if ((tn === $2.UL || tn === $2.OL) && ns === NS2.HTML || isScopingElement(tn, ns))
            return !1;
        }
        return !0;
      }
      hasInButtonScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]), ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS2.HTML)
            return !0;
          if (tn === $2.BUTTON && ns === NS2.HTML || isScopingElement(tn, ns))
            return !1;
        }
        return !0;
      }
      hasInTableScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]);
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS2.HTML) {
            if (tn === tagName)
              return !0;
            if (tn === $2.TABLE || tn === $2.TEMPLATE || tn === $2.HTML)
              return !1;
          }
        }
        return !0;
      }
      hasTableBodyContextInTableScope() {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]);
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS2.HTML) {
            if (tn === $2.TBODY || tn === $2.THEAD || tn === $2.TFOOT)
              return !0;
            if (tn === $2.TABLE || tn === $2.HTML)
              return !1;
          }
        }
        return !0;
      }
      hasInSelectScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]);
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS2.HTML) {
            if (tn === tagName)
              return !0;
            if (tn !== $2.OPTION && tn !== $2.OPTGROUP)
              return !1;
          }
        }
        return !0;
      }
      generateImpliedEndTags() {
        for (; isImpliedEndTagRequired(this.currentTagName); )
          this.pop();
      }
      generateImpliedEndTagsThoroughly() {
        for (; isImpliedEndTagRequiredThoroughly(this.currentTagName); )
          this.pop();
      }
      generateImpliedEndTagsWithExclusion(exclusionTagName) {
        for (; isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName; )
          this.pop();
      }
    };
    module2.exports = OpenElementStack2;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/parser/formatting-element-list.js
var require_formatting_element_list = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/parser/formatting-element-list.js"(exports2, module2) {
    "use strict";
    var FormattingElementList2 = class {
      constructor(treeAdapter) {
        this.length = 0, this.entries = [], this.treeAdapter = treeAdapter, this.bookmark = null;
      }
      _getNoahArkConditionCandidates(newElement) {
        let candidates = [];
        if (this.length >= 3) {
          let neAttrsLength = this.treeAdapter.getAttrList(newElement).length, neTagName = this.treeAdapter.getTagName(newElement), neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);
          for (let i = this.length - 1; i >= 0; i--) {
            let entry2 = this.entries[i];
            if (entry2.type === FormattingElementList2.MARKER_ENTRY)
              break;
            let element5 = entry2.element, elementAttrs = this.treeAdapter.getAttrList(element5);
            this.treeAdapter.getTagName(element5) === neTagName && this.treeAdapter.getNamespaceURI(element5) === neNamespaceURI && elementAttrs.length === neAttrsLength && candidates.push({ idx: i, attrs: elementAttrs });
          }
        }
        return candidates.length < 3 ? [] : candidates;
      }
      _ensureNoahArkCondition(newElement) {
        let candidates = this._getNoahArkConditionCandidates(newElement), cLength = candidates.length;
        if (cLength) {
          let neAttrs = this.treeAdapter.getAttrList(newElement), neAttrsLength = neAttrs.length, neAttrsMap = /* @__PURE__ */ Object.create(null);
          for (let i = 0; i < neAttrsLength; i++) {
            let neAttr = neAttrs[i];
            neAttrsMap[neAttr.name] = neAttr.value;
          }
          for (let i = 0; i < neAttrsLength; i++)
            for (let j = 0; j < cLength; j++) {
              let cAttr = candidates[j].attrs[i];
              if (neAttrsMap[cAttr.name] !== cAttr.value && (candidates.splice(j, 1), cLength--), candidates.length < 3)
                return;
            }
          for (let i = cLength - 1; i >= 3 - 1; i--)
            this.entries.splice(candidates[i].idx, 1), this.length--;
        }
      }
      insertMarker() {
        this.entries.push({ type: FormattingElementList2.MARKER_ENTRY }), this.length++;
      }
      pushElement(element5, token) {
        this._ensureNoahArkCondition(element5), this.entries.push({
          type: FormattingElementList2.ELEMENT_ENTRY,
          element: element5,
          token
        }), this.length++;
      }
      insertElementAfterBookmark(element5, token) {
        let bookmarkIdx = this.length - 1;
        for (; bookmarkIdx >= 0 && this.entries[bookmarkIdx] !== this.bookmark; bookmarkIdx--)
          ;
        this.entries.splice(bookmarkIdx + 1, 0, {
          type: FormattingElementList2.ELEMENT_ENTRY,
          element: element5,
          token
        }), this.length++;
      }
      removeEntry(entry2) {
        for (let i = this.length - 1; i >= 0; i--)
          if (this.entries[i] === entry2) {
            this.entries.splice(i, 1), this.length--;
            break;
          }
      }
      clearToLastMarker() {
        for (; this.length; ) {
          let entry2 = this.entries.pop();
          if (this.length--, entry2.type === FormattingElementList2.MARKER_ENTRY)
            break;
        }
      }
      getElementEntryInScopeWithTagName(tagName) {
        for (let i = this.length - 1; i >= 0; i--) {
          let entry2 = this.entries[i];
          if (entry2.type === FormattingElementList2.MARKER_ENTRY)
            return null;
          if (this.treeAdapter.getTagName(entry2.element) === tagName)
            return entry2;
        }
        return null;
      }
      getElementEntry(element5) {
        for (let i = this.length - 1; i >= 0; i--) {
          let entry2 = this.entries[i];
          if (entry2.type === FormattingElementList2.ELEMENT_ENTRY && entry2.element === element5)
            return entry2;
        }
        return null;
      }
    };
    FormattingElementList2.MARKER_ENTRY = "MARKER_ENTRY";
    FormattingElementList2.ELEMENT_ENTRY = "ELEMENT_ENTRY";
    module2.exports = FormattingElementList2;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/utils/mixin.js
var require_mixin = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/utils/mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = class {
      constructor(host) {
        let originalMethods = {}, overriddenMethods = this._getOverriddenMethods(this, originalMethods);
        for (let key2 of Object.keys(overriddenMethods))
          typeof overriddenMethods[key2] == "function" && (originalMethods[key2] = host[key2], host[key2] = overriddenMethods[key2]);
      }
      _getOverriddenMethods() {
        throw new Error("Not implemented");
      }
    };
    Mixin.install = function(host, Ctor, opts) {
      host.__mixins || (host.__mixins = []);
      for (let i = 0; i < host.__mixins.length; i++)
        if (host.__mixins[i].constructor === Ctor)
          return host.__mixins[i];
      let mixin = new Ctor(host, opts);
      return host.__mixins.push(mixin), mixin;
    };
    module2.exports = Mixin;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js
var require_preprocessor_mixin = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin(), PositionTrackingPreprocessorMixin = class extends Mixin {
      constructor(preprocessor) {
        super(preprocessor), this.preprocessor = preprocessor, this.isEol = !1, this.lineStartPos = 0, this.droppedBufferSize = 0, this.offset = 0, this.col = 0, this.line = 1;
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          advance() {
            let pos = this.pos + 1, ch = this.html[pos];
            return mxn.isEol && (mxn.isEol = !1, mxn.line++, mxn.lineStartPos = pos), (ch === `
` || ch === "\r" && this.html[pos + 1] !== `
`) && (mxn.isEol = !0), mxn.col = pos - mxn.lineStartPos + 1, mxn.offset = mxn.droppedBufferSize + pos, orig.advance.call(this);
          },
          retreat() {
            orig.retreat.call(this), mxn.isEol = !1, mxn.col = this.pos - mxn.lineStartPos + 1;
          },
          dropParsedChunk() {
            let prevPos = this.pos;
            orig.dropParsedChunk.call(this);
            let reduction = prevPos - this.pos;
            mxn.lineStartPos -= reduction, mxn.droppedBufferSize += reduction, mxn.offset = mxn.droppedBufferSize + this.pos;
          }
        };
      }
    };
    module2.exports = PositionTrackingPreprocessorMixin;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js
var require_tokenizer_mixin = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin(), Tokenizer2 = require_tokenizer(), PositionTrackingPreprocessorMixin = require_preprocessor_mixin(), LocationInfoTokenizerMixin = class extends Mixin {
      constructor(tokenizer) {
        super(tokenizer), this.tokenizer = tokenizer, this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin), this.currentAttrLocation = null, this.ctLoc = null;
      }
      _getCurrentLocation() {
        return {
          startLine: this.posTracker.line,
          startCol: this.posTracker.col,
          startOffset: this.posTracker.offset,
          endLine: -1,
          endCol: -1,
          endOffset: -1
        };
      }
      _attachCurrentAttrLocationInfo() {
        this.currentAttrLocation.endLine = this.posTracker.line, this.currentAttrLocation.endCol = this.posTracker.col, this.currentAttrLocation.endOffset = this.posTracker.offset;
        let currentToken = this.tokenizer.currentToken, currentAttr = this.tokenizer.currentAttr;
        currentToken.location.attrs || (currentToken.location.attrs = /* @__PURE__ */ Object.create(null)), currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;
      }
      _getOverriddenMethods(mxn, orig) {
        let methods = {
          _createStartTagToken() {
            orig._createStartTagToken.call(this), this.currentToken.location = mxn.ctLoc;
          },
          _createEndTagToken() {
            orig._createEndTagToken.call(this), this.currentToken.location = mxn.ctLoc;
          },
          _createCommentToken() {
            orig._createCommentToken.call(this), this.currentToken.location = mxn.ctLoc;
          },
          _createDoctypeToken(initialName) {
            orig._createDoctypeToken.call(this, initialName), this.currentToken.location = mxn.ctLoc;
          },
          _createCharacterToken(type, ch) {
            orig._createCharacterToken.call(this, type, ch), this.currentCharacterToken.location = mxn.ctLoc;
          },
          _createEOFToken() {
            orig._createEOFToken.call(this), this.currentToken.location = mxn._getCurrentLocation();
          },
          _createAttr(attrNameFirstCh) {
            orig._createAttr.call(this, attrNameFirstCh), mxn.currentAttrLocation = mxn._getCurrentLocation();
          },
          _leaveAttrName(toState) {
            orig._leaveAttrName.call(this, toState), mxn._attachCurrentAttrLocationInfo();
          },
          _leaveAttrValue(toState) {
            orig._leaveAttrValue.call(this, toState), mxn._attachCurrentAttrLocationInfo();
          },
          _emitCurrentToken() {
            let ctLoc = this.currentToken.location;
            this.currentCharacterToken && (this.currentCharacterToken.location.endLine = ctLoc.startLine, this.currentCharacterToken.location.endCol = ctLoc.startCol, this.currentCharacterToken.location.endOffset = ctLoc.startOffset), this.currentToken.type === Tokenizer2.EOF_TOKEN ? (ctLoc.endLine = ctLoc.startLine, ctLoc.endCol = ctLoc.startCol, ctLoc.endOffset = ctLoc.startOffset) : (ctLoc.endLine = mxn.posTracker.line, ctLoc.endCol = mxn.posTracker.col + 1, ctLoc.endOffset = mxn.posTracker.offset + 1), orig._emitCurrentToken.call(this);
          },
          _emitCurrentCharacterToken() {
            let ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;
            ctLoc && ctLoc.endOffset === -1 && (ctLoc.endLine = mxn.posTracker.line, ctLoc.endCol = mxn.posTracker.col, ctLoc.endOffset = mxn.posTracker.offset), orig._emitCurrentCharacterToken.call(this);
          }
        };
        return Object.keys(Tokenizer2.MODE).forEach((modeName) => {
          let state = Tokenizer2.MODE[modeName];
          methods[state] = function(cp) {
            mxn.ctLoc = mxn._getCurrentLocation(), orig[state].call(this, cp);
          };
        }), methods;
      }
    };
    module2.exports = LocationInfoTokenizerMixin;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js
var require_open_element_stack_mixin = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin(), LocationInfoOpenElementStackMixin = class extends Mixin {
      constructor(stack, opts) {
        super(stack), this.onItemPop = opts.onItemPop;
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          pop() {
            mxn.onItemPop(this.current), orig.pop.call(this);
          },
          popAllUpToHtmlElement() {
            for (let i = this.stackTop; i > 0; i--)
              mxn.onItemPop(this.items[i]);
            orig.popAllUpToHtmlElement.call(this);
          },
          remove(element5) {
            mxn.onItemPop(this.current), orig.remove.call(this, element5);
          }
        };
      }
    };
    module2.exports = LocationInfoOpenElementStackMixin;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/parser-mixin.js
var require_parser_mixin = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/parser-mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin(), Tokenizer2 = require_tokenizer(), LocationInfoTokenizerMixin = require_tokenizer_mixin(), LocationInfoOpenElementStackMixin = require_open_element_stack_mixin(), HTML = require_html(), $2 = HTML.TAG_NAMES, LocationInfoParserMixin = class extends Mixin {
      constructor(parser) {
        super(parser), this.parser = parser, this.treeAdapter = this.parser.treeAdapter, this.posTracker = null, this.lastStartTagToken = null, this.lastFosterParentingLocation = null, this.currentToken = null;
      }
      _setStartLocation(element5) {
        let loc = null;
        this.lastStartTagToken && (loc = Object.assign({}, this.lastStartTagToken.location), loc.startTag = this.lastStartTagToken.location), this.treeAdapter.setNodeSourceCodeLocation(element5, loc);
      }
      _setEndLocation(element5, closingToken) {
        if (this.treeAdapter.getNodeSourceCodeLocation(element5) && closingToken.location) {
          let ctLoc = closingToken.location, tn = this.treeAdapter.getTagName(element5), isClosingEndTag = closingToken.type === Tokenizer2.END_TAG_TOKEN && tn === closingToken.tagName, endLoc = {};
          isClosingEndTag ? (endLoc.endTag = Object.assign({}, ctLoc), endLoc.endLine = ctLoc.endLine, endLoc.endCol = ctLoc.endCol, endLoc.endOffset = ctLoc.endOffset) : (endLoc.endLine = ctLoc.startLine, endLoc.endCol = ctLoc.startCol, endLoc.endOffset = ctLoc.startOffset), this.treeAdapter.updateNodeSourceCodeLocation(element5, endLoc);
        }
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          _bootstrap(document4, fragmentContext) {
            orig._bootstrap.call(this, document4, fragmentContext), mxn.lastStartTagToken = null, mxn.lastFosterParentingLocation = null, mxn.currentToken = null;
            let tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
            mxn.posTracker = tokenizerMixin.posTracker, Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {
              onItemPop: function(element5) {
                mxn._setEndLocation(element5, mxn.currentToken);
              }
            });
          },
          _runParsingLoop(scriptHandler) {
            orig._runParsingLoop.call(this, scriptHandler);
            for (let i = this.openElements.stackTop; i >= 0; i--)
              mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);
          },
          _processTokenInForeignContent(token) {
            mxn.currentToken = token, orig._processTokenInForeignContent.call(this, token);
          },
          _processToken(token) {
            if (mxn.currentToken = token, orig._processToken.call(this, token), token.type === Tokenizer2.END_TAG_TOKEN && (token.tagName === $2.HTML || token.tagName === $2.BODY && this.openElements.hasInScope($2.BODY)))
              for (let i = this.openElements.stackTop; i >= 0; i--) {
                let element5 = this.openElements.items[i];
                if (this.treeAdapter.getTagName(element5) === token.tagName) {
                  mxn._setEndLocation(element5, token);
                  break;
                }
              }
          },
          _setDocumentType(token) {
            orig._setDocumentType.call(this, token);
            let documentChildren = this.treeAdapter.getChildNodes(this.document), cnLength = documentChildren.length;
            for (let i = 0; i < cnLength; i++) {
              let node2 = documentChildren[i];
              if (this.treeAdapter.isDocumentTypeNode(node2)) {
                this.treeAdapter.setNodeSourceCodeLocation(node2, token.location);
                break;
              }
            }
          },
          _attachElementToTree(element5) {
            mxn._setStartLocation(element5), mxn.lastStartTagToken = null, orig._attachElementToTree.call(this, element5);
          },
          _appendElement(token, namespaceURI) {
            mxn.lastStartTagToken = token, orig._appendElement.call(this, token, namespaceURI);
          },
          _insertElement(token, namespaceURI) {
            mxn.lastStartTagToken = token, orig._insertElement.call(this, token, namespaceURI);
          },
          _insertTemplate(token) {
            mxn.lastStartTagToken = token, orig._insertTemplate.call(this, token);
            let tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);
            this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);
          },
          _insertFakeRootElement() {
            orig._insertFakeRootElement.call(this), this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);
          },
          _appendCommentNode(token, parent) {
            orig._appendCommentNode.call(this, token, parent);
            let children = this.treeAdapter.getChildNodes(parent), commentNode = children[children.length - 1];
            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
          },
          _findFosterParentingLocation() {
            return mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this), mxn.lastFosterParentingLocation;
          },
          _insertCharacters(token) {
            orig._insertCharacters.call(this, token);
            let hasFosterParent = this._shouldFosterParentOnInsertion(), parent = hasFosterParent && mxn.lastFosterParentingLocation.parent || this.openElements.currentTmplContent || this.openElements.current, siblings2 = this.treeAdapter.getChildNodes(parent), textNodeIdx = hasFosterParent && mxn.lastFosterParentingLocation.beforeElement ? siblings2.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1 : siblings2.length - 1, textNode = siblings2[textNodeIdx];
            if (this.treeAdapter.getNodeSourceCodeLocation(textNode)) {
              let { endLine, endCol, endOffset } = token.location;
              this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });
            } else
              this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
          }
        };
      }
    };
    module2.exports = LocationInfoParserMixin;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js
var require_mixin_base = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin(), ErrorReportingMixinBase = class extends Mixin {
      constructor(host, opts) {
        super(host), this.posTracker = null, this.onParseError = opts.onParseError;
      }
      _setErrorLocation(err) {
        err.startLine = err.endLine = this.posTracker.line, err.startCol = err.endCol = this.posTracker.col, err.startOffset = err.endOffset = this.posTracker.offset;
      }
      _reportError(code3) {
        let err = {
          code: code3,
          startLine: -1,
          startCol: -1,
          startOffset: -1,
          endLine: -1,
          endCol: -1,
          endOffset: -1
        };
        this._setErrorLocation(err), this.onParseError(err);
      }
      _getOverriddenMethods(mxn) {
        return {
          _err(code3) {
            mxn._reportError(code3);
          }
        };
      }
    };
    module2.exports = ErrorReportingMixinBase;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js
var require_preprocessor_mixin2 = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js"(exports2, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base(), PositionTrackingPreprocessorMixin = require_preprocessor_mixin(), Mixin = require_mixin(), ErrorReportingPreprocessorMixin = class extends ErrorReportingMixinBase {
      constructor(preprocessor, opts) {
        super(preprocessor, opts), this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin), this.lastErrOffset = -1;
      }
      _reportError(code3) {
        this.lastErrOffset !== this.posTracker.offset && (this.lastErrOffset = this.posTracker.offset, super._reportError(code3));
      }
    };
    module2.exports = ErrorReportingPreprocessorMixin;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js
var require_tokenizer_mixin2 = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js"(exports2, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base(), ErrorReportingPreprocessorMixin = require_preprocessor_mixin2(), Mixin = require_mixin(), ErrorReportingTokenizerMixin = class extends ErrorReportingMixinBase {
      constructor(tokenizer, opts) {
        super(tokenizer, opts);
        let preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);
        this.posTracker = preprocessorMixin.posTracker;
      }
    };
    module2.exports = ErrorReportingTokenizerMixin;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js
var require_parser_mixin2 = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js"(exports2, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base(), ErrorReportingTokenizerMixin = require_tokenizer_mixin2(), LocationInfoTokenizerMixin = require_tokenizer_mixin(), Mixin = require_mixin(), ErrorReportingParserMixin = class extends ErrorReportingMixinBase {
      constructor(parser, opts) {
        super(parser, opts), this.opts = opts, this.ctLoc = null, this.locBeforeToken = !1;
      }
      _setErrorLocation(err) {
        this.ctLoc && (err.startLine = this.ctLoc.startLine, err.startCol = this.ctLoc.startCol, err.startOffset = this.ctLoc.startOffset, err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine, err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol, err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset);
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          _bootstrap(document4, fragmentContext) {
            orig._bootstrap.call(this, document4, fragmentContext), Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts), Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
          },
          _processInputToken(token) {
            mxn.ctLoc = token.location, orig._processInputToken.call(this, token);
          },
          _err(code3, options2) {
            mxn.locBeforeToken = options2 && options2.beforeToken, mxn._reportError(code3);
          }
        };
      }
    };
    module2.exports = ErrorReportingParserMixin;
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/tree-adapters/default.js
var require_default = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/tree-adapters/default.js"(exports2) {
    "use strict";
    var { DOCUMENT_MODE: DOCUMENT_MODE2 } = require_html();
    exports2.createDocument = function() {
      return {
        nodeName: "#document",
        mode: DOCUMENT_MODE2.NO_QUIRKS,
        childNodes: []
      };
    };
    exports2.createDocumentFragment = function() {
      return {
        nodeName: "#document-fragment",
        childNodes: []
      };
    };
    exports2.createElement = function(tagName, namespaceURI, attrs) {
      return {
        nodeName: tagName,
        tagName,
        attrs,
        namespaceURI,
        childNodes: [],
        parentNode: null
      };
    };
    exports2.createCommentNode = function(data) {
      return {
        nodeName: "#comment",
        data,
        parentNode: null
      };
    };
    var createTextNode2 = function(value) {
      return {
        nodeName: "#text",
        value,
        parentNode: null
      };
    }, appendChild = exports2.appendChild = function(parentNode, newNode) {
      parentNode.childNodes.push(newNode), newNode.parentNode = parentNode;
    }, insertBefore = exports2.insertBefore = function(parentNode, newNode, referenceNode) {
      let insertionIdx = parentNode.childNodes.indexOf(referenceNode);
      parentNode.childNodes.splice(insertionIdx, 0, newNode), newNode.parentNode = parentNode;
    };
    exports2.setTemplateContent = function(templateElement, contentElement) {
      templateElement.content = contentElement;
    };
    exports2.getTemplateContent = function(templateElement) {
      return templateElement.content;
    };
    exports2.setDocumentType = function(document4, name, publicId, systemId) {
      let doctypeNode = null;
      for (let i = 0; i < document4.childNodes.length; i++)
        if (document4.childNodes[i].nodeName === "#documentType") {
          doctypeNode = document4.childNodes[i];
          break;
        }
      doctypeNode ? (doctypeNode.name = name, doctypeNode.publicId = publicId, doctypeNode.systemId = systemId) : appendChild(document4, {
        nodeName: "#documentType",
        name,
        publicId,
        systemId
      });
    };
    exports2.setDocumentMode = function(document4, mode) {
      document4.mode = mode;
    };
    exports2.getDocumentMode = function(document4) {
      return document4.mode;
    };
    exports2.detachNode = function(node2) {
      if (node2.parentNode) {
        let idx = node2.parentNode.childNodes.indexOf(node2);
        node2.parentNode.childNodes.splice(idx, 1), node2.parentNode = null;
      }
    };
    exports2.insertText = function(parentNode, text7) {
      if (parentNode.childNodes.length) {
        let prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];
        if (prevNode.nodeName === "#text") {
          prevNode.value += text7;
          return;
        }
      }
      appendChild(parentNode, createTextNode2(text7));
    };
    exports2.insertTextBefore = function(parentNode, text7, referenceNode) {
      let prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
      prevNode && prevNode.nodeName === "#text" ? prevNode.value += text7 : insertBefore(parentNode, createTextNode2(text7), referenceNode);
    };
    exports2.adoptAttributes = function(recipient, attrs) {
      let recipientAttrsMap = [];
      for (let i = 0; i < recipient.attrs.length; i++)
        recipientAttrsMap.push(recipient.attrs[i].name);
      for (let j = 0; j < attrs.length; j++)
        recipientAttrsMap.indexOf(attrs[j].name) === -1 && recipient.attrs.push(attrs[j]);
    };
    exports2.getFirstChild = function(node2) {
      return node2.childNodes[0];
    };
    exports2.getChildNodes = function(node2) {
      return node2.childNodes;
    };
    exports2.getParentNode = function(node2) {
      return node2.parentNode;
    };
    exports2.getAttrList = function(element5) {
      return element5.attrs;
    };
    exports2.getTagName = function(element5) {
      return element5.tagName;
    };
    exports2.getNamespaceURI = function(element5) {
      return element5.namespaceURI;
    };
    exports2.getTextNodeContent = function(textNode) {
      return textNode.value;
    };
    exports2.getCommentNodeContent = function(commentNode) {
      return commentNode.data;
    };
    exports2.getDocumentTypeNodeName = function(doctypeNode) {
      return doctypeNode.name;
    };
    exports2.getDocumentTypeNodePublicId = function(doctypeNode) {
      return doctypeNode.publicId;
    };
    exports2.getDocumentTypeNodeSystemId = function(doctypeNode) {
      return doctypeNode.systemId;
    };
    exports2.isTextNode = function(node2) {
      return node2.nodeName === "#text";
    };
    exports2.isCommentNode = function(node2) {
      return node2.nodeName === "#comment";
    };
    exports2.isDocumentTypeNode = function(node2) {
      return node2.nodeName === "#documentType";
    };
    exports2.isElementNode = function(node2) {
      return !!node2.tagName;
    };
    exports2.setNodeSourceCodeLocation = function(node2, location2) {
      node2.sourceCodeLocation = location2;
    };
    exports2.getNodeSourceCodeLocation = function(node2) {
      return node2.sourceCodeLocation;
    };
    exports2.updateNodeSourceCodeLocation = function(node2, endLocation) {
      node2.sourceCodeLocation = Object.assign(node2.sourceCodeLocation, endLocation);
    };
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/utils/merge-options.js
var require_merge_options = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/utils/merge-options.js"(exports2, module2) {
    "use strict";
    module2.exports = function(defaults, options2) {
      return options2 = options2 || /* @__PURE__ */ Object.create(null), [defaults, options2].reduce((merged, optObj) => (Object.keys(optObj).forEach((key2) => {
        merged[key2] = optObj[key2];
      }), merged), /* @__PURE__ */ Object.create(null));
    };
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/common/doctype.js
var require_doctype = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/common/doctype.js"(exports2) {
    "use strict";
    var { DOCUMENT_MODE: DOCUMENT_MODE2 } = require_html(), VALID_DOCTYPE_NAME2 = "html", VALID_SYSTEM_ID2 = "about:legacy-compat", QUIRKS_MODE_SYSTEM_ID2 = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd", QUIRKS_MODE_PUBLIC_ID_PREFIXES2 = [
      "+//silmaril//dtd html pro v0r11 19970101//",
      "-//as//dtd html 3.0 aswedit + extensions//",
      "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
      "-//ietf//dtd html 2.0 level 1//",
      "-//ietf//dtd html 2.0 level 2//",
      "-//ietf//dtd html 2.0 strict level 1//",
      "-//ietf//dtd html 2.0 strict level 2//",
      "-//ietf//dtd html 2.0 strict//",
      "-//ietf//dtd html 2.0//",
      "-//ietf//dtd html 2.1e//",
      "-//ietf//dtd html 3.0//",
      "-//ietf//dtd html 3.2 final//",
      "-//ietf//dtd html 3.2//",
      "-//ietf//dtd html 3//",
      "-//ietf//dtd html level 0//",
      "-//ietf//dtd html level 1//",
      "-//ietf//dtd html level 2//",
      "-//ietf//dtd html level 3//",
      "-//ietf//dtd html strict level 0//",
      "-//ietf//dtd html strict level 1//",
      "-//ietf//dtd html strict level 2//",
      "-//ietf//dtd html strict level 3//",
      "-//ietf//dtd html strict//",
      "-//ietf//dtd html//",
      "-//metrius//dtd metrius presentational//",
      "-//microsoft//dtd internet explorer 2.0 html strict//",
      "-//microsoft//dtd internet explorer 2.0 html//",
      "-//microsoft//dtd internet explorer 2.0 tables//",
      "-//microsoft//dtd internet explorer 3.0 html strict//",
      "-//microsoft//dtd internet explorer 3.0 html//",
      "-//microsoft//dtd internet explorer 3.0 tables//",
      "-//netscape comm. corp.//dtd html//",
      "-//netscape comm. corp.//dtd strict html//",
      "-//o'reilly and associates//dtd html 2.0//",
      "-//o'reilly and associates//dtd html extended 1.0//",
      "-//o'reilly and associates//dtd html extended relaxed 1.0//",
      "-//sq//dtd html 2.0 hotmetal + extensions//",
      "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
      "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
      "-//spyglass//dtd html 2.0 extended//",
      "-//sun microsystems corp.//dtd hotjava html//",
      "-//sun microsystems corp.//dtd hotjava strict html//",
      "-//w3c//dtd html 3 1995-03-24//",
      "-//w3c//dtd html 3.2 draft//",
      "-//w3c//dtd html 3.2 final//",
      "-//w3c//dtd html 3.2//",
      "-//w3c//dtd html 3.2s draft//",
      "-//w3c//dtd html 4.0 frameset//",
      "-//w3c//dtd html 4.0 transitional//",
      "-//w3c//dtd html experimental 19960712//",
      "-//w3c//dtd html experimental 970421//",
      "-//w3c//dtd w3 html//",
      "-//w3o//dtd w3 html 3.0//",
      "-//webtechs//dtd mozilla html 2.0//",
      "-//webtechs//dtd mozilla html//"
    ], QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES2 = QUIRKS_MODE_PUBLIC_ID_PREFIXES2.concat([
      "-//w3c//dtd html 4.01 frameset//",
      "-//w3c//dtd html 4.01 transitional//"
    ]), QUIRKS_MODE_PUBLIC_IDS2 = ["-//w3o//dtd w3 html strict 3.0//en//", "-/w3c/dtd html 4.0 transitional/en", "html"], LIMITED_QUIRKS_PUBLIC_ID_PREFIXES2 = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"], LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES2 = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES2.concat([
      "-//w3c//dtd html 4.01 frameset//",
      "-//w3c//dtd html 4.01 transitional//"
    ]);
    function enquoteDoctypeId(id) {
      let quote = id.indexOf('"') !== -1 ? "'" : '"';
      return quote + id + quote;
    }
    function hasPrefix2(publicId, prefixes) {
      for (let i = 0; i < prefixes.length; i++)
        if (publicId.indexOf(prefixes[i]) === 0)
          return !0;
      return !1;
    }
    exports2.isConforming = function(token) {
      return token.name === VALID_DOCTYPE_NAME2 && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID2);
    };
    exports2.getDocumentMode = function(token) {
      if (token.name !== VALID_DOCTYPE_NAME2)
        return DOCUMENT_MODE2.QUIRKS;
      let systemId = token.systemId;
      if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID2)
        return DOCUMENT_MODE2.QUIRKS;
      let publicId = token.publicId;
      if (publicId !== null) {
        if (publicId = publicId.toLowerCase(), QUIRKS_MODE_PUBLIC_IDS2.indexOf(publicId) > -1)
          return DOCUMENT_MODE2.QUIRKS;
        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES2 : QUIRKS_MODE_PUBLIC_ID_PREFIXES2;
        if (hasPrefix2(publicId, prefixes))
          return DOCUMENT_MODE2.QUIRKS;
        if (prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES2 : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES2, hasPrefix2(publicId, prefixes))
          return DOCUMENT_MODE2.LIMITED_QUIRKS;
      }
      return DOCUMENT_MODE2.NO_QUIRKS;
    };
    exports2.serializeContent = function(name, publicId, systemId) {
      let str2 = "!DOCTYPE ";
      return name && (str2 += name), publicId ? str2 += " PUBLIC " + enquoteDoctypeId(publicId) : systemId && (str2 += " SYSTEM"), systemId !== null && (str2 += " " + enquoteDoctypeId(systemId)), str2;
    };
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/common/foreign-content.js
var require_foreign_content = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/common/foreign-content.js"(exports2) {
    "use strict";
    var Tokenizer2 = require_tokenizer(), HTML = require_html(), $2 = HTML.TAG_NAMES, NS2 = HTML.NAMESPACES, ATTRS2 = HTML.ATTRS, MIME_TYPES2 = {
      TEXT_HTML: "text/html",
      APPLICATION_XML: "application/xhtml+xml"
    }, DEFINITION_URL_ATTR2 = "definitionurl", ADJUSTED_DEFINITION_URL_ATTR2 = "definitionURL", SVG_ATTRS_ADJUSTMENT_MAP2 = {
      attributename: "attributeName",
      attributetype: "attributeType",
      basefrequency: "baseFrequency",
      baseprofile: "baseProfile",
      calcmode: "calcMode",
      clippathunits: "clipPathUnits",
      diffuseconstant: "diffuseConstant",
      edgemode: "edgeMode",
      filterunits: "filterUnits",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      limitingconeangle: "limitingConeAngle",
      markerheight: "markerHeight",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      numoctaves: "numOctaves",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      refx: "refX",
      refy: "refY",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stitchtiles: "stitchTiles",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textlength: "textLength",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      xchannelselector: "xChannelSelector",
      ychannelselector: "yChannelSelector",
      zoomandpan: "zoomAndPan"
    }, XML_ATTRS_ADJUSTMENT_MAP2 = {
      "xlink:actuate": { prefix: "xlink", name: "actuate", namespace: NS2.XLINK },
      "xlink:arcrole": { prefix: "xlink", name: "arcrole", namespace: NS2.XLINK },
      "xlink:href": { prefix: "xlink", name: "href", namespace: NS2.XLINK },
      "xlink:role": { prefix: "xlink", name: "role", namespace: NS2.XLINK },
      "xlink:show": { prefix: "xlink", name: "show", namespace: NS2.XLINK },
      "xlink:title": { prefix: "xlink", name: "title", namespace: NS2.XLINK },
      "xlink:type": { prefix: "xlink", name: "type", namespace: NS2.XLINK },
      "xml:base": { prefix: "xml", name: "base", namespace: NS2.XML },
      "xml:lang": { prefix: "xml", name: "lang", namespace: NS2.XML },
      "xml:space": { prefix: "xml", name: "space", namespace: NS2.XML },
      xmlns: { prefix: "", name: "xmlns", namespace: NS2.XMLNS },
      "xmlns:xlink": { prefix: "xmlns", name: "xlink", namespace: NS2.XMLNS }
    }, SVG_TAG_NAMES_ADJUSTMENT_MAP2 = exports2.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
      altglyph: "altGlyph",
      altglyphdef: "altGlyphDef",
      altglyphitem: "altGlyphItem",
      animatecolor: "animateColor",
      animatemotion: "animateMotion",
      animatetransform: "animateTransform",
      clippath: "clipPath",
      feblend: "feBlend",
      fecolormatrix: "feColorMatrix",
      fecomponenttransfer: "feComponentTransfer",
      fecomposite: "feComposite",
      feconvolvematrix: "feConvolveMatrix",
      fediffuselighting: "feDiffuseLighting",
      fedisplacementmap: "feDisplacementMap",
      fedistantlight: "feDistantLight",
      feflood: "feFlood",
      fefunca: "feFuncA",
      fefuncb: "feFuncB",
      fefuncg: "feFuncG",
      fefuncr: "feFuncR",
      fegaussianblur: "feGaussianBlur",
      feimage: "feImage",
      femerge: "feMerge",
      femergenode: "feMergeNode",
      femorphology: "feMorphology",
      feoffset: "feOffset",
      fepointlight: "fePointLight",
      fespecularlighting: "feSpecularLighting",
      fespotlight: "feSpotLight",
      fetile: "feTile",
      feturbulence: "feTurbulence",
      foreignobject: "foreignObject",
      glyphref: "glyphRef",
      lineargradient: "linearGradient",
      radialgradient: "radialGradient",
      textpath: "textPath"
    }, EXITS_FOREIGN_CONTENT2 = {
      [$2.B]: !0,
      [$2.BIG]: !0,
      [$2.BLOCKQUOTE]: !0,
      [$2.BODY]: !0,
      [$2.BR]: !0,
      [$2.CENTER]: !0,
      [$2.CODE]: !0,
      [$2.DD]: !0,
      [$2.DIV]: !0,
      [$2.DL]: !0,
      [$2.DT]: !0,
      [$2.EM]: !0,
      [$2.EMBED]: !0,
      [$2.H1]: !0,
      [$2.H2]: !0,
      [$2.H3]: !0,
      [$2.H4]: !0,
      [$2.H5]: !0,
      [$2.H6]: !0,
      [$2.HEAD]: !0,
      [$2.HR]: !0,
      [$2.I]: !0,
      [$2.IMG]: !0,
      [$2.LI]: !0,
      [$2.LISTING]: !0,
      [$2.MENU]: !0,
      [$2.META]: !0,
      [$2.NOBR]: !0,
      [$2.OL]: !0,
      [$2.P]: !0,
      [$2.PRE]: !0,
      [$2.RUBY]: !0,
      [$2.S]: !0,
      [$2.SMALL]: !0,
      [$2.SPAN]: !0,
      [$2.STRONG]: !0,
      [$2.STRIKE]: !0,
      [$2.SUB]: !0,
      [$2.SUP]: !0,
      [$2.TABLE]: !0,
      [$2.TT]: !0,
      [$2.U]: !0,
      [$2.UL]: !0,
      [$2.VAR]: !0
    };
    exports2.causesExit = function(startTagToken2) {
      let tn = startTagToken2.tagName;
      return tn === $2.FONT && (Tokenizer2.getTokenAttr(startTagToken2, ATTRS2.COLOR) !== null || Tokenizer2.getTokenAttr(startTagToken2, ATTRS2.SIZE) !== null || Tokenizer2.getTokenAttr(startTagToken2, ATTRS2.FACE) !== null) ? !0 : EXITS_FOREIGN_CONTENT2[tn];
    };
    exports2.adjustTokenMathMLAttrs = function(token) {
      for (let i = 0; i < token.attrs.length; i++)
        if (token.attrs[i].name === DEFINITION_URL_ATTR2) {
          token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR2;
          break;
        }
    };
    exports2.adjustTokenSVGAttrs = function(token) {
      for (let i = 0; i < token.attrs.length; i++) {
        let adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP2[token.attrs[i].name];
        adjustedAttrName && (token.attrs[i].name = adjustedAttrName);
      }
    };
    exports2.adjustTokenXMLAttrs = function(token) {
      for (let i = 0; i < token.attrs.length; i++) {
        let adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP2[token.attrs[i].name];
        adjustedAttrEntry && (token.attrs[i].prefix = adjustedAttrEntry.prefix, token.attrs[i].name = adjustedAttrEntry.name, token.attrs[i].namespace = adjustedAttrEntry.namespace);
      }
    };
    exports2.adjustTokenSVGTagName = function(token) {
      let adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP2[token.tagName];
      adjustedTagName && (token.tagName = adjustedTagName);
    };
    function isMathMLTextIntegrationPoint2(tn, ns) {
      return ns === NS2.MATHML && (tn === $2.MI || tn === $2.MO || tn === $2.MN || tn === $2.MS || tn === $2.MTEXT);
    }
    function isHtmlIntegrationPoint2(tn, ns, attrs) {
      if (ns === NS2.MATHML && tn === $2.ANNOTATION_XML) {
        for (let i = 0; i < attrs.length; i++)
          if (attrs[i].name === ATTRS2.ENCODING) {
            let value = attrs[i].value.toLowerCase();
            return value === MIME_TYPES2.TEXT_HTML || value === MIME_TYPES2.APPLICATION_XML;
          }
      }
      return ns === NS2.SVG && (tn === $2.FOREIGN_OBJECT || tn === $2.DESC || tn === $2.TITLE);
    }
    exports2.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {
      return !!((!foreignNS || foreignNS === NS2.HTML) && isHtmlIntegrationPoint2(tn, ns, attrs) || (!foreignNS || foreignNS === NS2.MATHML) && isMathMLTextIntegrationPoint2(tn, ns));
    };
  }
});

// node_modules/rehype-parse/node_modules/parse5/lib/parser/index.js
var require_parser = __commonJS({
  "node_modules/rehype-parse/node_modules/parse5/lib/parser/index.js"(exports2, module2) {
    "use strict";
    var Tokenizer2 = require_tokenizer(), OpenElementStack2 = require_open_element_stack(), FormattingElementList2 = require_formatting_element_list(), LocationInfoParserMixin = require_parser_mixin(), ErrorReportingParserMixin = require_parser_mixin2(), Mixin = require_mixin(), defaultTreeAdapter2 = require_default(), mergeOptions = require_merge_options(), doctype3 = require_doctype(), foreignContent = require_foreign_content(), ERR2 = require_error_codes(), unicode = require_unicode(), HTML = require_html(), $2 = HTML.TAG_NAMES, NS2 = HTML.NAMESPACES, ATTRS2 = HTML.ATTRS, DEFAULT_OPTIONS = {
      scriptingEnabled: !0,
      sourceCodeLocationInfo: !1,
      onParseError: null,
      treeAdapter: defaultTreeAdapter2
    }, HIDDEN_INPUT_TYPE2 = "hidden", AA_OUTER_LOOP_ITER2 = 8, AA_INNER_LOOP_ITER2 = 3, INITIAL_MODE = "INITIAL_MODE", BEFORE_HTML_MODE = "BEFORE_HTML_MODE", BEFORE_HEAD_MODE = "BEFORE_HEAD_MODE", IN_HEAD_MODE = "IN_HEAD_MODE", IN_HEAD_NO_SCRIPT_MODE = "IN_HEAD_NO_SCRIPT_MODE", AFTER_HEAD_MODE = "AFTER_HEAD_MODE", IN_BODY_MODE = "IN_BODY_MODE", TEXT_MODE = "TEXT_MODE", IN_TABLE_MODE = "IN_TABLE_MODE", IN_TABLE_TEXT_MODE = "IN_TABLE_TEXT_MODE", IN_CAPTION_MODE = "IN_CAPTION_MODE", IN_COLUMN_GROUP_MODE = "IN_COLUMN_GROUP_MODE", IN_TABLE_BODY_MODE = "IN_TABLE_BODY_MODE", IN_ROW_MODE = "IN_ROW_MODE", IN_CELL_MODE = "IN_CELL_MODE", IN_SELECT_MODE = "IN_SELECT_MODE", IN_SELECT_IN_TABLE_MODE = "IN_SELECT_IN_TABLE_MODE", IN_TEMPLATE_MODE = "IN_TEMPLATE_MODE", AFTER_BODY_MODE = "AFTER_BODY_MODE", IN_FRAMESET_MODE = "IN_FRAMESET_MODE", AFTER_FRAMESET_MODE = "AFTER_FRAMESET_MODE", AFTER_AFTER_BODY_MODE = "AFTER_AFTER_BODY_MODE", AFTER_AFTER_FRAMESET_MODE = "AFTER_AFTER_FRAMESET_MODE", INSERTION_MODE_RESET_MAP = {
      [$2.TR]: IN_ROW_MODE,
      [$2.TBODY]: IN_TABLE_BODY_MODE,
      [$2.THEAD]: IN_TABLE_BODY_MODE,
      [$2.TFOOT]: IN_TABLE_BODY_MODE,
      [$2.CAPTION]: IN_CAPTION_MODE,
      [$2.COLGROUP]: IN_COLUMN_GROUP_MODE,
      [$2.TABLE]: IN_TABLE_MODE,
      [$2.BODY]: IN_BODY_MODE,
      [$2.FRAMESET]: IN_FRAMESET_MODE
    }, TEMPLATE_INSERTION_MODE_SWITCH_MAP = {
      [$2.CAPTION]: IN_TABLE_MODE,
      [$2.COLGROUP]: IN_TABLE_MODE,
      [$2.TBODY]: IN_TABLE_MODE,
      [$2.TFOOT]: IN_TABLE_MODE,
      [$2.THEAD]: IN_TABLE_MODE,
      [$2.COL]: IN_COLUMN_GROUP_MODE,
      [$2.TR]: IN_TABLE_BODY_MODE,
      [$2.TD]: IN_ROW_MODE,
      [$2.TH]: IN_ROW_MODE
    }, TOKEN_HANDLERS = {
      [INITIAL_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenInInitialMode2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenInInitialMode2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: doctypeInInitialMode2,
        [Tokenizer2.START_TAG_TOKEN]: tokenInInitialMode2,
        [Tokenizer2.END_TAG_TOKEN]: tokenInInitialMode2,
        [Tokenizer2.EOF_TOKEN]: tokenInInitialMode2
      },
      [BEFORE_HTML_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenBeforeHtml2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenBeforeHtml2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagBeforeHtml2,
        [Tokenizer2.END_TAG_TOKEN]: endTagBeforeHtml2,
        [Tokenizer2.EOF_TOKEN]: tokenBeforeHtml2
      },
      [BEFORE_HEAD_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenBeforeHead2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenBeforeHead2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer2.START_TAG_TOKEN]: startTagBeforeHead2,
        [Tokenizer2.END_TAG_TOKEN]: endTagBeforeHead2,
        [Tokenizer2.EOF_TOKEN]: tokenBeforeHead2
      },
      [IN_HEAD_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenInHead2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenInHead2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer2.START_TAG_TOKEN]: startTagInHead2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInHead2,
        [Tokenizer2.EOF_TOKEN]: tokenInHead2
      },
      [IN_HEAD_NO_SCRIPT_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenInHeadNoScript2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer2.START_TAG_TOKEN]: startTagInHeadNoScript2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInHeadNoScript2,
        [Tokenizer2.EOF_TOKEN]: tokenInHeadNoScript2
      },
      [AFTER_HEAD_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenAfterHead2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenAfterHead2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterHead2,
        [Tokenizer2.END_TAG_TOKEN]: endTagAfterHead2,
        [Tokenizer2.EOF_TOKEN]: tokenAfterHead2
      },
      [IN_BODY_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInBody2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInBody2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [TEXT_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: ignoreToken,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: ignoreToken,
        [Tokenizer2.END_TAG_TOKEN]: endTagInText2,
        [Tokenizer2.EOF_TOKEN]: eofInText2
      },
      [IN_TABLE_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInTable2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInTable2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_TABLE_TEXT_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInTableText2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText2,
        [Tokenizer2.COMMENT_TOKEN]: tokenInTableText2,
        [Tokenizer2.DOCTYPE_TOKEN]: tokenInTableText2,
        [Tokenizer2.START_TAG_TOKEN]: tokenInTableText2,
        [Tokenizer2.END_TAG_TOKEN]: tokenInTableText2,
        [Tokenizer2.EOF_TOKEN]: tokenInTableText2
      },
      [IN_CAPTION_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInCaption2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInCaption2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_COLUMN_GROUP_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenInColumnGroup2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenInColumnGroup2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInColumnGroup2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInColumnGroup2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_TABLE_BODY_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInTableBody2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInTableBody2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_ROW_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInRow2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInRow2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_CELL_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInCell2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInCell2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_SELECT_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInSelect2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInSelect2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_SELECT_IN_TABLE_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInSelectInTable2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInSelectInTable2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_TEMPLATE_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInTemplate2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInTemplate2,
        [Tokenizer2.EOF_TOKEN]: eofInTemplate2
      },
      [AFTER_BODY_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenAfterBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenAfterBody2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendCommentToRootHtmlElement2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterBody2,
        [Tokenizer2.END_TAG_TOKEN]: endTagAfterBody2,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      },
      [IN_FRAMESET_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInFrameset2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInFrameset2,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      },
      [AFTER_FRAMESET_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterFrameset2,
        [Tokenizer2.END_TAG_TOKEN]: endTagAfterFrameset2,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      },
      [AFTER_AFTER_BODY_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenAfterAfterBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendCommentToDocument2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterAfterBody2,
        [Tokenizer2.END_TAG_TOKEN]: tokenAfterAfterBody2,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      },
      [AFTER_AFTER_FRAMESET_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendCommentToDocument2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterAfterFrameset2,
        [Tokenizer2.END_TAG_TOKEN]: ignoreToken,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      }
    }, Parser3 = class {
      constructor(options2) {
        this.options = mergeOptions(DEFAULT_OPTIONS, options2), this.treeAdapter = this.options.treeAdapter, this.pendingScript = null, this.options.sourceCodeLocationInfo && Mixin.install(this, LocationInfoParserMixin), this.options.onParseError && Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });
      }
      parse(html6) {
        let document4 = this.treeAdapter.createDocument();
        return this._bootstrap(document4, null), this.tokenizer.write(html6, !0), this._runParsingLoop(null), document4;
      }
      parseFragment(html6, fragmentContext) {
        fragmentContext || (fragmentContext = this.treeAdapter.createElement($2.TEMPLATE, NS2.HTML, []));
        let documentMock = this.treeAdapter.createElement("documentmock", NS2.HTML, []);
        this._bootstrap(documentMock, fragmentContext), this.treeAdapter.getTagName(fragmentContext) === $2.TEMPLATE && this._pushTmplInsertionMode(IN_TEMPLATE_MODE), this._initTokenizerForFragmentParsing(), this._insertFakeRootElement(), this._resetInsertionMode(), this._findFormInFragmentContext(), this.tokenizer.write(html6, !0), this._runParsingLoop(null);
        let rootElement = this.treeAdapter.getFirstChild(documentMock), fragment2 = this.treeAdapter.createDocumentFragment();
        return this._adoptNodes(rootElement, fragment2), fragment2;
      }
      _bootstrap(document4, fragmentContext) {
        this.tokenizer = new Tokenizer2(this.options), this.stopped = !1, this.insertionMode = INITIAL_MODE, this.originalInsertionMode = "", this.document = document4, this.fragmentContext = fragmentContext, this.headElement = null, this.formElement = null, this.openElements = new OpenElementStack2(this.document, this.treeAdapter), this.activeFormattingElements = new FormattingElementList2(this.treeAdapter), this.tmplInsertionModeStack = [], this.tmplInsertionModeStackTop = -1, this.currentTmplInsertionMode = null, this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = !1, this.framesetOk = !0, this.skipNextNewLine = !1, this.fosterParentingEnabled = !1;
      }
      _err() {
      }
      _runParsingLoop(scriptHandler) {
        for (; !this.stopped; ) {
          this._setupTokenizerCDATAMode();
          let token = this.tokenizer.getNextToken();
          if (token.type === Tokenizer2.HIBERNATION_TOKEN)
            break;
          if (this.skipNextNewLine && (this.skipNextNewLine = !1, token.type === Tokenizer2.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === `
`)) {
            if (token.chars.length === 1)
              continue;
            token.chars = token.chars.substr(1);
          }
          if (this._processInputToken(token), scriptHandler && this.pendingScript)
            break;
        }
      }
      runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {
        if (this._runParsingLoop(scriptHandler), scriptHandler && this.pendingScript) {
          let script = this.pendingScript;
          this.pendingScript = null, scriptHandler(script);
          return;
        }
        writeCallback && writeCallback();
      }
      _setupTokenizerCDATAMode() {
        let current = this._getAdjustedCurrentElement();
        this.tokenizer.allowCDATA = current && current !== this.document && this.treeAdapter.getNamespaceURI(current) !== NS2.HTML && !this._isIntegrationPoint(current);
      }
      _switchToTextParsing(currentToken, nextTokenizerState) {
        this._insertElement(currentToken, NS2.HTML), this.tokenizer.state = nextTokenizerState, this.originalInsertionMode = this.insertionMode, this.insertionMode = TEXT_MODE;
      }
      switchToPlaintextParsing() {
        this.insertionMode = TEXT_MODE, this.originalInsertionMode = IN_BODY_MODE, this.tokenizer.state = Tokenizer2.MODE.PLAINTEXT;
      }
      _getAdjustedCurrentElement() {
        return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
      }
      _findFormInFragmentContext() {
        let node2 = this.fragmentContext;
        do {
          if (this.treeAdapter.getTagName(node2) === $2.FORM) {
            this.formElement = node2;
            break;
          }
          node2 = this.treeAdapter.getParentNode(node2);
        } while (node2);
      }
      _initTokenizerForFragmentParsing() {
        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS2.HTML) {
          let tn = this.treeAdapter.getTagName(this.fragmentContext);
          tn === $2.TITLE || tn === $2.TEXTAREA ? this.tokenizer.state = Tokenizer2.MODE.RCDATA : tn === $2.STYLE || tn === $2.XMP || tn === $2.IFRAME || tn === $2.NOEMBED || tn === $2.NOFRAMES || tn === $2.NOSCRIPT ? this.tokenizer.state = Tokenizer2.MODE.RAWTEXT : tn === $2.SCRIPT ? this.tokenizer.state = Tokenizer2.MODE.SCRIPT_DATA : tn === $2.PLAINTEXT && (this.tokenizer.state = Tokenizer2.MODE.PLAINTEXT);
        }
      }
      _setDocumentType(token) {
        let name = token.name || "", publicId = token.publicId || "", systemId = token.systemId || "";
        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);
      }
      _attachElementToTree(element5) {
        if (this._shouldFosterParentOnInsertion())
          this._fosterParentElement(element5);
        else {
          let parent = this.openElements.currentTmplContent || this.openElements.current;
          this.treeAdapter.appendChild(parent, element5);
        }
      }
      _appendElement(token, namespaceURI) {
        let element5 = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element5);
      }
      _insertElement(token, namespaceURI) {
        let element5 = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element5), this.openElements.push(element5);
      }
      _insertFakeElement(tagName) {
        let element5 = this.treeAdapter.createElement(tagName, NS2.HTML, []);
        this._attachElementToTree(element5), this.openElements.push(element5);
      }
      _insertTemplate(token) {
        let tmpl = this.treeAdapter.createElement(token.tagName, NS2.HTML, token.attrs), content3 = this.treeAdapter.createDocumentFragment();
        this.treeAdapter.setTemplateContent(tmpl, content3), this._attachElementToTree(tmpl), this.openElements.push(tmpl);
      }
      _insertFakeRootElement() {
        let element5 = this.treeAdapter.createElement($2.HTML, NS2.HTML, []);
        this.treeAdapter.appendChild(this.openElements.current, element5), this.openElements.push(element5);
      }
      _appendCommentNode(token, parent) {
        let commentNode = this.treeAdapter.createCommentNode(token.data);
        this.treeAdapter.appendChild(parent, commentNode);
      }
      _insertCharacters(token) {
        if (this._shouldFosterParentOnInsertion())
          this._fosterParentText(token.chars);
        else {
          let parent = this.openElements.currentTmplContent || this.openElements.current;
          this.treeAdapter.insertText(parent, token.chars);
        }
      }
      _adoptNodes(donor, recipient) {
        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor))
          this.treeAdapter.detachNode(child), this.treeAdapter.appendChild(recipient, child);
      }
      _shouldProcessTokenInForeignContent(token) {
        let current = this._getAdjustedCurrentElement();
        if (!current || current === this.document)
          return !1;
        let ns = this.treeAdapter.getNamespaceURI(current);
        if (ns === NS2.HTML || this.treeAdapter.getTagName(current) === $2.ANNOTATION_XML && ns === NS2.MATHML && token.type === Tokenizer2.START_TAG_TOKEN && token.tagName === $2.SVG)
          return !1;
        let isCharacterToken = token.type === Tokenizer2.CHARACTER_TOKEN || token.type === Tokenizer2.NULL_CHARACTER_TOKEN || token.type === Tokenizer2.WHITESPACE_CHARACTER_TOKEN;
        return (token.type === Tokenizer2.START_TAG_TOKEN && token.tagName !== $2.MGLYPH && token.tagName !== $2.MALIGNMARK || isCharacterToken) && this._isIntegrationPoint(current, NS2.MATHML) || (token.type === Tokenizer2.START_TAG_TOKEN || isCharacterToken) && this._isIntegrationPoint(current, NS2.HTML) ? !1 : token.type !== Tokenizer2.EOF_TOKEN;
      }
      _processToken(token) {
        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);
      }
      _processTokenInBodyMode(token) {
        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);
      }
      _processTokenInForeignContent(token) {
        token.type === Tokenizer2.CHARACTER_TOKEN ? characterInForeignContent2(this, token) : token.type === Tokenizer2.NULL_CHARACTER_TOKEN ? nullCharacterInForeignContent2(this, token) : token.type === Tokenizer2.WHITESPACE_CHARACTER_TOKEN ? insertCharacters(this, token) : token.type === Tokenizer2.COMMENT_TOKEN ? appendComment2(this, token) : token.type === Tokenizer2.START_TAG_TOKEN ? startTagInForeignContent2(this, token) : token.type === Tokenizer2.END_TAG_TOKEN && endTagInForeignContent2(this, token);
      }
      _processInputToken(token) {
        this._shouldProcessTokenInForeignContent(token) ? this._processTokenInForeignContent(token) : this._processToken(token), token.type === Tokenizer2.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing && this._err(ERR2.nonVoidHtmlElementStartTagWithTrailingSolidus);
      }
      _isIntegrationPoint(element5, foreignNS) {
        let tn = this.treeAdapter.getTagName(element5), ns = this.treeAdapter.getNamespaceURI(element5), attrs = this.treeAdapter.getAttrList(element5);
        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);
      }
      _reconstructActiveFormattingElements() {
        let listLength = this.activeFormattingElements.length;
        if (listLength) {
          let unopenIdx = listLength, entry2 = null;
          do
            if (unopenIdx--, entry2 = this.activeFormattingElements.entries[unopenIdx], entry2.type === FormattingElementList2.MARKER_ENTRY || this.openElements.contains(entry2.element)) {
              unopenIdx++;
              break;
            }
          while (unopenIdx > 0);
          for (let i = unopenIdx; i < listLength; i++)
            entry2 = this.activeFormattingElements.entries[i], this._insertElement(entry2.token, this.treeAdapter.getNamespaceURI(entry2.element)), entry2.element = this.openElements.current;
        }
      }
      _closeTableCell() {
        this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = IN_ROW_MODE;
      }
      _closePElement() {
        this.openElements.generateImpliedEndTagsWithExclusion($2.P), this.openElements.popUntilTagNamePopped($2.P);
      }
      _resetInsertionMode() {
        for (let i = this.openElements.stackTop, last = !1; i >= 0; i--) {
          let element5 = this.openElements.items[i];
          i === 0 && (last = !0, this.fragmentContext && (element5 = this.fragmentContext));
          let tn = this.treeAdapter.getTagName(element5), newInsertionMode = INSERTION_MODE_RESET_MAP[tn];
          if (newInsertionMode) {
            this.insertionMode = newInsertionMode;
            break;
          } else if (!last && (tn === $2.TD || tn === $2.TH)) {
            this.insertionMode = IN_CELL_MODE;
            break;
          } else if (!last && tn === $2.HEAD) {
            this.insertionMode = IN_HEAD_MODE;
            break;
          } else if (tn === $2.SELECT) {
            this._resetInsertionModeForSelect(i);
            break;
          } else if (tn === $2.TEMPLATE) {
            this.insertionMode = this.currentTmplInsertionMode;
            break;
          } else if (tn === $2.HTML) {
            this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;
            break;
          } else if (last) {
            this.insertionMode = IN_BODY_MODE;
            break;
          }
        }
      }
      _resetInsertionModeForSelect(selectIdx) {
        if (selectIdx > 0)
          for (let i = selectIdx - 1; i > 0; i--) {
            let ancestor = this.openElements.items[i], tn = this.treeAdapter.getTagName(ancestor);
            if (tn === $2.TEMPLATE)
              break;
            if (tn === $2.TABLE) {
              this.insertionMode = IN_SELECT_IN_TABLE_MODE;
              return;
            }
          }
        this.insertionMode = IN_SELECT_MODE;
      }
      _pushTmplInsertionMode(mode) {
        this.tmplInsertionModeStack.push(mode), this.tmplInsertionModeStackTop++, this.currentTmplInsertionMode = mode;
      }
      _popTmplInsertionMode() {
        this.tmplInsertionModeStack.pop(), this.tmplInsertionModeStackTop--, this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
      }
      _isElementCausesFosterParenting(element5) {
        let tn = this.treeAdapter.getTagName(element5);
        return tn === $2.TABLE || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR;
      }
      _shouldFosterParentOnInsertion() {
        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
      }
      _findFosterParentingLocation() {
        let location2 = {
          parent: null,
          beforeElement: null
        };
        for (let i = this.openElements.stackTop; i >= 0; i--) {
          let openElement = this.openElements.items[i], tn = this.treeAdapter.getTagName(openElement), ns = this.treeAdapter.getNamespaceURI(openElement);
          if (tn === $2.TEMPLATE && ns === NS2.HTML) {
            location2.parent = this.treeAdapter.getTemplateContent(openElement);
            break;
          } else if (tn === $2.TABLE) {
            location2.parent = this.treeAdapter.getParentNode(openElement), location2.parent ? location2.beforeElement = openElement : location2.parent = this.openElements.items[i - 1];
            break;
          }
        }
        return location2.parent || (location2.parent = this.openElements.items[0]), location2;
      }
      _fosterParentElement(element5) {
        let location2 = this._findFosterParentingLocation();
        location2.beforeElement ? this.treeAdapter.insertBefore(location2.parent, element5, location2.beforeElement) : this.treeAdapter.appendChild(location2.parent, element5);
      }
      _fosterParentText(chars) {
        let location2 = this._findFosterParentingLocation();
        location2.beforeElement ? this.treeAdapter.insertTextBefore(location2.parent, chars, location2.beforeElement) : this.treeAdapter.insertText(location2.parent, chars);
      }
      _isSpecialElement(element5) {
        let tn = this.treeAdapter.getTagName(element5), ns = this.treeAdapter.getNamespaceURI(element5);
        return HTML.SPECIAL_ELEMENTS[ns][tn];
      }
    };
    module2.exports = Parser3;
    function aaObtainFormattingElementEntry2(p2, token) {
      let formattingElementEntry = p2.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);
      return formattingElementEntry ? p2.openElements.contains(formattingElementEntry.element) ? p2.openElements.hasInScope(token.tagName) || (formattingElementEntry = null) : (p2.activeFormattingElements.removeEntry(formattingElementEntry), formattingElementEntry = null) : genericEndTagInBody2(p2, token), formattingElementEntry;
    }
    function aaObtainFurthestBlock2(p2, formattingElementEntry) {
      let furthestBlock = null;
      for (let i = p2.openElements.stackTop; i >= 0; i--) {
        let element5 = p2.openElements.items[i];
        if (element5 === formattingElementEntry.element)
          break;
        p2._isSpecialElement(element5) && (furthestBlock = element5);
      }
      return furthestBlock || (p2.openElements.popUntilElementPopped(formattingElementEntry.element), p2.activeFormattingElements.removeEntry(formattingElementEntry)), furthestBlock;
    }
    function aaInnerLoop2(p2, furthestBlock, formattingElement) {
      let lastElement = furthestBlock, nextElement = p2.openElements.getCommonAncestor(furthestBlock);
      for (let i = 0, element5 = nextElement; element5 !== formattingElement; i++, element5 = nextElement) {
        nextElement = p2.openElements.getCommonAncestor(element5);
        let elementEntry = p2.activeFormattingElements.getElementEntry(element5), counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER2;
        !elementEntry || counterOverflow ? (counterOverflow && p2.activeFormattingElements.removeEntry(elementEntry), p2.openElements.remove(element5)) : (element5 = aaRecreateElementFromEntry2(p2, elementEntry), lastElement === furthestBlock && (p2.activeFormattingElements.bookmark = elementEntry), p2.treeAdapter.detachNode(lastElement), p2.treeAdapter.appendChild(element5, lastElement), lastElement = element5);
      }
      return lastElement;
    }
    function aaRecreateElementFromEntry2(p2, elementEntry) {
      let ns = p2.treeAdapter.getNamespaceURI(elementEntry.element), newElement = p2.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);
      return p2.openElements.replace(elementEntry.element, newElement), elementEntry.element = newElement, newElement;
    }
    function aaInsertLastNodeInCommonAncestor2(p2, commonAncestor, lastElement) {
      if (p2._isElementCausesFosterParenting(commonAncestor))
        p2._fosterParentElement(lastElement);
      else {
        let tn = p2.treeAdapter.getTagName(commonAncestor), ns = p2.treeAdapter.getNamespaceURI(commonAncestor);
        tn === $2.TEMPLATE && ns === NS2.HTML && (commonAncestor = p2.treeAdapter.getTemplateContent(commonAncestor)), p2.treeAdapter.appendChild(commonAncestor, lastElement);
      }
    }
    function aaReplaceFormattingElement2(p2, furthestBlock, formattingElementEntry) {
      let ns = p2.treeAdapter.getNamespaceURI(formattingElementEntry.element), token = formattingElementEntry.token, newElement = p2.treeAdapter.createElement(token.tagName, ns, token.attrs);
      p2._adoptNodes(furthestBlock, newElement), p2.treeAdapter.appendChild(furthestBlock, newElement), p2.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token), p2.activeFormattingElements.removeEntry(formattingElementEntry), p2.openElements.remove(formattingElementEntry.element), p2.openElements.insertAfter(furthestBlock, newElement);
    }
    function callAdoptionAgency2(p2, token) {
      let formattingElementEntry;
      for (let i = 0; i < AA_OUTER_LOOP_ITER2 && (formattingElementEntry = aaObtainFormattingElementEntry2(p2, token, formattingElementEntry), !!formattingElementEntry); i++) {
        let furthestBlock = aaObtainFurthestBlock2(p2, formattingElementEntry);
        if (!furthestBlock)
          break;
        p2.activeFormattingElements.bookmark = formattingElementEntry;
        let lastElement = aaInnerLoop2(p2, furthestBlock, formattingElementEntry.element), commonAncestor = p2.openElements.getCommonAncestor(formattingElementEntry.element);
        p2.treeAdapter.detachNode(lastElement), aaInsertLastNodeInCommonAncestor2(p2, commonAncestor, lastElement), aaReplaceFormattingElement2(p2, furthestBlock, formattingElementEntry);
      }
    }
    function ignoreToken() {
    }
    function misplacedDoctype(p2) {
      p2._err(ERR2.misplacedDoctype);
    }
    function appendComment2(p2, token) {
      p2._appendCommentNode(token, p2.openElements.currentTmplContent || p2.openElements.current);
    }
    function appendCommentToRootHtmlElement2(p2, token) {
      p2._appendCommentNode(token, p2.openElements.items[0]);
    }
    function appendCommentToDocument2(p2, token) {
      p2._appendCommentNode(token, p2.document);
    }
    function insertCharacters(p2, token) {
      p2._insertCharacters(token);
    }
    function stopParsing2(p2) {
      p2.stopped = !0;
    }
    function doctypeInInitialMode2(p2, token) {
      p2._setDocumentType(token);
      let mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype3.getDocumentMode(token);
      doctype3.isConforming(token) || p2._err(ERR2.nonConformingDoctype), p2.treeAdapter.setDocumentMode(p2.document, mode), p2.insertionMode = BEFORE_HTML_MODE;
    }
    function tokenInInitialMode2(p2, token) {
      p2._err(ERR2.missingDoctype, { beforeToken: !0 }), p2.treeAdapter.setDocumentMode(p2.document, HTML.DOCUMENT_MODE.QUIRKS), p2.insertionMode = BEFORE_HTML_MODE, p2._processToken(token);
    }
    function startTagBeforeHtml2(p2, token) {
      token.tagName === $2.HTML ? (p2._insertElement(token, NS2.HTML), p2.insertionMode = BEFORE_HEAD_MODE) : tokenBeforeHtml2(p2, token);
    }
    function endTagBeforeHtml2(p2, token) {
      let tn = token.tagName;
      (tn === $2.HTML || tn === $2.HEAD || tn === $2.BODY || tn === $2.BR) && tokenBeforeHtml2(p2, token);
    }
    function tokenBeforeHtml2(p2, token) {
      p2._insertFakeRootElement(), p2.insertionMode = BEFORE_HEAD_MODE, p2._processToken(token);
    }
    function startTagBeforeHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.HEAD ? (p2._insertElement(token, NS2.HTML), p2.headElement = p2.openElements.current, p2.insertionMode = IN_HEAD_MODE) : tokenBeforeHead2(p2, token);
    }
    function endTagBeforeHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HEAD || tn === $2.BODY || tn === $2.HTML || tn === $2.BR ? tokenBeforeHead2(p2, token) : p2._err(ERR2.endTagWithoutMatchingOpenElement);
    }
    function tokenBeforeHead2(p2, token) {
      p2._insertFakeElement($2.HEAD), p2.headElement = p2.openElements.current, p2.insertionMode = IN_HEAD_MODE, p2._processToken(token);
    }
    function startTagInHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.BASE || tn === $2.BASEFONT || tn === $2.BGSOUND || tn === $2.LINK || tn === $2.META ? (p2._appendElement(token, NS2.HTML), token.ackSelfClosing = !0) : tn === $2.TITLE ? p2._switchToTextParsing(token, Tokenizer2.MODE.RCDATA) : tn === $2.NOSCRIPT ? p2.options.scriptingEnabled ? p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT) : (p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_HEAD_NO_SCRIPT_MODE) : tn === $2.NOFRAMES || tn === $2.STYLE ? p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT) : tn === $2.SCRIPT ? p2._switchToTextParsing(token, Tokenizer2.MODE.SCRIPT_DATA) : tn === $2.TEMPLATE ? (p2._insertTemplate(token, NS2.HTML), p2.activeFormattingElements.insertMarker(), p2.framesetOk = !1, p2.insertionMode = IN_TEMPLATE_MODE, p2._pushTmplInsertionMode(IN_TEMPLATE_MODE)) : tn === $2.HEAD ? p2._err(ERR2.misplacedStartTagForHeadElement) : tokenInHead2(p2, token);
    }
    function endTagInHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HEAD ? (p2.openElements.pop(), p2.insertionMode = AFTER_HEAD_MODE) : tn === $2.BODY || tn === $2.BR || tn === $2.HTML ? tokenInHead2(p2, token) : tn === $2.TEMPLATE && p2.openElements.tmplCount > 0 ? (p2.openElements.generateImpliedEndTagsThoroughly(), p2.openElements.currentTagName !== $2.TEMPLATE && p2._err(ERR2.closingOfElementWithOpenChildElements), p2.openElements.popUntilTagNamePopped($2.TEMPLATE), p2.activeFormattingElements.clearToLastMarker(), p2._popTmplInsertionMode(), p2._resetInsertionMode()) : p2._err(ERR2.endTagWithoutMatchingOpenElement);
    }
    function tokenInHead2(p2, token) {
      p2.openElements.pop(), p2.insertionMode = AFTER_HEAD_MODE, p2._processToken(token);
    }
    function startTagInHeadNoScript2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.BASEFONT || tn === $2.BGSOUND || tn === $2.HEAD || tn === $2.LINK || tn === $2.META || tn === $2.NOFRAMES || tn === $2.STYLE ? startTagInHead2(p2, token) : tn === $2.NOSCRIPT ? p2._err(ERR2.nestedNoscriptInHead) : tokenInHeadNoScript2(p2, token);
    }
    function endTagInHeadNoScript2(p2, token) {
      let tn = token.tagName;
      tn === $2.NOSCRIPT ? (p2.openElements.pop(), p2.insertionMode = IN_HEAD_MODE) : tn === $2.BR ? tokenInHeadNoScript2(p2, token) : p2._err(ERR2.endTagWithoutMatchingOpenElement);
    }
    function tokenInHeadNoScript2(p2, token) {
      let errCode = token.type === Tokenizer2.EOF_TOKEN ? ERR2.openElementsLeftAfterEof : ERR2.disallowedContentInNoscriptInHead;
      p2._err(errCode), p2.openElements.pop(), p2.insertionMode = IN_HEAD_MODE, p2._processToken(token);
    }
    function startTagAfterHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.BODY ? (p2._insertElement(token, NS2.HTML), p2.framesetOk = !1, p2.insertionMode = IN_BODY_MODE) : tn === $2.FRAMESET ? (p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_FRAMESET_MODE) : tn === $2.BASE || tn === $2.BASEFONT || tn === $2.BGSOUND || tn === $2.LINK || tn === $2.META || tn === $2.NOFRAMES || tn === $2.SCRIPT || tn === $2.STYLE || tn === $2.TEMPLATE || tn === $2.TITLE ? (p2._err(ERR2.abandonedHeadElementChild), p2.openElements.push(p2.headElement), startTagInHead2(p2, token), p2.openElements.remove(p2.headElement)) : tn === $2.HEAD ? p2._err(ERR2.misplacedStartTagForHeadElement) : tokenAfterHead2(p2, token);
    }
    function endTagAfterHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.BODY || tn === $2.HTML || tn === $2.BR ? tokenAfterHead2(p2, token) : tn === $2.TEMPLATE ? endTagInHead2(p2, token) : p2._err(ERR2.endTagWithoutMatchingOpenElement);
    }
    function tokenAfterHead2(p2, token) {
      p2._insertFakeElement($2.BODY), p2.insertionMode = IN_BODY_MODE, p2._processToken(token);
    }
    function whitespaceCharacterInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertCharacters(token);
    }
    function characterInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertCharacters(token), p2.framesetOk = !1;
    }
    function htmlStartTagInBody2(p2, token) {
      p2.openElements.tmplCount === 0 && p2.treeAdapter.adoptAttributes(p2.openElements.items[0], token.attrs);
    }
    function bodyStartTagInBody2(p2, token) {
      let bodyElement = p2.openElements.tryPeekProperlyNestedBodyElement();
      bodyElement && p2.openElements.tmplCount === 0 && (p2.framesetOk = !1, p2.treeAdapter.adoptAttributes(bodyElement, token.attrs));
    }
    function framesetStartTagInBody2(p2, token) {
      let bodyElement = p2.openElements.tryPeekProperlyNestedBodyElement();
      p2.framesetOk && bodyElement && (p2.treeAdapter.detachNode(bodyElement), p2.openElements.popAllUpToHtmlElement(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_FRAMESET_MODE);
    }
    function addressStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML);
    }
    function numberedHeaderStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement();
      let tn = p2.openElements.currentTagName;
      (tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6) && p2.openElements.pop(), p2._insertElement(token, NS2.HTML);
    }
    function preStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML), p2.skipNextNewLine = !0, p2.framesetOk = !1;
    }
    function formStartTagInBody2(p2, token) {
      let inTemplate = p2.openElements.tmplCount > 0;
      (!p2.formElement || inTemplate) && (p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML), inTemplate || (p2.formElement = p2.openElements.current));
    }
    function listItemStartTagInBody2(p2, token) {
      p2.framesetOk = !1;
      let tn = token.tagName;
      for (let i = p2.openElements.stackTop; i >= 0; i--) {
        let element5 = p2.openElements.items[i], elementTn = p2.treeAdapter.getTagName(element5), closeTn = null;
        if (tn === $2.LI && elementTn === $2.LI ? closeTn = $2.LI : (tn === $2.DD || tn === $2.DT) && (elementTn === $2.DD || elementTn === $2.DT) && (closeTn = elementTn), closeTn) {
          p2.openElements.generateImpliedEndTagsWithExclusion(closeTn), p2.openElements.popUntilTagNamePopped(closeTn);
          break;
        }
        if (elementTn !== $2.ADDRESS && elementTn !== $2.DIV && elementTn !== $2.P && p2._isSpecialElement(element5))
          break;
      }
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML);
    }
    function plaintextStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML), p2.tokenizer.state = Tokenizer2.MODE.PLAINTEXT;
    }
    function buttonStartTagInBody2(p2, token) {
      p2.openElements.hasInScope($2.BUTTON) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped($2.BUTTON)), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.framesetOk = !1;
    }
    function aStartTagInBody2(p2, token) {
      let activeElementEntry = p2.activeFormattingElements.getElementEntryInScopeWithTagName($2.A);
      activeElementEntry && (callAdoptionAgency2(p2, token), p2.openElements.remove(activeElementEntry.element), p2.activeFormattingElements.removeEntry(activeElementEntry)), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
    }
    function bStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
    }
    function nobrStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2.openElements.hasInScope($2.NOBR) && (callAdoptionAgency2(p2, token), p2._reconstructActiveFormattingElements()), p2._insertElement(token, NS2.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
    }
    function appletStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.activeFormattingElements.insertMarker(), p2.framesetOk = !1;
    }
    function tableStartTagInBody2(p2, token) {
      p2.treeAdapter.getDocumentMode(p2.document) !== HTML.DOCUMENT_MODE.QUIRKS && p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML), p2.framesetOk = !1, p2.insertionMode = IN_TABLE_MODE;
    }
    function areaStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._appendElement(token, NS2.HTML), p2.framesetOk = !1, token.ackSelfClosing = !0;
    }
    function inputStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._appendElement(token, NS2.HTML);
      let inputType = Tokenizer2.getTokenAttr(token, ATTRS2.TYPE);
      (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE2) && (p2.framesetOk = !1), token.ackSelfClosing = !0;
    }
    function paramStartTagInBody2(p2, token) {
      p2._appendElement(token, NS2.HTML), token.ackSelfClosing = !0;
    }
    function hrStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._appendElement(token, NS2.HTML), p2.framesetOk = !1, token.ackSelfClosing = !0;
    }
    function imageStartTagInBody2(p2, token) {
      token.tagName = $2.IMG, areaStartTagInBody2(p2, token);
    }
    function textareaStartTagInBody2(p2, token) {
      p2._insertElement(token, NS2.HTML), p2.skipNextNewLine = !0, p2.tokenizer.state = Tokenizer2.MODE.RCDATA, p2.originalInsertionMode = p2.insertionMode, p2.framesetOk = !1, p2.insertionMode = TEXT_MODE;
    }
    function xmpStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._reconstructActiveFormattingElements(), p2.framesetOk = !1, p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT);
    }
    function iframeStartTagInBody2(p2, token) {
      p2.framesetOk = !1, p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT);
    }
    function noembedStartTagInBody2(p2, token) {
      p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT);
    }
    function selectStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.framesetOk = !1, p2.insertionMode === IN_TABLE_MODE || p2.insertionMode === IN_CAPTION_MODE || p2.insertionMode === IN_TABLE_BODY_MODE || p2.insertionMode === IN_ROW_MODE || p2.insertionMode === IN_CELL_MODE ? p2.insertionMode = IN_SELECT_IN_TABLE_MODE : p2.insertionMode = IN_SELECT_MODE;
    }
    function optgroupStartTagInBody2(p2, token) {
      p2.openElements.currentTagName === $2.OPTION && p2.openElements.pop(), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML);
    }
    function rbStartTagInBody2(p2, token) {
      p2.openElements.hasInScope($2.RUBY) && p2.openElements.generateImpliedEndTags(), p2._insertElement(token, NS2.HTML);
    }
    function rtStartTagInBody2(p2, token) {
      p2.openElements.hasInScope($2.RUBY) && p2.openElements.generateImpliedEndTagsWithExclusion($2.RTC), p2._insertElement(token, NS2.HTML);
    }
    function menuStartTagInBody(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML);
    }
    function mathStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), foreignContent.adjustTokenMathMLAttrs(token), foreignContent.adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, NS2.MATHML) : p2._insertElement(token, NS2.MATHML), token.ackSelfClosing = !0;
    }
    function svgStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), foreignContent.adjustTokenSVGAttrs(token), foreignContent.adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, NS2.SVG) : p2._insertElement(token, NS2.SVG), token.ackSelfClosing = !0;
    }
    function genericStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML);
    }
    function startTagInBody2(p2, token) {
      let tn = token.tagName;
      switch (tn.length) {
        case 1:
          tn === $2.I || tn === $2.S || tn === $2.B || tn === $2.U ? bStartTagInBody2(p2, token) : tn === $2.P ? addressStartTagInBody2(p2, token) : tn === $2.A ? aStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token);
          break;
        case 2:
          tn === $2.DL || tn === $2.OL || tn === $2.UL ? addressStartTagInBody2(p2, token) : tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6 ? numberedHeaderStartTagInBody2(p2, token) : tn === $2.LI || tn === $2.DD || tn === $2.DT ? listItemStartTagInBody2(p2, token) : tn === $2.EM || tn === $2.TT ? bStartTagInBody2(p2, token) : tn === $2.BR ? areaStartTagInBody2(p2, token) : tn === $2.HR ? hrStartTagInBody2(p2, token) : tn === $2.RB ? rbStartTagInBody2(p2, token) : tn === $2.RT || tn === $2.RP ? rtStartTagInBody2(p2, token) : tn !== $2.TH && tn !== $2.TD && tn !== $2.TR && genericStartTagInBody2(p2, token);
          break;
        case 3:
          tn === $2.DIV || tn === $2.DIR || tn === $2.NAV ? addressStartTagInBody2(p2, token) : tn === $2.PRE ? preStartTagInBody2(p2, token) : tn === $2.BIG ? bStartTagInBody2(p2, token) : tn === $2.IMG || tn === $2.WBR ? areaStartTagInBody2(p2, token) : tn === $2.XMP ? xmpStartTagInBody2(p2, token) : tn === $2.SVG ? svgStartTagInBody2(p2, token) : tn === $2.RTC ? rbStartTagInBody2(p2, token) : tn !== $2.COL && genericStartTagInBody2(p2, token);
          break;
        case 4:
          tn === $2.HTML ? htmlStartTagInBody2(p2, token) : tn === $2.BASE || tn === $2.LINK || tn === $2.META ? startTagInHead2(p2, token) : tn === $2.BODY ? bodyStartTagInBody2(p2, token) : tn === $2.MAIN || tn === $2.MENU ? addressStartTagInBody2(p2, token) : tn === $2.FORM ? formStartTagInBody2(p2, token) : tn === $2.CODE || tn === $2.FONT ? bStartTagInBody2(p2, token) : tn === $2.NOBR ? nobrStartTagInBody2(p2, token) : tn === $2.AREA ? areaStartTagInBody2(p2, token) : tn === $2.MATH ? mathStartTagInBody2(p2, token) : tn === $2.MENU ? menuStartTagInBody(p2, token) : tn !== $2.HEAD && genericStartTagInBody2(p2, token);
          break;
        case 5:
          tn === $2.STYLE || tn === $2.TITLE ? startTagInHead2(p2, token) : tn === $2.ASIDE ? addressStartTagInBody2(p2, token) : tn === $2.SMALL ? bStartTagInBody2(p2, token) : tn === $2.TABLE ? tableStartTagInBody2(p2, token) : tn === $2.EMBED ? areaStartTagInBody2(p2, token) : tn === $2.INPUT ? inputStartTagInBody2(p2, token) : tn === $2.PARAM || tn === $2.TRACK ? paramStartTagInBody2(p2, token) : tn === $2.IMAGE ? imageStartTagInBody2(p2, token) : tn !== $2.FRAME && tn !== $2.TBODY && tn !== $2.TFOOT && tn !== $2.THEAD && genericStartTagInBody2(p2, token);
          break;
        case 6:
          tn === $2.SCRIPT ? startTagInHead2(p2, token) : tn === $2.CENTER || tn === $2.FIGURE || tn === $2.FOOTER || tn === $2.HEADER || tn === $2.HGROUP || tn === $2.DIALOG ? addressStartTagInBody2(p2, token) : tn === $2.BUTTON ? buttonStartTagInBody2(p2, token) : tn === $2.STRIKE || tn === $2.STRONG ? bStartTagInBody2(p2, token) : tn === $2.APPLET || tn === $2.OBJECT ? appletStartTagInBody2(p2, token) : tn === $2.KEYGEN ? areaStartTagInBody2(p2, token) : tn === $2.SOURCE ? paramStartTagInBody2(p2, token) : tn === $2.IFRAME ? iframeStartTagInBody2(p2, token) : tn === $2.SELECT ? selectStartTagInBody2(p2, token) : tn === $2.OPTION ? optgroupStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token);
          break;
        case 7:
          tn === $2.BGSOUND ? startTagInHead2(p2, token) : tn === $2.DETAILS || tn === $2.ADDRESS || tn === $2.ARTICLE || tn === $2.SECTION || tn === $2.SUMMARY ? addressStartTagInBody2(p2, token) : tn === $2.LISTING ? preStartTagInBody2(p2, token) : tn === $2.MARQUEE ? appletStartTagInBody2(p2, token) : tn === $2.NOEMBED ? noembedStartTagInBody2(p2, token) : tn !== $2.CAPTION && genericStartTagInBody2(p2, token);
          break;
        case 8:
          tn === $2.BASEFONT ? startTagInHead2(p2, token) : tn === $2.FRAMESET ? framesetStartTagInBody2(p2, token) : tn === $2.FIELDSET ? addressStartTagInBody2(p2, token) : tn === $2.TEXTAREA ? textareaStartTagInBody2(p2, token) : tn === $2.TEMPLATE ? startTagInHead2(p2, token) : tn === $2.NOSCRIPT ? p2.options.scriptingEnabled ? noembedStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token) : tn === $2.OPTGROUP ? optgroupStartTagInBody2(p2, token) : tn !== $2.COLGROUP && genericStartTagInBody2(p2, token);
          break;
        case 9:
          tn === $2.PLAINTEXT ? plaintextStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token);
          break;
        case 10:
          tn === $2.BLOCKQUOTE || tn === $2.FIGCAPTION ? addressStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token);
          break;
        default:
          genericStartTagInBody2(p2, token);
      }
    }
    function bodyEndTagInBody2(p2) {
      p2.openElements.hasInScope($2.BODY) && (p2.insertionMode = AFTER_BODY_MODE);
    }
    function htmlEndTagInBody2(p2, token) {
      p2.openElements.hasInScope($2.BODY) && (p2.insertionMode = AFTER_BODY_MODE, p2._processToken(token));
    }
    function addressEndTagInBody2(p2, token) {
      let tn = token.tagName;
      p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn));
    }
    function formEndTagInBody2(p2) {
      let inTemplate = p2.openElements.tmplCount > 0, formElement = p2.formElement;
      inTemplate || (p2.formElement = null), (formElement || inTemplate) && p2.openElements.hasInScope($2.FORM) && (p2.openElements.generateImpliedEndTags(), inTemplate ? p2.openElements.popUntilTagNamePopped($2.FORM) : p2.openElements.remove(formElement));
    }
    function pEndTagInBody2(p2) {
      p2.openElements.hasInButtonScope($2.P) || p2._insertFakeElement($2.P), p2._closePElement();
    }
    function liEndTagInBody2(p2) {
      p2.openElements.hasInListItemScope($2.LI) && (p2.openElements.generateImpliedEndTagsWithExclusion($2.LI), p2.openElements.popUntilTagNamePopped($2.LI));
    }
    function ddEndTagInBody2(p2, token) {
      let tn = token.tagName;
      p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTagsWithExclusion(tn), p2.openElements.popUntilTagNamePopped(tn));
    }
    function numberedHeaderEndTagInBody2(p2) {
      p2.openElements.hasNumberedHeaderInScope() && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilNumberedHeaderPopped());
    }
    function appletEndTagInBody2(p2, token) {
      let tn = token.tagName;
      p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn), p2.activeFormattingElements.clearToLastMarker());
    }
    function brEndTagInBody2(p2) {
      p2._reconstructActiveFormattingElements(), p2._insertFakeElement($2.BR), p2.openElements.pop(), p2.framesetOk = !1;
    }
    function genericEndTagInBody2(p2, token) {
      let tn = token.tagName;
      for (let i = p2.openElements.stackTop; i > 0; i--) {
        let element5 = p2.openElements.items[i];
        if (p2.treeAdapter.getTagName(element5) === tn) {
          p2.openElements.generateImpliedEndTagsWithExclusion(tn), p2.openElements.popUntilElementPopped(element5);
          break;
        }
        if (p2._isSpecialElement(element5))
          break;
      }
    }
    function endTagInBody2(p2, token) {
      let tn = token.tagName;
      switch (tn.length) {
        case 1:
          tn === $2.A || tn === $2.B || tn === $2.I || tn === $2.S || tn === $2.U ? callAdoptionAgency2(p2, token) : tn === $2.P ? pEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 2:
          tn === $2.DL || tn === $2.UL || tn === $2.OL ? addressEndTagInBody2(p2, token) : tn === $2.LI ? liEndTagInBody2(p2, token) : tn === $2.DD || tn === $2.DT ? ddEndTagInBody2(p2, token) : tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6 ? numberedHeaderEndTagInBody2(p2, token) : tn === $2.BR ? brEndTagInBody2(p2, token) : tn === $2.EM || tn === $2.TT ? callAdoptionAgency2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 3:
          tn === $2.BIG ? callAdoptionAgency2(p2, token) : tn === $2.DIR || tn === $2.DIV || tn === $2.NAV || tn === $2.PRE ? addressEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 4:
          tn === $2.BODY ? bodyEndTagInBody2(p2, token) : tn === $2.HTML ? htmlEndTagInBody2(p2, token) : tn === $2.FORM ? formEndTagInBody2(p2, token) : tn === $2.CODE || tn === $2.FONT || tn === $2.NOBR ? callAdoptionAgency2(p2, token) : tn === $2.MAIN || tn === $2.MENU ? addressEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 5:
          tn === $2.ASIDE ? addressEndTagInBody2(p2, token) : tn === $2.SMALL ? callAdoptionAgency2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 6:
          tn === $2.CENTER || tn === $2.FIGURE || tn === $2.FOOTER || tn === $2.HEADER || tn === $2.HGROUP || tn === $2.DIALOG ? addressEndTagInBody2(p2, token) : tn === $2.APPLET || tn === $2.OBJECT ? appletEndTagInBody2(p2, token) : tn === $2.STRIKE || tn === $2.STRONG ? callAdoptionAgency2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 7:
          tn === $2.ADDRESS || tn === $2.ARTICLE || tn === $2.DETAILS || tn === $2.SECTION || tn === $2.SUMMARY || tn === $2.LISTING ? addressEndTagInBody2(p2, token) : tn === $2.MARQUEE ? appletEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 8:
          tn === $2.FIELDSET ? addressEndTagInBody2(p2, token) : tn === $2.TEMPLATE ? endTagInHead2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 10:
          tn === $2.BLOCKQUOTE || tn === $2.FIGCAPTION ? addressEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        default:
          genericEndTagInBody2(p2, token);
      }
    }
    function eofInBody2(p2, token) {
      p2.tmplInsertionModeStackTop > -1 ? eofInTemplate2(p2, token) : p2.stopped = !0;
    }
    function endTagInText2(p2, token) {
      token.tagName === $2.SCRIPT && (p2.pendingScript = p2.openElements.current), p2.openElements.pop(), p2.insertionMode = p2.originalInsertionMode;
    }
    function eofInText2(p2, token) {
      p2._err(ERR2.eofInElementThatCanContainOnlyText), p2.openElements.pop(), p2.insertionMode = p2.originalInsertionMode, p2._processToken(token);
    }
    function characterInTable2(p2, token) {
      let curTn = p2.openElements.currentTagName;
      curTn === $2.TABLE || curTn === $2.TBODY || curTn === $2.TFOOT || curTn === $2.THEAD || curTn === $2.TR ? (p2.pendingCharacterTokens = [], p2.hasNonWhitespacePendingCharacterToken = !1, p2.originalInsertionMode = p2.insertionMode, p2.insertionMode = IN_TABLE_TEXT_MODE, p2._processToken(token)) : tokenInTable2(p2, token);
    }
    function captionStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2.activeFormattingElements.insertMarker(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_CAPTION_MODE;
    }
    function colgroupStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_COLUMN_GROUP_MODE;
    }
    function colStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2._insertFakeElement($2.COLGROUP), p2.insertionMode = IN_COLUMN_GROUP_MODE, p2._processToken(token);
    }
    function tbodyStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_TABLE_BODY_MODE;
    }
    function tdStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2._insertFakeElement($2.TBODY), p2.insertionMode = IN_TABLE_BODY_MODE, p2._processToken(token);
    }
    function tableStartTagInTable2(p2, token) {
      p2.openElements.hasInTableScope($2.TABLE) && (p2.openElements.popUntilTagNamePopped($2.TABLE), p2._resetInsertionMode(), p2._processToken(token));
    }
    function inputStartTagInTable2(p2, token) {
      let inputType = Tokenizer2.getTokenAttr(token, ATTRS2.TYPE);
      inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE2 ? p2._appendElement(token, NS2.HTML) : tokenInTable2(p2, token), token.ackSelfClosing = !0;
    }
    function formStartTagInTable2(p2, token) {
      !p2.formElement && p2.openElements.tmplCount === 0 && (p2._insertElement(token, NS2.HTML), p2.formElement = p2.openElements.current, p2.openElements.pop());
    }
    function startTagInTable2(p2, token) {
      let tn = token.tagName;
      switch (tn.length) {
        case 2:
          tn === $2.TD || tn === $2.TH || tn === $2.TR ? tdStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 3:
          tn === $2.COL ? colStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 4:
          tn === $2.FORM ? formStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 5:
          tn === $2.TABLE ? tableStartTagInTable2(p2, token) : tn === $2.STYLE ? startTagInHead2(p2, token) : tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD ? tbodyStartTagInTable2(p2, token) : tn === $2.INPUT ? inputStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 6:
          tn === $2.SCRIPT ? startTagInHead2(p2, token) : tokenInTable2(p2, token);
          break;
        case 7:
          tn === $2.CAPTION ? captionStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 8:
          tn === $2.COLGROUP ? colgroupStartTagInTable2(p2, token) : tn === $2.TEMPLATE ? startTagInHead2(p2, token) : tokenInTable2(p2, token);
          break;
        default:
          tokenInTable2(p2, token);
      }
    }
    function endTagInTable2(p2, token) {
      let tn = token.tagName;
      tn === $2.TABLE ? p2.openElements.hasInTableScope($2.TABLE) && (p2.openElements.popUntilTagNamePopped($2.TABLE), p2._resetInsertionMode()) : tn === $2.TEMPLATE ? endTagInHead2(p2, token) : tn !== $2.BODY && tn !== $2.CAPTION && tn !== $2.COL && tn !== $2.COLGROUP && tn !== $2.HTML && tn !== $2.TBODY && tn !== $2.TD && tn !== $2.TFOOT && tn !== $2.TH && tn !== $2.THEAD && tn !== $2.TR && tokenInTable2(p2, token);
    }
    function tokenInTable2(p2, token) {
      let savedFosterParentingState = p2.fosterParentingEnabled;
      p2.fosterParentingEnabled = !0, p2._processTokenInBodyMode(token), p2.fosterParentingEnabled = savedFosterParentingState;
    }
    function whitespaceCharacterInTableText2(p2, token) {
      p2.pendingCharacterTokens.push(token);
    }
    function characterInTableText2(p2, token) {
      p2.pendingCharacterTokens.push(token), p2.hasNonWhitespacePendingCharacterToken = !0;
    }
    function tokenInTableText2(p2, token) {
      let i = 0;
      if (p2.hasNonWhitespacePendingCharacterToken)
        for (; i < p2.pendingCharacterTokens.length; i++)
          tokenInTable2(p2, p2.pendingCharacterTokens[i]);
      else
        for (; i < p2.pendingCharacterTokens.length; i++)
          p2._insertCharacters(p2.pendingCharacterTokens[i]);
      p2.insertionMode = p2.originalInsertionMode, p2._processToken(token);
    }
    function startTagInCaption2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.COL || tn === $2.COLGROUP || tn === $2.TBODY || tn === $2.TD || tn === $2.TFOOT || tn === $2.TH || tn === $2.THEAD || tn === $2.TR ? p2.openElements.hasInTableScope($2.CAPTION) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped($2.CAPTION), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = IN_TABLE_MODE, p2._processToken(token)) : startTagInBody2(p2, token);
    }
    function endTagInCaption2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.TABLE ? p2.openElements.hasInTableScope($2.CAPTION) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped($2.CAPTION), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = IN_TABLE_MODE, tn === $2.TABLE && p2._processToken(token)) : tn !== $2.BODY && tn !== $2.COL && tn !== $2.COLGROUP && tn !== $2.HTML && tn !== $2.TBODY && tn !== $2.TD && tn !== $2.TFOOT && tn !== $2.TH && tn !== $2.THEAD && tn !== $2.TR && endTagInBody2(p2, token);
    }
    function startTagInColumnGroup2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.COL ? (p2._appendElement(token, NS2.HTML), token.ackSelfClosing = !0) : tn === $2.TEMPLATE ? startTagInHead2(p2, token) : tokenInColumnGroup2(p2, token);
    }
    function endTagInColumnGroup2(p2, token) {
      let tn = token.tagName;
      tn === $2.COLGROUP ? p2.openElements.currentTagName === $2.COLGROUP && (p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE) : tn === $2.TEMPLATE ? endTagInHead2(p2, token) : tn !== $2.COL && tokenInColumnGroup2(p2, token);
    }
    function tokenInColumnGroup2(p2, token) {
      p2.openElements.currentTagName === $2.COLGROUP && (p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE, p2._processToken(token));
    }
    function startTagInTableBody2(p2, token) {
      let tn = token.tagName;
      tn === $2.TR ? (p2.openElements.clearBackToTableBodyContext(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_ROW_MODE) : tn === $2.TH || tn === $2.TD ? (p2.openElements.clearBackToTableBodyContext(), p2._insertFakeElement($2.TR), p2.insertionMode = IN_ROW_MODE, p2._processToken(token)) : tn === $2.CAPTION || tn === $2.COL || tn === $2.COLGROUP || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD ? p2.openElements.hasTableBodyContextInTableScope() && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE, p2._processToken(token)) : startTagInTable2(p2, token);
    }
    function endTagInTableBody2(p2, token) {
      let tn = token.tagName;
      tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD ? p2.openElements.hasInTableScope(tn) && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE) : tn === $2.TABLE ? p2.openElements.hasTableBodyContextInTableScope() && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE, p2._processToken(token)) : (tn !== $2.BODY && tn !== $2.CAPTION && tn !== $2.COL && tn !== $2.COLGROUP || tn !== $2.HTML && tn !== $2.TD && tn !== $2.TH && tn !== $2.TR) && endTagInTable2(p2, token);
    }
    function startTagInRow2(p2, token) {
      let tn = token.tagName;
      tn === $2.TH || tn === $2.TD ? (p2.openElements.clearBackToTableRowContext(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_CELL_MODE, p2.activeFormattingElements.insertMarker()) : tn === $2.CAPTION || tn === $2.COL || tn === $2.COLGROUP || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR ? p2.openElements.hasInTableScope($2.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_BODY_MODE, p2._processToken(token)) : startTagInTable2(p2, token);
    }
    function endTagInRow2(p2, token) {
      let tn = token.tagName;
      tn === $2.TR ? p2.openElements.hasInTableScope($2.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_BODY_MODE) : tn === $2.TABLE ? p2.openElements.hasInTableScope($2.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_BODY_MODE, p2._processToken(token)) : tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD ? (p2.openElements.hasInTableScope(tn) || p2.openElements.hasInTableScope($2.TR)) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_BODY_MODE, p2._processToken(token)) : (tn !== $2.BODY && tn !== $2.CAPTION && tn !== $2.COL && tn !== $2.COLGROUP || tn !== $2.HTML && tn !== $2.TD && tn !== $2.TH) && endTagInTable2(p2, token);
    }
    function startTagInCell2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.COL || tn === $2.COLGROUP || tn === $2.TBODY || tn === $2.TD || tn === $2.TFOOT || tn === $2.TH || tn === $2.THEAD || tn === $2.TR ? (p2.openElements.hasInTableScope($2.TD) || p2.openElements.hasInTableScope($2.TH)) && (p2._closeTableCell(), p2._processToken(token)) : startTagInBody2(p2, token);
    }
    function endTagInCell2(p2, token) {
      let tn = token.tagName;
      tn === $2.TD || tn === $2.TH ? p2.openElements.hasInTableScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = IN_ROW_MODE) : tn === $2.TABLE || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR ? p2.openElements.hasInTableScope(tn) && (p2._closeTableCell(), p2._processToken(token)) : tn !== $2.BODY && tn !== $2.CAPTION && tn !== $2.COL && tn !== $2.COLGROUP && tn !== $2.HTML && endTagInBody2(p2, token);
    }
    function startTagInSelect2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.OPTION ? (p2.openElements.currentTagName === $2.OPTION && p2.openElements.pop(), p2._insertElement(token, NS2.HTML)) : tn === $2.OPTGROUP ? (p2.openElements.currentTagName === $2.OPTION && p2.openElements.pop(), p2.openElements.currentTagName === $2.OPTGROUP && p2.openElements.pop(), p2._insertElement(token, NS2.HTML)) : tn === $2.INPUT || tn === $2.KEYGEN || tn === $2.TEXTAREA || tn === $2.SELECT ? p2.openElements.hasInSelectScope($2.SELECT) && (p2.openElements.popUntilTagNamePopped($2.SELECT), p2._resetInsertionMode(), tn !== $2.SELECT && p2._processToken(token)) : (tn === $2.SCRIPT || tn === $2.TEMPLATE) && startTagInHead2(p2, token);
    }
    function endTagInSelect2(p2, token) {
      let tn = token.tagName;
      if (tn === $2.OPTGROUP) {
        let prevOpenElement = p2.openElements.items[p2.openElements.stackTop - 1], prevOpenElementTn = prevOpenElement && p2.treeAdapter.getTagName(prevOpenElement);
        p2.openElements.currentTagName === $2.OPTION && prevOpenElementTn === $2.OPTGROUP && p2.openElements.pop(), p2.openElements.currentTagName === $2.OPTGROUP && p2.openElements.pop();
      } else
        tn === $2.OPTION ? p2.openElements.currentTagName === $2.OPTION && p2.openElements.pop() : tn === $2.SELECT && p2.openElements.hasInSelectScope($2.SELECT) ? (p2.openElements.popUntilTagNamePopped($2.SELECT), p2._resetInsertionMode()) : tn === $2.TEMPLATE && endTagInHead2(p2, token);
    }
    function startTagInSelectInTable2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.TABLE || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR || tn === $2.TD || tn === $2.TH ? (p2.openElements.popUntilTagNamePopped($2.SELECT), p2._resetInsertionMode(), p2._processToken(token)) : startTagInSelect2(p2, token);
    }
    function endTagInSelectInTable2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.TABLE || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR || tn === $2.TD || tn === $2.TH ? p2.openElements.hasInTableScope(tn) && (p2.openElements.popUntilTagNamePopped($2.SELECT), p2._resetInsertionMode(), p2._processToken(token)) : endTagInSelect2(p2, token);
    }
    function startTagInTemplate2(p2, token) {
      let tn = token.tagName;
      if (tn === $2.BASE || tn === $2.BASEFONT || tn === $2.BGSOUND || tn === $2.LINK || tn === $2.META || tn === $2.NOFRAMES || tn === $2.SCRIPT || tn === $2.STYLE || tn === $2.TEMPLATE || tn === $2.TITLE)
        startTagInHead2(p2, token);
      else {
        let newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;
        p2._popTmplInsertionMode(), p2._pushTmplInsertionMode(newInsertionMode), p2.insertionMode = newInsertionMode, p2._processToken(token);
      }
    }
    function endTagInTemplate2(p2, token) {
      token.tagName === $2.TEMPLATE && endTagInHead2(p2, token);
    }
    function eofInTemplate2(p2, token) {
      p2.openElements.tmplCount > 0 ? (p2.openElements.popUntilTagNamePopped($2.TEMPLATE), p2.activeFormattingElements.clearToLastMarker(), p2._popTmplInsertionMode(), p2._resetInsertionMode(), p2._processToken(token)) : p2.stopped = !0;
    }
    function startTagAfterBody2(p2, token) {
      token.tagName === $2.HTML ? startTagInBody2(p2, token) : tokenAfterBody2(p2, token);
    }
    function endTagAfterBody2(p2, token) {
      token.tagName === $2.HTML ? p2.fragmentContext || (p2.insertionMode = AFTER_AFTER_BODY_MODE) : tokenAfterBody2(p2, token);
    }
    function tokenAfterBody2(p2, token) {
      p2.insertionMode = IN_BODY_MODE, p2._processToken(token);
    }
    function startTagInFrameset2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.FRAMESET ? p2._insertElement(token, NS2.HTML) : tn === $2.FRAME ? (p2._appendElement(token, NS2.HTML), token.ackSelfClosing = !0) : tn === $2.NOFRAMES && startTagInHead2(p2, token);
    }
    function endTagInFrameset2(p2, token) {
      token.tagName === $2.FRAMESET && !p2.openElements.isRootHtmlElementCurrent() && (p2.openElements.pop(), !p2.fragmentContext && p2.openElements.currentTagName !== $2.FRAMESET && (p2.insertionMode = AFTER_FRAMESET_MODE));
    }
    function startTagAfterFrameset2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.NOFRAMES && startTagInHead2(p2, token);
    }
    function endTagAfterFrameset2(p2, token) {
      token.tagName === $2.HTML && (p2.insertionMode = AFTER_AFTER_FRAMESET_MODE);
    }
    function startTagAfterAfterBody2(p2, token) {
      token.tagName === $2.HTML ? startTagInBody2(p2, token) : tokenAfterAfterBody2(p2, token);
    }
    function tokenAfterAfterBody2(p2, token) {
      p2.insertionMode = IN_BODY_MODE, p2._processToken(token);
    }
    function startTagAfterAfterFrameset2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.NOFRAMES && startTagInHead2(p2, token);
    }
    function nullCharacterInForeignContent2(p2, token) {
      token.chars = unicode.REPLACEMENT_CHARACTER, p2._insertCharacters(token);
    }
    function characterInForeignContent2(p2, token) {
      p2._insertCharacters(token), p2.framesetOk = !1;
    }
    function startTagInForeignContent2(p2, token) {
      if (foreignContent.causesExit(token) && !p2.fragmentContext) {
        for (; p2.treeAdapter.getNamespaceURI(p2.openElements.current) !== NS2.HTML && !p2._isIntegrationPoint(p2.openElements.current); )
          p2.openElements.pop();
        p2._processToken(token);
      } else {
        let current = p2._getAdjustedCurrentElement(), currentNs = p2.treeAdapter.getNamespaceURI(current);
        currentNs === NS2.MATHML ? foreignContent.adjustTokenMathMLAttrs(token) : currentNs === NS2.SVG && (foreignContent.adjustTokenSVGTagName(token), foreignContent.adjustTokenSVGAttrs(token)), foreignContent.adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, currentNs) : p2._insertElement(token, currentNs), token.ackSelfClosing = !0;
      }
    }
    function endTagInForeignContent2(p2, token) {
      for (let i = p2.openElements.stackTop; i > 0; i--) {
        let element5 = p2.openElements.items[i];
        if (p2.treeAdapter.getNamespaceURI(element5) === NS2.HTML) {
          p2._processToken(token);
          break;
        }
        if (p2.treeAdapter.getTagName(element5).toLowerCase() === token.tagName) {
          p2.openElements.popUntilElementPopped(element5);
          break;
        }
      }
    }
  }
});

// node_modules/property-information/lib/util/schema.js
var Schema, init_schema = __esm({
  "node_modules/property-information/lib/util/schema.js"() {
    Schema = class {
      constructor(property, normal, space) {
        this.property = property, this.normal = normal, space && (this.space = space);
      }
    };
    Schema.prototype.property = {};
    Schema.prototype.normal = {};
    Schema.prototype.space = null;
  }
});

// node_modules/property-information/lib/util/merge.js
function merge(definitions2, space) {
  let property = {}, normal = {}, index2 = -1;
  for (; ++index2 < definitions2.length; )
    Object.assign(property, definitions2[index2].property), Object.assign(normal, definitions2[index2].normal);
  return new Schema(property, normal, space);
}
var init_merge = __esm({
  "node_modules/property-information/lib/util/merge.js"() {
    init_schema();
  }
});

// node_modules/property-information/lib/normalize.js
function normalize(value) {
  return value.toLowerCase();
}
var init_normalize = __esm({
  "node_modules/property-information/lib/normalize.js"() {
  }
});

// node_modules/property-information/lib/util/info.js
var Info, init_info = __esm({
  "node_modules/property-information/lib/util/info.js"() {
    Info = class {
      constructor(property, attribute) {
        this.property = property, this.attribute = attribute;
      }
    };
    Info.prototype.space = null;
    Info.prototype.boolean = !1;
    Info.prototype.booleanish = !1;
    Info.prototype.overloadedBoolean = !1;
    Info.prototype.number = !1;
    Info.prototype.commaSeparated = !1;
    Info.prototype.spaceSeparated = !1;
    Info.prototype.commaOrSpaceSeparated = !1;
    Info.prototype.mustUseProperty = !1;
    Info.prototype.defined = !1;
  }
});

// node_modules/property-information/lib/util/types.js
var types_exports = {};
__export(types_exports, {
  boolean: () => boolean,
  booleanish: () => booleanish,
  commaOrSpaceSeparated: () => commaOrSpaceSeparated,
  commaSeparated: () => commaSeparated,
  number: () => number,
  overloadedBoolean: () => overloadedBoolean,
  spaceSeparated: () => spaceSeparated
});
function increment() {
  return 2 ** ++powers;
}
var powers, boolean, booleanish, overloadedBoolean, number, spaceSeparated, commaSeparated, commaOrSpaceSeparated, init_types = __esm({
  "node_modules/property-information/lib/util/types.js"() {
    powers = 0, boolean = increment(), booleanish = increment(), overloadedBoolean = increment(), number = increment(), spaceSeparated = increment(), commaSeparated = increment(), commaOrSpaceSeparated = increment();
  }
});

// node_modules/property-information/lib/util/defined-info.js
function mark(values, key2, value) {
  value && (values[key2] = value);
}
var checks, DefinedInfo, init_defined_info = __esm({
  "node_modules/property-information/lib/util/defined-info.js"() {
    init_info();
    init_types();
    checks = Object.keys(types_exports), DefinedInfo = class extends Info {
      constructor(property, attribute, mask, space) {
        let index2 = -1;
        if (super(property, attribute), mark(this, "space", space), typeof mask == "number")
          for (; ++index2 < checks.length; ) {
            let check = checks[index2];
            mark(this, checks[index2], (mask & types_exports[check]) === types_exports[check]);
          }
      }
    };
    DefinedInfo.prototype.defined = !0;
  }
});

// node_modules/property-information/lib/util/create.js
function create(definition2) {
  let property = {}, normal = {}, prop;
  for (prop in definition2.properties)
    if (own.call(definition2.properties, prop)) {
      let value = definition2.properties[prop], info = new DefinedInfo(
        prop,
        definition2.transform(definition2.attributes || {}, prop),
        value,
        definition2.space
      );
      definition2.mustUseProperty && definition2.mustUseProperty.includes(prop) && (info.mustUseProperty = !0), property[prop] = info, normal[normalize(prop)] = prop, normal[normalize(info.attribute)] = prop;
    }
  return new Schema(property, normal, definition2.space);
}
var own, init_create = __esm({
  "node_modules/property-information/lib/util/create.js"() {
    init_normalize();
    init_schema();
    init_defined_info();
    own = {}.hasOwnProperty;
  }
});

// node_modules/property-information/lib/xlink.js
var xlink, init_xlink = __esm({
  "node_modules/property-information/lib/xlink.js"() {
    init_create();
    xlink = create({
      space: "xlink",
      transform(_, prop) {
        return "xlink:" + prop.slice(5).toLowerCase();
      },
      properties: {
        xLinkActuate: null,
        xLinkArcRole: null,
        xLinkHref: null,
        xLinkRole: null,
        xLinkShow: null,
        xLinkTitle: null,
        xLinkType: null
      }
    });
  }
});

// node_modules/property-information/lib/xml.js
var xml, init_xml = __esm({
  "node_modules/property-information/lib/xml.js"() {
    init_create();
    xml = create({
      space: "xml",
      transform(_, prop) {
        return "xml:" + prop.slice(3).toLowerCase();
      },
      properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
    });
  }
});

// node_modules/property-information/lib/util/case-sensitive-transform.js
function caseSensitiveTransform(attributes2, attribute) {
  return attribute in attributes2 ? attributes2[attribute] : attribute;
}
var init_case_sensitive_transform = __esm({
  "node_modules/property-information/lib/util/case-sensitive-transform.js"() {
  }
});

// node_modules/property-information/lib/util/case-insensitive-transform.js
function caseInsensitiveTransform(attributes2, property) {
  return caseSensitiveTransform(attributes2, property.toLowerCase());
}
var init_case_insensitive_transform = __esm({
  "node_modules/property-information/lib/util/case-insensitive-transform.js"() {
    init_case_sensitive_transform();
  }
});

// node_modules/property-information/lib/xmlns.js
var xmlns, init_xmlns = __esm({
  "node_modules/property-information/lib/xmlns.js"() {
    init_create();
    init_case_insensitive_transform();
    xmlns = create({
      space: "xmlns",
      attributes: { xmlnsxlink: "xmlns:xlink" },
      transform: caseInsensitiveTransform,
      properties: { xmlns: null, xmlnsXLink: null }
    });
  }
});

// node_modules/property-information/lib/aria.js
var aria, init_aria = __esm({
  "node_modules/property-information/lib/aria.js"() {
    init_types();
    init_create();
    aria = create({
      transform(_, prop) {
        return prop === "role" ? prop : "aria-" + prop.slice(4).toLowerCase();
      },
      properties: {
        ariaActiveDescendant: null,
        ariaAtomic: booleanish,
        ariaAutoComplete: null,
        ariaBusy: booleanish,
        ariaChecked: booleanish,
        ariaColCount: number,
        ariaColIndex: number,
        ariaColSpan: number,
        ariaControls: spaceSeparated,
        ariaCurrent: null,
        ariaDescribedBy: spaceSeparated,
        ariaDetails: null,
        ariaDisabled: booleanish,
        ariaDropEffect: spaceSeparated,
        ariaErrorMessage: null,
        ariaExpanded: booleanish,
        ariaFlowTo: spaceSeparated,
        ariaGrabbed: booleanish,
        ariaHasPopup: null,
        ariaHidden: booleanish,
        ariaInvalid: null,
        ariaKeyShortcuts: null,
        ariaLabel: null,
        ariaLabelledBy: spaceSeparated,
        ariaLevel: number,
        ariaLive: null,
        ariaModal: booleanish,
        ariaMultiLine: booleanish,
        ariaMultiSelectable: booleanish,
        ariaOrientation: null,
        ariaOwns: spaceSeparated,
        ariaPlaceholder: null,
        ariaPosInSet: number,
        ariaPressed: booleanish,
        ariaReadOnly: booleanish,
        ariaRelevant: null,
        ariaRequired: booleanish,
        ariaRoleDescription: spaceSeparated,
        ariaRowCount: number,
        ariaRowIndex: number,
        ariaRowSpan: number,
        ariaSelected: booleanish,
        ariaSetSize: number,
        ariaSort: null,
        ariaValueMax: number,
        ariaValueMin: number,
        ariaValueNow: number,
        ariaValueText: null,
        role: null
      }
    });
  }
});

// node_modules/property-information/lib/html.js
var html, init_html = __esm({
  "node_modules/property-information/lib/html.js"() {
    init_types();
    init_create();
    init_case_insensitive_transform();
    html = create({
      space: "html",
      attributes: {
        acceptcharset: "accept-charset",
        classname: "class",
        htmlfor: "for",
        httpequiv: "http-equiv"
      },
      transform: caseInsensitiveTransform,
      mustUseProperty: ["checked", "multiple", "muted", "selected"],
      properties: {
        abbr: null,
        accept: commaSeparated,
        acceptCharset: spaceSeparated,
        accessKey: spaceSeparated,
        action: null,
        allow: null,
        allowFullScreen: boolean,
        allowPaymentRequest: boolean,
        allowUserMedia: boolean,
        alt: null,
        as: null,
        async: boolean,
        autoCapitalize: null,
        autoComplete: spaceSeparated,
        autoFocus: boolean,
        autoPlay: boolean,
        capture: boolean,
        charSet: null,
        checked: boolean,
        cite: null,
        className: spaceSeparated,
        cols: number,
        colSpan: null,
        content: null,
        contentEditable: booleanish,
        controls: boolean,
        controlsList: spaceSeparated,
        coords: number | commaSeparated,
        crossOrigin: null,
        data: null,
        dateTime: null,
        decoding: null,
        default: boolean,
        defer: boolean,
        dir: null,
        dirName: null,
        disabled: boolean,
        download: overloadedBoolean,
        draggable: booleanish,
        encType: null,
        enterKeyHint: null,
        form: null,
        formAction: null,
        formEncType: null,
        formMethod: null,
        formNoValidate: boolean,
        formTarget: null,
        headers: spaceSeparated,
        height: number,
        hidden: boolean,
        high: number,
        href: null,
        hrefLang: null,
        htmlFor: spaceSeparated,
        httpEquiv: spaceSeparated,
        id: null,
        imageSizes: null,
        imageSrcSet: null,
        inputMode: null,
        integrity: null,
        is: null,
        isMap: boolean,
        itemId: null,
        itemProp: spaceSeparated,
        itemRef: spaceSeparated,
        itemScope: boolean,
        itemType: spaceSeparated,
        kind: null,
        label: null,
        lang: null,
        language: null,
        list: null,
        loading: null,
        loop: boolean,
        low: number,
        manifest: null,
        max: null,
        maxLength: number,
        media: null,
        method: null,
        min: null,
        minLength: number,
        multiple: boolean,
        muted: boolean,
        name: null,
        nonce: null,
        noModule: boolean,
        noValidate: boolean,
        onAbort: null,
        onAfterPrint: null,
        onAuxClick: null,
        onBeforeMatch: null,
        onBeforePrint: null,
        onBeforeUnload: null,
        onBlur: null,
        onCancel: null,
        onCanPlay: null,
        onCanPlayThrough: null,
        onChange: null,
        onClick: null,
        onClose: null,
        onContextLost: null,
        onContextMenu: null,
        onContextRestored: null,
        onCopy: null,
        onCueChange: null,
        onCut: null,
        onDblClick: null,
        onDrag: null,
        onDragEnd: null,
        onDragEnter: null,
        onDragExit: null,
        onDragLeave: null,
        onDragOver: null,
        onDragStart: null,
        onDrop: null,
        onDurationChange: null,
        onEmptied: null,
        onEnded: null,
        onError: null,
        onFocus: null,
        onFormData: null,
        onHashChange: null,
        onInput: null,
        onInvalid: null,
        onKeyDown: null,
        onKeyPress: null,
        onKeyUp: null,
        onLanguageChange: null,
        onLoad: null,
        onLoadedData: null,
        onLoadedMetadata: null,
        onLoadEnd: null,
        onLoadStart: null,
        onMessage: null,
        onMessageError: null,
        onMouseDown: null,
        onMouseEnter: null,
        onMouseLeave: null,
        onMouseMove: null,
        onMouseOut: null,
        onMouseOver: null,
        onMouseUp: null,
        onOffline: null,
        onOnline: null,
        onPageHide: null,
        onPageShow: null,
        onPaste: null,
        onPause: null,
        onPlay: null,
        onPlaying: null,
        onPopState: null,
        onProgress: null,
        onRateChange: null,
        onRejectionHandled: null,
        onReset: null,
        onResize: null,
        onScroll: null,
        onScrollEnd: null,
        onSecurityPolicyViolation: null,
        onSeeked: null,
        onSeeking: null,
        onSelect: null,
        onSlotChange: null,
        onStalled: null,
        onStorage: null,
        onSubmit: null,
        onSuspend: null,
        onTimeUpdate: null,
        onToggle: null,
        onUnhandledRejection: null,
        onUnload: null,
        onVolumeChange: null,
        onWaiting: null,
        onWheel: null,
        open: boolean,
        optimum: number,
        pattern: null,
        ping: spaceSeparated,
        placeholder: null,
        playsInline: boolean,
        poster: null,
        preload: null,
        readOnly: boolean,
        referrerPolicy: null,
        rel: spaceSeparated,
        required: boolean,
        reversed: boolean,
        rows: number,
        rowSpan: number,
        sandbox: spaceSeparated,
        scope: null,
        scoped: boolean,
        seamless: boolean,
        selected: boolean,
        shape: null,
        size: number,
        sizes: null,
        slot: null,
        span: number,
        spellCheck: booleanish,
        src: null,
        srcDoc: null,
        srcLang: null,
        srcSet: null,
        start: number,
        step: null,
        style: null,
        tabIndex: number,
        target: null,
        title: null,
        translate: null,
        type: null,
        typeMustMatch: boolean,
        useMap: null,
        value: booleanish,
        width: number,
        wrap: null,
        align: null,
        aLink: null,
        archive: spaceSeparated,
        axis: null,
        background: null,
        bgColor: null,
        border: number,
        borderColor: null,
        bottomMargin: number,
        cellPadding: null,
        cellSpacing: null,
        char: null,
        charOff: null,
        classId: null,
        clear: null,
        code: null,
        codeBase: null,
        codeType: null,
        color: null,
        compact: boolean,
        declare: boolean,
        event: null,
        face: null,
        frame: null,
        frameBorder: null,
        hSpace: number,
        leftMargin: number,
        link: null,
        longDesc: null,
        lowSrc: null,
        marginHeight: number,
        marginWidth: number,
        noResize: boolean,
        noHref: boolean,
        noShade: boolean,
        noWrap: boolean,
        object: null,
        profile: null,
        prompt: null,
        rev: null,
        rightMargin: number,
        rules: null,
        scheme: null,
        scrolling: booleanish,
        standby: null,
        summary: null,
        text: null,
        topMargin: number,
        valueType: null,
        version: null,
        vAlign: null,
        vLink: null,
        vSpace: number,
        allowTransparency: null,
        autoCorrect: null,
        autoSave: null,
        disablePictureInPicture: boolean,
        disableRemotePlayback: boolean,
        prefix: null,
        property: null,
        results: number,
        security: null,
        unselectable: null
      }
    });
  }
});

// node_modules/property-information/lib/svg.js
var svg, init_svg = __esm({
  "node_modules/property-information/lib/svg.js"() {
    init_types();
    init_create();
    init_case_sensitive_transform();
    svg = create({
      space: "svg",
      attributes: {
        accentHeight: "accent-height",
        alignmentBaseline: "alignment-baseline",
        arabicForm: "arabic-form",
        baselineShift: "baseline-shift",
        capHeight: "cap-height",
        className: "class",
        clipPath: "clip-path",
        clipRule: "clip-rule",
        colorInterpolation: "color-interpolation",
        colorInterpolationFilters: "color-interpolation-filters",
        colorProfile: "color-profile",
        colorRendering: "color-rendering",
        crossOrigin: "crossorigin",
        dataType: "datatype",
        dominantBaseline: "dominant-baseline",
        enableBackground: "enable-background",
        fillOpacity: "fill-opacity",
        fillRule: "fill-rule",
        floodColor: "flood-color",
        floodOpacity: "flood-opacity",
        fontFamily: "font-family",
        fontSize: "font-size",
        fontSizeAdjust: "font-size-adjust",
        fontStretch: "font-stretch",
        fontStyle: "font-style",
        fontVariant: "font-variant",
        fontWeight: "font-weight",
        glyphName: "glyph-name",
        glyphOrientationHorizontal: "glyph-orientation-horizontal",
        glyphOrientationVertical: "glyph-orientation-vertical",
        hrefLang: "hreflang",
        horizAdvX: "horiz-adv-x",
        horizOriginX: "horiz-origin-x",
        horizOriginY: "horiz-origin-y",
        imageRendering: "image-rendering",
        letterSpacing: "letter-spacing",
        lightingColor: "lighting-color",
        markerEnd: "marker-end",
        markerMid: "marker-mid",
        markerStart: "marker-start",
        navDown: "nav-down",
        navDownLeft: "nav-down-left",
        navDownRight: "nav-down-right",
        navLeft: "nav-left",
        navNext: "nav-next",
        navPrev: "nav-prev",
        navRight: "nav-right",
        navUp: "nav-up",
        navUpLeft: "nav-up-left",
        navUpRight: "nav-up-right",
        onAbort: "onabort",
        onActivate: "onactivate",
        onAfterPrint: "onafterprint",
        onBeforePrint: "onbeforeprint",
        onBegin: "onbegin",
        onCancel: "oncancel",
        onCanPlay: "oncanplay",
        onCanPlayThrough: "oncanplaythrough",
        onChange: "onchange",
        onClick: "onclick",
        onClose: "onclose",
        onCopy: "oncopy",
        onCueChange: "oncuechange",
        onCut: "oncut",
        onDblClick: "ondblclick",
        onDrag: "ondrag",
        onDragEnd: "ondragend",
        onDragEnter: "ondragenter",
        onDragExit: "ondragexit",
        onDragLeave: "ondragleave",
        onDragOver: "ondragover",
        onDragStart: "ondragstart",
        onDrop: "ondrop",
        onDurationChange: "ondurationchange",
        onEmptied: "onemptied",
        onEnd: "onend",
        onEnded: "onended",
        onError: "onerror",
        onFocus: "onfocus",
        onFocusIn: "onfocusin",
        onFocusOut: "onfocusout",
        onHashChange: "onhashchange",
        onInput: "oninput",
        onInvalid: "oninvalid",
        onKeyDown: "onkeydown",
        onKeyPress: "onkeypress",
        onKeyUp: "onkeyup",
        onLoad: "onload",
        onLoadedData: "onloadeddata",
        onLoadedMetadata: "onloadedmetadata",
        onLoadStart: "onloadstart",
        onMessage: "onmessage",
        onMouseDown: "onmousedown",
        onMouseEnter: "onmouseenter",
        onMouseLeave: "onmouseleave",
        onMouseMove: "onmousemove",
        onMouseOut: "onmouseout",
        onMouseOver: "onmouseover",
        onMouseUp: "onmouseup",
        onMouseWheel: "onmousewheel",
        onOffline: "onoffline",
        onOnline: "ononline",
        onPageHide: "onpagehide",
        onPageShow: "onpageshow",
        onPaste: "onpaste",
        onPause: "onpause",
        onPlay: "onplay",
        onPlaying: "onplaying",
        onPopState: "onpopstate",
        onProgress: "onprogress",
        onRateChange: "onratechange",
        onRepeat: "onrepeat",
        onReset: "onreset",
        onResize: "onresize",
        onScroll: "onscroll",
        onSeeked: "onseeked",
        onSeeking: "onseeking",
        onSelect: "onselect",
        onShow: "onshow",
        onStalled: "onstalled",
        onStorage: "onstorage",
        onSubmit: "onsubmit",
        onSuspend: "onsuspend",
        onTimeUpdate: "ontimeupdate",
        onToggle: "ontoggle",
        onUnload: "onunload",
        onVolumeChange: "onvolumechange",
        onWaiting: "onwaiting",
        onZoom: "onzoom",
        overlinePosition: "overline-position",
        overlineThickness: "overline-thickness",
        paintOrder: "paint-order",
        panose1: "panose-1",
        pointerEvents: "pointer-events",
        referrerPolicy: "referrerpolicy",
        renderingIntent: "rendering-intent",
        shapeRendering: "shape-rendering",
        stopColor: "stop-color",
        stopOpacity: "stop-opacity",
        strikethroughPosition: "strikethrough-position",
        strikethroughThickness: "strikethrough-thickness",
        strokeDashArray: "stroke-dasharray",
        strokeDashOffset: "stroke-dashoffset",
        strokeLineCap: "stroke-linecap",
        strokeLineJoin: "stroke-linejoin",
        strokeMiterLimit: "stroke-miterlimit",
        strokeOpacity: "stroke-opacity",
        strokeWidth: "stroke-width",
        tabIndex: "tabindex",
        textAnchor: "text-anchor",
        textDecoration: "text-decoration",
        textRendering: "text-rendering",
        typeOf: "typeof",
        underlinePosition: "underline-position",
        underlineThickness: "underline-thickness",
        unicodeBidi: "unicode-bidi",
        unicodeRange: "unicode-range",
        unitsPerEm: "units-per-em",
        vAlphabetic: "v-alphabetic",
        vHanging: "v-hanging",
        vIdeographic: "v-ideographic",
        vMathematical: "v-mathematical",
        vectorEffect: "vector-effect",
        vertAdvY: "vert-adv-y",
        vertOriginX: "vert-origin-x",
        vertOriginY: "vert-origin-y",
        wordSpacing: "word-spacing",
        writingMode: "writing-mode",
        xHeight: "x-height",
        playbackOrder: "playbackorder",
        timelineBegin: "timelinebegin"
      },
      transform: caseSensitiveTransform,
      properties: {
        about: commaOrSpaceSeparated,
        accentHeight: number,
        accumulate: null,
        additive: null,
        alignmentBaseline: null,
        alphabetic: number,
        amplitude: number,
        arabicForm: null,
        ascent: number,
        attributeName: null,
        attributeType: null,
        azimuth: number,
        bandwidth: null,
        baselineShift: null,
        baseFrequency: null,
        baseProfile: null,
        bbox: null,
        begin: null,
        bias: number,
        by: null,
        calcMode: null,
        capHeight: number,
        className: spaceSeparated,
        clip: null,
        clipPath: null,
        clipPathUnits: null,
        clipRule: null,
        color: null,
        colorInterpolation: null,
        colorInterpolationFilters: null,
        colorProfile: null,
        colorRendering: null,
        content: null,
        contentScriptType: null,
        contentStyleType: null,
        crossOrigin: null,
        cursor: null,
        cx: null,
        cy: null,
        d: null,
        dataType: null,
        defaultAction: null,
        descent: number,
        diffuseConstant: number,
        direction: null,
        display: null,
        dur: null,
        divisor: number,
        dominantBaseline: null,
        download: boolean,
        dx: null,
        dy: null,
        edgeMode: null,
        editable: null,
        elevation: number,
        enableBackground: null,
        end: null,
        event: null,
        exponent: number,
        externalResourcesRequired: null,
        fill: null,
        fillOpacity: number,
        fillRule: null,
        filter: null,
        filterRes: null,
        filterUnits: null,
        floodColor: null,
        floodOpacity: null,
        focusable: null,
        focusHighlight: null,
        fontFamily: null,
        fontSize: null,
        fontSizeAdjust: null,
        fontStretch: null,
        fontStyle: null,
        fontVariant: null,
        fontWeight: null,
        format: null,
        fr: null,
        from: null,
        fx: null,
        fy: null,
        g1: commaSeparated,
        g2: commaSeparated,
        glyphName: commaSeparated,
        glyphOrientationHorizontal: null,
        glyphOrientationVertical: null,
        glyphRef: null,
        gradientTransform: null,
        gradientUnits: null,
        handler: null,
        hanging: number,
        hatchContentUnits: null,
        hatchUnits: null,
        height: null,
        href: null,
        hrefLang: null,
        horizAdvX: number,
        horizOriginX: number,
        horizOriginY: number,
        id: null,
        ideographic: number,
        imageRendering: null,
        initialVisibility: null,
        in: null,
        in2: null,
        intercept: number,
        k: number,
        k1: number,
        k2: number,
        k3: number,
        k4: number,
        kernelMatrix: commaOrSpaceSeparated,
        kernelUnitLength: null,
        keyPoints: null,
        keySplines: null,
        keyTimes: null,
        kerning: null,
        lang: null,
        lengthAdjust: null,
        letterSpacing: null,
        lightingColor: null,
        limitingConeAngle: number,
        local: null,
        markerEnd: null,
        markerMid: null,
        markerStart: null,
        markerHeight: null,
        markerUnits: null,
        markerWidth: null,
        mask: null,
        maskContentUnits: null,
        maskUnits: null,
        mathematical: null,
        max: null,
        media: null,
        mediaCharacterEncoding: null,
        mediaContentEncodings: null,
        mediaSize: number,
        mediaTime: null,
        method: null,
        min: null,
        mode: null,
        name: null,
        navDown: null,
        navDownLeft: null,
        navDownRight: null,
        navLeft: null,
        navNext: null,
        navPrev: null,
        navRight: null,
        navUp: null,
        navUpLeft: null,
        navUpRight: null,
        numOctaves: null,
        observer: null,
        offset: null,
        onAbort: null,
        onActivate: null,
        onAfterPrint: null,
        onBeforePrint: null,
        onBegin: null,
        onCancel: null,
        onCanPlay: null,
        onCanPlayThrough: null,
        onChange: null,
        onClick: null,
        onClose: null,
        onCopy: null,
        onCueChange: null,
        onCut: null,
        onDblClick: null,
        onDrag: null,
        onDragEnd: null,
        onDragEnter: null,
        onDragExit: null,
        onDragLeave: null,
        onDragOver: null,
        onDragStart: null,
        onDrop: null,
        onDurationChange: null,
        onEmptied: null,
        onEnd: null,
        onEnded: null,
        onError: null,
        onFocus: null,
        onFocusIn: null,
        onFocusOut: null,
        onHashChange: null,
        onInput: null,
        onInvalid: null,
        onKeyDown: null,
        onKeyPress: null,
        onKeyUp: null,
        onLoad: null,
        onLoadedData: null,
        onLoadedMetadata: null,
        onLoadStart: null,
        onMessage: null,
        onMouseDown: null,
        onMouseEnter: null,
        onMouseLeave: null,
        onMouseMove: null,
        onMouseOut: null,
        onMouseOver: null,
        onMouseUp: null,
        onMouseWheel: null,
        onOffline: null,
        onOnline: null,
        onPageHide: null,
        onPageShow: null,
        onPaste: null,
        onPause: null,
        onPlay: null,
        onPlaying: null,
        onPopState: null,
        onProgress: null,
        onRateChange: null,
        onRepeat: null,
        onReset: null,
        onResize: null,
        onScroll: null,
        onSeeked: null,
        onSeeking: null,
        onSelect: null,
        onShow: null,
        onStalled: null,
        onStorage: null,
        onSubmit: null,
        onSuspend: null,
        onTimeUpdate: null,
        onToggle: null,
        onUnload: null,
        onVolumeChange: null,
        onWaiting: null,
        onZoom: null,
        opacity: null,
        operator: null,
        order: null,
        orient: null,
        orientation: null,
        origin: null,
        overflow: null,
        overlay: null,
        overlinePosition: number,
        overlineThickness: number,
        paintOrder: null,
        panose1: null,
        path: null,
        pathLength: number,
        patternContentUnits: null,
        patternTransform: null,
        patternUnits: null,
        phase: null,
        ping: spaceSeparated,
        pitch: null,
        playbackOrder: null,
        pointerEvents: null,
        points: null,
        pointsAtX: number,
        pointsAtY: number,
        pointsAtZ: number,
        preserveAlpha: null,
        preserveAspectRatio: null,
        primitiveUnits: null,
        propagate: null,
        property: commaOrSpaceSeparated,
        r: null,
        radius: null,
        referrerPolicy: null,
        refX: null,
        refY: null,
        rel: commaOrSpaceSeparated,
        rev: commaOrSpaceSeparated,
        renderingIntent: null,
        repeatCount: null,
        repeatDur: null,
        requiredExtensions: commaOrSpaceSeparated,
        requiredFeatures: commaOrSpaceSeparated,
        requiredFonts: commaOrSpaceSeparated,
        requiredFormats: commaOrSpaceSeparated,
        resource: null,
        restart: null,
        result: null,
        rotate: null,
        rx: null,
        ry: null,
        scale: null,
        seed: null,
        shapeRendering: null,
        side: null,
        slope: null,
        snapshotTime: null,
        specularConstant: number,
        specularExponent: number,
        spreadMethod: null,
        spacing: null,
        startOffset: null,
        stdDeviation: null,
        stemh: null,
        stemv: null,
        stitchTiles: null,
        stopColor: null,
        stopOpacity: null,
        strikethroughPosition: number,
        strikethroughThickness: number,
        string: null,
        stroke: null,
        strokeDashArray: commaOrSpaceSeparated,
        strokeDashOffset: null,
        strokeLineCap: null,
        strokeLineJoin: null,
        strokeMiterLimit: number,
        strokeOpacity: number,
        strokeWidth: null,
        style: null,
        surfaceScale: number,
        syncBehavior: null,
        syncBehaviorDefault: null,
        syncMaster: null,
        syncTolerance: null,
        syncToleranceDefault: null,
        systemLanguage: commaOrSpaceSeparated,
        tabIndex: number,
        tableValues: null,
        target: null,
        targetX: number,
        targetY: number,
        textAnchor: null,
        textDecoration: null,
        textRendering: null,
        textLength: null,
        timelineBegin: null,
        title: null,
        transformBehavior: null,
        type: null,
        typeOf: commaOrSpaceSeparated,
        to: null,
        transform: null,
        u1: null,
        u2: null,
        underlinePosition: number,
        underlineThickness: number,
        unicode: null,
        unicodeBidi: null,
        unicodeRange: null,
        unitsPerEm: number,
        values: null,
        vAlphabetic: number,
        vMathematical: number,
        vectorEffect: null,
        vHanging: number,
        vIdeographic: number,
        version: null,
        vertAdvY: number,
        vertOriginX: number,
        vertOriginY: number,
        viewBox: null,
        viewTarget: null,
        visibility: null,
        width: null,
        widths: null,
        wordSpacing: null,
        writingMode: null,
        x: null,
        x1: null,
        x2: null,
        xChannelSelector: null,
        xHeight: number,
        y: null,
        y1: null,
        y2: null,
        yChannelSelector: null,
        z: null,
        zoomAndPan: null
      }
    });
  }
});

// node_modules/property-information/lib/find.js
function find(schema, value) {
  let normal = normalize(value), prop = value, Type = Info;
  if (normal in schema.normal)
    return schema.property[schema.normal[normal]];
  if (normal.length > 4 && normal.slice(0, 4) === "data" && valid.test(value)) {
    if (value.charAt(4) === "-") {
      let rest = value.slice(5).replace(dash, camelcase);
      prop = "data" + rest.charAt(0).toUpperCase() + rest.slice(1);
    } else {
      let rest = value.slice(4);
      if (!dash.test(rest)) {
        let dashes = rest.replace(cap, kebab);
        dashes.charAt(0) !== "-" && (dashes = "-" + dashes), value = "data" + dashes;
      }
    }
    Type = DefinedInfo;
  }
  return new Type(prop, value);
}
function kebab($0) {
  return "-" + $0.toLowerCase();
}
function camelcase($0) {
  return $0.charAt(1).toUpperCase();
}
var valid, dash, cap, init_find = __esm({
  "node_modules/property-information/lib/find.js"() {
    init_normalize();
    init_defined_info();
    init_info();
    valid = /^data[-\w.:]+$/i, dash = /-[a-z]/g, cap = /[A-Z]/g;
  }
});

// node_modules/property-information/lib/hast-to-react.js
var hastToReact, init_hast_to_react = __esm({
  "node_modules/property-information/lib/hast-to-react.js"() {
    hastToReact = {
      classId: "classID",
      dataType: "datatype",
      itemId: "itemID",
      strokeDashArray: "strokeDasharray",
      strokeDashOffset: "strokeDashoffset",
      strokeLineCap: "strokeLinecap",
      strokeLineJoin: "strokeLinejoin",
      strokeMiterLimit: "strokeMiterlimit",
      typeOf: "typeof",
      xLinkActuate: "xlinkActuate",
      xLinkArcRole: "xlinkArcrole",
      xLinkHref: "xlinkHref",
      xLinkRole: "xlinkRole",
      xLinkShow: "xlinkShow",
      xLinkTitle: "xlinkTitle",
      xLinkType: "xlinkType",
      xmlnsXLink: "xmlnsXlink"
    };
  }
});

// node_modules/property-information/index.js
var html2, svg2, init_property_information = __esm({
  "node_modules/property-information/index.js"() {
    init_merge();
    init_xlink();
    init_xml();
    init_xmlns();
    init_aria();
    init_html();
    init_svg();
    init_find();
    init_hast_to_react();
    init_normalize();
    html2 = merge([xml, xlink, xmlns, aria, html], "html"), svg2 = merge([xml, xlink, xmlns, aria, svg], "svg");
  }
});

// node_modules/hast-util-parse-selector/lib/index.js
function parseSelector(selector, defaultTagName) {
  let value = selector || "", props = {}, start = 0, previous3, tagName;
  for (; start < value.length; ) {
    search.lastIndex = start;
    let match = search.exec(value), subvalue = value.slice(start, match ? match.index : value.length);
    subvalue && (previous3 ? previous3 === "#" ? props.id = subvalue : Array.isArray(props.className) ? props.className.push(subvalue) : props.className = [subvalue] : tagName = subvalue, start += subvalue.length), match && (previous3 = match[0], start++);
  }
  return {
    type: "element",
    tagName: tagName || defaultTagName || "div",
    properties: props,
    children: []
  };
}
var search, init_lib = __esm({
  "node_modules/hast-util-parse-selector/lib/index.js"() {
    search = /[#.]/g;
  }
});

// node_modules/hast-util-parse-selector/index.js
var init_hast_util_parse_selector = __esm({
  "node_modules/hast-util-parse-selector/index.js"() {
    init_lib();
  }
});

// node_modules/space-separated-tokens/index.js
function parse2(value) {
  let input = String(value || "").trim();
  return input ? input.split(/[ \t\n\r\f]+/g) : [];
}
function stringify(values) {
  return values.join(" ").trim();
}
var init_space_separated_tokens = __esm({
  "node_modules/space-separated-tokens/index.js"() {
  }
});

// node_modules/comma-separated-tokens/index.js
function parse3(value) {
  let tokens = [], input = String(value || ""), index2 = input.indexOf(","), start = 0, end = !1;
  for (; !end; ) {
    index2 === -1 && (index2 = input.length, end = !0);
    let token = input.slice(start, index2).trim();
    (token || !end) && tokens.push(token), start = index2 + 1, index2 = input.indexOf(",", start);
  }
  return tokens;
}
function stringify2(values, options2) {
  let settings = options2 || {};
  return (values[values.length - 1] === "" ? [...values, ""] : values).join(
    (settings.padRight ? " " : "") + "," + (settings.padLeft === !1 ? "" : " ")
  ).trim();
}
var init_comma_separated_tokens = __esm({
  "node_modules/comma-separated-tokens/index.js"() {
  }
});

// node_modules/hastscript/lib/core.js
function core(schema, defaultTagName, caseSensitive) {
  let adjust = caseSensitive && createAdjustMap(caseSensitive);
  return function(selector, properties, ...children) {
    let index2 = -1, node2;
    if (selector == null)
      node2 = { type: "root", children: [] }, children.unshift(properties);
    else if (node2 = parseSelector(selector, defaultTagName), node2.tagName = node2.tagName.toLowerCase(), adjust && own2.call(adjust, node2.tagName) && (node2.tagName = adjust[node2.tagName]), isProperties(properties, node2.tagName)) {
      let key2;
      for (key2 in properties)
        own2.call(properties, key2) && addProperty(schema, node2.properties, key2, properties[key2]);
    } else
      children.unshift(properties);
    for (; ++index2 < children.length; )
      addChild(node2.children, children[index2]);
    return node2.type === "element" && node2.tagName === "template" && (node2.content = { type: "root", children: node2.children }, node2.children = []), node2;
  };
}
function isProperties(value, name) {
  return value == null || typeof value != "object" || Array.isArray(value) ? !1 : name === "input" || !value.type || typeof value.type != "string" ? !0 : "children" in value && Array.isArray(value.children) ? !1 : name === "button" ? buttonTypes.has(value.type.toLowerCase()) : !("value" in value);
}
function addProperty(schema, properties, key2, value) {
  let info = find(schema, key2), index2 = -1, result;
  if (value != null) {
    if (typeof value == "number") {
      if (Number.isNaN(value))
        return;
      result = value;
    } else
      typeof value == "boolean" ? result = value : typeof value == "string" ? info.spaceSeparated ? result = parse2(value) : info.commaSeparated ? result = parse3(value) : info.commaOrSpaceSeparated ? result = parse2(parse3(value).join(" ")) : result = parsePrimitive(info, info.property, value) : Array.isArray(value) ? result = value.concat() : result = info.property === "style" ? style(value) : String(value);
    if (Array.isArray(result)) {
      let finalResult = [];
      for (; ++index2 < result.length; )
        finalResult[index2] = parsePrimitive(info, info.property, result[index2]);
      result = finalResult;
    }
    info.property === "className" && Array.isArray(properties.className) && (result = properties.className.concat(result)), properties[info.property] = result;
  }
}
function addChild(nodes, value) {
  let index2 = -1;
  if (value != null)
    if (typeof value == "string" || typeof value == "number")
      nodes.push({ type: "text", value: String(value) });
    else if (Array.isArray(value))
      for (; ++index2 < value.length; )
        addChild(nodes, value[index2]);
    else if (typeof value == "object" && "type" in value)
      value.type === "root" ? addChild(nodes, value.children) : nodes.push(value);
    else
      throw new Error("Expected node, nodes, or string, got `" + value + "`");
}
function parsePrimitive(info, name, value) {
  if (typeof value == "string") {
    if (info.number && value && !Number.isNaN(Number(value)))
      return Number(value);
    if ((info.boolean || info.overloadedBoolean) && (value === "" || normalize(value) === normalize(name)))
      return !0;
  }
  return value;
}
function style(value) {
  let result = [], key2;
  for (key2 in value)
    own2.call(value, key2) && result.push([key2, value[key2]].join(": "));
  return result.join("; ");
}
function createAdjustMap(values) {
  let result = {}, index2 = -1;
  for (; ++index2 < values.length; )
    result[values[index2].toLowerCase()] = values[index2];
  return result;
}
var buttonTypes, own2, init_core = __esm({
  "node_modules/hastscript/lib/core.js"() {
    init_property_information();
    init_hast_util_parse_selector();
    init_space_separated_tokens();
    init_comma_separated_tokens();
    buttonTypes = /* @__PURE__ */ new Set(["menu", "submit", "reset", "button"]), own2 = {}.hasOwnProperty;
  }
});

// node_modules/hastscript/lib/html.js
var h, init_html2 = __esm({
  "node_modules/hastscript/lib/html.js"() {
    init_property_information();
    init_core();
    h = core(html2, "div");
  }
});

// node_modules/hastscript/lib/svg-case-sensitive-tag-names.js
var svgCaseSensitiveTagNames, init_svg_case_sensitive_tag_names = __esm({
  "node_modules/hastscript/lib/svg-case-sensitive-tag-names.js"() {
    svgCaseSensitiveTagNames = [
      "altGlyph",
      "altGlyphDef",
      "altGlyphItem",
      "animateColor",
      "animateMotion",
      "animateTransform",
      "clipPath",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDistantLight",
      "feDropShadow",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussianBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "foreignObject",
      "glyphRef",
      "linearGradient",
      "radialGradient",
      "solidColor",
      "textArea",
      "textPath"
    ];
  }
});

// node_modules/hastscript/lib/svg.js
var s, init_svg2 = __esm({
  "node_modules/hastscript/lib/svg.js"() {
    init_property_information();
    init_core();
    init_svg_case_sensitive_tag_names();
    s = core(svg2, "g", svgCaseSensitiveTagNames);
  }
});

// node_modules/hastscript/lib/index.js
var init_lib2 = __esm({
  "node_modules/hastscript/lib/index.js"() {
    init_html2();
    init_svg2();
  }
});

// node_modules/hastscript/index.js
var init_hastscript = __esm({
  "node_modules/hastscript/index.js"() {
    init_lib2();
  }
});

// node_modules/vfile-location/lib/index.js
function location(file) {
  let value = String(file), indices = [], search3 = /\r?\n|\r/g;
  for (; search3.test(value); )
    indices.push(search3.lastIndex);
  return indices.push(value.length + 1), { toPoint, toOffset };
  function toPoint(offset) {
    let index2 = -1;
    if (typeof offset == "number" && offset > -1 && offset < indices[indices.length - 1]) {
      for (; ++index2 < indices.length; )
        if (indices[index2] > offset)
          return {
            line: index2 + 1,
            column: offset - (index2 > 0 ? indices[index2 - 1] : 0) + 1,
            offset
          };
    }
    return { line: void 0, column: void 0, offset: void 0 };
  }
  function toOffset(point5) {
    let line = point5 && point5.line, column = point5 && point5.column;
    if (typeof line == "number" && typeof column == "number" && !Number.isNaN(line) && !Number.isNaN(column) && line - 1 in indices) {
      let offset = (indices[line - 2] || 0) + column - 1 || 0;
      if (offset > -1 && offset < indices[indices.length - 1])
        return offset;
    }
    return -1;
  }
}
var init_lib3 = __esm({
  "node_modules/vfile-location/lib/index.js"() {
  }
});

// node_modules/vfile-location/index.js
var init_vfile_location = __esm({
  "node_modules/vfile-location/index.js"() {
    init_lib3();
  }
});

// node_modules/web-namespaces/index.js
var webNamespaces, init_web_namespaces = __esm({
  "node_modules/web-namespaces/index.js"() {
    webNamespaces = {
      html: "http://www.w3.org/1999/xhtml",
      mathml: "http://www.w3.org/1998/Math/MathML",
      svg: "http://www.w3.org/2000/svg",
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace",
      xmlns: "http://www.w3.org/2000/xmlns/"
    };
  }
});

// node_modules/hast-util-from-parse5/lib/index.js
function fromParse5(tree, options2) {
  let options_ = options2 || {}, settings, file;
  return isFile(options_) ? (file = options_, settings = {}) : (file = options_.file || void 0, settings = options_), one(
    {
      schema: settings.space === "svg" ? svg2 : html2,
      file,
      verbose: settings.verbose,
      location: !1
    },
    tree
  );
}
function one(state, node2) {
  let result;
  switch (node2.nodeName) {
    case "#comment": {
      let reference = node2;
      return result = { type: "comment", value: reference.data }, patch(state, reference, result), result;
    }
    case "#document":
    case "#document-fragment": {
      let reference = node2, quirksMode = "mode" in reference ? reference.mode === "quirks" || reference.mode === "limited-quirks" : !1;
      if (result = {
        type: "root",
        children: all(state, node2.childNodes),
        data: { quirksMode }
      }, state.file && state.location) {
        let doc = String(state.file), loc = location(doc), start = loc.toPoint(0), end = loc.toPoint(doc.length);
        result.position = { start, end };
      }
      return result;
    }
    case "#documentType": {
      let reference = node2;
      return result = { type: "doctype" }, patch(state, reference, result), result;
    }
    case "#text": {
      let reference = node2;
      return result = { type: "text", value: reference.value }, patch(state, reference, result), result;
    }
    default:
      return result = element(state, node2), result;
  }
}
function all(state, nodes) {
  let index2 = -1, result = [];
  for (; ++index2 < nodes.length; )
    result[index2] = one(state, nodes[index2]);
  return result;
}
function element(state, node2) {
  let schema = state.schema;
  state.schema = node2.namespaceURI === webNamespaces.svg ? svg2 : html2;
  let index2 = -1, props = {};
  for (; ++index2 < node2.attrs.length; ) {
    let attribute = node2.attrs[index2], name = (attribute.prefix ? attribute.prefix + ":" : "") + attribute.name;
    own3.call(proto, name) || (props[name] = attribute.value);
  }
  let result = (state.schema.space === "svg" ? s : h)(node2.tagName, props, all(state, node2.childNodes));
  if (patch(state, node2, result), result.tagName === "template") {
    let reference = node2, pos = reference.sourceCodeLocation, startTag2 = pos && pos.startTag && position(pos.startTag), endTag2 = pos && pos.endTag && position(pos.endTag), content3 = one(state, reference.content);
    startTag2 && endTag2 && state.file && (content3.position = { start: startTag2.end, end: endTag2.start }), result.content = content3;
  }
  return state.schema = schema, result;
}
function patch(state, from, to) {
  if ("sourceCodeLocation" in from && from.sourceCodeLocation && state.file) {
    let position4 = createLocation(state, to, from.sourceCodeLocation);
    position4 && (state.location = !0, to.position = position4);
  }
}
function createLocation(state, node2, location2) {
  let result = position(location2);
  if (node2.type === "element") {
    let tail = node2.children[node2.children.length - 1];
    if (result && !location2.endTag && tail && tail.position && tail.position.end && (result.end = Object.assign({}, tail.position.end)), state.verbose) {
      let props = {}, key2;
      if (location2.attrs)
        for (key2 in location2.attrs)
          own3.call(location2.attrs, key2) && (props[find(state.schema, key2).property] = position(
            location2.attrs[key2]
          ));
      node2.data = {
        position: {
          opening: position(location2.startTag),
          closing: location2.endTag ? position(location2.endTag) : null,
          properties: props
        }
      };
    }
  }
  return result;
}
function position(loc) {
  let start = point({
    line: loc.startLine,
    column: loc.startCol,
    offset: loc.startOffset
  }), end = point({
    line: loc.endLine,
    column: loc.endCol,
    offset: loc.endOffset
  });
  return start || end ? { start, end } : void 0;
}
function point(point5) {
  return point5.line && point5.column ? point5 : void 0;
}
function isFile(value) {
  return "messages" in value;
}
var own3, proto, init_lib4 = __esm({
  "node_modules/hast-util-from-parse5/lib/index.js"() {
    init_hastscript();
    init_property_information();
    init_vfile_location();
    init_web_namespaces();
    own3 = {}.hasOwnProperty, proto = Object.prototype;
  }
});

// node_modules/hast-util-from-parse5/index.js
var hast_util_from_parse5_exports = {};
__export(hast_util_from_parse5_exports, {
  fromParse5: () => fromParse5
});
var init_hast_util_from_parse5 = __esm({
  "node_modules/hast-util-from-parse5/index.js"() {
    init_lib4();
  }
});

// node_modules/inline-style-parser/index.js
var require_inline_style_parser = __commonJS({
  "node_modules/inline-style-parser/index.js"(exports2, module2) {
    var COMMENT_REGEX = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, NEWLINE_REGEX = /\n/g, WHITESPACE_REGEX = /^\s*/, PROPERTY_REGEX = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/, COLON_REGEX = /^:\s*/, VALUE_REGEX = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/, SEMICOLON_REGEX = /^[;\s]*/, TRIM_REGEX = /^\s+|\s+$/g, NEWLINE = `
`, FORWARD_SLASH = "/", ASTERISK = "*", EMPTY_STRING = "", TYPE_COMMENT = "comment", TYPE_DECLARATION = "declaration";
    module2.exports = function(style2, options2) {
      if (typeof style2 != "string")
        throw new TypeError("First argument must be a string");
      if (!style2)
        return [];
      options2 = options2 || {};
      var lineno = 1, column = 1;
      function updatePosition(str2) {
        var lines = str2.match(NEWLINE_REGEX);
        lines && (lineno += lines.length);
        var i = str2.lastIndexOf(NEWLINE);
        column = ~i ? str2.length - i : column + str2.length;
      }
      function position4() {
        var start = { line: lineno, column };
        return function(node2) {
          return node2.position = new Position(start), whitespace2(), node2;
        };
      }
      function Position(start) {
        this.start = start, this.end = { line: lineno, column }, this.source = options2.source;
      }
      Position.prototype.content = style2;
      var errorsList = [];
      function error(msg) {
        var err = new Error(
          options2.source + ":" + lineno + ":" + column + ": " + msg
        );
        if (err.reason = msg, err.filename = options2.source, err.line = lineno, err.column = column, err.source = style2, options2.silent)
          errorsList.push(err);
        else
          throw err;
      }
      function match(re) {
        var m = re.exec(style2);
        if (!!m) {
          var str2 = m[0];
          return updatePosition(str2), style2 = style2.slice(str2.length), m;
        }
      }
      function whitespace2() {
        match(WHITESPACE_REGEX);
      }
      function comments(rules) {
        var c;
        for (rules = rules || []; c = comment3(); )
          c !== !1 && rules.push(c);
        return rules;
      }
      function comment3() {
        var pos = position4();
        if (!(FORWARD_SLASH != style2.charAt(0) || ASTERISK != style2.charAt(1))) {
          for (var i = 2; EMPTY_STRING != style2.charAt(i) && (ASTERISK != style2.charAt(i) || FORWARD_SLASH != style2.charAt(i + 1)); )
            ++i;
          if (i += 2, EMPTY_STRING === style2.charAt(i - 1))
            return error("End of comment missing");
          var str2 = style2.slice(2, i - 2);
          return column += 2, updatePosition(str2), style2 = style2.slice(i), column += 2, pos({
            type: TYPE_COMMENT,
            comment: str2
          });
        }
      }
      function declaration() {
        var pos = position4(), prop = match(PROPERTY_REGEX);
        if (!!prop) {
          if (comment3(), !match(COLON_REGEX))
            return error("property missing ':'");
          var val = match(VALUE_REGEX), ret = pos({
            type: TYPE_DECLARATION,
            property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),
            value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING
          });
          return match(SEMICOLON_REGEX), ret;
        }
      }
      function declarations() {
        var decls = [];
        comments(decls);
        for (var decl; decl = declaration(); )
          decl !== !1 && (decls.push(decl), comments(decls));
        return decls;
      }
      return whitespace2(), declarations();
    };
    function trim(str2) {
      return str2 ? str2.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;
    }
  }
});

// node_modules/style-to-object/index.js
var require_style_to_object = __commonJS({
  "node_modules/style-to-object/index.js"(exports2, module2) {
    var parse6 = require_inline_style_parser();
    function StyleToObject2(style2, iterator) {
      var output = null;
      if (!style2 || typeof style2 != "string")
        return output;
      for (var declaration, declarations = parse6(style2), hasIterator = typeof iterator == "function", property, value, i = 0, len = declarations.length; i < len; i++)
        declaration = declarations[i], property = declaration.property, value = declaration.value, hasIterator ? iterator(property, value, declaration) : value && (output || (output = {}), output[property] = value);
      return output;
    }
    module2.exports = StyleToObject2;
    module2.exports.default = StyleToObject2;
  }
});

// node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-is/convert.js
var require_convert = __commonJS({
  "node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-is/convert.js"(exports2, module2) {
    "use strict";
    module2.exports = convert2;
    function convert2(test) {
      if (typeof test == "string")
        return typeFactory2(test);
      if (test == null)
        return ok2;
      if (typeof test == "object")
        return ("length" in test ? anyFactory3 : matchesFactory)(test);
      if (typeof test == "function")
        return test;
      throw new Error("Expected function, string, or object as test");
    }
    function convertAll(tests) {
      for (var results = [], length = tests.length, index2 = -1; ++index2 < length; )
        results[index2] = convert2(tests[index2]);
      return results;
    }
    function matchesFactory(test) {
      return matches;
      function matches(node2) {
        var key2;
        for (key2 in test)
          if (node2[key2] !== test[key2])
            return !1;
        return !0;
      }
    }
    function anyFactory3(tests) {
      var checks2 = convertAll(tests), length = checks2.length;
      return matches;
      function matches() {
        for (var index2 = -1; ++index2 < length; )
          if (checks2[index2].apply(this, arguments))
            return !0;
        return !1;
      }
    }
    function typeFactory2(test) {
      return type;
      function type(node2) {
        return Boolean(node2 && node2.type === test);
      }
    }
    function ok2() {
      return !0;
    }
  }
});

// node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-visit-parents/index.js
var require_unist_util_visit_parents = __commonJS({
  "node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-visit-parents/index.js"(exports2, module2) {
    "use strict";
    module2.exports = visitParents2;
    var convert2 = require_convert(), CONTINUE2 = !0, SKIP2 = "skip", EXIT2 = !1;
    visitParents2.CONTINUE = CONTINUE2;
    visitParents2.SKIP = SKIP2;
    visitParents2.EXIT = EXIT2;
    function visitParents2(tree, test, visitor, reverse) {
      var is2;
      typeof test == "function" && typeof visitor != "function" && (reverse = visitor, visitor = test, test = null), is2 = convert2(test), one6(tree, null, []);
      function one6(node2, index2, parents) {
        var result = [], subresult;
        return (!test || is2(node2, index2, parents[parents.length - 1] || null)) && (result = toResult2(visitor(node2, parents)), result[0] === EXIT2) ? result : node2.children && result[0] !== SKIP2 ? (subresult = toResult2(all6(node2.children, parents.concat(node2))), subresult[0] === EXIT2 ? subresult : result) : result;
      }
      function all6(children, parents) {
        for (var min = -1, step = reverse ? -1 : 1, index2 = (reverse ? children.length : min) + step, result; index2 > min && index2 < children.length; ) {
          if (result = one6(children[index2], index2, parents), result[0] === EXIT2)
            return result;
          index2 = typeof result[1] == "number" ? result[1] : index2 + step;
        }
      }
    }
    function toResult2(value) {
      return value !== null && typeof value == "object" && "length" in value ? value : typeof value == "number" ? [CONTINUE2, value] : [value];
    }
  }
});

// node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-visit/index.js
var require_unist_util_visit = __commonJS({
  "node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-visit/index.js"(exports2, module2) {
    "use strict";
    module2.exports = visit2;
    var visitParents2 = require_unist_util_visit_parents(), CONTINUE2 = visitParents2.CONTINUE, SKIP2 = visitParents2.SKIP, EXIT2 = visitParents2.EXIT;
    visit2.CONTINUE = CONTINUE2;
    visit2.SKIP = SKIP2;
    visit2.EXIT = EXIT2;
    function visit2(tree, test, visitor, reverse) {
      typeof test == "function" && typeof visitor != "function" && (reverse = visitor, visitor = test, test = null), visitParents2(tree, test, overload, reverse);
      function overload(node2, parents) {
        var parent = parents[parents.length - 1], index2 = parent ? parent.children.indexOf(node2) : null;
        return visitor(node2, index2, parent);
      }
    }
  }
});

// node_modules/@mapbox/hast-util-table-cell-style/index.js
var require_hast_util_table_cell_style = __commonJS({
  "node_modules/@mapbox/hast-util-table-cell-style/index.js"(exports2, module2) {
    "use strict";
    var visit2 = require_unist_util_visit(), hasOwnProperty2 = Object.prototype.hasOwnProperty, hastCssPropertyMap = {
      align: "text-align",
      valign: "vertical-align",
      height: "height",
      width: "width"
    };
    module2.exports = function(node2) {
      return visit2(node2, "element", visitor), node2;
    };
    function visitor(node2) {
      if (!(node2.tagName !== "tr" && node2.tagName !== "td" && node2.tagName !== "th")) {
        var hastName, cssName;
        for (hastName in hastCssPropertyMap)
          !hasOwnProperty2.call(hastCssPropertyMap, hastName) || node2.properties[hastName] === void 0 || (cssName = hastCssPropertyMap[hastName], appendStyle(node2, cssName, node2.properties[hastName]), delete node2.properties[hastName]);
      }
    }
    function appendStyle(node2, property, value) {
      var prevStyle = (node2.properties.style || "").trim();
      prevStyle && !/;\s*/.test(prevStyle) && (prevStyle += ";"), prevStyle && (prevStyle += " ");
      var nextStyle = prevStyle + property + ": " + value + ";";
      node2.properties.style = nextStyle;
    }
  }
});

// node_modules/is-buffer/index.js
var require_is_buffer = __commonJS({
  "node_modules/is-buffer/index.js"(exports2, module2) {
    module2.exports = function(obj) {
      return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer == "function" && obj.constructor.isBuffer(obj);
    };
  }
});

// node_modules/extend/index.js
var require_extend = __commonJS({
  "node_modules/extend/index.js"(exports2, module2) {
    "use strict";
    var hasOwn = Object.prototype.hasOwnProperty, toStr = Object.prototype.toString, defineProperty = Object.defineProperty, gOPD = Object.getOwnPropertyDescriptor, isArray = function(arr) {
      return typeof Array.isArray == "function" ? Array.isArray(arr) : toStr.call(arr) === "[object Array]";
    }, isPlainObject2 = function(obj) {
      if (!obj || toStr.call(obj) !== "[object Object]")
        return !1;
      var hasOwnConstructor = hasOwn.call(obj, "constructor"), hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, "isPrototypeOf");
      if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf)
        return !1;
      var key2;
      for (key2 in obj)
        ;
      return typeof key2 > "u" || hasOwn.call(obj, key2);
    }, setProperty = function(target, options2) {
      defineProperty && options2.name === "__proto__" ? defineProperty(target, options2.name, {
        enumerable: !0,
        configurable: !0,
        value: options2.newValue,
        writable: !0
      }) : target[options2.name] = options2.newValue;
    }, getProperty = function(obj, name) {
      if (name === "__proto__")
        if (hasOwn.call(obj, name)) {
          if (gOPD)
            return gOPD(obj, name).value;
        } else
          return;
      return obj[name];
    };
    module2.exports = function extend3() {
      var options2, name, src, copy, copyIsArray, clone, target = arguments[0], i = 1, length = arguments.length, deep = !1;
      for (typeof target == "boolean" && (deep = target, target = arguments[1] || {}, i = 2), (target == null || typeof target != "object" && typeof target != "function") && (target = {}); i < length; ++i)
        if (options2 = arguments[i], options2 != null)
          for (name in options2)
            src = getProperty(target, name), copy = getProperty(options2, name), target !== copy && (deep && copy && (isPlainObject2(copy) || (copyIsArray = isArray(copy))) ? (copyIsArray ? (copyIsArray = !1, clone = src && isArray(src) ? src : []) : clone = src && isPlainObject2(src) ? src : {}, setProperty(target, { name, newValue: extend3(deep, clone, copy) })) : typeof copy < "u" && setProperty(target, { name, newValue: copy }));
      return target;
    };
  }
});

// node_modules/date-fns/_lib/toInteger/index.js
var require_toInteger = __commonJS({
  "node_modules/date-fns/_lib/toInteger/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = toInteger;
    function toInteger(dirtyNumber) {
      if (dirtyNumber === null || dirtyNumber === !0 || dirtyNumber === !1)
        return NaN;
      var number2 = Number(dirtyNumber);
      return isNaN(number2) ? number2 : number2 < 0 ? Math.ceil(number2) : Math.floor(number2);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/requiredArgs/index.js
var require_requiredArgs = __commonJS({
  "node_modules/date-fns/_lib/requiredArgs/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = requiredArgs;
    function requiredArgs(required, args) {
      if (args.length < required)
        throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/toDate/index.js
var require_toDate = __commonJS({
  "node_modules/date-fns/toDate/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = toDate;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function toDate(argument) {
      (0, _index.default)(1, arguments);
      var argStr = Object.prototype.toString.call(argument);
      return argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]" ? new Date(argument.getTime()) : typeof argument == "number" || argStr === "[object Number]" ? new Date(argument) : ((typeof argument == "string" || argStr === "[object String]") && typeof console < "u" && (console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"), console.warn(new Error().stack)), new Date(NaN));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addDays/index.js
var require_addDays = __commonJS({
  "node_modules/date-fns/addDays/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addDays;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addDays(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), amount = (0, _index.default)(dirtyAmount);
      return isNaN(amount) ? new Date(NaN) : (amount && date.setDate(date.getDate() + amount), date);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addMonths/index.js
var require_addMonths = __commonJS({
  "node_modules/date-fns/addMonths/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addMonths;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addMonths(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), amount = (0, _index.default)(dirtyAmount);
      if (isNaN(amount))
        return new Date(NaN);
      if (!amount)
        return date;
      var dayOfMonth = date.getDate(), endOfDesiredMonth = new Date(date.getTime());
      endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
      var daysInMonth = endOfDesiredMonth.getDate();
      return dayOfMonth >= daysInMonth ? endOfDesiredMonth : (date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth), date);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/add/index.js
var require_add = __commonJS({
  "node_modules/date-fns/add/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = add;
    var _index = _interopRequireDefault(require_addDays()), _index2 = _interopRequireDefault(require_addMonths()), _index3 = _interopRequireDefault(require_toDate()), _index4 = _interopRequireDefault(require_requiredArgs()), _index5 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function add(dirtyDate, duration) {
      if ((0, _index4.default)(2, arguments), !duration || _typeof(duration) !== "object")
        return new Date(NaN);
      var years = duration.years ? (0, _index5.default)(duration.years) : 0, months = duration.months ? (0, _index5.default)(duration.months) : 0, weeks = duration.weeks ? (0, _index5.default)(duration.weeks) : 0, days = duration.days ? (0, _index5.default)(duration.days) : 0, hours = duration.hours ? (0, _index5.default)(duration.hours) : 0, minutes = duration.minutes ? (0, _index5.default)(duration.minutes) : 0, seconds = duration.seconds ? (0, _index5.default)(duration.seconds) : 0, date = (0, _index3.default)(dirtyDate), dateWithMonths = months || years ? (0, _index2.default)(date, months + years * 12) : date, dateWithDays = days || weeks ? (0, _index.default)(dateWithMonths, days + weeks * 7) : dateWithMonths, minutesToAdd = minutes + hours * 60, secondsToAdd = seconds + minutesToAdd * 60, msToAdd = secondsToAdd * 1e3, finalDate = new Date(dateWithDays.getTime() + msToAdd);
      return finalDate;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isWeekend/index.js
var require_isWeekend = __commonJS({
  "node_modules/date-fns/isWeekend/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isWeekend;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWeekend(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), day = date.getDay();
      return day === 0 || day === 6;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSunday/index.js
var require_isSunday = __commonJS({
  "node_modules/date-fns/isSunday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSunday;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSunday(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getDay() === 0;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSaturday/index.js
var require_isSaturday = __commonJS({
  "node_modules/date-fns/isSaturday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSaturday;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSaturday(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getDay() === 6;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addBusinessDays/index.js
var require_addBusinessDays = __commonJS({
  "node_modules/date-fns/addBusinessDays/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addBusinessDays;
    var _index = _interopRequireDefault(require_isWeekend()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_toInteger()), _index4 = _interopRequireDefault(require_requiredArgs()), _index5 = _interopRequireDefault(require_isSunday()), _index6 = _interopRequireDefault(require_isSaturday());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addBusinessDays(dirtyDate, dirtyAmount) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), startedOnWeekend = (0, _index.default)(date), amount = (0, _index3.default)(dirtyAmount);
      if (isNaN(amount))
        return new Date(NaN);
      var hours = date.getHours(), sign = amount < 0 ? -1 : 1, fullWeeks = (0, _index3.default)(amount / 5);
      date.setDate(date.getDate() + fullWeeks * 7);
      for (var restDays = Math.abs(amount % 5); restDays > 0; )
        date.setDate(date.getDate() + sign), (0, _index.default)(date) || (restDays -= 1);
      return startedOnWeekend && (0, _index.default)(date) && amount !== 0 && ((0, _index6.default)(date) && date.setDate(date.getDate() + (sign < 0 ? 2 : -1)), (0, _index5.default)(date) && date.setDate(date.getDate() + (sign < 0 ? 1 : -2))), date.setHours(hours), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addMilliseconds/index.js
var require_addMilliseconds = __commonJS({
  "node_modules/date-fns/addMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addMilliseconds;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addMilliseconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var timestamp = (0, _index2.default)(dirtyDate).getTime(), amount = (0, _index.default)(dirtyAmount);
      return new Date(timestamp + amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addHours/index.js
var require_addHours = __commonJS({
  "node_modules/date-fns/addHours/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addHours;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addMilliseconds()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_HOUR = 36e5;
    function addHours(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * MILLISECONDS_IN_HOUR);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/defaultOptions/index.js
var require_defaultOptions = __commonJS({
  "node_modules/date-fns/_lib/defaultOptions/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.getDefaultOptions = getDefaultOptions;
    exports2.setDefaultOptions = setDefaultOptions;
    var defaultOptions = {};
    function getDefaultOptions() {
      return defaultOptions;
    }
    function setDefaultOptions(newOptions) {
      defaultOptions = newOptions;
    }
  }
});

// node_modules/date-fns/startOfWeek/index.js
var require_startOfWeek = __commonJS({
  "node_modules/date-fns/startOfWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfWeek;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_toInteger()), _index3 = _interopRequireDefault(require_requiredArgs()), _index4 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfWeek(dirtyDate, options2) {
      var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index3.default)(1, arguments);
      var defaultOptions = (0, _index4.getDefaultOptions)(), weekStartsOn = (0, _index2.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      var date = (0, _index.default)(dirtyDate), day = date.getDay(), diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      return date.setDate(date.getDate() - diff), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfISOWeek/index.js
var require_startOfISOWeek = __commonJS({
  "node_modules/date-fns/startOfISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfISOWeek;
    var _index = _interopRequireDefault(require_startOfWeek()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfISOWeek(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getISOWeekYear/index.js
var require_getISOWeekYear = __commonJS({
  "node_modules/date-fns/getISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getISOWeekYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_startOfISOWeek()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear(), fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4), fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index2.default)(fourthOfJanuaryOfNextYear), fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4), fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index2.default)(fourthOfJanuaryOfThisYear);
      return date.getTime() >= startOfNextYear.getTime() ? year + 1 : date.getTime() >= startOfThisYear.getTime() ? year : year - 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfISOWeekYear/index.js
var require_startOfISOWeekYear = __commonJS({
  "node_modules/date-fns/startOfISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear()), _index2 = _interopRequireDefault(require_startOfISOWeek()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate), fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(year, 0, 4), fourthOfJanuary.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js
var require_getTimezoneOffsetInMilliseconds = __commonJS({
  "node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getTimezoneOffsetInMilliseconds;
    function getTimezoneOffsetInMilliseconds(date) {
      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
      return utcDate.setUTCFullYear(date.getFullYear()), date.getTime() - utcDate.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfDay/index.js
var require_startOfDay = __commonJS({
  "node_modules/date-fns/startOfDay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfDay;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarDays/index.js
var require_differenceInCalendarDays = __commonJS({
  "node_modules/date-fns/differenceInCalendarDays/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInCalendarDays;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index2 = _interopRequireDefault(require_startOfDay()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 864e5;
    function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var startOfDayLeft = (0, _index2.default)(dirtyDateLeft), startOfDayRight = (0, _index2.default)(dirtyDateRight), timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft), timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setISOWeekYear/index.js
var require_setISOWeekYear = __commonJS({
  "node_modules/date-fns/setISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setISOWeekYear;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_startOfISOWeekYear()), _index4 = _interopRequireDefault(require_differenceInCalendarDays()), _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {
      (0, _index5.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), isoWeekYear = (0, _index.default)(dirtyISOWeekYear), diff = (0, _index4.default)(date, (0, _index3.default)(date)), fourthOfJanuary = new Date(0);
      return fourthOfJanuary.setFullYear(isoWeekYear, 0, 4), fourthOfJanuary.setHours(0, 0, 0, 0), date = (0, _index3.default)(fourthOfJanuary), date.setDate(date.getDate() + diff), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addISOWeekYears/index.js
var require_addISOWeekYears = __commonJS({
  "node_modules/date-fns/addISOWeekYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addISOWeekYears;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_getISOWeekYear()), _index3 = _interopRequireDefault(require_setISOWeekYear()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addISOWeekYears(dirtyDate, dirtyAmount) {
      (0, _index4.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index3.default)(dirtyDate, (0, _index2.default)(dirtyDate) + amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addMinutes/index.js
var require_addMinutes = __commonJS({
  "node_modules/date-fns/addMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addMinutes;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addMilliseconds()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_MINUTE = 6e4;
    function addMinutes(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addQuarters/index.js
var require_addQuarters = __commonJS({
  "node_modules/date-fns/addQuarters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addQuarters;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addMonths()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addQuarters(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount), months = amount * 3;
      return (0, _index2.default)(dirtyDate, months);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addSeconds/index.js
var require_addSeconds = __commonJS({
  "node_modules/date-fns/addSeconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addSeconds;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addMilliseconds()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addSeconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * 1e3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addWeeks/index.js
var require_addWeeks = __commonJS({
  "node_modules/date-fns/addWeeks/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addWeeks;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addDays()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addWeeks(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount), days = amount * 7;
      return (0, _index2.default)(dirtyDate, days);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/addYears/index.js
var require_addYears = __commonJS({
  "node_modules/date-fns/addYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addYears;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addMonths()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addYears(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, amount * 12);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/areIntervalsOverlapping/index.js
var require_areIntervalsOverlapping = __commonJS({
  "node_modules/date-fns/areIntervalsOverlapping/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = areIntervalsOverlapping;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function areIntervalsOverlapping(intervalLeft, intervalRight, options2) {
      (0, _index2.default)(2, arguments);
      var leftStartTime = (0, _index.default)(intervalLeft == null ? void 0 : intervalLeft.start).getTime(), leftEndTime = (0, _index.default)(intervalLeft == null ? void 0 : intervalLeft.end).getTime(), rightStartTime = (0, _index.default)(intervalRight == null ? void 0 : intervalRight.start).getTime(), rightEndTime = (0, _index.default)(intervalRight == null ? void 0 : intervalRight.end).getTime();
      if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime))
        throw new RangeError("Invalid interval");
      return options2 != null && options2.inclusive ? leftStartTime <= rightEndTime && rightStartTime <= leftEndTime : leftStartTime < rightEndTime && rightStartTime < leftEndTime;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/max/index.js
var require_max = __commonJS({
  "node_modules/date-fns/max/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = max;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function max(dirtyDatesArray) {
      (0, _index2.default)(1, arguments);
      var datesArray;
      if (dirtyDatesArray && typeof dirtyDatesArray.forEach == "function")
        datesArray = dirtyDatesArray;
      else if (_typeof(dirtyDatesArray) === "object" && dirtyDatesArray !== null)
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      else
        return new Date(NaN);
      var result;
      return datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        (result === void 0 || result < currentDate || isNaN(Number(currentDate))) && (result = currentDate);
      }), result || new Date(NaN);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/min/index.js
var require_min = __commonJS({
  "node_modules/date-fns/min/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = min;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function min(dirtyDatesArray) {
      (0, _index2.default)(1, arguments);
      var datesArray;
      if (dirtyDatesArray && typeof dirtyDatesArray.forEach == "function")
        datesArray = dirtyDatesArray;
      else if (_typeof(dirtyDatesArray) === "object" && dirtyDatesArray !== null)
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      else
        return new Date(NaN);
      var result;
      return datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        (result === void 0 || result > currentDate || isNaN(currentDate.getDate())) && (result = currentDate);
      }), result || new Date(NaN);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/clamp/index.js
var require_clamp = __commonJS({
  "node_modules/date-fns/clamp/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = clamp;
    var _index = _interopRequireDefault(require_max()), _index2 = _interopRequireDefault(require_min()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function clamp(date, _ref) {
      var start = _ref.start, end = _ref.end;
      return (0, _index3.default)(2, arguments), (0, _index2.default)([(0, _index.default)([date, start]), end]);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/closestIndexTo/index.js
var require_closestIndexTo = __commonJS({
  "node_modules/date-fns/closestIndexTo/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = closestIndexTo;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {
      (0, _index2.default)(2, arguments);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      if (isNaN(Number(dateToCompare)))
        return NaN;
      var timeToCompare = dateToCompare.getTime(), datesArray;
      dirtyDatesArray == null ? datesArray = [] : typeof dirtyDatesArray.forEach == "function" ? datesArray = dirtyDatesArray : datesArray = Array.prototype.slice.call(dirtyDatesArray);
      var result, minDistance;
      return datesArray.forEach(function(dirtyDate, index2) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (isNaN(Number(currentDate))) {
          result = NaN, minDistance = NaN;
          return;
        }
        var distance = Math.abs(timeToCompare - currentDate.getTime());
        (result == null || distance < Number(minDistance)) && (result = index2, minDistance = distance);
      }), result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/closestTo/index.js
var require_closestTo = __commonJS({
  "node_modules/date-fns/closestTo/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = closestTo;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function closestTo(dirtyDateToCompare, dirtyDatesArray) {
      (0, _index2.default)(2, arguments);
      var dateToCompare = (0, _index.default)(dirtyDateToCompare);
      if (isNaN(Number(dateToCompare)))
        return new Date(NaN);
      var timeToCompare = dateToCompare.getTime(), datesArray;
      dirtyDatesArray == null ? datesArray = [] : typeof dirtyDatesArray.forEach == "function" ? datesArray = dirtyDatesArray : datesArray = Array.prototype.slice.call(dirtyDatesArray);
      var result, minDistance;
      return datesArray.forEach(function(dirtyDate) {
        var currentDate = (0, _index.default)(dirtyDate);
        if (isNaN(Number(currentDate))) {
          result = new Date(NaN), minDistance = NaN;
          return;
        }
        var distance = Math.abs(timeToCompare - currentDate.getTime());
        (result == null || distance < Number(minDistance)) && (result = currentDate, minDistance = distance);
      }), result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/compareAsc/index.js
var require_compareAsc = __commonJS({
  "node_modules/date-fns/compareAsc/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = compareAsc;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareAsc(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight), diff = dateLeft.getTime() - dateRight.getTime();
      return diff < 0 ? -1 : diff > 0 ? 1 : diff;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/compareDesc/index.js
var require_compareDesc = __commonJS({
  "node_modules/date-fns/compareDesc/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = compareDesc;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareDesc(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight), diff = dateLeft.getTime() - dateRight.getTime();
      return diff > 0 ? -1 : diff < 0 ? 1 : diff;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/constants/index.js
var require_constants = __commonJS({
  "node_modules/date-fns/constants/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.secondsInYear = exports2.secondsInWeek = exports2.secondsInQuarter = exports2.secondsInMonth = exports2.secondsInMinute = exports2.secondsInHour = exports2.secondsInDay = exports2.quartersInYear = exports2.monthsInYear = exports2.monthsInQuarter = exports2.minutesInHour = exports2.minTime = exports2.millisecondsInSecond = exports2.millisecondsInMinute = exports2.millisecondsInHour = exports2.maxTime = exports2.daysInYear = exports2.daysInWeek = void 0;
    var daysInWeek = 7;
    exports2.daysInWeek = daysInWeek;
    var daysInYear = 365.2425;
    exports2.daysInYear = daysInYear;
    var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
    exports2.maxTime = maxTime;
    var millisecondsInMinute = 6e4;
    exports2.millisecondsInMinute = millisecondsInMinute;
    var millisecondsInHour = 36e5;
    exports2.millisecondsInHour = millisecondsInHour;
    var millisecondsInSecond = 1e3;
    exports2.millisecondsInSecond = millisecondsInSecond;
    var minTime = -maxTime;
    exports2.minTime = minTime;
    var minutesInHour = 60;
    exports2.minutesInHour = minutesInHour;
    var monthsInQuarter = 3;
    exports2.monthsInQuarter = monthsInQuarter;
    var monthsInYear = 12;
    exports2.monthsInYear = monthsInYear;
    var quartersInYear = 4;
    exports2.quartersInYear = quartersInYear;
    var secondsInHour = 3600;
    exports2.secondsInHour = secondsInHour;
    var secondsInMinute = 60;
    exports2.secondsInMinute = secondsInMinute;
    var secondsInDay = secondsInHour * 24;
    exports2.secondsInDay = secondsInDay;
    var secondsInWeek = secondsInDay * 7;
    exports2.secondsInWeek = secondsInWeek;
    var secondsInYear = secondsInDay * daysInYear;
    exports2.secondsInYear = secondsInYear;
    var secondsInMonth = secondsInYear / 12;
    exports2.secondsInMonth = secondsInMonth;
    var secondsInQuarter = secondsInMonth * 3;
    exports2.secondsInQuarter = secondsInQuarter;
  }
});

// node_modules/date-fns/daysToWeeks/index.js
var require_daysToWeeks = __commonJS({
  "node_modules/date-fns/daysToWeeks/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = daysToWeeks;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function daysToWeeks(days) {
      (0, _index.default)(1, arguments);
      var weeks = days / _index2.daysInWeek;
      return Math.floor(weeks);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameDay/index.js
var require_isSameDay = __commonJS({
  "node_modules/date-fns/isSameDay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameDay;
    var _index = _interopRequireDefault(require_startOfDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameDay(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfDay = (0, _index.default)(dirtyDateLeft), dateRightStartOfDay = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isDate/index.js
var require_isDate = __commonJS({
  "node_modules/date-fns/isDate/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isDate;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function isDate(value) {
      return (0, _index.default)(1, arguments), value instanceof Date || _typeof(value) === "object" && Object.prototype.toString.call(value) === "[object Date]";
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isValid/index.js
var require_isValid = __commonJS({
  "node_modules/date-fns/isValid/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isValid;
    var _index = _interopRequireDefault(require_isDate()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isValid(dirtyDate) {
      if ((0, _index3.default)(1, arguments), !(0, _index.default)(dirtyDate) && typeof dirtyDate != "number")
        return !1;
      var date = (0, _index2.default)(dirtyDate);
      return !isNaN(Number(date));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInBusinessDays/index.js
var require_differenceInBusinessDays = __commonJS({
  "node_modules/date-fns/differenceInBusinessDays/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInBusinessDays;
    var _index = _interopRequireDefault(require_addDays()), _index2 = _interopRequireDefault(require_differenceInCalendarDays()), _index3 = _interopRequireDefault(require_isSameDay()), _index4 = _interopRequireDefault(require_isValid()), _index5 = _interopRequireDefault(require_isWeekend()), _index6 = _interopRequireDefault(require_toDate()), _index7 = _interopRequireDefault(require_requiredArgs()), _index8 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index7.default)(2, arguments);
      var dateLeft = (0, _index6.default)(dirtyDateLeft), dateRight = (0, _index6.default)(dirtyDateRight);
      if (!(0, _index4.default)(dateLeft) || !(0, _index4.default)(dateRight))
        return NaN;
      var calendarDifference = (0, _index2.default)(dateLeft, dateRight), sign = calendarDifference < 0 ? -1 : 1, weeks = (0, _index8.default)(calendarDifference / 7), result = weeks * 5;
      for (dateRight = (0, _index.default)(dateRight, weeks * 7); !(0, _index3.default)(dateLeft, dateRight); )
        result += (0, _index5.default)(dateRight) ? 0 : sign, dateRight = (0, _index.default)(dateRight, sign);
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarISOWeekYears/index.js
var require_differenceInCalendarISOWeekYears = __commonJS({
  "node_modules/date-fns/differenceInCalendarISOWeekYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInCalendarISOWeekYears;
    var _index = _interopRequireDefault(require_getISOWeekYear()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {
      return (0, _index2.default)(2, arguments), (0, _index.default)(dirtyDateLeft) - (0, _index.default)(dirtyDateRight);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarISOWeeks/index.js
var require_differenceInCalendarISOWeeks = __commonJS({
  "node_modules/date-fns/differenceInCalendarISOWeeks/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInCalendarISOWeeks;
    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index2 = _interopRequireDefault(require_startOfISOWeek()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var startOfISOWeekLeft = (0, _index2.default)(dirtyDateLeft), startOfISOWeekRight = (0, _index2.default)(dirtyDateRight), timestampLeft = startOfISOWeekLeft.getTime() - (0, _index.default)(startOfISOWeekLeft), timestampRight = startOfISOWeekRight.getTime() - (0, _index.default)(startOfISOWeekRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarMonths/index.js
var require_differenceInCalendarMonths = __commonJS({
  "node_modules/date-fns/differenceInCalendarMonths/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInCalendarMonths;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight), yearDiff = dateLeft.getFullYear() - dateRight.getFullYear(), monthDiff = dateLeft.getMonth() - dateRight.getMonth();
      return yearDiff * 12 + monthDiff;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getQuarter/index.js
var require_getQuarter = __commonJS({
  "node_modules/date-fns/getQuarter/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getQuarter;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), quarter = Math.floor(date.getMonth() / 3) + 1;
      return quarter;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarQuarters/index.js
var require_differenceInCalendarQuarters = __commonJS({
  "node_modules/date-fns/differenceInCalendarQuarters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInCalendarQuarters;
    var _index = _interopRequireDefault(require_getQuarter()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var dateLeft = (0, _index2.default)(dirtyDateLeft), dateRight = (0, _index2.default)(dirtyDateRight), yearDiff = dateLeft.getFullYear() - dateRight.getFullYear(), quarterDiff = (0, _index.default)(dateLeft) - (0, _index.default)(dateRight);
      return yearDiff * 4 + quarterDiff;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarWeeks/index.js
var require_differenceInCalendarWeeks = __commonJS({
  "node_modules/date-fns/differenceInCalendarWeeks/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInCalendarWeeks;
    var _index = _interopRequireDefault(require_startOfWeek()), _index2 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, options2) {
      (0, _index3.default)(2, arguments);
      var startOfWeekLeft = (0, _index.default)(dirtyDateLeft, options2), startOfWeekRight = (0, _index.default)(dirtyDateRight, options2), timestampLeft = startOfWeekLeft.getTime() - (0, _index2.default)(startOfWeekLeft), timestampRight = startOfWeekRight.getTime() - (0, _index2.default)(startOfWeekRight);
      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInCalendarYears/index.js
var require_differenceInCalendarYears = __commonJS({
  "node_modules/date-fns/differenceInCalendarYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInCalendarYears;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() - dateRight.getFullYear();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInDays/index.js
var require_differenceInDays = __commonJS({
  "node_modules/date-fns/differenceInDays/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInDays;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_differenceInCalendarDays()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function compareLocalAsc(dateLeft, dateRight) {
      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();
      return diff < 0 ? -1 : diff > 0 ? 1 : diff;
    }
    function differenceInDays(dirtyDateLeft, dirtyDateRight) {
      (0, _index3.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight), sign = compareLocalAsc(dateLeft, dateRight), difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft.setDate(dateLeft.getDate() - sign * difference);
      var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign), result = sign * (difference - isLastDayNotFull);
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInMilliseconds/index.js
var require_differenceInMilliseconds = __commonJS({
  "node_modules/date-fns/differenceInMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInMilliseconds;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInMilliseconds(dateLeft, dateRight) {
      return (0, _index2.default)(2, arguments), (0, _index.default)(dateLeft).getTime() - (0, _index.default)(dateRight).getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/roundingMethods/index.js
var require_roundingMethods = __commonJS({
  "node_modules/date-fns/_lib/roundingMethods/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.getRoundingMethod = getRoundingMethod;
    var roundingMap = {
      ceil: Math.ceil,
      round: Math.round,
      floor: Math.floor,
      trunc: function(value) {
        return value < 0 ? Math.ceil(value) : Math.floor(value);
      }
    }, defaultRoundingMethod = "trunc";
    function getRoundingMethod(method) {
      return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];
    }
  }
});

// node_modules/date-fns/differenceInHours/index.js
var require_differenceInHours = __commonJS({
  "node_modules/date-fns/differenceInHours/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInHours;
    var _index = require_constants(), _index2 = _interopRequireDefault(require_differenceInMilliseconds()), _index3 = _interopRequireDefault(require_requiredArgs()), _index4 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInHours(dateLeft, dateRight, options2) {
      (0, _index3.default)(2, arguments);
      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInHour;
      return (0, _index4.getRoundingMethod)(options2 == null ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subISOWeekYears/index.js
var require_subISOWeekYears = __commonJS({
  "node_modules/date-fns/subISOWeekYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subISOWeekYears;
    var _index = _interopRequireDefault(require_addISOWeekYears()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subISOWeekYears(dirtyDate, dirtyAmount) {
      (0, _index2.default)(2, arguments);
      var amount = (0, _index3.default)(dirtyAmount);
      return (0, _index.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInISOWeekYears/index.js
var require_differenceInISOWeekYears = __commonJS({
  "node_modules/date-fns/differenceInISOWeekYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInISOWeekYears;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_differenceInCalendarISOWeekYears()), _index3 = _interopRequireDefault(require_compareAsc()), _index4 = _interopRequireDefault(require_subISOWeekYears()), _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index5.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight), sign = (0, _index3.default)(dateLeft, dateRight), difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft = (0, _index4.default)(dateLeft, sign * difference);
      var isLastISOWeekYearNotFull = Number((0, _index3.default)(dateLeft, dateRight) === -sign), result = sign * (difference - isLastISOWeekYearNotFull);
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInMinutes/index.js
var require_differenceInMinutes = __commonJS({
  "node_modules/date-fns/differenceInMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInMinutes;
    var _index = require_constants(), _index2 = _interopRequireDefault(require_differenceInMilliseconds()), _index3 = _interopRequireDefault(require_requiredArgs()), _index4 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInMinutes(dateLeft, dateRight, options2) {
      (0, _index3.default)(2, arguments);
      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInMinute;
      return (0, _index4.getRoundingMethod)(options2 == null ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfDay/index.js
var require_endOfDay = __commonJS({
  "node_modules/date-fns/endOfDay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfDay;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setHours(23, 59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfMonth/index.js
var require_endOfMonth = __commonJS({
  "node_modules/date-fns/endOfMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfMonth;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), month = date.getMonth();
      return date.setFullYear(date.getFullYear(), month + 1, 0), date.setHours(23, 59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isLastDayOfMonth/index.js
var require_isLastDayOfMonth = __commonJS({
  "node_modules/date-fns/isLastDayOfMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isLastDayOfMonth;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_endOfDay()), _index3 = _interopRequireDefault(require_endOfMonth()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isLastDayOfMonth(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return (0, _index2.default)(date).getTime() === (0, _index3.default)(date).getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInMonths/index.js
var require_differenceInMonths = __commonJS({
  "node_modules/date-fns/differenceInMonths/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInMonths;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_differenceInCalendarMonths()), _index3 = _interopRequireDefault(require_compareAsc()), _index4 = _interopRequireDefault(require_requiredArgs()), _index5 = _interopRequireDefault(require_isLastDayOfMonth());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
      (0, _index4.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight), sign = (0, _index3.default)(dateLeft, dateRight), difference = Math.abs((0, _index2.default)(dateLeft, dateRight)), result;
      if (difference < 1)
        result = 0;
      else {
        dateLeft.getMonth() === 1 && dateLeft.getDate() > 27 && dateLeft.setDate(30), dateLeft.setMonth(dateLeft.getMonth() - sign * difference);
        var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
        (0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1 && (isLastMonthNotFull = !1), result = sign * (difference - Number(isLastMonthNotFull));
      }
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInQuarters/index.js
var require_differenceInQuarters = __commonJS({
  "node_modules/date-fns/differenceInQuarters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInQuarters;
    var _index = _interopRequireDefault(require_differenceInMonths()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInQuarters(dateLeft, dateRight, options2) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dateLeft, dateRight) / 3;
      return (0, _index3.getRoundingMethod)(options2 == null ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInSeconds/index.js
var require_differenceInSeconds = __commonJS({
  "node_modules/date-fns/differenceInSeconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInSeconds;
    var _index = _interopRequireDefault(require_differenceInMilliseconds()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInSeconds(dateLeft, dateRight, options2) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dateLeft, dateRight) / 1e3;
      return (0, _index3.getRoundingMethod)(options2 == null ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInWeeks/index.js
var require_differenceInWeeks = __commonJS({
  "node_modules/date-fns/differenceInWeeks/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInWeeks;
    var _index = _interopRequireDefault(require_differenceInDays()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = require_roundingMethods();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInWeeks(dateLeft, dateRight, options2) {
      (0, _index2.default)(2, arguments);
      var diff = (0, _index.default)(dateLeft, dateRight) / 7;
      return (0, _index3.getRoundingMethod)(options2 == null ? void 0 : options2.roundingMethod)(diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/differenceInYears/index.js
var require_differenceInYears = __commonJS({
  "node_modules/date-fns/differenceInYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = differenceInYears;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_differenceInCalendarYears()), _index3 = _interopRequireDefault(require_compareAsc()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function differenceInYears(dirtyDateLeft, dirtyDateRight) {
      (0, _index4.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight), sign = (0, _index3.default)(dateLeft, dateRight), difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
      dateLeft.setFullYear(1584), dateRight.setFullYear(1584);
      var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign, result = sign * (difference - Number(isLastYearNotFull));
      return result === 0 ? 0 : result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachDayOfInterval/index.js
var require_eachDayOfInterval = __commonJS({
  "node_modules/date-fns/eachDayOfInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachDayOfInterval;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachDayOfInterval(dirtyInterval, options2) {
      var _options$step;
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {}, startDate = (0, _index.default)(interval.start), endDate = (0, _index.default)(interval.end), endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime))
        throw new RangeError("Invalid interval");
      var dates = [], currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      var step = Number((_options$step = options2 == null ? void 0 : options2.step) !== null && _options$step !== void 0 ? _options$step : 1);
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number greater than 1");
      for (; currentDate.getTime() <= endTime; )
        dates.push((0, _index.default)(currentDate)), currentDate.setDate(currentDate.getDate() + step), currentDate.setHours(0, 0, 0, 0);
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachHourOfInterval/index.js
var require_eachHourOfInterval = __commonJS({
  "node_modules/date-fns/eachHourOfInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachHourOfInterval;
    var _index = _interopRequireDefault(require_addHours()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachHourOfInterval(dirtyInterval, options2) {
      var _options$step;
      (0, _index3.default)(1, arguments);
      var interval = dirtyInterval || {}, startDate = (0, _index2.default)(interval.start), endDate = (0, _index2.default)(interval.end), startTime = startDate.getTime(), endTime = endDate.getTime();
      if (!(startTime <= endTime))
        throw new RangeError("Invalid interval");
      var dates = [], currentDate = startDate;
      currentDate.setMinutes(0, 0, 0);
      var step = Number((_options$step = options2 == null ? void 0 : options2.step) !== null && _options$step !== void 0 ? _options$step : 1);
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number greater than 1");
      for (; currentDate.getTime() <= endTime; )
        dates.push((0, _index2.default)(currentDate)), currentDate = (0, _index.default)(currentDate, step);
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfMinute/index.js
var require_startOfMinute = __commonJS({
  "node_modules/date-fns/startOfMinute/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfMinute;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfMinute(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setSeconds(0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachMinuteOfInterval/index.js
var require_eachMinuteOfInterval = __commonJS({
  "node_modules/date-fns/eachMinuteOfInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachMinuteOfInterval;
    var _index = _interopRequireDefault(require_addMinutes()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_startOfMinute()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachMinuteOfInterval(interval, options2) {
      var _options$step;
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index3.default)((0, _index2.default)(interval.start)), endDate = (0, _index2.default)(interval.end), startTime = startDate.getTime(), endTime = endDate.getTime();
      if (startTime >= endTime)
        throw new RangeError("Invalid interval");
      var dates = [], currentDate = startDate, step = Number((_options$step = options2 == null ? void 0 : options2.step) !== null && _options$step !== void 0 ? _options$step : 1);
      if (step < 1 || isNaN(step))
        throw new RangeError("`options.step` must be a number equal to or greater than 1");
      for (; currentDate.getTime() <= endTime; )
        dates.push((0, _index2.default)(currentDate)), currentDate = (0, _index.default)(currentDate, step);
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachMonthOfInterval/index.js
var require_eachMonthOfInterval = __commonJS({
  "node_modules/date-fns/eachMonthOfInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachMonthOfInterval;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachMonthOfInterval(dirtyInterval) {
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {}, startDate = (0, _index.default)(interval.start), endDate = (0, _index.default)(interval.end), endTime = endDate.getTime(), dates = [];
      if (!(startDate.getTime() <= endTime))
        throw new RangeError("Invalid interval");
      var currentDate = startDate;
      for (currentDate.setHours(0, 0, 0, 0), currentDate.setDate(1); currentDate.getTime() <= endTime; )
        dates.push((0, _index.default)(currentDate)), currentDate.setMonth(currentDate.getMonth() + 1);
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfQuarter/index.js
var require_startOfQuarter = __commonJS({
  "node_modules/date-fns/startOfQuarter/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfQuarter;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), currentMonth = date.getMonth(), month = currentMonth - currentMonth % 3;
      return date.setMonth(month, 1), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachQuarterOfInterval/index.js
var require_eachQuarterOfInterval = __commonJS({
  "node_modules/date-fns/eachQuarterOfInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachQuarterOfInterval;
    var _index = _interopRequireDefault(require_addQuarters()), _index2 = _interopRequireDefault(require_startOfQuarter()), _index3 = _interopRequireDefault(require_toDate()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachQuarterOfInterval(dirtyInterval) {
      (0, _index4.default)(1, arguments);
      var interval = dirtyInterval || {}, startDate = (0, _index3.default)(interval.start), endDate = (0, _index3.default)(interval.end), endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime))
        throw new RangeError("Invalid interval");
      var startDateQuarter = (0, _index2.default)(startDate), endDateQuarter = (0, _index2.default)(endDate);
      endTime = endDateQuarter.getTime();
      for (var quarters = [], currentQuarter = startDateQuarter; currentQuarter.getTime() <= endTime; )
        quarters.push((0, _index3.default)(currentQuarter)), currentQuarter = (0, _index.default)(currentQuarter, 1);
      return quarters;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachWeekOfInterval/index.js
var require_eachWeekOfInterval = __commonJS({
  "node_modules/date-fns/eachWeekOfInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachWeekOfInterval;
    var _index = _interopRequireDefault(require_addWeeks()), _index2 = _interopRequireDefault(require_startOfWeek()), _index3 = _interopRequireDefault(require_toDate()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekOfInterval(dirtyInterval, options2) {
      (0, _index4.default)(1, arguments);
      var interval = dirtyInterval || {}, startDate = (0, _index3.default)(interval.start), endDate = (0, _index3.default)(interval.end), endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime))
        throw new RangeError("Invalid interval");
      var startDateWeek = (0, _index2.default)(startDate, options2), endDateWeek = (0, _index2.default)(endDate, options2);
      startDateWeek.setHours(15), endDateWeek.setHours(15), endTime = endDateWeek.getTime();
      for (var weeks = [], currentWeek = startDateWeek; currentWeek.getTime() <= endTime; )
        currentWeek.setHours(0), weeks.push((0, _index3.default)(currentWeek)), currentWeek = (0, _index.default)(currentWeek, 1), currentWeek.setHours(15);
      return weeks;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachWeekendOfInterval/index.js
var require_eachWeekendOfInterval = __commonJS({
  "node_modules/date-fns/eachWeekendOfInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachWeekendOfInterval;
    var _index = _interopRequireDefault(require_eachDayOfInterval()), _index2 = _interopRequireDefault(require_isSunday()), _index3 = _interopRequireDefault(require_isWeekend()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfInterval(interval) {
      (0, _index4.default)(1, arguments);
      for (var dateInterval = (0, _index.default)(interval), weekends = [], index2 = 0; index2 < dateInterval.length; ) {
        var date = dateInterval[index2++];
        (0, _index3.default)(date) && (weekends.push(date), (0, _index2.default)(date) && (index2 = index2 + 5));
      }
      return weekends;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfMonth/index.js
var require_startOfMonth = __commonJS({
  "node_modules/date-fns/startOfMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfMonth;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setDate(1), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachWeekendOfMonth/index.js
var require_eachWeekendOfMonth = __commonJS({
  "node_modules/date-fns/eachWeekendOfMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachWeekendOfMonth;
    var _index = _interopRequireDefault(require_eachWeekendOfInterval()), _index2 = _interopRequireDefault(require_startOfMonth()), _index3 = _interopRequireDefault(require_endOfMonth()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfMonth(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index2.default)(dirtyDate);
      if (isNaN(startDate.getTime()))
        throw new RangeError("The passed date is invalid");
      var endDate = (0, _index3.default)(dirtyDate);
      return (0, _index.default)({
        start: startDate,
        end: endDate
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfYear/index.js
var require_endOfYear = __commonJS({
  "node_modules/date-fns/endOfYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear();
      return date.setFullYear(year + 1, 0, 0), date.setHours(23, 59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfYear/index.js
var require_startOfYear = __commonJS({
  "node_modules/date-fns/startOfYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var cleanDate = (0, _index.default)(dirtyDate), date = new Date(0);
      return date.setFullYear(cleanDate.getFullYear(), 0, 1), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachWeekendOfYear/index.js
var require_eachWeekendOfYear = __commonJS({
  "node_modules/date-fns/eachWeekendOfYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachWeekendOfYear;
    var _index = _interopRequireDefault(require_eachWeekendOfInterval()), _index2 = _interopRequireDefault(require_endOfYear()), _index3 = _interopRequireDefault(require_startOfYear()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachWeekendOfYear(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var startDate = (0, _index3.default)(dirtyDate), endDate = (0, _index2.default)(dirtyDate);
      return (0, _index.default)({
        start: startDate,
        end: endDate
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/eachYearOfInterval/index.js
var require_eachYearOfInterval = __commonJS({
  "node_modules/date-fns/eachYearOfInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = eachYearOfInterval;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function eachYearOfInterval(dirtyInterval) {
      (0, _index2.default)(1, arguments);
      var interval = dirtyInterval || {}, startDate = (0, _index.default)(interval.start), endDate = (0, _index.default)(interval.end), endTime = endDate.getTime();
      if (!(startDate.getTime() <= endTime))
        throw new RangeError("Invalid interval");
      var dates = [], currentDate = startDate;
      for (currentDate.setHours(0, 0, 0, 0), currentDate.setMonth(0, 1); currentDate.getTime() <= endTime; )
        dates.push((0, _index.default)(currentDate)), currentDate.setFullYear(currentDate.getFullYear() + 1);
      return dates;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfDecade/index.js
var require_endOfDecade = __commonJS({
  "node_modules/date-fns/endOfDecade/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfDecade;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear(), decade = 9 + Math.floor(year / 10) * 10;
      return date.setFullYear(decade, 11, 31), date.setHours(23, 59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfHour/index.js
var require_endOfHour = __commonJS({
  "node_modules/date-fns/endOfHour/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfHour;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfHour(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setMinutes(59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfWeek/index.js
var require_endOfWeek = __commonJS({
  "node_modules/date-fns/endOfWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfWeek;
    var _index = require_defaultOptions(), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_toInteger()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfWeek(dirtyDate, options2) {
      var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index4.default)(1, arguments);
      var defaultOptions = (0, _index.getDefaultOptions)(), weekStartsOn = (0, _index3.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      var date = (0, _index2.default)(dirtyDate), day = date.getDay(), diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      return date.setDate(date.getDate() + diff), date.setHours(23, 59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfISOWeek/index.js
var require_endOfISOWeek = __commonJS({
  "node_modules/date-fns/endOfISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfISOWeek;
    var _index = _interopRequireDefault(require_endOfWeek()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfISOWeek(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfISOWeekYear/index.js
var require_endOfISOWeekYear = __commonJS({
  "node_modules/date-fns/endOfISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear()), _index2 = _interopRequireDefault(require_startOfISOWeek()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate), fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4), fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuaryOfNextYear);
      return date.setMilliseconds(date.getMilliseconds() - 1), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfMinute/index.js
var require_endOfMinute = __commonJS({
  "node_modules/date-fns/endOfMinute/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfMinute;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfMinute(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setSeconds(59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfQuarter/index.js
var require_endOfQuarter = __commonJS({
  "node_modules/date-fns/endOfQuarter/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfQuarter;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), currentMonth = date.getMonth(), month = currentMonth - currentMonth % 3 + 3;
      return date.setMonth(month, 0), date.setHours(23, 59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfSecond/index.js
var require_endOfSecond = __commonJS({
  "node_modules/date-fns/endOfSecond/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfSecond;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfSecond(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setMilliseconds(999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfToday/index.js
var require_endOfToday = __commonJS({
  "node_modules/date-fns/endOfToday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfToday;
    var _index = _interopRequireDefault(require_endOfDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function endOfToday() {
      return (0, _index.default)(Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfTomorrow/index.js
var require_endOfTomorrow = __commonJS({
  "node_modules/date-fns/endOfTomorrow/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfTomorrow;
    function endOfTomorrow() {
      var now = new Date(), year = now.getFullYear(), month = now.getMonth(), day = now.getDate(), date = new Date(0);
      return date.setFullYear(year, month, day + 1), date.setHours(23, 59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/endOfYesterday/index.js
var require_endOfYesterday = __commonJS({
  "node_modules/date-fns/endOfYesterday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = endOfYesterday;
    function endOfYesterday() {
      var now = new Date(), year = now.getFullYear(), month = now.getMonth(), day = now.getDate(), date = new Date(0);
      return date.setFullYear(year, month, day - 1), date.setHours(23, 59, 59, 999), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subMilliseconds/index.js
var require_subMilliseconds = __commonJS({
  "node_modules/date-fns/subMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subMilliseconds;
    var _index = _interopRequireDefault(require_addMilliseconds()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMilliseconds(dirtyDate, dirtyAmount) {
      (0, _index2.default)(2, arguments);
      var amount = (0, _index3.default)(dirtyAmount);
      return (0, _index.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCDayOfYear/index.js
var require_getUTCDayOfYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCDayOfYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getUTCDayOfYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 864e5;
    function getUTCDayOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), timestamp = date.getTime();
      date.setUTCMonth(0, 1), date.setUTCHours(0, 0, 0, 0);
      var startOfYearTimestamp = date.getTime(), difference = timestamp - startOfYearTimestamp;
      return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCISOWeek/index.js
var require_startOfUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfUTCISOWeek;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCISOWeek(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var weekStartsOn = 1, date = (0, _index.default)(dirtyDate), day = date.getUTCDay(), diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      return date.setUTCDate(date.getUTCDate() - diff), date.setUTCHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCISOWeekYear/index.js
var require_getUTCISOWeekYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getUTCISOWeekYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_startOfUTCISOWeek());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUTCISOWeekYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getUTCFullYear(), fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4), fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index3.default)(fourthOfJanuaryOfNextYear), fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4), fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index3.default)(fourthOfJanuaryOfThisYear);
      return date.getTime() >= startOfNextYear.getTime() ? year + 1 : date.getTime() >= startOfThisYear.getTime() ? year : year - 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js
var require_startOfUTCISOWeekYear = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfUTCISOWeekYear;
    var _index = _interopRequireDefault(require_getUTCISOWeekYear()), _index2 = _interopRequireDefault(require_startOfUTCISOWeek()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate), fourthOfJanuary = new Date(0);
      fourthOfJanuary.setUTCFullYear(year, 0, 4), fourthOfJanuary.setUTCHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCISOWeek/index.js
var require_getUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/getUTCISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getUTCISOWeek;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_startOfUTCISOWeek()), _index3 = _interopRequireDefault(require_startOfUTCISOWeekYear()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getUTCISOWeek(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCWeek/index.js
var require_startOfUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfUTCWeek;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger()), _index4 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCWeek(dirtyDate, options2) {
      var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index2.default)(1, arguments);
      var defaultOptions = (0, _index4.getDefaultOptions)(), weekStartsOn = (0, _index3.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      var date = (0, _index.default)(dirtyDate), day = date.getUTCDay(), diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      return date.setUTCDate(date.getUTCDate() - diff), date.setUTCHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCWeekYear/index.js
var require_getUTCWeekYear = __commonJS({
  "node_modules/date-fns/_lib/getUTCWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getUTCWeekYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_startOfUTCWeek()), _index4 = _interopRequireDefault(require_toInteger()), _index5 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUTCWeekYear(dirtyDate, options2) {
      var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getUTCFullYear(), defaultOptions = (0, _index5.getDefaultOptions)(), firstWeekContainsDate = (0, _index4.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options2 == null ? void 0 : options2.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7))
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate), firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, options2), firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate), firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, options2);
      return date.getTime() >= startOfNextYear.getTime() ? year + 1 : date.getTime() >= startOfThisYear.getTime() ? year : year - 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/startOfUTCWeekYear/index.js
var require_startOfUTCWeekYear = __commonJS({
  "node_modules/date-fns/_lib/startOfUTCWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfUTCWeekYear;
    var _index = _interopRequireDefault(require_getUTCWeekYear()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_startOfUTCWeek()), _index4 = _interopRequireDefault(require_toInteger()), _index5 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfUTCWeekYear(dirtyDate, options2) {
      var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index2.default)(1, arguments);
      var defaultOptions = (0, _index5.getDefaultOptions)(), firstWeekContainsDate = (0, _index4.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options2 == null ? void 0 : options2.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1), year = (0, _index.default)(dirtyDate, options2), firstWeek = new Date(0);
      firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate), firstWeek.setUTCHours(0, 0, 0, 0);
      var date = (0, _index3.default)(firstWeek, options2);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/getUTCWeek/index.js
var require_getUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/getUTCWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getUTCWeek;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_startOfUTCWeek()), _index3 = _interopRequireDefault(require_startOfUTCWeekYear()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getUTCWeek(dirtyDate, options2) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), diff = (0, _index2.default)(date, options2).getTime() - (0, _index3.default)(date, options2).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/addLeadingZeros/index.js
var require_addLeadingZeros = __commonJS({
  "node_modules/date-fns/_lib/addLeadingZeros/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = addLeadingZeros;
    function addLeadingZeros(number2, targetLength) {
      for (var sign = number2 < 0 ? "-" : "", output = Math.abs(number2).toString(); output.length < targetLength; )
        output = "0" + output;
      return sign + output;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/lightFormatters/index.js
var require_lightFormatters = __commonJS({
  "node_modules/date-fns/_lib/format/lightFormatters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formatters = {
      y: function(date, token) {
        var signedYear = date.getUTCFullYear(), year = signedYear > 0 ? signedYear : 1 - signedYear;
        return (0, _index.default)(token === "yy" ? year % 100 : year, token.length);
      },
      M: function(date, token) {
        var month = date.getUTCMonth();
        return token === "M" ? String(month + 1) : (0, _index.default)(month + 1, 2);
      },
      d: function(date, token) {
        return (0, _index.default)(date.getUTCDate(), token.length);
      },
      a: function(date, token) {
        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return dayPeriodEnumValue.toUpperCase();
          case "aaa":
            return dayPeriodEnumValue;
          case "aaaaa":
            return dayPeriodEnumValue[0];
          case "aaaa":
          default:
            return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
        }
      },
      h: function(date, token) {
        return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);
      },
      H: function(date, token) {
        return (0, _index.default)(date.getUTCHours(), token.length);
      },
      m: function(date, token) {
        return (0, _index.default)(date.getUTCMinutes(), token.length);
      },
      s: function(date, token) {
        return (0, _index.default)(date.getUTCSeconds(), token.length);
      },
      S: function(date, token) {
        var numberOfDigits = token.length, milliseconds = date.getUTCMilliseconds(), fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
        return (0, _index.default)(fractionalSeconds, token.length);
      }
    }, _default = formatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/formatters/index.js
var require_formatters = __commonJS({
  "node_modules/date-fns/_lib/format/formatters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_getUTCDayOfYear()), _index2 = _interopRequireDefault(require_getUTCISOWeek()), _index3 = _interopRequireDefault(require_getUTCISOWeekYear()), _index4 = _interopRequireDefault(require_getUTCWeek()), _index5 = _interopRequireDefault(require_getUTCWeekYear()), _index6 = _interopRequireDefault(require_addLeadingZeros()), _index7 = _interopRequireDefault(require_lightFormatters());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var dayPeriodEnum = {
      am: "am",
      pm: "pm",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    }, formatters = {
      G: function(date, token, localize) {
        var era = date.getUTCFullYear() > 0 ? 1 : 0;
        switch (token) {
          case "G":
          case "GG":
          case "GGG":
            return localize.era(era, {
              width: "abbreviated"
            });
          case "GGGGG":
            return localize.era(era, {
              width: "narrow"
            });
          case "GGGG":
          default:
            return localize.era(era, {
              width: "wide"
            });
        }
      },
      y: function(date, token, localize) {
        if (token === "yo") {
          var signedYear = date.getUTCFullYear(), year = signedYear > 0 ? signedYear : 1 - signedYear;
          return localize.ordinalNumber(year, {
            unit: "year"
          });
        }
        return _index7.default.y(date, token);
      },
      Y: function(date, token, localize, options2) {
        var signedWeekYear = (0, _index5.default)(date, options2), weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
        if (token === "YY") {
          var twoDigitYear = weekYear % 100;
          return (0, _index6.default)(twoDigitYear, 2);
        }
        return token === "Yo" ? localize.ordinalNumber(weekYear, {
          unit: "year"
        }) : (0, _index6.default)(weekYear, token.length);
      },
      R: function(date, token) {
        var isoWeekYear = (0, _index3.default)(date);
        return (0, _index6.default)(isoWeekYear, token.length);
      },
      u: function(date, token) {
        var year = date.getUTCFullYear();
        return (0, _index6.default)(year, token.length);
      },
      Q: function(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "Q":
            return String(quarter);
          case "QQ":
            return (0, _index6.default)(quarter, 2);
          case "Qo":
            return localize.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "QQQ":
            return localize.quarter(quarter, {
              width: "abbreviated",
              context: "formatting"
            });
          case "QQQQQ":
            return localize.quarter(quarter, {
              width: "narrow",
              context: "formatting"
            });
          case "QQQQ":
          default:
            return localize.quarter(quarter, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      q: function(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch (token) {
          case "q":
            return String(quarter);
          case "qq":
            return (0, _index6.default)(quarter, 2);
          case "qo":
            return localize.ordinalNumber(quarter, {
              unit: "quarter"
            });
          case "qqq":
            return localize.quarter(quarter, {
              width: "abbreviated",
              context: "standalone"
            });
          case "qqqqq":
            return localize.quarter(quarter, {
              width: "narrow",
              context: "standalone"
            });
          case "qqqq":
          default:
            return localize.quarter(quarter, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      M: function(date, token, localize) {
        var month = date.getUTCMonth();
        switch (token) {
          case "M":
          case "MM":
            return _index7.default.M(date, token);
          case "Mo":
            return localize.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "MMM":
            return localize.month(month, {
              width: "abbreviated",
              context: "formatting"
            });
          case "MMMMM":
            return localize.month(month, {
              width: "narrow",
              context: "formatting"
            });
          case "MMMM":
          default:
            return localize.month(month, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      L: function(date, token, localize) {
        var month = date.getUTCMonth();
        switch (token) {
          case "L":
            return String(month + 1);
          case "LL":
            return (0, _index6.default)(month + 1, 2);
          case "Lo":
            return localize.ordinalNumber(month + 1, {
              unit: "month"
            });
          case "LLL":
            return localize.month(month, {
              width: "abbreviated",
              context: "standalone"
            });
          case "LLLLL":
            return localize.month(month, {
              width: "narrow",
              context: "standalone"
            });
          case "LLLL":
          default:
            return localize.month(month, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      w: function(date, token, localize, options2) {
        var week = (0, _index4.default)(date, options2);
        return token === "wo" ? localize.ordinalNumber(week, {
          unit: "week"
        }) : (0, _index6.default)(week, token.length);
      },
      I: function(date, token, localize) {
        var isoWeek = (0, _index2.default)(date);
        return token === "Io" ? localize.ordinalNumber(isoWeek, {
          unit: "week"
        }) : (0, _index6.default)(isoWeek, token.length);
      },
      d: function(date, token, localize) {
        return token === "do" ? localize.ordinalNumber(date.getUTCDate(), {
          unit: "date"
        }) : _index7.default.d(date, token);
      },
      D: function(date, token, localize) {
        var dayOfYear = (0, _index.default)(date);
        return token === "Do" ? localize.ordinalNumber(dayOfYear, {
          unit: "dayOfYear"
        }) : (0, _index6.default)(dayOfYear, token.length);
      },
      E: function(date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        switch (token) {
          case "E":
          case "EE":
          case "EEE":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "EEEEE":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "EEEEEE":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "EEEE":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      e: function(date, token, localize, options2) {
        var dayOfWeek = date.getUTCDay(), localDayOfWeek = (dayOfWeek - options2.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "e":
            return String(localDayOfWeek);
          case "ee":
            return (0, _index6.default)(localDayOfWeek, 2);
          case "eo":
            return localize.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "eee":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "eeeee":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "eeeeee":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "eeee":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      c: function(date, token, localize, options2) {
        var dayOfWeek = date.getUTCDay(), localDayOfWeek = (dayOfWeek - options2.weekStartsOn + 8) % 7 || 7;
        switch (token) {
          case "c":
            return String(localDayOfWeek);
          case "cc":
            return (0, _index6.default)(localDayOfWeek, token.length);
          case "co":
            return localize.ordinalNumber(localDayOfWeek, {
              unit: "day"
            });
          case "ccc":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "standalone"
            });
          case "ccccc":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "standalone"
            });
          case "cccccc":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "standalone"
            });
          case "cccc":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "standalone"
            });
        }
      },
      i: function(date, token, localize) {
        var dayOfWeek = date.getUTCDay(), isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
        switch (token) {
          case "i":
            return String(isoDayOfWeek);
          case "ii":
            return (0, _index6.default)(isoDayOfWeek, token.length);
          case "io":
            return localize.ordinalNumber(isoDayOfWeek, {
              unit: "day"
            });
          case "iii":
            return localize.day(dayOfWeek, {
              width: "abbreviated",
              context: "formatting"
            });
          case "iiiii":
            return localize.day(dayOfWeek, {
              width: "narrow",
              context: "formatting"
            });
          case "iiiiii":
            return localize.day(dayOfWeek, {
              width: "short",
              context: "formatting"
            });
          case "iiii":
          default:
            return localize.day(dayOfWeek, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      a: function(date, token, localize) {
        var hours = date.getUTCHours(), dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
        switch (token) {
          case "a":
          case "aa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "aaa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "aaaaa":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "aaaa":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      b: function(date, token, localize) {
        var hours = date.getUTCHours(), dayPeriodEnumValue;
        switch (hours === 12 ? dayPeriodEnumValue = dayPeriodEnum.noon : hours === 0 ? dayPeriodEnumValue = dayPeriodEnum.midnight : dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am", token) {
          case "b":
          case "bb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "bbb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            }).toLowerCase();
          case "bbbbb":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "bbbb":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      B: function(date, token, localize) {
        var hours = date.getUTCHours(), dayPeriodEnumValue;
        switch (hours >= 17 ? dayPeriodEnumValue = dayPeriodEnum.evening : hours >= 12 ? dayPeriodEnumValue = dayPeriodEnum.afternoon : hours >= 4 ? dayPeriodEnumValue = dayPeriodEnum.morning : dayPeriodEnumValue = dayPeriodEnum.night, token) {
          case "B":
          case "BB":
          case "BBB":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "abbreviated",
              context: "formatting"
            });
          case "BBBBB":
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "narrow",
              context: "formatting"
            });
          case "BBBB":
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: "wide",
              context: "formatting"
            });
        }
      },
      h: function(date, token, localize) {
        if (token === "ho") {
          var hours = date.getUTCHours() % 12;
          return hours === 0 && (hours = 12), localize.ordinalNumber(hours, {
            unit: "hour"
          });
        }
        return _index7.default.h(date, token);
      },
      H: function(date, token, localize) {
        return token === "Ho" ? localize.ordinalNumber(date.getUTCHours(), {
          unit: "hour"
        }) : _index7.default.H(date, token);
      },
      K: function(date, token, localize) {
        var hours = date.getUTCHours() % 12;
        return token === "Ko" ? localize.ordinalNumber(hours, {
          unit: "hour"
        }) : (0, _index6.default)(hours, token.length);
      },
      k: function(date, token, localize) {
        var hours = date.getUTCHours();
        return hours === 0 && (hours = 24), token === "ko" ? localize.ordinalNumber(hours, {
          unit: "hour"
        }) : (0, _index6.default)(hours, token.length);
      },
      m: function(date, token, localize) {
        return token === "mo" ? localize.ordinalNumber(date.getUTCMinutes(), {
          unit: "minute"
        }) : _index7.default.m(date, token);
      },
      s: function(date, token, localize) {
        return token === "so" ? localize.ordinalNumber(date.getUTCSeconds(), {
          unit: "second"
        }) : _index7.default.s(date, token);
      },
      S: function(date, token) {
        return _index7.default.S(date, token);
      },
      X: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date, timezoneOffset = originalDate.getTimezoneOffset();
        if (timezoneOffset === 0)
          return "Z";
        switch (token) {
          case "X":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "XXXX":
          case "XX":
            return formatTimezone(timezoneOffset);
          case "XXXXX":
          case "XXX":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      x: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date, timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "x":
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          case "xxxx":
          case "xx":
            return formatTimezone(timezoneOffset);
          case "xxxxx":
          case "xxx":
          default:
            return formatTimezone(timezoneOffset, ":");
        }
      },
      O: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date, timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "O":
          case "OO":
          case "OOO":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "OOOO":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      z: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date, timezoneOffset = originalDate.getTimezoneOffset();
        switch (token) {
          case "z":
          case "zz":
          case "zzz":
            return "GMT" + formatTimezoneShort(timezoneOffset, ":");
          case "zzzz":
          default:
            return "GMT" + formatTimezone(timezoneOffset, ":");
        }
      },
      t: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date, timestamp = Math.floor(originalDate.getTime() / 1e3);
        return (0, _index6.default)(timestamp, token.length);
      },
      T: function(date, token, _localize, options2) {
        var originalDate = options2._originalDate || date, timestamp = originalDate.getTime();
        return (0, _index6.default)(timestamp, token.length);
      }
    };
    function formatTimezoneShort(offset, dirtyDelimiter) {
      var sign = offset > 0 ? "-" : "+", absOffset = Math.abs(offset), hours = Math.floor(absOffset / 60), minutes = absOffset % 60;
      if (minutes === 0)
        return sign + String(hours);
      var delimiter = dirtyDelimiter || "";
      return sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2);
    }
    function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
      if (offset % 60 === 0) {
        var sign = offset > 0 ? "-" : "+";
        return sign + (0, _index6.default)(Math.abs(offset) / 60, 2);
      }
      return formatTimezone(offset, dirtyDelimiter);
    }
    function formatTimezone(offset, dirtyDelimiter) {
      var delimiter = dirtyDelimiter || "", sign = offset > 0 ? "-" : "+", absOffset = Math.abs(offset), hours = (0, _index6.default)(Math.floor(absOffset / 60), 2), minutes = (0, _index6.default)(absOffset % 60, 2);
      return sign + hours + delimiter + minutes;
    }
    var _default = formatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/format/longFormatters/index.js
var require_longFormatters = __commonJS({
  "node_modules/date-fns/_lib/format/longFormatters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var dateLongFormatter = function(pattern, formatLong) {
      switch (pattern) {
        case "P":
          return formatLong.date({
            width: "short"
          });
        case "PP":
          return formatLong.date({
            width: "medium"
          });
        case "PPP":
          return formatLong.date({
            width: "long"
          });
        case "PPPP":
        default:
          return formatLong.date({
            width: "full"
          });
      }
    }, timeLongFormatter = function(pattern, formatLong) {
      switch (pattern) {
        case "p":
          return formatLong.time({
            width: "short"
          });
        case "pp":
          return formatLong.time({
            width: "medium"
          });
        case "ppp":
          return formatLong.time({
            width: "long"
          });
        case "pppp":
        default:
          return formatLong.time({
            width: "full"
          });
      }
    }, dateTimeLongFormatter = function(pattern, formatLong) {
      var matchResult = pattern.match(/(P+)(p+)?/) || [], datePattern = matchResult[1], timePattern = matchResult[2];
      if (!timePattern)
        return dateLongFormatter(pattern, formatLong);
      var dateTimeFormat;
      switch (datePattern) {
        case "P":
          dateTimeFormat = formatLong.dateTime({
            width: "short"
          });
          break;
        case "PP":
          dateTimeFormat = formatLong.dateTime({
            width: "medium"
          });
          break;
        case "PPP":
          dateTimeFormat = formatLong.dateTime({
            width: "long"
          });
          break;
        case "PPPP":
        default:
          dateTimeFormat = formatLong.dateTime({
            width: "full"
          });
          break;
      }
      return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong)).replace("{{time}}", timeLongFormatter(timePattern, formatLong));
    }, longFormatters = {
      p: timeLongFormatter,
      P: dateTimeLongFormatter
    }, _default = longFormatters;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/protectedTokens/index.js
var require_protectedTokens = __commonJS({
  "node_modules/date-fns/_lib/protectedTokens/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.isProtectedDayOfYearToken = isProtectedDayOfYearToken;
    exports2.isProtectedWeekYearToken = isProtectedWeekYearToken;
    exports2.throwProtectedError = throwProtectedError;
    var protectedDayOfYearTokens = ["D", "DD"], protectedWeekYearTokens = ["YY", "YYYY"];
    function isProtectedDayOfYearToken(token) {
      return protectedDayOfYearTokens.indexOf(token) !== -1;
    }
    function isProtectedWeekYearToken(token) {
      return protectedWeekYearTokens.indexOf(token) !== -1;
    }
    function throwProtectedError(token, format2, input) {
      if (token === "YYYY")
        throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
      if (token === "YY")
        throw new RangeError("Use `yy` instead of `YY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
      if (token === "D")
        throw new RangeError("Use `d` instead of `D` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
      if (token === "DD")
        throw new RangeError("Use `dd` instead of `DD` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
    }
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js
var require_formatDistance = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var formatDistanceLocale = {
      lessThanXSeconds: {
        one: "less than a second",
        other: "less than {{count}} seconds"
      },
      xSeconds: {
        one: "1 second",
        other: "{{count}} seconds"
      },
      halfAMinute: "half a minute",
      lessThanXMinutes: {
        one: "less than a minute",
        other: "less than {{count}} minutes"
      },
      xMinutes: {
        one: "1 minute",
        other: "{{count}} minutes"
      },
      aboutXHours: {
        one: "about 1 hour",
        other: "about {{count}} hours"
      },
      xHours: {
        one: "1 hour",
        other: "{{count}} hours"
      },
      xDays: {
        one: "1 day",
        other: "{{count}} days"
      },
      aboutXWeeks: {
        one: "about 1 week",
        other: "about {{count}} weeks"
      },
      xWeeks: {
        one: "1 week",
        other: "{{count}} weeks"
      },
      aboutXMonths: {
        one: "about 1 month",
        other: "about {{count}} months"
      },
      xMonths: {
        one: "1 month",
        other: "{{count}} months"
      },
      aboutXYears: {
        one: "about 1 year",
        other: "about {{count}} years"
      },
      xYears: {
        one: "1 year",
        other: "{{count}} years"
      },
      overXYears: {
        one: "over 1 year",
        other: "over {{count}} years"
      },
      almostXYears: {
        one: "almost 1 year",
        other: "almost {{count}} years"
      }
    }, formatDistance = function(token, count, options2) {
      var result, tokenValue = formatDistanceLocale[token];
      return typeof tokenValue == "string" ? result = tokenValue : count === 1 ? result = tokenValue.one : result = tokenValue.other.replace("{{count}}", count.toString()), options2 != null && options2.addSuffix ? options2.comparison && options2.comparison > 0 ? "in " + result : result + " ago" : result;
    }, _default = formatDistance;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js
var require_buildFormatLongFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = buildFormatLongFn;
    function buildFormatLongFn(args) {
      return function() {
        var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, width = options2.width ? String(options2.width) : args.defaultWidth, format2 = args.formats[width] || args.formats[args.defaultWidth];
        return format2;
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatLong/index.js
var require_formatLong = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildFormatLongFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var dateFormats = {
      full: "EEEE, MMMM do, y",
      long: "MMMM do, y",
      medium: "MMM d, y",
      short: "MM/dd/yyyy"
    }, timeFormats = {
      full: "h:mm:ss a zzzz",
      long: "h:mm:ss a z",
      medium: "h:mm:ss a",
      short: "h:mm a"
    }, dateTimeFormats = {
      full: "{{date}} 'at' {{time}}",
      long: "{{date}} 'at' {{time}}",
      medium: "{{date}}, {{time}}",
      short: "{{date}}, {{time}}"
    }, formatLong = {
      date: (0, _index.default)({
        formats: dateFormats,
        defaultWidth: "full"
      }),
      time: (0, _index.default)({
        formats: timeFormats,
        defaultWidth: "full"
      }),
      dateTime: (0, _index.default)({
        formats: dateTimeFormats,
        defaultWidth: "full"
      })
    }, _default = formatLong;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js
var require_formatRelative = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var formatRelativeLocale = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: "P"
    }, formatRelative = function(token, _date, _baseDate, _options) {
      return formatRelativeLocale[token];
    }, _default = formatRelative;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js
var require_buildLocalizeFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = buildLocalizeFn;
    function buildLocalizeFn(args) {
      return function(dirtyIndex, options2) {
        var context = options2 != null && options2.context ? String(options2.context) : "standalone", valuesArray;
        if (context === "formatting" && args.formattingValues) {
          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth, width = options2 != null && options2.width ? String(options2.width) : defaultWidth;
          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
        } else {
          var _defaultWidth = args.defaultWidth, _width = options2 != null && options2.width ? String(options2.width) : args.defaultWidth;
          valuesArray = args.values[_width] || args.values[_defaultWidth];
        }
        var index2 = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
        return valuesArray[index2];
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/localize/index.js
var require_localize = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/localize/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildLocalizeFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var eraValues = {
      narrow: ["B", "A"],
      abbreviated: ["BC", "AD"],
      wide: ["Before Christ", "Anno Domini"]
    }, quarterValues = {
      narrow: ["1", "2", "3", "4"],
      abbreviated: ["Q1", "Q2", "Q3", "Q4"],
      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
    }, monthValues = {
      narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
      abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    }, dayValues = {
      narrow: ["S", "M", "T", "W", "T", "F", "S"],
      short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
    }, dayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      }
    }, formattingDayPeriodValues = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      }
    }, ordinalNumber = function(dirtyNumber, _options) {
      var number2 = Number(dirtyNumber), rem100 = number2 % 100;
      if (rem100 > 20 || rem100 < 10)
        switch (rem100 % 10) {
          case 1:
            return number2 + "st";
          case 2:
            return number2 + "nd";
          case 3:
            return number2 + "rd";
        }
      return number2 + "th";
    }, localize = {
      ordinalNumber,
      era: (0, _index.default)({
        values: eraValues,
        defaultWidth: "wide"
      }),
      quarter: (0, _index.default)({
        values: quarterValues,
        defaultWidth: "wide",
        argumentCallback: function(quarter) {
          return quarter - 1;
        }
      }),
      month: (0, _index.default)({
        values: monthValues,
        defaultWidth: "wide"
      }),
      day: (0, _index.default)({
        values: dayValues,
        defaultWidth: "wide"
      }),
      dayPeriod: (0, _index.default)({
        values: dayPeriodValues,
        defaultWidth: "wide",
        formattingValues: formattingDayPeriodValues,
        defaultFormattingWidth: "wide"
      })
    }, _default = localize;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchFn/index.js
var require_buildMatchFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = buildMatchFn;
    function buildMatchFn(args) {
      return function(string3) {
        var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, width = options2.width, matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth], matchResult = string3.match(matchPattern);
        if (!matchResult)
          return null;
        var matchedString = matchResult[0], parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth], key2 = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
          return pattern.test(matchedString);
        }) : findKey(parsePatterns, function(pattern) {
          return pattern.test(matchedString);
        }), value;
        value = args.valueCallback ? args.valueCallback(key2) : key2, value = options2.valueCallback ? options2.valueCallback(value) : value;
        var rest = string3.slice(matchedString.length);
        return {
          value,
          rest
        };
      };
    }
    function findKey(object, predicate) {
      for (var key2 in object)
        if (object.hasOwnProperty(key2) && predicate(object[key2]))
          return key2;
    }
    function findIndex(array, predicate) {
      for (var key2 = 0; key2 < array.length; key2++)
        if (predicate(array[key2]))
          return key2;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js
var require_buildMatchPatternFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = buildMatchPatternFn;
    function buildMatchPatternFn(args) {
      return function(string3) {
        var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, matchResult = string3.match(args.matchPattern);
        if (!matchResult)
          return null;
        var matchedString = matchResult[0], parseResult = string3.match(args.parsePattern);
        if (!parseResult)
          return null;
        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
        value = options2.valueCallback ? options2.valueCallback(value) : value;
        var rest = string3.slice(matchedString.length);
        return {
          value,
          rest
        };
      };
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/match/index.js
var require_match = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/match/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_buildMatchFn()), _index2 = _interopRequireDefault(require_buildMatchPatternFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i, parseOrdinalNumberPattern = /\d+/i, matchEraPatterns = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i
    }, parseEraPatterns = {
      any: [/^b/i, /^(a|c)/i]
    }, matchQuarterPatterns = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i
    }, parseQuarterPatterns = {
      any: [/1/i, /2/i, /3/i, /4/i]
    }, matchMonthPatterns = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
    }, parseMonthPatterns = {
      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
    }, matchDayPatterns = {
      narrow: /^[smtwf]/i,
      short: /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
    }, parseDayPatterns = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
    }, matchDayPeriodPatterns = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
    }, parseDayPeriodPatterns = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
      }
    }, match = {
      ordinalNumber: (0, _index2.default)({
        matchPattern: matchOrdinalNumberPattern,
        parsePattern: parseOrdinalNumberPattern,
        valueCallback: function(value) {
          return parseInt(value, 10);
        }
      }),
      era: (0, _index.default)({
        matchPatterns: matchEraPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseEraPatterns,
        defaultParseWidth: "any"
      }),
      quarter: (0, _index.default)({
        matchPatterns: matchQuarterPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseQuarterPatterns,
        defaultParseWidth: "any",
        valueCallback: function(index2) {
          return index2 + 1;
        }
      }),
      month: (0, _index.default)({
        matchPatterns: matchMonthPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseMonthPatterns,
        defaultParseWidth: "any"
      }),
      day: (0, _index.default)({
        matchPatterns: matchDayPatterns,
        defaultMatchWidth: "wide",
        parsePatterns: parseDayPatterns,
        defaultParseWidth: "any"
      }),
      dayPeriod: (0, _index.default)({
        matchPatterns: matchDayPeriodPatterns,
        defaultMatchWidth: "any",
        parsePatterns: parseDayPeriodPatterns,
        defaultParseWidth: "any"
      })
    }, _default = match;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/locale/en-US/index.js
var require_en_US = __commonJS({
  "node_modules/date-fns/locale/en-US/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_formatDistance()), _index2 = _interopRequireDefault(require_formatLong()), _index3 = _interopRequireDefault(require_formatRelative()), _index4 = _interopRequireDefault(require_localize()), _index5 = _interopRequireDefault(require_match());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var locale = {
      code: "en-US",
      formatDistance: _index.default,
      formatLong: _index2.default,
      formatRelative: _index3.default,
      localize: _index4.default,
      match: _index5.default,
      options: {
        weekStartsOn: 0,
        firstWeekContainsDate: 1
      }
    }, _default = locale;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/defaultLocale/index.js
var require_defaultLocale = __commonJS({
  "node_modules/date-fns/_lib/defaultLocale/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var _index = _interopRequireDefault(require_en_US());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = _index.default;
    exports2.default = _default;
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/format/index.js
var require_format = __commonJS({
  "node_modules/date-fns/format/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = format2;
    var _index = _interopRequireDefault(require_isValid()), _index2 = _interopRequireDefault(require_subMilliseconds()), _index3 = _interopRequireDefault(require_toDate()), _index4 = _interopRequireDefault(require_formatters()), _index5 = _interopRequireDefault(require_longFormatters()), _index6 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index7 = require_protectedTokens(), _index8 = _interopRequireDefault(require_toInteger()), _index9 = _interopRequireDefault(require_requiredArgs()), _index10 = require_defaultOptions(), _index11 = _interopRequireDefault(require_defaultLocale());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g, longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g, escapedStringRegExp = /^'([^]*?)'?$/, doubleQuoteRegExp = /''/g, unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function format2(dirtyDate, dirtyFormatStr, options2) {
      var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
      (0, _index9.default)(2, arguments);
      var formatStr = String(dirtyFormatStr), defaultOptions = (0, _index10.getDefaultOptions)(), locale = (_ref = (_options$locale = options2 == null ? void 0 : options2.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index11.default, firstWeekContainsDate = (0, _index8.default)((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options2 == null ? void 0 : options2.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options2 == null || (_options$locale2 = options2.locale) === null || _options$locale2 === void 0 || (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7))
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      var weekStartsOn = (0, _index8.default)((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale3 = options2.locale) === null || _options$locale3 === void 0 || (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 || (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      if (!locale.localize)
        throw new RangeError("locale must contain localize property");
      if (!locale.formatLong)
        throw new RangeError("locale must contain formatLong property");
      var originalDate = (0, _index3.default)(dirtyDate);
      if (!(0, _index.default)(originalDate))
        throw new RangeError("Invalid time value");
      var timezoneOffset = (0, _index6.default)(originalDate), utcDate = (0, _index2.default)(originalDate, timezoneOffset), formatterOptions = {
        firstWeekContainsDate,
        weekStartsOn,
        locale,
        _originalDate: originalDate
      }, result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
        var firstCharacter = substring[0];
        if (firstCharacter === "p" || firstCharacter === "P") {
          var longFormatter = _index5.default[firstCharacter];
          return longFormatter(substring, locale.formatLong);
        }
        return substring;
      }).join("").match(formattingTokensRegExp).map(function(substring) {
        if (substring === "''")
          return "'";
        var firstCharacter = substring[0];
        if (firstCharacter === "'")
          return cleanEscapedString(substring);
        var formatter = _index4.default[firstCharacter];
        if (formatter)
          return !(options2 != null && options2.useAdditionalWeekYearTokens) && (0, _index7.isProtectedWeekYearToken)(substring) && (0, _index7.throwProtectedError)(substring, dirtyFormatStr, String(dirtyDate)), !(options2 != null && options2.useAdditionalDayOfYearTokens) && (0, _index7.isProtectedDayOfYearToken)(substring) && (0, _index7.throwProtectedError)(substring, dirtyFormatStr, String(dirtyDate)), formatter(utcDate, substring, locale.localize, formatterOptions);
        if (firstCharacter.match(unescapedLatinCharacterRegExp))
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        return substring;
      }).join("");
      return result;
    }
    function cleanEscapedString(input) {
      var matched = input.match(escapedStringRegExp);
      return matched ? matched[1].replace(doubleQuoteRegExp, "'") : input;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/assign/index.js
var require_assign = __commonJS({
  "node_modules/date-fns/_lib/assign/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = assign;
    function assign(target, object) {
      if (target == null)
        throw new TypeError("assign requires that input parameter not be null or undefined");
      for (var property in object)
        Object.prototype.hasOwnProperty.call(object, property) && (target[property] = object[property]);
      return target;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/_lib/cloneObject/index.js
var require_cloneObject = __commonJS({
  "node_modules/date-fns/_lib/cloneObject/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = cloneObject;
    var _index = _interopRequireDefault(require_assign());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function cloneObject(object) {
      return (0, _index.default)({}, object);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDistance/index.js
var require_formatDistance2 = __commonJS({
  "node_modules/date-fns/formatDistance/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatDistance;
    var _index = require_defaultOptions(), _index2 = _interopRequireDefault(require_compareAsc()), _index3 = _interopRequireDefault(require_differenceInMonths()), _index4 = _interopRequireDefault(require_differenceInSeconds()), _index5 = _interopRequireDefault(require_defaultLocale()), _index6 = _interopRequireDefault(require_toDate()), _index7 = _interopRequireDefault(require_cloneObject()), _index8 = _interopRequireDefault(require_assign()), _index9 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index10 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MINUTES_IN_DAY = 1440, MINUTES_IN_ALMOST_TWO_DAYS = 2520, MINUTES_IN_MONTH = 43200, MINUTES_IN_TWO_MONTHS = 86400;
    function formatDistance(dirtyDate, dirtyBaseDate, options2) {
      var _ref, _options$locale;
      (0, _index10.default)(2, arguments);
      var defaultOptions = (0, _index.getDefaultOptions)(), locale = (_ref = (_options$locale = options2 == null ? void 0 : options2.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index5.default;
      if (!locale.formatDistance)
        throw new RangeError("locale must contain formatDistance property");
      var comparison = (0, _index2.default)(dirtyDate, dirtyBaseDate);
      if (isNaN(comparison))
        throw new RangeError("Invalid time value");
      var localizeOptions = (0, _index8.default)((0, _index7.default)(options2), {
        addSuffix: Boolean(options2 == null ? void 0 : options2.addSuffix),
        comparison
      }), dateLeft, dateRight;
      comparison > 0 ? (dateLeft = (0, _index6.default)(dirtyBaseDate), dateRight = (0, _index6.default)(dirtyDate)) : (dateLeft = (0, _index6.default)(dirtyDate), dateRight = (0, _index6.default)(dirtyBaseDate));
      var seconds = (0, _index4.default)(dateRight, dateLeft), offsetInSeconds = ((0, _index9.default)(dateRight) - (0, _index9.default)(dateLeft)) / 1e3, minutes = Math.round((seconds - offsetInSeconds) / 60), months;
      if (minutes < 2)
        return options2 != null && options2.includeSeconds ? seconds < 5 ? locale.formatDistance("lessThanXSeconds", 5, localizeOptions) : seconds < 10 ? locale.formatDistance("lessThanXSeconds", 10, localizeOptions) : seconds < 20 ? locale.formatDistance("lessThanXSeconds", 20, localizeOptions) : seconds < 40 ? locale.formatDistance("halfAMinute", 0, localizeOptions) : seconds < 60 ? locale.formatDistance("lessThanXMinutes", 1, localizeOptions) : locale.formatDistance("xMinutes", 1, localizeOptions) : minutes === 0 ? locale.formatDistance("lessThanXMinutes", 1, localizeOptions) : locale.formatDistance("xMinutes", minutes, localizeOptions);
      if (minutes < 45)
        return locale.formatDistance("xMinutes", minutes, localizeOptions);
      if (minutes < 90)
        return locale.formatDistance("aboutXHours", 1, localizeOptions);
      if (minutes < MINUTES_IN_DAY) {
        var hours = Math.round(minutes / 60);
        return locale.formatDistance("aboutXHours", hours, localizeOptions);
      } else {
        if (minutes < MINUTES_IN_ALMOST_TWO_DAYS)
          return locale.formatDistance("xDays", 1, localizeOptions);
        if (minutes < MINUTES_IN_MONTH) {
          var days = Math.round(minutes / MINUTES_IN_DAY);
          return locale.formatDistance("xDays", days, localizeOptions);
        } else if (minutes < MINUTES_IN_TWO_MONTHS)
          return months = Math.round(minutes / MINUTES_IN_MONTH), locale.formatDistance("aboutXMonths", months, localizeOptions);
      }
      if (months = (0, _index3.default)(dateRight, dateLeft), months < 12) {
        var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance("xMonths", nearestMonth, localizeOptions);
      } else {
        var monthsSinceStartOfYear = months % 12, years = Math.floor(months / 12);
        return monthsSinceStartOfYear < 3 ? locale.formatDistance("aboutXYears", years, localizeOptions) : monthsSinceStartOfYear < 9 ? locale.formatDistance("overXYears", years, localizeOptions) : locale.formatDistance("almostXYears", years + 1, localizeOptions);
      }
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDistanceStrict/index.js
var require_formatDistanceStrict = __commonJS({
  "node_modules/date-fns/formatDistanceStrict/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatDistanceStrict;
    var _index = require_defaultOptions(), _index2 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index3 = _interopRequireDefault(require_compareAsc()), _index4 = _interopRequireDefault(require_toDate()), _index5 = _interopRequireDefault(require_cloneObject()), _index6 = _interopRequireDefault(require_assign()), _index7 = _interopRequireDefault(require_defaultLocale()), _index8 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_MINUTE = 1e3 * 60, MINUTES_IN_DAY = 60 * 24, MINUTES_IN_MONTH = MINUTES_IN_DAY * 30, MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;
    function formatDistanceStrict(dirtyDate, dirtyBaseDate, options2) {
      var _ref, _options$locale, _options$roundingMeth;
      (0, _index8.default)(2, arguments);
      var defaultOptions = (0, _index.getDefaultOptions)(), locale = (_ref = (_options$locale = options2 == null ? void 0 : options2.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index7.default;
      if (!locale.formatDistance)
        throw new RangeError("locale must contain localize.formatDistance property");
      var comparison = (0, _index3.default)(dirtyDate, dirtyBaseDate);
      if (isNaN(comparison))
        throw new RangeError("Invalid time value");
      var localizeOptions = (0, _index6.default)((0, _index5.default)(options2), {
        addSuffix: Boolean(options2 == null ? void 0 : options2.addSuffix),
        comparison
      }), dateLeft, dateRight;
      comparison > 0 ? (dateLeft = (0, _index4.default)(dirtyBaseDate), dateRight = (0, _index4.default)(dirtyDate)) : (dateLeft = (0, _index4.default)(dirtyDate), dateRight = (0, _index4.default)(dirtyBaseDate));
      var roundingMethod = String((_options$roundingMeth = options2 == null ? void 0 : options2.roundingMethod) !== null && _options$roundingMeth !== void 0 ? _options$roundingMeth : "round"), roundingMethodFn;
      if (roundingMethod === "floor")
        roundingMethodFn = Math.floor;
      else if (roundingMethod === "ceil")
        roundingMethodFn = Math.ceil;
      else if (roundingMethod === "round")
        roundingMethodFn = Math.round;
      else
        throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
      var milliseconds = dateRight.getTime() - dateLeft.getTime(), minutes = milliseconds / MILLISECONDS_IN_MINUTE, timezoneOffset = (0, _index2.default)(dateRight) - (0, _index2.default)(dateLeft), dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE, defaultUnit = options2 == null ? void 0 : options2.unit, unit;
      if (defaultUnit ? unit = String(defaultUnit) : minutes < 1 ? unit = "second" : minutes < 60 ? unit = "minute" : minutes < MINUTES_IN_DAY ? unit = "hour" : dstNormalizedMinutes < MINUTES_IN_MONTH ? unit = "day" : dstNormalizedMinutes < MINUTES_IN_YEAR ? unit = "month" : unit = "year", unit === "second") {
        var seconds = roundingMethodFn(milliseconds / 1e3);
        return locale.formatDistance("xSeconds", seconds, localizeOptions);
      } else if (unit === "minute") {
        var roundedMinutes = roundingMethodFn(minutes);
        return locale.formatDistance("xMinutes", roundedMinutes, localizeOptions);
      } else if (unit === "hour") {
        var hours = roundingMethodFn(minutes / 60);
        return locale.formatDistance("xHours", hours, localizeOptions);
      } else if (unit === "day") {
        var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);
        return locale.formatDistance("xDays", days, localizeOptions);
      } else if (unit === "month") {
        var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);
        return months === 12 && defaultUnit !== "month" ? locale.formatDistance("xYears", 1, localizeOptions) : locale.formatDistance("xMonths", months, localizeOptions);
      } else if (unit === "year") {
        var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);
        return locale.formatDistance("xYears", years, localizeOptions);
      }
      throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDistanceToNow/index.js
var require_formatDistanceToNow = __commonJS({
  "node_modules/date-fns/formatDistanceToNow/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatDistanceToNow;
    var _index = _interopRequireDefault(require_formatDistance2()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatDistanceToNow(dirtyDate, options2) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, Date.now(), options2);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDistanceToNowStrict/index.js
var require_formatDistanceToNowStrict = __commonJS({
  "node_modules/date-fns/formatDistanceToNowStrict/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatDistanceToNowStrict;
    var _index = _interopRequireDefault(require_formatDistanceStrict()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatDistanceToNowStrict(dirtyDate, options2) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, Date.now(), options2);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatDuration/index.js
var require_formatDuration = __commonJS({
  "node_modules/date-fns/formatDuration/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatDuration;
    var _index = require_defaultOptions(), _index2 = _interopRequireDefault(require_defaultLocale());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var defaultFormat = ["years", "months", "weeks", "days", "hours", "minutes", "seconds"];
    function formatDuration(duration, options2) {
      var _ref, _options$locale, _options$format, _options$zero, _options$delimiter;
      if (arguments.length < 1)
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      var defaultOptions = (0, _index.getDefaultOptions)(), locale = (_ref = (_options$locale = options2 == null ? void 0 : options2.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index2.default, format2 = (_options$format = options2 == null ? void 0 : options2.format) !== null && _options$format !== void 0 ? _options$format : defaultFormat, zero = (_options$zero = options2 == null ? void 0 : options2.zero) !== null && _options$zero !== void 0 ? _options$zero : !1, delimiter = (_options$delimiter = options2 == null ? void 0 : options2.delimiter) !== null && _options$delimiter !== void 0 ? _options$delimiter : " ";
      if (!locale.formatDistance)
        return "";
      var result = format2.reduce(function(acc, unit) {
        var token = "x".concat(unit.replace(/(^.)/, function(m) {
          return m.toUpperCase();
        })), value = duration[unit];
        return typeof value == "number" && (zero || duration[unit]) ? acc.concat(locale.formatDistance(token, value)) : acc;
      }, []).join(delimiter);
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatISO/index.js
var require_formatISO = __commonJS({
  "node_modules/date-fns/formatISO/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatISO;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_addLeadingZeros()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatISO(date, options2) {
      var _options$format, _options$representati;
      (0, _index3.default)(1, arguments);
      var originalDate = (0, _index.default)(date);
      if (isNaN(originalDate.getTime()))
        throw new RangeError("Invalid time value");
      var format2 = String((_options$format = options2 == null ? void 0 : options2.format) !== null && _options$format !== void 0 ? _options$format : "extended"), representation = String((_options$representati = options2 == null ? void 0 : options2.representation) !== null && _options$representati !== void 0 ? _options$representati : "complete");
      if (format2 !== "extended" && format2 !== "basic")
        throw new RangeError("format must be 'extended' or 'basic'");
      if (representation !== "date" && representation !== "time" && representation !== "complete")
        throw new RangeError("representation must be 'date', 'time', or 'complete'");
      var result = "", tzOffset = "", dateDelimiter = format2 === "extended" ? "-" : "", timeDelimiter = format2 === "extended" ? ":" : "";
      if (representation !== "time") {
        var day = (0, _index2.default)(originalDate.getDate(), 2), month = (0, _index2.default)(originalDate.getMonth() + 1, 2), year = (0, _index2.default)(originalDate.getFullYear(), 4);
        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
      }
      if (representation !== "date") {
        var offset = originalDate.getTimezoneOffset();
        if (offset !== 0) {
          var absoluteOffset = Math.abs(offset), hourOffset = (0, _index2.default)(Math.floor(absoluteOffset / 60), 2), minuteOffset = (0, _index2.default)(absoluteOffset % 60, 2), sign = offset < 0 ? "+" : "-";
          tzOffset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
        } else
          tzOffset = "Z";
        var hour = (0, _index2.default)(originalDate.getHours(), 2), minute = (0, _index2.default)(originalDate.getMinutes(), 2), second = (0, _index2.default)(originalDate.getSeconds(), 2), separator = result === "" ? "" : "T", time = [hour, minute, second].join(timeDelimiter);
        result = "".concat(result).concat(separator).concat(time).concat(tzOffset);
      }
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatISO9075/index.js
var require_formatISO9075 = __commonJS({
  "node_modules/date-fns/formatISO9075/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatISO9075;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_isValid()), _index3 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatISO9075(dirtyDate, options2) {
      var _options$format, _options$representati;
      if (arguments.length < 1)
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate))
        throw new RangeError("Invalid time value");
      var format2 = String((_options$format = options2 == null ? void 0 : options2.format) !== null && _options$format !== void 0 ? _options$format : "extended"), representation = String((_options$representati = options2 == null ? void 0 : options2.representation) !== null && _options$representati !== void 0 ? _options$representati : "complete");
      if (format2 !== "extended" && format2 !== "basic")
        throw new RangeError("format must be 'extended' or 'basic'");
      if (representation !== "date" && representation !== "time" && representation !== "complete")
        throw new RangeError("representation must be 'date', 'time', or 'complete'");
      var result = "", dateDelimiter = format2 === "extended" ? "-" : "", timeDelimiter = format2 === "extended" ? ":" : "";
      if (representation !== "time") {
        var day = (0, _index3.default)(originalDate.getDate(), 2), month = (0, _index3.default)(originalDate.getMonth() + 1, 2), year = (0, _index3.default)(originalDate.getFullYear(), 4);
        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
      }
      if (representation !== "date") {
        var hour = (0, _index3.default)(originalDate.getHours(), 2), minute = (0, _index3.default)(originalDate.getMinutes(), 2), second = (0, _index3.default)(originalDate.getSeconds(), 2), separator = result === "" ? "" : " ";
        result = "".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);
      }
      return result;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatISODuration/index.js
var require_formatISODuration = __commonJS({
  "node_modules/date-fns/formatISODuration/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatISODuration;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function formatISODuration(duration) {
      if ((0, _index.default)(1, arguments), _typeof(duration) !== "object")
        throw new Error("Duration must be an object");
      var _duration$years = duration.years, years = _duration$years === void 0 ? 0 : _duration$years, _duration$months = duration.months, months = _duration$months === void 0 ? 0 : _duration$months, _duration$days = duration.days, days = _duration$days === void 0 ? 0 : _duration$days, _duration$hours = duration.hours, hours = _duration$hours === void 0 ? 0 : _duration$hours, _duration$minutes = duration.minutes, minutes = _duration$minutes === void 0 ? 0 : _duration$minutes, _duration$seconds = duration.seconds, seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;
      return "P".concat(years, "Y").concat(months, "M").concat(days, "DT").concat(hours, "H").concat(minutes, "M").concat(seconds, "S");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatRFC3339/index.js
var require_formatRFC3339 = __commonJS({
  "node_modules/date-fns/formatRFC3339/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatRFC3339;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_isValid()), _index3 = _interopRequireDefault(require_addLeadingZeros()), _index4 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatRFC3339(dirtyDate, options2) {
      var _options$fractionDigi;
      if (arguments.length < 1)
        throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate))
        throw new RangeError("Invalid time value");
      var fractionDigits = Number((_options$fractionDigi = options2 == null ? void 0 : options2.fractionDigits) !== null && _options$fractionDigi !== void 0 ? _options$fractionDigi : 0);
      if (!(fractionDigits >= 0 && fractionDigits <= 3))
        throw new RangeError("fractionDigits must be between 0 and 3 inclusively");
      var day = (0, _index3.default)(originalDate.getDate(), 2), month = (0, _index3.default)(originalDate.getMonth() + 1, 2), year = originalDate.getFullYear(), hour = (0, _index3.default)(originalDate.getHours(), 2), minute = (0, _index3.default)(originalDate.getMinutes(), 2), second = (0, _index3.default)(originalDate.getSeconds(), 2), fractionalSecond = "";
      if (fractionDigits > 0) {
        var milliseconds = originalDate.getMilliseconds(), fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));
        fractionalSecond = "." + (0, _index3.default)(fractionalSeconds, fractionDigits);
      }
      var offset = "", tzOffset = originalDate.getTimezoneOffset();
      if (tzOffset !== 0) {
        var absoluteOffset = Math.abs(tzOffset), hourOffset = (0, _index3.default)((0, _index4.default)(absoluteOffset / 60), 2), minuteOffset = (0, _index3.default)(absoluteOffset % 60, 2), sign = tzOffset < 0 ? "+" : "-";
        offset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
      } else
        offset = "Z";
      return "".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(fractionalSecond).concat(offset);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatRFC7231/index.js
var require_formatRFC7231 = __commonJS({
  "node_modules/date-fns/formatRFC7231/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatRFC7231;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_isValid()), _index3 = _interopRequireDefault(require_addLeadingZeros());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    function formatRFC7231(dirtyDate) {
      if (arguments.length < 1)
        throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index2.default)(originalDate))
        throw new RangeError("Invalid time value");
      var dayName = days[originalDate.getUTCDay()], dayOfMonth = (0, _index3.default)(originalDate.getUTCDate(), 2), monthName = months[originalDate.getUTCMonth()], year = originalDate.getUTCFullYear(), hour = (0, _index3.default)(originalDate.getUTCHours(), 2), minute = (0, _index3.default)(originalDate.getUTCMinutes(), 2), second = (0, _index3.default)(originalDate.getUTCSeconds(), 2);
      return "".concat(dayName, ", ").concat(dayOfMonth, " ").concat(monthName, " ").concat(year, " ").concat(hour, ":").concat(minute, ":").concat(second, " GMT");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/formatRelative/index.js
var require_formatRelative2 = __commonJS({
  "node_modules/date-fns/formatRelative/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = formatRelative;
    var _index = require_defaultOptions(), _index2 = _interopRequireDefault(require_differenceInCalendarDays()), _index3 = _interopRequireDefault(require_format()), _index4 = _interopRequireDefault(require_defaultLocale()), _index5 = _interopRequireDefault(require_subMilliseconds()), _index6 = _interopRequireDefault(require_toDate()), _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index8 = _interopRequireDefault(require_requiredArgs()), _index9 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function formatRelative(dirtyDate, dirtyBaseDate, options2) {
      var _ref, _options$locale, _ref2, _ref3, _ref4, _options$weekStartsOn, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2;
      (0, _index8.default)(2, arguments);
      var date = (0, _index6.default)(dirtyDate), baseDate = (0, _index6.default)(dirtyBaseDate), defaultOptions = (0, _index.getDefaultOptions)(), locale = (_ref = (_options$locale = options2 == null ? void 0 : options2.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index4.default, weekStartsOn = (0, _index9.default)((_ref2 = (_ref3 = (_ref4 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale2 = options2.locale) === null || _options$locale2 === void 0 || (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.weekStartsOn) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : 0);
      if (!locale.localize)
        throw new RangeError("locale must contain localize property");
      if (!locale.formatLong)
        throw new RangeError("locale must contain formatLong property");
      if (!locale.formatRelative)
        throw new RangeError("locale must contain formatRelative property");
      var diff = (0, _index2.default)(date, baseDate);
      if (isNaN(diff))
        throw new RangeError("Invalid time value");
      var token;
      diff < -6 ? token = "other" : diff < -1 ? token = "lastWeek" : diff < 0 ? token = "yesterday" : diff < 1 ? token = "today" : diff < 2 ? token = "tomorrow" : diff < 7 ? token = "nextWeek" : token = "other";
      var utcDate = (0, _index5.default)(date, (0, _index7.default)(date)), utcBaseDate = (0, _index5.default)(baseDate, (0, _index7.default)(baseDate)), formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {
        locale,
        weekStartsOn
      });
      return (0, _index3.default)(date, formatStr, {
        locale,
        weekStartsOn
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/fromUnixTime/index.js
var require_fromUnixTime = __commonJS({
  "node_modules/date-fns/fromUnixTime/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = fromUnixTime;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_toInteger()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function fromUnixTime(dirtyUnixTime) {
      (0, _index3.default)(1, arguments);
      var unixTime = (0, _index2.default)(dirtyUnixTime);
      return (0, _index.default)(unixTime * 1e3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDate/index.js
var require_getDate = __commonJS({
  "node_modules/date-fns/getDate/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getDate;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDate(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), dayOfMonth = date.getDate();
      return dayOfMonth;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDay/index.js
var require_getDay = __commonJS({
  "node_modules/date-fns/getDay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getDay;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), day = date.getDay();
      return day;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDayOfYear/index.js
var require_getDayOfYear = __commonJS({
  "node_modules/date-fns/getDayOfYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getDayOfYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_startOfYear()), _index3 = _interopRequireDefault(require_differenceInCalendarDays()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDayOfYear(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), diff = (0, _index3.default)(date, (0, _index2.default)(date)), dayOfYear = diff + 1;
      return dayOfYear;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDaysInMonth/index.js
var require_getDaysInMonth = __commonJS({
  "node_modules/date-fns/getDaysInMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getDaysInMonth;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDaysInMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear(), monthIndex = date.getMonth(), lastDayOfMonth = new Date(0);
      return lastDayOfMonth.setFullYear(year, monthIndex + 1, 0), lastDayOfMonth.setHours(0, 0, 0, 0), lastDayOfMonth.getDate();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isLeapYear/index.js
var require_isLeapYear = __commonJS({
  "node_modules/date-fns/isLeapYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isLeapYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isLeapYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear();
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDaysInYear/index.js
var require_getDaysInYear = __commonJS({
  "node_modules/date-fns/getDaysInYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getDaysInYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_isLeapYear()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDaysInYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return String(new Date(date)) === "Invalid Date" ? NaN : (0, _index2.default)(date) ? 366 : 365;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDecade/index.js
var require_getDecade = __commonJS({
  "node_modules/date-fns/getDecade/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getDecade;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear(), decade = Math.floor(year / 10) * 10;
      return decade;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getDefaultOptions/index.js
var require_getDefaultOptions = __commonJS({
  "node_modules/date-fns/getDefaultOptions/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getDefaultOptions;
    var _index = require_defaultOptions(), _index2 = _interopRequireDefault(require_assign());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDefaultOptions() {
      return (0, _index2.default)({}, (0, _index.getDefaultOptions)());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getHours/index.js
var require_getHours = __commonJS({
  "node_modules/date-fns/getHours/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getHours;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getHours(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), hours = date.getHours();
      return hours;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getISODay/index.js
var require_getISODay = __commonJS({
  "node_modules/date-fns/getISODay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getISODay;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getISODay(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), day = date.getDay();
      return day === 0 && (day = 7), day;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getISOWeek/index.js
var require_getISOWeek = __commonJS({
  "node_modules/date-fns/getISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getISOWeek;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_startOfISOWeek()), _index3 = _interopRequireDefault(require_startOfISOWeekYear()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getISOWeek(dirtyDate) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getISOWeeksInYear/index.js
var require_getISOWeeksInYear = __commonJS({
  "node_modules/date-fns/getISOWeeksInYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getISOWeeksInYear;
    var _index = _interopRequireDefault(require_startOfISOWeekYear()), _index2 = _interopRequireDefault(require_addWeeks()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getISOWeeksInYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var thisYear = (0, _index.default)(dirtyDate), nextYear = (0, _index.default)((0, _index2.default)(thisYear, 60)), diff = nextYear.valueOf() - thisYear.valueOf();
      return Math.round(diff / MILLISECONDS_IN_WEEK);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getMilliseconds/index.js
var require_getMilliseconds = __commonJS({
  "node_modules/date-fns/getMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getMilliseconds;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMilliseconds(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), milliseconds = date.getMilliseconds();
      return milliseconds;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getMinutes/index.js
var require_getMinutes = __commonJS({
  "node_modules/date-fns/getMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getMinutes;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMinutes(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), minutes = date.getMinutes();
      return minutes;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getMonth/index.js
var require_getMonth = __commonJS({
  "node_modules/date-fns/getMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getMonth;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), month = date.getMonth();
      return month;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getOverlappingDaysInIntervals/index.js
var require_getOverlappingDaysInIntervals = __commonJS({
  "node_modules/date-fns/getOverlappingDaysInIntervals/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getOverlappingDaysInIntervals;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1e3;
    function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {
      (0, _index2.default)(2, arguments);
      var intervalLeft = dirtyIntervalLeft || {}, intervalRight = dirtyIntervalRight || {}, leftStartTime = (0, _index.default)(intervalLeft.start).getTime(), leftEndTime = (0, _index.default)(intervalLeft.end).getTime(), rightStartTime = (0, _index.default)(intervalRight.start).getTime(), rightEndTime = (0, _index.default)(intervalRight.end).getTime();
      if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime))
        throw new RangeError("Invalid interval");
      var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;
      if (!isOverlapping)
        return 0;
      var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime, overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime, differenceInMs = overlapEndDate - overlapStartDate;
      return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getSeconds/index.js
var require_getSeconds = __commonJS({
  "node_modules/date-fns/getSeconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getSeconds;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getSeconds(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), seconds = date.getSeconds();
      return seconds;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getTime/index.js
var require_getTime = __commonJS({
  "node_modules/date-fns/getTime/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getTime;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getTime(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), timestamp = date.getTime();
      return timestamp;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getUnixTime/index.js
var require_getUnixTime = __commonJS({
  "node_modules/date-fns/getUnixTime/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getUnixTime;
    var _index = _interopRequireDefault(require_getTime()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getUnixTime(dirtyDate) {
      return (0, _index2.default)(1, arguments), Math.floor((0, _index.default)(dirtyDate) / 1e3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getWeekYear/index.js
var require_getWeekYear = __commonJS({
  "node_modules/date-fns/getWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getWeekYear;
    var _index = _interopRequireDefault(require_startOfWeek()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_toInteger()), _index4 = _interopRequireDefault(require_requiredArgs()), _index5 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeekYear(dirtyDate, options2) {
      var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index4.default)(1, arguments);
      var date = (0, _index2.default)(dirtyDate), year = date.getFullYear(), defaultOptions = (0, _index5.getDefaultOptions)(), firstWeekContainsDate = (0, _index3.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options2 == null ? void 0 : options2.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7))
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate), firstWeekOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = (0, _index.default)(firstWeekOfNextYear, options2), firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate), firstWeekOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = (0, _index.default)(firstWeekOfThisYear, options2);
      return date.getTime() >= startOfNextYear.getTime() ? year + 1 : date.getTime() >= startOfThisYear.getTime() ? year : year - 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfWeekYear/index.js
var require_startOfWeekYear = __commonJS({
  "node_modules/date-fns/startOfWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfWeekYear;
    var _index = _interopRequireDefault(require_getWeekYear()), _index2 = _interopRequireDefault(require_startOfWeek()), _index3 = _interopRequireDefault(require_toInteger()), _index4 = _interopRequireDefault(require_requiredArgs()), _index5 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfWeekYear(dirtyDate, options2) {
      var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index4.default)(1, arguments);
      var defaultOptions = (0, _index5.getDefaultOptions)(), firstWeekContainsDate = (0, _index3.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options2 == null ? void 0 : options2.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1), year = (0, _index.default)(dirtyDate, options2), firstWeek = new Date(0);
      firstWeek.setFullYear(year, 0, firstWeekContainsDate), firstWeek.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(firstWeek, options2);
      return date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getWeek/index.js
var require_getWeek = __commonJS({
  "node_modules/date-fns/getWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getWeek;
    var _index = _interopRequireDefault(require_startOfWeek()), _index2 = _interopRequireDefault(require_startOfWeekYear()), _index3 = _interopRequireDefault(require_toDate()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MILLISECONDS_IN_WEEK = 6048e5;
    function getWeek(dirtyDate, options2) {
      (0, _index4.default)(1, arguments);
      var date = (0, _index3.default)(dirtyDate), diff = (0, _index.default)(date, options2).getTime() - (0, _index2.default)(date, options2).getTime();
      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getWeekOfMonth/index.js
var require_getWeekOfMonth = __commonJS({
  "node_modules/date-fns/getWeekOfMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getWeekOfMonth;
    var _index = require_defaultOptions(), _index2 = _interopRequireDefault(require_getDate()), _index3 = _interopRequireDefault(require_getDay()), _index4 = _interopRequireDefault(require_startOfMonth()), _index5 = _interopRequireDefault(require_requiredArgs()), _index6 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeekOfMonth(date, options2) {
      var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index5.default)(1, arguments);
      var defaultOptions = (0, _index.getDefaultOptions)(), weekStartsOn = (0, _index6.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      var currentDayOfMonth = (0, _index2.default)(date);
      if (isNaN(currentDayOfMonth))
        return NaN;
      var startWeekDay = (0, _index3.default)((0, _index4.default)(date)), lastDayOfFirstWeek = weekStartsOn - startWeekDay;
      lastDayOfFirstWeek <= 0 && (lastDayOfFirstWeek += 7);
      var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;
      return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfMonth/index.js
var require_lastDayOfMonth = __commonJS({
  "node_modules/date-fns/lastDayOfMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = lastDayOfMonth;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfMonth(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), month = date.getMonth();
      return date.setFullYear(date.getFullYear(), month + 1, 0), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getWeeksInMonth/index.js
var require_getWeeksInMonth = __commonJS({
  "node_modules/date-fns/getWeeksInMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getWeeksInMonth;
    var _index = _interopRequireDefault(require_differenceInCalendarWeeks()), _index2 = _interopRequireDefault(require_lastDayOfMonth()), _index3 = _interopRequireDefault(require_startOfMonth()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getWeeksInMonth(date, options2) {
      return (0, _index4.default)(1, arguments), (0, _index.default)((0, _index2.default)(date), (0, _index3.default)(date), options2) + 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/getYear/index.js
var require_getYear = __commonJS({
  "node_modules/date-fns/getYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = getYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getYear(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getFullYear();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/hoursToMilliseconds/index.js
var require_hoursToMilliseconds = __commonJS({
  "node_modules/date-fns/hoursToMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = hoursToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToMilliseconds(hours) {
      return (0, _index.default)(1, arguments), Math.floor(hours * _index2.millisecondsInHour);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/hoursToMinutes/index.js
var require_hoursToMinutes = __commonJS({
  "node_modules/date-fns/hoursToMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = hoursToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToMinutes(hours) {
      return (0, _index.default)(1, arguments), Math.floor(hours * _index2.minutesInHour);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/hoursToSeconds/index.js
var require_hoursToSeconds = __commonJS({
  "node_modules/date-fns/hoursToSeconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = hoursToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hoursToSeconds(hours) {
      return (0, _index.default)(1, arguments), Math.floor(hours * _index2.secondsInHour);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/intervalToDuration/index.js
var require_intervalToDuration = __commonJS({
  "node_modules/date-fns/intervalToDuration/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = intervalToDuration;
    var _index = _interopRequireDefault(require_compareAsc()), _index2 = _interopRequireDefault(require_add()), _index3 = _interopRequireDefault(require_differenceInDays()), _index4 = _interopRequireDefault(require_differenceInHours()), _index5 = _interopRequireDefault(require_differenceInMinutes()), _index6 = _interopRequireDefault(require_differenceInMonths()), _index7 = _interopRequireDefault(require_differenceInSeconds()), _index8 = _interopRequireDefault(require_differenceInYears()), _index9 = _interopRequireDefault(require_toDate()), _index10 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function intervalToDuration(interval) {
      (0, _index10.default)(1, arguments);
      var start = (0, _index9.default)(interval.start), end = (0, _index9.default)(interval.end);
      if (isNaN(start.getTime()))
        throw new RangeError("Start Date is invalid");
      if (isNaN(end.getTime()))
        throw new RangeError("End Date is invalid");
      var duration = {};
      duration.years = Math.abs((0, _index8.default)(end, start));
      var sign = (0, _index.default)(end, start), remainingMonths = (0, _index2.default)(start, {
        years: sign * duration.years
      });
      duration.months = Math.abs((0, _index6.default)(end, remainingMonths));
      var remainingDays = (0, _index2.default)(remainingMonths, {
        months: sign * duration.months
      });
      duration.days = Math.abs((0, _index3.default)(end, remainingDays));
      var remainingHours = (0, _index2.default)(remainingDays, {
        days: sign * duration.days
      });
      duration.hours = Math.abs((0, _index4.default)(end, remainingHours));
      var remainingMinutes = (0, _index2.default)(remainingHours, {
        hours: sign * duration.hours
      });
      duration.minutes = Math.abs((0, _index5.default)(end, remainingMinutes));
      var remainingSeconds = (0, _index2.default)(remainingMinutes, {
        minutes: sign * duration.minutes
      });
      return duration.seconds = Math.abs((0, _index7.default)(end, remainingSeconds)), duration;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/intlFormat/index.js
var require_intlFormat = __commonJS({
  "node_modules/date-fns/intlFormat/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = intlFormat;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function intlFormat(date, formatOrLocale, localeOptions) {
      var _localeOptions;
      (0, _index.default)(1, arguments);
      var formatOptions;
      return isFormatOptions(formatOrLocale) ? formatOptions = formatOrLocale : localeOptions = formatOrLocale, new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);
    }
    function isFormatOptions(opts) {
      return opts !== void 0 && !("locale" in opts);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/intlFormatDistance/index.js
var require_intlFormatDistance = __commonJS({
  "node_modules/date-fns/intlFormatDistance/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = intlFormatDistance;
    var _index = require_constants(), _index2 = _interopRequireDefault(require_differenceInCalendarDays()), _index3 = _interopRequireDefault(require_differenceInCalendarMonths()), _index4 = _interopRequireDefault(require_differenceInCalendarQuarters()), _index5 = _interopRequireDefault(require_differenceInCalendarWeeks()), _index6 = _interopRequireDefault(require_differenceInCalendarYears()), _index7 = _interopRequireDefault(require_differenceInHours()), _index8 = _interopRequireDefault(require_differenceInMinutes()), _index9 = _interopRequireDefault(require_differenceInSeconds()), _index10 = _interopRequireDefault(require_toDate()), _index11 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function intlFormatDistance(date, baseDate, options2) {
      (0, _index11.default)(2, arguments);
      var value = 0, unit, dateLeft = (0, _index10.default)(date), dateRight = (0, _index10.default)(baseDate);
      if (options2 != null && options2.unit)
        unit = options2 == null ? void 0 : options2.unit, unit === "second" ? value = (0, _index9.default)(dateLeft, dateRight) : unit === "minute" ? value = (0, _index8.default)(dateLeft, dateRight) : unit === "hour" ? value = (0, _index7.default)(dateLeft, dateRight) : unit === "day" ? value = (0, _index2.default)(dateLeft, dateRight) : unit === "week" ? value = (0, _index5.default)(dateLeft, dateRight) : unit === "month" ? value = (0, _index3.default)(dateLeft, dateRight) : unit === "quarter" ? value = (0, _index4.default)(dateLeft, dateRight) : unit === "year" && (value = (0, _index6.default)(dateLeft, dateRight));
      else {
        var diffInSeconds = (0, _index9.default)(dateLeft, dateRight);
        Math.abs(diffInSeconds) < _index.secondsInMinute ? (value = (0, _index9.default)(dateLeft, dateRight), unit = "second") : Math.abs(diffInSeconds) < _index.secondsInHour ? (value = (0, _index8.default)(dateLeft, dateRight), unit = "minute") : Math.abs(diffInSeconds) < _index.secondsInDay && Math.abs((0, _index2.default)(dateLeft, dateRight)) < 1 ? (value = (0, _index7.default)(dateLeft, dateRight), unit = "hour") : Math.abs(diffInSeconds) < _index.secondsInWeek && (value = (0, _index2.default)(dateLeft, dateRight)) && Math.abs(value) < 7 ? unit = "day" : Math.abs(diffInSeconds) < _index.secondsInMonth ? (value = (0, _index5.default)(dateLeft, dateRight), unit = "week") : Math.abs(diffInSeconds) < _index.secondsInQuarter ? (value = (0, _index3.default)(dateLeft, dateRight), unit = "month") : Math.abs(diffInSeconds) < _index.secondsInYear && (0, _index4.default)(dateLeft, dateRight) < 4 ? (value = (0, _index4.default)(dateLeft, dateRight), unit = "quarter") : (value = (0, _index6.default)(dateLeft, dateRight), unit = "year");
      }
      var rtf = new Intl.RelativeTimeFormat(options2 == null ? void 0 : options2.locale, {
        localeMatcher: options2 == null ? void 0 : options2.localeMatcher,
        numeric: (options2 == null ? void 0 : options2.numeric) || "auto",
        style: options2 == null ? void 0 : options2.style
      });
      return rtf.format(value, unit);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isAfter/index.js
var require_isAfter = __commonJS({
  "node_modules/date-fns/isAfter/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isAfter;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isAfter(dirtyDate, dirtyDateToCompare) {
      (0, _index2.default)(2, arguments);
      var date = (0, _index.default)(dirtyDate), dateToCompare = (0, _index.default)(dirtyDateToCompare);
      return date.getTime() > dateToCompare.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isBefore/index.js
var require_isBefore = __commonJS({
  "node_modules/date-fns/isBefore/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isBefore;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isBefore(dirtyDate, dirtyDateToCompare) {
      (0, _index2.default)(2, arguments);
      var date = (0, _index.default)(dirtyDate), dateToCompare = (0, _index.default)(dirtyDateToCompare);
      return date.getTime() < dateToCompare.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isEqual/index.js
var require_isEqual = __commonJS({
  "node_modules/date-fns/isEqual/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isEqual;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isEqual(dirtyLeftDate, dirtyRightDate) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyLeftDate), dateRight = (0, _index.default)(dirtyRightDate);
      return dateLeft.getTime() === dateRight.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isExists/index.js
var require_isExists = __commonJS({
  "node_modules/date-fns/isExists/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isExists;
    function isExists(year, month, day) {
      if (arguments.length < 3)
        throw new TypeError("3 argument required, but only " + arguments.length + " present");
      var date = new Date(year, month, day);
      return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isFirstDayOfMonth/index.js
var require_isFirstDayOfMonth = __commonJS({
  "node_modules/date-fns/isFirstDayOfMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isFirstDayOfMonth;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFirstDayOfMonth(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getDate() === 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isFriday/index.js
var require_isFriday = __commonJS({
  "node_modules/date-fns/isFriday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isFriday;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFriday(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getDay() === 5;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isFuture/index.js
var require_isFuture = __commonJS({
  "node_modules/date-fns/isFuture/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isFuture;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isFuture(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getTime() > Date.now();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parse/_lib/Setter.js
var require_Setter = __commonJS({
  "node_modules/date-fns/parse/_lib/Setter.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.ValueSetter = exports2.Setter = exports2.DateToSystemTimezoneSetter = void 0;
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var TIMEZONE_UNIT_PRIORITY = 10, Setter = /* @__PURE__ */ function() {
      function Setter2() {
        _classCallCheck(this, Setter2), _defineProperty(this, "subPriority", 0);
      }
      return _createClass(Setter2, [{
        key: "validate",
        value: function(_utcDate, _options) {
          return !0;
        }
      }]), Setter2;
    }();
    exports2.Setter = Setter;
    var ValueSetter = /* @__PURE__ */ function(_Setter) {
      _inherits(ValueSetter2, _Setter);
      var _super = _createSuper(ValueSetter2);
      function ValueSetter2(value, validateValue, setValue, priority, subPriority) {
        var _this;
        return _classCallCheck(this, ValueSetter2), _this = _super.call(this), _this.value = value, _this.validateValue = validateValue, _this.setValue = setValue, _this.priority = priority, subPriority && (_this.subPriority = subPriority), _this;
      }
      return _createClass(ValueSetter2, [{
        key: "validate",
        value: function(utcDate, options2) {
          return this.validateValue(utcDate, this.value, options2);
        }
      }, {
        key: "set",
        value: function(utcDate, flags, options2) {
          return this.setValue(utcDate, flags, this.value, options2);
        }
      }]), ValueSetter2;
    }(Setter);
    exports2.ValueSetter = ValueSetter;
    var DateToSystemTimezoneSetter = /* @__PURE__ */ function(_Setter2) {
      _inherits(DateToSystemTimezoneSetter2, _Setter2);
      var _super2 = _createSuper(DateToSystemTimezoneSetter2);
      function DateToSystemTimezoneSetter2() {
        var _this2;
        _classCallCheck(this, DateToSystemTimezoneSetter2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this2 = _super2.call.apply(_super2, [this].concat(args)), _defineProperty(_assertThisInitialized(_this2), "priority", TIMEZONE_UNIT_PRIORITY), _defineProperty(_assertThisInitialized(_this2), "subPriority", -1), _this2;
      }
      return _createClass(DateToSystemTimezoneSetter2, [{
        key: "set",
        value: function(date, flags) {
          if (flags.timestampIsSet)
            return date;
          var convertedDate = new Date(0);
          return convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()), convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds()), convertedDate;
        }
      }]), DateToSystemTimezoneSetter2;
    }(Setter);
    exports2.DateToSystemTimezoneSetter = DateToSystemTimezoneSetter;
  }
});

// node_modules/date-fns/parse/_lib/Parser.js
var require_Parser = __commonJS({
  "node_modules/date-fns/parse/_lib/Parser.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.Parser = void 0;
    var _Setter = require_Setter();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    var Parser3 = /* @__PURE__ */ function() {
      function Parser4() {
        _classCallCheck(this, Parser4);
      }
      return _createClass(Parser4, [{
        key: "run",
        value: function(dateString, token, match, options2) {
          var result = this.parse(dateString, token, match, options2);
          return result ? {
            setter: new _Setter.ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),
            rest: result.rest
          } : null;
        }
      }, {
        key: "validate",
        value: function(_utcDate, _value, _options) {
          return !0;
        }
      }]), Parser4;
    }();
    exports2.Parser = Parser3;
  }
});

// node_modules/date-fns/parse/_lib/parsers/EraParser.js
var require_EraParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/EraParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.EraParser = void 0;
    var _Parser2 = require_Parser();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var EraParser = /* @__PURE__ */ function(_Parser) {
      _inherits(EraParser2, _Parser);
      var _super = _createSuper(EraParser2);
      function EraParser2() {
        var _this;
        _classCallCheck(this, EraParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 140), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["R", "u", "t", "T"]), _this;
      }
      return _createClass(EraParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "G":
            case "GG":
            case "GGG":
              return match.era(dateString, {
                width: "abbreviated"
              }) || match.era(dateString, {
                width: "narrow"
              });
            case "GGGGG":
              return match.era(dateString, {
                width: "narrow"
              });
            case "GGGG":
            default:
              return match.era(dateString, {
                width: "wide"
              }) || match.era(dateString, {
                width: "abbreviated"
              }) || match.era(dateString, {
                width: "narrow"
              });
          }
        }
      }, {
        key: "set",
        value: function(date, flags, value) {
          return flags.era = value, date.setUTCFullYear(value, 0, 1), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), EraParser2;
    }(_Parser2.Parser);
    exports2.EraParser = EraParser;
  }
});

// node_modules/date-fns/parse/_lib/constants.js
var require_constants2 = __commonJS({
  "node_modules/date-fns/parse/_lib/constants.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.timezonePatterns = exports2.numericPatterns = void 0;
    var numericPatterns = {
      month: /^(1[0-2]|0?\d)/,
      date: /^(3[0-1]|[0-2]?\d)/,
      dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
      week: /^(5[0-3]|[0-4]?\d)/,
      hour23h: /^(2[0-3]|[0-1]?\d)/,
      hour24h: /^(2[0-4]|[0-1]?\d)/,
      hour11h: /^(1[0-1]|0?\d)/,
      hour12h: /^(1[0-2]|0?\d)/,
      minute: /^[0-5]?\d/,
      second: /^[0-5]?\d/,
      singleDigit: /^\d/,
      twoDigits: /^\d{1,2}/,
      threeDigits: /^\d{1,3}/,
      fourDigits: /^\d{1,4}/,
      anyDigitsSigned: /^-?\d+/,
      singleDigitSigned: /^-?\d/,
      twoDigitsSigned: /^-?\d{1,2}/,
      threeDigitsSigned: /^-?\d{1,3}/,
      fourDigitsSigned: /^-?\d{1,4}/
    };
    exports2.numericPatterns = numericPatterns;
    var timezonePatterns = {
      basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
      basic: /^([+-])(\d{2})(\d{2})|Z/,
      basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
      extended: /^([+-])(\d{2}):(\d{2})|Z/,
      extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
    };
    exports2.timezonePatterns = timezonePatterns;
  }
});

// node_modules/date-fns/parse/_lib/utils.js
var require_utils4 = __commonJS({
  "node_modules/date-fns/parse/_lib/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.dayPeriodEnumToHours = dayPeriodEnumToHours;
    exports2.isLeapYearIndex = isLeapYearIndex;
    exports2.mapValue = mapValue;
    exports2.normalizeTwoDigitYear = normalizeTwoDigitYear;
    exports2.parseAnyDigitsSigned = parseAnyDigitsSigned;
    exports2.parseNDigits = parseNDigits;
    exports2.parseNDigitsSigned = parseNDigitsSigned;
    exports2.parseNumericPattern = parseNumericPattern;
    exports2.parseTimezonePattern = parseTimezonePattern;
    var _index = require_constants(), _constants = require_constants2();
    function mapValue(parseFnResult, mapFn) {
      return parseFnResult && {
        value: mapFn(parseFnResult.value),
        rest: parseFnResult.rest
      };
    }
    function parseNumericPattern(pattern, dateString) {
      var matchResult = dateString.match(pattern);
      return matchResult ? {
        value: parseInt(matchResult[0], 10),
        rest: dateString.slice(matchResult[0].length)
      } : null;
    }
    function parseTimezonePattern(pattern, dateString) {
      var matchResult = dateString.match(pattern);
      if (!matchResult)
        return null;
      if (matchResult[0] === "Z")
        return {
          value: 0,
          rest: dateString.slice(1)
        };
      var sign = matchResult[1] === "+" ? 1 : -1, hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0, minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0, seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
      return {
        value: sign * (hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute + seconds * _index.millisecondsInSecond),
        rest: dateString.slice(matchResult[0].length)
      };
    }
    function parseAnyDigitsSigned(dateString) {
      return parseNumericPattern(_constants.numericPatterns.anyDigitsSigned, dateString);
    }
    function parseNDigits(n, dateString) {
      switch (n) {
        case 1:
          return parseNumericPattern(_constants.numericPatterns.singleDigit, dateString);
        case 2:
          return parseNumericPattern(_constants.numericPatterns.twoDigits, dateString);
        case 3:
          return parseNumericPattern(_constants.numericPatterns.threeDigits, dateString);
        case 4:
          return parseNumericPattern(_constants.numericPatterns.fourDigits, dateString);
        default:
          return parseNumericPattern(new RegExp("^\\d{1," + n + "}"), dateString);
      }
    }
    function parseNDigitsSigned(n, dateString) {
      switch (n) {
        case 1:
          return parseNumericPattern(_constants.numericPatterns.singleDigitSigned, dateString);
        case 2:
          return parseNumericPattern(_constants.numericPatterns.twoDigitsSigned, dateString);
        case 3:
          return parseNumericPattern(_constants.numericPatterns.threeDigitsSigned, dateString);
        case 4:
          return parseNumericPattern(_constants.numericPatterns.fourDigitsSigned, dateString);
        default:
          return parseNumericPattern(new RegExp("^-?\\d{1," + n + "}"), dateString);
      }
    }
    function dayPeriodEnumToHours(dayPeriod) {
      switch (dayPeriod) {
        case "morning":
          return 4;
        case "evening":
          return 17;
        case "pm":
        case "noon":
        case "afternoon":
          return 12;
        case "am":
        case "midnight":
        case "night":
        default:
          return 0;
      }
    }
    function normalizeTwoDigitYear(twoDigitYear, currentYear) {
      var isCommonEra = currentYear > 0, absCurrentYear = isCommonEra ? currentYear : 1 - currentYear, result;
      if (absCurrentYear <= 50)
        result = twoDigitYear || 100;
      else {
        var rangeEnd = absCurrentYear + 50, rangeEndCentury = Math.floor(rangeEnd / 100) * 100, isPreviousCentury = twoDigitYear >= rangeEnd % 100;
        result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
      }
      return isCommonEra ? result : 1 - result;
    }
    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
  }
});

// node_modules/date-fns/parse/_lib/parsers/YearParser.js
var require_YearParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/YearParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.YearParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var YearParser = /* @__PURE__ */ function(_Parser) {
      _inherits(YearParser2, _Parser);
      var _super = _createSuper(YearParser2);
      function YearParser2() {
        var _this;
        _classCallCheck(this, YearParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 130), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"]), _this;
      }
      return _createClass(YearParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          var valueCallback = function(year) {
            return {
              year,
              isTwoDigitYear: token === "yy"
            };
          };
          switch (token) {
            case "y":
              return (0, _utils.mapValue)((0, _utils.parseNDigits)(4, dateString), valueCallback);
            case "yo":
              return (0, _utils.mapValue)(match.ordinalNumber(dateString, {
                unit: "year"
              }), valueCallback);
            default:
              return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value.isTwoDigitYear || value.year > 0;
        }
      }, {
        key: "set",
        value: function(date, flags, value) {
          var currentYear = date.getUTCFullYear();
          if (value.isTwoDigitYear) {
            var normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(value.year, currentYear);
            return date.setUTCFullYear(normalizedTwoDigitYear, 0, 1), date.setUTCHours(0, 0, 0, 0), date;
          }
          var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
          return date.setUTCFullYear(year, 0, 1), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), YearParser2;
    }(_Parser2.Parser);
    exports2.YearParser = YearParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js
var require_LocalWeekYearParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.LocalWeekYearParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4(), _index = _interopRequireDefault(require_getUTCWeekYear()), _index2 = _interopRequireDefault(require_startOfUTCWeek());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var LocalWeekYearParser = /* @__PURE__ */ function(_Parser) {
      _inherits(LocalWeekYearParser2, _Parser);
      var _super = _createSuper(LocalWeekYearParser2);
      function LocalWeekYearParser2() {
        var _this;
        _classCallCheck(this, LocalWeekYearParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 130), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"]), _this;
      }
      return _createClass(LocalWeekYearParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          var valueCallback = function(year) {
            return {
              year,
              isTwoDigitYear: token === "YY"
            };
          };
          switch (token) {
            case "Y":
              return (0, _utils.mapValue)((0, _utils.parseNDigits)(4, dateString), valueCallback);
            case "Yo":
              return (0, _utils.mapValue)(match.ordinalNumber(dateString, {
                unit: "year"
              }), valueCallback);
            default:
              return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value.isTwoDigitYear || value.year > 0;
        }
      }, {
        key: "set",
        value: function(date, flags, value, options2) {
          var currentYear = (0, _index.default)(date, options2);
          if (value.isTwoDigitYear) {
            var normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(value.year, currentYear);
            return date.setUTCFullYear(normalizedTwoDigitYear, 0, options2.firstWeekContainsDate), date.setUTCHours(0, 0, 0, 0), (0, _index2.default)(date, options2);
          }
          var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
          return date.setUTCFullYear(year, 0, options2.firstWeekContainsDate), date.setUTCHours(0, 0, 0, 0), (0, _index2.default)(date, options2);
        }
      }]), LocalWeekYearParser2;
    }(_Parser2.Parser);
    exports2.LocalWeekYearParser = LocalWeekYearParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js
var require_ISOWeekYearParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.ISOWeekYearParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4(), _index = _interopRequireDefault(require_startOfUTCISOWeek());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var ISOWeekYearParser = /* @__PURE__ */ function(_Parser) {
      _inherits(ISOWeekYearParser2, _Parser);
      var _super = _createSuper(ISOWeekYearParser2);
      function ISOWeekYearParser2() {
        var _this;
        _classCallCheck(this, ISOWeekYearParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 130), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]), _this;
      }
      return _createClass(ISOWeekYearParser2, [{
        key: "parse",
        value: function(dateString, token) {
          return token === "R" ? (0, _utils.parseNDigitsSigned)(4, dateString) : (0, _utils.parseNDigitsSigned)(token.length, dateString);
        }
      }, {
        key: "set",
        value: function(_date, _flags, value) {
          var firstWeekOfYear = new Date(0);
          return firstWeekOfYear.setUTCFullYear(value, 0, 4), firstWeekOfYear.setUTCHours(0, 0, 0, 0), (0, _index.default)(firstWeekOfYear);
        }
      }]), ISOWeekYearParser2;
    }(_Parser2.Parser);
    exports2.ISOWeekYearParser = ISOWeekYearParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js
var require_ExtendedYearParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.ExtendedYearParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var ExtendedYearParser = /* @__PURE__ */ function(_Parser) {
      _inherits(ExtendedYearParser2, _Parser);
      var _super = _createSuper(ExtendedYearParser2);
      function ExtendedYearParser2() {
        var _this;
        _classCallCheck(this, ExtendedYearParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 130), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"]), _this;
      }
      return _createClass(ExtendedYearParser2, [{
        key: "parse",
        value: function(dateString, token) {
          return token === "u" ? (0, _utils.parseNDigitsSigned)(4, dateString) : (0, _utils.parseNDigitsSigned)(token.length, dateString);
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCFullYear(value, 0, 1), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), ExtendedYearParser2;
    }(_Parser2.Parser);
    exports2.ExtendedYearParser = ExtendedYearParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/QuarterParser.js
var require_QuarterParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/QuarterParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.QuarterParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var QuarterParser = /* @__PURE__ */ function(_Parser) {
      _inherits(QuarterParser2, _Parser);
      var _super = _createSuper(QuarterParser2);
      function QuarterParser2() {
        var _this;
        _classCallCheck(this, QuarterParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 120), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]), _this;
      }
      return _createClass(QuarterParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "Q":
            case "QQ":
              return (0, _utils.parseNDigits)(token.length, dateString);
            case "Qo":
              return match.ordinalNumber(dateString, {
                unit: "quarter"
              });
            case "QQQ":
              return match.quarter(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.quarter(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "QQQQQ":
              return match.quarter(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "QQQQ":
            default:
              return match.quarter(dateString, {
                width: "wide",
                context: "formatting"
              }) || match.quarter(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.quarter(dateString, {
                width: "narrow",
                context: "formatting"
              });
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 1 && value <= 4;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCMonth((value - 1) * 3, 1), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), QuarterParser2;
    }(_Parser2.Parser);
    exports2.QuarterParser = QuarterParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js
var require_StandAloneQuarterParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.StandAloneQuarterParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var StandAloneQuarterParser = /* @__PURE__ */ function(_Parser) {
      _inherits(StandAloneQuarterParser2, _Parser);
      var _super = _createSuper(StandAloneQuarterParser2);
      function StandAloneQuarterParser2() {
        var _this;
        _classCallCheck(this, StandAloneQuarterParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 120), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]), _this;
      }
      return _createClass(StandAloneQuarterParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "q":
            case "qq":
              return (0, _utils.parseNDigits)(token.length, dateString);
            case "qo":
              return match.ordinalNumber(dateString, {
                unit: "quarter"
              });
            case "qqq":
              return match.quarter(dateString, {
                width: "abbreviated",
                context: "standalone"
              }) || match.quarter(dateString, {
                width: "narrow",
                context: "standalone"
              });
            case "qqqqq":
              return match.quarter(dateString, {
                width: "narrow",
                context: "standalone"
              });
            case "qqqq":
            default:
              return match.quarter(dateString, {
                width: "wide",
                context: "standalone"
              }) || match.quarter(dateString, {
                width: "abbreviated",
                context: "standalone"
              }) || match.quarter(dateString, {
                width: "narrow",
                context: "standalone"
              });
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 1 && value <= 4;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCMonth((value - 1) * 3, 1), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), StandAloneQuarterParser2;
    }(_Parser2.Parser);
    exports2.StandAloneQuarterParser = StandAloneQuarterParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/MonthParser.js
var require_MonthParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/MonthParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.MonthParser = void 0;
    var _utils = require_utils4(), _Parser2 = require_Parser(), _constants = require_constants2();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var MonthParser = /* @__PURE__ */ function(_Parser) {
      _inherits(MonthParser2, _Parser);
      var _super = _createSuper(MonthParser2);
      function MonthParser2() {
        var _this;
        _classCallCheck(this, MonthParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"]), _defineProperty(_assertThisInitialized(_this), "priority", 110), _this;
      }
      return _createClass(MonthParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          var valueCallback = function(value) {
            return value - 1;
          };
          switch (token) {
            case "M":
              return (0, _utils.mapValue)((0, _utils.parseNumericPattern)(_constants.numericPatterns.month, dateString), valueCallback);
            case "MM":
              return (0, _utils.mapValue)((0, _utils.parseNDigits)(2, dateString), valueCallback);
            case "Mo":
              return (0, _utils.mapValue)(match.ordinalNumber(dateString, {
                unit: "month"
              }), valueCallback);
            case "MMM":
              return match.month(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.month(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "MMMMM":
              return match.month(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "MMMM":
            default:
              return match.month(dateString, {
                width: "wide",
                context: "formatting"
              }) || match.month(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.month(dateString, {
                width: "narrow",
                context: "formatting"
              });
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 11;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCMonth(value, 1), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), MonthParser2;
    }(_Parser2.Parser);
    exports2.MonthParser = MonthParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js
var require_StandAloneMonthParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.StandAloneMonthParser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var StandAloneMonthParser = /* @__PURE__ */ function(_Parser) {
      _inherits(StandAloneMonthParser2, _Parser);
      var _super = _createSuper(StandAloneMonthParser2);
      function StandAloneMonthParser2() {
        var _this;
        _classCallCheck(this, StandAloneMonthParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 110), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"]), _this;
      }
      return _createClass(StandAloneMonthParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          var valueCallback = function(value) {
            return value - 1;
          };
          switch (token) {
            case "L":
              return (0, _utils.mapValue)((0, _utils.parseNumericPattern)(_constants.numericPatterns.month, dateString), valueCallback);
            case "LL":
              return (0, _utils.mapValue)((0, _utils.parseNDigits)(2, dateString), valueCallback);
            case "Lo":
              return (0, _utils.mapValue)(match.ordinalNumber(dateString, {
                unit: "month"
              }), valueCallback);
            case "LLL":
              return match.month(dateString, {
                width: "abbreviated",
                context: "standalone"
              }) || match.month(dateString, {
                width: "narrow",
                context: "standalone"
              });
            case "LLLLL":
              return match.month(dateString, {
                width: "narrow",
                context: "standalone"
              });
            case "LLLL":
            default:
              return match.month(dateString, {
                width: "wide",
                context: "standalone"
              }) || match.month(dateString, {
                width: "abbreviated",
                context: "standalone"
              }) || match.month(dateString, {
                width: "narrow",
                context: "standalone"
              });
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 11;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCMonth(value, 1), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), StandAloneMonthParser2;
    }(_Parser2.Parser);
    exports2.StandAloneMonthParser = StandAloneMonthParser;
  }
});

// node_modules/date-fns/_lib/setUTCWeek/index.js
var require_setUTCWeek = __commonJS({
  "node_modules/date-fns/_lib/setUTCWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setUTCWeek;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_getUTCWeek()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCWeek(dirtyDate, dirtyWeek, options2) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), week = (0, _index.default)(dirtyWeek), diff = (0, _index3.default)(date, options2) - week;
      return date.setUTCDate(date.getUTCDate() - diff * 7), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js
var require_LocalWeekParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.LocalWeekParser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4(), _index = _interopRequireDefault(require_setUTCWeek()), _index2 = _interopRequireDefault(require_startOfUTCWeek());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var LocalWeekParser = /* @__PURE__ */ function(_Parser) {
      _inherits(LocalWeekParser2, _Parser);
      var _super = _createSuper(LocalWeekParser2);
      function LocalWeekParser2() {
        var _this;
        _classCallCheck(this, LocalWeekParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 100), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"]), _this;
      }
      return _createClass(LocalWeekParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "w":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.week, dateString);
            case "wo":
              return match.ordinalNumber(dateString, {
                unit: "week"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 1 && value <= 53;
        }
      }, {
        key: "set",
        value: function(date, _flags, value, options2) {
          return (0, _index2.default)((0, _index.default)(date, value, options2), options2);
        }
      }]), LocalWeekParser2;
    }(_Parser2.Parser);
    exports2.LocalWeekParser = LocalWeekParser;
  }
});

// node_modules/date-fns/_lib/setUTCISOWeek/index.js
var require_setUTCISOWeek = __commonJS({
  "node_modules/date-fns/_lib/setUTCISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setUTCISOWeek;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_getUTCISOWeek()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), isoWeek = (0, _index.default)(dirtyISOWeek), diff = (0, _index3.default)(date) - isoWeek;
      return date.setUTCDate(date.getUTCDate() - diff * 7), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js
var require_ISOWeekParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.ISOWeekParser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4(), _index = _interopRequireDefault(require_setUTCISOWeek()), _index2 = _interopRequireDefault(require_startOfUTCISOWeek());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var ISOWeekParser = /* @__PURE__ */ function(_Parser) {
      _inherits(ISOWeekParser2, _Parser);
      var _super = _createSuper(ISOWeekParser2);
      function ISOWeekParser2() {
        var _this;
        _classCallCheck(this, ISOWeekParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 100), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]), _this;
      }
      return _createClass(ISOWeekParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "I":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.week, dateString);
            case "Io":
              return match.ordinalNumber(dateString, {
                unit: "week"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 1 && value <= 53;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return (0, _index2.default)((0, _index.default)(date, value));
        }
      }]), ISOWeekParser2;
    }(_Parser2.Parser);
    exports2.ISOWeekParser = ISOWeekParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/DateParser.js
var require_DateParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/DateParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.DateParser = void 0;
    var _utils = require_utils4(), _Parser2 = require_Parser(), _constants = require_constants2();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], DateParser = /* @__PURE__ */ function(_Parser) {
      _inherits(DateParser2, _Parser);
      var _super = _createSuper(DateParser2);
      function DateParser2() {
        var _this;
        _classCallCheck(this, DateParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 90), _defineProperty(_assertThisInitialized(_this), "subPriority", 1), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"]), _this;
      }
      return _createClass(DateParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "d":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.date, dateString);
            case "do":
              return match.ordinalNumber(dateString, {
                unit: "date"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(date, value) {
          var year = date.getUTCFullYear(), isLeapYear = (0, _utils.isLeapYearIndex)(year), month = date.getUTCMonth();
          return isLeapYear ? value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month] : value >= 1 && value <= DAYS_IN_MONTH[month];
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCDate(value), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), DateParser2;
    }(_Parser2.Parser);
    exports2.DateParser = DateParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js
var require_DayOfYearParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.DayOfYearParser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var DayOfYearParser = /* @__PURE__ */ function(_Parser) {
      _inherits(DayOfYearParser2, _Parser);
      var _super = _createSuper(DayOfYearParser2);
      function DayOfYearParser2() {
        var _this;
        _classCallCheck(this, DayOfYearParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 90), _defineProperty(_assertThisInitialized(_this), "subpriority", 1), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"]), _this;
      }
      return _createClass(DayOfYearParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "D":
            case "DD":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.dayOfYear, dateString);
            case "Do":
              return match.ordinalNumber(dateString, {
                unit: "date"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(date, value) {
          var year = date.getUTCFullYear(), isLeapYear = (0, _utils.isLeapYearIndex)(year);
          return isLeapYear ? value >= 1 && value <= 366 : value >= 1 && value <= 365;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCMonth(0, value), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), DayOfYearParser2;
    }(_Parser2.Parser);
    exports2.DayOfYearParser = DayOfYearParser;
  }
});

// node_modules/date-fns/_lib/setUTCDay/index.js
var require_setUTCDay = __commonJS({
  "node_modules/date-fns/_lib/setUTCDay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setUTCDay;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger()), _index4 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCDay(dirtyDate, dirtyDay, options2) {
      var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index2.default)(2, arguments);
      var defaultOptions = (0, _index4.getDefaultOptions)(), weekStartsOn = (0, _index3.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      var date = (0, _index.default)(dirtyDate), day = (0, _index3.default)(dirtyDay), currentDay = date.getUTCDay(), remainder = day % 7, dayIndex = (remainder + 7) % 7, diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
      return date.setUTCDate(date.getUTCDate() + diff), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parse/_lib/parsers/DayParser.js
var require_DayParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/DayParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.DayParser = void 0;
    var _Parser2 = require_Parser(), _index = _interopRequireDefault(require_setUTCDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var DayParser = /* @__PURE__ */ function(_Parser) {
      _inherits(DayParser2, _Parser);
      var _super = _createSuper(DayParser2);
      function DayParser2() {
        var _this;
        _classCallCheck(this, DayParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 90), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["D", "i", "e", "c", "t", "T"]), _this;
      }
      return _createClass(DayParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "E":
            case "EE":
            case "EEE":
              return match.day(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEEE":
              return match.day(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEEEE":
              return match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "EEEE":
            default:
              return match.day(dateString, {
                width: "wide",
                context: "formatting"
              }) || match.day(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              });
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 6;
        }
      }, {
        key: "set",
        value: function(date, _flags, value, options2) {
          return date = (0, _index.default)(date, value, options2), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), DayParser2;
    }(_Parser2.Parser);
    exports2.DayParser = DayParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js
var require_LocalDayParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.LocalDayParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4(), _index = _interopRequireDefault(require_setUTCDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var LocalDayParser = /* @__PURE__ */ function(_Parser) {
      _inherits(LocalDayParser2, _Parser);
      var _super = _createSuper(LocalDayParser2);
      function LocalDayParser2() {
        var _this;
        _classCallCheck(this, LocalDayParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 90), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"]), _this;
      }
      return _createClass(LocalDayParser2, [{
        key: "parse",
        value: function(dateString, token, match, options2) {
          var valueCallback = function(value) {
            var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
            return (value + options2.weekStartsOn + 6) % 7 + wholeWeekDays;
          };
          switch (token) {
            case "e":
            case "ee":
              return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);
            case "eo":
              return (0, _utils.mapValue)(match.ordinalNumber(dateString, {
                unit: "day"
              }), valueCallback);
            case "eee":
              return match.day(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "eeeee":
              return match.day(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "eeeeee":
              return match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "eeee":
            default:
              return match.day(dateString, {
                width: "wide",
                context: "formatting"
              }) || match.day(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              });
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 6;
        }
      }, {
        key: "set",
        value: function(date, _flags, value, options2) {
          return date = (0, _index.default)(date, value, options2), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), LocalDayParser2;
    }(_Parser2.Parser);
    exports2.LocalDayParser = LocalDayParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js
var require_StandAloneLocalDayParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.StandAloneLocalDayParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4(), _index = _interopRequireDefault(require_setUTCDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var StandAloneLocalDayParser = /* @__PURE__ */ function(_Parser) {
      _inherits(StandAloneLocalDayParser2, _Parser);
      var _super = _createSuper(StandAloneLocalDayParser2);
      function StandAloneLocalDayParser2() {
        var _this;
        _classCallCheck(this, StandAloneLocalDayParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 90), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"]), _this;
      }
      return _createClass(StandAloneLocalDayParser2, [{
        key: "parse",
        value: function(dateString, token, match, options2) {
          var valueCallback = function(value) {
            var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
            return (value + options2.weekStartsOn + 6) % 7 + wholeWeekDays;
          };
          switch (token) {
            case "c":
            case "cc":
              return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);
            case "co":
              return (0, _utils.mapValue)(match.ordinalNumber(dateString, {
                unit: "day"
              }), valueCallback);
            case "ccc":
              return match.day(dateString, {
                width: "abbreviated",
                context: "standalone"
              }) || match.day(dateString, {
                width: "short",
                context: "standalone"
              }) || match.day(dateString, {
                width: "narrow",
                context: "standalone"
              });
            case "ccccc":
              return match.day(dateString, {
                width: "narrow",
                context: "standalone"
              });
            case "cccccc":
              return match.day(dateString, {
                width: "short",
                context: "standalone"
              }) || match.day(dateString, {
                width: "narrow",
                context: "standalone"
              });
            case "cccc":
            default:
              return match.day(dateString, {
                width: "wide",
                context: "standalone"
              }) || match.day(dateString, {
                width: "abbreviated",
                context: "standalone"
              }) || match.day(dateString, {
                width: "short",
                context: "standalone"
              }) || match.day(dateString, {
                width: "narrow",
                context: "standalone"
              });
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 6;
        }
      }, {
        key: "set",
        value: function(date, _flags, value, options2) {
          return date = (0, _index.default)(date, value, options2), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), StandAloneLocalDayParser2;
    }(_Parser2.Parser);
    exports2.StandAloneLocalDayParser = StandAloneLocalDayParser;
  }
});

// node_modules/date-fns/_lib/setUTCISODay/index.js
var require_setUTCISODay = __commonJS({
  "node_modules/date-fns/_lib/setUTCISODay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setUTCISODay;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setUTCISODay(dirtyDate, dirtyDay) {
      (0, _index2.default)(2, arguments);
      var day = (0, _index3.default)(dirtyDay);
      day % 7 === 0 && (day = day - 7);
      var weekStartsOn = 1, date = (0, _index.default)(dirtyDate), currentDay = date.getUTCDay(), remainder = day % 7, dayIndex = (remainder + 7) % 7, diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
      return date.setUTCDate(date.getUTCDate() + diff), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parse/_lib/parsers/ISODayParser.js
var require_ISODayParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/ISODayParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.ISODayParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4(), _index = _interopRequireDefault(require_setUTCISODay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var ISODayParser = /* @__PURE__ */ function(_Parser) {
      _inherits(ISODayParser2, _Parser);
      var _super = _createSuper(ISODayParser2);
      function ISODayParser2() {
        var _this;
        _classCallCheck(this, ISODayParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 90), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"]), _this;
      }
      return _createClass(ISODayParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          var valueCallback = function(value) {
            return value === 0 ? 7 : value;
          };
          switch (token) {
            case "i":
            case "ii":
              return (0, _utils.parseNDigits)(token.length, dateString);
            case "io":
              return match.ordinalNumber(dateString, {
                unit: "day"
              });
            case "iii":
              return (0, _utils.mapValue)(match.day(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              }), valueCallback);
            case "iiiii":
              return (0, _utils.mapValue)(match.day(dateString, {
                width: "narrow",
                context: "formatting"
              }), valueCallback);
            case "iiiiii":
              return (0, _utils.mapValue)(match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              }), valueCallback);
            case "iiii":
            default:
              return (0, _utils.mapValue)(match.day(dateString, {
                width: "wide",
                context: "formatting"
              }) || match.day(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.day(dateString, {
                width: "short",
                context: "formatting"
              }) || match.day(dateString, {
                width: "narrow",
                context: "formatting"
              }), valueCallback);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 1 && value <= 7;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date = (0, _index.default)(date, value), date.setUTCHours(0, 0, 0, 0), date;
        }
      }]), ISODayParser2;
    }(_Parser2.Parser);
    exports2.ISODayParser = ISODayParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/AMPMParser.js
var require_AMPMParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/AMPMParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.AMPMParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var AMPMParser = /* @__PURE__ */ function(_Parser) {
      _inherits(AMPMParser2, _Parser);
      var _super = _createSuper(AMPMParser2);
      function AMPMParser2() {
        var _this;
        _classCallCheck(this, AMPMParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 80), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["b", "B", "H", "k", "t", "T"]), _this;
      }
      return _createClass(AMPMParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "a":
            case "aa":
            case "aaa":
              return match.dayPeriod(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "aaaaa":
              return match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "aaaa":
            default:
              return match.dayPeriod(dateString, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
          }
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0), date;
        }
      }]), AMPMParser2;
    }(_Parser2.Parser);
    exports2.AMPMParser = AMPMParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js
var require_AMPMMidnightParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.AMPMMidnightParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var AMPMMidnightParser = /* @__PURE__ */ function(_Parser) {
      _inherits(AMPMMidnightParser2, _Parser);
      var _super = _createSuper(AMPMMidnightParser2);
      function AMPMMidnightParser2() {
        var _this;
        _classCallCheck(this, AMPMMidnightParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 80), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "B", "H", "k", "t", "T"]), _this;
      }
      return _createClass(AMPMMidnightParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "b":
            case "bb":
            case "bbb":
              return match.dayPeriod(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "bbbbb":
              return match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "bbbb":
            default:
              return match.dayPeriod(dateString, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
          }
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0), date;
        }
      }]), AMPMMidnightParser2;
    }(_Parser2.Parser);
    exports2.AMPMMidnightParser = AMPMMidnightParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js
var require_DayPeriodParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.DayPeriodParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var DayPeriodParser = /* @__PURE__ */ function(_Parser) {
      _inherits(DayPeriodParser2, _Parser);
      var _super = _createSuper(DayPeriodParser2);
      function DayPeriodParser2() {
        var _this;
        _classCallCheck(this, DayPeriodParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 80), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "t", "T"]), _this;
      }
      return _createClass(DayPeriodParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "B":
            case "BB":
            case "BBB":
              return match.dayPeriod(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "BBBBB":
              return match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
            case "BBBB":
            default:
              return match.dayPeriod(dateString, {
                width: "wide",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "abbreviated",
                context: "formatting"
              }) || match.dayPeriod(dateString, {
                width: "narrow",
                context: "formatting"
              });
          }
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0), date;
        }
      }]), DayPeriodParser2;
    }(_Parser2.Parser);
    exports2.DayPeriodParser = DayPeriodParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js
var require_Hour1to12Parser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.Hour1to12Parser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var Hour1to12Parser = /* @__PURE__ */ function(_Parser) {
      _inherits(Hour1to12Parser2, _Parser);
      var _super = _createSuper(Hour1to12Parser2);
      function Hour1to12Parser2() {
        var _this;
        _classCallCheck(this, Hour1to12Parser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 70), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["H", "K", "k", "t", "T"]), _this;
      }
      return _createClass(Hour1to12Parser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "h":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.hour12h, dateString);
            case "ho":
              return match.ordinalNumber(dateString, {
                unit: "hour"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 1 && value <= 12;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          var isPM = date.getUTCHours() >= 12;
          return isPM && value < 12 ? date.setUTCHours(value + 12, 0, 0, 0) : !isPM && value === 12 ? date.setUTCHours(0, 0, 0, 0) : date.setUTCHours(value, 0, 0, 0), date;
        }
      }]), Hour1to12Parser2;
    }(_Parser2.Parser);
    exports2.Hour1to12Parser = Hour1to12Parser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js
var require_Hour0to23Parser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.Hour0to23Parser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var Hour0to23Parser = /* @__PURE__ */ function(_Parser) {
      _inherits(Hour0to23Parser2, _Parser);
      var _super = _createSuper(Hour0to23Parser2);
      function Hour0to23Parser2() {
        var _this;
        _classCallCheck(this, Hour0to23Parser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 70), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "h", "K", "k", "t", "T"]), _this;
      }
      return _createClass(Hour0to23Parser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "H":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.hour23h, dateString);
            case "Ho":
              return match.ordinalNumber(dateString, {
                unit: "hour"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 23;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCHours(value, 0, 0, 0), date;
        }
      }]), Hour0to23Parser2;
    }(_Parser2.Parser);
    exports2.Hour0to23Parser = Hour0to23Parser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js
var require_Hour0To11Parser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.Hour0To11Parser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var Hour0To11Parser = /* @__PURE__ */ function(_Parser) {
      _inherits(Hour0To11Parser2, _Parser);
      var _super = _createSuper(Hour0To11Parser2);
      function Hour0To11Parser2() {
        var _this;
        _classCallCheck(this, Hour0To11Parser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 70), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["h", "H", "k", "t", "T"]), _this;
      }
      return _createClass(Hour0To11Parser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "K":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.hour11h, dateString);
            case "Ko":
              return match.ordinalNumber(dateString, {
                unit: "hour"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 11;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          var isPM = date.getUTCHours() >= 12;
          return isPM && value < 12 ? date.setUTCHours(value + 12, 0, 0, 0) : date.setUTCHours(value, 0, 0, 0), date;
        }
      }]), Hour0To11Parser2;
    }(_Parser2.Parser);
    exports2.Hour0To11Parser = Hour0To11Parser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js
var require_Hour1To24Parser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.Hour1To24Parser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var Hour1To24Parser = /* @__PURE__ */ function(_Parser) {
      _inherits(Hour1To24Parser2, _Parser);
      var _super = _createSuper(Hour1To24Parser2);
      function Hour1To24Parser2() {
        var _this;
        _classCallCheck(this, Hour1To24Parser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 70), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "h", "H", "K", "t", "T"]), _this;
      }
      return _createClass(Hour1To24Parser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "k":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.hour24h, dateString);
            case "ko":
              return match.ordinalNumber(dateString, {
                unit: "hour"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 1 && value <= 24;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          var hours = value <= 24 ? value % 24 : value;
          return date.setUTCHours(hours, 0, 0, 0), date;
        }
      }]), Hour1To24Parser2;
    }(_Parser2.Parser);
    exports2.Hour1To24Parser = Hour1To24Parser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/MinuteParser.js
var require_MinuteParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/MinuteParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.MinuteParser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var MinuteParser = /* @__PURE__ */ function(_Parser) {
      _inherits(MinuteParser2, _Parser);
      var _super = _createSuper(MinuteParser2);
      function MinuteParser2() {
        var _this;
        _classCallCheck(this, MinuteParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 60), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]), _this;
      }
      return _createClass(MinuteParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "m":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.minute, dateString);
            case "mo":
              return match.ordinalNumber(dateString, {
                unit: "minute"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 59;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCMinutes(value, 0, 0), date;
        }
      }]), MinuteParser2;
    }(_Parser2.Parser);
    exports2.MinuteParser = MinuteParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/SecondParser.js
var require_SecondParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/SecondParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.SecondParser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var SecondParser = /* @__PURE__ */ function(_Parser) {
      _inherits(SecondParser2, _Parser);
      var _super = _createSuper(SecondParser2);
      function SecondParser2() {
        var _this;
        _classCallCheck(this, SecondParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 50), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]), _this;
      }
      return _createClass(SecondParser2, [{
        key: "parse",
        value: function(dateString, token, match) {
          switch (token) {
            case "s":
              return (0, _utils.parseNumericPattern)(_constants.numericPatterns.second, dateString);
            case "so":
              return match.ordinalNumber(dateString, {
                unit: "second"
              });
            default:
              return (0, _utils.parseNDigits)(token.length, dateString);
          }
        }
      }, {
        key: "validate",
        value: function(_date, value) {
          return value >= 0 && value <= 59;
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCSeconds(value, 0), date;
        }
      }]), SecondParser2;
    }(_Parser2.Parser);
    exports2.SecondParser = SecondParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js
var require_FractionOfSecondParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.FractionOfSecondParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var FractionOfSecondParser = /* @__PURE__ */ function(_Parser) {
      _inherits(FractionOfSecondParser2, _Parser);
      var _super = _createSuper(FractionOfSecondParser2);
      function FractionOfSecondParser2() {
        var _this;
        _classCallCheck(this, FractionOfSecondParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 30), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]), _this;
      }
      return _createClass(FractionOfSecondParser2, [{
        key: "parse",
        value: function(dateString, token) {
          var valueCallback = function(value) {
            return Math.floor(value * Math.pow(10, -token.length + 3));
          };
          return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);
        }
      }, {
        key: "set",
        value: function(date, _flags, value) {
          return date.setUTCMilliseconds(value), date;
        }
      }]), FractionOfSecondParser2;
    }(_Parser2.Parser);
    exports2.FractionOfSecondParser = FractionOfSecondParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js
var require_ISOTimezoneWithZParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.ISOTimezoneWithZParser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var ISOTimezoneWithZParser = /* @__PURE__ */ function(_Parser) {
      _inherits(ISOTimezoneWithZParser2, _Parser);
      var _super = _createSuper(ISOTimezoneWithZParser2);
      function ISOTimezoneWithZParser2() {
        var _this;
        _classCallCheck(this, ISOTimezoneWithZParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 10), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T", "x"]), _this;
      }
      return _createClass(ISOTimezoneWithZParser2, [{
        key: "parse",
        value: function(dateString, token) {
          switch (token) {
            case "X":
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basicOptionalMinutes, dateString);
            case "XX":
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basic, dateString);
            case "XXXX":
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basicOptionalSeconds, dateString);
            case "XXXXX":
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.extendedOptionalSeconds, dateString);
            case "XXX":
            default:
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.extended, dateString);
          }
        }
      }, {
        key: "set",
        value: function(date, flags, value) {
          return flags.timestampIsSet ? date : new Date(date.getTime() - value);
        }
      }]), ISOTimezoneWithZParser2;
    }(_Parser2.Parser);
    exports2.ISOTimezoneWithZParser = ISOTimezoneWithZParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js
var require_ISOTimezoneParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.ISOTimezoneParser = void 0;
    var _Parser2 = require_Parser(), _constants = require_constants2(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var ISOTimezoneParser = /* @__PURE__ */ function(_Parser) {
      _inherits(ISOTimezoneParser2, _Parser);
      var _super = _createSuper(ISOTimezoneParser2);
      function ISOTimezoneParser2() {
        var _this;
        _classCallCheck(this, ISOTimezoneParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 10), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T", "X"]), _this;
      }
      return _createClass(ISOTimezoneParser2, [{
        key: "parse",
        value: function(dateString, token) {
          switch (token) {
            case "x":
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basicOptionalMinutes, dateString);
            case "xx":
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basic, dateString);
            case "xxxx":
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basicOptionalSeconds, dateString);
            case "xxxxx":
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.extendedOptionalSeconds, dateString);
            case "xxx":
            default:
              return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.extended, dateString);
          }
        }
      }, {
        key: "set",
        value: function(date, flags, value) {
          return flags.timestampIsSet ? date : new Date(date.getTime() - value);
        }
      }]), ISOTimezoneParser2;
    }(_Parser2.Parser);
    exports2.ISOTimezoneParser = ISOTimezoneParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js
var require_TimestampSecondsParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.TimestampSecondsParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var TimestampSecondsParser = /* @__PURE__ */ function(_Parser) {
      _inherits(TimestampSecondsParser2, _Parser);
      var _super = _createSuper(TimestampSecondsParser2);
      function TimestampSecondsParser2() {
        var _this;
        _classCallCheck(this, TimestampSecondsParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 40), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", "*"), _this;
      }
      return _createClass(TimestampSecondsParser2, [{
        key: "parse",
        value: function(dateString) {
          return (0, _utils.parseAnyDigitsSigned)(dateString);
        }
      }, {
        key: "set",
        value: function(_date, _flags, value) {
          return [new Date(value * 1e3), {
            timestampIsSet: !0
          }];
        }
      }]), TimestampSecondsParser2;
    }(_Parser2.Parser);
    exports2.TimestampSecondsParser = TimestampSecondsParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js
var require_TimestampMillisecondsParser = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js"(exports2) {
    "use strict";
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.TimestampMillisecondsParser = void 0;
    var _Parser2 = require_Parser(), _utils = require_utils4();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      return call && (_typeof(call) === "object" || typeof call == "function") ? call : _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key2] = value, obj;
    }
    var TimestampMillisecondsParser = /* @__PURE__ */ function(_Parser) {
      _inherits(TimestampMillisecondsParser2, _Parser);
      var _super = _createSuper(TimestampMillisecondsParser2);
      function TimestampMillisecondsParser2() {
        var _this;
        _classCallCheck(this, TimestampMillisecondsParser2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty(_assertThisInitialized(_this), "priority", 20), _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", "*"), _this;
      }
      return _createClass(TimestampMillisecondsParser2, [{
        key: "parse",
        value: function(dateString) {
          return (0, _utils.parseAnyDigitsSigned)(dateString);
        }
      }, {
        key: "set",
        value: function(_date, _flags, value) {
          return [new Date(value), {
            timestampIsSet: !0
          }];
        }
      }]), TimestampMillisecondsParser2;
    }(_Parser2.Parser);
    exports2.TimestampMillisecondsParser = TimestampMillisecondsParser;
  }
});

// node_modules/date-fns/parse/_lib/parsers/index.js
var require_parsers = __commonJS({
  "node_modules/date-fns/parse/_lib/parsers/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.parsers = void 0;
    var _EraParser = require_EraParser(), _YearParser = require_YearParser(), _LocalWeekYearParser = require_LocalWeekYearParser(), _ISOWeekYearParser = require_ISOWeekYearParser(), _ExtendedYearParser = require_ExtendedYearParser(), _QuarterParser = require_QuarterParser(), _StandAloneQuarterParser = require_StandAloneQuarterParser(), _MonthParser = require_MonthParser(), _StandAloneMonthParser = require_StandAloneMonthParser(), _LocalWeekParser = require_LocalWeekParser(), _ISOWeekParser = require_ISOWeekParser(), _DateParser = require_DateParser(), _DayOfYearParser = require_DayOfYearParser(), _DayParser = require_DayParser(), _LocalDayParser = require_LocalDayParser(), _StandAloneLocalDayParser = require_StandAloneLocalDayParser(), _ISODayParser = require_ISODayParser(), _AMPMParser = require_AMPMParser(), _AMPMMidnightParser = require_AMPMMidnightParser(), _DayPeriodParser = require_DayPeriodParser(), _Hour1to12Parser = require_Hour1to12Parser(), _Hour0to23Parser = require_Hour0to23Parser(), _Hour0To11Parser = require_Hour0To11Parser(), _Hour1To24Parser = require_Hour1To24Parser(), _MinuteParser = require_MinuteParser(), _SecondParser = require_SecondParser(), _FractionOfSecondParser = require_FractionOfSecondParser(), _ISOTimezoneWithZParser = require_ISOTimezoneWithZParser(), _ISOTimezoneParser = require_ISOTimezoneParser(), _TimestampSecondsParser = require_TimestampSecondsParser(), _TimestampMillisecondsParser = require_TimestampMillisecondsParser(), parsers = {
      G: new _EraParser.EraParser(),
      y: new _YearParser.YearParser(),
      Y: new _LocalWeekYearParser.LocalWeekYearParser(),
      R: new _ISOWeekYearParser.ISOWeekYearParser(),
      u: new _ExtendedYearParser.ExtendedYearParser(),
      Q: new _QuarterParser.QuarterParser(),
      q: new _StandAloneQuarterParser.StandAloneQuarterParser(),
      M: new _MonthParser.MonthParser(),
      L: new _StandAloneMonthParser.StandAloneMonthParser(),
      w: new _LocalWeekParser.LocalWeekParser(),
      I: new _ISOWeekParser.ISOWeekParser(),
      d: new _DateParser.DateParser(),
      D: new _DayOfYearParser.DayOfYearParser(),
      E: new _DayParser.DayParser(),
      e: new _LocalDayParser.LocalDayParser(),
      c: new _StandAloneLocalDayParser.StandAloneLocalDayParser(),
      i: new _ISODayParser.ISODayParser(),
      a: new _AMPMParser.AMPMParser(),
      b: new _AMPMMidnightParser.AMPMMidnightParser(),
      B: new _DayPeriodParser.DayPeriodParser(),
      h: new _Hour1to12Parser.Hour1to12Parser(),
      H: new _Hour0to23Parser.Hour0to23Parser(),
      K: new _Hour0To11Parser.Hour0To11Parser(),
      k: new _Hour1To24Parser.Hour1To24Parser(),
      m: new _MinuteParser.MinuteParser(),
      s: new _SecondParser.SecondParser(),
      S: new _FractionOfSecondParser.FractionOfSecondParser(),
      X: new _ISOTimezoneWithZParser.ISOTimezoneWithZParser(),
      x: new _ISOTimezoneParser.ISOTimezoneParser(),
      t: new _TimestampSecondsParser.TimestampSecondsParser(),
      T: new _TimestampMillisecondsParser.TimestampMillisecondsParser()
    };
    exports2.parsers = parsers;
  }
});

// node_modules/date-fns/parse/index.js
var require_parse = __commonJS({
  "node_modules/date-fns/parse/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = parse6;
    var _index = _interopRequireDefault(require_defaultLocale()), _index2 = _interopRequireDefault(require_subMilliseconds()), _index3 = _interopRequireDefault(require_toDate()), _index4 = _interopRequireDefault(require_assign()), _index5 = _interopRequireDefault(require_longFormatters()), _index6 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index7 = require_protectedTokens(), _index8 = _interopRequireDefault(require_toInteger()), _index9 = _interopRequireDefault(require_requiredArgs()), _Setter = require_Setter(), _index10 = require_parsers(), _index11 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it;
      if (typeof Symbol > "u" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length == "number") {
          it && (o = it);
          var i = 0, F = function() {
          };
          return { s: F, n: function() {
            return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
          }, e: function(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      }
      var normalCompletion = !0, didErr = !1, err;
      return { s: function() {
        it = o[Symbol.iterator]();
      }, n: function() {
        var step = it.next();
        return normalCompletion = step.done, step;
      }, e: function(_e2) {
        didErr = !0, err = _e2;
      }, f: function() {
        try {
          !normalCompletion && it.return != null && it.return();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!!o) {
        if (typeof o == "string")
          return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
          return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return _arrayLikeToArray(o, minLen);
      }
    }
    function _arrayLikeToArray(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g, longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g, escapedStringRegExp = /^'([^]*?)'?$/, doubleQuoteRegExp = /''/g, notWhitespaceRegExp = /\S/, unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function parse6(dirtyDateString, dirtyFormatString, dirtyReferenceDate, options2) {
      var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
      (0, _index9.default)(3, arguments);
      var dateString = String(dirtyDateString), formatString = String(dirtyFormatString), defaultOptions = (0, _index11.getDefaultOptions)(), locale = (_ref = (_options$locale = options2 == null ? void 0 : options2.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index.default;
      if (!locale.match)
        throw new RangeError("locale must contain match property");
      var firstWeekContainsDate = (0, _index8.default)((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options2 == null ? void 0 : options2.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options2 == null || (_options$locale2 = options2.locale) === null || _options$locale2 === void 0 || (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7))
        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
      var weekStartsOn = (0, _index8.default)((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale3 = options2.locale) === null || _options$locale3 === void 0 || (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 || (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      if (formatString === "")
        return dateString === "" ? (0, _index3.default)(dirtyReferenceDate) : new Date(NaN);
      var subFnOptions = {
        firstWeekContainsDate,
        weekStartsOn,
        locale
      }, setters = [new _Setter.DateToSystemTimezoneSetter()], tokens = formatString.match(longFormattingTokensRegExp).map(function(substring) {
        var firstCharacter = substring[0];
        if (firstCharacter in _index5.default) {
          var longFormatter = _index5.default[firstCharacter];
          return longFormatter(substring, locale.formatLong);
        }
        return substring;
      }).join("").match(formattingTokensRegExp), usedTokens = [], _iterator = _createForOfIteratorHelper(tokens), _step;
      try {
        var _loop = function() {
          var token = _step.value;
          !(options2 != null && options2.useAdditionalWeekYearTokens) && (0, _index7.isProtectedWeekYearToken)(token) && (0, _index7.throwProtectedError)(token, formatString, dirtyDateString), !(options2 != null && options2.useAdditionalDayOfYearTokens) && (0, _index7.isProtectedDayOfYearToken)(token) && (0, _index7.throwProtectedError)(token, formatString, dirtyDateString);
          var firstCharacter = token[0], parser = _index10.parsers[firstCharacter];
          if (parser) {
            var incompatibleTokens = parser.incompatibleTokens;
            if (Array.isArray(incompatibleTokens)) {
              var incompatibleToken = usedTokens.find(function(usedToken) {
                return incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter;
              });
              if (incompatibleToken)
                throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
            } else if (parser.incompatibleTokens === "*" && usedTokens.length > 0)
              throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
            usedTokens.push({
              token: firstCharacter,
              fullToken: token
            });
            var parseResult = parser.run(dateString, token, locale.match, subFnOptions);
            if (!parseResult)
              return {
                v: new Date(NaN)
              };
            setters.push(parseResult.setter), dateString = parseResult.rest;
          } else {
            if (firstCharacter.match(unescapedLatinCharacterRegExp))
              throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
            if (token === "''" ? token = "'" : firstCharacter === "'" && (token = cleanEscapedString(token)), dateString.indexOf(token) === 0)
              dateString = dateString.slice(token.length);
            else
              return {
                v: new Date(NaN)
              };
          }
        };
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _ret = _loop();
          if (_typeof(_ret) === "object")
            return _ret.v;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (dateString.length > 0 && notWhitespaceRegExp.test(dateString))
        return new Date(NaN);
      var uniquePrioritySetters = setters.map(function(setter2) {
        return setter2.priority;
      }).sort(function(a, b) {
        return b - a;
      }).filter(function(priority, index2, array) {
        return array.indexOf(priority) === index2;
      }).map(function(priority) {
        return setters.filter(function(setter2) {
          return setter2.priority === priority;
        }).sort(function(a, b) {
          return b.subPriority - a.subPriority;
        });
      }).map(function(setterArray) {
        return setterArray[0];
      }), date = (0, _index3.default)(dirtyReferenceDate);
      if (isNaN(date.getTime()))
        return new Date(NaN);
      var utcDate = (0, _index2.default)(date, (0, _index6.default)(date)), flags = {}, _iterator2 = _createForOfIteratorHelper(uniquePrioritySetters), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var setter = _step2.value;
          if (!setter.validate(utcDate, subFnOptions))
            return new Date(NaN);
          var result = setter.set(utcDate, flags, subFnOptions);
          Array.isArray(result) ? (utcDate = result[0], (0, _index4.default)(flags, result[1])) : utcDate = result;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      return utcDate;
    }
    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isMatch/index.js
var require_isMatch = __commonJS({
  "node_modules/date-fns/isMatch/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isMatch;
    var _index = _interopRequireDefault(require_parse()), _index2 = _interopRequireDefault(require_isValid()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isMatch(dateString, formatString, options2) {
      return (0, _index3.default)(2, arguments), (0, _index2.default)((0, _index.default)(dateString, formatString, new Date(), options2));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isMonday/index.js
var require_isMonday = __commonJS({
  "node_modules/date-fns/isMonday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isMonday;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isMonday(date) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(date).getDay() === 1;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isPast/index.js
var require_isPast = __commonJS({
  "node_modules/date-fns/isPast/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isPast;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isPast(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getTime() < Date.now();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfHour/index.js
var require_startOfHour = __commonJS({
  "node_modules/date-fns/startOfHour/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfHour;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfHour(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setMinutes(0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameHour/index.js
var require_isSameHour = __commonJS({
  "node_modules/date-fns/isSameHour/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameHour;
    var _index = _interopRequireDefault(require_startOfHour()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameHour(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfHour = (0, _index.default)(dirtyDateLeft), dateRightStartOfHour = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameWeek/index.js
var require_isSameWeek = __commonJS({
  "node_modules/date-fns/isSameWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameWeek;
    var _index = _interopRequireDefault(require_startOfWeek()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameWeek(dirtyDateLeft, dirtyDateRight, options2) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfWeek = (0, _index.default)(dirtyDateLeft, options2), dateRightStartOfWeek = (0, _index.default)(dirtyDateRight, options2);
      return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameISOWeek/index.js
var require_isSameISOWeek = __commonJS({
  "node_modules/date-fns/isSameISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameISOWeek;
    var _index = _interopRequireDefault(require_isSameWeek()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {
      return (0, _index2.default)(2, arguments), (0, _index.default)(dirtyDateLeft, dirtyDateRight, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameISOWeekYear/index.js
var require_isSameISOWeekYear = __commonJS({
  "node_modules/date-fns/isSameISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameISOWeekYear;
    var _index = _interopRequireDefault(require_startOfISOWeekYear()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfYear = (0, _index.default)(dirtyDateLeft), dateRightStartOfYear = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameMinute/index.js
var require_isSameMinute = __commonJS({
  "node_modules/date-fns/isSameMinute/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameMinute;
    var _index = _interopRequireDefault(require_startOfMinute()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameMinute(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfMinute = (0, _index.default)(dirtyDateLeft), dateRightStartOfMinute = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameMonth/index.js
var require_isSameMonth = __commonJS({
  "node_modules/date-fns/isSameMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameMonth;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameMonth(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameQuarter/index.js
var require_isSameQuarter = __commonJS({
  "node_modules/date-fns/isSameQuarter/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameQuarter;
    var _index = _interopRequireDefault(require_startOfQuarter()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfQuarter = (0, _index.default)(dirtyDateLeft), dateRightStartOfQuarter = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfSecond/index.js
var require_startOfSecond = __commonJS({
  "node_modules/date-fns/startOfSecond/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfSecond;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfSecond(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate);
      return date.setMilliseconds(0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameSecond/index.js
var require_isSameSecond = __commonJS({
  "node_modules/date-fns/isSameSecond/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameSecond;
    var _index = _interopRequireDefault(require_startOfSecond()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameSecond(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeftStartOfSecond = (0, _index.default)(dirtyDateLeft), dateRightStartOfSecond = (0, _index.default)(dirtyDateRight);
      return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isSameYear/index.js
var require_isSameYear = __commonJS({
  "node_modules/date-fns/isSameYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isSameYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSameYear(dirtyDateLeft, dirtyDateRight) {
      (0, _index2.default)(2, arguments);
      var dateLeft = (0, _index.default)(dirtyDateLeft), dateRight = (0, _index.default)(dirtyDateRight);
      return dateLeft.getFullYear() === dateRight.getFullYear();
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisHour/index.js
var require_isThisHour = __commonJS({
  "node_modules/date-fns/isThisHour/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThisHour;
    var _index = _interopRequireDefault(require_isSameHour()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisHour(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisISOWeek/index.js
var require_isThisISOWeek = __commonJS({
  "node_modules/date-fns/isThisISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThisISOWeek;
    var _index = _interopRequireDefault(require_isSameISOWeek()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisISOWeek(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisMinute/index.js
var require_isThisMinute = __commonJS({
  "node_modules/date-fns/isThisMinute/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThisMinute;
    var _index = _interopRequireDefault(require_isSameMinute()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisMinute(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisMonth/index.js
var require_isThisMonth = __commonJS({
  "node_modules/date-fns/isThisMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThisMonth;
    var _index = _interopRequireDefault(require_isSameMonth()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisMonth(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisQuarter/index.js
var require_isThisQuarter = __commonJS({
  "node_modules/date-fns/isThisQuarter/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThisQuarter;
    var _index = _interopRequireDefault(require_isSameQuarter()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisQuarter(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisSecond/index.js
var require_isThisSecond = __commonJS({
  "node_modules/date-fns/isThisSecond/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThisSecond;
    var _index = _interopRequireDefault(require_isSameSecond()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisSecond(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(Date.now(), dirtyDate);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisWeek/index.js
var require_isThisWeek = __commonJS({
  "node_modules/date-fns/isThisWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThisWeek;
    var _index = _interopRequireDefault(require_isSameWeek()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisWeek(dirtyDate, options2) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, Date.now(), options2);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThisYear/index.js
var require_isThisYear = __commonJS({
  "node_modules/date-fns/isThisYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThisYear;
    var _index = _interopRequireDefault(require_isSameYear()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThisYear(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isThursday/index.js
var require_isThursday = __commonJS({
  "node_modules/date-fns/isThursday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isThursday;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isThursday(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getDay() === 4;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isToday/index.js
var require_isToday = __commonJS({
  "node_modules/date-fns/isToday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isToday;
    var _index = _interopRequireDefault(require_isSameDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isToday(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isTomorrow/index.js
var require_isTomorrow = __commonJS({
  "node_modules/date-fns/isTomorrow/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isTomorrow;
    var _index = _interopRequireDefault(require_addDays()), _index2 = _interopRequireDefault(require_isSameDay()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isTomorrow(dirtyDate) {
      return (0, _index3.default)(1, arguments), (0, _index2.default)(dirtyDate, (0, _index.default)(Date.now(), 1));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isTuesday/index.js
var require_isTuesday = __commonJS({
  "node_modules/date-fns/isTuesday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isTuesday;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isTuesday(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getDay() === 2;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isWednesday/index.js
var require_isWednesday = __commonJS({
  "node_modules/date-fns/isWednesday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isWednesday;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWednesday(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate).getDay() === 3;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isWithinInterval/index.js
var require_isWithinInterval = __commonJS({
  "node_modules/date-fns/isWithinInterval/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isWithinInterval;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isWithinInterval(dirtyDate, interval) {
      (0, _index2.default)(2, arguments);
      var time = (0, _index.default)(dirtyDate).getTime(), startTime = (0, _index.default)(interval.start).getTime(), endTime = (0, _index.default)(interval.end).getTime();
      if (!(startTime <= endTime))
        throw new RangeError("Invalid interval");
      return time >= startTime && time <= endTime;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subDays/index.js
var require_subDays = __commonJS({
  "node_modules/date-fns/subDays/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subDays;
    var _index = _interopRequireDefault(require_addDays()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subDays(dirtyDate, dirtyAmount) {
      (0, _index2.default)(2, arguments);
      var amount = (0, _index3.default)(dirtyAmount);
      return (0, _index.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/isYesterday/index.js
var require_isYesterday = __commonJS({
  "node_modules/date-fns/isYesterday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = isYesterday;
    var _index = _interopRequireDefault(require_isSameDay()), _index2 = _interopRequireDefault(require_subDays()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isYesterday(dirtyDate) {
      return (0, _index3.default)(1, arguments), (0, _index.default)(dirtyDate, (0, _index2.default)(Date.now(), 1));
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfDecade/index.js
var require_lastDayOfDecade = __commonJS({
  "node_modules/date-fns/lastDayOfDecade/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = lastDayOfDecade;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear(), decade = 9 + Math.floor(year / 10) * 10;
      return date.setFullYear(decade + 1, 0, 0), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfWeek/index.js
var require_lastDayOfWeek = __commonJS({
  "node_modules/date-fns/lastDayOfWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = lastDayOfWeek;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_toInteger()), _index3 = _interopRequireDefault(require_requiredArgs()), _index4 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfWeek(dirtyDate, options2) {
      var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index3.default)(1, arguments);
      var defaultOptions = (0, _index4.getDefaultOptions)(), weekStartsOn = (0, _index2.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6");
      var date = (0, _index.default)(dirtyDate), day = date.getDay(), diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      return date.setHours(0, 0, 0, 0), date.setDate(date.getDate() + diff), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfISOWeek/index.js
var require_lastDayOfISOWeek = __commonJS({
  "node_modules/date-fns/lastDayOfISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = lastDayOfISOWeek;
    var _index = _interopRequireDefault(require_lastDayOfWeek()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfISOWeek(dirtyDate) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(dirtyDate, {
        weekStartsOn: 1
      });
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfISOWeekYear/index.js
var require_lastDayOfISOWeekYear = __commonJS({
  "node_modules/date-fns/lastDayOfISOWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = lastDayOfISOWeekYear;
    var _index = _interopRequireDefault(require_getISOWeekYear()), _index2 = _interopRequireDefault(require_startOfISOWeek()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfISOWeekYear(dirtyDate) {
      (0, _index3.default)(1, arguments);
      var year = (0, _index.default)(dirtyDate), fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(year + 1, 0, 4), fourthOfJanuary.setHours(0, 0, 0, 0);
      var date = (0, _index2.default)(fourthOfJanuary);
      return date.setDate(date.getDate() - 1), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfQuarter/index.js
var require_lastDayOfQuarter = __commonJS({
  "node_modules/date-fns/lastDayOfQuarter/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = lastDayOfQuarter;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfQuarter(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), currentMonth = date.getMonth(), month = currentMonth - currentMonth % 3 + 3;
      return date.setMonth(month, 0), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lastDayOfYear/index.js
var require_lastDayOfYear = __commonJS({
  "node_modules/date-fns/lastDayOfYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = lastDayOfYear;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lastDayOfYear(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear();
      return date.setFullYear(year + 1, 0, 0), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/lightFormat/index.js
var require_lightFormat = __commonJS({
  "node_modules/date-fns/lightFormat/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = lightFormat;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_lightFormatters()), _index3 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds()), _index4 = _interopRequireDefault(require_isValid()), _index5 = _interopRequireDefault(require_subMilliseconds()), _index6 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g, escapedStringRegExp = /^'([^]*?)'?$/, doubleQuoteRegExp = /''/g, unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    function lightFormat(dirtyDate, formatStr) {
      (0, _index6.default)(2, arguments);
      var originalDate = (0, _index.default)(dirtyDate);
      if (!(0, _index4.default)(originalDate))
        throw new RangeError("Invalid time value");
      var timezoneOffset = (0, _index3.default)(originalDate), utcDate = (0, _index5.default)(originalDate, timezoneOffset), tokens = formatStr.match(formattingTokensRegExp);
      if (!tokens)
        return "";
      var result = tokens.map(function(substring) {
        if (substring === "''")
          return "'";
        var firstCharacter = substring[0];
        if (firstCharacter === "'")
          return cleanEscapedString(substring);
        var formatter = _index2.default[firstCharacter];
        if (formatter)
          return formatter(utcDate, substring);
        if (firstCharacter.match(unescapedLatinCharacterRegExp))
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        return substring;
      }).join("");
      return result;
    }
    function cleanEscapedString(input) {
      var matches = input.match(escapedStringRegExp);
      return matches ? matches[1].replace(doubleQuoteRegExp, "'") : input;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/milliseconds/index.js
var require_milliseconds = __commonJS({
  "node_modules/date-fns/milliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = milliseconds;
    var _index = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var daysInYear = 365.2425;
    function milliseconds(_ref) {
      var years = _ref.years, months = _ref.months, weeks = _ref.weeks, days = _ref.days, hours = _ref.hours, minutes = _ref.minutes, seconds = _ref.seconds;
      (0, _index.default)(1, arguments);
      var totalDays = 0;
      years && (totalDays += years * daysInYear), months && (totalDays += months * (daysInYear / 12)), weeks && (totalDays += weeks * 7), days && (totalDays += days);
      var totalSeconds = totalDays * 24 * 60 * 60;
      return hours && (totalSeconds += hours * 60 * 60), minutes && (totalSeconds += minutes * 60), seconds && (totalSeconds += seconds), Math.round(totalSeconds * 1e3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/millisecondsToHours/index.js
var require_millisecondsToHours = __commonJS({
  "node_modules/date-fns/millisecondsToHours/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = millisecondsToHours;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToHours(milliseconds) {
      (0, _index.default)(1, arguments);
      var hours = milliseconds / _index2.millisecondsInHour;
      return Math.floor(hours);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/millisecondsToMinutes/index.js
var require_millisecondsToMinutes = __commonJS({
  "node_modules/date-fns/millisecondsToMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = millisecondsToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToMinutes(milliseconds) {
      (0, _index.default)(1, arguments);
      var minutes = milliseconds / _index2.millisecondsInMinute;
      return Math.floor(minutes);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/millisecondsToSeconds/index.js
var require_millisecondsToSeconds = __commonJS({
  "node_modules/date-fns/millisecondsToSeconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = millisecondsToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function millisecondsToSeconds(milliseconds) {
      (0, _index.default)(1, arguments);
      var seconds = milliseconds / _index2.millisecondsInSecond;
      return Math.floor(seconds);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/minutesToHours/index.js
var require_minutesToHours = __commonJS({
  "node_modules/date-fns/minutesToHours/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = minutesToHours;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToHours(minutes) {
      (0, _index.default)(1, arguments);
      var hours = minutes / _index2.minutesInHour;
      return Math.floor(hours);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/minutesToMilliseconds/index.js
var require_minutesToMilliseconds = __commonJS({
  "node_modules/date-fns/minutesToMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = minutesToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToMilliseconds(minutes) {
      return (0, _index.default)(1, arguments), Math.floor(minutes * _index2.millisecondsInMinute);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/minutesToSeconds/index.js
var require_minutesToSeconds = __commonJS({
  "node_modules/date-fns/minutesToSeconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = minutesToSeconds;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function minutesToSeconds(minutes) {
      return (0, _index.default)(1, arguments), Math.floor(minutes * _index2.secondsInMinute);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/monthsToQuarters/index.js
var require_monthsToQuarters = __commonJS({
  "node_modules/date-fns/monthsToQuarters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = monthsToQuarters;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function monthsToQuarters(months) {
      (0, _index.default)(1, arguments);
      var quarters = months / _index2.monthsInQuarter;
      return Math.floor(quarters);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/monthsToYears/index.js
var require_monthsToYears = __commonJS({
  "node_modules/date-fns/monthsToYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = monthsToYears;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function monthsToYears(months) {
      (0, _index.default)(1, arguments);
      var years = months / _index2.monthsInYear;
      return Math.floor(years);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextDay/index.js
var require_nextDay = __commonJS({
  "node_modules/date-fns/nextDay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = nextDay;
    var _index = _interopRequireDefault(require_addDays()), _index2 = _interopRequireDefault(require_getDay()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextDay(date, day) {
      (0, _index3.default)(2, arguments);
      var delta = day - (0, _index2.default)(date);
      return delta <= 0 && (delta += 7), (0, _index.default)(date, delta);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextFriday/index.js
var require_nextFriday = __commonJS({
  "node_modules/date-fns/nextFriday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = nextFriday;
    var _index = _interopRequireDefault(require_nextDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextFriday(date) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(date, 5);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextMonday/index.js
var require_nextMonday = __commonJS({
  "node_modules/date-fns/nextMonday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = nextMonday;
    var _index = _interopRequireDefault(require_nextDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextMonday(date) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(date, 1);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextSaturday/index.js
var require_nextSaturday = __commonJS({
  "node_modules/date-fns/nextSaturday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = nextSaturday;
    var _index = _interopRequireDefault(require_nextDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextSaturday(date) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(date, 6);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextSunday/index.js
var require_nextSunday = __commonJS({
  "node_modules/date-fns/nextSunday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = nextSunday;
    var _index = _interopRequireDefault(require_nextDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextSunday(date) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(date, 0);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextThursday/index.js
var require_nextThursday = __commonJS({
  "node_modules/date-fns/nextThursday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = nextThursday;
    var _index = _interopRequireDefault(require_nextDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextThursday(date) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(date, 4);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextTuesday/index.js
var require_nextTuesday = __commonJS({
  "node_modules/date-fns/nextTuesday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = nextTuesday;
    var _index = _interopRequireDefault(require_nextDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextTuesday(date) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(date, 2);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/nextWednesday/index.js
var require_nextWednesday = __commonJS({
  "node_modules/date-fns/nextWednesday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = nextWednesday;
    var _index = _interopRequireDefault(require_nextDay()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function nextWednesday(date) {
      return (0, _index2.default)(1, arguments), (0, _index.default)(date, 3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parseISO/index.js
var require_parseISO = __commonJS({
  "node_modules/date-fns/parseISO/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = parseISO2;
    var _index = require_constants(), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function parseISO2(argument, options2) {
      var _options$additionalDi;
      (0, _index2.default)(1, arguments);
      var additionalDigits = (0, _index3.default)((_options$additionalDi = options2 == null ? void 0 : options2.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);
      if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0)
        throw new RangeError("additionalDigits must be 0, 1 or 2");
      if (!(typeof argument == "string" || Object.prototype.toString.call(argument) === "[object String]"))
        return new Date(NaN);
      var dateStrings = splitDateString(argument), date;
      if (dateStrings.date) {
        var parseYearResult = parseYear(dateStrings.date, additionalDigits);
        date = parseDate(parseYearResult.restDateString, parseYearResult.year);
      }
      if (!date || isNaN(date.getTime()))
        return new Date(NaN);
      var timestamp = date.getTime(), time = 0, offset;
      if (dateStrings.time && (time = parseTime(dateStrings.time), isNaN(time)))
        return new Date(NaN);
      if (dateStrings.timezone) {
        if (offset = parseTimezone(dateStrings.timezone), isNaN(offset))
          return new Date(NaN);
      } else {
        var dirtyDate = new Date(timestamp + time), result = new Date(0);
        return result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate()), result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds()), result;
      }
      return new Date(timestamp + time + offset);
    }
    var patterns = {
      dateTimeDelimiter: /[T ]/,
      timeZoneDelimiter: /[Z ]/i,
      timezone: /([Z+-].*)$/
    }, dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/, timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/, timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
    function splitDateString(dateString) {
      var dateStrings = {}, array = dateString.split(patterns.dateTimeDelimiter), timeString;
      if (array.length > 2)
        return dateStrings;
      if (/:/.test(array[0]) ? timeString = array[0] : (dateStrings.date = array[0], timeString = array[1], patterns.timeZoneDelimiter.test(dateStrings.date) && (dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0], timeString = dateString.substr(dateStrings.date.length, dateString.length))), timeString) {
        var token = patterns.timezone.exec(timeString);
        token ? (dateStrings.time = timeString.replace(token[1], ""), dateStrings.timezone = token[1]) : dateStrings.time = timeString;
      }
      return dateStrings;
    }
    function parseYear(dateString, additionalDigits) {
      var regex = new RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)"), captures = dateString.match(regex);
      if (!captures)
        return {
          year: NaN,
          restDateString: ""
        };
      var year = captures[1] ? parseInt(captures[1]) : null, century = captures[2] ? parseInt(captures[2]) : null;
      return {
        year: century === null ? year : century * 100,
        restDateString: dateString.slice((captures[1] || captures[2]).length)
      };
    }
    function parseDate(dateString, year) {
      if (year === null)
        return new Date(NaN);
      var captures = dateString.match(dateRegex);
      if (!captures)
        return new Date(NaN);
      var isWeekDate = !!captures[4], dayOfYear = parseDateUnit(captures[1]), month = parseDateUnit(captures[2]) - 1, day = parseDateUnit(captures[3]), week = parseDateUnit(captures[4]), dayOfWeek = parseDateUnit(captures[5]) - 1;
      if (isWeekDate)
        return validateWeekDate(year, week, dayOfWeek) ? dayOfISOWeekYear(year, week, dayOfWeek) : new Date(NaN);
      var date = new Date(0);
      return !validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear) ? new Date(NaN) : (date.setUTCFullYear(year, month, Math.max(dayOfYear, day)), date);
    }
    function parseDateUnit(value) {
      return value ? parseInt(value) : 1;
    }
    function parseTime(timeString) {
      var captures = timeString.match(timeRegex);
      if (!captures)
        return NaN;
      var hours = parseTimeUnit(captures[1]), minutes = parseTimeUnit(captures[2]), seconds = parseTimeUnit(captures[3]);
      return validateTime(hours, minutes, seconds) ? hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute + seconds * 1e3 : NaN;
    }
    function parseTimeUnit(value) {
      return value && parseFloat(value.replace(",", ".")) || 0;
    }
    function parseTimezone(timezoneString) {
      if (timezoneString === "Z")
        return 0;
      var captures = timezoneString.match(timezoneRegex);
      if (!captures)
        return 0;
      var sign = captures[1] === "+" ? -1 : 1, hours = parseInt(captures[2]), minutes = captures[3] && parseInt(captures[3]) || 0;
      return validateTimezone(hours, minutes) ? sign * (hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute) : NaN;
    }
    function dayOfISOWeekYear(isoWeekYear, week, day) {
      var date = new Date(0);
      date.setUTCFullYear(isoWeekYear, 0, 4);
      var fourthOfJanuaryDay = date.getUTCDay() || 7, diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
      return date.setUTCDate(date.getUTCDate() + diff), date;
    }
    var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    function validateDate(year, month, date) {
      return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
    }
    function validateDayOfYearDate(year, dayOfYear) {
      return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
    }
    function validateWeekDate(_year, week, day) {
      return week >= 1 && week <= 53 && day >= 0 && day <= 6;
    }
    function validateTime(hours, minutes, seconds) {
      return hours === 24 ? minutes === 0 && seconds === 0 : seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
    }
    function validateTimezone(_hours, minutes) {
      return minutes >= 0 && minutes <= 59;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/parseJSON/index.js
var require_parseJSON = __commonJS({
  "node_modules/date-fns/parseJSON/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = parseJSON;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function parseJSON(argument) {
      if ((0, _index2.default)(1, arguments), typeof argument == "string") {
        var parts = argument.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|(.)(\d{2}):?(\d{2})?)?/);
        return parts ? new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4] - (+parts[9] || 0) * (parts[8] == "-" ? -1 : 1), +parts[5] - (+parts[10] || 0) * (parts[8] == "-" ? -1 : 1), +parts[6], +((parts[7] || "0") + "00").substring(0, 3))) : new Date(NaN);
      }
      return (0, _index.default)(argument);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/previousDay/index.js
var require_previousDay = __commonJS({
  "node_modules/date-fns/previousDay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = previousDay;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = _interopRequireDefault(require_getDay()), _index3 = _interopRequireDefault(require_subDays());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousDay(date, day) {
      (0, _index.default)(2, arguments);
      var delta = (0, _index2.default)(date) - day;
      return delta <= 0 && (delta += 7), (0, _index3.default)(date, delta);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/previousFriday/index.js
var require_previousFriday = __commonJS({
  "node_modules/date-fns/previousFriday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = previousFriday;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousFriday(date) {
      return (0, _index.default)(1, arguments), (0, _index2.default)(date, 5);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/previousMonday/index.js
var require_previousMonday = __commonJS({
  "node_modules/date-fns/previousMonday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = previousMonday;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousMonday(date) {
      return (0, _index.default)(1, arguments), (0, _index2.default)(date, 1);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/previousSaturday/index.js
var require_previousSaturday = __commonJS({
  "node_modules/date-fns/previousSaturday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = previousSaturday;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousSaturday(date) {
      return (0, _index.default)(1, arguments), (0, _index2.default)(date, 6);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/previousSunday/index.js
var require_previousSunday = __commonJS({
  "node_modules/date-fns/previousSunday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = previousSunday;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousSunday(date) {
      return (0, _index.default)(1, arguments), (0, _index2.default)(date, 0);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/previousThursday/index.js
var require_previousThursday = __commonJS({
  "node_modules/date-fns/previousThursday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = previousThursday;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousThursday(date) {
      return (0, _index.default)(1, arguments), (0, _index2.default)(date, 4);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/previousTuesday/index.js
var require_previousTuesday = __commonJS({
  "node_modules/date-fns/previousTuesday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = previousTuesday;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousTuesday(date) {
      return (0, _index.default)(1, arguments), (0, _index2.default)(date, 2);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/previousWednesday/index.js
var require_previousWednesday = __commonJS({
  "node_modules/date-fns/previousWednesday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = previousWednesday;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = _interopRequireDefault(require_previousDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function previousWednesday(date) {
      return (0, _index.default)(1, arguments), (0, _index2.default)(date, 3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/quartersToMonths/index.js
var require_quartersToMonths = __commonJS({
  "node_modules/date-fns/quartersToMonths/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = quartersToMonths;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function quartersToMonths(quarters) {
      return (0, _index.default)(1, arguments), Math.floor(quarters * _index2.monthsInQuarter);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/quartersToYears/index.js
var require_quartersToYears = __commonJS({
  "node_modules/date-fns/quartersToYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = quartersToYears;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function quartersToYears(quarters) {
      (0, _index.default)(1, arguments);
      var years = quarters / _index2.quartersInYear;
      return Math.floor(years);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/roundToNearestMinutes/index.js
var require_roundToNearestMinutes = __commonJS({
  "node_modules/date-fns/roundToNearestMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = roundToNearestMinutes;
    var _index = _interopRequireDefault(require_toDate()), _index2 = require_roundingMethods(), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function roundToNearestMinutes(dirtyDate, options2) {
      var _options$nearestTo;
      if (arguments.length < 1)
        throw new TypeError("1 argument required, but only none provided present");
      var nearestTo = (0, _index3.default)((_options$nearestTo = options2 == null ? void 0 : options2.nearestTo) !== null && _options$nearestTo !== void 0 ? _options$nearestTo : 1);
      if (nearestTo < 1 || nearestTo > 30)
        throw new RangeError("`options.nearestTo` must be between 1 and 30");
      var date = (0, _index.default)(dirtyDate), seconds = date.getSeconds(), minutes = date.getMinutes() + seconds / 60, roundingMethod = (0, _index2.getRoundingMethod)(options2 == null ? void 0 : options2.roundingMethod), roundedMinutes = roundingMethod(minutes / nearestTo) * nearestTo, remainderMinutes = minutes % nearestTo, addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;
      return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/secondsToHours/index.js
var require_secondsToHours = __commonJS({
  "node_modules/date-fns/secondsToHours/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = secondsToHours;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToHours(seconds) {
      (0, _index.default)(1, arguments);
      var hours = seconds / _index2.secondsInHour;
      return Math.floor(hours);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/secondsToMilliseconds/index.js
var require_secondsToMilliseconds = __commonJS({
  "node_modules/date-fns/secondsToMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = secondsToMilliseconds;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToMilliseconds(seconds) {
      return (0, _index.default)(1, arguments), seconds * _index2.millisecondsInSecond;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/secondsToMinutes/index.js
var require_secondsToMinutes = __commonJS({
  "node_modules/date-fns/secondsToMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = secondsToMinutes;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function secondsToMinutes(seconds) {
      (0, _index.default)(1, arguments);
      var minutes = seconds / _index2.secondsInMinute;
      return Math.floor(minutes);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setMonth/index.js
var require_setMonth = __commonJS({
  "node_modules/date-fns/setMonth/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setMonth;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_getDaysInMonth()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMonth(dirtyDate, dirtyMonth) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), month = (0, _index.default)(dirtyMonth), year = date.getFullYear(), day = date.getDate(), dateWithDesiredMonth = new Date(0);
      dateWithDesiredMonth.setFullYear(year, month, 15), dateWithDesiredMonth.setHours(0, 0, 0, 0);
      var daysInMonth = (0, _index3.default)(dateWithDesiredMonth);
      return date.setMonth(month, Math.min(day, daysInMonth)), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/set/index.js
var require_set = __commonJS({
  "node_modules/date-fns/set/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = set;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_setMonth()), _index3 = _interopRequireDefault(require_toInteger()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function set(dirtyDate, values) {
      if ((0, _index4.default)(2, arguments), _typeof(values) !== "object" || values === null)
        throw new RangeError("values parameter must be an object");
      var date = (0, _index.default)(dirtyDate);
      return isNaN(date.getTime()) ? new Date(NaN) : (values.year != null && date.setFullYear(values.year), values.month != null && (date = (0, _index2.default)(date, values.month)), values.date != null && date.setDate((0, _index3.default)(values.date)), values.hours != null && date.setHours((0, _index3.default)(values.hours)), values.minutes != null && date.setMinutes((0, _index3.default)(values.minutes)), values.seconds != null && date.setSeconds((0, _index3.default)(values.seconds)), values.milliseconds != null && date.setMilliseconds((0, _index3.default)(values.milliseconds)), date);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setDate/index.js
var require_setDate = __commonJS({
  "node_modules/date-fns/setDate/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setDate;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDate(dirtyDate, dirtyDayOfMonth) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), dayOfMonth = (0, _index.default)(dirtyDayOfMonth);
      return date.setDate(dayOfMonth), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setDay/index.js
var require_setDay = __commonJS({
  "node_modules/date-fns/setDay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setDay;
    var _index = _interopRequireDefault(require_addDays()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_toInteger()), _index4 = _interopRequireDefault(require_requiredArgs()), _index5 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDay(dirtyDate, dirtyDay, options2) {
      var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index4.default)(2, arguments);
      var defaultOptions = (0, _index5.getDefaultOptions)(), weekStartsOn = (0, _index3.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options2 == null ? void 0 : options2.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
      if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
      var date = (0, _index2.default)(dirtyDate), day = (0, _index3.default)(dirtyDay), currentDay = date.getDay(), remainder = day % 7, dayIndex = (remainder + 7) % 7, delta = 7 - weekStartsOn, diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;
      return (0, _index.default)(date, diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setDayOfYear/index.js
var require_setDayOfYear = __commonJS({
  "node_modules/date-fns/setDayOfYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setDayOfYear;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDayOfYear(dirtyDate, dirtyDayOfYear) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), dayOfYear = (0, _index.default)(dirtyDayOfYear);
      return date.setMonth(0), date.setDate(dayOfYear), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setDefaultOptions/index.js
var require_setDefaultOptions = __commonJS({
  "node_modules/date-fns/setDefaultOptions/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setDefaultOptions;
    var _index = require_defaultOptions(), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setDefaultOptions(newOptions) {
      (0, _index2.default)(1, arguments);
      var result = {}, defaultOptions = (0, _index.getDefaultOptions)();
      for (var property in defaultOptions)
        Object.prototype.hasOwnProperty.call(defaultOptions, property) && (result[property] = defaultOptions[property]);
      for (var _property in newOptions)
        Object.prototype.hasOwnProperty.call(newOptions, _property) && (newOptions[_property] === void 0 ? delete result[_property] : result[_property] = newOptions[_property]);
      (0, _index.setDefaultOptions)(result);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setHours/index.js
var require_setHours = __commonJS({
  "node_modules/date-fns/setHours/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setHours;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setHours(dirtyDate, dirtyHours) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), hours = (0, _index.default)(dirtyHours);
      return date.setHours(hours), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setISODay/index.js
var require_setISODay = __commonJS({
  "node_modules/date-fns/setISODay/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setISODay;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_addDays()), _index4 = _interopRequireDefault(require_getISODay()), _index5 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISODay(dirtyDate, dirtyDay) {
      (0, _index5.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), day = (0, _index.default)(dirtyDay), currentDay = (0, _index4.default)(date), diff = day - currentDay;
      return (0, _index3.default)(date, diff);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setISOWeek/index.js
var require_setISOWeek = __commonJS({
  "node_modules/date-fns/setISOWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setISOWeek;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_getISOWeek()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setISOWeek(dirtyDate, dirtyISOWeek) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), isoWeek = (0, _index.default)(dirtyISOWeek), diff = (0, _index3.default)(date) - isoWeek;
      return date.setDate(date.getDate() - diff * 7), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setMilliseconds/index.js
var require_setMilliseconds = __commonJS({
  "node_modules/date-fns/setMilliseconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setMilliseconds;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMilliseconds(dirtyDate, dirtyMilliseconds) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), milliseconds = (0, _index.default)(dirtyMilliseconds);
      return date.setMilliseconds(milliseconds), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setMinutes/index.js
var require_setMinutes = __commonJS({
  "node_modules/date-fns/setMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setMinutes;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setMinutes(dirtyDate, dirtyMinutes) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), minutes = (0, _index.default)(dirtyMinutes);
      return date.setMinutes(minutes), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setQuarter/index.js
var require_setQuarter = __commonJS({
  "node_modules/date-fns/setQuarter/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setQuarter;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_setMonth()), _index4 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setQuarter(dirtyDate, dirtyQuarter) {
      (0, _index4.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), quarter = (0, _index.default)(dirtyQuarter), oldQuarter = Math.floor(date.getMonth() / 3) + 1, diff = quarter - oldQuarter;
      return (0, _index3.default)(date, date.getMonth() + diff * 3);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setSeconds/index.js
var require_setSeconds = __commonJS({
  "node_modules/date-fns/setSeconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setSeconds;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setSeconds(dirtyDate, dirtySeconds) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), seconds = (0, _index.default)(dirtySeconds);
      return date.setSeconds(seconds), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setWeek/index.js
var require_setWeek = __commonJS({
  "node_modules/date-fns/setWeek/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setWeek;
    var _index = _interopRequireDefault(require_getWeek()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs()), _index4 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setWeek(dirtyDate, dirtyWeek, options2) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), week = (0, _index4.default)(dirtyWeek), diff = (0, _index.default)(date, options2) - week;
      return date.setDate(date.getDate() - diff * 7), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setWeekYear/index.js
var require_setWeekYear = __commonJS({
  "node_modules/date-fns/setWeekYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setWeekYear;
    var _index = _interopRequireDefault(require_differenceInCalendarDays()), _index2 = _interopRequireDefault(require_startOfWeekYear()), _index3 = _interopRequireDefault(require_toDate()), _index4 = _interopRequireDefault(require_toInteger()), _index5 = _interopRequireDefault(require_requiredArgs()), _index6 = require_defaultOptions();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setWeekYear(dirtyDate, dirtyWeekYear, options2) {
      var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
      (0, _index5.default)(2, arguments);
      var defaultOptions = (0, _index6.getDefaultOptions)(), firstWeekContainsDate = (0, _index4.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options2 == null ? void 0 : options2.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options2 == null || (_options$locale = options2.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1), date = (0, _index3.default)(dirtyDate), weekYear = (0, _index4.default)(dirtyWeekYear), diff = (0, _index.default)(date, (0, _index2.default)(date, options2)), firstWeek = new Date(0);
      return firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate), firstWeek.setHours(0, 0, 0, 0), date = (0, _index2.default)(firstWeek, options2), date.setDate(date.getDate() + diff), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/setYear/index.js
var require_setYear = __commonJS({
  "node_modules/date-fns/setYear/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = setYear;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_toDate()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function setYear(dirtyDate, dirtyYear) {
      (0, _index3.default)(2, arguments);
      var date = (0, _index2.default)(dirtyDate), year = (0, _index.default)(dirtyYear);
      return isNaN(date.getTime()) ? new Date(NaN) : (date.setFullYear(year), date);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfDecade/index.js
var require_startOfDecade = __commonJS({
  "node_modules/date-fns/startOfDecade/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfDecade;
    var _index = _interopRequireDefault(require_toDate()), _index2 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfDecade(dirtyDate) {
      (0, _index2.default)(1, arguments);
      var date = (0, _index.default)(dirtyDate), year = date.getFullYear(), decade = Math.floor(year / 10) * 10;
      return date.setFullYear(decade, 0, 1), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfToday/index.js
var require_startOfToday = __commonJS({
  "node_modules/date-fns/startOfToday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfToday;
    var _index = _interopRequireDefault(require_startOfDay());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function startOfToday() {
      return (0, _index.default)(Date.now());
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfTomorrow/index.js
var require_startOfTomorrow = __commonJS({
  "node_modules/date-fns/startOfTomorrow/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfTomorrow;
    function startOfTomorrow() {
      var now = new Date(), year = now.getFullYear(), month = now.getMonth(), day = now.getDate(), date = new Date(0);
      return date.setFullYear(year, month, day + 1), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/startOfYesterday/index.js
var require_startOfYesterday = __commonJS({
  "node_modules/date-fns/startOfYesterday/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = startOfYesterday;
    function startOfYesterday() {
      var now = new Date(), year = now.getFullYear(), month = now.getMonth(), day = now.getDate(), date = new Date(0);
      return date.setFullYear(year, month, day - 1), date.setHours(0, 0, 0, 0), date;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subMonths/index.js
var require_subMonths = __commonJS({
  "node_modules/date-fns/subMonths/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subMonths;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addMonths()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMonths(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/sub/index.js
var require_sub = __commonJS({
  "node_modules/date-fns/sub/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = sub;
    var _index = _interopRequireDefault(require_subDays()), _index2 = _interopRequireDefault(require_subMonths()), _index3 = _interopRequireDefault(require_requiredArgs()), _index4 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(obj) {
      return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _typeof = function(obj2) {
        return typeof obj2;
      } : _typeof = function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function sub(date, duration) {
      if ((0, _index3.default)(2, arguments), !duration || _typeof(duration) !== "object")
        return new Date(NaN);
      var years = duration.years ? (0, _index4.default)(duration.years) : 0, months = duration.months ? (0, _index4.default)(duration.months) : 0, weeks = duration.weeks ? (0, _index4.default)(duration.weeks) : 0, days = duration.days ? (0, _index4.default)(duration.days) : 0, hours = duration.hours ? (0, _index4.default)(duration.hours) : 0, minutes = duration.minutes ? (0, _index4.default)(duration.minutes) : 0, seconds = duration.seconds ? (0, _index4.default)(duration.seconds) : 0, dateWithoutMonths = (0, _index2.default)(date, months + years * 12), dateWithoutDays = (0, _index.default)(dateWithoutMonths, days + weeks * 7), minutestoSub = minutes + hours * 60, secondstoSub = seconds + minutestoSub * 60, mstoSub = secondstoSub * 1e3, finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
      return finalDate;
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subBusinessDays/index.js
var require_subBusinessDays = __commonJS({
  "node_modules/date-fns/subBusinessDays/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subBusinessDays;
    var _index = _interopRequireDefault(require_addBusinessDays()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subBusinessDays(dirtyDate, dirtyAmount) {
      (0, _index2.default)(2, arguments);
      var amount = (0, _index3.default)(dirtyAmount);
      return (0, _index.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subHours/index.js
var require_subHours = __commonJS({
  "node_modules/date-fns/subHours/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subHours;
    var _index = _interopRequireDefault(require_addHours()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subHours(dirtyDate, dirtyAmount) {
      (0, _index2.default)(2, arguments);
      var amount = (0, _index3.default)(dirtyAmount);
      return (0, _index.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subMinutes/index.js
var require_subMinutes = __commonJS({
  "node_modules/date-fns/subMinutes/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subMinutes;
    var _index = _interopRequireDefault(require_addMinutes()), _index2 = _interopRequireDefault(require_requiredArgs()), _index3 = _interopRequireDefault(require_toInteger());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subMinutes(dirtyDate, dirtyAmount) {
      (0, _index2.default)(2, arguments);
      var amount = (0, _index3.default)(dirtyAmount);
      return (0, _index.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subQuarters/index.js
var require_subQuarters = __commonJS({
  "node_modules/date-fns/subQuarters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subQuarters;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addQuarters()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subQuarters(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subSeconds/index.js
var require_subSeconds = __commonJS({
  "node_modules/date-fns/subSeconds/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subSeconds;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addSeconds()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subSeconds(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subWeeks/index.js
var require_subWeeks = __commonJS({
  "node_modules/date-fns/subWeeks/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subWeeks;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addWeeks()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subWeeks(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/subYears/index.js
var require_subYears = __commonJS({
  "node_modules/date-fns/subYears/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = subYears;
    var _index = _interopRequireDefault(require_toInteger()), _index2 = _interopRequireDefault(require_addYears()), _index3 = _interopRequireDefault(require_requiredArgs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subYears(dirtyDate, dirtyAmount) {
      (0, _index3.default)(2, arguments);
      var amount = (0, _index.default)(dirtyAmount);
      return (0, _index2.default)(dirtyDate, -amount);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/weeksToDays/index.js
var require_weeksToDays = __commonJS({
  "node_modules/date-fns/weeksToDays/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = weeksToDays;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function weeksToDays(weeks) {
      return (0, _index.default)(1, arguments), Math.floor(weeks * _index2.daysInWeek);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/yearsToMonths/index.js
var require_yearsToMonths = __commonJS({
  "node_modules/date-fns/yearsToMonths/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = yearsToMonths;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function yearsToMonths(years) {
      return (0, _index.default)(1, arguments), Math.floor(years * _index2.monthsInYear);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/yearsToQuarters/index.js
var require_yearsToQuarters = __commonJS({
  "node_modules/date-fns/yearsToQuarters/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = yearsToQuarters;
    var _index = _interopRequireDefault(require_requiredArgs()), _index2 = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function yearsToQuarters(years) {
      return (0, _index.default)(1, arguments), Math.floor(years * _index2.quartersInYear);
    }
    module2.exports = exports2.default;
  }
});

// node_modules/date-fns/index.js
var require_date_fns = __commonJS({
  "node_modules/date-fns/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    var _exportNames = {
      add: !0,
      addBusinessDays: !0,
      addDays: !0,
      addHours: !0,
      addISOWeekYears: !0,
      addMilliseconds: !0,
      addMinutes: !0,
      addMonths: !0,
      addQuarters: !0,
      addSeconds: !0,
      addWeeks: !0,
      addYears: !0,
      areIntervalsOverlapping: !0,
      clamp: !0,
      closestIndexTo: !0,
      closestTo: !0,
      compareAsc: !0,
      compareDesc: !0,
      daysToWeeks: !0,
      differenceInBusinessDays: !0,
      differenceInCalendarDays: !0,
      differenceInCalendarISOWeekYears: !0,
      differenceInCalendarISOWeeks: !0,
      differenceInCalendarMonths: !0,
      differenceInCalendarQuarters: !0,
      differenceInCalendarWeeks: !0,
      differenceInCalendarYears: !0,
      differenceInDays: !0,
      differenceInHours: !0,
      differenceInISOWeekYears: !0,
      differenceInMilliseconds: !0,
      differenceInMinutes: !0,
      differenceInMonths: !0,
      differenceInQuarters: !0,
      differenceInSeconds: !0,
      differenceInWeeks: !0,
      differenceInYears: !0,
      eachDayOfInterval: !0,
      eachHourOfInterval: !0,
      eachMinuteOfInterval: !0,
      eachMonthOfInterval: !0,
      eachQuarterOfInterval: !0,
      eachWeekOfInterval: !0,
      eachWeekendOfInterval: !0,
      eachWeekendOfMonth: !0,
      eachWeekendOfYear: !0,
      eachYearOfInterval: !0,
      endOfDay: !0,
      endOfDecade: !0,
      endOfHour: !0,
      endOfISOWeek: !0,
      endOfISOWeekYear: !0,
      endOfMinute: !0,
      endOfMonth: !0,
      endOfQuarter: !0,
      endOfSecond: !0,
      endOfToday: !0,
      endOfTomorrow: !0,
      endOfWeek: !0,
      endOfYear: !0,
      endOfYesterday: !0,
      format: !0,
      formatDistance: !0,
      formatDistanceStrict: !0,
      formatDistanceToNow: !0,
      formatDistanceToNowStrict: !0,
      formatDuration: !0,
      formatISO: !0,
      formatISO9075: !0,
      formatISODuration: !0,
      formatRFC3339: !0,
      formatRFC7231: !0,
      formatRelative: !0,
      fromUnixTime: !0,
      getDate: !0,
      getDay: !0,
      getDayOfYear: !0,
      getDaysInMonth: !0,
      getDaysInYear: !0,
      getDecade: !0,
      getDefaultOptions: !0,
      getHours: !0,
      getISODay: !0,
      getISOWeek: !0,
      getISOWeekYear: !0,
      getISOWeeksInYear: !0,
      getMilliseconds: !0,
      getMinutes: !0,
      getMonth: !0,
      getOverlappingDaysInIntervals: !0,
      getQuarter: !0,
      getSeconds: !0,
      getTime: !0,
      getUnixTime: !0,
      getWeek: !0,
      getWeekOfMonth: !0,
      getWeekYear: !0,
      getWeeksInMonth: !0,
      getYear: !0,
      hoursToMilliseconds: !0,
      hoursToMinutes: !0,
      hoursToSeconds: !0,
      intervalToDuration: !0,
      intlFormat: !0,
      intlFormatDistance: !0,
      isAfter: !0,
      isBefore: !0,
      isDate: !0,
      isEqual: !0,
      isExists: !0,
      isFirstDayOfMonth: !0,
      isFriday: !0,
      isFuture: !0,
      isLastDayOfMonth: !0,
      isLeapYear: !0,
      isMatch: !0,
      isMonday: !0,
      isPast: !0,
      isSameDay: !0,
      isSameHour: !0,
      isSameISOWeek: !0,
      isSameISOWeekYear: !0,
      isSameMinute: !0,
      isSameMonth: !0,
      isSameQuarter: !0,
      isSameSecond: !0,
      isSameWeek: !0,
      isSameYear: !0,
      isSaturday: !0,
      isSunday: !0,
      isThisHour: !0,
      isThisISOWeek: !0,
      isThisMinute: !0,
      isThisMonth: !0,
      isThisQuarter: !0,
      isThisSecond: !0,
      isThisWeek: !0,
      isThisYear: !0,
      isThursday: !0,
      isToday: !0,
      isTomorrow: !0,
      isTuesday: !0,
      isValid: !0,
      isWednesday: !0,
      isWeekend: !0,
      isWithinInterval: !0,
      isYesterday: !0,
      lastDayOfDecade: !0,
      lastDayOfISOWeek: !0,
      lastDayOfISOWeekYear: !0,
      lastDayOfMonth: !0,
      lastDayOfQuarter: !0,
      lastDayOfWeek: !0,
      lastDayOfYear: !0,
      lightFormat: !0,
      max: !0,
      milliseconds: !0,
      millisecondsToHours: !0,
      millisecondsToMinutes: !0,
      millisecondsToSeconds: !0,
      min: !0,
      minutesToHours: !0,
      minutesToMilliseconds: !0,
      minutesToSeconds: !0,
      monthsToQuarters: !0,
      monthsToYears: !0,
      nextDay: !0,
      nextFriday: !0,
      nextMonday: !0,
      nextSaturday: !0,
      nextSunday: !0,
      nextThursday: !0,
      nextTuesday: !0,
      nextWednesday: !0,
      parse: !0,
      parseISO: !0,
      parseJSON: !0,
      previousDay: !0,
      previousFriday: !0,
      previousMonday: !0,
      previousSaturday: !0,
      previousSunday: !0,
      previousThursday: !0,
      previousTuesday: !0,
      previousWednesday: !0,
      quartersToMonths: !0,
      quartersToYears: !0,
      roundToNearestMinutes: !0,
      secondsToHours: !0,
      secondsToMilliseconds: !0,
      secondsToMinutes: !0,
      set: !0,
      setDate: !0,
      setDay: !0,
      setDayOfYear: !0,
      setDefaultOptions: !0,
      setHours: !0,
      setISODay: !0,
      setISOWeek: !0,
      setISOWeekYear: !0,
      setMilliseconds: !0,
      setMinutes: !0,
      setMonth: !0,
      setQuarter: !0,
      setSeconds: !0,
      setWeek: !0,
      setWeekYear: !0,
      setYear: !0,
      startOfDay: !0,
      startOfDecade: !0,
      startOfHour: !0,
      startOfISOWeek: !0,
      startOfISOWeekYear: !0,
      startOfMinute: !0,
      startOfMonth: !0,
      startOfQuarter: !0,
      startOfSecond: !0,
      startOfToday: !0,
      startOfTomorrow: !0,
      startOfWeek: !0,
      startOfWeekYear: !0,
      startOfYear: !0,
      startOfYesterday: !0,
      sub: !0,
      subBusinessDays: !0,
      subDays: !0,
      subHours: !0,
      subISOWeekYears: !0,
      subMilliseconds: !0,
      subMinutes: !0,
      subMonths: !0,
      subQuarters: !0,
      subSeconds: !0,
      subWeeks: !0,
      subYears: !0,
      toDate: !0,
      weeksToDays: !0,
      yearsToMonths: !0,
      yearsToQuarters: !0
    };
    Object.defineProperty(exports2, "add", {
      enumerable: !0,
      get: function() {
        return _index.default;
      }
    });
    Object.defineProperty(exports2, "addBusinessDays", {
      enumerable: !0,
      get: function() {
        return _index2.default;
      }
    });
    Object.defineProperty(exports2, "addDays", {
      enumerable: !0,
      get: function() {
        return _index3.default;
      }
    });
    Object.defineProperty(exports2, "addHours", {
      enumerable: !0,
      get: function() {
        return _index4.default;
      }
    });
    Object.defineProperty(exports2, "addISOWeekYears", {
      enumerable: !0,
      get: function() {
        return _index5.default;
      }
    });
    Object.defineProperty(exports2, "addMilliseconds", {
      enumerable: !0,
      get: function() {
        return _index6.default;
      }
    });
    Object.defineProperty(exports2, "addMinutes", {
      enumerable: !0,
      get: function() {
        return _index7.default;
      }
    });
    Object.defineProperty(exports2, "addMonths", {
      enumerable: !0,
      get: function() {
        return _index8.default;
      }
    });
    Object.defineProperty(exports2, "addQuarters", {
      enumerable: !0,
      get: function() {
        return _index9.default;
      }
    });
    Object.defineProperty(exports2, "addSeconds", {
      enumerable: !0,
      get: function() {
        return _index10.default;
      }
    });
    Object.defineProperty(exports2, "addWeeks", {
      enumerable: !0,
      get: function() {
        return _index11.default;
      }
    });
    Object.defineProperty(exports2, "addYears", {
      enumerable: !0,
      get: function() {
        return _index12.default;
      }
    });
    Object.defineProperty(exports2, "areIntervalsOverlapping", {
      enumerable: !0,
      get: function() {
        return _index13.default;
      }
    });
    Object.defineProperty(exports2, "clamp", {
      enumerable: !0,
      get: function() {
        return _index14.default;
      }
    });
    Object.defineProperty(exports2, "closestIndexTo", {
      enumerable: !0,
      get: function() {
        return _index15.default;
      }
    });
    Object.defineProperty(exports2, "closestTo", {
      enumerable: !0,
      get: function() {
        return _index16.default;
      }
    });
    Object.defineProperty(exports2, "compareAsc", {
      enumerable: !0,
      get: function() {
        return _index17.default;
      }
    });
    Object.defineProperty(exports2, "compareDesc", {
      enumerable: !0,
      get: function() {
        return _index18.default;
      }
    });
    Object.defineProperty(exports2, "daysToWeeks", {
      enumerable: !0,
      get: function() {
        return _index19.default;
      }
    });
    Object.defineProperty(exports2, "differenceInBusinessDays", {
      enumerable: !0,
      get: function() {
        return _index20.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarDays", {
      enumerable: !0,
      get: function() {
        return _index21.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarISOWeekYears", {
      enumerable: !0,
      get: function() {
        return _index22.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarISOWeeks", {
      enumerable: !0,
      get: function() {
        return _index23.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarMonths", {
      enumerable: !0,
      get: function() {
        return _index24.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarQuarters", {
      enumerable: !0,
      get: function() {
        return _index25.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarWeeks", {
      enumerable: !0,
      get: function() {
        return _index26.default;
      }
    });
    Object.defineProperty(exports2, "differenceInCalendarYears", {
      enumerable: !0,
      get: function() {
        return _index27.default;
      }
    });
    Object.defineProperty(exports2, "differenceInDays", {
      enumerable: !0,
      get: function() {
        return _index28.default;
      }
    });
    Object.defineProperty(exports2, "differenceInHours", {
      enumerable: !0,
      get: function() {
        return _index29.default;
      }
    });
    Object.defineProperty(exports2, "differenceInISOWeekYears", {
      enumerable: !0,
      get: function() {
        return _index30.default;
      }
    });
    Object.defineProperty(exports2, "differenceInMilliseconds", {
      enumerable: !0,
      get: function() {
        return _index31.default;
      }
    });
    Object.defineProperty(exports2, "differenceInMinutes", {
      enumerable: !0,
      get: function() {
        return _index32.default;
      }
    });
    Object.defineProperty(exports2, "differenceInMonths", {
      enumerable: !0,
      get: function() {
        return _index33.default;
      }
    });
    Object.defineProperty(exports2, "differenceInQuarters", {
      enumerable: !0,
      get: function() {
        return _index34.default;
      }
    });
    Object.defineProperty(exports2, "differenceInSeconds", {
      enumerable: !0,
      get: function() {
        return _index35.default;
      }
    });
    Object.defineProperty(exports2, "differenceInWeeks", {
      enumerable: !0,
      get: function() {
        return _index36.default;
      }
    });
    Object.defineProperty(exports2, "differenceInYears", {
      enumerable: !0,
      get: function() {
        return _index37.default;
      }
    });
    Object.defineProperty(exports2, "eachDayOfInterval", {
      enumerable: !0,
      get: function() {
        return _index38.default;
      }
    });
    Object.defineProperty(exports2, "eachHourOfInterval", {
      enumerable: !0,
      get: function() {
        return _index39.default;
      }
    });
    Object.defineProperty(exports2, "eachMinuteOfInterval", {
      enumerable: !0,
      get: function() {
        return _index40.default;
      }
    });
    Object.defineProperty(exports2, "eachMonthOfInterval", {
      enumerable: !0,
      get: function() {
        return _index41.default;
      }
    });
    Object.defineProperty(exports2, "eachQuarterOfInterval", {
      enumerable: !0,
      get: function() {
        return _index42.default;
      }
    });
    Object.defineProperty(exports2, "eachWeekOfInterval", {
      enumerable: !0,
      get: function() {
        return _index43.default;
      }
    });
    Object.defineProperty(exports2, "eachWeekendOfInterval", {
      enumerable: !0,
      get: function() {
        return _index44.default;
      }
    });
    Object.defineProperty(exports2, "eachWeekendOfMonth", {
      enumerable: !0,
      get: function() {
        return _index45.default;
      }
    });
    Object.defineProperty(exports2, "eachWeekendOfYear", {
      enumerable: !0,
      get: function() {
        return _index46.default;
      }
    });
    Object.defineProperty(exports2, "eachYearOfInterval", {
      enumerable: !0,
      get: function() {
        return _index47.default;
      }
    });
    Object.defineProperty(exports2, "endOfDay", {
      enumerable: !0,
      get: function() {
        return _index48.default;
      }
    });
    Object.defineProperty(exports2, "endOfDecade", {
      enumerable: !0,
      get: function() {
        return _index49.default;
      }
    });
    Object.defineProperty(exports2, "endOfHour", {
      enumerable: !0,
      get: function() {
        return _index50.default;
      }
    });
    Object.defineProperty(exports2, "endOfISOWeek", {
      enumerable: !0,
      get: function() {
        return _index51.default;
      }
    });
    Object.defineProperty(exports2, "endOfISOWeekYear", {
      enumerable: !0,
      get: function() {
        return _index52.default;
      }
    });
    Object.defineProperty(exports2, "endOfMinute", {
      enumerable: !0,
      get: function() {
        return _index53.default;
      }
    });
    Object.defineProperty(exports2, "endOfMonth", {
      enumerable: !0,
      get: function() {
        return _index54.default;
      }
    });
    Object.defineProperty(exports2, "endOfQuarter", {
      enumerable: !0,
      get: function() {
        return _index55.default;
      }
    });
    Object.defineProperty(exports2, "endOfSecond", {
      enumerable: !0,
      get: function() {
        return _index56.default;
      }
    });
    Object.defineProperty(exports2, "endOfToday", {
      enumerable: !0,
      get: function() {
        return _index57.default;
      }
    });
    Object.defineProperty(exports2, "endOfTomorrow", {
      enumerable: !0,
      get: function() {
        return _index58.default;
      }
    });
    Object.defineProperty(exports2, "endOfWeek", {
      enumerable: !0,
      get: function() {
        return _index59.default;
      }
    });
    Object.defineProperty(exports2, "endOfYear", {
      enumerable: !0,
      get: function() {
        return _index60.default;
      }
    });
    Object.defineProperty(exports2, "endOfYesterday", {
      enumerable: !0,
      get: function() {
        return _index61.default;
      }
    });
    Object.defineProperty(exports2, "format", {
      enumerable: !0,
      get: function() {
        return _index62.default;
      }
    });
    Object.defineProperty(exports2, "formatDistance", {
      enumerable: !0,
      get: function() {
        return _index63.default;
      }
    });
    Object.defineProperty(exports2, "formatDistanceStrict", {
      enumerable: !0,
      get: function() {
        return _index64.default;
      }
    });
    Object.defineProperty(exports2, "formatDistanceToNow", {
      enumerable: !0,
      get: function() {
        return _index65.default;
      }
    });
    Object.defineProperty(exports2, "formatDistanceToNowStrict", {
      enumerable: !0,
      get: function() {
        return _index66.default;
      }
    });
    Object.defineProperty(exports2, "formatDuration", {
      enumerable: !0,
      get: function() {
        return _index67.default;
      }
    });
    Object.defineProperty(exports2, "formatISO", {
      enumerable: !0,
      get: function() {
        return _index68.default;
      }
    });
    Object.defineProperty(exports2, "formatISO9075", {
      enumerable: !0,
      get: function() {
        return _index69.default;
      }
    });
    Object.defineProperty(exports2, "formatISODuration", {
      enumerable: !0,
      get: function() {
        return _index70.default;
      }
    });
    Object.defineProperty(exports2, "formatRFC3339", {
      enumerable: !0,
      get: function() {
        return _index71.default;
      }
    });
    Object.defineProperty(exports2, "formatRFC7231", {
      enumerable: !0,
      get: function() {
        return _index72.default;
      }
    });
    Object.defineProperty(exports2, "formatRelative", {
      enumerable: !0,
      get: function() {
        return _index73.default;
      }
    });
    Object.defineProperty(exports2, "fromUnixTime", {
      enumerable: !0,
      get: function() {
        return _index74.default;
      }
    });
    Object.defineProperty(exports2, "getDate", {
      enumerable: !0,
      get: function() {
        return _index75.default;
      }
    });
    Object.defineProperty(exports2, "getDay", {
      enumerable: !0,
      get: function() {
        return _index76.default;
      }
    });
    Object.defineProperty(exports2, "getDayOfYear", {
      enumerable: !0,
      get: function() {
        return _index77.default;
      }
    });
    Object.defineProperty(exports2, "getDaysInMonth", {
      enumerable: !0,
      get: function() {
        return _index78.default;
      }
    });
    Object.defineProperty(exports2, "getDaysInYear", {
      enumerable: !0,
      get: function() {
        return _index79.default;
      }
    });
    Object.defineProperty(exports2, "getDecade", {
      enumerable: !0,
      get: function() {
        return _index80.default;
      }
    });
    Object.defineProperty(exports2, "getDefaultOptions", {
      enumerable: !0,
      get: function() {
        return _index81.default;
      }
    });
    Object.defineProperty(exports2, "getHours", {
      enumerable: !0,
      get: function() {
        return _index82.default;
      }
    });
    Object.defineProperty(exports2, "getISODay", {
      enumerable: !0,
      get: function() {
        return _index83.default;
      }
    });
    Object.defineProperty(exports2, "getISOWeek", {
      enumerable: !0,
      get: function() {
        return _index84.default;
      }
    });
    Object.defineProperty(exports2, "getISOWeekYear", {
      enumerable: !0,
      get: function() {
        return _index85.default;
      }
    });
    Object.defineProperty(exports2, "getISOWeeksInYear", {
      enumerable: !0,
      get: function() {
        return _index86.default;
      }
    });
    Object.defineProperty(exports2, "getMilliseconds", {
      enumerable: !0,
      get: function() {
        return _index87.default;
      }
    });
    Object.defineProperty(exports2, "getMinutes", {
      enumerable: !0,
      get: function() {
        return _index88.default;
      }
    });
    Object.defineProperty(exports2, "getMonth", {
      enumerable: !0,
      get: function() {
        return _index89.default;
      }
    });
    Object.defineProperty(exports2, "getOverlappingDaysInIntervals", {
      enumerable: !0,
      get: function() {
        return _index90.default;
      }
    });
    Object.defineProperty(exports2, "getQuarter", {
      enumerable: !0,
      get: function() {
        return _index91.default;
      }
    });
    Object.defineProperty(exports2, "getSeconds", {
      enumerable: !0,
      get: function() {
        return _index92.default;
      }
    });
    Object.defineProperty(exports2, "getTime", {
      enumerable: !0,
      get: function() {
        return _index93.default;
      }
    });
    Object.defineProperty(exports2, "getUnixTime", {
      enumerable: !0,
      get: function() {
        return _index94.default;
      }
    });
    Object.defineProperty(exports2, "getWeek", {
      enumerable: !0,
      get: function() {
        return _index95.default;
      }
    });
    Object.defineProperty(exports2, "getWeekOfMonth", {
      enumerable: !0,
      get: function() {
        return _index96.default;
      }
    });
    Object.defineProperty(exports2, "getWeekYear", {
      enumerable: !0,
      get: function() {
        return _index97.default;
      }
    });
    Object.defineProperty(exports2, "getWeeksInMonth", {
      enumerable: !0,
      get: function() {
        return _index98.default;
      }
    });
    Object.defineProperty(exports2, "getYear", {
      enumerable: !0,
      get: function() {
        return _index99.default;
      }
    });
    Object.defineProperty(exports2, "hoursToMilliseconds", {
      enumerable: !0,
      get: function() {
        return _index100.default;
      }
    });
    Object.defineProperty(exports2, "hoursToMinutes", {
      enumerable: !0,
      get: function() {
        return _index101.default;
      }
    });
    Object.defineProperty(exports2, "hoursToSeconds", {
      enumerable: !0,
      get: function() {
        return _index102.default;
      }
    });
    Object.defineProperty(exports2, "intervalToDuration", {
      enumerable: !0,
      get: function() {
        return _index103.default;
      }
    });
    Object.defineProperty(exports2, "intlFormat", {
      enumerable: !0,
      get: function() {
        return _index104.default;
      }
    });
    Object.defineProperty(exports2, "intlFormatDistance", {
      enumerable: !0,
      get: function() {
        return _index105.default;
      }
    });
    Object.defineProperty(exports2, "isAfter", {
      enumerable: !0,
      get: function() {
        return _index106.default;
      }
    });
    Object.defineProperty(exports2, "isBefore", {
      enumerable: !0,
      get: function() {
        return _index107.default;
      }
    });
    Object.defineProperty(exports2, "isDate", {
      enumerable: !0,
      get: function() {
        return _index108.default;
      }
    });
    Object.defineProperty(exports2, "isEqual", {
      enumerable: !0,
      get: function() {
        return _index109.default;
      }
    });
    Object.defineProperty(exports2, "isExists", {
      enumerable: !0,
      get: function() {
        return _index110.default;
      }
    });
    Object.defineProperty(exports2, "isFirstDayOfMonth", {
      enumerable: !0,
      get: function() {
        return _index111.default;
      }
    });
    Object.defineProperty(exports2, "isFriday", {
      enumerable: !0,
      get: function() {
        return _index112.default;
      }
    });
    Object.defineProperty(exports2, "isFuture", {
      enumerable: !0,
      get: function() {
        return _index113.default;
      }
    });
    Object.defineProperty(exports2, "isLastDayOfMonth", {
      enumerable: !0,
      get: function() {
        return _index114.default;
      }
    });
    Object.defineProperty(exports2, "isLeapYear", {
      enumerable: !0,
      get: function() {
        return _index115.default;
      }
    });
    Object.defineProperty(exports2, "isMatch", {
      enumerable: !0,
      get: function() {
        return _index116.default;
      }
    });
    Object.defineProperty(exports2, "isMonday", {
      enumerable: !0,
      get: function() {
        return _index117.default;
      }
    });
    Object.defineProperty(exports2, "isPast", {
      enumerable: !0,
      get: function() {
        return _index118.default;
      }
    });
    Object.defineProperty(exports2, "isSameDay", {
      enumerable: !0,
      get: function() {
        return _index119.default;
      }
    });
    Object.defineProperty(exports2, "isSameHour", {
      enumerable: !0,
      get: function() {
        return _index120.default;
      }
    });
    Object.defineProperty(exports2, "isSameISOWeek", {
      enumerable: !0,
      get: function() {
        return _index121.default;
      }
    });
    Object.defineProperty(exports2, "isSameISOWeekYear", {
      enumerable: !0,
      get: function() {
        return _index122.default;
      }
    });
    Object.defineProperty(exports2, "isSameMinute", {
      enumerable: !0,
      get: function() {
        return _index123.default;
      }
    });
    Object.defineProperty(exports2, "isSameMonth", {
      enumerable: !0,
      get: function() {
        return _index124.default;
      }
    });
    Object.defineProperty(exports2, "isSameQuarter", {
      enumerable: !0,
      get: function() {
        return _index125.default;
      }
    });
    Object.defineProperty(exports2, "isSameSecond", {
      enumerable: !0,
      get: function() {
        return _index126.default;
      }
    });
    Object.defineProperty(exports2, "isSameWeek", {
      enumerable: !0,
      get: function() {
        return _index127.default;
      }
    });
    Object.defineProperty(exports2, "isSameYear", {
      enumerable: !0,
      get: function() {
        return _index128.default;
      }
    });
    Object.defineProperty(exports2, "isSaturday", {
      enumerable: !0,
      get: function() {
        return _index129.default;
      }
    });
    Object.defineProperty(exports2, "isSunday", {
      enumerable: !0,
      get: function() {
        return _index130.default;
      }
    });
    Object.defineProperty(exports2, "isThisHour", {
      enumerable: !0,
      get: function() {
        return _index131.default;
      }
    });
    Object.defineProperty(exports2, "isThisISOWeek", {
      enumerable: !0,
      get: function() {
        return _index132.default;
      }
    });
    Object.defineProperty(exports2, "isThisMinute", {
      enumerable: !0,
      get: function() {
        return _index133.default;
      }
    });
    Object.defineProperty(exports2, "isThisMonth", {
      enumerable: !0,
      get: function() {
        return _index134.default;
      }
    });
    Object.defineProperty(exports2, "isThisQuarter", {
      enumerable: !0,
      get: function() {
        return _index135.default;
      }
    });
    Object.defineProperty(exports2, "isThisSecond", {
      enumerable: !0,
      get: function() {
        return _index136.default;
      }
    });
    Object.defineProperty(exports2, "isThisWeek", {
      enumerable: !0,
      get: function() {
        return _index137.default;
      }
    });
    Object.defineProperty(exports2, "isThisYear", {
      enumerable: !0,
      get: function() {
        return _index138.default;
      }
    });
    Object.defineProperty(exports2, "isThursday", {
      enumerable: !0,
      get: function() {
        return _index139.default;
      }
    });
    Object.defineProperty(exports2, "isToday", {
      enumerable: !0,
      get: function() {
        return _index140.default;
      }
    });
    Object.defineProperty(exports2, "isTomorrow", {
      enumerable: !0,
      get: function() {
        return _index141.default;
      }
    });
    Object.defineProperty(exports2, "isTuesday", {
      enumerable: !0,
      get: function() {
        return _index142.default;
      }
    });
    Object.defineProperty(exports2, "isValid", {
      enumerable: !0,
      get: function() {
        return _index143.default;
      }
    });
    Object.defineProperty(exports2, "isWednesday", {
      enumerable: !0,
      get: function() {
        return _index144.default;
      }
    });
    Object.defineProperty(exports2, "isWeekend", {
      enumerable: !0,
      get: function() {
        return _index145.default;
      }
    });
    Object.defineProperty(exports2, "isWithinInterval", {
      enumerable: !0,
      get: function() {
        return _index146.default;
      }
    });
    Object.defineProperty(exports2, "isYesterday", {
      enumerable: !0,
      get: function() {
        return _index147.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfDecade", {
      enumerable: !0,
      get: function() {
        return _index148.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfISOWeek", {
      enumerable: !0,
      get: function() {
        return _index149.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfISOWeekYear", {
      enumerable: !0,
      get: function() {
        return _index150.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfMonth", {
      enumerable: !0,
      get: function() {
        return _index151.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfQuarter", {
      enumerable: !0,
      get: function() {
        return _index152.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfWeek", {
      enumerable: !0,
      get: function() {
        return _index153.default;
      }
    });
    Object.defineProperty(exports2, "lastDayOfYear", {
      enumerable: !0,
      get: function() {
        return _index154.default;
      }
    });
    Object.defineProperty(exports2, "lightFormat", {
      enumerable: !0,
      get: function() {
        return _index155.default;
      }
    });
    Object.defineProperty(exports2, "max", {
      enumerable: !0,
      get: function() {
        return _index156.default;
      }
    });
    Object.defineProperty(exports2, "milliseconds", {
      enumerable: !0,
      get: function() {
        return _index157.default;
      }
    });
    Object.defineProperty(exports2, "millisecondsToHours", {
      enumerable: !0,
      get: function() {
        return _index158.default;
      }
    });
    Object.defineProperty(exports2, "millisecondsToMinutes", {
      enumerable: !0,
      get: function() {
        return _index159.default;
      }
    });
    Object.defineProperty(exports2, "millisecondsToSeconds", {
      enumerable: !0,
      get: function() {
        return _index160.default;
      }
    });
    Object.defineProperty(exports2, "min", {
      enumerable: !0,
      get: function() {
        return _index161.default;
      }
    });
    Object.defineProperty(exports2, "minutesToHours", {
      enumerable: !0,
      get: function() {
        return _index162.default;
      }
    });
    Object.defineProperty(exports2, "minutesToMilliseconds", {
      enumerable: !0,
      get: function() {
        return _index163.default;
      }
    });
    Object.defineProperty(exports2, "minutesToSeconds", {
      enumerable: !0,
      get: function() {
        return _index164.default;
      }
    });
    Object.defineProperty(exports2, "monthsToQuarters", {
      enumerable: !0,
      get: function() {
        return _index165.default;
      }
    });
    Object.defineProperty(exports2, "monthsToYears", {
      enumerable: !0,
      get: function() {
        return _index166.default;
      }
    });
    Object.defineProperty(exports2, "nextDay", {
      enumerable: !0,
      get: function() {
        return _index167.default;
      }
    });
    Object.defineProperty(exports2, "nextFriday", {
      enumerable: !0,
      get: function() {
        return _index168.default;
      }
    });
    Object.defineProperty(exports2, "nextMonday", {
      enumerable: !0,
      get: function() {
        return _index169.default;
      }
    });
    Object.defineProperty(exports2, "nextSaturday", {
      enumerable: !0,
      get: function() {
        return _index170.default;
      }
    });
    Object.defineProperty(exports2, "nextSunday", {
      enumerable: !0,
      get: function() {
        return _index171.default;
      }
    });
    Object.defineProperty(exports2, "nextThursday", {
      enumerable: !0,
      get: function() {
        return _index172.default;
      }
    });
    Object.defineProperty(exports2, "nextTuesday", {
      enumerable: !0,
      get: function() {
        return _index173.default;
      }
    });
    Object.defineProperty(exports2, "nextWednesday", {
      enumerable: !0,
      get: function() {
        return _index174.default;
      }
    });
    Object.defineProperty(exports2, "parse", {
      enumerable: !0,
      get: function() {
        return _index175.default;
      }
    });
    Object.defineProperty(exports2, "parseISO", {
      enumerable: !0,
      get: function() {
        return _index176.default;
      }
    });
    Object.defineProperty(exports2, "parseJSON", {
      enumerable: !0,
      get: function() {
        return _index177.default;
      }
    });
    Object.defineProperty(exports2, "previousDay", {
      enumerable: !0,
      get: function() {
        return _index178.default;
      }
    });
    Object.defineProperty(exports2, "previousFriday", {
      enumerable: !0,
      get: function() {
        return _index179.default;
      }
    });
    Object.defineProperty(exports2, "previousMonday", {
      enumerable: !0,
      get: function() {
        return _index180.default;
      }
    });
    Object.defineProperty(exports2, "previousSaturday", {
      enumerable: !0,
      get: function() {
        return _index181.default;
      }
    });
    Object.defineProperty(exports2, "previousSunday", {
      enumerable: !0,
      get: function() {
        return _index182.default;
      }
    });
    Object.defineProperty(exports2, "previousThursday", {
      enumerable: !0,
      get: function() {
        return _index183.default;
      }
    });
    Object.defineProperty(exports2, "previousTuesday", {
      enumerable: !0,
      get: function() {
        return _index184.default;
      }
    });
    Object.defineProperty(exports2, "previousWednesday", {
      enumerable: !0,
      get: function() {
        return _index185.default;
      }
    });
    Object.defineProperty(exports2, "quartersToMonths", {
      enumerable: !0,
      get: function() {
        return _index186.default;
      }
    });
    Object.defineProperty(exports2, "quartersToYears", {
      enumerable: !0,
      get: function() {
        return _index187.default;
      }
    });
    Object.defineProperty(exports2, "roundToNearestMinutes", {
      enumerable: !0,
      get: function() {
        return _index188.default;
      }
    });
    Object.defineProperty(exports2, "secondsToHours", {
      enumerable: !0,
      get: function() {
        return _index189.default;
      }
    });
    Object.defineProperty(exports2, "secondsToMilliseconds", {
      enumerable: !0,
      get: function() {
        return _index190.default;
      }
    });
    Object.defineProperty(exports2, "secondsToMinutes", {
      enumerable: !0,
      get: function() {
        return _index191.default;
      }
    });
    Object.defineProperty(exports2, "set", {
      enumerable: !0,
      get: function() {
        return _index192.default;
      }
    });
    Object.defineProperty(exports2, "setDate", {
      enumerable: !0,
      get: function() {
        return _index193.default;
      }
    });
    Object.defineProperty(exports2, "setDay", {
      enumerable: !0,
      get: function() {
        return _index194.default;
      }
    });
    Object.defineProperty(exports2, "setDayOfYear", {
      enumerable: !0,
      get: function() {
        return _index195.default;
      }
    });
    Object.defineProperty(exports2, "setDefaultOptions", {
      enumerable: !0,
      get: function() {
        return _index196.default;
      }
    });
    Object.defineProperty(exports2, "setHours", {
      enumerable: !0,
      get: function() {
        return _index197.default;
      }
    });
    Object.defineProperty(exports2, "setISODay", {
      enumerable: !0,
      get: function() {
        return _index198.default;
      }
    });
    Object.defineProperty(exports2, "setISOWeek", {
      enumerable: !0,
      get: function() {
        return _index199.default;
      }
    });
    Object.defineProperty(exports2, "setISOWeekYear", {
      enumerable: !0,
      get: function() {
        return _index200.default;
      }
    });
    Object.defineProperty(exports2, "setMilliseconds", {
      enumerable: !0,
      get: function() {
        return _index201.default;
      }
    });
    Object.defineProperty(exports2, "setMinutes", {
      enumerable: !0,
      get: function() {
        return _index202.default;
      }
    });
    Object.defineProperty(exports2, "setMonth", {
      enumerable: !0,
      get: function() {
        return _index203.default;
      }
    });
    Object.defineProperty(exports2, "setQuarter", {
      enumerable: !0,
      get: function() {
        return _index204.default;
      }
    });
    Object.defineProperty(exports2, "setSeconds", {
      enumerable: !0,
      get: function() {
        return _index205.default;
      }
    });
    Object.defineProperty(exports2, "setWeek", {
      enumerable: !0,
      get: function() {
        return _index206.default;
      }
    });
    Object.defineProperty(exports2, "setWeekYear", {
      enumerable: !0,
      get: function() {
        return _index207.default;
      }
    });
    Object.defineProperty(exports2, "setYear", {
      enumerable: !0,
      get: function() {
        return _index208.default;
      }
    });
    Object.defineProperty(exports2, "startOfDay", {
      enumerable: !0,
      get: function() {
        return _index209.default;
      }
    });
    Object.defineProperty(exports2, "startOfDecade", {
      enumerable: !0,
      get: function() {
        return _index210.default;
      }
    });
    Object.defineProperty(exports2, "startOfHour", {
      enumerable: !0,
      get: function() {
        return _index211.default;
      }
    });
    Object.defineProperty(exports2, "startOfISOWeek", {
      enumerable: !0,
      get: function() {
        return _index212.default;
      }
    });
    Object.defineProperty(exports2, "startOfISOWeekYear", {
      enumerable: !0,
      get: function() {
        return _index213.default;
      }
    });
    Object.defineProperty(exports2, "startOfMinute", {
      enumerable: !0,
      get: function() {
        return _index214.default;
      }
    });
    Object.defineProperty(exports2, "startOfMonth", {
      enumerable: !0,
      get: function() {
        return _index215.default;
      }
    });
    Object.defineProperty(exports2, "startOfQuarter", {
      enumerable: !0,
      get: function() {
        return _index216.default;
      }
    });
    Object.defineProperty(exports2, "startOfSecond", {
      enumerable: !0,
      get: function() {
        return _index217.default;
      }
    });
    Object.defineProperty(exports2, "startOfToday", {
      enumerable: !0,
      get: function() {
        return _index218.default;
      }
    });
    Object.defineProperty(exports2, "startOfTomorrow", {
      enumerable: !0,
      get: function() {
        return _index219.default;
      }
    });
    Object.defineProperty(exports2, "startOfWeek", {
      enumerable: !0,
      get: function() {
        return _index220.default;
      }
    });
    Object.defineProperty(exports2, "startOfWeekYear", {
      enumerable: !0,
      get: function() {
        return _index221.default;
      }
    });
    Object.defineProperty(exports2, "startOfYear", {
      enumerable: !0,
      get: function() {
        return _index222.default;
      }
    });
    Object.defineProperty(exports2, "startOfYesterday", {
      enumerable: !0,
      get: function() {
        return _index223.default;
      }
    });
    Object.defineProperty(exports2, "sub", {
      enumerable: !0,
      get: function() {
        return _index224.default;
      }
    });
    Object.defineProperty(exports2, "subBusinessDays", {
      enumerable: !0,
      get: function() {
        return _index225.default;
      }
    });
    Object.defineProperty(exports2, "subDays", {
      enumerable: !0,
      get: function() {
        return _index226.default;
      }
    });
    Object.defineProperty(exports2, "subHours", {
      enumerable: !0,
      get: function() {
        return _index227.default;
      }
    });
    Object.defineProperty(exports2, "subISOWeekYears", {
      enumerable: !0,
      get: function() {
        return _index228.default;
      }
    });
    Object.defineProperty(exports2, "subMilliseconds", {
      enumerable: !0,
      get: function() {
        return _index229.default;
      }
    });
    Object.defineProperty(exports2, "subMinutes", {
      enumerable: !0,
      get: function() {
        return _index230.default;
      }
    });
    Object.defineProperty(exports2, "subMonths", {
      enumerable: !0,
      get: function() {
        return _index231.default;
      }
    });
    Object.defineProperty(exports2, "subQuarters", {
      enumerable: !0,
      get: function() {
        return _index232.default;
      }
    });
    Object.defineProperty(exports2, "subSeconds", {
      enumerable: !0,
      get: function() {
        return _index233.default;
      }
    });
    Object.defineProperty(exports2, "subWeeks", {
      enumerable: !0,
      get: function() {
        return _index234.default;
      }
    });
    Object.defineProperty(exports2, "subYears", {
      enumerable: !0,
      get: function() {
        return _index235.default;
      }
    });
    Object.defineProperty(exports2, "toDate", {
      enumerable: !0,
      get: function() {
        return _index236.default;
      }
    });
    Object.defineProperty(exports2, "weeksToDays", {
      enumerable: !0,
      get: function() {
        return _index237.default;
      }
    });
    Object.defineProperty(exports2, "yearsToMonths", {
      enumerable: !0,
      get: function() {
        return _index238.default;
      }
    });
    Object.defineProperty(exports2, "yearsToQuarters", {
      enumerable: !0,
      get: function() {
        return _index239.default;
      }
    });
    var _index = _interopRequireDefault(require_add()), _index2 = _interopRequireDefault(require_addBusinessDays()), _index3 = _interopRequireDefault(require_addDays()), _index4 = _interopRequireDefault(require_addHours()), _index5 = _interopRequireDefault(require_addISOWeekYears()), _index6 = _interopRequireDefault(require_addMilliseconds()), _index7 = _interopRequireDefault(require_addMinutes()), _index8 = _interopRequireDefault(require_addMonths()), _index9 = _interopRequireDefault(require_addQuarters()), _index10 = _interopRequireDefault(require_addSeconds()), _index11 = _interopRequireDefault(require_addWeeks()), _index12 = _interopRequireDefault(require_addYears()), _index13 = _interopRequireDefault(require_areIntervalsOverlapping()), _index14 = _interopRequireDefault(require_clamp()), _index15 = _interopRequireDefault(require_closestIndexTo()), _index16 = _interopRequireDefault(require_closestTo()), _index17 = _interopRequireDefault(require_compareAsc()), _index18 = _interopRequireDefault(require_compareDesc()), _index19 = _interopRequireDefault(require_daysToWeeks()), _index20 = _interopRequireDefault(require_differenceInBusinessDays()), _index21 = _interopRequireDefault(require_differenceInCalendarDays()), _index22 = _interopRequireDefault(require_differenceInCalendarISOWeekYears()), _index23 = _interopRequireDefault(require_differenceInCalendarISOWeeks()), _index24 = _interopRequireDefault(require_differenceInCalendarMonths()), _index25 = _interopRequireDefault(require_differenceInCalendarQuarters()), _index26 = _interopRequireDefault(require_differenceInCalendarWeeks()), _index27 = _interopRequireDefault(require_differenceInCalendarYears()), _index28 = _interopRequireDefault(require_differenceInDays()), _index29 = _interopRequireDefault(require_differenceInHours()), _index30 = _interopRequireDefault(require_differenceInISOWeekYears()), _index31 = _interopRequireDefault(require_differenceInMilliseconds()), _index32 = _interopRequireDefault(require_differenceInMinutes()), _index33 = _interopRequireDefault(require_differenceInMonths()), _index34 = _interopRequireDefault(require_differenceInQuarters()), _index35 = _interopRequireDefault(require_differenceInSeconds()), _index36 = _interopRequireDefault(require_differenceInWeeks()), _index37 = _interopRequireDefault(require_differenceInYears()), _index38 = _interopRequireDefault(require_eachDayOfInterval()), _index39 = _interopRequireDefault(require_eachHourOfInterval()), _index40 = _interopRequireDefault(require_eachMinuteOfInterval()), _index41 = _interopRequireDefault(require_eachMonthOfInterval()), _index42 = _interopRequireDefault(require_eachQuarterOfInterval()), _index43 = _interopRequireDefault(require_eachWeekOfInterval()), _index44 = _interopRequireDefault(require_eachWeekendOfInterval()), _index45 = _interopRequireDefault(require_eachWeekendOfMonth()), _index46 = _interopRequireDefault(require_eachWeekendOfYear()), _index47 = _interopRequireDefault(require_eachYearOfInterval()), _index48 = _interopRequireDefault(require_endOfDay()), _index49 = _interopRequireDefault(require_endOfDecade()), _index50 = _interopRequireDefault(require_endOfHour()), _index51 = _interopRequireDefault(require_endOfISOWeek()), _index52 = _interopRequireDefault(require_endOfISOWeekYear()), _index53 = _interopRequireDefault(require_endOfMinute()), _index54 = _interopRequireDefault(require_endOfMonth()), _index55 = _interopRequireDefault(require_endOfQuarter()), _index56 = _interopRequireDefault(require_endOfSecond()), _index57 = _interopRequireDefault(require_endOfToday()), _index58 = _interopRequireDefault(require_endOfTomorrow()), _index59 = _interopRequireDefault(require_endOfWeek()), _index60 = _interopRequireDefault(require_endOfYear()), _index61 = _interopRequireDefault(require_endOfYesterday()), _index62 = _interopRequireDefault(require_format()), _index63 = _interopRequireDefault(require_formatDistance2()), _index64 = _interopRequireDefault(require_formatDistanceStrict()), _index65 = _interopRequireDefault(require_formatDistanceToNow()), _index66 = _interopRequireDefault(require_formatDistanceToNowStrict()), _index67 = _interopRequireDefault(require_formatDuration()), _index68 = _interopRequireDefault(require_formatISO()), _index69 = _interopRequireDefault(require_formatISO9075()), _index70 = _interopRequireDefault(require_formatISODuration()), _index71 = _interopRequireDefault(require_formatRFC3339()), _index72 = _interopRequireDefault(require_formatRFC7231()), _index73 = _interopRequireDefault(require_formatRelative2()), _index74 = _interopRequireDefault(require_fromUnixTime()), _index75 = _interopRequireDefault(require_getDate()), _index76 = _interopRequireDefault(require_getDay()), _index77 = _interopRequireDefault(require_getDayOfYear()), _index78 = _interopRequireDefault(require_getDaysInMonth()), _index79 = _interopRequireDefault(require_getDaysInYear()), _index80 = _interopRequireDefault(require_getDecade()), _index81 = _interopRequireDefault(require_getDefaultOptions()), _index82 = _interopRequireDefault(require_getHours()), _index83 = _interopRequireDefault(require_getISODay()), _index84 = _interopRequireDefault(require_getISOWeek()), _index85 = _interopRequireDefault(require_getISOWeekYear()), _index86 = _interopRequireDefault(require_getISOWeeksInYear()), _index87 = _interopRequireDefault(require_getMilliseconds()), _index88 = _interopRequireDefault(require_getMinutes()), _index89 = _interopRequireDefault(require_getMonth()), _index90 = _interopRequireDefault(require_getOverlappingDaysInIntervals()), _index91 = _interopRequireDefault(require_getQuarter()), _index92 = _interopRequireDefault(require_getSeconds()), _index93 = _interopRequireDefault(require_getTime()), _index94 = _interopRequireDefault(require_getUnixTime()), _index95 = _interopRequireDefault(require_getWeek()), _index96 = _interopRequireDefault(require_getWeekOfMonth()), _index97 = _interopRequireDefault(require_getWeekYear()), _index98 = _interopRequireDefault(require_getWeeksInMonth()), _index99 = _interopRequireDefault(require_getYear()), _index100 = _interopRequireDefault(require_hoursToMilliseconds()), _index101 = _interopRequireDefault(require_hoursToMinutes()), _index102 = _interopRequireDefault(require_hoursToSeconds()), _index103 = _interopRequireDefault(require_intervalToDuration()), _index104 = _interopRequireDefault(require_intlFormat()), _index105 = _interopRequireDefault(require_intlFormatDistance()), _index106 = _interopRequireDefault(require_isAfter()), _index107 = _interopRequireDefault(require_isBefore()), _index108 = _interopRequireDefault(require_isDate()), _index109 = _interopRequireDefault(require_isEqual()), _index110 = _interopRequireDefault(require_isExists()), _index111 = _interopRequireDefault(require_isFirstDayOfMonth()), _index112 = _interopRequireDefault(require_isFriday()), _index113 = _interopRequireDefault(require_isFuture()), _index114 = _interopRequireDefault(require_isLastDayOfMonth()), _index115 = _interopRequireDefault(require_isLeapYear()), _index116 = _interopRequireDefault(require_isMatch()), _index117 = _interopRequireDefault(require_isMonday()), _index118 = _interopRequireDefault(require_isPast()), _index119 = _interopRequireDefault(require_isSameDay()), _index120 = _interopRequireDefault(require_isSameHour()), _index121 = _interopRequireDefault(require_isSameISOWeek()), _index122 = _interopRequireDefault(require_isSameISOWeekYear()), _index123 = _interopRequireDefault(require_isSameMinute()), _index124 = _interopRequireDefault(require_isSameMonth()), _index125 = _interopRequireDefault(require_isSameQuarter()), _index126 = _interopRequireDefault(require_isSameSecond()), _index127 = _interopRequireDefault(require_isSameWeek()), _index128 = _interopRequireDefault(require_isSameYear()), _index129 = _interopRequireDefault(require_isSaturday()), _index130 = _interopRequireDefault(require_isSunday()), _index131 = _interopRequireDefault(require_isThisHour()), _index132 = _interopRequireDefault(require_isThisISOWeek()), _index133 = _interopRequireDefault(require_isThisMinute()), _index134 = _interopRequireDefault(require_isThisMonth()), _index135 = _interopRequireDefault(require_isThisQuarter()), _index136 = _interopRequireDefault(require_isThisSecond()), _index137 = _interopRequireDefault(require_isThisWeek()), _index138 = _interopRequireDefault(require_isThisYear()), _index139 = _interopRequireDefault(require_isThursday()), _index140 = _interopRequireDefault(require_isToday()), _index141 = _interopRequireDefault(require_isTomorrow()), _index142 = _interopRequireDefault(require_isTuesday()), _index143 = _interopRequireDefault(require_isValid()), _index144 = _interopRequireDefault(require_isWednesday()), _index145 = _interopRequireDefault(require_isWeekend()), _index146 = _interopRequireDefault(require_isWithinInterval()), _index147 = _interopRequireDefault(require_isYesterday()), _index148 = _interopRequireDefault(require_lastDayOfDecade()), _index149 = _interopRequireDefault(require_lastDayOfISOWeek()), _index150 = _interopRequireDefault(require_lastDayOfISOWeekYear()), _index151 = _interopRequireDefault(require_lastDayOfMonth()), _index152 = _interopRequireDefault(require_lastDayOfQuarter()), _index153 = _interopRequireDefault(require_lastDayOfWeek()), _index154 = _interopRequireDefault(require_lastDayOfYear()), _index155 = _interopRequireDefault(require_lightFormat()), _index156 = _interopRequireDefault(require_max()), _index157 = _interopRequireDefault(require_milliseconds()), _index158 = _interopRequireDefault(require_millisecondsToHours()), _index159 = _interopRequireDefault(require_millisecondsToMinutes()), _index160 = _interopRequireDefault(require_millisecondsToSeconds()), _index161 = _interopRequireDefault(require_min()), _index162 = _interopRequireDefault(require_minutesToHours()), _index163 = _interopRequireDefault(require_minutesToMilliseconds()), _index164 = _interopRequireDefault(require_minutesToSeconds()), _index165 = _interopRequireDefault(require_monthsToQuarters()), _index166 = _interopRequireDefault(require_monthsToYears()), _index167 = _interopRequireDefault(require_nextDay()), _index168 = _interopRequireDefault(require_nextFriday()), _index169 = _interopRequireDefault(require_nextMonday()), _index170 = _interopRequireDefault(require_nextSaturday()), _index171 = _interopRequireDefault(require_nextSunday()), _index172 = _interopRequireDefault(require_nextThursday()), _index173 = _interopRequireDefault(require_nextTuesday()), _index174 = _interopRequireDefault(require_nextWednesday()), _index175 = _interopRequireDefault(require_parse()), _index176 = _interopRequireDefault(require_parseISO()), _index177 = _interopRequireDefault(require_parseJSON()), _index178 = _interopRequireDefault(require_previousDay()), _index179 = _interopRequireDefault(require_previousFriday()), _index180 = _interopRequireDefault(require_previousMonday()), _index181 = _interopRequireDefault(require_previousSaturday()), _index182 = _interopRequireDefault(require_previousSunday()), _index183 = _interopRequireDefault(require_previousThursday()), _index184 = _interopRequireDefault(require_previousTuesday()), _index185 = _interopRequireDefault(require_previousWednesday()), _index186 = _interopRequireDefault(require_quartersToMonths()), _index187 = _interopRequireDefault(require_quartersToYears()), _index188 = _interopRequireDefault(require_roundToNearestMinutes()), _index189 = _interopRequireDefault(require_secondsToHours()), _index190 = _interopRequireDefault(require_secondsToMilliseconds()), _index191 = _interopRequireDefault(require_secondsToMinutes()), _index192 = _interopRequireDefault(require_set()), _index193 = _interopRequireDefault(require_setDate()), _index194 = _interopRequireDefault(require_setDay()), _index195 = _interopRequireDefault(require_setDayOfYear()), _index196 = _interopRequireDefault(require_setDefaultOptions()), _index197 = _interopRequireDefault(require_setHours()), _index198 = _interopRequireDefault(require_setISODay()), _index199 = _interopRequireDefault(require_setISOWeek()), _index200 = _interopRequireDefault(require_setISOWeekYear()), _index201 = _interopRequireDefault(require_setMilliseconds()), _index202 = _interopRequireDefault(require_setMinutes()), _index203 = _interopRequireDefault(require_setMonth()), _index204 = _interopRequireDefault(require_setQuarter()), _index205 = _interopRequireDefault(require_setSeconds()), _index206 = _interopRequireDefault(require_setWeek()), _index207 = _interopRequireDefault(require_setWeekYear()), _index208 = _interopRequireDefault(require_setYear()), _index209 = _interopRequireDefault(require_startOfDay()), _index210 = _interopRequireDefault(require_startOfDecade()), _index211 = _interopRequireDefault(require_startOfHour()), _index212 = _interopRequireDefault(require_startOfISOWeek()), _index213 = _interopRequireDefault(require_startOfISOWeekYear()), _index214 = _interopRequireDefault(require_startOfMinute()), _index215 = _interopRequireDefault(require_startOfMonth()), _index216 = _interopRequireDefault(require_startOfQuarter()), _index217 = _interopRequireDefault(require_startOfSecond()), _index218 = _interopRequireDefault(require_startOfToday()), _index219 = _interopRequireDefault(require_startOfTomorrow()), _index220 = _interopRequireDefault(require_startOfWeek()), _index221 = _interopRequireDefault(require_startOfWeekYear()), _index222 = _interopRequireDefault(require_startOfYear()), _index223 = _interopRequireDefault(require_startOfYesterday()), _index224 = _interopRequireDefault(require_sub()), _index225 = _interopRequireDefault(require_subBusinessDays()), _index226 = _interopRequireDefault(require_subDays()), _index227 = _interopRequireDefault(require_subHours()), _index228 = _interopRequireDefault(require_subISOWeekYears()), _index229 = _interopRequireDefault(require_subMilliseconds()), _index230 = _interopRequireDefault(require_subMinutes()), _index231 = _interopRequireDefault(require_subMonths()), _index232 = _interopRequireDefault(require_subQuarters()), _index233 = _interopRequireDefault(require_subSeconds()), _index234 = _interopRequireDefault(require_subWeeks()), _index235 = _interopRequireDefault(require_subYears()), _index236 = _interopRequireDefault(require_toDate()), _index237 = _interopRequireDefault(require_weeksToDays()), _index238 = _interopRequireDefault(require_yearsToMonths()), _index239 = _interopRequireDefault(require_yearsToQuarters()), _index240 = require_constants();
    Object.keys(_index240).forEach(function(key2) {
      key2 === "default" || key2 === "__esModule" || Object.prototype.hasOwnProperty.call(_exportNames, key2) || key2 in exports2 && exports2[key2] === _index240[key2] || Object.defineProperty(exports2, key2, {
        enumerable: !0,
        get: function() {
          return _index240[key2];
        }
      });
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/kind-of/index.js
var require_kind_of = __commonJS({
  "node_modules/kind-of/index.js"(exports2, module2) {
    var toString2 = Object.prototype.toString;
    module2.exports = function(val) {
      if (val === void 0)
        return "undefined";
      if (val === null)
        return "null";
      var type = typeof val;
      if (type === "boolean")
        return "boolean";
      if (type === "string")
        return "string";
      if (type === "number")
        return "number";
      if (type === "symbol")
        return "symbol";
      if (type === "function")
        return isGeneratorFn(val) ? "generatorfunction" : "function";
      if (isArray(val))
        return "array";
      if (isBuffer2(val))
        return "buffer";
      if (isArguments(val))
        return "arguments";
      if (isDate(val))
        return "date";
      if (isError(val))
        return "error";
      if (isRegexp(val))
        return "regexp";
      switch (ctorName(val)) {
        case "Symbol":
          return "symbol";
        case "Promise":
          return "promise";
        case "WeakMap":
          return "weakmap";
        case "WeakSet":
          return "weakset";
        case "Map":
          return "map";
        case "Set":
          return "set";
        case "Int8Array":
          return "int8array";
        case "Uint8Array":
          return "uint8array";
        case "Uint8ClampedArray":
          return "uint8clampedarray";
        case "Int16Array":
          return "int16array";
        case "Uint16Array":
          return "uint16array";
        case "Int32Array":
          return "int32array";
        case "Uint32Array":
          return "uint32array";
        case "Float32Array":
          return "float32array";
        case "Float64Array":
          return "float64array";
      }
      if (isGeneratorObj(val))
        return "generator";
      switch (type = toString2.call(val), type) {
        case "[object Object]":
          return "object";
        case "[object Map Iterator]":
          return "mapiterator";
        case "[object Set Iterator]":
          return "setiterator";
        case "[object String Iterator]":
          return "stringiterator";
        case "[object Array Iterator]":
          return "arrayiterator";
      }
      return type.slice(8, -1).toLowerCase().replace(/\s/g, "");
    };
    function ctorName(val) {
      return typeof val.constructor == "function" ? val.constructor.name : null;
    }
    function isArray(val) {
      return Array.isArray ? Array.isArray(val) : val instanceof Array;
    }
    function isError(val) {
      return val instanceof Error || typeof val.message == "string" && val.constructor && typeof val.constructor.stackTraceLimit == "number";
    }
    function isDate(val) {
      return val instanceof Date ? !0 : typeof val.toDateString == "function" && typeof val.getDate == "function" && typeof val.setDate == "function";
    }
    function isRegexp(val) {
      return val instanceof RegExp ? !0 : typeof val.flags == "string" && typeof val.ignoreCase == "boolean" && typeof val.multiline == "boolean" && typeof val.global == "boolean";
    }
    function isGeneratorFn(name, val) {
      return ctorName(name) === "GeneratorFunction";
    }
    function isGeneratorObj(val) {
      return typeof val.throw == "function" && typeof val.return == "function" && typeof val.next == "function";
    }
    function isArguments(val) {
      try {
        if (typeof val.length == "number" && typeof val.callee == "function")
          return !0;
      } catch (err) {
        if (err.message.indexOf("callee") !== -1)
          return !0;
      }
      return !1;
    }
    function isBuffer2(val) {
      return val.constructor && typeof val.constructor.isBuffer == "function" ? val.constructor.isBuffer(val) : !1;
    }
  }
});

// node_modules/is-extendable/index.js
var require_is_extendable = __commonJS({
  "node_modules/is-extendable/index.js"(exports2, module2) {
    "use strict";
    module2.exports = function(val) {
      return typeof val < "u" && val !== null && (typeof val == "object" || typeof val == "function");
    };
  }
});

// node_modules/extend-shallow/index.js
var require_extend_shallow = __commonJS({
  "node_modules/extend-shallow/index.js"(exports2, module2) {
    "use strict";
    var isObject = require_is_extendable();
    module2.exports = function(o) {
      isObject(o) || (o = {});
      for (var len = arguments.length, i = 1; i < len; i++) {
        var obj = arguments[i];
        isObject(obj) && assign(o, obj);
      }
      return o;
    };
    function assign(a, b) {
      for (var key2 in b)
        hasOwn(b, key2) && (a[key2] = b[key2]);
    }
    function hasOwn(obj, key2) {
      return Object.prototype.hasOwnProperty.call(obj, key2);
    }
  }
});

// node_modules/section-matter/index.js
var require_section_matter = __commonJS({
  "node_modules/section-matter/index.js"(exports2, module2) {
    "use strict";
    var typeOf = require_kind_of(), extend3 = require_extend_shallow();
    module2.exports = function(input, options2) {
      typeof options2 == "function" && (options2 = { parse: options2 });
      var file = toObject(input), defaults = { section_delimiter: "---", parse: identity }, opts = extend3({}, defaults, options2), delim = opts.section_delimiter, lines = file.content.split(/\r?\n/), sections = null, section = createSection(), content3 = [], stack = [];
      function initSections(val) {
        file.content = val, sections = [], content3 = [];
      }
      function closeSection(val) {
        stack.length && (section.key = getKey(stack[0], delim), section.content = val, opts.parse(section, sections), sections.push(section), section = createSection(), content3 = [], stack = []);
      }
      for (var i = 0; i < lines.length; i++) {
        var line = lines[i], len = stack.length, ln = line.trim();
        if (isDelimiter(ln, delim)) {
          if (ln.length === 3 && i !== 0) {
            if (len === 0 || len === 2) {
              content3.push(line);
              continue;
            }
            stack.push(ln), section.data = content3.join(`
`), content3 = [];
            continue;
          }
          sections === null && initSections(content3.join(`
`)), len === 2 && closeSection(content3.join(`
`)), stack.push(ln);
          continue;
        }
        content3.push(line);
      }
      return sections === null ? initSections(content3.join(`
`)) : closeSection(content3.join(`
`)), file.sections = sections, file;
    };
    function isDelimiter(line, delim) {
      return !(line.slice(0, delim.length) !== delim || line.charAt(delim.length + 1) === delim.slice(-1));
    }
    function toObject(input) {
      if (typeOf(input) !== "object" && (input = { content: input }), typeof input.content != "string" && !isBuffer2(input.content))
        throw new TypeError("expected a buffer or string");
      return input.content = input.content.toString(), input.sections = [], input;
    }
    function getKey(val, delim) {
      return val ? val.slice(delim.length).trim() : "";
    }
    function createSection() {
      return { key: "", data: "", content: "" };
    }
    function identity(val) {
      return val;
    }
    function isBuffer2(val) {
      return val && val.constructor && typeof val.constructor.isBuffer == "function" ? val.constructor.isBuffer(val) : !1;
    }
  }
});

// node_modules/js-yaml/lib/js-yaml/common.js
var require_common = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/common.js"(exports2, module2) {
    "use strict";
    function isNothing(subject) {
      return typeof subject > "u" || subject === null;
    }
    function isObject(subject) {
      return typeof subject == "object" && subject !== null;
    }
    function toArray(sequence) {
      return Array.isArray(sequence) ? sequence : isNothing(sequence) ? [] : [sequence];
    }
    function extend3(target, source) {
      var index2, length, key2, sourceKeys;
      if (source)
        for (sourceKeys = Object.keys(source), index2 = 0, length = sourceKeys.length; index2 < length; index2 += 1)
          key2 = sourceKeys[index2], target[key2] = source[key2];
      return target;
    }
    function repeat(string3, count) {
      var result = "", cycle;
      for (cycle = 0; cycle < count; cycle += 1)
        result += string3;
      return result;
    }
    function isNegativeZero(number2) {
      return number2 === 0 && Number.NEGATIVE_INFINITY === 1 / number2;
    }
    module2.exports.isNothing = isNothing;
    module2.exports.isObject = isObject;
    module2.exports.toArray = toArray;
    module2.exports.repeat = repeat;
    module2.exports.isNegativeZero = isNegativeZero;
    module2.exports.extend = extend3;
  }
});

// node_modules/js-yaml/lib/js-yaml/exception.js
var require_exception = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/exception.js"(exports2, module2) {
    "use strict";
    function YAMLException(reason, mark2) {
      Error.call(this), this.name = "YAMLException", this.reason = reason, this.mark = mark2, this.message = (this.reason || "(unknown reason)") + (this.mark ? " " + this.mark.toString() : ""), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack || "";
    }
    YAMLException.prototype = Object.create(Error.prototype);
    YAMLException.prototype.constructor = YAMLException;
    YAMLException.prototype.toString = function(compact) {
      var result = this.name + ": ";
      return result += this.reason || "(unknown reason)", !compact && this.mark && (result += " " + this.mark.toString()), result;
    };
    module2.exports = YAMLException;
  }
});

// node_modules/js-yaml/lib/js-yaml/mark.js
var require_mark = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/mark.js"(exports2, module2) {
    "use strict";
    var common = require_common();
    function Mark(name, buffer2, position4, line, column) {
      this.name = name, this.buffer = buffer2, this.position = position4, this.line = line, this.column = column;
    }
    Mark.prototype.getSnippet = function(indent2, maxLength) {
      var head2, start, tail, end, snippet;
      if (!this.buffer)
        return null;
      for (indent2 = indent2 || 4, maxLength = maxLength || 75, head2 = "", start = this.position; start > 0 && `\0\r
\x85\u2028\u2029`.indexOf(this.buffer.charAt(start - 1)) === -1; )
        if (start -= 1, this.position - start > maxLength / 2 - 1) {
          head2 = " ... ", start += 5;
          break;
        }
      for (tail = "", end = this.position; end < this.buffer.length && `\0\r
\x85\u2028\u2029`.indexOf(this.buffer.charAt(end)) === -1; )
        if (end += 1, end - this.position > maxLength / 2 - 1) {
          tail = " ... ", end -= 5;
          break;
        }
      return snippet = this.buffer.slice(start, end), common.repeat(" ", indent2) + head2 + snippet + tail + `
` + common.repeat(" ", indent2 + this.position - start + head2.length) + "^";
    };
    Mark.prototype.toString = function(compact) {
      var snippet, where = "";
      return this.name && (where += 'in "' + this.name + '" '), where += "at line " + (this.line + 1) + ", column " + (this.column + 1), compact || (snippet = this.getSnippet(), snippet && (where += `:
` + snippet)), where;
    };
    module2.exports = Mark;
  }
});

// node_modules/js-yaml/lib/js-yaml/type.js
var require_type = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type.js"(exports2, module2) {
    "use strict";
    var YAMLException = require_exception(), TYPE_CONSTRUCTOR_OPTIONS = [
      "kind",
      "resolve",
      "construct",
      "instanceOf",
      "predicate",
      "represent",
      "defaultStyle",
      "styleAliases"
    ], YAML_NODE_KINDS = [
      "scalar",
      "sequence",
      "mapping"
    ];
    function compileStyleAliases(map2) {
      var result = {};
      return map2 !== null && Object.keys(map2).forEach(function(style2) {
        map2[style2].forEach(function(alias) {
          result[String(alias)] = style2;
        });
      }), result;
    }
    function Type(tag, options2) {
      if (options2 = options2 || {}, Object.keys(options2).forEach(function(name) {
        if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1)
          throw new YAMLException('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
      }), this.tag = tag, this.kind = options2.kind || null, this.resolve = options2.resolve || function() {
        return !0;
      }, this.construct = options2.construct || function(data) {
        return data;
      }, this.instanceOf = options2.instanceOf || null, this.predicate = options2.predicate || null, this.represent = options2.represent || null, this.defaultStyle = options2.defaultStyle || null, this.styleAliases = compileStyleAliases(options2.styleAliases || null), YAML_NODE_KINDS.indexOf(this.kind) === -1)
        throw new YAMLException('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
    }
    module2.exports = Type;
  }
});

// node_modules/js-yaml/lib/js-yaml/schema.js
var require_schema = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema.js"(exports2, module2) {
    "use strict";
    var common = require_common(), YAMLException = require_exception(), Type = require_type();
    function compileList(schema, name, result) {
      var exclude = [];
      return schema.include.forEach(function(includedSchema) {
        result = compileList(includedSchema, name, result);
      }), schema[name].forEach(function(currentType) {
        result.forEach(function(previousType, previousIndex) {
          previousType.tag === currentType.tag && previousType.kind === currentType.kind && exclude.push(previousIndex);
        }), result.push(currentType);
      }), result.filter(function(type, index2) {
        return exclude.indexOf(index2) === -1;
      });
    }
    function compileMap() {
      var result = {
        scalar: {},
        sequence: {},
        mapping: {},
        fallback: {}
      }, index2, length;
      function collectType(type) {
        result[type.kind][type.tag] = result.fallback[type.tag] = type;
      }
      for (index2 = 0, length = arguments.length; index2 < length; index2 += 1)
        arguments[index2].forEach(collectType);
      return result;
    }
    function Schema2(definition2) {
      this.include = definition2.include || [], this.implicit = definition2.implicit || [], this.explicit = definition2.explicit || [], this.implicit.forEach(function(type) {
        if (type.loadKind && type.loadKind !== "scalar")
          throw new YAMLException("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");
      }), this.compiledImplicit = compileList(this, "implicit", []), this.compiledExplicit = compileList(this, "explicit", []), this.compiledTypeMap = compileMap(this.compiledImplicit, this.compiledExplicit);
    }
    Schema2.DEFAULT = null;
    Schema2.create = function() {
      var schemas, types;
      switch (arguments.length) {
        case 1:
          schemas = Schema2.DEFAULT, types = arguments[0];
          break;
        case 2:
          schemas = arguments[0], types = arguments[1];
          break;
        default:
          throw new YAMLException("Wrong number of arguments for Schema.create function");
      }
      if (schemas = common.toArray(schemas), types = common.toArray(types), !schemas.every(function(schema) {
        return schema instanceof Schema2;
      }))
        throw new YAMLException("Specified list of super schemas (or a single Schema object) contains a non-Schema object.");
      if (!types.every(function(type) {
        return type instanceof Type;
      }))
        throw new YAMLException("Specified list of YAML types (or a single Type object) contains a non-Type object.");
      return new Schema2({
        include: schemas,
        explicit: types
      });
    };
    module2.exports = Schema2;
  }
});

// node_modules/js-yaml/lib/js-yaml/type/str.js
var require_str = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/str.js"(exports2, module2) {
    "use strict";
    var Type = require_type();
    module2.exports = new Type("tag:yaml.org,2002:str", {
      kind: "scalar",
      construct: function(data) {
        return data !== null ? data : "";
      }
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/seq.js
var require_seq = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/seq.js"(exports2, module2) {
    "use strict";
    var Type = require_type();
    module2.exports = new Type("tag:yaml.org,2002:seq", {
      kind: "sequence",
      construct: function(data) {
        return data !== null ? data : [];
      }
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/map.js
var require_map = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/map.js"(exports2, module2) {
    "use strict";
    var Type = require_type();
    module2.exports = new Type("tag:yaml.org,2002:map", {
      kind: "mapping",
      construct: function(data) {
        return data !== null ? data : {};
      }
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/failsafe.js
var require_failsafe = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/failsafe.js"(exports2, module2) {
    "use strict";
    var Schema2 = require_schema();
    module2.exports = new Schema2({
      explicit: [
        require_str(),
        require_seq(),
        require_map()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/null.js
var require_null = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/null.js"(exports2, module2) {
    "use strict";
    var Type = require_type();
    function resolveYamlNull(data) {
      if (data === null)
        return !0;
      var max = data.length;
      return max === 1 && data === "~" || max === 4 && (data === "null" || data === "Null" || data === "NULL");
    }
    function constructYamlNull() {
      return null;
    }
    function isNull(object) {
      return object === null;
    }
    module2.exports = new Type("tag:yaml.org,2002:null", {
      kind: "scalar",
      resolve: resolveYamlNull,
      construct: constructYamlNull,
      predicate: isNull,
      represent: {
        canonical: function() {
          return "~";
        },
        lowercase: function() {
          return "null";
        },
        uppercase: function() {
          return "NULL";
        },
        camelcase: function() {
          return "Null";
        }
      },
      defaultStyle: "lowercase"
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/bool.js
var require_bool = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/bool.js"(exports2, module2) {
    "use strict";
    var Type = require_type();
    function resolveYamlBoolean(data) {
      if (data === null)
        return !1;
      var max = data.length;
      return max === 4 && (data === "true" || data === "True" || data === "TRUE") || max === 5 && (data === "false" || data === "False" || data === "FALSE");
    }
    function constructYamlBoolean(data) {
      return data === "true" || data === "True" || data === "TRUE";
    }
    function isBoolean(object) {
      return Object.prototype.toString.call(object) === "[object Boolean]";
    }
    module2.exports = new Type("tag:yaml.org,2002:bool", {
      kind: "scalar",
      resolve: resolveYamlBoolean,
      construct: constructYamlBoolean,
      predicate: isBoolean,
      represent: {
        lowercase: function(object) {
          return object ? "true" : "false";
        },
        uppercase: function(object) {
          return object ? "TRUE" : "FALSE";
        },
        camelcase: function(object) {
          return object ? "True" : "False";
        }
      },
      defaultStyle: "lowercase"
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/int.js
var require_int = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/int.js"(exports2, module2) {
    "use strict";
    var common = require_common(), Type = require_type();
    function isHexCode(c) {
      return 48 <= c && c <= 57 || 65 <= c && c <= 70 || 97 <= c && c <= 102;
    }
    function isOctCode(c) {
      return 48 <= c && c <= 55;
    }
    function isDecCode(c) {
      return 48 <= c && c <= 57;
    }
    function resolveYamlInteger(data) {
      if (data === null)
        return !1;
      var max = data.length, index2 = 0, hasDigits = !1, ch;
      if (!max)
        return !1;
      if (ch = data[index2], (ch === "-" || ch === "+") && (ch = data[++index2]), ch === "0") {
        if (index2 + 1 === max)
          return !0;
        if (ch = data[++index2], ch === "b") {
          for (index2++; index2 < max; index2++)
            if (ch = data[index2], ch !== "_") {
              if (ch !== "0" && ch !== "1")
                return !1;
              hasDigits = !0;
            }
          return hasDigits && ch !== "_";
        }
        if (ch === "x") {
          for (index2++; index2 < max; index2++)
            if (ch = data[index2], ch !== "_") {
              if (!isHexCode(data.charCodeAt(index2)))
                return !1;
              hasDigits = !0;
            }
          return hasDigits && ch !== "_";
        }
        for (; index2 < max; index2++)
          if (ch = data[index2], ch !== "_") {
            if (!isOctCode(data.charCodeAt(index2)))
              return !1;
            hasDigits = !0;
          }
        return hasDigits && ch !== "_";
      }
      if (ch === "_")
        return !1;
      for (; index2 < max; index2++)
        if (ch = data[index2], ch !== "_") {
          if (ch === ":")
            break;
          if (!isDecCode(data.charCodeAt(index2)))
            return !1;
          hasDigits = !0;
        }
      return !hasDigits || ch === "_" ? !1 : ch !== ":" ? !0 : /^(:[0-5]?[0-9])+$/.test(data.slice(index2));
    }
    function constructYamlInteger(data) {
      var value = data, sign = 1, ch, base3, digits = [];
      return value.indexOf("_") !== -1 && (value = value.replace(/_/g, "")), ch = value[0], (ch === "-" || ch === "+") && (ch === "-" && (sign = -1), value = value.slice(1), ch = value[0]), value === "0" ? 0 : ch === "0" ? value[1] === "b" ? sign * parseInt(value.slice(2), 2) : value[1] === "x" ? sign * parseInt(value, 16) : sign * parseInt(value, 8) : value.indexOf(":") !== -1 ? (value.split(":").forEach(function(v) {
        digits.unshift(parseInt(v, 10));
      }), value = 0, base3 = 1, digits.forEach(function(d) {
        value += d * base3, base3 *= 60;
      }), sign * value) : sign * parseInt(value, 10);
    }
    function isInteger(object) {
      return Object.prototype.toString.call(object) === "[object Number]" && object % 1 === 0 && !common.isNegativeZero(object);
    }
    module2.exports = new Type("tag:yaml.org,2002:int", {
      kind: "scalar",
      resolve: resolveYamlInteger,
      construct: constructYamlInteger,
      predicate: isInteger,
      represent: {
        binary: function(obj) {
          return obj >= 0 ? "0b" + obj.toString(2) : "-0b" + obj.toString(2).slice(1);
        },
        octal: function(obj) {
          return obj >= 0 ? "0" + obj.toString(8) : "-0" + obj.toString(8).slice(1);
        },
        decimal: function(obj) {
          return obj.toString(10);
        },
        hexadecimal: function(obj) {
          return obj >= 0 ? "0x" + obj.toString(16).toUpperCase() : "-0x" + obj.toString(16).toUpperCase().slice(1);
        }
      },
      defaultStyle: "decimal",
      styleAliases: {
        binary: [2, "bin"],
        octal: [8, "oct"],
        decimal: [10, "dec"],
        hexadecimal: [16, "hex"]
      }
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/float.js
var require_float = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/float.js"(exports2, module2) {
    "use strict";
    var common = require_common(), Type = require_type(), YAML_FLOAT_PATTERN = new RegExp(
      "^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$"
    );
    function resolveYamlFloat(data) {
      return !(data === null || !YAML_FLOAT_PATTERN.test(data) || data[data.length - 1] === "_");
    }
    function constructYamlFloat(data) {
      var value, sign, base3, digits;
      return value = data.replace(/_/g, "").toLowerCase(), sign = value[0] === "-" ? -1 : 1, digits = [], "+-".indexOf(value[0]) >= 0 && (value = value.slice(1)), value === ".inf" ? sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : value === ".nan" ? NaN : value.indexOf(":") >= 0 ? (value.split(":").forEach(function(v) {
        digits.unshift(parseFloat(v, 10));
      }), value = 0, base3 = 1, digits.forEach(function(d) {
        value += d * base3, base3 *= 60;
      }), sign * value) : sign * parseFloat(value, 10);
    }
    var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;
    function representYamlFloat(object, style2) {
      var res;
      if (isNaN(object))
        switch (style2) {
          case "lowercase":
            return ".nan";
          case "uppercase":
            return ".NAN";
          case "camelcase":
            return ".NaN";
        }
      else if (Number.POSITIVE_INFINITY === object)
        switch (style2) {
          case "lowercase":
            return ".inf";
          case "uppercase":
            return ".INF";
          case "camelcase":
            return ".Inf";
        }
      else if (Number.NEGATIVE_INFINITY === object)
        switch (style2) {
          case "lowercase":
            return "-.inf";
          case "uppercase":
            return "-.INF";
          case "camelcase":
            return "-.Inf";
        }
      else if (common.isNegativeZero(object))
        return "-0.0";
      return res = object.toString(10), SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace("e", ".e") : res;
    }
    function isFloat(object) {
      return Object.prototype.toString.call(object) === "[object Number]" && (object % 1 !== 0 || common.isNegativeZero(object));
    }
    module2.exports = new Type("tag:yaml.org,2002:float", {
      kind: "scalar",
      resolve: resolveYamlFloat,
      construct: constructYamlFloat,
      predicate: isFloat,
      represent: representYamlFloat,
      defaultStyle: "lowercase"
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/json.js
var require_json = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/json.js"(exports2, module2) {
    "use strict";
    var Schema2 = require_schema();
    module2.exports = new Schema2({
      include: [
        require_failsafe()
      ],
      implicit: [
        require_null(),
        require_bool(),
        require_int(),
        require_float()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/core.js
var require_core = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/core.js"(exports2, module2) {
    "use strict";
    var Schema2 = require_schema();
    module2.exports = new Schema2({
      include: [
        require_json()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/timestamp.js
var require_timestamp = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/timestamp.js"(exports2, module2) {
    "use strict";
    var Type = require_type(), YAML_DATE_REGEXP = new RegExp(
      "^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"
    ), YAML_TIMESTAMP_REGEXP = new RegExp(
      "^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$"
    );
    function resolveYamlTimestamp(data) {
      return data === null ? !1 : YAML_DATE_REGEXP.exec(data) !== null || YAML_TIMESTAMP_REGEXP.exec(data) !== null;
    }
    function constructYamlTimestamp(data) {
      var match, year, month, day, hour, minute, second, fraction = 0, delta = null, tz_hour, tz_minute, date;
      if (match = YAML_DATE_REGEXP.exec(data), match === null && (match = YAML_TIMESTAMP_REGEXP.exec(data)), match === null)
        throw new Error("Date resolve error");
      if (year = +match[1], month = +match[2] - 1, day = +match[3], !match[4])
        return new Date(Date.UTC(year, month, day));
      if (hour = +match[4], minute = +match[5], second = +match[6], match[7]) {
        for (fraction = match[7].slice(0, 3); fraction.length < 3; )
          fraction += "0";
        fraction = +fraction;
      }
      return match[9] && (tz_hour = +match[10], tz_minute = +(match[11] || 0), delta = (tz_hour * 60 + tz_minute) * 6e4, match[9] === "-" && (delta = -delta)), date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction)), delta && date.setTime(date.getTime() - delta), date;
    }
    function representYamlTimestamp(object) {
      return object.toISOString();
    }
    module2.exports = new Type("tag:yaml.org,2002:timestamp", {
      kind: "scalar",
      resolve: resolveYamlTimestamp,
      construct: constructYamlTimestamp,
      instanceOf: Date,
      represent: representYamlTimestamp
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/merge.js
var require_merge = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/merge.js"(exports2, module2) {
    "use strict";
    var Type = require_type();
    function resolveYamlMerge(data) {
      return data === "<<" || data === null;
    }
    module2.exports = new Type("tag:yaml.org,2002:merge", {
      kind: "scalar",
      resolve: resolveYamlMerge
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/binary.js
var require_binary = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/binary.js"(exports2, module2) {
    "use strict";
    var NodeBuffer;
    try {
      _require = require, NodeBuffer = _require("buffer").Buffer;
    } catch {
    }
    var _require, Type = require_type(), BASE64_MAP = `ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=
\r`;
    function resolveYamlBinary(data) {
      if (data === null)
        return !1;
      var code3, idx, bitlen = 0, max = data.length, map2 = BASE64_MAP;
      for (idx = 0; idx < max; idx++)
        if (code3 = map2.indexOf(data.charAt(idx)), !(code3 > 64)) {
          if (code3 < 0)
            return !1;
          bitlen += 6;
        }
      return bitlen % 8 === 0;
    }
    function constructYamlBinary(data) {
      var idx, tailbits, input = data.replace(/[\r\n=]/g, ""), max = input.length, map2 = BASE64_MAP, bits = 0, result = [];
      for (idx = 0; idx < max; idx++)
        idx % 4 === 0 && idx && (result.push(bits >> 16 & 255), result.push(bits >> 8 & 255), result.push(bits & 255)), bits = bits << 6 | map2.indexOf(input.charAt(idx));
      return tailbits = max % 4 * 6, tailbits === 0 ? (result.push(bits >> 16 & 255), result.push(bits >> 8 & 255), result.push(bits & 255)) : tailbits === 18 ? (result.push(bits >> 10 & 255), result.push(bits >> 2 & 255)) : tailbits === 12 && result.push(bits >> 4 & 255), NodeBuffer ? NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result) : result;
    }
    function representYamlBinary(object) {
      var result = "", bits = 0, idx, tail, max = object.length, map2 = BASE64_MAP;
      for (idx = 0; idx < max; idx++)
        idx % 3 === 0 && idx && (result += map2[bits >> 18 & 63], result += map2[bits >> 12 & 63], result += map2[bits >> 6 & 63], result += map2[bits & 63]), bits = (bits << 8) + object[idx];
      return tail = max % 3, tail === 0 ? (result += map2[bits >> 18 & 63], result += map2[bits >> 12 & 63], result += map2[bits >> 6 & 63], result += map2[bits & 63]) : tail === 2 ? (result += map2[bits >> 10 & 63], result += map2[bits >> 4 & 63], result += map2[bits << 2 & 63], result += map2[64]) : tail === 1 && (result += map2[bits >> 2 & 63], result += map2[bits << 4 & 63], result += map2[64], result += map2[64]), result;
    }
    function isBinary(object) {
      return NodeBuffer && NodeBuffer.isBuffer(object);
    }
    module2.exports = new Type("tag:yaml.org,2002:binary", {
      kind: "scalar",
      resolve: resolveYamlBinary,
      construct: constructYamlBinary,
      predicate: isBinary,
      represent: representYamlBinary
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/omap.js
var require_omap = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/omap.js"(exports2, module2) {
    "use strict";
    var Type = require_type(), _hasOwnProperty = Object.prototype.hasOwnProperty, _toString = Object.prototype.toString;
    function resolveYamlOmap(data) {
      if (data === null)
        return !0;
      var objectKeys = [], index2, length, pair, pairKey, pairHasKey, object = data;
      for (index2 = 0, length = object.length; index2 < length; index2 += 1) {
        if (pair = object[index2], pairHasKey = !1, _toString.call(pair) !== "[object Object]")
          return !1;
        for (pairKey in pair)
          if (_hasOwnProperty.call(pair, pairKey))
            if (!pairHasKey)
              pairHasKey = !0;
            else
              return !1;
        if (!pairHasKey)
          return !1;
        if (objectKeys.indexOf(pairKey) === -1)
          objectKeys.push(pairKey);
        else
          return !1;
      }
      return !0;
    }
    function constructYamlOmap(data) {
      return data !== null ? data : [];
    }
    module2.exports = new Type("tag:yaml.org,2002:omap", {
      kind: "sequence",
      resolve: resolveYamlOmap,
      construct: constructYamlOmap
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/pairs.js
var require_pairs = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/pairs.js"(exports2, module2) {
    "use strict";
    var Type = require_type(), _toString = Object.prototype.toString;
    function resolveYamlPairs(data) {
      if (data === null)
        return !0;
      var index2, length, pair, keys2, result, object = data;
      for (result = new Array(object.length), index2 = 0, length = object.length; index2 < length; index2 += 1) {
        if (pair = object[index2], _toString.call(pair) !== "[object Object]" || (keys2 = Object.keys(pair), keys2.length !== 1))
          return !1;
        result[index2] = [keys2[0], pair[keys2[0]]];
      }
      return !0;
    }
    function constructYamlPairs(data) {
      if (data === null)
        return [];
      var index2, length, pair, keys2, result, object = data;
      for (result = new Array(object.length), index2 = 0, length = object.length; index2 < length; index2 += 1)
        pair = object[index2], keys2 = Object.keys(pair), result[index2] = [keys2[0], pair[keys2[0]]];
      return result;
    }
    module2.exports = new Type("tag:yaml.org,2002:pairs", {
      kind: "sequence",
      resolve: resolveYamlPairs,
      construct: constructYamlPairs
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/set.js
var require_set2 = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/set.js"(exports2, module2) {
    "use strict";
    var Type = require_type(), _hasOwnProperty = Object.prototype.hasOwnProperty;
    function resolveYamlSet(data) {
      if (data === null)
        return !0;
      var key2, object = data;
      for (key2 in object)
        if (_hasOwnProperty.call(object, key2) && object[key2] !== null)
          return !1;
      return !0;
    }
    function constructYamlSet(data) {
      return data !== null ? data : {};
    }
    module2.exports = new Type("tag:yaml.org,2002:set", {
      kind: "mapping",
      resolve: resolveYamlSet,
      construct: constructYamlSet
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/default_safe.js
var require_default_safe = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/default_safe.js"(exports2, module2) {
    "use strict";
    var Schema2 = require_schema();
    module2.exports = new Schema2({
      include: [
        require_core()
      ],
      implicit: [
        require_timestamp(),
        require_merge()
      ],
      explicit: [
        require_binary(),
        require_omap(),
        require_pairs(),
        require_set2()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/js/undefined.js
var require_undefined = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/js/undefined.js"(exports2, module2) {
    "use strict";
    var Type = require_type();
    function resolveJavascriptUndefined() {
      return !0;
    }
    function constructJavascriptUndefined() {
    }
    function representJavascriptUndefined() {
      return "";
    }
    function isUndefined(object) {
      return typeof object > "u";
    }
    module2.exports = new Type("tag:yaml.org,2002:js/undefined", {
      kind: "scalar",
      resolve: resolveJavascriptUndefined,
      construct: constructJavascriptUndefined,
      predicate: isUndefined,
      represent: representJavascriptUndefined
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/js/regexp.js
var require_regexp = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/js/regexp.js"(exports2, module2) {
    "use strict";
    var Type = require_type();
    function resolveJavascriptRegExp(data) {
      if (data === null || data.length === 0)
        return !1;
      var regexp = data, tail = /\/([gim]*)$/.exec(data), modifiers = "";
      return !(regexp[0] === "/" && (tail && (modifiers = tail[1]), modifiers.length > 3 || regexp[regexp.length - modifiers.length - 1] !== "/"));
    }
    function constructJavascriptRegExp(data) {
      var regexp = data, tail = /\/([gim]*)$/.exec(data), modifiers = "";
      return regexp[0] === "/" && (tail && (modifiers = tail[1]), regexp = regexp.slice(1, regexp.length - modifiers.length - 1)), new RegExp(regexp, modifiers);
    }
    function representJavascriptRegExp(object) {
      var result = "/" + object.source + "/";
      return object.global && (result += "g"), object.multiline && (result += "m"), object.ignoreCase && (result += "i"), result;
    }
    function isRegExp(object) {
      return Object.prototype.toString.call(object) === "[object RegExp]";
    }
    module2.exports = new Type("tag:yaml.org,2002:js/regexp", {
      kind: "scalar",
      resolve: resolveJavascriptRegExp,
      construct: constructJavascriptRegExp,
      predicate: isRegExp,
      represent: representJavascriptRegExp
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/type/js/function.js
var require_function = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/type/js/function.js"(exports2, module2) {
    "use strict";
    var esprima;
    try {
      _require = require, esprima = _require("esprima");
    } catch {
      typeof window < "u" && (esprima = window.esprima);
    }
    var _require, Type = require_type();
    function resolveJavascriptFunction(data) {
      if (data === null)
        return !1;
      try {
        var source = "(" + data + ")", ast = esprima.parse(source, { range: !0 });
        return !(ast.type !== "Program" || ast.body.length !== 1 || ast.body[0].type !== "ExpressionStatement" || ast.body[0].expression.type !== "ArrowFunctionExpression" && ast.body[0].expression.type !== "FunctionExpression");
      } catch {
        return !1;
      }
    }
    function constructJavascriptFunction(data) {
      var source = "(" + data + ")", ast = esprima.parse(source, { range: !0 }), params = [], body3;
      if (ast.type !== "Program" || ast.body.length !== 1 || ast.body[0].type !== "ExpressionStatement" || ast.body[0].expression.type !== "ArrowFunctionExpression" && ast.body[0].expression.type !== "FunctionExpression")
        throw new Error("Failed to resolve function");
      return ast.body[0].expression.params.forEach(function(param) {
        params.push(param.name);
      }), body3 = ast.body[0].expression.body.range, ast.body[0].expression.body.type === "BlockStatement" ? new Function(params, source.slice(body3[0] + 1, body3[1] - 1)) : new Function(params, "return " + source.slice(body3[0], body3[1]));
    }
    function representJavascriptFunction(object) {
      return object.toString();
    }
    function isFunction(object) {
      return Object.prototype.toString.call(object) === "[object Function]";
    }
    module2.exports = new Type("tag:yaml.org,2002:js/function", {
      kind: "scalar",
      resolve: resolveJavascriptFunction,
      construct: constructJavascriptFunction,
      predicate: isFunction,
      represent: representJavascriptFunction
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/schema/default_full.js
var require_default_full = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/schema/default_full.js"(exports2, module2) {
    "use strict";
    var Schema2 = require_schema();
    module2.exports = Schema2.DEFAULT = new Schema2({
      include: [
        require_default_safe()
      ],
      explicit: [
        require_undefined(),
        require_regexp(),
        require_function()
      ]
    });
  }
});

// node_modules/js-yaml/lib/js-yaml/loader.js
var require_loader = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/loader.js"(exports2, module2) {
    "use strict";
    var common = require_common(), YAMLException = require_exception(), Mark = require_mark(), DEFAULT_SAFE_SCHEMA = require_default_safe(), DEFAULT_FULL_SCHEMA = require_default_full(), _hasOwnProperty = Object.prototype.hasOwnProperty, CONTEXT_FLOW_IN = 1, CONTEXT_FLOW_OUT = 2, CONTEXT_BLOCK_IN = 3, CONTEXT_BLOCK_OUT = 4, CHOMPING_CLIP = 1, CHOMPING_STRIP = 2, CHOMPING_KEEP = 3, PATTERN_NON_PRINTABLE = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/, PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/, PATTERN_FLOW_INDICATORS = /[,\[\]\{\}]/, PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\-]+!)$/i, PATTERN_TAG_URI = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
    function _class(obj) {
      return Object.prototype.toString.call(obj);
    }
    function is_EOL(c) {
      return c === 10 || c === 13;
    }
    function is_WHITE_SPACE(c) {
      return c === 9 || c === 32;
    }
    function is_WS_OR_EOL(c) {
      return c === 9 || c === 32 || c === 10 || c === 13;
    }
    function is_FLOW_INDICATOR(c) {
      return c === 44 || c === 91 || c === 93 || c === 123 || c === 125;
    }
    function fromHexCode(c) {
      var lc;
      return 48 <= c && c <= 57 ? c - 48 : (lc = c | 32, 97 <= lc && lc <= 102 ? lc - 97 + 10 : -1);
    }
    function escapedHexLen(c) {
      return c === 120 ? 2 : c === 117 ? 4 : c === 85 ? 8 : 0;
    }
    function fromDecimalCode(c) {
      return 48 <= c && c <= 57 ? c - 48 : -1;
    }
    function simpleEscapeSequence(c) {
      return c === 48 ? "\0" : c === 97 ? "\x07" : c === 98 ? "\b" : c === 116 || c === 9 ? "	" : c === 110 ? `
` : c === 118 ? "\v" : c === 102 ? "\f" : c === 114 ? "\r" : c === 101 ? "\x1B" : c === 32 ? " " : c === 34 ? '"' : c === 47 ? "/" : c === 92 ? "\\" : c === 78 ? "\x85" : c === 95 ? "\xA0" : c === 76 ? "\u2028" : c === 80 ? "\u2029" : "";
    }
    function charFromCodepoint(c) {
      return c <= 65535 ? String.fromCharCode(c) : String.fromCharCode(
        (c - 65536 >> 10) + 55296,
        (c - 65536 & 1023) + 56320
      );
    }
    var simpleEscapeCheck = new Array(256), simpleEscapeMap = new Array(256);
    for (i = 0; i < 256; i++)
      simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0, simpleEscapeMap[i] = simpleEscapeSequence(i);
    var i;
    function State2(input, options2) {
      this.input = input, this.filename = options2.filename || null, this.schema = options2.schema || DEFAULT_FULL_SCHEMA, this.onWarning = options2.onWarning || null, this.legacy = options2.legacy || !1, this.json = options2.json || !1, this.listener = options2.listener || null, this.implicitTypes = this.schema.compiledImplicit, this.typeMap = this.schema.compiledTypeMap, this.length = input.length, this.position = 0, this.line = 0, this.lineStart = 0, this.lineIndent = 0, this.documents = [];
    }
    function generateError(state, message) {
      return new YAMLException(
        message,
        new Mark(state.filename, state.input, state.position, state.line, state.position - state.lineStart)
      );
    }
    function throwError(state, message) {
      throw generateError(state, message);
    }
    function throwWarning(state, message) {
      state.onWarning && state.onWarning.call(null, generateError(state, message));
    }
    var directiveHandlers = {
      YAML: function(state, name, args) {
        var match, major, minor;
        state.version !== null && throwError(state, "duplication of %YAML directive"), args.length !== 1 && throwError(state, "YAML directive accepts exactly one argument"), match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]), match === null && throwError(state, "ill-formed argument of the YAML directive"), major = parseInt(match[1], 10), minor = parseInt(match[2], 10), major !== 1 && throwError(state, "unacceptable YAML version of the document"), state.version = args[0], state.checkLineBreaks = minor < 2, minor !== 1 && minor !== 2 && throwWarning(state, "unsupported YAML version of the document");
      },
      TAG: function(state, name, args) {
        var handle2, prefix;
        args.length !== 2 && throwError(state, "TAG directive accepts exactly two arguments"), handle2 = args[0], prefix = args[1], PATTERN_TAG_HANDLE.test(handle2) || throwError(state, "ill-formed tag handle (first argument) of the TAG directive"), _hasOwnProperty.call(state.tagMap, handle2) && throwError(state, 'there is a previously declared suffix for "' + handle2 + '" tag handle'), PATTERN_TAG_URI.test(prefix) || throwError(state, "ill-formed tag prefix (second argument) of the TAG directive"), state.tagMap[handle2] = prefix;
      }
    };
    function captureSegment(state, start, end, checkJson) {
      var _position, _length, _character, _result;
      if (start < end) {
        if (_result = state.input.slice(start, end), checkJson)
          for (_position = 0, _length = _result.length; _position < _length; _position += 1)
            _character = _result.charCodeAt(_position), _character === 9 || 32 <= _character && _character <= 1114111 || throwError(state, "expected valid JSON character");
        else
          PATTERN_NON_PRINTABLE.test(_result) && throwError(state, "the stream contains non-printable characters");
        state.result += _result;
      }
    }
    function mergeMappings(state, destination, source, overridableKeys) {
      var sourceKeys, key2, index2, quantity;
      for (common.isObject(source) || throwError(state, "cannot merge mappings; the provided source object is unacceptable"), sourceKeys = Object.keys(source), index2 = 0, quantity = sourceKeys.length; index2 < quantity; index2 += 1)
        key2 = sourceKeys[index2], _hasOwnProperty.call(destination, key2) || (destination[key2] = source[key2], overridableKeys[key2] = !0);
    }
    function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {
      var index2, quantity;
      if (Array.isArray(keyNode))
        for (keyNode = Array.prototype.slice.call(keyNode), index2 = 0, quantity = keyNode.length; index2 < quantity; index2 += 1)
          Array.isArray(keyNode[index2]) && throwError(state, "nested arrays are not supported inside keys"), typeof keyNode == "object" && _class(keyNode[index2]) === "[object Object]" && (keyNode[index2] = "[object Object]");
      if (typeof keyNode == "object" && _class(keyNode) === "[object Object]" && (keyNode = "[object Object]"), keyNode = String(keyNode), _result === null && (_result = {}), keyTag === "tag:yaml.org,2002:merge")
        if (Array.isArray(valueNode))
          for (index2 = 0, quantity = valueNode.length; index2 < quantity; index2 += 1)
            mergeMappings(state, _result, valueNode[index2], overridableKeys);
        else
          mergeMappings(state, _result, valueNode, overridableKeys);
      else
        !state.json && !_hasOwnProperty.call(overridableKeys, keyNode) && _hasOwnProperty.call(_result, keyNode) && (state.line = startLine || state.line, state.position = startPos || state.position, throwError(state, "duplicated mapping key")), _result[keyNode] = valueNode, delete overridableKeys[keyNode];
      return _result;
    }
    function readLineBreak(state) {
      var ch;
      ch = state.input.charCodeAt(state.position), ch === 10 ? state.position++ : ch === 13 ? (state.position++, state.input.charCodeAt(state.position) === 10 && state.position++) : throwError(state, "a line break is expected"), state.line += 1, state.lineStart = state.position;
    }
    function skipSeparationSpace(state, allowComments, checkIndent) {
      for (var lineBreaks = 0, ch = state.input.charCodeAt(state.position); ch !== 0; ) {
        for (; is_WHITE_SPACE(ch); )
          ch = state.input.charCodeAt(++state.position);
        if (allowComments && ch === 35)
          do
            ch = state.input.charCodeAt(++state.position);
          while (ch !== 10 && ch !== 13 && ch !== 0);
        if (is_EOL(ch))
          for (readLineBreak(state), ch = state.input.charCodeAt(state.position), lineBreaks++, state.lineIndent = 0; ch === 32; )
            state.lineIndent++, ch = state.input.charCodeAt(++state.position);
        else
          break;
      }
      return checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent && throwWarning(state, "deficient indentation"), lineBreaks;
    }
    function testDocumentSeparator(state) {
      var _position = state.position, ch;
      return ch = state.input.charCodeAt(_position), !!((ch === 45 || ch === 46) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2) && (_position += 3, ch = state.input.charCodeAt(_position), ch === 0 || is_WS_OR_EOL(ch)));
    }
    function writeFoldedLines(state, count) {
      count === 1 ? state.result += " " : count > 1 && (state.result += common.repeat(`
`, count - 1));
    }
    function readPlainScalar(state, nodeIndent, withinFlowCollection) {
      var preceding, following, captureStart, captureEnd, hasPendingContent, _line, _lineStart, _lineIndent, _kind = state.kind, _result = state.result, ch;
      if (ch = state.input.charCodeAt(state.position), is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 35 || ch === 38 || ch === 42 || ch === 33 || ch === 124 || ch === 62 || ch === 39 || ch === 34 || ch === 37 || ch === 64 || ch === 96 || (ch === 63 || ch === 45) && (following = state.input.charCodeAt(state.position + 1), is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)))
        return !1;
      for (state.kind = "scalar", state.result = "", captureStart = captureEnd = state.position, hasPendingContent = !1; ch !== 0; ) {
        if (ch === 58) {
          if (following = state.input.charCodeAt(state.position + 1), is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following))
            break;
        } else if (ch === 35) {
          if (preceding = state.input.charCodeAt(state.position - 1), is_WS_OR_EOL(preceding))
            break;
        } else {
          if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch))
            break;
          if (is_EOL(ch))
            if (_line = state.line, _lineStart = state.lineStart, _lineIndent = state.lineIndent, skipSeparationSpace(state, !1, -1), state.lineIndent >= nodeIndent) {
              hasPendingContent = !0, ch = state.input.charCodeAt(state.position);
              continue;
            } else {
              state.position = captureEnd, state.line = _line, state.lineStart = _lineStart, state.lineIndent = _lineIndent;
              break;
            }
        }
        hasPendingContent && (captureSegment(state, captureStart, captureEnd, !1), writeFoldedLines(state, state.line - _line), captureStart = captureEnd = state.position, hasPendingContent = !1), is_WHITE_SPACE(ch) || (captureEnd = state.position + 1), ch = state.input.charCodeAt(++state.position);
      }
      return captureSegment(state, captureStart, captureEnd, !1), state.result ? !0 : (state.kind = _kind, state.result = _result, !1);
    }
    function readSingleQuotedScalar(state, nodeIndent) {
      var ch, captureStart, captureEnd;
      if (ch = state.input.charCodeAt(state.position), ch !== 39)
        return !1;
      for (state.kind = "scalar", state.result = "", state.position++, captureStart = captureEnd = state.position; (ch = state.input.charCodeAt(state.position)) !== 0; )
        if (ch === 39)
          if (captureSegment(state, captureStart, state.position, !0), ch = state.input.charCodeAt(++state.position), ch === 39)
            captureStart = state.position, state.position++, captureEnd = state.position;
          else
            return !0;
        else
          is_EOL(ch) ? (captureSegment(state, captureStart, captureEnd, !0), writeFoldedLines(state, skipSeparationSpace(state, !1, nodeIndent)), captureStart = captureEnd = state.position) : state.position === state.lineStart && testDocumentSeparator(state) ? throwError(state, "unexpected end of the document within a single quoted scalar") : (state.position++, captureEnd = state.position);
      throwError(state, "unexpected end of the stream within a single quoted scalar");
    }
    function readDoubleQuotedScalar(state, nodeIndent) {
      var captureStart, captureEnd, hexLength, hexResult, tmp, ch;
      if (ch = state.input.charCodeAt(state.position), ch !== 34)
        return !1;
      for (state.kind = "scalar", state.result = "", state.position++, captureStart = captureEnd = state.position; (ch = state.input.charCodeAt(state.position)) !== 0; ) {
        if (ch === 34)
          return captureSegment(state, captureStart, state.position, !0), state.position++, !0;
        if (ch === 92) {
          if (captureSegment(state, captureStart, state.position, !0), ch = state.input.charCodeAt(++state.position), is_EOL(ch))
            skipSeparationSpace(state, !1, nodeIndent);
          else if (ch < 256 && simpleEscapeCheck[ch])
            state.result += simpleEscapeMap[ch], state.position++;
          else if ((tmp = escapedHexLen(ch)) > 0) {
            for (hexLength = tmp, hexResult = 0; hexLength > 0; hexLength--)
              ch = state.input.charCodeAt(++state.position), (tmp = fromHexCode(ch)) >= 0 ? hexResult = (hexResult << 4) + tmp : throwError(state, "expected hexadecimal character");
            state.result += charFromCodepoint(hexResult), state.position++;
          } else
            throwError(state, "unknown escape sequence");
          captureStart = captureEnd = state.position;
        } else
          is_EOL(ch) ? (captureSegment(state, captureStart, captureEnd, !0), writeFoldedLines(state, skipSeparationSpace(state, !1, nodeIndent)), captureStart = captureEnd = state.position) : state.position === state.lineStart && testDocumentSeparator(state) ? throwError(state, "unexpected end of the document within a double quoted scalar") : (state.position++, captureEnd = state.position);
      }
      throwError(state, "unexpected end of the stream within a double quoted scalar");
    }
    function readFlowCollection(state, nodeIndent) {
      var readNext = !0, _line, _tag = state.tag, _result, _anchor = state.anchor, following, terminator, isPair, isExplicitPair, isMapping, overridableKeys = {}, keyNode, keyTag, valueNode, ch;
      if (ch = state.input.charCodeAt(state.position), ch === 91)
        terminator = 93, isMapping = !1, _result = [];
      else if (ch === 123)
        terminator = 125, isMapping = !0, _result = {};
      else
        return !1;
      for (state.anchor !== null && (state.anchorMap[state.anchor] = _result), ch = state.input.charCodeAt(++state.position); ch !== 0; ) {
        if (skipSeparationSpace(state, !0, nodeIndent), ch = state.input.charCodeAt(state.position), ch === terminator)
          return state.position++, state.tag = _tag, state.anchor = _anchor, state.kind = isMapping ? "mapping" : "sequence", state.result = _result, !0;
        readNext || throwError(state, "missed comma between flow collection entries"), keyTag = keyNode = valueNode = null, isPair = isExplicitPair = !1, ch === 63 && (following = state.input.charCodeAt(state.position + 1), is_WS_OR_EOL(following) && (isPair = isExplicitPair = !0, state.position++, skipSeparationSpace(state, !0, nodeIndent))), _line = state.line, composeNode(state, nodeIndent, CONTEXT_FLOW_IN, !1, !0), keyTag = state.tag, keyNode = state.result, skipSeparationSpace(state, !0, nodeIndent), ch = state.input.charCodeAt(state.position), (isExplicitPair || state.line === _line) && ch === 58 && (isPair = !0, ch = state.input.charCodeAt(++state.position), skipSeparationSpace(state, !0, nodeIndent), composeNode(state, nodeIndent, CONTEXT_FLOW_IN, !1, !0), valueNode = state.result), isMapping ? storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode) : isPair ? _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode)) : _result.push(keyNode), skipSeparationSpace(state, !0, nodeIndent), ch = state.input.charCodeAt(state.position), ch === 44 ? (readNext = !0, ch = state.input.charCodeAt(++state.position)) : readNext = !1;
      }
      throwError(state, "unexpected end of the stream within a flow collection");
    }
    function readBlockScalar(state, nodeIndent) {
      var captureStart, folding, chomping = CHOMPING_CLIP, didReadContent = !1, detectedIndent = !1, textIndent = nodeIndent, emptyLines = 0, atMoreIndented = !1, tmp, ch;
      if (ch = state.input.charCodeAt(state.position), ch === 124)
        folding = !1;
      else if (ch === 62)
        folding = !0;
      else
        return !1;
      for (state.kind = "scalar", state.result = ""; ch !== 0; )
        if (ch = state.input.charCodeAt(++state.position), ch === 43 || ch === 45)
          CHOMPING_CLIP === chomping ? chomping = ch === 43 ? CHOMPING_KEEP : CHOMPING_STRIP : throwError(state, "repeat of a chomping mode identifier");
        else if ((tmp = fromDecimalCode(ch)) >= 0)
          tmp === 0 ? throwError(state, "bad explicit indentation width of a block scalar; it cannot be less than one") : detectedIndent ? throwError(state, "repeat of an indentation width identifier") : (textIndent = nodeIndent + tmp - 1, detectedIndent = !0);
        else
          break;
      if (is_WHITE_SPACE(ch)) {
        do
          ch = state.input.charCodeAt(++state.position);
        while (is_WHITE_SPACE(ch));
        if (ch === 35)
          do
            ch = state.input.charCodeAt(++state.position);
          while (!is_EOL(ch) && ch !== 0);
      }
      for (; ch !== 0; ) {
        for (readLineBreak(state), state.lineIndent = 0, ch = state.input.charCodeAt(state.position); (!detectedIndent || state.lineIndent < textIndent) && ch === 32; )
          state.lineIndent++, ch = state.input.charCodeAt(++state.position);
        if (!detectedIndent && state.lineIndent > textIndent && (textIndent = state.lineIndent), is_EOL(ch)) {
          emptyLines++;
          continue;
        }
        if (state.lineIndent < textIndent) {
          chomping === CHOMPING_KEEP ? state.result += common.repeat(`
`, didReadContent ? 1 + emptyLines : emptyLines) : chomping === CHOMPING_CLIP && didReadContent && (state.result += `
`);
          break;
        }
        for (folding ? is_WHITE_SPACE(ch) ? (atMoreIndented = !0, state.result += common.repeat(`
`, didReadContent ? 1 + emptyLines : emptyLines)) : atMoreIndented ? (atMoreIndented = !1, state.result += common.repeat(`
`, emptyLines + 1)) : emptyLines === 0 ? didReadContent && (state.result += " ") : state.result += common.repeat(`
`, emptyLines) : state.result += common.repeat(`
`, didReadContent ? 1 + emptyLines : emptyLines), didReadContent = !0, detectedIndent = !0, emptyLines = 0, captureStart = state.position; !is_EOL(ch) && ch !== 0; )
          ch = state.input.charCodeAt(++state.position);
        captureSegment(state, captureStart, state.position, !1);
      }
      return !0;
    }
    function readBlockSequence(state, nodeIndent) {
      var _line, _tag = state.tag, _anchor = state.anchor, _result = [], following, detected = !1, ch;
      for (state.anchor !== null && (state.anchorMap[state.anchor] = _result), ch = state.input.charCodeAt(state.position); ch !== 0 && !(ch !== 45 || (following = state.input.charCodeAt(state.position + 1), !is_WS_OR_EOL(following))); ) {
        if (detected = !0, state.position++, skipSeparationSpace(state, !0, -1) && state.lineIndent <= nodeIndent) {
          _result.push(null), ch = state.input.charCodeAt(state.position);
          continue;
        }
        if (_line = state.line, composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, !1, !0), _result.push(state.result), skipSeparationSpace(state, !0, -1), ch = state.input.charCodeAt(state.position), (state.line === _line || state.lineIndent > nodeIndent) && ch !== 0)
          throwError(state, "bad indentation of a sequence entry");
        else if (state.lineIndent < nodeIndent)
          break;
      }
      return detected ? (state.tag = _tag, state.anchor = _anchor, state.kind = "sequence", state.result = _result, !0) : !1;
    }
    function readBlockMapping(state, nodeIndent, flowIndent) {
      var following, allowCompact, _line, _pos, _tag = state.tag, _anchor = state.anchor, _result = {}, overridableKeys = {}, keyTag = null, keyNode = null, valueNode = null, atExplicitKey = !1, detected = !1, ch;
      for (state.anchor !== null && (state.anchorMap[state.anchor] = _result), ch = state.input.charCodeAt(state.position); ch !== 0; ) {
        if (following = state.input.charCodeAt(state.position + 1), _line = state.line, _pos = state.position, (ch === 63 || ch === 58) && is_WS_OR_EOL(following))
          ch === 63 ? (atExplicitKey && (storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null), keyTag = keyNode = valueNode = null), detected = !0, atExplicitKey = !0, allowCompact = !0) : atExplicitKey ? (atExplicitKey = !1, allowCompact = !0) : throwError(state, "incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"), state.position += 1, ch = following;
        else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, !1, !0))
          if (state.line === _line) {
            for (ch = state.input.charCodeAt(state.position); is_WHITE_SPACE(ch); )
              ch = state.input.charCodeAt(++state.position);
            if (ch === 58)
              ch = state.input.charCodeAt(++state.position), is_WS_OR_EOL(ch) || throwError(state, "a whitespace character is expected after the key-value separator within a block mapping"), atExplicitKey && (storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null), keyTag = keyNode = valueNode = null), detected = !0, atExplicitKey = !1, allowCompact = !1, keyTag = state.tag, keyNode = state.result;
            else if (detected)
              throwError(state, "can not read an implicit mapping pair; a colon is missed");
            else
              return state.tag = _tag, state.anchor = _anchor, !0;
          } else if (detected)
            throwError(state, "can not read a block mapping entry; a multiline key may not be an implicit key");
          else
            return state.tag = _tag, state.anchor = _anchor, !0;
        else
          break;
        if ((state.line === _line || state.lineIndent > nodeIndent) && (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, !0, allowCompact) && (atExplicitKey ? keyNode = state.result : valueNode = state.result), atExplicitKey || (storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos), keyTag = keyNode = valueNode = null), skipSeparationSpace(state, !0, -1), ch = state.input.charCodeAt(state.position)), state.lineIndent > nodeIndent && ch !== 0)
          throwError(state, "bad indentation of a mapping entry");
        else if (state.lineIndent < nodeIndent)
          break;
      }
      return atExplicitKey && storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null), detected && (state.tag = _tag, state.anchor = _anchor, state.kind = "mapping", state.result = _result), detected;
    }
    function readTagProperty(state) {
      var _position, isVerbatim = !1, isNamed = !1, tagHandle, tagName, ch;
      if (ch = state.input.charCodeAt(state.position), ch !== 33)
        return !1;
      if (state.tag !== null && throwError(state, "duplication of a tag property"), ch = state.input.charCodeAt(++state.position), ch === 60 ? (isVerbatim = !0, ch = state.input.charCodeAt(++state.position)) : ch === 33 ? (isNamed = !0, tagHandle = "!!", ch = state.input.charCodeAt(++state.position)) : tagHandle = "!", _position = state.position, isVerbatim) {
        do
          ch = state.input.charCodeAt(++state.position);
        while (ch !== 0 && ch !== 62);
        state.position < state.length ? (tagName = state.input.slice(_position, state.position), ch = state.input.charCodeAt(++state.position)) : throwError(state, "unexpected end of the stream within a verbatim tag");
      } else {
        for (; ch !== 0 && !is_WS_OR_EOL(ch); )
          ch === 33 && (isNamed ? throwError(state, "tag suffix cannot contain exclamation marks") : (tagHandle = state.input.slice(_position - 1, state.position + 1), PATTERN_TAG_HANDLE.test(tagHandle) || throwError(state, "named tag handle cannot contain such characters"), isNamed = !0, _position = state.position + 1)), ch = state.input.charCodeAt(++state.position);
        tagName = state.input.slice(_position, state.position), PATTERN_FLOW_INDICATORS.test(tagName) && throwError(state, "tag suffix cannot contain flow indicator characters");
      }
      return tagName && !PATTERN_TAG_URI.test(tagName) && throwError(state, "tag name cannot contain such characters: " + tagName), isVerbatim ? state.tag = tagName : _hasOwnProperty.call(state.tagMap, tagHandle) ? state.tag = state.tagMap[tagHandle] + tagName : tagHandle === "!" ? state.tag = "!" + tagName : tagHandle === "!!" ? state.tag = "tag:yaml.org,2002:" + tagName : throwError(state, 'undeclared tag handle "' + tagHandle + '"'), !0;
    }
    function readAnchorProperty(state) {
      var _position, ch;
      if (ch = state.input.charCodeAt(state.position), ch !== 38)
        return !1;
      for (state.anchor !== null && throwError(state, "duplication of an anchor property"), ch = state.input.charCodeAt(++state.position), _position = state.position; ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch); )
        ch = state.input.charCodeAt(++state.position);
      return state.position === _position && throwError(state, "name of an anchor node must contain at least one character"), state.anchor = state.input.slice(_position, state.position), !0;
    }
    function readAlias(state) {
      var _position, alias, ch;
      if (ch = state.input.charCodeAt(state.position), ch !== 42)
        return !1;
      for (ch = state.input.charCodeAt(++state.position), _position = state.position; ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch); )
        ch = state.input.charCodeAt(++state.position);
      return state.position === _position && throwError(state, "name of an alias node must contain at least one character"), alias = state.input.slice(_position, state.position), _hasOwnProperty.call(state.anchorMap, alias) || throwError(state, 'unidentified alias "' + alias + '"'), state.result = state.anchorMap[alias], skipSeparationSpace(state, !0, -1), !0;
    }
    function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
      var allowBlockStyles, allowBlockScalars, allowBlockCollections, indentStatus = 1, atNewLine = !1, hasContent = !1, typeIndex, typeQuantity, type, flowIndent, blockIndent;
      if (state.listener !== null && state.listener("open", state), state.tag = null, state.anchor = null, state.kind = null, state.result = null, allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext, allowToSeek && skipSeparationSpace(state, !0, -1) && (atNewLine = !0, state.lineIndent > parentIndent ? indentStatus = 1 : state.lineIndent === parentIndent ? indentStatus = 0 : state.lineIndent < parentIndent && (indentStatus = -1)), indentStatus === 1)
        for (; readTagProperty(state) || readAnchorProperty(state); )
          skipSeparationSpace(state, !0, -1) ? (atNewLine = !0, allowBlockCollections = allowBlockStyles, state.lineIndent > parentIndent ? indentStatus = 1 : state.lineIndent === parentIndent ? indentStatus = 0 : state.lineIndent < parentIndent && (indentStatus = -1)) : allowBlockCollections = !1;
      if (allowBlockCollections && (allowBlockCollections = atNewLine || allowCompact), (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) && (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext ? flowIndent = parentIndent : flowIndent = parentIndent + 1, blockIndent = state.position - state.lineStart, indentStatus === 1 ? allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent) ? hasContent = !0 : (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent) ? hasContent = !0 : readAlias(state) ? (hasContent = !0, (state.tag !== null || state.anchor !== null) && throwError(state, "alias node should not have any properties")) : readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext) && (hasContent = !0, state.tag === null && (state.tag = "?")), state.anchor !== null && (state.anchorMap[state.anchor] = state.result)) : indentStatus === 0 && (hasContent = allowBlockCollections && readBlockSequence(state, blockIndent))), state.tag !== null && state.tag !== "!")
        if (state.tag === "?") {
          for (state.result !== null && state.kind !== "scalar" && throwError(state, 'unacceptable node kind for !<?> tag; it should be "scalar", not "' + state.kind + '"'), typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1)
            if (type = state.implicitTypes[typeIndex], type.resolve(state.result)) {
              state.result = type.construct(state.result), state.tag = type.tag, state.anchor !== null && (state.anchorMap[state.anchor] = state.result);
              break;
            }
        } else
          _hasOwnProperty.call(state.typeMap[state.kind || "fallback"], state.tag) ? (type = state.typeMap[state.kind || "fallback"][state.tag], state.result !== null && type.kind !== state.kind && throwError(state, "unacceptable node kind for !<" + state.tag + '> tag; it should be "' + type.kind + '", not "' + state.kind + '"'), type.resolve(state.result) ? (state.result = type.construct(state.result), state.anchor !== null && (state.anchorMap[state.anchor] = state.result)) : throwError(state, "cannot resolve a node with !<" + state.tag + "> explicit tag")) : throwError(state, "unknown tag !<" + state.tag + ">");
      return state.listener !== null && state.listener("close", state), state.tag !== null || state.anchor !== null || hasContent;
    }
    function readDocument(state) {
      var documentStart = state.position, _position, directiveName, directiveArgs, hasDirectives = !1, ch;
      for (state.version = null, state.checkLineBreaks = state.legacy, state.tagMap = {}, state.anchorMap = {}; (ch = state.input.charCodeAt(state.position)) !== 0 && (skipSeparationSpace(state, !0, -1), ch = state.input.charCodeAt(state.position), !(state.lineIndent > 0 || ch !== 37)); ) {
        for (hasDirectives = !0, ch = state.input.charCodeAt(++state.position), _position = state.position; ch !== 0 && !is_WS_OR_EOL(ch); )
          ch = state.input.charCodeAt(++state.position);
        for (directiveName = state.input.slice(_position, state.position), directiveArgs = [], directiveName.length < 1 && throwError(state, "directive name must not be less than one character in length"); ch !== 0; ) {
          for (; is_WHITE_SPACE(ch); )
            ch = state.input.charCodeAt(++state.position);
          if (ch === 35) {
            do
              ch = state.input.charCodeAt(++state.position);
            while (ch !== 0 && !is_EOL(ch));
            break;
          }
          if (is_EOL(ch))
            break;
          for (_position = state.position; ch !== 0 && !is_WS_OR_EOL(ch); )
            ch = state.input.charCodeAt(++state.position);
          directiveArgs.push(state.input.slice(_position, state.position));
        }
        ch !== 0 && readLineBreak(state), _hasOwnProperty.call(directiveHandlers, directiveName) ? directiveHandlers[directiveName](state, directiveName, directiveArgs) : throwWarning(state, 'unknown document directive "' + directiveName + '"');
      }
      if (skipSeparationSpace(state, !0, -1), state.lineIndent === 0 && state.input.charCodeAt(state.position) === 45 && state.input.charCodeAt(state.position + 1) === 45 && state.input.charCodeAt(state.position + 2) === 45 ? (state.position += 3, skipSeparationSpace(state, !0, -1)) : hasDirectives && throwError(state, "directives end mark is expected"), composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, !1, !0), skipSeparationSpace(state, !0, -1), state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position)) && throwWarning(state, "non-ASCII line breaks are interpreted as content"), state.documents.push(state.result), state.position === state.lineStart && testDocumentSeparator(state)) {
        state.input.charCodeAt(state.position) === 46 && (state.position += 3, skipSeparationSpace(state, !0, -1));
        return;
      }
      if (state.position < state.length - 1)
        throwError(state, "end of the stream or a document separator is expected");
      else
        return;
    }
    function loadDocuments(input, options2) {
      input = String(input), options2 = options2 || {}, input.length !== 0 && (input.charCodeAt(input.length - 1) !== 10 && input.charCodeAt(input.length - 1) !== 13 && (input += `
`), input.charCodeAt(0) === 65279 && (input = input.slice(1)));
      var state = new State2(input, options2), nullpos = input.indexOf("\0");
      for (nullpos !== -1 && (state.position = nullpos, throwError(state, "null byte is not allowed in input")), state.input += "\0"; state.input.charCodeAt(state.position) === 32; )
        state.lineIndent += 1, state.position += 1;
      for (; state.position < state.length - 1; )
        readDocument(state);
      return state.documents;
    }
    function loadAll(input, iterator, options2) {
      iterator !== null && typeof iterator == "object" && typeof options2 > "u" && (options2 = iterator, iterator = null);
      var documents = loadDocuments(input, options2);
      if (typeof iterator != "function")
        return documents;
      for (var index2 = 0, length = documents.length; index2 < length; index2 += 1)
        iterator(documents[index2]);
    }
    function load(input, options2) {
      var documents = loadDocuments(input, options2);
      if (documents.length !== 0) {
        if (documents.length === 1)
          return documents[0];
        throw new YAMLException("expected a single document in the stream, but found more");
      }
    }
    function safeLoadAll(input, iterator, options2) {
      return typeof iterator == "object" && iterator !== null && typeof options2 > "u" && (options2 = iterator, iterator = null), loadAll(input, iterator, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options2));
    }
    function safeLoad(input, options2) {
      return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options2));
    }
    module2.exports.loadAll = loadAll;
    module2.exports.load = load;
    module2.exports.safeLoadAll = safeLoadAll;
    module2.exports.safeLoad = safeLoad;
  }
});

// node_modules/js-yaml/lib/js-yaml/dumper.js
var require_dumper = __commonJS({
  "node_modules/js-yaml/lib/js-yaml/dumper.js"(exports2, module2) {
    "use strict";
    var common = require_common(), YAMLException = require_exception(), DEFAULT_FULL_SCHEMA = require_default_full(), DEFAULT_SAFE_SCHEMA = require_default_safe(), _toString = Object.prototype.toString, _hasOwnProperty = Object.prototype.hasOwnProperty, CHAR_TAB = 9, CHAR_LINE_FEED = 10, CHAR_CARRIAGE_RETURN = 13, CHAR_SPACE = 32, CHAR_EXCLAMATION = 33, CHAR_DOUBLE_QUOTE = 34, CHAR_SHARP = 35, CHAR_PERCENT = 37, CHAR_AMPERSAND = 38, CHAR_SINGLE_QUOTE = 39, CHAR_ASTERISK = 42, CHAR_COMMA = 44, CHAR_MINUS = 45, CHAR_COLON = 58, CHAR_EQUALS = 61, CHAR_GREATER_THAN = 62, CHAR_QUESTION = 63, CHAR_COMMERCIAL_AT = 64, CHAR_LEFT_SQUARE_BRACKET = 91, CHAR_RIGHT_SQUARE_BRACKET = 93, CHAR_GRAVE_ACCENT = 96, CHAR_LEFT_CURLY_BRACKET = 123, CHAR_VERTICAL_LINE = 124, CHAR_RIGHT_CURLY_BRACKET = 125, ESCAPE_SEQUENCES = {};
    ESCAPE_SEQUENCES[0] = "\\0";
    ESCAPE_SEQUENCES[7] = "\\a";
    ESCAPE_SEQUENCES[8] = "\\b";
    ESCAPE_SEQUENCES[9] = "\\t";
    ESCAPE_SEQUENCES[10] = "\\n";
    ESCAPE_SEQUENCES[11] = "\\v";
    ESCAPE_SEQUENCES[12] = "\\f";
    ESCAPE_SEQUENCES[13] = "\\r";
    ESCAPE_SEQUENCES[27] = "\\e";
    ESCAPE_SEQUENCES[34] = '\\"';
    ESCAPE_SEQUENCES[92] = "\\\\";
    ESCAPE_SEQUENCES[133] = "\\N";
    ESCAPE_SEQUENCES[160] = "\\_";
    ESCAPE_SEQUENCES[8232] = "\\L";
    ESCAPE_SEQUENCES[8233] = "\\P";
    var DEPRECATED_BOOLEANS_SYNTAX = [
      "y",
      "Y",
      "yes",
      "Yes",
      "YES",
      "on",
      "On",
      "ON",
      "n",
      "N",
      "no",
      "No",
      "NO",
      "off",
      "Off",
      "OFF"
    ];
    function compileStyleMap(schema, map2) {
      var result, keys2, index2, length, tag, style2, type;
      if (map2 === null)
        return {};
      for (result = {}, keys2 = Object.keys(map2), index2 = 0, length = keys2.length; index2 < length; index2 += 1)
        tag = keys2[index2], style2 = String(map2[tag]), tag.slice(0, 2) === "!!" && (tag = "tag:yaml.org,2002:" + tag.slice(2)), type = schema.compiledTypeMap.fallback[tag], type && _hasOwnProperty.call(type.styleAliases, style2) && (style2 = type.styleAliases[style2]), result[tag] = style2;
      return result;
    }
    function encodeHex(character) {
      var string3, handle2, length;
      if (string3 = character.toString(16).toUpperCase(), character <= 255)
        handle2 = "x", length = 2;
      else if (character <= 65535)
        handle2 = "u", length = 4;
      else if (character <= 4294967295)
        handle2 = "U", length = 8;
      else
        throw new YAMLException("code point within a string may not be greater than 0xFFFFFFFF");
      return "\\" + handle2 + common.repeat("0", length - string3.length) + string3;
    }
    function State2(options2) {
      this.schema = options2.schema || DEFAULT_FULL_SCHEMA, this.indent = Math.max(1, options2.indent || 2), this.noArrayIndent = options2.noArrayIndent || !1, this.skipInvalid = options2.skipInvalid || !1, this.flowLevel = common.isNothing(options2.flowLevel) ? -1 : options2.flowLevel, this.styleMap = compileStyleMap(this.schema, options2.styles || null), this.sortKeys = options2.sortKeys || !1, this.lineWidth = options2.lineWidth || 80, this.noRefs = options2.noRefs || !1, this.noCompatMode = options2.noCompatMode || !1, this.condenseFlow = options2.condenseFlow || !1, this.implicitTypes = this.schema.compiledImplicit, this.explicitTypes = this.schema.compiledExplicit, this.tag = null, this.result = "", this.duplicates = [], this.usedDuplicates = null;
    }
    function indentString(string3, spaces) {
      for (var ind = common.repeat(" ", spaces), position4 = 0, next = -1, result = "", line, length = string3.length; position4 < length; )
        next = string3.indexOf(`
`, position4), next === -1 ? (line = string3.slice(position4), position4 = length) : (line = string3.slice(position4, next + 1), position4 = next + 1), line.length && line !== `
` && (result += ind), result += line;
      return result;
    }
    function generateNextLine(state, level) {
      return `
` + common.repeat(" ", state.indent * level);
    }
    function testImplicitResolving(state, str2) {
      var index2, length, type;
      for (index2 = 0, length = state.implicitTypes.length; index2 < length; index2 += 1)
        if (type = state.implicitTypes[index2], type.resolve(str2))
          return !0;
      return !1;
    }
    function isWhitespace2(c) {
      return c === CHAR_SPACE || c === CHAR_TAB;
    }
    function isPrintable(c) {
      return 32 <= c && c <= 126 || 161 <= c && c <= 55295 && c !== 8232 && c !== 8233 || 57344 <= c && c <= 65533 && c !== 65279 || 65536 <= c && c <= 1114111;
    }
    function isNsChar(c) {
      return isPrintable(c) && !isWhitespace2(c) && c !== 65279 && c !== CHAR_CARRIAGE_RETURN && c !== CHAR_LINE_FEED;
    }
    function isPlainSafe(c, prev) {
      return isPrintable(c) && c !== 65279 && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET && c !== CHAR_COLON && (c !== CHAR_SHARP || prev && isNsChar(prev));
    }
    function isPlainSafeFirst(c) {
      return isPrintable(c) && c !== 65279 && !isWhitespace2(c) && c !== CHAR_MINUS && c !== CHAR_QUESTION && c !== CHAR_COLON && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET && c !== CHAR_SHARP && c !== CHAR_AMPERSAND && c !== CHAR_ASTERISK && c !== CHAR_EXCLAMATION && c !== CHAR_VERTICAL_LINE && c !== CHAR_EQUALS && c !== CHAR_GREATER_THAN && c !== CHAR_SINGLE_QUOTE && c !== CHAR_DOUBLE_QUOTE && c !== CHAR_PERCENT && c !== CHAR_COMMERCIAL_AT && c !== CHAR_GRAVE_ACCENT;
    }
    function needIndentIndicator(string3) {
      var leadingSpaceRe = /^\n* /;
      return leadingSpaceRe.test(string3);
    }
    var STYLE_PLAIN = 1, STYLE_SINGLE = 2, STYLE_LITERAL = 3, STYLE_FOLDED = 4, STYLE_DOUBLE = 5;
    function chooseScalarStyle(string3, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {
      var i, char, prev_char, hasLineBreak = !1, hasFoldableLine = !1, shouldTrackWidth = lineWidth !== -1, previousLineBreak = -1, plain = isPlainSafeFirst(string3.charCodeAt(0)) && !isWhitespace2(string3.charCodeAt(string3.length - 1));
      if (singleLineOnly)
        for (i = 0; i < string3.length; i++) {
          if (char = string3.charCodeAt(i), !isPrintable(char))
            return STYLE_DOUBLE;
          prev_char = i > 0 ? string3.charCodeAt(i - 1) : null, plain = plain && isPlainSafe(char, prev_char);
        }
      else {
        for (i = 0; i < string3.length; i++) {
          if (char = string3.charCodeAt(i), char === CHAR_LINE_FEED)
            hasLineBreak = !0, shouldTrackWidth && (hasFoldableLine = hasFoldableLine || i - previousLineBreak - 1 > lineWidth && string3[previousLineBreak + 1] !== " ", previousLineBreak = i);
          else if (!isPrintable(char))
            return STYLE_DOUBLE;
          prev_char = i > 0 ? string3.charCodeAt(i - 1) : null, plain = plain && isPlainSafe(char, prev_char);
        }
        hasFoldableLine = hasFoldableLine || shouldTrackWidth && i - previousLineBreak - 1 > lineWidth && string3[previousLineBreak + 1] !== " ";
      }
      return !hasLineBreak && !hasFoldableLine ? plain && !testAmbiguousType(string3) ? STYLE_PLAIN : STYLE_SINGLE : indentPerLevel > 9 && needIndentIndicator(string3) ? STYLE_DOUBLE : hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;
    }
    function writeScalar(state, string3, level, iskey) {
      state.dump = function() {
        if (string3.length === 0)
          return "''";
        if (!state.noCompatMode && DEPRECATED_BOOLEANS_SYNTAX.indexOf(string3) !== -1)
          return "'" + string3 + "'";
        var indent2 = state.indent * Math.max(1, level), lineWidth = state.lineWidth === -1 ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent2), singleLineOnly = iskey || state.flowLevel > -1 && level >= state.flowLevel;
        function testAmbiguity(string4) {
          return testImplicitResolving(state, string4);
        }
        switch (chooseScalarStyle(string3, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {
          case STYLE_PLAIN:
            return string3;
          case STYLE_SINGLE:
            return "'" + string3.replace(/'/g, "''") + "'";
          case STYLE_LITERAL:
            return "|" + blockHeader(string3, state.indent) + dropEndingNewline(indentString(string3, indent2));
          case STYLE_FOLDED:
            return ">" + blockHeader(string3, state.indent) + dropEndingNewline(indentString(foldString(string3, lineWidth), indent2));
          case STYLE_DOUBLE:
            return '"' + escapeString(string3, lineWidth) + '"';
          default:
            throw new YAMLException("impossible error: invalid scalar style");
        }
      }();
    }
    function blockHeader(string3, indentPerLevel) {
      var indentIndicator = needIndentIndicator(string3) ? String(indentPerLevel) : "", clip = string3[string3.length - 1] === `
`, keep = clip && (string3[string3.length - 2] === `
` || string3 === `
`), chomp = keep ? "+" : clip ? "" : "-";
      return indentIndicator + chomp + `
`;
    }
    function dropEndingNewline(string3) {
      return string3[string3.length - 1] === `
` ? string3.slice(0, -1) : string3;
    }
    function foldString(string3, width) {
      for (var lineRe = /(\n+)([^\n]*)/g, result = function() {
        var nextLF = string3.indexOf(`
`);
        return nextLF = nextLF !== -1 ? nextLF : string3.length, lineRe.lastIndex = nextLF, foldLine(string3.slice(0, nextLF), width);
      }(), prevMoreIndented = string3[0] === `
` || string3[0] === " ", moreIndented, match; match = lineRe.exec(string3); ) {
        var prefix = match[1], line = match[2];
        moreIndented = line[0] === " ", result += prefix + (!prevMoreIndented && !moreIndented && line !== "" ? `
` : "") + foldLine(line, width), prevMoreIndented = moreIndented;
      }
      return result;
    }
    function foldLine(line, width) {
      if (line === "" || line[0] === " ")
        return line;
      for (var breakRe = / [^ ]/g, match, start = 0, end, curr = 0, next = 0, result = ""; match = breakRe.exec(line); )
        next = match.index, next - start > width && (end = curr > start ? curr : next, result += `
` + line.slice(start, end), start = end + 1), curr = next;
      return result += `
`, line.length - start > width && curr > start ? result += line.slice(start, curr) + `
` + line.slice(curr + 1) : result += line.slice(start), result.slice(1);
    }
    function escapeString(string3) {
      for (var result = "", char, nextChar, escapeSeq, i = 0; i < string3.length; i++) {
        if (char = string3.charCodeAt(i), char >= 55296 && char <= 56319 && (nextChar = string3.charCodeAt(i + 1), nextChar >= 56320 && nextChar <= 57343)) {
          result += encodeHex((char - 55296) * 1024 + nextChar - 56320 + 65536), i++;
          continue;
        }
        escapeSeq = ESCAPE_SEQUENCES[char], result += !escapeSeq && isPrintable(char) ? string3[i] : escapeSeq || encodeHex(char);
      }
      return result;
    }
    function writeFlowSequence(state, level, object) {
      var _result = "", _tag = state.tag, index2, length;
      for (index2 = 0, length = object.length; index2 < length; index2 += 1)
        writeNode(state, level, object[index2], !1, !1) && (index2 !== 0 && (_result += "," + (state.condenseFlow ? "" : " ")), _result += state.dump);
      state.tag = _tag, state.dump = "[" + _result + "]";
    }
    function writeBlockSequence(state, level, object, compact) {
      var _result = "", _tag = state.tag, index2, length;
      for (index2 = 0, length = object.length; index2 < length; index2 += 1)
        writeNode(state, level + 1, object[index2], !0, !0) && ((!compact || index2 !== 0) && (_result += generateNextLine(state, level)), state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0) ? _result += "-" : _result += "- ", _result += state.dump);
      state.tag = _tag, state.dump = _result || "[]";
    }
    function writeFlowMapping(state, level, object) {
      var _result = "", _tag = state.tag, objectKeyList = Object.keys(object), index2, length, objectKey, objectValue, pairBuffer;
      for (index2 = 0, length = objectKeyList.length; index2 < length; index2 += 1)
        pairBuffer = "", index2 !== 0 && (pairBuffer += ", "), state.condenseFlow && (pairBuffer += '"'), objectKey = objectKeyList[index2], objectValue = object[objectKey], writeNode(state, level, objectKey, !1, !1) && (state.dump.length > 1024 && (pairBuffer += "? "), pairBuffer += state.dump + (state.condenseFlow ? '"' : "") + ":" + (state.condenseFlow ? "" : " "), writeNode(state, level, objectValue, !1, !1) && (pairBuffer += state.dump, _result += pairBuffer));
      state.tag = _tag, state.dump = "{" + _result + "}";
    }
    function writeBlockMapping(state, level, object, compact) {
      var _result = "", _tag = state.tag, objectKeyList = Object.keys(object), index2, length, objectKey, objectValue, explicitPair, pairBuffer;
      if (state.sortKeys === !0)
        objectKeyList.sort();
      else if (typeof state.sortKeys == "function")
        objectKeyList.sort(state.sortKeys);
      else if (state.sortKeys)
        throw new YAMLException("sortKeys must be a boolean or a function");
      for (index2 = 0, length = objectKeyList.length; index2 < length; index2 += 1)
        pairBuffer = "", (!compact || index2 !== 0) && (pairBuffer += generateNextLine(state, level)), objectKey = objectKeyList[index2], objectValue = object[objectKey], writeNode(state, level + 1, objectKey, !0, !0, !0) && (explicitPair = state.tag !== null && state.tag !== "?" || state.dump && state.dump.length > 1024, explicitPair && (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0) ? pairBuffer += "?" : pairBuffer += "? "), pairBuffer += state.dump, explicitPair && (pairBuffer += generateNextLine(state, level)), writeNode(state, level + 1, objectValue, !0, explicitPair) && (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0) ? pairBuffer += ":" : pairBuffer += ": ", pairBuffer += state.dump, _result += pairBuffer));
      state.tag = _tag, state.dump = _result || "{}";
    }
    function detectType(state, object, explicit) {
      var _result, typeList, index2, length, type, style2;
      for (typeList = explicit ? state.explicitTypes : state.implicitTypes, index2 = 0, length = typeList.length; index2 < length; index2 += 1)
        if (type = typeList[index2], (type.instanceOf || type.predicate) && (!type.instanceOf || typeof object == "object" && object instanceof type.instanceOf) && (!type.predicate || type.predicate(object))) {
          if (state.tag = explicit ? type.tag : "?", type.represent) {
            if (style2 = state.styleMap[type.tag] || type.defaultStyle, _toString.call(type.represent) === "[object Function]")
              _result = type.represent(object, style2);
            else if (_hasOwnProperty.call(type.represent, style2))
              _result = type.represent[style2](object, style2);
            else
              throw new YAMLException("!<" + type.tag + '> tag resolver accepts not "' + style2 + '" style');
            state.dump = _result;
          }
          return !0;
        }
      return !1;
    }
    function writeNode(state, level, object, block, compact, iskey) {
      state.tag = null, state.dump = object, detectType(state, object, !1) || detectType(state, object, !0);
      var type = _toString.call(state.dump);
      block && (block = state.flowLevel < 0 || state.flowLevel > level);
      var objectOrArray = type === "[object Object]" || type === "[object Array]", duplicateIndex, duplicate;
      if (objectOrArray && (duplicateIndex = state.duplicates.indexOf(object), duplicate = duplicateIndex !== -1), (state.tag !== null && state.tag !== "?" || duplicate || state.indent !== 2 && level > 0) && (compact = !1), duplicate && state.usedDuplicates[duplicateIndex])
        state.dump = "*ref_" + duplicateIndex;
      else {
        if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex] && (state.usedDuplicates[duplicateIndex] = !0), type === "[object Object]")
          block && Object.keys(state.dump).length !== 0 ? (writeBlockMapping(state, level, state.dump, compact), duplicate && (state.dump = "&ref_" + duplicateIndex + state.dump)) : (writeFlowMapping(state, level, state.dump), duplicate && (state.dump = "&ref_" + duplicateIndex + " " + state.dump));
        else if (type === "[object Array]") {
          var arrayLevel = state.noArrayIndent && level > 0 ? level - 1 : level;
          block && state.dump.length !== 0 ? (writeBlockSequence(state, arrayLevel, state.dump, compact), duplicate && (state.dump = "&ref_" + duplicateIndex + state.dump)) : (writeFlowSequence(state, arrayLevel, state.dump), duplicate && (state.dump = "&ref_" + duplicateIndex + " " + state.dump));
        } else if (type === "[object String]")
          state.tag !== "?" && writeScalar(state, state.dump, level, iskey);
        else {
          if (state.skipInvalid)
            return !1;
          throw new YAMLException("unacceptable kind of an object to dump " + type);
        }
        state.tag !== null && state.tag !== "?" && (state.dump = "!<" + state.tag + "> " + state.dump);
      }
      return !0;
    }
    function getDuplicateReferences(object, state) {
      var objects = [], duplicatesIndexes = [], index2, length;
      for (inspectNode(object, objects, duplicatesIndexes), index2 = 0, length = duplicatesIndexes.length; index2 < length; index2 += 1)
        state.duplicates.push(objects[duplicatesIndexes[index2]]);
      state.usedDuplicates = new Array(length);
    }
    function inspectNode(object, objects, duplicatesIndexes) {
      var objectKeyList, index2, length;
      if (object !== null && typeof object == "object")
        if (index2 = objects.indexOf(object), index2 !== -1)
          duplicatesIndexes.indexOf(index2) === -1 && duplicatesIndexes.push(index2);
        else if (objects.push(object), Array.isArray(object))
          for (index2 = 0, length = object.length; index2 < length; index2 += 1)
            inspectNode(object[index2], objects, duplicatesIndexes);
        else
          for (objectKeyList = Object.keys(object), index2 = 0, length = objectKeyList.length; index2 < length; index2 += 1)
            inspectNode(object[objectKeyList[index2]], objects, duplicatesIndexes);
    }
    function dump(input, options2) {
      options2 = options2 || {};
      var state = new State2(options2);
      return state.noRefs || getDuplicateReferences(input, state), writeNode(state, 0, input, !0, !0) ? state.dump + `
` : "";
    }
    function safeDump(input, options2) {
      return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options2));
    }
    module2.exports.dump = dump;
    module2.exports.safeDump = safeDump;
  }
});

// node_modules/js-yaml/lib/js-yaml.js
var require_js_yaml = __commonJS({
  "node_modules/js-yaml/lib/js-yaml.js"(exports2, module2) {
    "use strict";
    var loader12 = require_loader(), dumper = require_dumper();
    function deprecated(name) {
      return function() {
        throw new Error("Function " + name + " is deprecated and cannot be used.");
      };
    }
    module2.exports.Type = require_type();
    module2.exports.Schema = require_schema();
    module2.exports.FAILSAFE_SCHEMA = require_failsafe();
    module2.exports.JSON_SCHEMA = require_json();
    module2.exports.CORE_SCHEMA = require_core();
    module2.exports.DEFAULT_SAFE_SCHEMA = require_default_safe();
    module2.exports.DEFAULT_FULL_SCHEMA = require_default_full();
    module2.exports.load = loader12.load;
    module2.exports.loadAll = loader12.loadAll;
    module2.exports.safeLoad = loader12.safeLoad;
    module2.exports.safeLoadAll = loader12.safeLoadAll;
    module2.exports.dump = dumper.dump;
    module2.exports.safeDump = dumper.safeDump;
    module2.exports.YAMLException = require_exception();
    module2.exports.MINIMAL_SCHEMA = require_failsafe();
    module2.exports.SAFE_SCHEMA = require_default_safe();
    module2.exports.DEFAULT_SCHEMA = require_default_full();
    module2.exports.scan = deprecated("scan");
    module2.exports.parse = deprecated("parse");
    module2.exports.compose = deprecated("compose");
    module2.exports.addConstructor = deprecated("addConstructor");
  }
});

// node_modules/js-yaml/index.js
var require_js_yaml2 = __commonJS({
  "node_modules/js-yaml/index.js"(exports2, module2) {
    "use strict";
    var yaml2 = require_js_yaml();
    module2.exports = yaml2;
  }
});

// node_modules/gray-matter/lib/engines.js
var require_engines = __commonJS({
  "node_modules/gray-matter/lib/engines.js"(exports, module) {
    "use strict";
    var yaml = require_js_yaml2(), engines = exports = module.exports;
    engines.yaml = {
      parse: yaml.safeLoad.bind(yaml),
      stringify: yaml.safeDump.bind(yaml)
    };
    engines.json = {
      parse: JSON.parse.bind(JSON),
      stringify: function(obj, options2) {
        let opts = Object.assign({ replacer: null, space: 2 }, options2);
        return JSON.stringify(obj, opts.replacer, opts.space);
      }
    };
    engines.javascript = {
      parse: function parse(str, options, wrap) {
        try {
          return wrap !== !1 && (str = `(function() {
return ` + str.trim() + `;
}());`), eval(str) || {};
        } catch (err) {
          if (wrap !== !1 && /(unexpected|identifier)/i.test(err.message))
            return parse(str, options, !1);
          throw new SyntaxError(err);
        }
      },
      stringify: function() {
        throw new Error("stringifying JavaScript is not supported");
      }
    };
  }
});

// node_modules/strip-bom-string/index.js
var require_strip_bom_string = __commonJS({
  "node_modules/strip-bom-string/index.js"(exports2, module2) {
    "use strict";
    module2.exports = function(str2) {
      return typeof str2 == "string" && str2.charAt(0) === "\uFEFF" ? str2.slice(1) : str2;
    };
  }
});

// node_modules/gray-matter/lib/utils.js
var require_utils5 = __commonJS({
  "node_modules/gray-matter/lib/utils.js"(exports2) {
    "use strict";
    var stripBom = require_strip_bom_string(), typeOf = require_kind_of();
    exports2.define = function(obj, key2, val) {
      Reflect.defineProperty(obj, key2, {
        enumerable: !1,
        configurable: !0,
        writable: !0,
        value: val
      });
    };
    exports2.isBuffer = function(val) {
      return typeOf(val) === "buffer";
    };
    exports2.isObject = function(val) {
      return typeOf(val) === "object";
    };
    exports2.toBuffer = function(input) {
      return typeof input == "string" ? Buffer.from(input) : input;
    };
    exports2.toString = function(input) {
      if (exports2.isBuffer(input))
        return stripBom(String(input));
      if (typeof input != "string")
        throw new TypeError("expected input to be a string or buffer");
      return stripBom(input);
    };
    exports2.arrayify = function(val) {
      return val ? Array.isArray(val) ? val : [val] : [];
    };
    exports2.startsWith = function(str2, substr, len) {
      return typeof len != "number" && (len = substr.length), str2.slice(0, len) === substr;
    };
  }
});

// node_modules/gray-matter/lib/defaults.js
var require_defaults = __commonJS({
  "node_modules/gray-matter/lib/defaults.js"(exports2, module2) {
    "use strict";
    var engines2 = require_engines(), utils = require_utils5();
    module2.exports = function(options2) {
      let opts = Object.assign({}, options2);
      return opts.delimiters = utils.arrayify(opts.delims || opts.delimiters || "---"), opts.delimiters.length === 1 && opts.delimiters.push(opts.delimiters[0]), opts.language = (opts.language || opts.lang || "yaml").toLowerCase(), opts.engines = Object.assign({}, engines2, opts.parsers, opts.engines), opts;
    };
  }
});

// node_modules/gray-matter/lib/engine.js
var require_engine = __commonJS({
  "node_modules/gray-matter/lib/engine.js"(exports2, module2) {
    "use strict";
    module2.exports = function(name, options2) {
      let engine = options2.engines[name] || options2.engines[aliase(name)];
      if (typeof engine > "u")
        throw new Error('gray-matter engine "' + name + '" is not registered');
      return typeof engine == "function" && (engine = { parse: engine }), engine;
    };
    function aliase(name) {
      switch (name.toLowerCase()) {
        case "js":
        case "javascript":
          return "javascript";
        case "coffee":
        case "coffeescript":
        case "cson":
          return "coffee";
        case "yaml":
        case "yml":
          return "yaml";
        default:
          return name;
      }
    }
  }
});

// node_modules/gray-matter/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/gray-matter/lib/stringify.js"(exports2, module2) {
    "use strict";
    var typeOf = require_kind_of(), getEngine = require_engine(), defaults = require_defaults();
    module2.exports = function(file, data, options2) {
      if (data == null && options2 == null)
        switch (typeOf(file)) {
          case "object":
            data = file.data, options2 = {};
            break;
          case "string":
            return file;
          default:
            throw new TypeError("expected file to be a string or object");
        }
      let str2 = file.content, opts = defaults(options2);
      if (data == null) {
        if (!opts.data)
          return file;
        data = opts.data;
      }
      let language = file.language || opts.language, engine = getEngine(language, opts);
      if (typeof engine.stringify != "function")
        throw new TypeError('expected "' + language + '.stringify" to be a function');
      data = Object.assign({}, file.data, data);
      let open = opts.delimiters[0], close = opts.delimiters[1], matter5 = engine.stringify(data, options2).trim(), buf = "";
      return matter5 !== "{}" && (buf = newline(open) + newline(matter5) + newline(close)), typeof file.excerpt == "string" && file.excerpt !== "" && str2.indexOf(file.excerpt.trim()) === -1 && (buf += newline(file.excerpt) + newline(close)), buf + newline(str2);
    };
    function newline(str2) {
      return str2.slice(-1) !== `
` ? str2 + `
` : str2;
    }
  }
});

// node_modules/gray-matter/lib/excerpt.js
var require_excerpt = __commonJS({
  "node_modules/gray-matter/lib/excerpt.js"(exports2, module2) {
    "use strict";
    var defaults = require_defaults();
    module2.exports = function(file, options2) {
      let opts = defaults(options2);
      if (file.data == null && (file.data = {}), typeof opts.excerpt == "function")
        return opts.excerpt(file, opts);
      let sep = file.data.excerpt_separator || opts.excerpt_separator;
      if (sep == null && (opts.excerpt === !1 || opts.excerpt == null))
        return file;
      let delimiter = typeof opts.excerpt == "string" ? opts.excerpt : sep || opts.delimiters[0], idx = file.content.indexOf(delimiter);
      return idx !== -1 && (file.excerpt = file.content.slice(0, idx)), file;
    };
  }
});

// node_modules/gray-matter/lib/to-file.js
var require_to_file = __commonJS({
  "node_modules/gray-matter/lib/to-file.js"(exports2, module2) {
    "use strict";
    var typeOf = require_kind_of(), stringify3 = require_stringify(), utils = require_utils5();
    module2.exports = function(file) {
      return typeOf(file) !== "object" && (file = { content: file }), typeOf(file.data) !== "object" && (file.data = {}), file.contents && file.content == null && (file.content = file.contents), utils.define(file, "orig", utils.toBuffer(file.content)), utils.define(file, "language", file.language || ""), utils.define(file, "matter", file.matter || ""), utils.define(file, "stringify", function(data, options2) {
        return options2 && options2.language && (file.language = options2.language), stringify3(file, data, options2);
      }), file.content = utils.toString(file.content), file.isEmpty = !1, file.excerpt = "", file;
    };
  }
});

// node_modules/gray-matter/lib/parse.js
var require_parse2 = __commonJS({
  "node_modules/gray-matter/lib/parse.js"(exports2, module2) {
    "use strict";
    var getEngine = require_engine(), defaults = require_defaults();
    module2.exports = function(language, str2, options2) {
      let opts = defaults(options2), engine = getEngine(language, opts);
      if (typeof engine.parse != "function")
        throw new TypeError('expected "' + language + '.parse" to be a function');
      return engine.parse(str2, opts);
    };
  }
});

// node_modules/gray-matter/index.js
var require_gray_matter = __commonJS({
  "node_modules/gray-matter/index.js"(exports2, module2) {
    "use strict";
    var fs4 = require("fs"), sections = require_section_matter(), defaults = require_defaults(), stringify3 = require_stringify(), excerpt = require_excerpt(), engines2 = require_engines(), toFile = require_to_file(), parse6 = require_parse2(), utils = require_utils5();
    function matter5(input, options2) {
      if (input === "")
        return { data: {}, content: input, excerpt: "", orig: input };
      let file = toFile(input), cached = matter5.cache[file.content];
      if (!options2) {
        if (cached)
          return file = Object.assign({}, cached), file.orig = cached.orig, file;
        matter5.cache[file.content] = file;
      }
      return parseMatter(file, options2);
    }
    function parseMatter(file, options2) {
      let opts = defaults(options2), open = opts.delimiters[0], close = `
` + opts.delimiters[1], str2 = file.content;
      opts.language && (file.language = opts.language);
      let openLen = open.length;
      if (!utils.startsWith(str2, open, openLen))
        return excerpt(file, opts), file;
      if (str2.charAt(openLen) === open.slice(-1))
        return file;
      str2 = str2.slice(openLen);
      let len = str2.length, language = matter5.language(str2, opts);
      language.name && (file.language = language.name, str2 = str2.slice(language.raw.length));
      let closeIndex = str2.indexOf(close);
      return closeIndex === -1 && (closeIndex = len), file.matter = str2.slice(0, closeIndex), file.matter.replace(/^\s*#[^\n]+/gm, "").trim() === "" ? (file.isEmpty = !0, file.empty = file.content, file.data = {}) : file.data = parse6(file.language, file.matter, opts), closeIndex === len ? file.content = "" : (file.content = str2.slice(closeIndex + close.length), file.content[0] === "\r" && (file.content = file.content.slice(1)), file.content[0] === `
` && (file.content = file.content.slice(1))), excerpt(file, opts), (opts.sections === !0 || typeof opts.section == "function") && sections(file, opts.section), file;
    }
    matter5.engines = engines2;
    matter5.stringify = function(file, data, options2) {
      return typeof file == "string" && (file = matter5(file, options2)), stringify3(file, data, options2);
    };
    matter5.read = function(filepath, options2) {
      let str2 = fs4.readFileSync(filepath, "utf8"), file = matter5(str2, options2);
      return file.path = filepath, file;
    };
    matter5.test = function(str2, options2) {
      return utils.startsWith(str2, defaults(options2).delimiters[0]);
    };
    matter5.language = function(str2, options2) {
      let open = defaults(options2).delimiters[0];
      matter5.test(str2) && (str2 = str2.slice(open.length));
      let language = str2.slice(0, str2.search(/\r?\n/));
      return {
        raw: language,
        name: language ? language.trim() : ""
      };
    };
    matter5.cache = {};
    matter5.clearCache = function() {
      matter5.cache = {};
    };
    module2.exports = matter5;
  }
});

// node_modules/unist-util-is/lib/index.js
function anyFactory2(tests) {
  let checks2 = [], index2 = -1;
  for (; ++index2 < tests.length; )
    checks2[index2] = convert(tests[index2]);
  return castFactory2(any);
  function any(...parameters) {
    let index3 = -1;
    for (; ++index3 < checks2.length; )
      if (checks2[index3].call(this, ...parameters))
        return !0;
    return !1;
  }
}
function propsFactory(check) {
  return castFactory2(all6);
  function all6(node2) {
    let key2;
    for (key2 in check)
      if (node2[key2] !== check[key2])
        return !1;
    return !0;
  }
}
function typeFactory(check) {
  return castFactory2(type);
  function type(node2) {
    return node2 && node2.type === check;
  }
}
function castFactory2(check) {
  return assertion;
  function assertion(node2, ...parameters) {
    return Boolean(
      node2 && typeof node2 == "object" && "type" in node2 && Boolean(check.call(this, node2, ...parameters))
    );
  }
}
function ok() {
  return !0;
}
var convert, init_lib5 = __esm({
  "node_modules/unist-util-is/lib/index.js"() {
    convert = function(test) {
      if (test == null)
        return ok;
      if (typeof test == "string")
        return typeFactory(test);
      if (typeof test == "object")
        return Array.isArray(test) ? anyFactory2(test) : propsFactory(test);
      if (typeof test == "function")
        return castFactory2(test);
      throw new Error("Expected function, string, or object as test");
    };
  }
});

// node_modules/unist-util-is/index.js
var init_unist_util_is = __esm({
  "node_modules/unist-util-is/index.js"() {
    init_lib5();
  }
});

// node_modules/unist-util-visit-parents/lib/color.js
function color(d) {
  return "\x1B[33m" + d + "\x1B[39m";
}
var init_color = __esm({
  "node_modules/unist-util-visit-parents/lib/color.js"() {
  }
});

// node_modules/unist-util-visit-parents/lib/index.js
function toResult(value) {
  return Array.isArray(value) ? value : typeof value == "number" ? [CONTINUE, value] : [value];
}
var CONTINUE, EXIT, SKIP, visitParents, init_lib6 = __esm({
  "node_modules/unist-util-visit-parents/lib/index.js"() {
    init_unist_util_is();
    init_color();
    CONTINUE = !0, EXIT = !1, SKIP = "skip", visitParents = function(tree, test, visitor, reverse) {
      typeof test == "function" && typeof visitor != "function" && (reverse = visitor, visitor = test, test = null);
      let is2 = convert(test), step = reverse ? -1 : 1;
      factory(tree, void 0, [])();
      function factory(node2, index2, parents) {
        let value = node2 && typeof node2 == "object" ? node2 : {};
        if (typeof value.type == "string") {
          let name = typeof value.tagName == "string" ? value.tagName : typeof value.name == "string" ? value.name : void 0;
          Object.defineProperty(visit2, "name", {
            value: "node (" + color(node2.type + (name ? "<" + name + ">" : "")) + ")"
          });
        }
        return visit2;
        function visit2() {
          let result = [], subresult, offset, grandparents;
          if ((!test || is2(node2, index2, parents[parents.length - 1] || null)) && (result = toResult(visitor(node2, parents)), result[0] === EXIT))
            return result;
          if (node2.children && result[0] !== SKIP)
            for (offset = (reverse ? node2.children.length : -1) + step, grandparents = parents.concat(node2); offset > -1 && offset < node2.children.length; ) {
              if (subresult = factory(node2.children[offset], offset, grandparents)(), subresult[0] === EXIT)
                return subresult;
              offset = typeof subresult[1] == "number" ? subresult[1] : offset + step;
            }
          return result;
        }
      }
    };
  }
});

// node_modules/unist-util-visit-parents/index.js
var init_unist_util_visit_parents = __esm({
  "node_modules/unist-util-visit-parents/index.js"() {
    init_lib6();
  }
});

// node_modules/unist-util-visit/lib/index.js
var visit, init_lib7 = __esm({
  "node_modules/unist-util-visit/lib/index.js"() {
    init_unist_util_visit_parents();
    init_unist_util_visit_parents();
    visit = function(tree, test, visitor, reverse) {
      typeof test == "function" && typeof visitor != "function" && (reverse = visitor, visitor = test, test = null), visitParents(tree, test, overload, reverse);
      function overload(node2, parents) {
        let parent = parents[parents.length - 1];
        return visitor(
          node2,
          parent ? parent.children.indexOf(node2) : null,
          parent
        );
      }
    };
  }
});

// node_modules/unist-util-visit/index.js
var unist_util_visit_exports = {};
__export(unist_util_visit_exports, {
  CONTINUE: () => CONTINUE,
  EXIT: () => EXIT,
  SKIP: () => SKIP,
  visit: () => visit
});
var init_unist_util_visit = __esm({
  "node_modules/unist-util-visit/index.js"() {
    init_lib7();
  }
});

// node_modules/parse5/dist/common/unicode.js
function isSurrogate(cp) {
  return cp >= 55296 && cp <= 57343;
}
function isSurrogatePair(cp) {
  return cp >= 56320 && cp <= 57343;
}
function getSurrogatePairCodePoint(cp1, cp2) {
  return (cp1 - 55296) * 1024 + 9216 + cp2;
}
function isControlCodePoint(cp) {
  return cp !== 32 && cp !== 10 && cp !== 13 && cp !== 9 && cp !== 12 && cp >= 1 && cp <= 31 || cp >= 127 && cp <= 159;
}
function isUndefinedCodePoint(cp) {
  return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS.has(cp);
}
var UNDEFINED_CODE_POINTS, REPLACEMENT_CHARACTER, CODE_POINTS, SEQUENCES, init_unicode = __esm({
  "node_modules/parse5/dist/common/unicode.js"() {
    UNDEFINED_CODE_POINTS = /* @__PURE__ */ new Set([
      65534,
      65535,
      131070,
      131071,
      196606,
      196607,
      262142,
      262143,
      327678,
      327679,
      393214,
      393215,
      458750,
      458751,
      524286,
      524287,
      589822,
      589823,
      655358,
      655359,
      720894,
      720895,
      786430,
      786431,
      851966,
      851967,
      917502,
      917503,
      983038,
      983039,
      1048574,
      1048575,
      1114110,
      1114111
    ]), REPLACEMENT_CHARACTER = "\uFFFD";
    (function(CODE_POINTS2) {
      CODE_POINTS2[CODE_POINTS2.EOF = -1] = "EOF", CODE_POINTS2[CODE_POINTS2.NULL = 0] = "NULL", CODE_POINTS2[CODE_POINTS2.TABULATION = 9] = "TABULATION", CODE_POINTS2[CODE_POINTS2.CARRIAGE_RETURN = 13] = "CARRIAGE_RETURN", CODE_POINTS2[CODE_POINTS2.LINE_FEED = 10] = "LINE_FEED", CODE_POINTS2[CODE_POINTS2.FORM_FEED = 12] = "FORM_FEED", CODE_POINTS2[CODE_POINTS2.SPACE = 32] = "SPACE", CODE_POINTS2[CODE_POINTS2.EXCLAMATION_MARK = 33] = "EXCLAMATION_MARK", CODE_POINTS2[CODE_POINTS2.QUOTATION_MARK = 34] = "QUOTATION_MARK", CODE_POINTS2[CODE_POINTS2.NUMBER_SIGN = 35] = "NUMBER_SIGN", CODE_POINTS2[CODE_POINTS2.AMPERSAND = 38] = "AMPERSAND", CODE_POINTS2[CODE_POINTS2.APOSTROPHE = 39] = "APOSTROPHE", CODE_POINTS2[CODE_POINTS2.HYPHEN_MINUS = 45] = "HYPHEN_MINUS", CODE_POINTS2[CODE_POINTS2.SOLIDUS = 47] = "SOLIDUS", CODE_POINTS2[CODE_POINTS2.DIGIT_0 = 48] = "DIGIT_0", CODE_POINTS2[CODE_POINTS2.DIGIT_9 = 57] = "DIGIT_9", CODE_POINTS2[CODE_POINTS2.SEMICOLON = 59] = "SEMICOLON", CODE_POINTS2[CODE_POINTS2.LESS_THAN_SIGN = 60] = "LESS_THAN_SIGN", CODE_POINTS2[CODE_POINTS2.EQUALS_SIGN = 61] = "EQUALS_SIGN", CODE_POINTS2[CODE_POINTS2.GREATER_THAN_SIGN = 62] = "GREATER_THAN_SIGN", CODE_POINTS2[CODE_POINTS2.QUESTION_MARK = 63] = "QUESTION_MARK", CODE_POINTS2[CODE_POINTS2.LATIN_CAPITAL_A = 65] = "LATIN_CAPITAL_A", CODE_POINTS2[CODE_POINTS2.LATIN_CAPITAL_F = 70] = "LATIN_CAPITAL_F", CODE_POINTS2[CODE_POINTS2.LATIN_CAPITAL_X = 88] = "LATIN_CAPITAL_X", CODE_POINTS2[CODE_POINTS2.LATIN_CAPITAL_Z = 90] = "LATIN_CAPITAL_Z", CODE_POINTS2[CODE_POINTS2.RIGHT_SQUARE_BRACKET = 93] = "RIGHT_SQUARE_BRACKET", CODE_POINTS2[CODE_POINTS2.GRAVE_ACCENT = 96] = "GRAVE_ACCENT", CODE_POINTS2[CODE_POINTS2.LATIN_SMALL_A = 97] = "LATIN_SMALL_A", CODE_POINTS2[CODE_POINTS2.LATIN_SMALL_F = 102] = "LATIN_SMALL_F", CODE_POINTS2[CODE_POINTS2.LATIN_SMALL_X = 120] = "LATIN_SMALL_X", CODE_POINTS2[CODE_POINTS2.LATIN_SMALL_Z = 122] = "LATIN_SMALL_Z", CODE_POINTS2[CODE_POINTS2.REPLACEMENT_CHARACTER = 65533] = "REPLACEMENT_CHARACTER";
    })(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));
    SEQUENCES = {
      DASH_DASH: "--",
      CDATA_START: "[CDATA[",
      DOCTYPE: "doctype",
      SCRIPT: "script",
      PUBLIC: "public",
      SYSTEM: "system"
    };
  }
});

// node_modules/parse5/dist/common/error-codes.js
var ERR, init_error_codes = __esm({
  "node_modules/parse5/dist/common/error-codes.js"() {
    (function(ERR2) {
      ERR2.controlCharacterInInputStream = "control-character-in-input-stream", ERR2.noncharacterInInputStream = "noncharacter-in-input-stream", ERR2.surrogateInInputStream = "surrogate-in-input-stream", ERR2.nonVoidHtmlElementStartTagWithTrailingSolidus = "non-void-html-element-start-tag-with-trailing-solidus", ERR2.endTagWithAttributes = "end-tag-with-attributes", ERR2.endTagWithTrailingSolidus = "end-tag-with-trailing-solidus", ERR2.unexpectedSolidusInTag = "unexpected-solidus-in-tag", ERR2.unexpectedNullCharacter = "unexpected-null-character", ERR2.unexpectedQuestionMarkInsteadOfTagName = "unexpected-question-mark-instead-of-tag-name", ERR2.invalidFirstCharacterOfTagName = "invalid-first-character-of-tag-name", ERR2.unexpectedEqualsSignBeforeAttributeName = "unexpected-equals-sign-before-attribute-name", ERR2.missingEndTagName = "missing-end-tag-name", ERR2.unexpectedCharacterInAttributeName = "unexpected-character-in-attribute-name", ERR2.unknownNamedCharacterReference = "unknown-named-character-reference", ERR2.missingSemicolonAfterCharacterReference = "missing-semicolon-after-character-reference", ERR2.unexpectedCharacterAfterDoctypeSystemIdentifier = "unexpected-character-after-doctype-system-identifier", ERR2.unexpectedCharacterInUnquotedAttributeValue = "unexpected-character-in-unquoted-attribute-value", ERR2.eofBeforeTagName = "eof-before-tag-name", ERR2.eofInTag = "eof-in-tag", ERR2.missingAttributeValue = "missing-attribute-value", ERR2.missingWhitespaceBetweenAttributes = "missing-whitespace-between-attributes", ERR2.missingWhitespaceAfterDoctypePublicKeyword = "missing-whitespace-after-doctype-public-keyword", ERR2.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers = "missing-whitespace-between-doctype-public-and-system-identifiers", ERR2.missingWhitespaceAfterDoctypeSystemKeyword = "missing-whitespace-after-doctype-system-keyword", ERR2.missingQuoteBeforeDoctypePublicIdentifier = "missing-quote-before-doctype-public-identifier", ERR2.missingQuoteBeforeDoctypeSystemIdentifier = "missing-quote-before-doctype-system-identifier", ERR2.missingDoctypePublicIdentifier = "missing-doctype-public-identifier", ERR2.missingDoctypeSystemIdentifier = "missing-doctype-system-identifier", ERR2.abruptDoctypePublicIdentifier = "abrupt-doctype-public-identifier", ERR2.abruptDoctypeSystemIdentifier = "abrupt-doctype-system-identifier", ERR2.cdataInHtmlContent = "cdata-in-html-content", ERR2.incorrectlyOpenedComment = "incorrectly-opened-comment", ERR2.eofInScriptHtmlCommentLikeText = "eof-in-script-html-comment-like-text", ERR2.eofInDoctype = "eof-in-doctype", ERR2.nestedComment = "nested-comment", ERR2.abruptClosingOfEmptyComment = "abrupt-closing-of-empty-comment", ERR2.eofInComment = "eof-in-comment", ERR2.incorrectlyClosedComment = "incorrectly-closed-comment", ERR2.eofInCdata = "eof-in-cdata", ERR2.absenceOfDigitsInNumericCharacterReference = "absence-of-digits-in-numeric-character-reference", ERR2.nullCharacterReference = "null-character-reference", ERR2.surrogateCharacterReference = "surrogate-character-reference", ERR2.characterReferenceOutsideUnicodeRange = "character-reference-outside-unicode-range", ERR2.controlCharacterReference = "control-character-reference", ERR2.noncharacterCharacterReference = "noncharacter-character-reference", ERR2.missingWhitespaceBeforeDoctypeName = "missing-whitespace-before-doctype-name", ERR2.missingDoctypeName = "missing-doctype-name", ERR2.invalidCharacterSequenceAfterDoctypeName = "invalid-character-sequence-after-doctype-name", ERR2.duplicateAttribute = "duplicate-attribute", ERR2.nonConformingDoctype = "non-conforming-doctype", ERR2.missingDoctype = "missing-doctype", ERR2.misplacedDoctype = "misplaced-doctype", ERR2.endTagWithoutMatchingOpenElement = "end-tag-without-matching-open-element", ERR2.closingOfElementWithOpenChildElements = "closing-of-element-with-open-child-elements", ERR2.disallowedContentInNoscriptInHead = "disallowed-content-in-noscript-in-head", ERR2.openElementsLeftAfterEof = "open-elements-left-after-eof", ERR2.abandonedHeadElementChild = "abandoned-head-element-child", ERR2.misplacedStartTagForHeadElement = "misplaced-start-tag-for-head-element", ERR2.nestedNoscriptInHead = "nested-noscript-in-head", ERR2.eofInElementThatCanContainOnlyText = "eof-in-element-that-can-contain-only-text";
    })(ERR = ERR || (ERR = {}));
  }
});

// node_modules/parse5/dist/tokenizer/preprocessor.js
var DEFAULT_BUFFER_WATERLINE, Preprocessor, init_preprocessor = __esm({
  "node_modules/parse5/dist/tokenizer/preprocessor.js"() {
    init_unicode();
    init_error_codes();
    DEFAULT_BUFFER_WATERLINE = 1 << 16, Preprocessor = class {
      constructor(handler) {
        this.handler = handler, this.html = "", this.pos = -1, this.lastGapPos = -2, this.gapStack = [], this.skipNextNewLine = !1, this.lastChunkWritten = !1, this.endOfChunkHit = !1, this.bufferWaterline = DEFAULT_BUFFER_WATERLINE, this.isEol = !1, this.lineStartPos = 0, this.droppedBufferSize = 0, this.line = 1, this.lastErrOffset = -1;
      }
      get col() {
        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);
      }
      get offset() {
        return this.droppedBufferSize + this.pos;
      }
      getError(code3) {
        let { line, col, offset } = this;
        return {
          code: code3,
          startLine: line,
          endLine: line,
          startCol: col,
          endCol: col,
          startOffset: offset,
          endOffset: offset
        };
      }
      _err(code3) {
        this.handler.onParseError && this.lastErrOffset !== this.offset && (this.lastErrOffset = this.offset, this.handler.onParseError(this.getError(code3)));
      }
      _addGap() {
        this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos;
      }
      _processSurrogate(cp) {
        if (this.pos !== this.html.length - 1) {
          let nextCp = this.html.charCodeAt(this.pos + 1);
          if (isSurrogatePair(nextCp))
            return this.pos++, this._addGap(), getSurrogatePairCodePoint(cp, nextCp);
        } else if (!this.lastChunkWritten)
          return this.endOfChunkHit = !0, CODE_POINTS.EOF;
        return this._err(ERR.surrogateInInputStream), cp;
      }
      willDropParsedChunk() {
        return this.pos > this.bufferWaterline;
      }
      dropParsedChunk() {
        this.willDropParsedChunk() && (this.html = this.html.substring(this.pos), this.lineStartPos -= this.pos, this.droppedBufferSize += this.pos, this.pos = 0, this.lastGapPos = -2, this.gapStack.length = 0);
      }
      write(chunk, isLastChunk) {
        this.html.length > 0 ? this.html += chunk : this.html = chunk, this.endOfChunkHit = !1, this.lastChunkWritten = isLastChunk;
      }
      insertHtmlAtCurrentPos(chunk) {
        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1), this.endOfChunkHit = !1;
      }
      startsWith(pattern, caseSensitive) {
        if (this.pos + pattern.length > this.html.length)
          return this.endOfChunkHit = !this.lastChunkWritten, !1;
        if (caseSensitive)
          return this.html.startsWith(pattern, this.pos);
        for (let i = 0; i < pattern.length; i++)
          if ((this.html.charCodeAt(this.pos + i) | 32) !== pattern.charCodeAt(i))
            return !1;
        return !0;
      }
      peek(offset) {
        let pos = this.pos + offset;
        if (pos >= this.html.length)
          return this.endOfChunkHit = !this.lastChunkWritten, CODE_POINTS.EOF;
        let code3 = this.html.charCodeAt(pos);
        return code3 === CODE_POINTS.CARRIAGE_RETURN ? CODE_POINTS.LINE_FEED : code3;
      }
      advance() {
        if (this.pos++, this.isEol && (this.isEol = !1, this.line++, this.lineStartPos = this.pos), this.pos >= this.html.length)
          return this.endOfChunkHit = !this.lastChunkWritten, CODE_POINTS.EOF;
        let cp = this.html.charCodeAt(this.pos);
        return cp === CODE_POINTS.CARRIAGE_RETURN ? (this.isEol = !0, this.skipNextNewLine = !0, CODE_POINTS.LINE_FEED) : cp === CODE_POINTS.LINE_FEED && (this.isEol = !0, this.skipNextNewLine) ? (this.line--, this.skipNextNewLine = !1, this._addGap(), this.advance()) : (this.skipNextNewLine = !1, isSurrogate(cp) && (cp = this._processSurrogate(cp)), this.handler.onParseError === null || cp > 31 && cp < 127 || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.CARRIAGE_RETURN || cp > 159 && cp < 64976 || this._checkForProblematicCharacters(cp), cp);
      }
      _checkForProblematicCharacters(cp) {
        isControlCodePoint(cp) ? this._err(ERR.controlCharacterInInputStream) : isUndefinedCodePoint(cp) && this._err(ERR.noncharacterInInputStream);
      }
      retreat(count) {
        for (this.pos -= count; this.pos < this.lastGapPos; )
          this.lastGapPos = this.gapStack.pop(), this.pos--;
        this.isEol = !1;
      }
    };
  }
});

// node_modules/parse5/dist/common/token.js
var token_exports = {};
__export(token_exports, {
  TokenType: () => TokenType,
  getTokenAttr: () => getTokenAttr
});
function getTokenAttr(token, attrName) {
  for (let i = token.attrs.length - 1; i >= 0; i--)
    if (token.attrs[i].name === attrName)
      return token.attrs[i].value;
  return null;
}
var TokenType, init_token = __esm({
  "node_modules/parse5/dist/common/token.js"() {
    (function(TokenType2) {
      TokenType2[TokenType2.CHARACTER = 0] = "CHARACTER", TokenType2[TokenType2.NULL_CHARACTER = 1] = "NULL_CHARACTER", TokenType2[TokenType2.WHITESPACE_CHARACTER = 2] = "WHITESPACE_CHARACTER", TokenType2[TokenType2.START_TAG = 3] = "START_TAG", TokenType2[TokenType2.END_TAG = 4] = "END_TAG", TokenType2[TokenType2.COMMENT = 5] = "COMMENT", TokenType2[TokenType2.DOCTYPE = 6] = "DOCTYPE", TokenType2[TokenType2.EOF = 7] = "EOF", TokenType2[TokenType2.HIBERNATION = 8] = "HIBERNATION";
    })(TokenType = TokenType || (TokenType = {}));
  }
});

// node_modules/entities/lib/esm/generated/decode-data-html.js
var decode_data_html_default, init_decode_data_html = __esm({
  "node_modules/entities/lib/esm/generated/decode-data-html.js"() {
    decode_data_html_default = new Uint16Array(
      '\u1D41<\xD5\u0131\u028A\u049D\u057B\u05D0\u0675\u06DE\u07A2\u07D6\u080F\u0A4A\u0A91\u0DA1\u0E6D\u0F09\u0F26\u10CA\u1228\u12E1\u1415\u149D\u14C3\u14DF\u1525\0\0\0\0\0\0\u156B\u16CD\u198D\u1C12\u1DDD\u1F7E\u2060\u21B0\u228D\u23C0\u23FB\u2442\u2824\u2912\u2D08\u2E48\u2FCE\u3016\u32BA\u3639\u37AC\u38FE\u3A28\u3A71\u3AE0\u3B2E\u0800EMabcfglmnoprstu\\bfms\x7F\x84\x8B\x90\x95\x98\xA6\xB3\xB9\xC8\xCFlig\u803B\xC6\u40C6P\u803B&\u4026cute\u803B\xC1\u40C1reve;\u4102\u0100iyx}rc\u803B\xC2\u40C2;\u4410r;\uC000\u{1D504}rave\u803B\xC0\u40C0pha;\u4391acr;\u4100d;\u6A53\u0100gp\x9D\xA1on;\u4104f;\uC000\u{1D538}plyFunction;\u6061ing\u803B\xC5\u40C5\u0100cs\xBE\xC3r;\uC000\u{1D49C}ign;\u6254ilde\u803B\xC3\u40C3ml\u803B\xC4\u40C4\u0400aceforsu\xE5\xFB\xFE\u0117\u011C\u0122\u0127\u012A\u0100cr\xEA\xF2kslash;\u6216\u0176\xF6\xF8;\u6AE7ed;\u6306y;\u4411\u0180crt\u0105\u010B\u0114ause;\u6235noullis;\u612Ca;\u4392r;\uC000\u{1D505}pf;\uC000\u{1D539}eve;\u42D8c\xF2\u0113mpeq;\u624E\u0700HOacdefhilorsu\u014D\u0151\u0156\u0180\u019E\u01A2\u01B5\u01B7\u01BA\u01DC\u0215\u0273\u0278\u027Ecy;\u4427PY\u803B\xA9\u40A9\u0180cpy\u015D\u0162\u017Aute;\u4106\u0100;i\u0167\u0168\u62D2talDifferentialD;\u6145leys;\u612D\u0200aeio\u0189\u018E\u0194\u0198ron;\u410Cdil\u803B\xC7\u40C7rc;\u4108nint;\u6230ot;\u410A\u0100dn\u01A7\u01ADilla;\u40B8terDot;\u40B7\xF2\u017Fi;\u43A7rcle\u0200DMPT\u01C7\u01CB\u01D1\u01D6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01E2\u01F8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020FoubleQuote;\u601Duote;\u6019\u0200lnpu\u021E\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6A74\u0180git\u022F\u0236\u023Aruent;\u6261nt;\u622FourIntegral;\u622E\u0100fr\u024C\u024E;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6A2Fcr;\uC000\u{1D49E}p\u0100;C\u0284\u0285\u62D3ap;\u624D\u0580DJSZacefios\u02A0\u02AC\u02B0\u02B4\u02B8\u02CB\u02D7\u02E1\u02E6\u0333\u048D\u0100;o\u0179\u02A5trahd;\u6911cy;\u4402cy;\u4405cy;\u440F\u0180grs\u02BF\u02C4\u02C7ger;\u6021r;\u61A1hv;\u6AE4\u0100ay\u02D0\u02D5ron;\u410E;\u4414l\u0100;t\u02DD\u02DE\u6207a;\u4394r;\uC000\u{1D507}\u0100af\u02EB\u0327\u0100cm\u02F0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031Ccute;\u40B4o\u0174\u030B\u030D;\u42D9bleAcute;\u42DDrave;\u4060ilde;\u42DCond;\u62C4ferentialD;\u6146\u0470\u033D\0\0\0\u0342\u0354\0\u0405f;\uC000\u{1D53B}\u0180;DE\u0348\u0349\u034D\u40A8ot;\u60DCqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03CF\u03E2\u03F8ontourIntegra\xEC\u0239o\u0274\u0379\0\0\u037B\xBB\u0349nArrow;\u61D3\u0100eo\u0387\u03A4ft\u0180ART\u0390\u0396\u03A1rrow;\u61D0ightArrow;\u61D4e\xE5\u02CAng\u0100LR\u03AB\u03C4eft\u0100AR\u03B3\u03B9rrow;\u67F8ightArrow;\u67FAightArrow;\u67F9ight\u0100AT\u03D8\u03DErrow;\u61D2ee;\u62A8p\u0241\u03E9\0\0\u03EFrrow;\u61D1ownArrow;\u61D5erticalBar;\u6225n\u0300ABLRTa\u0412\u042A\u0430\u045E\u047F\u037Crrow\u0180;BU\u041D\u041E\u0422\u6193ar;\u6913pArrow;\u61F5reve;\u4311eft\u02D2\u043A\0\u0446\0\u0450ightVector;\u6950eeVector;\u695Eector\u0100;B\u0459\u045A\u61BDar;\u6956ight\u01D4\u0467\0\u0471eeVector;\u695Fector\u0100;B\u047A\u047B\u61C1ar;\u6957ee\u0100;A\u0486\u0487\u62A4rrow;\u61A7\u0100ct\u0492\u0497r;\uC000\u{1D49F}rok;\u4110\u0800NTacdfglmopqstux\u04BD\u04C0\u04C4\u04CB\u04DE\u04E2\u04E7\u04EE\u04F5\u0521\u052F\u0536\u0552\u055D\u0560\u0565G;\u414AH\u803B\xD0\u40D0cute\u803B\xC9\u40C9\u0180aiy\u04D2\u04D7\u04DCron;\u411Arc\u803B\xCA\u40CA;\u442Dot;\u4116r;\uC000\u{1D508}rave\u803B\xC8\u40C8ement;\u6208\u0100ap\u04FA\u04FEcr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65FBerySmallSquare;\u65AB\u0100gp\u0526\u052Aon;\u4118f;\uC000\u{1D53C}silon;\u4395u\u0100ai\u053C\u0549l\u0100;T\u0542\u0543\u6A75ilde;\u6242librium;\u61CC\u0100ci\u0557\u055Ar;\u6130m;\u6A73a;\u4397ml\u803B\xCB\u40CB\u0100ip\u056A\u056Fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058D\u05B2\u05CCy;\u4424r;\uC000\u{1D509}lled\u0253\u0597\0\0\u05A3mallSquare;\u65FCerySmallSquare;\u65AA\u0370\u05BA\0\u05BF\0\0\u05C4f;\uC000\u{1D53D}All;\u6200riertrf;\u6131c\xF2\u05CB\u0600JTabcdfgorst\u05E8\u05EC\u05EF\u05FA\u0600\u0612\u0616\u061B\u061D\u0623\u066C\u0672cy;\u4403\u803B>\u403Emma\u0100;d\u05F7\u05F8\u4393;\u43DCreve;\u411E\u0180eiy\u0607\u060C\u0610dil;\u4122rc;\u411C;\u4413ot;\u4120r;\uC000\u{1D50A};\u62D9pf;\uC000\u{1D53E}eater\u0300EFGLST\u0635\u0644\u064E\u0656\u065B\u0666qual\u0100;L\u063E\u063F\u6265ess;\u62DBullEqual;\u6267reater;\u6AA2ess;\u6277lantEqual;\u6A7Eilde;\u6273cr;\uC000\u{1D4A2};\u626B\u0400Aacfiosu\u0685\u068B\u0696\u069B\u069E\u06AA\u06BE\u06CARDcy;\u442A\u0100ct\u0690\u0694ek;\u42C7;\u405Eirc;\u4124r;\u610ClbertSpace;\u610B\u01F0\u06AF\0\u06B2f;\u610DizontalLine;\u6500\u0100ct\u06C3\u06C5\xF2\u06A9rok;\u4126mp\u0144\u06D0\u06D8ownHum\xF0\u012Fqual;\u624F\u0700EJOacdfgmnostu\u06FA\u06FE\u0703\u0707\u070E\u071A\u071E\u0721\u0728\u0744\u0778\u078B\u078F\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803B\xCD\u40CD\u0100iy\u0713\u0718rc\u803B\xCE\u40CE;\u4418ot;\u4130r;\u6111rave\u803B\xCC\u40CC\u0180;ap\u0720\u072F\u073F\u0100cg\u0734\u0737r;\u412AinaryI;\u6148lie\xF3\u03DD\u01F4\u0749\0\u0762\u0100;e\u074D\u074E\u622C\u0100gr\u0753\u0758ral;\u622Bsection;\u62C2isible\u0100CT\u076C\u0772omma;\u6063imes;\u6062\u0180gpt\u077F\u0783\u0788on;\u412Ef;\uC000\u{1D540}a;\u4399cr;\u6110ilde;\u4128\u01EB\u079A\0\u079Ecy;\u4406l\u803B\xCF\u40CF\u0280cfosu\u07AC\u07B7\u07BC\u07C2\u07D0\u0100iy\u07B1\u07B5rc;\u4134;\u4419r;\uC000\u{1D50D}pf;\uC000\u{1D541}\u01E3\u07C7\0\u07CCr;\uC000\u{1D4A5}rcy;\u4408kcy;\u4404\u0380HJacfos\u07E4\u07E8\u07EC\u07F1\u07FD\u0802\u0808cy;\u4425cy;\u440Cppa;\u439A\u0100ey\u07F6\u07FBdil;\u4136;\u441Ar;\uC000\u{1D50E}pf;\uC000\u{1D542}cr;\uC000\u{1D4A6}\u0580JTaceflmost\u0825\u0829\u082C\u0850\u0863\u09B3\u09B8\u09C7\u09CD\u0A37\u0A47cy;\u4409\u803B<\u403C\u0280cmnpr\u0837\u083C\u0841\u0844\u084Dute;\u4139bda;\u439Bg;\u67EAlacetrf;\u6112r;\u619E\u0180aey\u0857\u085C\u0861ron;\u413Ddil;\u413B;\u441B\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087E\u08A9\u08B1\u08E0\u08E6\u08FC\u092F\u095B\u0390\u096A\u0100nr\u0883\u088FgleBracket;\u67E8row\u0180;BR\u0899\u089A\u089E\u6190ar;\u61E4ightArrow;\u61C6eiling;\u6308o\u01F5\u08B7\0\u08C3bleBracket;\u67E6n\u01D4\u08C8\0\u08D2eeVector;\u6961ector\u0100;B\u08DB\u08DC\u61C3ar;\u6959loor;\u630Aight\u0100AV\u08EF\u08F5rrow;\u6194ector;\u694E\u0100er\u0901\u0917e\u0180;AV\u0909\u090A\u0910\u62A3rrow;\u61A4ector;\u695Aiangle\u0180;BE\u0924\u0925\u0929\u62B2ar;\u69CFqual;\u62B4p\u0180DTV\u0937\u0942\u094CownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61BFar;\u6958ector\u0100;B\u0965\u0966\u61BCar;\u6952ight\xE1\u039Cs\u0300EFGLST\u097E\u098B\u0995\u099D\u09A2\u09ADqualGreater;\u62DAullEqual;\u6266reater;\u6276ess;\u6AA1lantEqual;\u6A7Dilde;\u6272r;\uC000\u{1D50F}\u0100;e\u09BD\u09BE\u62D8ftarrow;\u61DAidot;\u413F\u0180npw\u09D4\u0A16\u0A1Bg\u0200LRlr\u09DE\u09F7\u0A02\u0A10eft\u0100AR\u09E6\u09ECrrow;\u67F5ightArrow;\u67F7ightArrow;\u67F6eft\u0100ar\u03B3\u0A0Aight\xE1\u03BFight\xE1\u03CAf;\uC000\u{1D543}er\u0100LR\u0A22\u0A2CeftArrow;\u6199ightArrow;\u6198\u0180cht\u0A3E\u0A40\u0A42\xF2\u084C;\u61B0rok;\u4141;\u626A\u0400acefiosu\u0A5A\u0A5D\u0A60\u0A77\u0A7C\u0A85\u0A8B\u0A8Ep;\u6905y;\u441C\u0100dl\u0A65\u0A6FiumSpace;\u605Flintrf;\u6133r;\uC000\u{1D510}nusPlus;\u6213pf;\uC000\u{1D544}c\xF2\u0A76;\u439C\u0480Jacefostu\u0AA3\u0AA7\u0AAD\u0AC0\u0B14\u0B19\u0D91\u0D97\u0D9Ecy;\u440Acute;\u4143\u0180aey\u0AB4\u0AB9\u0ABEron;\u4147dil;\u4145;\u441D\u0180gsw\u0AC7\u0AF0\u0B0Eative\u0180MTV\u0AD3\u0ADF\u0AE8ediumSpace;\u600Bhi\u0100cn\u0AE6\u0AD8\xEB\u0AD9eryThi\xEE\u0AD9ted\u0100GL\u0AF8\u0B06reaterGreate\xF2\u0673essLes\xF3\u0A48Line;\u400Ar;\uC000\u{1D511}\u0200Bnpt\u0B22\u0B28\u0B37\u0B3Areak;\u6060BreakingSpace;\u40A0f;\u6115\u0680;CDEGHLNPRSTV\u0B55\u0B56\u0B6A\u0B7C\u0BA1\u0BEB\u0C04\u0C5E\u0C84\u0CA6\u0CD8\u0D61\u0D85\u6AEC\u0100ou\u0B5B\u0B64ngruent;\u6262pCap;\u626DoubleVerticalBar;\u6226\u0180lqx\u0B83\u0B8A\u0B9Bement;\u6209ual\u0100;T\u0B92\u0B93\u6260ilde;\uC000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0BB6\u0BB7\u0BBD\u0BC9\u0BD3\u0BD8\u0BE5\u626Fqual;\u6271ullEqual;\uC000\u2267\u0338reater;\uC000\u226B\u0338ess;\u6279lantEqual;\uC000\u2A7E\u0338ilde;\u6275ump\u0144\u0BF2\u0BFDownHump;\uC000\u224E\u0338qual;\uC000\u224F\u0338e\u0100fs\u0C0A\u0C27tTriangle\u0180;BE\u0C1A\u0C1B\u0C21\u62EAar;\uC000\u29CF\u0338qual;\u62ECs\u0300;EGLST\u0C35\u0C36\u0C3C\u0C44\u0C4B\u0C58\u626Equal;\u6270reater;\u6278ess;\uC000\u226A\u0338lantEqual;\uC000\u2A7D\u0338ilde;\u6274ested\u0100GL\u0C68\u0C79reaterGreater;\uC000\u2AA2\u0338essLess;\uC000\u2AA1\u0338recedes\u0180;ES\u0C92\u0C93\u0C9B\u6280qual;\uC000\u2AAF\u0338lantEqual;\u62E0\u0100ei\u0CAB\u0CB9verseElement;\u620CghtTriangle\u0180;BE\u0CCB\u0CCC\u0CD2\u62EBar;\uC000\u29D0\u0338qual;\u62ED\u0100qu\u0CDD\u0D0CuareSu\u0100bp\u0CE8\u0CF9set\u0100;E\u0CF0\u0CF3\uC000\u228F\u0338qual;\u62E2erset\u0100;E\u0D03\u0D06\uC000\u2290\u0338qual;\u62E3\u0180bcp\u0D13\u0D24\u0D4Eset\u0100;E\u0D1B\u0D1E\uC000\u2282\u20D2qual;\u6288ceeds\u0200;EST\u0D32\u0D33\u0D3B\u0D46\u6281qual;\uC000\u2AB0\u0338lantEqual;\u62E1ilde;\uC000\u227F\u0338erset\u0100;E\u0D58\u0D5B\uC000\u2283\u20D2qual;\u6289ilde\u0200;EFT\u0D6E\u0D6F\u0D75\u0D7F\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uC000\u{1D4A9}ilde\u803B\xD1\u40D1;\u439D\u0700Eacdfgmoprstuv\u0DBD\u0DC2\u0DC9\u0DD5\u0DDB\u0DE0\u0DE7\u0DFC\u0E02\u0E20\u0E22\u0E32\u0E3F\u0E44lig;\u4152cute\u803B\xD3\u40D3\u0100iy\u0DCE\u0DD3rc\u803B\xD4\u40D4;\u441Eblac;\u4150r;\uC000\u{1D512}rave\u803B\xD2\u40D2\u0180aei\u0DEE\u0DF2\u0DF6cr;\u414Cga;\u43A9cron;\u439Fpf;\uC000\u{1D546}enCurly\u0100DQ\u0E0E\u0E1AoubleQuote;\u601Cuote;\u6018;\u6A54\u0100cl\u0E27\u0E2Cr;\uC000\u{1D4AA}ash\u803B\xD8\u40D8i\u016C\u0E37\u0E3Cde\u803B\xD5\u40D5es;\u6A37ml\u803B\xD6\u40D6er\u0100BP\u0E4B\u0E60\u0100ar\u0E50\u0E53r;\u603Eac\u0100ek\u0E5A\u0E5C;\u63DEet;\u63B4arenthesis;\u63DC\u0480acfhilors\u0E7F\u0E87\u0E8A\u0E8F\u0E92\u0E94\u0E9D\u0EB0\u0EFCrtialD;\u6202y;\u441Fr;\uC000\u{1D513}i;\u43A6;\u43A0usMinus;\u40B1\u0100ip\u0EA2\u0EADncareplan\xE5\u069Df;\u6119\u0200;eio\u0EB9\u0EBA\u0EE0\u0EE4\u6ABBcedes\u0200;EST\u0EC8\u0EC9\u0ECF\u0EDA\u627Aqual;\u6AAFlantEqual;\u627Cilde;\u627Eme;\u6033\u0100dp\u0EE9\u0EEEuct;\u620Fortion\u0100;a\u0225\u0EF9l;\u621D\u0100ci\u0F01\u0F06r;\uC000\u{1D4AB};\u43A8\u0200Ufos\u0F11\u0F16\u0F1B\u0F1FOT\u803B"\u4022r;\uC000\u{1D514}pf;\u611Acr;\uC000\u{1D4AC}\u0600BEacefhiorsu\u0F3E\u0F43\u0F47\u0F60\u0F73\u0FA7\u0FAA\u0FAD\u1096\u10A9\u10B4\u10BEarr;\u6910G\u803B\xAE\u40AE\u0180cnr\u0F4E\u0F53\u0F56ute;\u4154g;\u67EBr\u0100;t\u0F5C\u0F5D\u61A0l;\u6916\u0180aey\u0F67\u0F6C\u0F71ron;\u4158dil;\u4156;\u4420\u0100;v\u0F78\u0F79\u611Cerse\u0100EU\u0F82\u0F99\u0100lq\u0F87\u0F8Eement;\u620Builibrium;\u61CBpEquilibrium;\u696Fr\xBB\u0F79o;\u43A1ght\u0400ACDFTUVa\u0FC1\u0FEB\u0FF3\u1022\u1028\u105B\u1087\u03D8\u0100nr\u0FC6\u0FD2gleBracket;\u67E9row\u0180;BL\u0FDC\u0FDD\u0FE1\u6192ar;\u61E5eftArrow;\u61C4eiling;\u6309o\u01F5\u0FF9\0\u1005bleBracket;\u67E7n\u01D4\u100A\0\u1014eeVector;\u695Dector\u0100;B\u101D\u101E\u61C2ar;\u6955loor;\u630B\u0100er\u102D\u1043e\u0180;AV\u1035\u1036\u103C\u62A2rrow;\u61A6ector;\u695Biangle\u0180;BE\u1050\u1051\u1055\u62B3ar;\u69D0qual;\u62B5p\u0180DTV\u1063\u106E\u1078ownVector;\u694FeeVector;\u695Cector\u0100;B\u1082\u1083\u61BEar;\u6954ector\u0100;B\u1091\u1092\u61C0ar;\u6953\u0100pu\u109B\u109Ef;\u611DndImplies;\u6970ightarrow;\u61DB\u0100ch\u10B9\u10BCr;\u611B;\u61B1leDelayed;\u69F4\u0680HOacfhimoqstu\u10E4\u10F1\u10F7\u10FD\u1119\u111E\u1151\u1156\u1161\u1167\u11B5\u11BB\u11BF\u0100Cc\u10E9\u10EEHcy;\u4429y;\u4428FTcy;\u442Ccute;\u415A\u0280;aeiy\u1108\u1109\u110E\u1113\u1117\u6ABCron;\u4160dil;\u415Erc;\u415C;\u4421r;\uC000\u{1D516}ort\u0200DLRU\u112A\u1134\u113E\u1149ownArrow\xBB\u041EeftArrow\xBB\u089AightArrow\xBB\u0FDDpArrow;\u6191gma;\u43A3allCircle;\u6218pf;\uC000\u{1D54A}\u0272\u116D\0\0\u1170t;\u621Aare\u0200;ISU\u117B\u117C\u1189\u11AF\u65A1ntersection;\u6293u\u0100bp\u118F\u119Eset\u0100;E\u1197\u1198\u628Fqual;\u6291erset\u0100;E\u11A8\u11A9\u6290qual;\u6292nion;\u6294cr;\uC000\u{1D4AE}ar;\u62C6\u0200bcmp\u11C8\u11DB\u1209\u120B\u0100;s\u11CD\u11CE\u62D0et\u0100;E\u11CD\u11D5qual;\u6286\u0100ch\u11E0\u1205eeds\u0200;EST\u11ED\u11EE\u11F4\u11FF\u627Bqual;\u6AB0lantEqual;\u627Dilde;\u627FTh\xE1\u0F8C;\u6211\u0180;es\u1212\u1213\u1223\u62D1rset\u0100;E\u121C\u121D\u6283qual;\u6287et\xBB\u1213\u0580HRSacfhiors\u123E\u1244\u1249\u1255\u125E\u1271\u1276\u129F\u12C2\u12C8\u12D1ORN\u803B\xDE\u40DEADE;\u6122\u0100Hc\u124E\u1252cy;\u440By;\u4426\u0100bu\u125A\u125C;\u4009;\u43A4\u0180aey\u1265\u126A\u126Fron;\u4164dil;\u4162;\u4422r;\uC000\u{1D517}\u0100ei\u127B\u1289\u01F2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128E\u1298kSpace;\uC000\u205F\u200ASpace;\u6009lde\u0200;EFT\u12AB\u12AC\u12B2\u12BC\u623Cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uC000\u{1D54B}ipleDot;\u60DB\u0100ct\u12D6\u12DBr;\uC000\u{1D4AF}rok;\u4166\u0AE1\u12F7\u130E\u131A\u1326\0\u132C\u1331\0\0\0\0\0\u1338\u133D\u1377\u1385\0\u13FF\u1404\u140A\u1410\u0100cr\u12FB\u1301ute\u803B\xDA\u40DAr\u0100;o\u1307\u1308\u619Fcir;\u6949r\u01E3\u1313\0\u1316y;\u440Eve;\u416C\u0100iy\u131E\u1323rc\u803B\xDB\u40DB;\u4423blac;\u4170r;\uC000\u{1D518}rave\u803B\xD9\u40D9acr;\u416A\u0100di\u1341\u1369er\u0100BP\u1348\u135D\u0100ar\u134D\u1350r;\u405Fac\u0100ek\u1357\u1359;\u63DFet;\u63B5arenthesis;\u63DDon\u0100;P\u1370\u1371\u62C3lus;\u628E\u0100gp\u137B\u137Fon;\u4172f;\uC000\u{1D54C}\u0400ADETadps\u1395\u13AE\u13B8\u13C4\u03E8\u13D2\u13D7\u13F3rrow\u0180;BD\u1150\u13A0\u13A4ar;\u6912ownArrow;\u61C5ownArrow;\u6195quilibrium;\u696Eee\u0100;A\u13CB\u13CC\u62A5rrow;\u61A5own\xE1\u03F3er\u0100LR\u13DE\u13E8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13F9\u13FA\u43D2on;\u43A5ing;\u416Ecr;\uC000\u{1D4B0}ilde;\u4168ml\u803B\xDC\u40DC\u0480Dbcdefosv\u1427\u142C\u1430\u1433\u143E\u1485\u148A\u1490\u1496ash;\u62ABar;\u6AEBy;\u4412ash\u0100;l\u143B\u143C\u62A9;\u6AE6\u0100er\u1443\u1445;\u62C1\u0180bty\u144C\u1450\u147Aar;\u6016\u0100;i\u144F\u1455cal\u0200BLST\u1461\u1465\u146A\u1474ar;\u6223ine;\u407Ceparator;\u6758ilde;\u6240ThinSpace;\u600Ar;\uC000\u{1D519}pf;\uC000\u{1D54D}cr;\uC000\u{1D4B1}dash;\u62AA\u0280cefos\u14A7\u14AC\u14B1\u14B6\u14BCirc;\u4174dge;\u62C0r;\uC000\u{1D51A}pf;\uC000\u{1D54E}cr;\uC000\u{1D4B2}\u0200fios\u14CB\u14D0\u14D2\u14D8r;\uC000\u{1D51B};\u439Epf;\uC000\u{1D54F}cr;\uC000\u{1D4B3}\u0480AIUacfosu\u14F1\u14F5\u14F9\u14FD\u1504\u150F\u1514\u151A\u1520cy;\u442Fcy;\u4407cy;\u442Ecute\u803B\xDD\u40DD\u0100iy\u1509\u150Drc;\u4176;\u442Br;\uC000\u{1D51C}pf;\uC000\u{1D550}cr;\uC000\u{1D4B4}ml;\u4178\u0400Hacdefos\u1535\u1539\u153F\u154B\u154F\u155D\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417D;\u4417ot;\u417B\u01F2\u1554\0\u155BoWidt\xE8\u0AD9a;\u4396r;\u6128pf;\u6124cr;\uC000\u{1D4B5}\u0BE1\u1583\u158A\u1590\0\u15B0\u15B6\u15BF\0\0\0\0\u15C6\u15DB\u15EB\u165F\u166D\0\u1695\u169B\u16B2\u16B9\0\u16BEcute\u803B\xE1\u40E1reve;\u4103\u0300;Ediuy\u159C\u159D\u15A1\u15A3\u15A8\u15AD\u623E;\uC000\u223E\u0333;\u623Frc\u803B\xE2\u40E2te\u80BB\xB4\u0306;\u4430lig\u803B\xE6\u40E6\u0100;r\xB2\u15BA;\uC000\u{1D51E}rave\u803B\xE0\u40E0\u0100ep\u15CA\u15D6\u0100fp\u15CF\u15D4sym;\u6135\xE8\u15D3ha;\u43B1\u0100ap\u15DFc\u0100cl\u15E4\u15E7r;\u4101g;\u6A3F\u0264\u15F0\0\0\u160A\u0280;adsv\u15FA\u15FB\u15FF\u1601\u1607\u6227nd;\u6A55;\u6A5Clope;\u6A58;\u6A5A\u0380;elmrsz\u1618\u1619\u161B\u161E\u163F\u164F\u1659\u6220;\u69A4e\xBB\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163A\u163C\u163E;\u69A8;\u69A9;\u69AA;\u69AB;\u69AC;\u69AD;\u69AE;\u69AFt\u0100;v\u1645\u1646\u621Fb\u0100;d\u164C\u164D\u62BE;\u699D\u0100pt\u1654\u1657h;\u6222\xBB\xB9arr;\u637C\u0100gp\u1663\u1667on;\u4105f;\uC000\u{1D552}\u0380;Eaeiop\u12C1\u167B\u167D\u1682\u1684\u1687\u168A;\u6A70cir;\u6A6F;\u624Ad;\u624Bs;\u4027rox\u0100;e\u12C1\u1692\xF1\u1683ing\u803B\xE5\u40E5\u0180cty\u16A1\u16A6\u16A8r;\uC000\u{1D4B6};\u402Amp\u0100;e\u12C1\u16AF\xF1\u0288ilde\u803B\xE3\u40E3ml\u803B\xE4\u40E4\u0100ci\u16C2\u16C8onin\xF4\u0272nt;\u6A11\u0800Nabcdefiklnoprsu\u16ED\u16F1\u1730\u173C\u1743\u1748\u1778\u177D\u17E0\u17E6\u1839\u1850\u170D\u193D\u1948\u1970ot;\u6AED\u0100cr\u16F6\u171Ek\u0200ceps\u1700\u1705\u170D\u1713ong;\u624Cpsilon;\u43F6rime;\u6035im\u0100;e\u171A\u171B\u623Dq;\u62CD\u0176\u1722\u1726ee;\u62BDed\u0100;g\u172C\u172D\u6305e\xBB\u172Drk\u0100;t\u135C\u1737brk;\u63B6\u0100oy\u1701\u1741;\u4431quo;\u601E\u0280cmprt\u1753\u175B\u1761\u1764\u1768aus\u0100;e\u010A\u0109ptyv;\u69B0s\xE9\u170Cno\xF5\u0113\u0180ahw\u176F\u1771\u1773;\u43B2;\u6136een;\u626Cr;\uC000\u{1D51F}g\u0380costuvw\u178D\u179D\u17B3\u17C1\u17D5\u17DB\u17DE\u0180aiu\u1794\u1796\u179A\xF0\u0760rc;\u65EFp\xBB\u1371\u0180dpt\u17A4\u17A8\u17ADot;\u6A00lus;\u6A01imes;\u6A02\u0271\u17B9\0\0\u17BEcup;\u6A06ar;\u6605riangle\u0100du\u17CD\u17D2own;\u65BDp;\u65B3plus;\u6A04e\xE5\u1444\xE5\u14ADarow;\u690D\u0180ako\u17ED\u1826\u1835\u0100cn\u17F2\u1823k\u0180lst\u17FA\u05AB\u1802ozenge;\u69EBriangle\u0200;dlr\u1812\u1813\u1818\u181D\u65B4own;\u65BEeft;\u65C2ight;\u65B8k;\u6423\u01B1\u182B\0\u1833\u01B2\u182F\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183E\u184D\u0100;q\u1843\u1846\uC000=\u20E5uiv;\uC000\u2261\u20E5t;\u6310\u0200ptwx\u1859\u185E\u1867\u186Cf;\uC000\u{1D553}\u0100;t\u13CB\u1863om\xBB\u13CCtie;\u62C8\u0600DHUVbdhmptuv\u1885\u1896\u18AA\u18BB\u18D7\u18DB\u18EC\u18FF\u1905\u190A\u1910\u1921\u0200LRlr\u188E\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18A1\u18A2\u18A4\u18A6\u18A8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18B3\u18B5\u18B7\u18B9;\u655D;\u655A;\u655C;\u6559\u0380;HLRhlr\u18CA\u18CB\u18CD\u18CF\u18D1\u18D3\u18D5\u6551;\u656C;\u6563;\u6560;\u656B;\u6562;\u655Fox;\u69C9\u0200LRlr\u18E4\u18E6\u18E8\u18EA;\u6555;\u6552;\u6510;\u650C\u0280;DUdu\u06BD\u18F7\u18F9\u18FB\u18FD;\u6565;\u6568;\u652C;\u6534inus;\u629Flus;\u629Eimes;\u62A0\u0200LRlr\u1919\u191B\u191D\u191F;\u655B;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193B\u6502;\u656A;\u6561;\u655E;\u653C;\u6524;\u651C\u0100ev\u0123\u1942bar\u803B\xA6\u40A6\u0200ceio\u1951\u1956\u195A\u1960r;\uC000\u{1D4B7}mi;\u604Fm\u0100;e\u171A\u171Cl\u0180;bh\u1968\u1969\u196B\u405C;\u69C5sub;\u67C8\u016C\u1974\u197El\u0100;e\u1979\u197A\u6022t\xBB\u197Ap\u0180;Ee\u012F\u1985\u1987;\u6AAE\u0100;q\u06DC\u06DB\u0CE1\u19A7\0\u19E8\u1A11\u1A15\u1A32\0\u1A37\u1A50\0\0\u1AB4\0\0\u1AC1\0\0\u1B21\u1B2E\u1B4D\u1B52\0\u1BFD\0\u1C0C\u0180cpr\u19AD\u19B2\u19DDute;\u4107\u0300;abcds\u19BF\u19C0\u19C4\u19CA\u19D5\u19D9\u6229nd;\u6A44rcup;\u6A49\u0100au\u19CF\u19D2p;\u6A4Bp;\u6A47ot;\u6A40;\uC000\u2229\uFE00\u0100eo\u19E2\u19E5t;\u6041\xEE\u0693\u0200aeiu\u19F0\u19FB\u1A01\u1A05\u01F0\u19F5\0\u19F8s;\u6A4Don;\u410Ddil\u803B\xE7\u40E7rc;\u4109ps\u0100;s\u1A0C\u1A0D\u6A4Cm;\u6A50ot;\u410B\u0180dmn\u1A1B\u1A20\u1A26il\u80BB\xB8\u01ADptyv;\u69B2t\u8100\xA2;e\u1A2D\u1A2E\u40A2r\xE4\u01B2r;\uC000\u{1D520}\u0180cei\u1A3D\u1A40\u1A4Dy;\u4447ck\u0100;m\u1A47\u1A48\u6713ark\xBB\u1A48;\u43C7r\u0380;Ecefms\u1A5F\u1A60\u1A62\u1A6B\u1AA4\u1AAA\u1AAE\u65CB;\u69C3\u0180;el\u1A69\u1A6A\u1A6D\u42C6q;\u6257e\u0261\u1A74\0\0\u1A88rrow\u0100lr\u1A7C\u1A81eft;\u61BAight;\u61BB\u0280RSacd\u1A92\u1A94\u1A96\u1A9A\u1A9F\xBB\u0F47;\u64C8st;\u629Birc;\u629Aash;\u629Dnint;\u6A10id;\u6AEFcir;\u69C2ubs\u0100;u\u1ABB\u1ABC\u6663it\xBB\u1ABC\u02EC\u1AC7\u1AD4\u1AFA\0\u1B0Aon\u0100;e\u1ACD\u1ACE\u403A\u0100;q\xC7\xC6\u026D\u1AD9\0\0\u1AE2a\u0100;t\u1ADE\u1ADF\u402C;\u4040\u0180;fl\u1AE8\u1AE9\u1AEB\u6201\xEE\u1160e\u0100mx\u1AF1\u1AF6ent\xBB\u1AE9e\xF3\u024D\u01E7\u1AFE\0\u1B07\u0100;d\u12BB\u1B02ot;\u6A6Dn\xF4\u0246\u0180fry\u1B10\u1B14\u1B17;\uC000\u{1D554}o\xE4\u0254\u8100\xA9;s\u0155\u1B1Dr;\u6117\u0100ao\u1B25\u1B29rr;\u61B5ss;\u6717\u0100cu\u1B32\u1B37r;\uC000\u{1D4B8}\u0100bp\u1B3C\u1B44\u0100;e\u1B41\u1B42\u6ACF;\u6AD1\u0100;e\u1B49\u1B4A\u6AD0;\u6AD2dot;\u62EF\u0380delprvw\u1B60\u1B6C\u1B77\u1B82\u1BAC\u1BD4\u1BF9arr\u0100lr\u1B68\u1B6A;\u6938;\u6935\u0270\u1B72\0\0\u1B75r;\u62DEc;\u62DFarr\u0100;p\u1B7F\u1B80\u61B6;\u693D\u0300;bcdos\u1B8F\u1B90\u1B96\u1BA1\u1BA5\u1BA8\u622Arcap;\u6A48\u0100au\u1B9B\u1B9Ep;\u6A46p;\u6A4Aot;\u628Dr;\u6A45;\uC000\u222A\uFE00\u0200alrv\u1BB5\u1BBF\u1BDE\u1BE3rr\u0100;m\u1BBC\u1BBD\u61B7;\u693Cy\u0180evw\u1BC7\u1BD4\u1BD8q\u0270\u1BCE\0\0\u1BD2re\xE3\u1B73u\xE3\u1B75ee;\u62CEedge;\u62CFen\u803B\xA4\u40A4earrow\u0100lr\u1BEE\u1BF3eft\xBB\u1B80ight\xBB\u1BBDe\xE4\u1BDD\u0100ci\u1C01\u1C07onin\xF4\u01F7nt;\u6231lcty;\u632D\u0980AHabcdefhijlorstuwz\u1C38\u1C3B\u1C3F\u1C5D\u1C69\u1C75\u1C8A\u1C9E\u1CAC\u1CB7\u1CFB\u1CFF\u1D0D\u1D7B\u1D91\u1DAB\u1DBB\u1DC6\u1DCDr\xF2\u0381ar;\u6965\u0200glrs\u1C48\u1C4D\u1C52\u1C54ger;\u6020eth;\u6138\xF2\u1133h\u0100;v\u1C5A\u1C5B\u6010\xBB\u090A\u016B\u1C61\u1C67arow;\u690Fa\xE3\u0315\u0100ay\u1C6E\u1C73ron;\u410F;\u4434\u0180;ao\u0332\u1C7C\u1C84\u0100gr\u02BF\u1C81r;\u61CAtseq;\u6A77\u0180glm\u1C91\u1C94\u1C98\u803B\xB0\u40B0ta;\u43B4ptyv;\u69B1\u0100ir\u1CA3\u1CA8sht;\u697F;\uC000\u{1D521}ar\u0100lr\u1CB3\u1CB5\xBB\u08DC\xBB\u101E\u0280aegsv\u1CC2\u0378\u1CD6\u1CDC\u1CE0m\u0180;os\u0326\u1CCA\u1CD4nd\u0100;s\u0326\u1CD1uit;\u6666amma;\u43DDin;\u62F2\u0180;io\u1CE7\u1CE8\u1CF8\u40F7de\u8100\xF7;o\u1CE7\u1CF0ntimes;\u62C7n\xF8\u1CF7cy;\u4452c\u026F\u1D06\0\0\u1D0Arn;\u631Eop;\u630D\u0280lptuw\u1D18\u1D1D\u1D22\u1D49\u1D55lar;\u4024f;\uC000\u{1D555}\u0280;emps\u030B\u1D2D\u1D37\u1D3D\u1D42q\u0100;d\u0352\u1D33ot;\u6251inus;\u6238lus;\u6214quare;\u62A1blebarwedg\xE5\xFAn\u0180adh\u112E\u1D5D\u1D67ownarrow\xF3\u1C83arpoon\u0100lr\u1D72\u1D76ef\xF4\u1CB4igh\xF4\u1CB6\u0162\u1D7F\u1D85karo\xF7\u0F42\u026F\u1D8A\0\0\u1D8Ern;\u631Fop;\u630C\u0180cot\u1D98\u1DA3\u1DA6\u0100ry\u1D9D\u1DA1;\uC000\u{1D4B9};\u4455l;\u69F6rok;\u4111\u0100dr\u1DB0\u1DB4ot;\u62F1i\u0100;f\u1DBA\u1816\u65BF\u0100ah\u1DC0\u1DC3r\xF2\u0429a\xF2\u0FA6angle;\u69A6\u0100ci\u1DD2\u1DD5y;\u445Fgrarr;\u67FF\u0900Dacdefglmnopqrstux\u1E01\u1E09\u1E19\u1E38\u0578\u1E3C\u1E49\u1E61\u1E7E\u1EA5\u1EAF\u1EBD\u1EE1\u1F2A\u1F37\u1F44\u1F4E\u1F5A\u0100Do\u1E06\u1D34o\xF4\u1C89\u0100cs\u1E0E\u1E14ute\u803B\xE9\u40E9ter;\u6A6E\u0200aioy\u1E22\u1E27\u1E31\u1E36ron;\u411Br\u0100;c\u1E2D\u1E2E\u6256\u803B\xEA\u40EAlon;\u6255;\u444Dot;\u4117\u0100Dr\u1E41\u1E45ot;\u6252;\uC000\u{1D522}\u0180;rs\u1E50\u1E51\u1E57\u6A9Aave\u803B\xE8\u40E8\u0100;d\u1E5C\u1E5D\u6A96ot;\u6A98\u0200;ils\u1E6A\u1E6B\u1E72\u1E74\u6A99nters;\u63E7;\u6113\u0100;d\u1E79\u1E7A\u6A95ot;\u6A97\u0180aps\u1E85\u1E89\u1E97cr;\u4113ty\u0180;sv\u1E92\u1E93\u1E95\u6205et\xBB\u1E93p\u01001;\u1E9D\u1EA4\u0133\u1EA1\u1EA3;\u6004;\u6005\u6003\u0100gs\u1EAA\u1EAC;\u414Bp;\u6002\u0100gp\u1EB4\u1EB8on;\u4119f;\uC000\u{1D556}\u0180als\u1EC4\u1ECE\u1ED2r\u0100;s\u1ECA\u1ECB\u62D5l;\u69E3us;\u6A71i\u0180;lv\u1EDA\u1EDB\u1EDF\u43B5on\xBB\u1EDB;\u43F5\u0200csuv\u1EEA\u1EF3\u1F0B\u1F23\u0100io\u1EEF\u1E31rc\xBB\u1E2E\u0269\u1EF9\0\0\u1EFB\xED\u0548ant\u0100gl\u1F02\u1F06tr\xBB\u1E5Dess\xBB\u1E7A\u0180aei\u1F12\u1F16\u1F1Als;\u403Dst;\u625Fv\u0100;D\u0235\u1F20D;\u6A78parsl;\u69E5\u0100Da\u1F2F\u1F33ot;\u6253rr;\u6971\u0180cdi\u1F3E\u1F41\u1EF8r;\u612Fo\xF4\u0352\u0100ah\u1F49\u1F4B;\u43B7\u803B\xF0\u40F0\u0100mr\u1F53\u1F57l\u803B\xEB\u40EBo;\u60AC\u0180cip\u1F61\u1F64\u1F67l;\u4021s\xF4\u056E\u0100eo\u1F6C\u1F74ctatio\xEE\u0559nential\xE5\u0579\u09E1\u1F92\0\u1F9E\0\u1FA1\u1FA7\0\0\u1FC6\u1FCC\0\u1FD3\0\u1FE6\u1FEA\u2000\0\u2008\u205Allingdotse\xF1\u1E44y;\u4444male;\u6640\u0180ilr\u1FAD\u1FB3\u1FC1lig;\u8000\uFB03\u0269\u1FB9\0\0\u1FBDg;\u8000\uFB00ig;\u8000\uFB04;\uC000\u{1D523}lig;\u8000\uFB01lig;\uC000fj\u0180alt\u1FD9\u1FDC\u1FE1t;\u666Dig;\u8000\uFB02ns;\u65B1of;\u4192\u01F0\u1FEE\0\u1FF3f;\uC000\u{1D557}\u0100ak\u05BF\u1FF7\u0100;v\u1FFC\u1FFD\u62D4;\u6AD9artint;\u6A0D\u0100ao\u200C\u2055\u0100cs\u2011\u2052\u03B1\u201A\u2030\u2038\u2045\u2048\0\u2050\u03B2\u2022\u2025\u2027\u202A\u202C\0\u202E\u803B\xBD\u40BD;\u6153\u803B\xBC\u40BC;\u6155;\u6159;\u615B\u01B3\u2034\0\u2036;\u6154;\u6156\u02B4\u203E\u2041\0\0\u2043\u803B\xBE\u40BE;\u6157;\u615C5;\u6158\u01B6\u204C\0\u204E;\u615A;\u615D8;\u615El;\u6044wn;\u6322cr;\uC000\u{1D4BB}\u0880Eabcdefgijlnorstv\u2082\u2089\u209F\u20A5\u20B0\u20B4\u20F0\u20F5\u20FA\u20FF\u2103\u2112\u2138\u0317\u213E\u2152\u219E\u0100;l\u064D\u2087;\u6A8C\u0180cmp\u2090\u2095\u209Dute;\u41F5ma\u0100;d\u209C\u1CDA\u43B3;\u6A86reve;\u411F\u0100iy\u20AA\u20AErc;\u411D;\u4433ot;\u4121\u0200;lqs\u063E\u0642\u20BD\u20C9\u0180;qs\u063E\u064C\u20C4lan\xF4\u0665\u0200;cdl\u0665\u20D2\u20D5\u20E5c;\u6AA9ot\u0100;o\u20DC\u20DD\u6A80\u0100;l\u20E2\u20E3\u6A82;\u6A84\u0100;e\u20EA\u20ED\uC000\u22DB\uFE00s;\u6A94r;\uC000\u{1D524}\u0100;g\u0673\u061Bmel;\u6137cy;\u4453\u0200;Eaj\u065A\u210C\u210E\u2110;\u6A92;\u6AA5;\u6AA4\u0200Eaes\u211B\u211D\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6A8Arox\xBB\u2124\u0100;q\u212E\u212F\u6A88\u0100;q\u212E\u211Bim;\u62E7pf;\uC000\u{1D558}\u0100ci\u2143\u2146r;\u610Am\u0180;el\u066B\u214E\u2150;\u6A8E;\u6A90\u8300>;cdlqr\u05EE\u2160\u216A\u216E\u2173\u2179\u0100ci\u2165\u2167;\u6AA7r;\u6A7Aot;\u62D7Par;\u6995uest;\u6A7C\u0280adels\u2184\u216A\u2190\u0656\u219B\u01F0\u2189\0\u218Epro\xF8\u209Er;\u6978q\u0100lq\u063F\u2196les\xF3\u2088i\xED\u066B\u0100en\u21A3\u21ADrtneqq;\uC000\u2269\uFE00\xC5\u21AA\u0500Aabcefkosy\u21C4\u21C7\u21F1\u21F5\u21FA\u2218\u221D\u222F\u2268\u227Dr\xF2\u03A0\u0200ilmr\u21D0\u21D4\u21D7\u21DBrs\xF0\u1484f\xBB\u2024il\xF4\u06A9\u0100dr\u21E0\u21E4cy;\u444A\u0180;cw\u08F4\u21EB\u21EFir;\u6948;\u61ADar;\u610Firc;\u4125\u0180alr\u2201\u220E\u2213rts\u0100;u\u2209\u220A\u6665it\xBB\u220Alip;\u6026con;\u62B9r;\uC000\u{1D525}s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223A\u223E\u2243\u225E\u2263rr;\u61FFtht;\u623Bk\u0100lr\u2249\u2253eftarrow;\u61A9ightarrow;\u61AAf;\uC000\u{1D559}bar;\u6015\u0180clt\u226F\u2274\u2278r;\uC000\u{1D4BD}as\xE8\u21F4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xBB\u1C5B\u0AE1\u22A3\0\u22AA\0\u22B8\u22C5\u22CE\0\u22D5\u22F3\0\0\u22F8\u2322\u2367\u2362\u237F\0\u2386\u23AA\u23B4cute\u803B\xED\u40ED\u0180;iy\u0771\u22B0\u22B5rc\u803B\xEE\u40EE;\u4438\u0100cx\u22BC\u22BFy;\u4435cl\u803B\xA1\u40A1\u0100fr\u039F\u22C9;\uC000\u{1D526}rave\u803B\xEC\u40EC\u0200;ino\u073E\u22DD\u22E9\u22EE\u0100in\u22E2\u22E6nt;\u6A0Ct;\u622Dfin;\u69DCta;\u6129lig;\u4133\u0180aop\u22FE\u231A\u231D\u0180cgt\u2305\u2308\u2317r;\u412B\u0180elp\u071F\u230F\u2313in\xE5\u078Ear\xF4\u0720h;\u4131f;\u62B7ed;\u41B5\u0280;cfot\u04F4\u232C\u2331\u233D\u2341are;\u6105in\u0100;t\u2338\u2339\u621Eie;\u69DDdo\xF4\u2319\u0280;celp\u0757\u234C\u2350\u235B\u2361al;\u62BA\u0100gr\u2355\u2359er\xF3\u1563\xE3\u234Darhk;\u6A17rod;\u6A3C\u0200cgpt\u236F\u2372\u2376\u237By;\u4451on;\u412Ff;\uC000\u{1D55A}a;\u43B9uest\u803B\xBF\u40BF\u0100ci\u238A\u238Fr;\uC000\u{1D4BE}n\u0280;Edsv\u04F4\u239B\u239D\u23A1\u04F3;\u62F9ot;\u62F5\u0100;v\u23A6\u23A7\u62F4;\u62F3\u0100;i\u0777\u23AElde;\u4129\u01EB\u23B8\0\u23BCcy;\u4456l\u803B\xEF\u40EF\u0300cfmosu\u23CC\u23D7\u23DC\u23E1\u23E7\u23F5\u0100iy\u23D1\u23D5rc;\u4135;\u4439r;\uC000\u{1D527}ath;\u4237pf;\uC000\u{1D55B}\u01E3\u23EC\0\u23F1r;\uC000\u{1D4BF}rcy;\u4458kcy;\u4454\u0400acfghjos\u240B\u2416\u2422\u2427\u242D\u2431\u2435\u243Bppa\u0100;v\u2413\u2414\u43BA;\u43F0\u0100ey\u241B\u2420dil;\u4137;\u443Ar;\uC000\u{1D528}reen;\u4138cy;\u4445cy;\u445Cpf;\uC000\u{1D55C}cr;\uC000\u{1D4C0}\u0B80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248D\u2491\u250E\u253D\u255A\u2580\u264E\u265E\u2665\u2679\u267D\u269A\u26B2\u26D8\u275D\u2768\u278B\u27C0\u2801\u2812\u0180art\u2477\u247A\u247Cr\xF2\u09C6\xF2\u0395ail;\u691Barr;\u690E\u0100;g\u0994\u248B;\u6A8Bar;\u6962\u0963\u24A5\0\u24AA\0\u24B1\0\0\0\0\0\u24B5\u24BA\0\u24C6\u24C8\u24CD\0\u24F9ute;\u413Amptyv;\u69B4ra\xEE\u084Cbda;\u43BBg\u0180;dl\u088E\u24C1\u24C3;\u6991\xE5\u088E;\u6A85uo\u803B\xAB\u40ABr\u0400;bfhlpst\u0899\u24DE\u24E6\u24E9\u24EB\u24EE\u24F1\u24F5\u0100;f\u089D\u24E3s;\u691Fs;\u691D\xEB\u2252p;\u61ABl;\u6939im;\u6973l;\u61A2\u0180;ae\u24FF\u2500\u2504\u6AABil;\u6919\u0100;s\u2509\u250A\u6AAD;\uC000\u2AAD\uFE00\u0180abr\u2515\u2519\u251Drr;\u690Crk;\u6772\u0100ak\u2522\u252Cc\u0100ek\u2528\u252A;\u407B;\u405B\u0100es\u2531\u2533;\u698Bl\u0100du\u2539\u253B;\u698F;\u698D\u0200aeuy\u2546\u254B\u2556\u2558ron;\u413E\u0100di\u2550\u2554il;\u413C\xEC\u08B0\xE2\u2529;\u443B\u0200cqrs\u2563\u2566\u256D\u257Da;\u6936uo\u0100;r\u0E19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694Bh;\u61B2\u0280;fgqs\u258B\u258C\u0989\u25F3\u25FF\u6264t\u0280ahlrt\u2598\u25A4\u25B7\u25C2\u25E8rrow\u0100;t\u0899\u25A1a\xE9\u24F6arpoon\u0100du\u25AF\u25B4own\xBB\u045Ap\xBB\u0966eftarrows;\u61C7ight\u0180ahs\u25CD\u25D6\u25DErrow\u0100;s\u08F4\u08A7arpoon\xF3\u0F98quigarro\xF7\u21F0hreetimes;\u62CB\u0180;qs\u258B\u0993\u25FAlan\xF4\u09AC\u0280;cdgs\u09AC\u260A\u260D\u261D\u2628c;\u6AA8ot\u0100;o\u2614\u2615\u6A7F\u0100;r\u261A\u261B\u6A81;\u6A83\u0100;e\u2622\u2625\uC000\u22DA\uFE00s;\u6A93\u0280adegs\u2633\u2639\u263D\u2649\u264Bppro\xF8\u24C6ot;\u62D6q\u0100gq\u2643\u2645\xF4\u0989gt\xF2\u248C\xF4\u099Bi\xED\u09B2\u0180ilr\u2655\u08E1\u265Asht;\u697C;\uC000\u{1D529}\u0100;E\u099C\u2663;\u6A91\u0161\u2669\u2676r\u0100du\u25B2\u266E\u0100;l\u0965\u2673;\u696Alk;\u6584cy;\u4459\u0280;acht\u0A48\u2688\u268B\u2691\u2696r\xF2\u25C1orne\xF2\u1D08ard;\u696Bri;\u65FA\u0100io\u269F\u26A4dot;\u4140ust\u0100;a\u26AC\u26AD\u63B0che\xBB\u26AD\u0200Eaes\u26BB\u26BD\u26C9\u26D4;\u6268p\u0100;p\u26C3\u26C4\u6A89rox\xBB\u26C4\u0100;q\u26CE\u26CF\u6A87\u0100;q\u26CE\u26BBim;\u62E6\u0400abnoptwz\u26E9\u26F4\u26F7\u271A\u272F\u2741\u2747\u2750\u0100nr\u26EE\u26F1g;\u67ECr;\u61FDr\xEB\u08C1g\u0180lmr\u26FF\u270D\u2714eft\u0100ar\u09E6\u2707ight\xE1\u09F2apsto;\u67FCight\xE1\u09FDparrow\u0100lr\u2725\u2729ef\xF4\u24EDight;\u61AC\u0180afl\u2736\u2739\u273Dr;\u6985;\uC000\u{1D55D}us;\u6A2Dimes;\u6A34\u0161\u274B\u274Fst;\u6217\xE1\u134E\u0180;ef\u2757\u2758\u1800\u65CAnge\xBB\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277C\u2785\u2787r\xF2\u08A8orne\xF2\u1D8Car\u0100;d\u0F98\u2783;\u696D;\u600Eri;\u62BF\u0300achiqt\u2798\u279D\u0A40\u27A2\u27AE\u27BBquo;\u6039r;\uC000\u{1D4C1}m\u0180;eg\u09B2\u27AA\u27AC;\u6A8D;\u6A8F\u0100bu\u252A\u27B3o\u0100;r\u0E1F\u27B9;\u601Arok;\u4142\u8400<;cdhilqr\u082B\u27D2\u2639\u27DC\u27E0\u27E5\u27EA\u27F0\u0100ci\u27D7\u27D9;\u6AA6r;\u6A79re\xE5\u25F2mes;\u62C9arr;\u6976uest;\u6A7B\u0100Pi\u27F5\u27F9ar;\u6996\u0180;ef\u2800\u092D\u181B\u65C3r\u0100du\u2807\u280Dshar;\u694Ahar;\u6966\u0100en\u2817\u2821rtneqq;\uC000\u2268\uFE00\xC5\u281E\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288E\u2893\u28A0\u28A5\u28A8\u28DA\u28E2\u28E4\u0A83\u28F3\u2902Dot;\u623A\u0200clpr\u284E\u2852\u2863\u287Dr\u803B\xAF\u40AF\u0100et\u2857\u2859;\u6642\u0100;e\u285E\u285F\u6720se\xBB\u285F\u0100;s\u103B\u2868to\u0200;dlu\u103B\u2873\u2877\u287Bow\xEE\u048Cef\xF4\u090F\xF0\u13D1ker;\u65AE\u0100oy\u2887\u288Cmma;\u6A29;\u443Cash;\u6014asuredangle\xBB\u1626r;\uC000\u{1D52A}o;\u6127\u0180cdn\u28AF\u28B4\u28C9ro\u803B\xB5\u40B5\u0200;acd\u1464\u28BD\u28C0\u28C4s\xF4\u16A7ir;\u6AF0ot\u80BB\xB7\u01B5us\u0180;bd\u28D2\u1903\u28D3\u6212\u0100;u\u1D3C\u28D8;\u6A2A\u0163\u28DE\u28E1p;\u6ADB\xF2\u2212\xF0\u0A81\u0100dp\u28E9\u28EEels;\u62A7f;\uC000\u{1D55E}\u0100ct\u28F8\u28FDr;\uC000\u{1D4C2}pos\xBB\u159D\u0180;lm\u2909\u290A\u290D\u43BCtimap;\u62B8\u0C00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297E\u2989\u2998\u29DA\u29E9\u2A15\u2A1A\u2A58\u2A5D\u2A83\u2A95\u2AA4\u2AA8\u2B04\u2B07\u2B44\u2B7F\u2BAE\u2C34\u2C67\u2C7C\u2CE9\u0100gt\u2947\u294B;\uC000\u22D9\u0338\u0100;v\u2950\u0BCF\uC000\u226B\u20D2\u0180elt\u295A\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61CDightarrow;\u61CE;\uC000\u22D8\u0338\u0100;v\u297B\u0C47\uC000\u226A\u20D2ightarrow;\u61CF\u0100Dd\u298E\u2993ash;\u62AFash;\u62AE\u0280bcnpt\u29A3\u29A7\u29AC\u29B1\u29CCla\xBB\u02DEute;\u4144g;\uC000\u2220\u20D2\u0280;Eiop\u0D84\u29BC\u29C0\u29C5\u29C8;\uC000\u2A70\u0338d;\uC000\u224B\u0338s;\u4149ro\xF8\u0D84ur\u0100;a\u29D3\u29D4\u666El\u0100;s\u29D3\u0B38\u01F3\u29DF\0\u29E3p\u80BB\xA0\u0B37mp\u0100;e\u0BF9\u0C00\u0280aeouy\u29F4\u29FE\u2A03\u2A10\u2A13\u01F0\u29F9\0\u29FB;\u6A43on;\u4148dil;\u4146ng\u0100;d\u0D7E\u2A0Aot;\uC000\u2A6D\u0338p;\u6A42;\u443Dash;\u6013\u0380;Aadqsx\u0B92\u2A29\u2A2D\u2A3B\u2A41\u2A45\u2A50rr;\u61D7r\u0100hr\u2A33\u2A36k;\u6924\u0100;o\u13F2\u13F0ot;\uC000\u2250\u0338ui\xF6\u0B63\u0100ei\u2A4A\u2A4Ear;\u6928\xED\u0B98ist\u0100;s\u0BA0\u0B9Fr;\uC000\u{1D52B}\u0200Eest\u0BC5\u2A66\u2A79\u2A7C\u0180;qs\u0BBC\u2A6D\u0BE1\u0180;qs\u0BBC\u0BC5\u2A74lan\xF4\u0BE2i\xED\u0BEA\u0100;r\u0BB6\u2A81\xBB\u0BB7\u0180Aap\u2A8A\u2A8D\u2A91r\xF2\u2971rr;\u61AEar;\u6AF2\u0180;sv\u0F8D\u2A9C\u0F8C\u0100;d\u2AA1\u2AA2\u62FC;\u62FAcy;\u445A\u0380AEadest\u2AB7\u2ABA\u2ABE\u2AC2\u2AC5\u2AF6\u2AF9r\xF2\u2966;\uC000\u2266\u0338rr;\u619Ar;\u6025\u0200;fqs\u0C3B\u2ACE\u2AE3\u2AEFt\u0100ar\u2AD4\u2AD9rro\xF7\u2AC1ightarro\xF7\u2A90\u0180;qs\u0C3B\u2ABA\u2AEAlan\xF4\u0C55\u0100;s\u0C55\u2AF4\xBB\u0C36i\xED\u0C5D\u0100;r\u0C35\u2AFEi\u0100;e\u0C1A\u0C25i\xE4\u0D90\u0100pt\u2B0C\u2B11f;\uC000\u{1D55F}\u8180\xAC;in\u2B19\u2B1A\u2B36\u40ACn\u0200;Edv\u0B89\u2B24\u2B28\u2B2E;\uC000\u22F9\u0338ot;\uC000\u22F5\u0338\u01E1\u0B89\u2B33\u2B35;\u62F7;\u62F6i\u0100;v\u0CB8\u2B3C\u01E1\u0CB8\u2B41\u2B43;\u62FE;\u62FD\u0180aor\u2B4B\u2B63\u2B69r\u0200;ast\u0B7B\u2B55\u2B5A\u2B5Flle\xEC\u0B7Bl;\uC000\u2AFD\u20E5;\uC000\u2202\u0338lint;\u6A14\u0180;ce\u0C92\u2B70\u2B73u\xE5\u0CA5\u0100;c\u0C98\u2B78\u0100;e\u0C92\u2B7D\xF1\u0C98\u0200Aait\u2B88\u2B8B\u2B9D\u2BA7r\xF2\u2988rr\u0180;cw\u2B94\u2B95\u2B99\u619B;\uC000\u2933\u0338;\uC000\u219D\u0338ghtarrow\xBB\u2B95ri\u0100;e\u0CCB\u0CD6\u0380chimpqu\u2BBD\u2BCD\u2BD9\u2B04\u0B78\u2BE4\u2BEF\u0200;cer\u0D32\u2BC6\u0D37\u2BC9u\xE5\u0D45;\uC000\u{1D4C3}ort\u026D\u2B05\0\0\u2BD6ar\xE1\u2B56m\u0100;e\u0D6E\u2BDF\u0100;q\u0D74\u0D73su\u0100bp\u2BEB\u2BED\xE5\u0CF8\xE5\u0D0B\u0180bcp\u2BF6\u2C11\u2C19\u0200;Ees\u2BFF\u2C00\u0D22\u2C04\u6284;\uC000\u2AC5\u0338et\u0100;e\u0D1B\u2C0Bq\u0100;q\u0D23\u2C00c\u0100;e\u0D32\u2C17\xF1\u0D38\u0200;Ees\u2C22\u2C23\u0D5F\u2C27\u6285;\uC000\u2AC6\u0338et\u0100;e\u0D58\u2C2Eq\u0100;q\u0D60\u2C23\u0200gilr\u2C3D\u2C3F\u2C45\u2C47\xEC\u0BD7lde\u803B\xF1\u40F1\xE7\u0C43iangle\u0100lr\u2C52\u2C5Ceft\u0100;e\u0C1A\u2C5A\xF1\u0C26ight\u0100;e\u0CCB\u2C65\xF1\u0CD7\u0100;m\u2C6C\u2C6D\u43BD\u0180;es\u2C74\u2C75\u2C79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2C8F\u2C94\u2C99\u2C9E\u2CA3\u2CB0\u2CB6\u2CD3\u2CE3ash;\u62ADarr;\u6904p;\uC000\u224D\u20D2ash;\u62AC\u0100et\u2CA8\u2CAC;\uC000\u2265\u20D2;\uC000>\u20D2nfin;\u69DE\u0180Aet\u2CBD\u2CC1\u2CC5rr;\u6902;\uC000\u2264\u20D2\u0100;r\u2CCA\u2CCD\uC000<\u20D2ie;\uC000\u22B4\u20D2\u0100At\u2CD8\u2CDCrr;\u6903rie;\uC000\u22B5\u20D2im;\uC000\u223C\u20D2\u0180Aan\u2CF0\u2CF4\u2D02rr;\u61D6r\u0100hr\u2CFA\u2CFDk;\u6923\u0100;o\u13E7\u13E5ear;\u6927\u1253\u1A95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2D2D\0\u2D38\u2D48\u2D60\u2D65\u2D72\u2D84\u1B07\0\0\u2D8D\u2DAB\0\u2DC8\u2DCE\0\u2DDC\u2E19\u2E2B\u2E3E\u2E43\u0100cs\u2D31\u1A97ute\u803B\xF3\u40F3\u0100iy\u2D3C\u2D45r\u0100;c\u1A9E\u2D42\u803B\xF4\u40F4;\u443E\u0280abios\u1AA0\u2D52\u2D57\u01C8\u2D5Alac;\u4151v;\u6A38old;\u69BClig;\u4153\u0100cr\u2D69\u2D6Dir;\u69BF;\uC000\u{1D52C}\u036F\u2D79\0\0\u2D7C\0\u2D82n;\u42DBave\u803B\xF2\u40F2;\u69C1\u0100bm\u2D88\u0DF4ar;\u69B5\u0200acit\u2D95\u2D98\u2DA5\u2DA8r\xF2\u1A80\u0100ir\u2D9D\u2DA0r;\u69BEoss;\u69BBn\xE5\u0E52;\u69C0\u0180aei\u2DB1\u2DB5\u2DB9cr;\u414Dga;\u43C9\u0180cdn\u2DC0\u2DC5\u01CDron;\u43BF;\u69B6pf;\uC000\u{1D560}\u0180ael\u2DD4\u2DD7\u01D2r;\u69B7rp;\u69B9\u0380;adiosv\u2DEA\u2DEB\u2DEE\u2E08\u2E0D\u2E10\u2E16\u6228r\xF2\u1A86\u0200;efm\u2DF7\u2DF8\u2E02\u2E05\u6A5Dr\u0100;o\u2DFE\u2DFF\u6134f\xBB\u2DFF\u803B\xAA\u40AA\u803B\xBA\u40BAgof;\u62B6r;\u6A56lope;\u6A57;\u6A5B\u0180clo\u2E1F\u2E21\u2E27\xF2\u2E01ash\u803B\xF8\u40F8l;\u6298i\u016C\u2E2F\u2E34de\u803B\xF5\u40F5es\u0100;a\u01DB\u2E3As;\u6A36ml\u803B\xF6\u40F6bar;\u633D\u0AE1\u2E5E\0\u2E7D\0\u2E80\u2E9D\0\u2EA2\u2EB9\0\0\u2ECB\u0E9C\0\u2F13\0\0\u2F2B\u2FBC\0\u2FC8r\u0200;ast\u0403\u2E67\u2E72\u0E85\u8100\xB6;l\u2E6D\u2E6E\u40B6le\xEC\u0403\u0269\u2E78\0\0\u2E7Bm;\u6AF3;\u6AFDy;\u443Fr\u0280cimpt\u2E8B\u2E8F\u2E93\u1865\u2E97nt;\u4025od;\u402Eil;\u6030enk;\u6031r;\uC000\u{1D52D}\u0180imo\u2EA8\u2EB0\u2EB4\u0100;v\u2EAD\u2EAE\u43C6;\u43D5ma\xF4\u0A76ne;\u660E\u0180;tv\u2EBF\u2EC0\u2EC8\u43C0chfork\xBB\u1FFD;\u43D6\u0100au\u2ECF\u2EDFn\u0100ck\u2ED5\u2EDDk\u0100;h\u21F4\u2EDB;\u610E\xF6\u21F4s\u0480;abcdemst\u2EF3\u2EF4\u1908\u2EF9\u2EFD\u2F04\u2F06\u2F0A\u2F0E\u402Bcir;\u6A23ir;\u6A22\u0100ou\u1D40\u2F02;\u6A25;\u6A72n\u80BB\xB1\u0E9Dim;\u6A26wo;\u6A27\u0180ipu\u2F19\u2F20\u2F25ntint;\u6A15f;\uC000\u{1D561}nd\u803B\xA3\u40A3\u0500;Eaceinosu\u0EC8\u2F3F\u2F41\u2F44\u2F47\u2F81\u2F89\u2F92\u2F7E\u2FB6;\u6AB3p;\u6AB7u\xE5\u0ED9\u0100;c\u0ECE\u2F4C\u0300;acens\u0EC8\u2F59\u2F5F\u2F66\u2F68\u2F7Eppro\xF8\u2F43urlye\xF1\u0ED9\xF1\u0ECE\u0180aes\u2F6F\u2F76\u2F7Approx;\u6AB9qq;\u6AB5im;\u62E8i\xED\u0EDFme\u0100;s\u2F88\u0EAE\u6032\u0180Eas\u2F78\u2F90\u2F7A\xF0\u2F75\u0180dfp\u0EEC\u2F99\u2FAF\u0180als\u2FA0\u2FA5\u2FAAlar;\u632Eine;\u6312urf;\u6313\u0100;t\u0EFB\u2FB4\xEF\u0EFBrel;\u62B0\u0100ci\u2FC0\u2FC5r;\uC000\u{1D4C5};\u43C8ncsp;\u6008\u0300fiopsu\u2FDA\u22E2\u2FDF\u2FE5\u2FEB\u2FF1r;\uC000\u{1D52E}pf;\uC000\u{1D562}rime;\u6057cr;\uC000\u{1D4C6}\u0180aeo\u2FF8\u3009\u3013t\u0100ei\u2FFE\u3005rnion\xF3\u06B0nt;\u6A16st\u0100;e\u3010\u3011\u403F\xF1\u1F19\xF4\u0F14\u0A80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30E0\u310E\u312B\u3147\u3162\u3172\u318E\u3206\u3215\u3224\u3229\u3258\u326E\u3272\u3290\u32B0\u32B7\u0180art\u3047\u304A\u304Cr\xF2\u10B3\xF2\u03DDail;\u691Car\xF2\u1C65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307F\u308F\u3094\u30CC\u0100eu\u306D\u3071;\uC000\u223D\u0331te;\u4155i\xE3\u116Emptyv;\u69B3g\u0200;del\u0FD1\u3089\u308B\u308D;\u6992;\u69A5\xE5\u0FD1uo\u803B\xBB\u40BBr\u0580;abcfhlpstw\u0FDC\u30AC\u30AF\u30B7\u30B9\u30BC\u30BE\u30C0\u30C3\u30C7\u30CAp;\u6975\u0100;f\u0FE0\u30B4s;\u6920;\u6933s;\u691E\xEB\u225D\xF0\u272El;\u6945im;\u6974l;\u61A3;\u619D\u0100ai\u30D1\u30D5il;\u691Ao\u0100;n\u30DB\u30DC\u6236al\xF3\u0F1E\u0180abr\u30E7\u30EA\u30EEr\xF2\u17E5rk;\u6773\u0100ak\u30F3\u30FDc\u0100ek\u30F9\u30FB;\u407D;\u405D\u0100es\u3102\u3104;\u698Cl\u0100du\u310A\u310C;\u698E;\u6990\u0200aeuy\u3117\u311C\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xEC\u0FF2\xE2\u30FA;\u4440\u0200clqs\u3134\u3137\u313D\u3144a;\u6937dhar;\u6969uo\u0100;r\u020E\u020Dh;\u61B3\u0180acg\u314E\u315F\u0F44l\u0200;ips\u0F78\u3158\u315B\u109Cn\xE5\u10BBar\xF4\u0FA9t;\u65AD\u0180ilr\u3169\u1023\u316Esht;\u697D;\uC000\u{1D52F}\u0100ao\u3177\u3186r\u0100du\u317D\u317F\xBB\u047B\u0100;l\u1091\u3184;\u696C\u0100;v\u318B\u318C\u43C1;\u43F1\u0180gns\u3195\u31F9\u31FCht\u0300ahlrst\u31A4\u31B0\u31C2\u31D8\u31E4\u31EErrow\u0100;t\u0FDC\u31ADa\xE9\u30C8arpoon\u0100du\u31BB\u31BFow\xEE\u317Ep\xBB\u1092eft\u0100ah\u31CA\u31D0rrow\xF3\u0FEAarpoon\xF3\u0551ightarrows;\u61C9quigarro\xF7\u30CBhreetimes;\u62CCg;\u42DAingdotse\xF1\u1F32\u0180ahm\u320D\u3210\u3213r\xF2\u0FEAa\xF2\u0551;\u600Foust\u0100;a\u321E\u321F\u63B1che\xBB\u321Fmid;\u6AEE\u0200abpt\u3232\u323D\u3240\u3252\u0100nr\u3237\u323Ag;\u67EDr;\u61FEr\xEB\u1003\u0180afl\u3247\u324A\u324Er;\u6986;\uC000\u{1D563}us;\u6A2Eimes;\u6A35\u0100ap\u325D\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6A12ar\xF2\u31E3\u0200achq\u327B\u3280\u10BC\u3285quo;\u603Ar;\uC000\u{1D4C7}\u0100bu\u30FB\u328Ao\u0100;r\u0214\u0213\u0180hir\u3297\u329B\u32A0re\xE5\u31F8mes;\u62CAi\u0200;efl\u32AA\u1059\u1821\u32AB\u65B9tri;\u69CEluhar;\u6968;\u611E\u0D61\u32D5\u32DB\u32DF\u332C\u3338\u3371\0\u337A\u33A4\0\0\u33EC\u33F0\0\u3428\u3448\u345A\u34AD\u34B1\u34CA\u34F1\0\u3616\0\0\u3633cute;\u415Bqu\xEF\u27BA\u0500;Eaceinpsy\u11ED\u32F3\u32F5\u32FF\u3302\u330B\u330F\u331F\u3326\u3329;\u6AB4\u01F0\u32FA\0\u32FC;\u6AB8on;\u4161u\xE5\u11FE\u0100;d\u11F3\u3307il;\u415Frc;\u415D\u0180Eas\u3316\u3318\u331B;\u6AB6p;\u6ABAim;\u62E9olint;\u6A13i\xED\u1204;\u4441ot\u0180;be\u3334\u1D47\u3335\u62C5;\u6A66\u0380Aacmstx\u3346\u334A\u3357\u335B\u335E\u3363\u336Drr;\u61D8r\u0100hr\u3350\u3352\xEB\u2228\u0100;o\u0A36\u0A34t\u803B\xA7\u40A7i;\u403Bwar;\u6929m\u0100in\u3369\xF0nu\xF3\xF1t;\u6736r\u0100;o\u3376\u2055\uC000\u{1D530}\u0200acoy\u3382\u3386\u3391\u33A0rp;\u666F\u0100hy\u338B\u338Fcy;\u4449;\u4448rt\u026D\u3399\0\0\u339Ci\xE4\u1464ara\xEC\u2E6F\u803B\xAD\u40AD\u0100gm\u33A8\u33B4ma\u0180;fv\u33B1\u33B2\u33B2\u43C3;\u43C2\u0400;deglnpr\u12AB\u33C5\u33C9\u33CE\u33D6\u33DE\u33E1\u33E6ot;\u6A6A\u0100;q\u12B1\u12B0\u0100;E\u33D3\u33D4\u6A9E;\u6AA0\u0100;E\u33DB\u33DC\u6A9D;\u6A9Fe;\u6246lus;\u6A24arr;\u6972ar\xF2\u113D\u0200aeit\u33F8\u3408\u340F\u3417\u0100ls\u33FD\u3404lsetm\xE9\u336Ahp;\u6A33parsl;\u69E4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341C\u341D\u6AAA\u0100;s\u3422\u3423\u6AAC;\uC000\u2AAC\uFE00\u0180flp\u342E\u3433\u3442tcy;\u444C\u0100;b\u3438\u3439\u402F\u0100;a\u343E\u343F\u69C4r;\u633Ff;\uC000\u{1D564}a\u0100dr\u344D\u0402es\u0100;u\u3454\u3455\u6660it\xBB\u3455\u0180csu\u3460\u3479\u349F\u0100au\u3465\u346Fp\u0100;s\u1188\u346B;\uC000\u2293\uFE00p\u0100;s\u11B4\u3475;\uC000\u2294\uFE00u\u0100bp\u347F\u348F\u0180;es\u1197\u119C\u3486et\u0100;e\u1197\u348D\xF1\u119D\u0180;es\u11A8\u11AD\u3496et\u0100;e\u11A8\u349D\xF1\u11AE\u0180;af\u117B\u34A6\u05B0r\u0165\u34AB\u05B1\xBB\u117Car\xF2\u1148\u0200cemt\u34B9\u34BE\u34C2\u34C5r;\uC000\u{1D4C8}tm\xEE\xF1i\xEC\u3415ar\xE6\u11BE\u0100ar\u34CE\u34D5r\u0100;f\u34D4\u17BF\u6606\u0100an\u34DA\u34EDight\u0100ep\u34E3\u34EApsilo\xEE\u1EE0h\xE9\u2EAFs\xBB\u2852\u0280bcmnp\u34FB\u355E\u1209\u358B\u358E\u0480;Edemnprs\u350E\u350F\u3511\u3515\u351E\u3523\u352C\u3531\u3536\u6282;\u6AC5ot;\u6ABD\u0100;d\u11DA\u351Aot;\u6AC3ult;\u6AC1\u0100Ee\u3528\u352A;\u6ACB;\u628Alus;\u6ABFarr;\u6979\u0180eiu\u353D\u3552\u3555t\u0180;en\u350E\u3545\u354Bq\u0100;q\u11DA\u350Feq\u0100;q\u352B\u3528m;\u6AC7\u0100bp\u355A\u355C;\u6AD5;\u6AD3c\u0300;acens\u11ED\u356C\u3572\u3579\u357B\u3326ppro\xF8\u32FAurlye\xF1\u11FE\xF1\u11F3\u0180aes\u3582\u3588\u331Bppro\xF8\u331Aq\xF1\u3317g;\u666A\u0680123;Edehlmnps\u35A9\u35AC\u35AF\u121C\u35B2\u35B4\u35C0\u35C9\u35D5\u35DA\u35DF\u35E8\u35ED\u803B\xB9\u40B9\u803B\xB2\u40B2\u803B\xB3\u40B3;\u6AC6\u0100os\u35B9\u35BCt;\u6ABEub;\u6AD8\u0100;d\u1222\u35C5ot;\u6AC4s\u0100ou\u35CF\u35D2l;\u67C9b;\u6AD7arr;\u697Bult;\u6AC2\u0100Ee\u35E4\u35E6;\u6ACC;\u628Blus;\u6AC0\u0180eiu\u35F4\u3609\u360Ct\u0180;en\u121C\u35FC\u3602q\u0100;q\u1222\u35B2eq\u0100;q\u35E7\u35E4m;\u6AC8\u0100bp\u3611\u3613;\u6AD4;\u6AD6\u0180Aan\u361C\u3620\u362Drr;\u61D9r\u0100hr\u3626\u3628\xEB\u222E\u0100;o\u0A2B\u0A29war;\u692Alig\u803B\xDF\u40DF\u0BE1\u3651\u365D\u3660\u12CE\u3673\u3679\0\u367E\u36C2\0\0\0\0\0\u36DB\u3703\0\u3709\u376C\0\0\0\u3787\u0272\u3656\0\0\u365Bget;\u6316;\u43C4r\xEB\u0E5F\u0180aey\u3666\u366B\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uC000\u{1D531}\u0200eiko\u3686\u369D\u36B5\u36BC\u01F2\u368B\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369B\u43B8ym;\u43D1\u0100cn\u36A2\u36B2k\u0100as\u36A8\u36AEppro\xF8\u12C1im\xBB\u12ACs\xF0\u129E\u0100as\u36BA\u36AE\xF0\u12C1rn\u803B\xFE\u40FE\u01EC\u031F\u36C6\u22E7es\u8180\xD7;bd\u36CF\u36D0\u36D8\u40D7\u0100;a\u190F\u36D5r;\u6A31;\u6A30\u0180eps\u36E1\u36E3\u3700\xE1\u2A4D\u0200;bcf\u0486\u36EC\u36F0\u36F4ot;\u6336ir;\u6AF1\u0100;o\u36F9\u36FC\uC000\u{1D565}rk;\u6ADA\xE1\u3362rime;\u6034\u0180aip\u370F\u3712\u3764d\xE5\u1248\u0380adempst\u3721\u374D\u3740\u3751\u3757\u375C\u375Fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65B5own\xBB\u1DBBeft\u0100;e\u2800\u373E\xF1\u092E;\u625Cight\u0100;e\u32AA\u374B\xF1\u105Aot;\u65ECinus;\u6A3Alus;\u6A39b;\u69CDime;\u6A3Bezium;\u63E2\u0180cht\u3772\u377D\u3781\u0100ry\u3777\u377B;\uC000\u{1D4C9};\u4446cy;\u445Brok;\u4167\u0100io\u378B\u378Ex\xF4\u1777head\u0100lr\u3797\u37A0eftarro\xF7\u084Fightarrow\xBB\u0F5D\u0900AHabcdfghlmoprstuw\u37D0\u37D3\u37D7\u37E4\u37F0\u37FC\u380E\u381C\u3823\u3834\u3851\u385D\u386B\u38A9\u38CC\u38D2\u38EA\u38F6r\xF2\u03EDar;\u6963\u0100cr\u37DC\u37E2ute\u803B\xFA\u40FA\xF2\u1150r\u01E3\u37EA\0\u37EDy;\u445Eve;\u416D\u0100iy\u37F5\u37FArc\u803B\xFB\u40FB;\u4443\u0180abh\u3803\u3806\u380Br\xF2\u13ADlac;\u4171a\xF2\u13C3\u0100ir\u3813\u3818sht;\u697E;\uC000\u{1D532}rave\u803B\xF9\u40F9\u0161\u3827\u3831r\u0100lr\u382C\u382E\xBB\u0957\xBB\u1083lk;\u6580\u0100ct\u3839\u384D\u026F\u383F\0\0\u384Arn\u0100;e\u3845\u3846\u631Cr\xBB\u3846op;\u630Fri;\u65F8\u0100al\u3856\u385Acr;\u416B\u80BB\xA8\u0349\u0100gp\u3862\u3866on;\u4173f;\uC000\u{1D566}\u0300adhlsu\u114B\u3878\u387D\u1372\u3891\u38A0own\xE1\u13B3arpoon\u0100lr\u3888\u388Cef\xF4\u382Digh\xF4\u382Fi\u0180;hl\u3899\u389A\u389C\u43C5\xBB\u13FAon\xBB\u389Aparrows;\u61C8\u0180cit\u38B0\u38C4\u38C8\u026F\u38B6\0\0\u38C1rn\u0100;e\u38BC\u38BD\u631Dr\xBB\u38BDop;\u630Eng;\u416Fri;\u65F9cr;\uC000\u{1D4CA}\u0180dir\u38D9\u38DD\u38E2ot;\u62F0lde;\u4169i\u0100;f\u3730\u38E8\xBB\u1813\u0100am\u38EF\u38F2r\xF2\u38A8l\u803B\xFC\u40FCangle;\u69A7\u0780ABDacdeflnoprsz\u391C\u391F\u3929\u392D\u39B5\u39B8\u39BD\u39DF\u39E4\u39E8\u39F3\u39F9\u39FD\u3A01\u3A20r\xF2\u03F7ar\u0100;v\u3926\u3927\u6AE8;\u6AE9as\xE8\u03E1\u0100nr\u3932\u3937grt;\u699C\u0380eknprst\u34E3\u3946\u394B\u3952\u395D\u3964\u3996app\xE1\u2415othin\xE7\u1E96\u0180hir\u34EB\u2EC8\u3959op\xF4\u2FB5\u0100;h\u13B7\u3962\xEF\u318D\u0100iu\u3969\u396Dgm\xE1\u33B3\u0100bp\u3972\u3984setneq\u0100;q\u397D\u3980\uC000\u228A\uFE00;\uC000\u2ACB\uFE00setneq\u0100;q\u398F\u3992\uC000\u228B\uFE00;\uC000\u2ACC\uFE00\u0100hr\u399B\u399Fet\xE1\u369Ciangle\u0100lr\u39AA\u39AFeft\xBB\u0925ight\xBB\u1051y;\u4432ash\xBB\u1036\u0180elr\u39C4\u39D2\u39D7\u0180;be\u2DEA\u39CB\u39CFar;\u62BBq;\u625Alip;\u62EE\u0100bt\u39DC\u1468a\xF2\u1469r;\uC000\u{1D533}tr\xE9\u39AEsu\u0100bp\u39EF\u39F1\xBB\u0D1C\xBB\u0D59pf;\uC000\u{1D567}ro\xF0\u0EFBtr\xE9\u39B4\u0100cu\u3A06\u3A0Br;\uC000\u{1D4CB}\u0100bp\u3A10\u3A18n\u0100Ee\u3980\u3A16\xBB\u397En\u0100Ee\u3992\u3A1E\xBB\u3990igzag;\u699A\u0380cefoprs\u3A36\u3A3B\u3A56\u3A5B\u3A54\u3A61\u3A6Airc;\u4175\u0100di\u3A40\u3A51\u0100bg\u3A45\u3A49ar;\u6A5Fe\u0100;q\u15FA\u3A4F;\u6259erp;\u6118r;\uC000\u{1D534}pf;\uC000\u{1D568}\u0100;e\u1479\u3A66at\xE8\u1479cr;\uC000\u{1D4CC}\u0AE3\u178E\u3A87\0\u3A8B\0\u3A90\u3A9B\0\0\u3A9D\u3AA8\u3AAB\u3AAF\0\0\u3AC3\u3ACE\0\u3AD8\u17DC\u17DFtr\xE9\u17D1r;\uC000\u{1D535}\u0100Aa\u3A94\u3A97r\xF2\u03C3r\xF2\u09F6;\u43BE\u0100Aa\u3AA1\u3AA4r\xF2\u03B8r\xF2\u09EBa\xF0\u2713is;\u62FB\u0180dpt\u17A4\u3AB5\u3ABE\u0100fl\u3ABA\u17A9;\uC000\u{1D569}im\xE5\u17B2\u0100Aa\u3AC7\u3ACAr\xF2\u03CEr\xF2\u0A01\u0100cq\u3AD2\u17B8r;\uC000\u{1D4CD}\u0100pt\u17D6\u3ADCr\xE9\u17D4\u0400acefiosu\u3AF0\u3AFD\u3B08\u3B0C\u3B11\u3B15\u3B1B\u3B21c\u0100uy\u3AF6\u3AFBte\u803B\xFD\u40FD;\u444F\u0100iy\u3B02\u3B06rc;\u4177;\u444Bn\u803B\xA5\u40A5r;\uC000\u{1D536}cy;\u4457pf;\uC000\u{1D56A}cr;\uC000\u{1D4CE}\u0100cm\u3B26\u3B29y;\u444El\u803B\xFF\u40FF\u0500acdefhiosw\u3B42\u3B48\u3B54\u3B58\u3B64\u3B69\u3B6D\u3B74\u3B7A\u3B80cute;\u417A\u0100ay\u3B4D\u3B52ron;\u417E;\u4437ot;\u417C\u0100et\u3B5D\u3B61tr\xE6\u155Fa;\u43B6r;\uC000\u{1D537}cy;\u4436grarr;\u61DDpf;\uC000\u{1D56B}cr;\uC000\u{1D4CF}\u0100jn\u3B85\u3B87;\u600Dj;\u600C'.split("").map((c) => c.charCodeAt(0))
    );
  }
});

// node_modules/entities/lib/esm/generated/decode-data-xml.js
var decode_data_xml_default, init_decode_data_xml = __esm({
  "node_modules/entities/lib/esm/generated/decode-data-xml.js"() {
    decode_data_xml_default = new Uint16Array(
      "\u0200aglq	\x1B\u026D\0\0p;\u4026os;\u4027t;\u403Et;\u403Cuot;\u4022".split("").map((c) => c.charCodeAt(0))
    );
  }
});

// node_modules/entities/lib/esm/decode_codepoint.js
function replaceCodePoint(codePoint) {
  var _a2;
  return codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111 ? 65533 : (_a2 = decodeMap.get(codePoint)) !== null && _a2 !== void 0 ? _a2 : codePoint;
}
function decodeCodePoint(codePoint) {
  return fromCodePoint(replaceCodePoint(codePoint));
}
var _a, decodeMap, fromCodePoint, init_decode_codepoint = __esm({
  "node_modules/entities/lib/esm/decode_codepoint.js"() {
    decodeMap = /* @__PURE__ */ new Map([
      [0, 65533],
      [128, 8364],
      [130, 8218],
      [131, 402],
      [132, 8222],
      [133, 8230],
      [134, 8224],
      [135, 8225],
      [136, 710],
      [137, 8240],
      [138, 352],
      [139, 8249],
      [140, 338],
      [142, 381],
      [145, 8216],
      [146, 8217],
      [147, 8220],
      [148, 8221],
      [149, 8226],
      [150, 8211],
      [151, 8212],
      [152, 732],
      [153, 8482],
      [154, 353],
      [155, 8250],
      [156, 339],
      [158, 382],
      [159, 376]
    ]), fromCodePoint = (_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function(codePoint) {
      let output = "";
      return codePoint > 65535 && (codePoint -= 65536, output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296), codePoint = 56320 | codePoint & 1023), output += String.fromCharCode(codePoint), output;
    };
  }
});

// node_modules/entities/lib/esm/decode.js
function getDecoder(decodeTree) {
  return function(str2, strict) {
    let ret = "", lastIdx = 0, strIdx = 0;
    for (; (strIdx = str2.indexOf("&", strIdx)) >= 0; ) {
      if (ret += str2.slice(lastIdx, strIdx), lastIdx = strIdx, strIdx += 1, str2.charCodeAt(strIdx) === CharCodes.NUM) {
        let start = strIdx + 1, base3 = 10, cp = str2.charCodeAt(start);
        (cp | CharCodes.To_LOWER_BIT) === CharCodes.LOWER_X && (base3 = 16, strIdx += 1, start += 1);
        do
          cp = str2.charCodeAt(++strIdx);
        while (cp >= CharCodes.ZERO && cp <= CharCodes.NINE || base3 === 16 && (cp | CharCodes.To_LOWER_BIT) >= CharCodes.LOWER_A && (cp | CharCodes.To_LOWER_BIT) <= CharCodes.LOWER_F);
        if (start !== strIdx) {
          let entity = str2.substring(start, strIdx), parsed = parseInt(entity, base3);
          if (str2.charCodeAt(strIdx) === CharCodes.SEMI)
            strIdx += 1;
          else if (strict)
            continue;
          ret += decodeCodePoint(parsed), lastIdx = strIdx;
        }
        continue;
      }
      let resultIdx = 0, excess = 1, treeIdx = 0, current = decodeTree[treeIdx];
      for (; strIdx < str2.length && (treeIdx = determineBranch(decodeTree, current, treeIdx + 1, str2.charCodeAt(strIdx)), !(treeIdx < 0)); strIdx++, excess++) {
        current = decodeTree[treeIdx];
        let masked = current & BinTrieFlags.VALUE_LENGTH;
        if (masked) {
          (!strict || str2.charCodeAt(strIdx) === CharCodes.SEMI) && (resultIdx = treeIdx, excess = 0);
          let valueLength = (masked >> 14) - 1;
          if (valueLength === 0)
            break;
          treeIdx += valueLength;
        }
      }
      if (resultIdx !== 0) {
        let valueLength = (decodeTree[resultIdx] & BinTrieFlags.VALUE_LENGTH) >> 14;
        ret += valueLength === 1 ? String.fromCharCode(decodeTree[resultIdx] & ~BinTrieFlags.VALUE_LENGTH) : valueLength === 2 ? String.fromCharCode(decodeTree[resultIdx + 1]) : String.fromCharCode(decodeTree[resultIdx + 1], decodeTree[resultIdx + 2]), lastIdx = strIdx - excess + 1;
      }
    }
    return ret + str2.slice(lastIdx);
  };
}
function determineBranch(decodeTree, current, nodeIdx, char) {
  let branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7, jumpOffset = current & BinTrieFlags.JUMP_TABLE;
  if (branchCount === 0)
    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;
  if (jumpOffset) {
    let value = char - jumpOffset;
    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;
  }
  let lo = nodeIdx, hi = lo + branchCount - 1;
  for (; lo <= hi; ) {
    let mid = lo + hi >>> 1, midVal = decodeTree[mid];
    if (midVal < char)
      lo = mid + 1;
    else if (midVal > char)
      hi = mid - 1;
    else
      return decodeTree[mid + branchCount];
  }
  return -1;
}
var CharCodes, BinTrieFlags, htmlDecoder, xmlDecoder, init_decode = __esm({
  "node_modules/entities/lib/esm/decode.js"() {
    init_decode_data_html();
    init_decode_data_xml();
    init_decode_codepoint();
    init_decode_codepoint();
    (function(CharCodes2) {
      CharCodes2[CharCodes2.NUM = 35] = "NUM", CharCodes2[CharCodes2.SEMI = 59] = "SEMI", CharCodes2[CharCodes2.ZERO = 48] = "ZERO", CharCodes2[CharCodes2.NINE = 57] = "NINE", CharCodes2[CharCodes2.LOWER_A = 97] = "LOWER_A", CharCodes2[CharCodes2.LOWER_F = 102] = "LOWER_F", CharCodes2[CharCodes2.LOWER_X = 120] = "LOWER_X", CharCodes2[CharCodes2.To_LOWER_BIT = 32] = "To_LOWER_BIT";
    })(CharCodes || (CharCodes = {}));
    (function(BinTrieFlags2) {
      BinTrieFlags2[BinTrieFlags2.VALUE_LENGTH = 49152] = "VALUE_LENGTH", BinTrieFlags2[BinTrieFlags2.BRANCH_LENGTH = 16256] = "BRANCH_LENGTH", BinTrieFlags2[BinTrieFlags2.JUMP_TABLE = 127] = "JUMP_TABLE";
    })(BinTrieFlags || (BinTrieFlags = {}));
    htmlDecoder = getDecoder(decode_data_html_default), xmlDecoder = getDecoder(decode_data_xml_default);
  }
});

// node_modules/parse5/dist/common/html.js
var html_exports = {};
__export(html_exports, {
  ATTRS: () => ATTRS,
  DOCUMENT_MODE: () => DOCUMENT_MODE,
  NS: () => NS,
  SPECIAL_ELEMENTS: () => SPECIAL_ELEMENTS,
  TAG_ID: () => TAG_ID,
  TAG_NAMES: () => TAG_NAMES,
  getTagID: () => getTagID,
  hasUnescapedText: () => hasUnescapedText,
  isNumberedHeader: () => isNumberedHeader
});
function getTagID(tagName) {
  var _a2;
  return (_a2 = TAG_NAME_TO_ID.get(tagName)) !== null && _a2 !== void 0 ? _a2 : TAG_ID.UNKNOWN;
}
function isNumberedHeader(tn) {
  return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;
}
function hasUnescapedText(tn, scriptingEnabled) {
  return UNESCAPED_TEXT.has(tn) || scriptingEnabled && tn === TAG_NAMES.NOSCRIPT;
}
var NS, ATTRS, DOCUMENT_MODE, TAG_NAMES, TAG_ID, TAG_NAME_TO_ID, $, SPECIAL_ELEMENTS, UNESCAPED_TEXT, init_html3 = __esm({
  "node_modules/parse5/dist/common/html.js"() {
    (function(NS2) {
      NS2.HTML = "http://www.w3.org/1999/xhtml", NS2.MATHML = "http://www.w3.org/1998/Math/MathML", NS2.SVG = "http://www.w3.org/2000/svg", NS2.XLINK = "http://www.w3.org/1999/xlink", NS2.XML = "http://www.w3.org/XML/1998/namespace", NS2.XMLNS = "http://www.w3.org/2000/xmlns/";
    })(NS = NS || (NS = {}));
    (function(ATTRS2) {
      ATTRS2.TYPE = "type", ATTRS2.ACTION = "action", ATTRS2.ENCODING = "encoding", ATTRS2.PROMPT = "prompt", ATTRS2.NAME = "name", ATTRS2.COLOR = "color", ATTRS2.FACE = "face", ATTRS2.SIZE = "size";
    })(ATTRS = ATTRS || (ATTRS = {}));
    (function(DOCUMENT_MODE2) {
      DOCUMENT_MODE2.NO_QUIRKS = "no-quirks", DOCUMENT_MODE2.QUIRKS = "quirks", DOCUMENT_MODE2.LIMITED_QUIRKS = "limited-quirks";
    })(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));
    (function(TAG_NAMES2) {
      TAG_NAMES2.A = "a", TAG_NAMES2.ADDRESS = "address", TAG_NAMES2.ANNOTATION_XML = "annotation-xml", TAG_NAMES2.APPLET = "applet", TAG_NAMES2.AREA = "area", TAG_NAMES2.ARTICLE = "article", TAG_NAMES2.ASIDE = "aside", TAG_NAMES2.B = "b", TAG_NAMES2.BASE = "base", TAG_NAMES2.BASEFONT = "basefont", TAG_NAMES2.BGSOUND = "bgsound", TAG_NAMES2.BIG = "big", TAG_NAMES2.BLOCKQUOTE = "blockquote", TAG_NAMES2.BODY = "body", TAG_NAMES2.BR = "br", TAG_NAMES2.BUTTON = "button", TAG_NAMES2.CAPTION = "caption", TAG_NAMES2.CENTER = "center", TAG_NAMES2.CODE = "code", TAG_NAMES2.COL = "col", TAG_NAMES2.COLGROUP = "colgroup", TAG_NAMES2.DD = "dd", TAG_NAMES2.DESC = "desc", TAG_NAMES2.DETAILS = "details", TAG_NAMES2.DIALOG = "dialog", TAG_NAMES2.DIR = "dir", TAG_NAMES2.DIV = "div", TAG_NAMES2.DL = "dl", TAG_NAMES2.DT = "dt", TAG_NAMES2.EM = "em", TAG_NAMES2.EMBED = "embed", TAG_NAMES2.FIELDSET = "fieldset", TAG_NAMES2.FIGCAPTION = "figcaption", TAG_NAMES2.FIGURE = "figure", TAG_NAMES2.FONT = "font", TAG_NAMES2.FOOTER = "footer", TAG_NAMES2.FOREIGN_OBJECT = "foreignObject", TAG_NAMES2.FORM = "form", TAG_NAMES2.FRAME = "frame", TAG_NAMES2.FRAMESET = "frameset", TAG_NAMES2.H1 = "h1", TAG_NAMES2.H2 = "h2", TAG_NAMES2.H3 = "h3", TAG_NAMES2.H4 = "h4", TAG_NAMES2.H5 = "h5", TAG_NAMES2.H6 = "h6", TAG_NAMES2.HEAD = "head", TAG_NAMES2.HEADER = "header", TAG_NAMES2.HGROUP = "hgroup", TAG_NAMES2.HR = "hr", TAG_NAMES2.HTML = "html", TAG_NAMES2.I = "i", TAG_NAMES2.IMG = "img", TAG_NAMES2.IMAGE = "image", TAG_NAMES2.INPUT = "input", TAG_NAMES2.IFRAME = "iframe", TAG_NAMES2.KEYGEN = "keygen", TAG_NAMES2.LABEL = "label", TAG_NAMES2.LI = "li", TAG_NAMES2.LINK = "link", TAG_NAMES2.LISTING = "listing", TAG_NAMES2.MAIN = "main", TAG_NAMES2.MALIGNMARK = "malignmark", TAG_NAMES2.MARQUEE = "marquee", TAG_NAMES2.MATH = "math", TAG_NAMES2.MENU = "menu", TAG_NAMES2.META = "meta", TAG_NAMES2.MGLYPH = "mglyph", TAG_NAMES2.MI = "mi", TAG_NAMES2.MO = "mo", TAG_NAMES2.MN = "mn", TAG_NAMES2.MS = "ms", TAG_NAMES2.MTEXT = "mtext", TAG_NAMES2.NAV = "nav", TAG_NAMES2.NOBR = "nobr", TAG_NAMES2.NOFRAMES = "noframes", TAG_NAMES2.NOEMBED = "noembed", TAG_NAMES2.NOSCRIPT = "noscript", TAG_NAMES2.OBJECT = "object", TAG_NAMES2.OL = "ol", TAG_NAMES2.OPTGROUP = "optgroup", TAG_NAMES2.OPTION = "option", TAG_NAMES2.P = "p", TAG_NAMES2.PARAM = "param", TAG_NAMES2.PLAINTEXT = "plaintext", TAG_NAMES2.PRE = "pre", TAG_NAMES2.RB = "rb", TAG_NAMES2.RP = "rp", TAG_NAMES2.RT = "rt", TAG_NAMES2.RTC = "rtc", TAG_NAMES2.RUBY = "ruby", TAG_NAMES2.S = "s", TAG_NAMES2.SCRIPT = "script", TAG_NAMES2.SECTION = "section", TAG_NAMES2.SELECT = "select", TAG_NAMES2.SOURCE = "source", TAG_NAMES2.SMALL = "small", TAG_NAMES2.SPAN = "span", TAG_NAMES2.STRIKE = "strike", TAG_NAMES2.STRONG = "strong", TAG_NAMES2.STYLE = "style", TAG_NAMES2.SUB = "sub", TAG_NAMES2.SUMMARY = "summary", TAG_NAMES2.SUP = "sup", TAG_NAMES2.TABLE = "table", TAG_NAMES2.TBODY = "tbody", TAG_NAMES2.TEMPLATE = "template", TAG_NAMES2.TEXTAREA = "textarea", TAG_NAMES2.TFOOT = "tfoot", TAG_NAMES2.TD = "td", TAG_NAMES2.TH = "th", TAG_NAMES2.THEAD = "thead", TAG_NAMES2.TITLE = "title", TAG_NAMES2.TR = "tr", TAG_NAMES2.TRACK = "track", TAG_NAMES2.TT = "tt", TAG_NAMES2.U = "u", TAG_NAMES2.UL = "ul", TAG_NAMES2.SVG = "svg", TAG_NAMES2.VAR = "var", TAG_NAMES2.WBR = "wbr", TAG_NAMES2.XMP = "xmp";
    })(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));
    (function(TAG_ID2) {
      TAG_ID2[TAG_ID2.UNKNOWN = 0] = "UNKNOWN", TAG_ID2[TAG_ID2.A = 1] = "A", TAG_ID2[TAG_ID2.ADDRESS = 2] = "ADDRESS", TAG_ID2[TAG_ID2.ANNOTATION_XML = 3] = "ANNOTATION_XML", TAG_ID2[TAG_ID2.APPLET = 4] = "APPLET", TAG_ID2[TAG_ID2.AREA = 5] = "AREA", TAG_ID2[TAG_ID2.ARTICLE = 6] = "ARTICLE", TAG_ID2[TAG_ID2.ASIDE = 7] = "ASIDE", TAG_ID2[TAG_ID2.B = 8] = "B", TAG_ID2[TAG_ID2.BASE = 9] = "BASE", TAG_ID2[TAG_ID2.BASEFONT = 10] = "BASEFONT", TAG_ID2[TAG_ID2.BGSOUND = 11] = "BGSOUND", TAG_ID2[TAG_ID2.BIG = 12] = "BIG", TAG_ID2[TAG_ID2.BLOCKQUOTE = 13] = "BLOCKQUOTE", TAG_ID2[TAG_ID2.BODY = 14] = "BODY", TAG_ID2[TAG_ID2.BR = 15] = "BR", TAG_ID2[TAG_ID2.BUTTON = 16] = "BUTTON", TAG_ID2[TAG_ID2.CAPTION = 17] = "CAPTION", TAG_ID2[TAG_ID2.CENTER = 18] = "CENTER", TAG_ID2[TAG_ID2.CODE = 19] = "CODE", TAG_ID2[TAG_ID2.COL = 20] = "COL", TAG_ID2[TAG_ID2.COLGROUP = 21] = "COLGROUP", TAG_ID2[TAG_ID2.DD = 22] = "DD", TAG_ID2[TAG_ID2.DESC = 23] = "DESC", TAG_ID2[TAG_ID2.DETAILS = 24] = "DETAILS", TAG_ID2[TAG_ID2.DIALOG = 25] = "DIALOG", TAG_ID2[TAG_ID2.DIR = 26] = "DIR", TAG_ID2[TAG_ID2.DIV = 27] = "DIV", TAG_ID2[TAG_ID2.DL = 28] = "DL", TAG_ID2[TAG_ID2.DT = 29] = "DT", TAG_ID2[TAG_ID2.EM = 30] = "EM", TAG_ID2[TAG_ID2.EMBED = 31] = "EMBED", TAG_ID2[TAG_ID2.FIELDSET = 32] = "FIELDSET", TAG_ID2[TAG_ID2.FIGCAPTION = 33] = "FIGCAPTION", TAG_ID2[TAG_ID2.FIGURE = 34] = "FIGURE", TAG_ID2[TAG_ID2.FONT = 35] = "FONT", TAG_ID2[TAG_ID2.FOOTER = 36] = "FOOTER", TAG_ID2[TAG_ID2.FOREIGN_OBJECT = 37] = "FOREIGN_OBJECT", TAG_ID2[TAG_ID2.FORM = 38] = "FORM", TAG_ID2[TAG_ID2.FRAME = 39] = "FRAME", TAG_ID2[TAG_ID2.FRAMESET = 40] = "FRAMESET", TAG_ID2[TAG_ID2.H1 = 41] = "H1", TAG_ID2[TAG_ID2.H2 = 42] = "H2", TAG_ID2[TAG_ID2.H3 = 43] = "H3", TAG_ID2[TAG_ID2.H4 = 44] = "H4", TAG_ID2[TAG_ID2.H5 = 45] = "H5", TAG_ID2[TAG_ID2.H6 = 46] = "H6", TAG_ID2[TAG_ID2.HEAD = 47] = "HEAD", TAG_ID2[TAG_ID2.HEADER = 48] = "HEADER", TAG_ID2[TAG_ID2.HGROUP = 49] = "HGROUP", TAG_ID2[TAG_ID2.HR = 50] = "HR", TAG_ID2[TAG_ID2.HTML = 51] = "HTML", TAG_ID2[TAG_ID2.I = 52] = "I", TAG_ID2[TAG_ID2.IMG = 53] = "IMG", TAG_ID2[TAG_ID2.IMAGE = 54] = "IMAGE", TAG_ID2[TAG_ID2.INPUT = 55] = "INPUT", TAG_ID2[TAG_ID2.IFRAME = 56] = "IFRAME", TAG_ID2[TAG_ID2.KEYGEN = 57] = "KEYGEN", TAG_ID2[TAG_ID2.LABEL = 58] = "LABEL", TAG_ID2[TAG_ID2.LI = 59] = "LI", TAG_ID2[TAG_ID2.LINK = 60] = "LINK", TAG_ID2[TAG_ID2.LISTING = 61] = "LISTING", TAG_ID2[TAG_ID2.MAIN = 62] = "MAIN", TAG_ID2[TAG_ID2.MALIGNMARK = 63] = "MALIGNMARK", TAG_ID2[TAG_ID2.MARQUEE = 64] = "MARQUEE", TAG_ID2[TAG_ID2.MATH = 65] = "MATH", TAG_ID2[TAG_ID2.MENU = 66] = "MENU", TAG_ID2[TAG_ID2.META = 67] = "META", TAG_ID2[TAG_ID2.MGLYPH = 68] = "MGLYPH", TAG_ID2[TAG_ID2.MI = 69] = "MI", TAG_ID2[TAG_ID2.MO = 70] = "MO", TAG_ID2[TAG_ID2.MN = 71] = "MN", TAG_ID2[TAG_ID2.MS = 72] = "MS", TAG_ID2[TAG_ID2.MTEXT = 73] = "MTEXT", TAG_ID2[TAG_ID2.NAV = 74] = "NAV", TAG_ID2[TAG_ID2.NOBR = 75] = "NOBR", TAG_ID2[TAG_ID2.NOFRAMES = 76] = "NOFRAMES", TAG_ID2[TAG_ID2.NOEMBED = 77] = "NOEMBED", TAG_ID2[TAG_ID2.NOSCRIPT = 78] = "NOSCRIPT", TAG_ID2[TAG_ID2.OBJECT = 79] = "OBJECT", TAG_ID2[TAG_ID2.OL = 80] = "OL", TAG_ID2[TAG_ID2.OPTGROUP = 81] = "OPTGROUP", TAG_ID2[TAG_ID2.OPTION = 82] = "OPTION", TAG_ID2[TAG_ID2.P = 83] = "P", TAG_ID2[TAG_ID2.PARAM = 84] = "PARAM", TAG_ID2[TAG_ID2.PLAINTEXT = 85] = "PLAINTEXT", TAG_ID2[TAG_ID2.PRE = 86] = "PRE", TAG_ID2[TAG_ID2.RB = 87] = "RB", TAG_ID2[TAG_ID2.RP = 88] = "RP", TAG_ID2[TAG_ID2.RT = 89] = "RT", TAG_ID2[TAG_ID2.RTC = 90] = "RTC", TAG_ID2[TAG_ID2.RUBY = 91] = "RUBY", TAG_ID2[TAG_ID2.S = 92] = "S", TAG_ID2[TAG_ID2.SCRIPT = 93] = "SCRIPT", TAG_ID2[TAG_ID2.SECTION = 94] = "SECTION", TAG_ID2[TAG_ID2.SELECT = 95] = "SELECT", TAG_ID2[TAG_ID2.SOURCE = 96] = "SOURCE", TAG_ID2[TAG_ID2.SMALL = 97] = "SMALL", TAG_ID2[TAG_ID2.SPAN = 98] = "SPAN", TAG_ID2[TAG_ID2.STRIKE = 99] = "STRIKE", TAG_ID2[TAG_ID2.STRONG = 100] = "STRONG", TAG_ID2[TAG_ID2.STYLE = 101] = "STYLE", TAG_ID2[TAG_ID2.SUB = 102] = "SUB", TAG_ID2[TAG_ID2.SUMMARY = 103] = "SUMMARY", TAG_ID2[TAG_ID2.SUP = 104] = "SUP", TAG_ID2[TAG_ID2.TABLE = 105] = "TABLE", TAG_ID2[TAG_ID2.TBODY = 106] = "TBODY", TAG_ID2[TAG_ID2.TEMPLATE = 107] = "TEMPLATE", TAG_ID2[TAG_ID2.TEXTAREA = 108] = "TEXTAREA", TAG_ID2[TAG_ID2.TFOOT = 109] = "TFOOT", TAG_ID2[TAG_ID2.TD = 110] = "TD", TAG_ID2[TAG_ID2.TH = 111] = "TH", TAG_ID2[TAG_ID2.THEAD = 112] = "THEAD", TAG_ID2[TAG_ID2.TITLE = 113] = "TITLE", TAG_ID2[TAG_ID2.TR = 114] = "TR", TAG_ID2[TAG_ID2.TRACK = 115] = "TRACK", TAG_ID2[TAG_ID2.TT = 116] = "TT", TAG_ID2[TAG_ID2.U = 117] = "U", TAG_ID2[TAG_ID2.UL = 118] = "UL", TAG_ID2[TAG_ID2.SVG = 119] = "SVG", TAG_ID2[TAG_ID2.VAR = 120] = "VAR", TAG_ID2[TAG_ID2.WBR = 121] = "WBR", TAG_ID2[TAG_ID2.XMP = 122] = "XMP";
    })(TAG_ID = TAG_ID || (TAG_ID = {}));
    TAG_NAME_TO_ID = /* @__PURE__ */ new Map([
      [TAG_NAMES.A, TAG_ID.A],
      [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],
      [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],
      [TAG_NAMES.APPLET, TAG_ID.APPLET],
      [TAG_NAMES.AREA, TAG_ID.AREA],
      [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],
      [TAG_NAMES.ASIDE, TAG_ID.ASIDE],
      [TAG_NAMES.B, TAG_ID.B],
      [TAG_NAMES.BASE, TAG_ID.BASE],
      [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],
      [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],
      [TAG_NAMES.BIG, TAG_ID.BIG],
      [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],
      [TAG_NAMES.BODY, TAG_ID.BODY],
      [TAG_NAMES.BR, TAG_ID.BR],
      [TAG_NAMES.BUTTON, TAG_ID.BUTTON],
      [TAG_NAMES.CAPTION, TAG_ID.CAPTION],
      [TAG_NAMES.CENTER, TAG_ID.CENTER],
      [TAG_NAMES.CODE, TAG_ID.CODE],
      [TAG_NAMES.COL, TAG_ID.COL],
      [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],
      [TAG_NAMES.DD, TAG_ID.DD],
      [TAG_NAMES.DESC, TAG_ID.DESC],
      [TAG_NAMES.DETAILS, TAG_ID.DETAILS],
      [TAG_NAMES.DIALOG, TAG_ID.DIALOG],
      [TAG_NAMES.DIR, TAG_ID.DIR],
      [TAG_NAMES.DIV, TAG_ID.DIV],
      [TAG_NAMES.DL, TAG_ID.DL],
      [TAG_NAMES.DT, TAG_ID.DT],
      [TAG_NAMES.EM, TAG_ID.EM],
      [TAG_NAMES.EMBED, TAG_ID.EMBED],
      [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],
      [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],
      [TAG_NAMES.FIGURE, TAG_ID.FIGURE],
      [TAG_NAMES.FONT, TAG_ID.FONT],
      [TAG_NAMES.FOOTER, TAG_ID.FOOTER],
      [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],
      [TAG_NAMES.FORM, TAG_ID.FORM],
      [TAG_NAMES.FRAME, TAG_ID.FRAME],
      [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],
      [TAG_NAMES.H1, TAG_ID.H1],
      [TAG_NAMES.H2, TAG_ID.H2],
      [TAG_NAMES.H3, TAG_ID.H3],
      [TAG_NAMES.H4, TAG_ID.H4],
      [TAG_NAMES.H5, TAG_ID.H5],
      [TAG_NAMES.H6, TAG_ID.H6],
      [TAG_NAMES.HEAD, TAG_ID.HEAD],
      [TAG_NAMES.HEADER, TAG_ID.HEADER],
      [TAG_NAMES.HGROUP, TAG_ID.HGROUP],
      [TAG_NAMES.HR, TAG_ID.HR],
      [TAG_NAMES.HTML, TAG_ID.HTML],
      [TAG_NAMES.I, TAG_ID.I],
      [TAG_NAMES.IMG, TAG_ID.IMG],
      [TAG_NAMES.IMAGE, TAG_ID.IMAGE],
      [TAG_NAMES.INPUT, TAG_ID.INPUT],
      [TAG_NAMES.IFRAME, TAG_ID.IFRAME],
      [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],
      [TAG_NAMES.LABEL, TAG_ID.LABEL],
      [TAG_NAMES.LI, TAG_ID.LI],
      [TAG_NAMES.LINK, TAG_ID.LINK],
      [TAG_NAMES.LISTING, TAG_ID.LISTING],
      [TAG_NAMES.MAIN, TAG_ID.MAIN],
      [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],
      [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],
      [TAG_NAMES.MATH, TAG_ID.MATH],
      [TAG_NAMES.MENU, TAG_ID.MENU],
      [TAG_NAMES.META, TAG_ID.META],
      [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],
      [TAG_NAMES.MI, TAG_ID.MI],
      [TAG_NAMES.MO, TAG_ID.MO],
      [TAG_NAMES.MN, TAG_ID.MN],
      [TAG_NAMES.MS, TAG_ID.MS],
      [TAG_NAMES.MTEXT, TAG_ID.MTEXT],
      [TAG_NAMES.NAV, TAG_ID.NAV],
      [TAG_NAMES.NOBR, TAG_ID.NOBR],
      [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],
      [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],
      [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],
      [TAG_NAMES.OBJECT, TAG_ID.OBJECT],
      [TAG_NAMES.OL, TAG_ID.OL],
      [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],
      [TAG_NAMES.OPTION, TAG_ID.OPTION],
      [TAG_NAMES.P, TAG_ID.P],
      [TAG_NAMES.PARAM, TAG_ID.PARAM],
      [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],
      [TAG_NAMES.PRE, TAG_ID.PRE],
      [TAG_NAMES.RB, TAG_ID.RB],
      [TAG_NAMES.RP, TAG_ID.RP],
      [TAG_NAMES.RT, TAG_ID.RT],
      [TAG_NAMES.RTC, TAG_ID.RTC],
      [TAG_NAMES.RUBY, TAG_ID.RUBY],
      [TAG_NAMES.S, TAG_ID.S],
      [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],
      [TAG_NAMES.SECTION, TAG_ID.SECTION],
      [TAG_NAMES.SELECT, TAG_ID.SELECT],
      [TAG_NAMES.SOURCE, TAG_ID.SOURCE],
      [TAG_NAMES.SMALL, TAG_ID.SMALL],
      [TAG_NAMES.SPAN, TAG_ID.SPAN],
      [TAG_NAMES.STRIKE, TAG_ID.STRIKE],
      [TAG_NAMES.STRONG, TAG_ID.STRONG],
      [TAG_NAMES.STYLE, TAG_ID.STYLE],
      [TAG_NAMES.SUB, TAG_ID.SUB],
      [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],
      [TAG_NAMES.SUP, TAG_ID.SUP],
      [TAG_NAMES.TABLE, TAG_ID.TABLE],
      [TAG_NAMES.TBODY, TAG_ID.TBODY],
      [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],
      [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],
      [TAG_NAMES.TFOOT, TAG_ID.TFOOT],
      [TAG_NAMES.TD, TAG_ID.TD],
      [TAG_NAMES.TH, TAG_ID.TH],
      [TAG_NAMES.THEAD, TAG_ID.THEAD],
      [TAG_NAMES.TITLE, TAG_ID.TITLE],
      [TAG_NAMES.TR, TAG_ID.TR],
      [TAG_NAMES.TRACK, TAG_ID.TRACK],
      [TAG_NAMES.TT, TAG_ID.TT],
      [TAG_NAMES.U, TAG_ID.U],
      [TAG_NAMES.UL, TAG_ID.UL],
      [TAG_NAMES.SVG, TAG_ID.SVG],
      [TAG_NAMES.VAR, TAG_ID.VAR],
      [TAG_NAMES.WBR, TAG_ID.WBR],
      [TAG_NAMES.XMP, TAG_ID.XMP]
    ]);
    $ = TAG_ID, SPECIAL_ELEMENTS = {
      [NS.HTML]: /* @__PURE__ */ new Set([
        $.ADDRESS,
        $.APPLET,
        $.AREA,
        $.ARTICLE,
        $.ASIDE,
        $.BASE,
        $.BASEFONT,
        $.BGSOUND,
        $.BLOCKQUOTE,
        $.BODY,
        $.BR,
        $.BUTTON,
        $.CAPTION,
        $.CENTER,
        $.COL,
        $.COLGROUP,
        $.DD,
        $.DETAILS,
        $.DIR,
        $.DIV,
        $.DL,
        $.DT,
        $.EMBED,
        $.FIELDSET,
        $.FIGCAPTION,
        $.FIGURE,
        $.FOOTER,
        $.FORM,
        $.FRAME,
        $.FRAMESET,
        $.H1,
        $.H2,
        $.H3,
        $.H4,
        $.H5,
        $.H6,
        $.HEAD,
        $.HEADER,
        $.HGROUP,
        $.HR,
        $.HTML,
        $.IFRAME,
        $.IMG,
        $.INPUT,
        $.LI,
        $.LINK,
        $.LISTING,
        $.MAIN,
        $.MARQUEE,
        $.MENU,
        $.META,
        $.NAV,
        $.NOEMBED,
        $.NOFRAMES,
        $.NOSCRIPT,
        $.OBJECT,
        $.OL,
        $.P,
        $.PARAM,
        $.PLAINTEXT,
        $.PRE,
        $.SCRIPT,
        $.SECTION,
        $.SELECT,
        $.SOURCE,
        $.STYLE,
        $.SUMMARY,
        $.TABLE,
        $.TBODY,
        $.TD,
        $.TEMPLATE,
        $.TEXTAREA,
        $.TFOOT,
        $.TH,
        $.THEAD,
        $.TITLE,
        $.TR,
        $.TRACK,
        $.UL,
        $.WBR,
        $.XMP
      ]),
      [NS.MATHML]: /* @__PURE__ */ new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),
      [NS.SVG]: /* @__PURE__ */ new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),
      [NS.XLINK]: /* @__PURE__ */ new Set(),
      [NS.XML]: /* @__PURE__ */ new Set(),
      [NS.XMLNS]: /* @__PURE__ */ new Set()
    };
    UNESCAPED_TEXT = /* @__PURE__ */ new Set([
      TAG_NAMES.STYLE,
      TAG_NAMES.SCRIPT,
      TAG_NAMES.XMP,
      TAG_NAMES.IFRAME,
      TAG_NAMES.NOEMBED,
      TAG_NAMES.NOFRAMES,
      TAG_NAMES.PLAINTEXT
    ]);
  }
});

// node_modules/parse5/dist/tokenizer/index.js
function isAsciiDigit(cp) {
  return cp >= CODE_POINTS.DIGIT_0 && cp <= CODE_POINTS.DIGIT_9;
}
function isAsciiUpper(cp) {
  return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_Z;
}
function isAsciiLower(cp) {
  return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_Z;
}
function isAsciiLetter(cp) {
  return isAsciiLower(cp) || isAsciiUpper(cp);
}
function isAsciiAlphaNumeric(cp) {
  return isAsciiLetter(cp) || isAsciiDigit(cp);
}
function isAsciiUpperHexDigit(cp) {
  return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_F;
}
function isAsciiLowerHexDigit(cp) {
  return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_F;
}
function isAsciiHexDigit(cp) {
  return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);
}
function toAsciiLower(cp) {
  return cp + 32;
}
function isWhitespace(cp) {
  return cp === CODE_POINTS.SPACE || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.TABULATION || cp === CODE_POINTS.FORM_FEED;
}
function isEntityInAttributeInvalidEnd(nextCp) {
  return nextCp === CODE_POINTS.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);
}
function isScriptDataDoubleEscapeSequenceEnd(cp) {
  return isWhitespace(cp) || cp === CODE_POINTS.SOLIDUS || cp === CODE_POINTS.GREATER_THAN_SIGN;
}
var C1_CONTROLS_REFERENCE_REPLACEMENTS, State, TokenizerMode, Tokenizer, init_tokenizer = __esm({
  "node_modules/parse5/dist/tokenizer/index.js"() {
    init_preprocessor();
    init_unicode();
    init_token();
    init_decode();
    init_error_codes();
    init_html3();
    C1_CONTROLS_REFERENCE_REPLACEMENTS = /* @__PURE__ */ new Map([
      [128, 8364],
      [130, 8218],
      [131, 402],
      [132, 8222],
      [133, 8230],
      [134, 8224],
      [135, 8225],
      [136, 710],
      [137, 8240],
      [138, 352],
      [139, 8249],
      [140, 338],
      [142, 381],
      [145, 8216],
      [146, 8217],
      [147, 8220],
      [148, 8221],
      [149, 8226],
      [150, 8211],
      [151, 8212],
      [152, 732],
      [153, 8482],
      [154, 353],
      [155, 8250],
      [156, 339],
      [158, 382],
      [159, 376]
    ]);
    (function(State2) {
      State2[State2.DATA = 0] = "DATA", State2[State2.RCDATA = 1] = "RCDATA", State2[State2.RAWTEXT = 2] = "RAWTEXT", State2[State2.SCRIPT_DATA = 3] = "SCRIPT_DATA", State2[State2.PLAINTEXT = 4] = "PLAINTEXT", State2[State2.TAG_OPEN = 5] = "TAG_OPEN", State2[State2.END_TAG_OPEN = 6] = "END_TAG_OPEN", State2[State2.TAG_NAME = 7] = "TAG_NAME", State2[State2.RCDATA_LESS_THAN_SIGN = 8] = "RCDATA_LESS_THAN_SIGN", State2[State2.RCDATA_END_TAG_OPEN = 9] = "RCDATA_END_TAG_OPEN", State2[State2.RCDATA_END_TAG_NAME = 10] = "RCDATA_END_TAG_NAME", State2[State2.RAWTEXT_LESS_THAN_SIGN = 11] = "RAWTEXT_LESS_THAN_SIGN", State2[State2.RAWTEXT_END_TAG_OPEN = 12] = "RAWTEXT_END_TAG_OPEN", State2[State2.RAWTEXT_END_TAG_NAME = 13] = "RAWTEXT_END_TAG_NAME", State2[State2.SCRIPT_DATA_LESS_THAN_SIGN = 14] = "SCRIPT_DATA_LESS_THAN_SIGN", State2[State2.SCRIPT_DATA_END_TAG_OPEN = 15] = "SCRIPT_DATA_END_TAG_OPEN", State2[State2.SCRIPT_DATA_END_TAG_NAME = 16] = "SCRIPT_DATA_END_TAG_NAME", State2[State2.SCRIPT_DATA_ESCAPE_START = 17] = "SCRIPT_DATA_ESCAPE_START", State2[State2.SCRIPT_DATA_ESCAPE_START_DASH = 18] = "SCRIPT_DATA_ESCAPE_START_DASH", State2[State2.SCRIPT_DATA_ESCAPED = 19] = "SCRIPT_DATA_ESCAPED", State2[State2.SCRIPT_DATA_ESCAPED_DASH = 20] = "SCRIPT_DATA_ESCAPED_DASH", State2[State2.SCRIPT_DATA_ESCAPED_DASH_DASH = 21] = "SCRIPT_DATA_ESCAPED_DASH_DASH", State2[State2.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN = 22] = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN", State2[State2.SCRIPT_DATA_ESCAPED_END_TAG_OPEN = 23] = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN", State2[State2.SCRIPT_DATA_ESCAPED_END_TAG_NAME = 24] = "SCRIPT_DATA_ESCAPED_END_TAG_NAME", State2[State2.SCRIPT_DATA_DOUBLE_ESCAPE_START = 25] = "SCRIPT_DATA_DOUBLE_ESCAPE_START", State2[State2.SCRIPT_DATA_DOUBLE_ESCAPED = 26] = "SCRIPT_DATA_DOUBLE_ESCAPED", State2[State2.SCRIPT_DATA_DOUBLE_ESCAPED_DASH = 27] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH", State2[State2.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH = 28] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH", State2[State2.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN = 29] = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN", State2[State2.SCRIPT_DATA_DOUBLE_ESCAPE_END = 30] = "SCRIPT_DATA_DOUBLE_ESCAPE_END", State2[State2.BEFORE_ATTRIBUTE_NAME = 31] = "BEFORE_ATTRIBUTE_NAME", State2[State2.ATTRIBUTE_NAME = 32] = "ATTRIBUTE_NAME", State2[State2.AFTER_ATTRIBUTE_NAME = 33] = "AFTER_ATTRIBUTE_NAME", State2[State2.BEFORE_ATTRIBUTE_VALUE = 34] = "BEFORE_ATTRIBUTE_VALUE", State2[State2.ATTRIBUTE_VALUE_DOUBLE_QUOTED = 35] = "ATTRIBUTE_VALUE_DOUBLE_QUOTED", State2[State2.ATTRIBUTE_VALUE_SINGLE_QUOTED = 36] = "ATTRIBUTE_VALUE_SINGLE_QUOTED", State2[State2.ATTRIBUTE_VALUE_UNQUOTED = 37] = "ATTRIBUTE_VALUE_UNQUOTED", State2[State2.AFTER_ATTRIBUTE_VALUE_QUOTED = 38] = "AFTER_ATTRIBUTE_VALUE_QUOTED", State2[State2.SELF_CLOSING_START_TAG = 39] = "SELF_CLOSING_START_TAG", State2[State2.BOGUS_COMMENT = 40] = "BOGUS_COMMENT", State2[State2.MARKUP_DECLARATION_OPEN = 41] = "MARKUP_DECLARATION_OPEN", State2[State2.COMMENT_START = 42] = "COMMENT_START", State2[State2.COMMENT_START_DASH = 43] = "COMMENT_START_DASH", State2[State2.COMMENT = 44] = "COMMENT", State2[State2.COMMENT_LESS_THAN_SIGN = 45] = "COMMENT_LESS_THAN_SIGN", State2[State2.COMMENT_LESS_THAN_SIGN_BANG = 46] = "COMMENT_LESS_THAN_SIGN_BANG", State2[State2.COMMENT_LESS_THAN_SIGN_BANG_DASH = 47] = "COMMENT_LESS_THAN_SIGN_BANG_DASH", State2[State2.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH = 48] = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH", State2[State2.COMMENT_END_DASH = 49] = "COMMENT_END_DASH", State2[State2.COMMENT_END = 50] = "COMMENT_END", State2[State2.COMMENT_END_BANG = 51] = "COMMENT_END_BANG", State2[State2.DOCTYPE = 52] = "DOCTYPE", State2[State2.BEFORE_DOCTYPE_NAME = 53] = "BEFORE_DOCTYPE_NAME", State2[State2.DOCTYPE_NAME = 54] = "DOCTYPE_NAME", State2[State2.AFTER_DOCTYPE_NAME = 55] = "AFTER_DOCTYPE_NAME", State2[State2.AFTER_DOCTYPE_PUBLIC_KEYWORD = 56] = "AFTER_DOCTYPE_PUBLIC_KEYWORD", State2[State2.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER = 57] = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER", State2[State2.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED = 58] = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED", State2[State2.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED = 59] = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED", State2[State2.AFTER_DOCTYPE_PUBLIC_IDENTIFIER = 60] = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER", State2[State2.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS = 61] = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS", State2[State2.AFTER_DOCTYPE_SYSTEM_KEYWORD = 62] = "AFTER_DOCTYPE_SYSTEM_KEYWORD", State2[State2.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER = 63] = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER", State2[State2.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED = 64] = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED", State2[State2.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED = 65] = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED", State2[State2.AFTER_DOCTYPE_SYSTEM_IDENTIFIER = 66] = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER", State2[State2.BOGUS_DOCTYPE = 67] = "BOGUS_DOCTYPE", State2[State2.CDATA_SECTION = 68] = "CDATA_SECTION", State2[State2.CDATA_SECTION_BRACKET = 69] = "CDATA_SECTION_BRACKET", State2[State2.CDATA_SECTION_END = 70] = "CDATA_SECTION_END", State2[State2.CHARACTER_REFERENCE = 71] = "CHARACTER_REFERENCE", State2[State2.NAMED_CHARACTER_REFERENCE = 72] = "NAMED_CHARACTER_REFERENCE", State2[State2.AMBIGUOUS_AMPERSAND = 73] = "AMBIGUOUS_AMPERSAND", State2[State2.NUMERIC_CHARACTER_REFERENCE = 74] = "NUMERIC_CHARACTER_REFERENCE", State2[State2.HEXADEMICAL_CHARACTER_REFERENCE_START = 75] = "HEXADEMICAL_CHARACTER_REFERENCE_START", State2[State2.HEXADEMICAL_CHARACTER_REFERENCE = 76] = "HEXADEMICAL_CHARACTER_REFERENCE", State2[State2.DECIMAL_CHARACTER_REFERENCE = 77] = "DECIMAL_CHARACTER_REFERENCE", State2[State2.NUMERIC_CHARACTER_REFERENCE_END = 78] = "NUMERIC_CHARACTER_REFERENCE_END";
    })(State || (State = {}));
    TokenizerMode = {
      DATA: State.DATA,
      RCDATA: State.RCDATA,
      RAWTEXT: State.RAWTEXT,
      SCRIPT_DATA: State.SCRIPT_DATA,
      PLAINTEXT: State.PLAINTEXT,
      CDATA_SECTION: State.CDATA_SECTION
    };
    Tokenizer = class {
      constructor(options2, handler) {
        this.options = options2, this.handler = handler, this.paused = !1, this.inLoop = !1, this.inForeignNode = !1, this.lastStartTagName = "", this.active = !1, this.state = State.DATA, this.returnState = State.DATA, this.charRefCode = -1, this.consumedAfterSnapshot = -1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = { name: "", value: "" }, this.preprocessor = new Preprocessor(handler), this.currentLocation = this.getCurrentLocation(-1);
      }
      _err(code3) {
        var _a2, _b;
        (_b = (_a2 = this.handler).onParseError) === null || _b === void 0 || _b.call(_a2, this.preprocessor.getError(code3));
      }
      getCurrentLocation(offset) {
        return this.options.sourceCodeLocationInfo ? {
          startLine: this.preprocessor.line,
          startCol: this.preprocessor.col - offset,
          startOffset: this.preprocessor.offset - offset,
          endLine: -1,
          endCol: -1,
          endOffset: -1
        } : null;
      }
      _runParsingLoop() {
        if (!this.inLoop) {
          for (this.inLoop = !0; this.active && !this.paused; ) {
            this.consumedAfterSnapshot = 0;
            let cp = this._consume();
            this._ensureHibernation() || this._callState(cp);
          }
          this.inLoop = !1;
        }
      }
      pause() {
        this.paused = !0;
      }
      resume(writeCallback) {
        if (!this.paused)
          throw new Error("Parser was already resumed");
        this.paused = !1, !this.inLoop && (this._runParsingLoop(), this.paused || writeCallback == null || writeCallback());
      }
      write(chunk, isLastChunk, writeCallback) {
        this.active = !0, this.preprocessor.write(chunk, isLastChunk), this._runParsingLoop(), this.paused || writeCallback == null || writeCallback();
      }
      insertHtmlAtCurrentPos(chunk) {
        this.active = !0, this.preprocessor.insertHtmlAtCurrentPos(chunk), this._runParsingLoop();
      }
      _ensureHibernation() {
        return this.preprocessor.endOfChunkHit ? (this._unconsume(this.consumedAfterSnapshot), this.active = !1, !0) : !1;
      }
      _consume() {
        return this.consumedAfterSnapshot++, this.preprocessor.advance();
      }
      _unconsume(count) {
        this.consumedAfterSnapshot -= count, this.preprocessor.retreat(count);
      }
      _reconsumeInState(state, cp) {
        this.state = state, this._callState(cp);
      }
      _advanceBy(count) {
        this.consumedAfterSnapshot += count;
        for (let i = 0; i < count; i++)
          this.preprocessor.advance();
      }
      _consumeSequenceIfMatch(pattern, caseSensitive) {
        return this.preprocessor.startsWith(pattern, caseSensitive) ? (this._advanceBy(pattern.length - 1), !0) : !1;
      }
      _createStartTagToken() {
        this.currentToken = {
          type: TokenType.START_TAG,
          tagName: "",
          tagID: TAG_ID.UNKNOWN,
          selfClosing: !1,
          ackSelfClosing: !1,
          attrs: [],
          location: this.getCurrentLocation(1)
        };
      }
      _createEndTagToken() {
        this.currentToken = {
          type: TokenType.END_TAG,
          tagName: "",
          tagID: TAG_ID.UNKNOWN,
          selfClosing: !1,
          ackSelfClosing: !1,
          attrs: [],
          location: this.getCurrentLocation(2)
        };
      }
      _createCommentToken(offset) {
        this.currentToken = {
          type: TokenType.COMMENT,
          data: "",
          location: this.getCurrentLocation(offset)
        };
      }
      _createDoctypeToken(initialName) {
        this.currentToken = {
          type: TokenType.DOCTYPE,
          name: initialName,
          forceQuirks: !1,
          publicId: null,
          systemId: null,
          location: this.currentLocation
        };
      }
      _createCharacterToken(type, chars) {
        this.currentCharacterToken = {
          type,
          chars,
          location: this.currentLocation
        };
      }
      _createAttr(attrNameFirstCh) {
        this.currentAttr = {
          name: attrNameFirstCh,
          value: ""
        }, this.currentLocation = this.getCurrentLocation(0);
      }
      _leaveAttrName() {
        var _a2, _b;
        let token = this.currentToken;
        if (getTokenAttr(token, this.currentAttr.name) === null) {
          if (token.attrs.push(this.currentAttr), token.location && this.currentLocation) {
            let attrLocations = (_a2 = (_b = token.location).attrs) !== null && _a2 !== void 0 ? _a2 : _b.attrs = /* @__PURE__ */ Object.create(null);
            attrLocations[this.currentAttr.name] = this.currentLocation, this._leaveAttrValue();
          }
        } else
          this._err(ERR.duplicateAttribute);
      }
      _leaveAttrValue() {
        this.currentLocation && (this.currentLocation.endLine = this.preprocessor.line, this.currentLocation.endCol = this.preprocessor.col, this.currentLocation.endOffset = this.preprocessor.offset);
      }
      prepareToken(ct) {
        this._emitCurrentCharacterToken(ct.location), this.currentToken = null, ct.location && (ct.location.endLine = this.preprocessor.line, ct.location.endCol = this.preprocessor.col + 1, ct.location.endOffset = this.preprocessor.offset + 1), this.currentLocation = this.getCurrentLocation(-1);
      }
      emitCurrentTagToken() {
        let ct = this.currentToken;
        this.prepareToken(ct), ct.tagID = getTagID(ct.tagName), ct.type === TokenType.START_TAG ? (this.lastStartTagName = ct.tagName, this.handler.onStartTag(ct)) : (ct.attrs.length > 0 && this._err(ERR.endTagWithAttributes), ct.selfClosing && this._err(ERR.endTagWithTrailingSolidus), this.handler.onEndTag(ct)), this.preprocessor.dropParsedChunk();
      }
      emitCurrentComment(ct) {
        this.prepareToken(ct), this.handler.onComment(ct), this.preprocessor.dropParsedChunk();
      }
      emitCurrentDoctype(ct) {
        this.prepareToken(ct), this.handler.onDoctype(ct), this.preprocessor.dropParsedChunk();
      }
      _emitCurrentCharacterToken(nextLocation) {
        if (this.currentCharacterToken) {
          switch (nextLocation && this.currentCharacterToken.location && (this.currentCharacterToken.location.endLine = nextLocation.startLine, this.currentCharacterToken.location.endCol = nextLocation.startCol, this.currentCharacterToken.location.endOffset = nextLocation.startOffset), this.currentCharacterToken.type) {
            case TokenType.CHARACTER: {
              this.handler.onCharacter(this.currentCharacterToken);
              break;
            }
            case TokenType.NULL_CHARACTER: {
              this.handler.onNullCharacter(this.currentCharacterToken);
              break;
            }
            case TokenType.WHITESPACE_CHARACTER: {
              this.handler.onWhitespaceCharacter(this.currentCharacterToken);
              break;
            }
          }
          this.currentCharacterToken = null;
        }
      }
      _emitEOFToken() {
        let location2 = this.getCurrentLocation(0);
        location2 && (location2.endLine = location2.startLine, location2.endCol = location2.startCol, location2.endOffset = location2.startOffset), this._emitCurrentCharacterToken(location2), this.handler.onEof({ type: TokenType.EOF, location: location2 }), this.active = !1;
      }
      _appendCharToCurrentCharacterToken(type, ch) {
        if (this.currentCharacterToken)
          if (this.currentCharacterToken.type !== type)
            this.currentLocation = this.getCurrentLocation(0), this._emitCurrentCharacterToken(this.currentLocation), this.preprocessor.dropParsedChunk();
          else {
            this.currentCharacterToken.chars += ch;
            return;
          }
        this._createCharacterToken(type, ch);
      }
      _emitCodePoint(cp) {
        let type = isWhitespace(cp) ? TokenType.WHITESPACE_CHARACTER : cp === CODE_POINTS.NULL ? TokenType.NULL_CHARACTER : TokenType.CHARACTER;
        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));
      }
      _emitChars(ch) {
        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);
      }
      _matchNamedCharacterReference(cp) {
        let result = null, excess = 0, withoutSemicolon = !1;
        for (let i = 0, current = decode_data_html_default[0]; i >= 0 && (i = determineBranch(decode_data_html_default, current, i + 1, cp), !(i < 0)); cp = this._consume()) {
          excess += 1, current = decode_data_html_default[i];
          let masked = current & BinTrieFlags.VALUE_LENGTH;
          if (masked) {
            let valueLength = (masked >> 14) - 1;
            if (cp !== CODE_POINTS.SEMICOLON && this._isCharacterReferenceInAttribute() && isEntityInAttributeInvalidEnd(this.preprocessor.peek(1)) ? (result = [CODE_POINTS.AMPERSAND], i += valueLength) : (result = valueLength === 0 ? [decode_data_html_default[i] & ~BinTrieFlags.VALUE_LENGTH] : valueLength === 1 ? [decode_data_html_default[++i]] : [decode_data_html_default[++i], decode_data_html_default[++i]], excess = 0, withoutSemicolon = cp !== CODE_POINTS.SEMICOLON), valueLength === 0) {
              this._consume();
              break;
            }
          }
        }
        return this._unconsume(excess), withoutSemicolon && !this.preprocessor.endOfChunkHit && this._err(ERR.missingSemicolonAfterCharacterReference), this._unconsume(1), result;
      }
      _isCharacterReferenceInAttribute() {
        return this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED;
      }
      _flushCodePointConsumedAsCharacterReference(cp) {
        this._isCharacterReferenceInAttribute() ? this.currentAttr.value += String.fromCodePoint(cp) : this._emitCodePoint(cp);
      }
      _callState(cp) {
        switch (this.state) {
          case State.DATA: {
            this._stateData(cp);
            break;
          }
          case State.RCDATA: {
            this._stateRcdata(cp);
            break;
          }
          case State.RAWTEXT: {
            this._stateRawtext(cp);
            break;
          }
          case State.SCRIPT_DATA: {
            this._stateScriptData(cp);
            break;
          }
          case State.PLAINTEXT: {
            this._statePlaintext(cp);
            break;
          }
          case State.TAG_OPEN: {
            this._stateTagOpen(cp);
            break;
          }
          case State.END_TAG_OPEN: {
            this._stateEndTagOpen(cp);
            break;
          }
          case State.TAG_NAME: {
            this._stateTagName(cp);
            break;
          }
          case State.RCDATA_LESS_THAN_SIGN: {
            this._stateRcdataLessThanSign(cp);
            break;
          }
          case State.RCDATA_END_TAG_OPEN: {
            this._stateRcdataEndTagOpen(cp);
            break;
          }
          case State.RCDATA_END_TAG_NAME: {
            this._stateRcdataEndTagName(cp);
            break;
          }
          case State.RAWTEXT_LESS_THAN_SIGN: {
            this._stateRawtextLessThanSign(cp);
            break;
          }
          case State.RAWTEXT_END_TAG_OPEN: {
            this._stateRawtextEndTagOpen(cp);
            break;
          }
          case State.RAWTEXT_END_TAG_NAME: {
            this._stateRawtextEndTagName(cp);
            break;
          }
          case State.SCRIPT_DATA_LESS_THAN_SIGN: {
            this._stateScriptDataLessThanSign(cp);
            break;
          }
          case State.SCRIPT_DATA_END_TAG_OPEN: {
            this._stateScriptDataEndTagOpen(cp);
            break;
          }
          case State.SCRIPT_DATA_END_TAG_NAME: {
            this._stateScriptDataEndTagName(cp);
            break;
          }
          case State.SCRIPT_DATA_ESCAPE_START: {
            this._stateScriptDataEscapeStart(cp);
            break;
          }
          case State.SCRIPT_DATA_ESCAPE_START_DASH: {
            this._stateScriptDataEscapeStartDash(cp);
            break;
          }
          case State.SCRIPT_DATA_ESCAPED: {
            this._stateScriptDataEscaped(cp);
            break;
          }
          case State.SCRIPT_DATA_ESCAPED_DASH: {
            this._stateScriptDataEscapedDash(cp);
            break;
          }
          case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {
            this._stateScriptDataEscapedDashDash(cp);
            break;
          }
          case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {
            this._stateScriptDataEscapedLessThanSign(cp);
            break;
          }
          case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {
            this._stateScriptDataEscapedEndTagOpen(cp);
            break;
          }
          case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {
            this._stateScriptDataEscapedEndTagName(cp);
            break;
          }
          case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {
            this._stateScriptDataDoubleEscapeStart(cp);
            break;
          }
          case State.SCRIPT_DATA_DOUBLE_ESCAPED: {
            this._stateScriptDataDoubleEscaped(cp);
            break;
          }
          case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {
            this._stateScriptDataDoubleEscapedDash(cp);
            break;
          }
          case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {
            this._stateScriptDataDoubleEscapedDashDash(cp);
            break;
          }
          case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {
            this._stateScriptDataDoubleEscapedLessThanSign(cp);
            break;
          }
          case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {
            this._stateScriptDataDoubleEscapeEnd(cp);
            break;
          }
          case State.BEFORE_ATTRIBUTE_NAME: {
            this._stateBeforeAttributeName(cp);
            break;
          }
          case State.ATTRIBUTE_NAME: {
            this._stateAttributeName(cp);
            break;
          }
          case State.AFTER_ATTRIBUTE_NAME: {
            this._stateAfterAttributeName(cp);
            break;
          }
          case State.BEFORE_ATTRIBUTE_VALUE: {
            this._stateBeforeAttributeValue(cp);
            break;
          }
          case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {
            this._stateAttributeValueDoubleQuoted(cp);
            break;
          }
          case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {
            this._stateAttributeValueSingleQuoted(cp);
            break;
          }
          case State.ATTRIBUTE_VALUE_UNQUOTED: {
            this._stateAttributeValueUnquoted(cp);
            break;
          }
          case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {
            this._stateAfterAttributeValueQuoted(cp);
            break;
          }
          case State.SELF_CLOSING_START_TAG: {
            this._stateSelfClosingStartTag(cp);
            break;
          }
          case State.BOGUS_COMMENT: {
            this._stateBogusComment(cp);
            break;
          }
          case State.MARKUP_DECLARATION_OPEN: {
            this._stateMarkupDeclarationOpen(cp);
            break;
          }
          case State.COMMENT_START: {
            this._stateCommentStart(cp);
            break;
          }
          case State.COMMENT_START_DASH: {
            this._stateCommentStartDash(cp);
            break;
          }
          case State.COMMENT: {
            this._stateComment(cp);
            break;
          }
          case State.COMMENT_LESS_THAN_SIGN: {
            this._stateCommentLessThanSign(cp);
            break;
          }
          case State.COMMENT_LESS_THAN_SIGN_BANG: {
            this._stateCommentLessThanSignBang(cp);
            break;
          }
          case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {
            this._stateCommentLessThanSignBangDash(cp);
            break;
          }
          case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {
            this._stateCommentLessThanSignBangDashDash(cp);
            break;
          }
          case State.COMMENT_END_DASH: {
            this._stateCommentEndDash(cp);
            break;
          }
          case State.COMMENT_END: {
            this._stateCommentEnd(cp);
            break;
          }
          case State.COMMENT_END_BANG: {
            this._stateCommentEndBang(cp);
            break;
          }
          case State.DOCTYPE: {
            this._stateDoctype(cp);
            break;
          }
          case State.BEFORE_DOCTYPE_NAME: {
            this._stateBeforeDoctypeName(cp);
            break;
          }
          case State.DOCTYPE_NAME: {
            this._stateDoctypeName(cp);
            break;
          }
          case State.AFTER_DOCTYPE_NAME: {
            this._stateAfterDoctypeName(cp);
            break;
          }
          case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {
            this._stateAfterDoctypePublicKeyword(cp);
            break;
          }
          case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {
            this._stateBeforeDoctypePublicIdentifier(cp);
            break;
          }
          case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {
            this._stateDoctypePublicIdentifierDoubleQuoted(cp);
            break;
          }
          case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {
            this._stateDoctypePublicIdentifierSingleQuoted(cp);
            break;
          }
          case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {
            this._stateAfterDoctypePublicIdentifier(cp);
            break;
          }
          case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {
            this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);
            break;
          }
          case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {
            this._stateAfterDoctypeSystemKeyword(cp);
            break;
          }
          case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {
            this._stateBeforeDoctypeSystemIdentifier(cp);
            break;
          }
          case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {
            this._stateDoctypeSystemIdentifierDoubleQuoted(cp);
            break;
          }
          case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {
            this._stateDoctypeSystemIdentifierSingleQuoted(cp);
            break;
          }
          case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {
            this._stateAfterDoctypeSystemIdentifier(cp);
            break;
          }
          case State.BOGUS_DOCTYPE: {
            this._stateBogusDoctype(cp);
            break;
          }
          case State.CDATA_SECTION: {
            this._stateCdataSection(cp);
            break;
          }
          case State.CDATA_SECTION_BRACKET: {
            this._stateCdataSectionBracket(cp);
            break;
          }
          case State.CDATA_SECTION_END: {
            this._stateCdataSectionEnd(cp);
            break;
          }
          case State.CHARACTER_REFERENCE: {
            this._stateCharacterReference(cp);
            break;
          }
          case State.NAMED_CHARACTER_REFERENCE: {
            this._stateNamedCharacterReference(cp);
            break;
          }
          case State.AMBIGUOUS_AMPERSAND: {
            this._stateAmbiguousAmpersand(cp);
            break;
          }
          case State.NUMERIC_CHARACTER_REFERENCE: {
            this._stateNumericCharacterReference(cp);
            break;
          }
          case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {
            this._stateHexademicalCharacterReferenceStart(cp);
            break;
          }
          case State.HEXADEMICAL_CHARACTER_REFERENCE: {
            this._stateHexademicalCharacterReference(cp);
            break;
          }
          case State.DECIMAL_CHARACTER_REFERENCE: {
            this._stateDecimalCharacterReference(cp);
            break;
          }
          case State.NUMERIC_CHARACTER_REFERENCE_END: {
            this._stateNumericCharacterReferenceEnd(cp);
            break;
          }
          default:
            throw new Error("Unknown state");
        }
      }
      _stateData(cp) {
        switch (cp) {
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.TAG_OPEN;
            break;
          }
          case CODE_POINTS.AMPERSAND: {
            this.returnState = State.DATA, this.state = State.CHARACTER_REFERENCE;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this._emitCodePoint(cp);
            break;
          }
          case CODE_POINTS.EOF: {
            this._emitEOFToken();
            break;
          }
          default:
            this._emitCodePoint(cp);
        }
      }
      _stateRcdata(cp) {
        switch (cp) {
          case CODE_POINTS.AMPERSAND: {
            this.returnState = State.RCDATA, this.state = State.CHARACTER_REFERENCE;
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.RCDATA_LESS_THAN_SIGN;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._emitEOFToken();
            break;
          }
          default:
            this._emitCodePoint(cp);
        }
      }
      _stateRawtext(cp) {
        switch (cp) {
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.RAWTEXT_LESS_THAN_SIGN;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._emitEOFToken();
            break;
          }
          default:
            this._emitCodePoint(cp);
        }
      }
      _stateScriptData(cp) {
        switch (cp) {
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._emitEOFToken();
            break;
          }
          default:
            this._emitCodePoint(cp);
        }
      }
      _statePlaintext(cp) {
        switch (cp) {
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._emitEOFToken();
            break;
          }
          default:
            this._emitCodePoint(cp);
        }
      }
      _stateTagOpen(cp) {
        if (isAsciiLetter(cp))
          this._createStartTagToken(), this.state = State.TAG_NAME, this._stateTagName(cp);
        else
          switch (cp) {
            case CODE_POINTS.EXCLAMATION_MARK: {
              this.state = State.MARKUP_DECLARATION_OPEN;
              break;
            }
            case CODE_POINTS.SOLIDUS: {
              this.state = State.END_TAG_OPEN;
              break;
            }
            case CODE_POINTS.QUESTION_MARK: {
              this._err(ERR.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(1), this.state = State.BOGUS_COMMENT, this._stateBogusComment(cp);
              break;
            }
            case CODE_POINTS.EOF: {
              this._err(ERR.eofBeforeTagName), this._emitChars("<"), this._emitEOFToken();
              break;
            }
            default:
              this._err(ERR.invalidFirstCharacterOfTagName), this._emitChars("<"), this.state = State.DATA, this._stateData(cp);
          }
      }
      _stateEndTagOpen(cp) {
        if (isAsciiLetter(cp))
          this._createEndTagToken(), this.state = State.TAG_NAME, this._stateTagName(cp);
        else
          switch (cp) {
            case CODE_POINTS.GREATER_THAN_SIGN: {
              this._err(ERR.missingEndTagName), this.state = State.DATA;
              break;
            }
            case CODE_POINTS.EOF: {
              this._err(ERR.eofBeforeTagName), this._emitChars("</"), this._emitEOFToken();
              break;
            }
            default:
              this._err(ERR.invalidFirstCharacterOfTagName), this._createCommentToken(2), this.state = State.BOGUS_COMMENT, this._stateBogusComment(cp);
          }
      }
      _stateTagName(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED: {
            this.state = State.BEFORE_ATTRIBUTE_NAME;
            break;
          }
          case CODE_POINTS.SOLIDUS: {
            this.state = State.SELF_CLOSING_START_TAG;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.DATA, this.emitCurrentTagToken();
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), token.tagName += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInTag), this._emitEOFToken();
            break;
          }
          default:
            token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
        }
      }
      _stateRcdataLessThanSign(cp) {
        cp === CODE_POINTS.SOLIDUS ? this.state = State.RCDATA_END_TAG_OPEN : (this._emitChars("<"), this.state = State.RCDATA, this._stateRcdata(cp));
      }
      _stateRcdataEndTagOpen(cp) {
        isAsciiLetter(cp) ? (this.state = State.RCDATA_END_TAG_NAME, this._stateRcdataEndTagName(cp)) : (this._emitChars("</"), this.state = State.RCDATA, this._stateRcdata(cp));
      }
      handleSpecialEndTag(_cp) {
        if (!this.preprocessor.startsWith(this.lastStartTagName, !1))
          return !this._ensureHibernation();
        this._createEndTagToken();
        let token = this.currentToken;
        switch (token.tagName = this.lastStartTagName, this.preprocessor.peek(this.lastStartTagName.length)) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            return this._advanceBy(this.lastStartTagName.length), this.state = State.BEFORE_ATTRIBUTE_NAME, !1;
          case CODE_POINTS.SOLIDUS:
            return this._advanceBy(this.lastStartTagName.length), this.state = State.SELF_CLOSING_START_TAG, !1;
          case CODE_POINTS.GREATER_THAN_SIGN:
            return this._advanceBy(this.lastStartTagName.length), this.emitCurrentTagToken(), this.state = State.DATA, !1;
          default:
            return !this._ensureHibernation();
        }
      }
      _stateRcdataEndTagName(cp) {
        this.handleSpecialEndTag(cp) && (this._emitChars("</"), this.state = State.RCDATA, this._stateRcdata(cp));
      }
      _stateRawtextLessThanSign(cp) {
        cp === CODE_POINTS.SOLIDUS ? this.state = State.RAWTEXT_END_TAG_OPEN : (this._emitChars("<"), this.state = State.RAWTEXT, this._stateRawtext(cp));
      }
      _stateRawtextEndTagOpen(cp) {
        isAsciiLetter(cp) ? (this.state = State.RAWTEXT_END_TAG_NAME, this._stateRawtextEndTagName(cp)) : (this._emitChars("</"), this.state = State.RAWTEXT, this._stateRawtext(cp));
      }
      _stateRawtextEndTagName(cp) {
        this.handleSpecialEndTag(cp) && (this._emitChars("</"), this.state = State.RAWTEXT, this._stateRawtext(cp));
      }
      _stateScriptDataLessThanSign(cp) {
        switch (cp) {
          case CODE_POINTS.SOLIDUS: {
            this.state = State.SCRIPT_DATA_END_TAG_OPEN;
            break;
          }
          case CODE_POINTS.EXCLAMATION_MARK: {
            this.state = State.SCRIPT_DATA_ESCAPE_START, this._emitChars("<!");
            break;
          }
          default:
            this._emitChars("<"), this.state = State.SCRIPT_DATA, this._stateScriptData(cp);
        }
      }
      _stateScriptDataEndTagOpen(cp) {
        isAsciiLetter(cp) ? (this.state = State.SCRIPT_DATA_END_TAG_NAME, this._stateScriptDataEndTagName(cp)) : (this._emitChars("</"), this.state = State.SCRIPT_DATA, this._stateScriptData(cp));
      }
      _stateScriptDataEndTagName(cp) {
        this.handleSpecialEndTag(cp) && (this._emitChars("</"), this.state = State.SCRIPT_DATA, this._stateScriptData(cp));
      }
      _stateScriptDataEscapeStart(cp) {
        cp === CODE_POINTS.HYPHEN_MINUS ? (this.state = State.SCRIPT_DATA_ESCAPE_START_DASH, this._emitChars("-")) : (this.state = State.SCRIPT_DATA, this._stateScriptData(cp));
      }
      _stateScriptDataEscapeStartDash(cp) {
        cp === CODE_POINTS.HYPHEN_MINUS ? (this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars("-")) : (this.state = State.SCRIPT_DATA, this._stateScriptData(cp));
      }
      _stateScriptDataEscaped(cp) {
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this.state = State.SCRIPT_DATA_ESCAPED_DASH, this._emitChars("-");
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
            break;
          }
          default:
            this._emitCodePoint(cp);
        }
      }
      _stateScriptDataEscapedDash(cp) {
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars("-");
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this.state = State.SCRIPT_DATA_ESCAPED, this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
            break;
          }
          default:
            this.state = State.SCRIPT_DATA_ESCAPED, this._emitCodePoint(cp);
        }
      }
      _stateScriptDataEscapedDashDash(cp) {
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this._emitChars("-");
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.SCRIPT_DATA, this._emitChars(">");
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this.state = State.SCRIPT_DATA_ESCAPED, this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
            break;
          }
          default:
            this.state = State.SCRIPT_DATA_ESCAPED, this._emitCodePoint(cp);
        }
      }
      _stateScriptDataEscapedLessThanSign(cp) {
        cp === CODE_POINTS.SOLIDUS ? this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN : isAsciiLetter(cp) ? (this._emitChars("<"), this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START, this._stateScriptDataDoubleEscapeStart(cp)) : (this._emitChars("<"), this.state = State.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(cp));
      }
      _stateScriptDataEscapedEndTagOpen(cp) {
        isAsciiLetter(cp) ? (this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME, this._stateScriptDataEscapedEndTagName(cp)) : (this._emitChars("</"), this.state = State.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(cp));
      }
      _stateScriptDataEscapedEndTagName(cp) {
        this.handleSpecialEndTag(cp) && (this._emitChars("</"), this.state = State.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(cp));
      }
      _stateScriptDataDoubleEscapeStart(cp) {
        if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, !1) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {
          this._emitCodePoint(cp);
          for (let i = 0; i < SEQUENCES.SCRIPT.length; i++)
            this._emitCodePoint(this._consume());
          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;
        } else
          this._ensureHibernation() || (this.state = State.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(cp));
      }
      _stateScriptDataDoubleEscaped(cp) {
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH, this._emitChars("-");
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
            break;
          }
          default:
            this._emitCodePoint(cp);
        }
      }
      _stateScriptDataDoubleEscapedDash(cp) {
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH, this._emitChars("-");
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
            break;
          }
          default:
            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(cp);
        }
      }
      _stateScriptDataDoubleEscapedDashDash(cp) {
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this._emitChars("-");
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.SCRIPT_DATA, this._emitChars(">");
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(REPLACEMENT_CHARACTER);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
            break;
          }
          default:
            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(cp);
        }
      }
      _stateScriptDataDoubleEscapedLessThanSign(cp) {
        cp === CODE_POINTS.SOLIDUS ? (this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END, this._emitChars("/")) : (this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(cp));
      }
      _stateScriptDataDoubleEscapeEnd(cp) {
        if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, !1) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {
          this._emitCodePoint(cp);
          for (let i = 0; i < SEQUENCES.SCRIPT.length; i++)
            this._emitCodePoint(this._consume());
          this.state = State.SCRIPT_DATA_ESCAPED;
        } else
          this._ensureHibernation() || (this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(cp));
      }
      _stateBeforeAttributeName(cp) {
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            break;
          case CODE_POINTS.SOLIDUS:
          case CODE_POINTS.GREATER_THAN_SIGN:
          case CODE_POINTS.EOF: {
            this.state = State.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(cp);
            break;
          }
          case CODE_POINTS.EQUALS_SIGN: {
            this._err(ERR.unexpectedEqualsSignBeforeAttributeName), this._createAttr("="), this.state = State.ATTRIBUTE_NAME;
            break;
          }
          default:
            this._createAttr(""), this.state = State.ATTRIBUTE_NAME, this._stateAttributeName(cp);
        }
      }
      _stateAttributeName(cp) {
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
          case CODE_POINTS.SOLIDUS:
          case CODE_POINTS.GREATER_THAN_SIGN:
          case CODE_POINTS.EOF: {
            this._leaveAttrName(), this.state = State.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(cp);
            break;
          }
          case CODE_POINTS.EQUALS_SIGN: {
            this._leaveAttrName(), this.state = State.BEFORE_ATTRIBUTE_VALUE;
            break;
          }
          case CODE_POINTS.QUOTATION_MARK:
          case CODE_POINTS.APOSTROPHE:
          case CODE_POINTS.LESS_THAN_SIGN: {
            this._err(ERR.unexpectedCharacterInAttributeName), this.currentAttr.name += String.fromCodePoint(cp);
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this.currentAttr.name += REPLACEMENT_CHARACTER;
            break;
          }
          default:
            this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
        }
      }
      _stateAfterAttributeName(cp) {
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            break;
          case CODE_POINTS.SOLIDUS: {
            this.state = State.SELF_CLOSING_START_TAG;
            break;
          }
          case CODE_POINTS.EQUALS_SIGN: {
            this.state = State.BEFORE_ATTRIBUTE_VALUE;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.DATA, this.emitCurrentTagToken();
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInTag), this._emitEOFToken();
            break;
          }
          default:
            this._createAttr(""), this.state = State.ATTRIBUTE_NAME, this._stateAttributeName(cp);
        }
      }
      _stateBeforeAttributeValue(cp) {
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            break;
          case CODE_POINTS.QUOTATION_MARK: {
            this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;
            break;
          }
          case CODE_POINTS.APOSTROPHE: {
            this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.missingAttributeValue), this.state = State.DATA, this.emitCurrentTagToken();
            break;
          }
          default:
            this.state = State.ATTRIBUTE_VALUE_UNQUOTED, this._stateAttributeValueUnquoted(cp);
        }
      }
      _stateAttributeValueDoubleQuoted(cp) {
        switch (cp) {
          case CODE_POINTS.QUOTATION_MARK: {
            this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;
            break;
          }
          case CODE_POINTS.AMPERSAND: {
            this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED, this.state = State.CHARACTER_REFERENCE;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this.currentAttr.value += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInTag), this._emitEOFToken();
            break;
          }
          default:
            this.currentAttr.value += String.fromCodePoint(cp);
        }
      }
      _stateAttributeValueSingleQuoted(cp) {
        switch (cp) {
          case CODE_POINTS.APOSTROPHE: {
            this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;
            break;
          }
          case CODE_POINTS.AMPERSAND: {
            this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED, this.state = State.CHARACTER_REFERENCE;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this.currentAttr.value += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInTag), this._emitEOFToken();
            break;
          }
          default:
            this.currentAttr.value += String.fromCodePoint(cp);
        }
      }
      _stateAttributeValueUnquoted(cp) {
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED: {
            this._leaveAttrValue(), this.state = State.BEFORE_ATTRIBUTE_NAME;
            break;
          }
          case CODE_POINTS.AMPERSAND: {
            this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED, this.state = State.CHARACTER_REFERENCE;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._leaveAttrValue(), this.state = State.DATA, this.emitCurrentTagToken();
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), this.currentAttr.value += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.QUOTATION_MARK:
          case CODE_POINTS.APOSTROPHE:
          case CODE_POINTS.LESS_THAN_SIGN:
          case CODE_POINTS.EQUALS_SIGN:
          case CODE_POINTS.GRAVE_ACCENT: {
            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += String.fromCodePoint(cp);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInTag), this._emitEOFToken();
            break;
          }
          default:
            this.currentAttr.value += String.fromCodePoint(cp);
        }
      }
      _stateAfterAttributeValueQuoted(cp) {
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED: {
            this._leaveAttrValue(), this.state = State.BEFORE_ATTRIBUTE_NAME;
            break;
          }
          case CODE_POINTS.SOLIDUS: {
            this._leaveAttrValue(), this.state = State.SELF_CLOSING_START_TAG;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._leaveAttrValue(), this.state = State.DATA, this.emitCurrentTagToken();
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInTag), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.missingWhitespaceBetweenAttributes), this.state = State.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(cp);
        }
      }
      _stateSelfClosingStartTag(cp) {
        switch (cp) {
          case CODE_POINTS.GREATER_THAN_SIGN: {
            let token = this.currentToken;
            token.selfClosing = !0, this.state = State.DATA, this.emitCurrentTagToken();
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInTag), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.unexpectedSolidusInTag), this.state = State.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(cp);
        }
      }
      _stateBogusComment(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.DATA, this.emitCurrentComment(token);
            break;
          }
          case CODE_POINTS.EOF: {
            this.emitCurrentComment(token), this._emitEOFToken();
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), token.data += REPLACEMENT_CHARACTER;
            break;
          }
          default:
            token.data += String.fromCodePoint(cp);
        }
      }
      _stateMarkupDeclarationOpen(cp) {
        this._consumeSequenceIfMatch(SEQUENCES.DASH_DASH, !0) ? (this._createCommentToken(SEQUENCES.DASH_DASH.length + 1), this.state = State.COMMENT_START) : this._consumeSequenceIfMatch(SEQUENCES.DOCTYPE, !1) ? (this.currentLocation = this.getCurrentLocation(SEQUENCES.DOCTYPE.length + 1), this.state = State.DOCTYPE) : this._consumeSequenceIfMatch(SEQUENCES.CDATA_START, !0) ? this.inForeignNode ? this.state = State.CDATA_SECTION : (this._err(ERR.cdataInHtmlContent), this._createCommentToken(SEQUENCES.CDATA_START.length + 1), this.currentToken.data = "[CDATA[", this.state = State.BOGUS_COMMENT) : this._ensureHibernation() || (this._err(ERR.incorrectlyOpenedComment), this._createCommentToken(2), this.state = State.BOGUS_COMMENT, this._stateBogusComment(cp));
      }
      _stateCommentStart(cp) {
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this.state = State.COMMENT_START_DASH;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.abruptClosingOfEmptyComment), this.state = State.DATA;
            let token = this.currentToken;
            this.emitCurrentComment(token);
            break;
          }
          default:
            this.state = State.COMMENT, this._stateComment(cp);
        }
      }
      _stateCommentStartDash(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this.state = State.COMMENT_END;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.abruptClosingOfEmptyComment), this.state = State.DATA, this.emitCurrentComment(token);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInComment), this.emitCurrentComment(token), this._emitEOFToken();
            break;
          }
          default:
            token.data += "-", this.state = State.COMMENT, this._stateComment(cp);
        }
      }
      _stateComment(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this.state = State.COMMENT_END_DASH;
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            token.data += "<", this.state = State.COMMENT_LESS_THAN_SIGN;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), token.data += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInComment), this.emitCurrentComment(token), this._emitEOFToken();
            break;
          }
          default:
            token.data += String.fromCodePoint(cp);
        }
      }
      _stateCommentLessThanSign(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.EXCLAMATION_MARK: {
            token.data += "!", this.state = State.COMMENT_LESS_THAN_SIGN_BANG;
            break;
          }
          case CODE_POINTS.LESS_THAN_SIGN: {
            token.data += "<";
            break;
          }
          default:
            this.state = State.COMMENT, this._stateComment(cp);
        }
      }
      _stateCommentLessThanSignBang(cp) {
        cp === CODE_POINTS.HYPHEN_MINUS ? this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH : (this.state = State.COMMENT, this._stateComment(cp));
      }
      _stateCommentLessThanSignBangDash(cp) {
        cp === CODE_POINTS.HYPHEN_MINUS ? this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH : (this.state = State.COMMENT_END_DASH, this._stateCommentEndDash(cp));
      }
      _stateCommentLessThanSignBangDashDash(cp) {
        cp !== CODE_POINTS.GREATER_THAN_SIGN && cp !== CODE_POINTS.EOF && this._err(ERR.nestedComment), this.state = State.COMMENT_END, this._stateCommentEnd(cp);
      }
      _stateCommentEndDash(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            this.state = State.COMMENT_END;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInComment), this.emitCurrentComment(token), this._emitEOFToken();
            break;
          }
          default:
            token.data += "-", this.state = State.COMMENT, this._stateComment(cp);
        }
      }
      _stateCommentEnd(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.DATA, this.emitCurrentComment(token);
            break;
          }
          case CODE_POINTS.EXCLAMATION_MARK: {
            this.state = State.COMMENT_END_BANG;
            break;
          }
          case CODE_POINTS.HYPHEN_MINUS: {
            token.data += "-";
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInComment), this.emitCurrentComment(token), this._emitEOFToken();
            break;
          }
          default:
            token.data += "--", this.state = State.COMMENT, this._stateComment(cp);
        }
      }
      _stateCommentEndBang(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.HYPHEN_MINUS: {
            token.data += "--!", this.state = State.COMMENT_END_DASH;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.incorrectlyClosedComment), this.state = State.DATA, this.emitCurrentComment(token);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInComment), this.emitCurrentComment(token), this._emitEOFToken();
            break;
          }
          default:
            token.data += "--!", this.state = State.COMMENT, this._stateComment(cp);
        }
      }
      _stateDoctype(cp) {
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED: {
            this.state = State.BEFORE_DOCTYPE_NAME;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(cp);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), this._createDoctypeToken(null);
            let token = this.currentToken;
            token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.missingWhitespaceBeforeDoctypeName), this.state = State.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(cp);
        }
      }
      _stateBeforeDoctypeName(cp) {
        if (isAsciiUpper(cp))
          this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp))), this.state = State.DOCTYPE_NAME;
        else
          switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED:
              break;
            case CODE_POINTS.NULL: {
              this._err(ERR.unexpectedNullCharacter), this._createDoctypeToken(REPLACEMENT_CHARACTER), this.state = State.DOCTYPE_NAME;
              break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
              this._err(ERR.missingDoctypeName), this._createDoctypeToken(null);
              let token = this.currentToken;
              token.forceQuirks = !0, this.emitCurrentDoctype(token), this.state = State.DATA;
              break;
            }
            case CODE_POINTS.EOF: {
              this._err(ERR.eofInDoctype), this._createDoctypeToken(null);
              let token = this.currentToken;
              token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
              break;
            }
            default:
              this._createDoctypeToken(String.fromCodePoint(cp)), this.state = State.DOCTYPE_NAME;
          }
      }
      _stateDoctypeName(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED: {
            this.state = State.AFTER_DOCTYPE_NAME;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.DATA, this.emitCurrentDoctype(token);
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), token.name += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
        }
      }
      _stateAfterDoctypeName(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            break;
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.DATA, this.emitCurrentDoctype(token);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._consumeSequenceIfMatch(SEQUENCES.PUBLIC, !1) ? this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD : this._consumeSequenceIfMatch(SEQUENCES.SYSTEM, !1) ? this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD : this._ensureHibernation() || (this._err(ERR.invalidCharacterSequenceAfterDoctypeName), token.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(cp));
        }
      }
      _stateAfterDoctypePublicKeyword(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED: {
            this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;
            break;
          }
          case CODE_POINTS.QUOTATION_MARK: {
            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword), token.publicId = "", this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
            break;
          }
          case CODE_POINTS.APOSTROPHE: {
            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword), token.publicId = "", this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.missingDoctypePublicIdentifier), token.forceQuirks = !0, this.state = State.DATA, this.emitCurrentDoctype(token);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier), token.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(cp);
        }
      }
      _stateBeforeDoctypePublicIdentifier(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            break;
          case CODE_POINTS.QUOTATION_MARK: {
            token.publicId = "", this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
            break;
          }
          case CODE_POINTS.APOSTROPHE: {
            token.publicId = "", this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.missingDoctypePublicIdentifier), token.forceQuirks = !0, this.state = State.DATA, this.emitCurrentDoctype(token);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier), token.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(cp);
        }
      }
      _stateDoctypePublicIdentifierDoubleQuoted(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.QUOTATION_MARK: {
            this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), token.publicId += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.abruptDoctypePublicIdentifier), token.forceQuirks = !0, this.emitCurrentDoctype(token), this.state = State.DATA;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            token.publicId += String.fromCodePoint(cp);
        }
      }
      _stateDoctypePublicIdentifierSingleQuoted(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.APOSTROPHE: {
            this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), token.publicId += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.abruptDoctypePublicIdentifier), token.forceQuirks = !0, this.emitCurrentDoctype(token), this.state = State.DATA;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            token.publicId += String.fromCodePoint(cp);
        }
      }
      _stateAfterDoctypePublicIdentifier(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED: {
            this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.DATA, this.emitCurrentDoctype(token);
            break;
          }
          case CODE_POINTS.QUOTATION_MARK: {
            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), token.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
            break;
          }
          case CODE_POINTS.APOSTROPHE: {
            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), token.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier), token.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(cp);
        }
      }
      _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            break;
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.emitCurrentDoctype(token), this.state = State.DATA;
            break;
          }
          case CODE_POINTS.QUOTATION_MARK: {
            token.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
            break;
          }
          case CODE_POINTS.APOSTROPHE: {
            token.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier), token.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(cp);
        }
      }
      _stateAfterDoctypeSystemKeyword(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED: {
            this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;
            break;
          }
          case CODE_POINTS.QUOTATION_MARK: {
            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword), token.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
            break;
          }
          case CODE_POINTS.APOSTROPHE: {
            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword), token.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.missingDoctypeSystemIdentifier), token.forceQuirks = !0, this.state = State.DATA, this.emitCurrentDoctype(token);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier), token.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(cp);
        }
      }
      _stateBeforeDoctypeSystemIdentifier(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            break;
          case CODE_POINTS.QUOTATION_MARK: {
            token.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
            break;
          }
          case CODE_POINTS.APOSTROPHE: {
            token.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.missingDoctypeSystemIdentifier), token.forceQuirks = !0, this.state = State.DATA, this.emitCurrentDoctype(token);
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier), token.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(cp);
        }
      }
      _stateDoctypeSystemIdentifierDoubleQuoted(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.QUOTATION_MARK: {
            this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), token.systemId += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.abruptDoctypeSystemIdentifier), token.forceQuirks = !0, this.emitCurrentDoctype(token), this.state = State.DATA;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            token.systemId += String.fromCodePoint(cp);
        }
      }
      _stateDoctypeSystemIdentifierSingleQuoted(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.APOSTROPHE: {
            this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter), token.systemId += REPLACEMENT_CHARACTER;
            break;
          }
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this._err(ERR.abruptDoctypeSystemIdentifier), token.forceQuirks = !0, this.emitCurrentDoctype(token), this.state = State.DATA;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            token.systemId += String.fromCodePoint(cp);
        }
      }
      _stateAfterDoctypeSystemIdentifier(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.SPACE:
          case CODE_POINTS.LINE_FEED:
          case CODE_POINTS.TABULATION:
          case CODE_POINTS.FORM_FEED:
            break;
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.emitCurrentDoctype(token), this.state = State.DATA;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInDoctype), token.forceQuirks = !0, this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier), this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(cp);
        }
      }
      _stateBogusDoctype(cp) {
        let token = this.currentToken;
        switch (cp) {
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.emitCurrentDoctype(token), this.state = State.DATA;
            break;
          }
          case CODE_POINTS.NULL: {
            this._err(ERR.unexpectedNullCharacter);
            break;
          }
          case CODE_POINTS.EOF: {
            this.emitCurrentDoctype(token), this._emitEOFToken();
            break;
          }
          default:
        }
      }
      _stateCdataSection(cp) {
        switch (cp) {
          case CODE_POINTS.RIGHT_SQUARE_BRACKET: {
            this.state = State.CDATA_SECTION_BRACKET;
            break;
          }
          case CODE_POINTS.EOF: {
            this._err(ERR.eofInCdata), this._emitEOFToken();
            break;
          }
          default:
            this._emitCodePoint(cp);
        }
      }
      _stateCdataSectionBracket(cp) {
        cp === CODE_POINTS.RIGHT_SQUARE_BRACKET ? this.state = State.CDATA_SECTION_END : (this._emitChars("]"), this.state = State.CDATA_SECTION, this._stateCdataSection(cp));
      }
      _stateCdataSectionEnd(cp) {
        switch (cp) {
          case CODE_POINTS.GREATER_THAN_SIGN: {
            this.state = State.DATA;
            break;
          }
          case CODE_POINTS.RIGHT_SQUARE_BRACKET: {
            this._emitChars("]");
            break;
          }
          default:
            this._emitChars("]]"), this.state = State.CDATA_SECTION, this._stateCdataSection(cp);
        }
      }
      _stateCharacterReference(cp) {
        cp === CODE_POINTS.NUMBER_SIGN ? this.state = State.NUMERIC_CHARACTER_REFERENCE : isAsciiAlphaNumeric(cp) ? (this.state = State.NAMED_CHARACTER_REFERENCE, this._stateNamedCharacterReference(cp)) : (this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND), this._reconsumeInState(this.returnState, cp));
      }
      _stateNamedCharacterReference(cp) {
        let matchResult = this._matchNamedCharacterReference(cp);
        if (!this._ensureHibernation())
          if (matchResult) {
            for (let i = 0; i < matchResult.length; i++)
              this._flushCodePointConsumedAsCharacterReference(matchResult[i]);
            this.state = this.returnState;
          } else
            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND), this.state = State.AMBIGUOUS_AMPERSAND;
      }
      _stateAmbiguousAmpersand(cp) {
        isAsciiAlphaNumeric(cp) ? this._flushCodePointConsumedAsCharacterReference(cp) : (cp === CODE_POINTS.SEMICOLON && this._err(ERR.unknownNamedCharacterReference), this._reconsumeInState(this.returnState, cp));
      }
      _stateNumericCharacterReference(cp) {
        this.charRefCode = 0, cp === CODE_POINTS.LATIN_SMALL_X || cp === CODE_POINTS.LATIN_CAPITAL_X ? this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START : isAsciiDigit(cp) ? (this.state = State.DECIMAL_CHARACTER_REFERENCE, this._stateDecimalCharacterReference(cp)) : (this._err(ERR.absenceOfDigitsInNumericCharacterReference), this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND), this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN), this._reconsumeInState(this.returnState, cp));
      }
      _stateHexademicalCharacterReferenceStart(cp) {
        isAsciiHexDigit(cp) ? (this.state = State.HEXADEMICAL_CHARACTER_REFERENCE, this._stateHexademicalCharacterReference(cp)) : (this._err(ERR.absenceOfDigitsInNumericCharacterReference), this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND), this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN), this._unconsume(2), this.state = this.returnState);
      }
      _stateHexademicalCharacterReference(cp) {
        isAsciiUpperHexDigit(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 55 : isAsciiLowerHexDigit(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 87 : isAsciiDigit(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 48 : cp === CODE_POINTS.SEMICOLON ? this.state = State.NUMERIC_CHARACTER_REFERENCE_END : (this._err(ERR.missingSemicolonAfterCharacterReference), this.state = State.NUMERIC_CHARACTER_REFERENCE_END, this._stateNumericCharacterReferenceEnd(cp));
      }
      _stateDecimalCharacterReference(cp) {
        isAsciiDigit(cp) ? this.charRefCode = this.charRefCode * 10 + cp - 48 : cp === CODE_POINTS.SEMICOLON ? this.state = State.NUMERIC_CHARACTER_REFERENCE_END : (this._err(ERR.missingSemicolonAfterCharacterReference), this.state = State.NUMERIC_CHARACTER_REFERENCE_END, this._stateNumericCharacterReferenceEnd(cp));
      }
      _stateNumericCharacterReferenceEnd(cp) {
        if (this.charRefCode === CODE_POINTS.NULL)
          this._err(ERR.nullCharacterReference), this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;
        else if (this.charRefCode > 1114111)
          this._err(ERR.characterReferenceOutsideUnicodeRange), this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;
        else if (isSurrogate(this.charRefCode))
          this._err(ERR.surrogateCharacterReference), this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;
        else if (isUndefinedCodePoint(this.charRefCode))
          this._err(ERR.noncharacterCharacterReference);
        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === CODE_POINTS.CARRIAGE_RETURN) {
          this._err(ERR.controlCharacterReference);
          let replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);
          replacement !== void 0 && (this.charRefCode = replacement);
        }
        this._flushCodePointConsumedAsCharacterReference(this.charRefCode), this._reconsumeInState(this.returnState, cp);
      }
    };
  }
});

// node_modules/parse5/dist/parser/open-element-stack.js
var IMPLICIT_END_TAG_REQUIRED, IMPLICIT_END_TAG_REQUIRED_THOROUGHLY, SCOPING_ELEMENT_NS, NAMED_HEADERS, TABLE_ROW_CONTEXT, TABLE_BODY_CONTEXT, TABLE_CONTEXT, TABLE_CELLS, OpenElementStack, init_open_element_stack = __esm({
  "node_modules/parse5/dist/parser/open-element-stack.js"() {
    init_html3();
    IMPLICIT_END_TAG_REQUIRED = /* @__PURE__ */ new Set([TAG_ID.DD, TAG_ID.DT, TAG_ID.LI, TAG_ID.OPTGROUP, TAG_ID.OPTION, TAG_ID.P, TAG_ID.RB, TAG_ID.RP, TAG_ID.RT, TAG_ID.RTC]), IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = /* @__PURE__ */ new Set([
      ...IMPLICIT_END_TAG_REQUIRED,
      TAG_ID.CAPTION,
      TAG_ID.COLGROUP,
      TAG_ID.TBODY,
      TAG_ID.TD,
      TAG_ID.TFOOT,
      TAG_ID.TH,
      TAG_ID.THEAD,
      TAG_ID.TR
    ]), SCOPING_ELEMENT_NS = /* @__PURE__ */ new Map([
      [TAG_ID.APPLET, NS.HTML],
      [TAG_ID.CAPTION, NS.HTML],
      [TAG_ID.HTML, NS.HTML],
      [TAG_ID.MARQUEE, NS.HTML],
      [TAG_ID.OBJECT, NS.HTML],
      [TAG_ID.TABLE, NS.HTML],
      [TAG_ID.TD, NS.HTML],
      [TAG_ID.TEMPLATE, NS.HTML],
      [TAG_ID.TH, NS.HTML],
      [TAG_ID.ANNOTATION_XML, NS.MATHML],
      [TAG_ID.MI, NS.MATHML],
      [TAG_ID.MN, NS.MATHML],
      [TAG_ID.MO, NS.MATHML],
      [TAG_ID.MS, NS.MATHML],
      [TAG_ID.MTEXT, NS.MATHML],
      [TAG_ID.DESC, NS.SVG],
      [TAG_ID.FOREIGN_OBJECT, NS.SVG],
      [TAG_ID.TITLE, NS.SVG]
    ]), NAMED_HEADERS = [TAG_ID.H1, TAG_ID.H2, TAG_ID.H3, TAG_ID.H4, TAG_ID.H5, TAG_ID.H6], TABLE_ROW_CONTEXT = [TAG_ID.TR, TAG_ID.TEMPLATE, TAG_ID.HTML], TABLE_BODY_CONTEXT = [TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TEMPLATE, TAG_ID.HTML], TABLE_CONTEXT = [TAG_ID.TABLE, TAG_ID.TEMPLATE, TAG_ID.HTML], TABLE_CELLS = [TAG_ID.TD, TAG_ID.TH], OpenElementStack = class {
      get currentTmplContentOrNode() {
        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;
      }
      constructor(document4, treeAdapter, handler) {
        this.treeAdapter = treeAdapter, this.handler = handler, this.items = [], this.tagIDs = [], this.stackTop = -1, this.tmplCount = 0, this.currentTagId = TAG_ID.UNKNOWN, this.current = document4;
      }
      _indexOf(element5) {
        return this.items.lastIndexOf(element5, this.stackTop);
      }
      _isInTemplate() {
        return this.currentTagId === TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
      }
      _updateCurrentElement() {
        this.current = this.items[this.stackTop], this.currentTagId = this.tagIDs[this.stackTop];
      }
      push(element5, tagID) {
        this.stackTop++, this.items[this.stackTop] = element5, this.current = element5, this.tagIDs[this.stackTop] = tagID, this.currentTagId = tagID, this._isInTemplate() && this.tmplCount++, this.handler.onItemPush(element5, tagID, !0);
      }
      pop() {
        let popped = this.current;
        this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(popped, !0);
      }
      replace(oldElement, newElement) {
        let idx = this._indexOf(oldElement);
        this.items[idx] = newElement, idx === this.stackTop && (this.current = newElement);
      }
      insertAfter(referenceElement, newElement, newElementID) {
        let insertionIdx = this._indexOf(referenceElement) + 1;
        this.items.splice(insertionIdx, 0, newElement), this.tagIDs.splice(insertionIdx, 0, newElementID), this.stackTop++, insertionIdx === this.stackTop && this._updateCurrentElement(), this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);
      }
      popUntilTagNamePopped(tagName) {
        let targetIdx = this.stackTop + 1;
        do
          targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);
        while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);
        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);
      }
      shortenToLength(idx) {
        for (; this.stackTop >= idx; ) {
          let popped = this.current;
          this.tmplCount > 0 && this._isInTemplate() && (this.tmplCount -= 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(popped, this.stackTop < idx);
        }
      }
      popUntilElementPopped(element5) {
        let idx = this._indexOf(element5);
        this.shortenToLength(idx < 0 ? 0 : idx);
      }
      popUntilPopped(tagNames, targetNS) {
        let idx = this._indexOfTagNames(tagNames, targetNS);
        this.shortenToLength(idx < 0 ? 0 : idx);
      }
      popUntilNumberedHeaderPopped() {
        this.popUntilPopped(NAMED_HEADERS, NS.HTML);
      }
      popUntilTableCellPopped() {
        this.popUntilPopped(TABLE_CELLS, NS.HTML);
      }
      popAllUpToHtmlElement() {
        this.tmplCount = 0, this.shortenToLength(1);
      }
      _indexOfTagNames(tagNames, namespace) {
        for (let i = this.stackTop; i >= 0; i--)
          if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace)
            return i;
        return -1;
      }
      clearBackTo(tagNames, targetNS) {
        let idx = this._indexOfTagNames(tagNames, targetNS);
        this.shortenToLength(idx + 1);
      }
      clearBackToTableContext() {
        this.clearBackTo(TABLE_CONTEXT, NS.HTML);
      }
      clearBackToTableBodyContext() {
        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);
      }
      clearBackToTableRowContext() {
        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);
      }
      remove(element5) {
        let idx = this._indexOf(element5);
        idx >= 0 && (idx === this.stackTop ? this.pop() : (this.items.splice(idx, 1), this.tagIDs.splice(idx, 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(element5, !1)));
      }
      tryPeekProperlyNestedBodyElement() {
        return this.stackTop >= 1 && this.tagIDs[1] === TAG_ID.BODY ? this.items[1] : null;
      }
      contains(element5) {
        return this._indexOf(element5) > -1;
      }
      getCommonAncestor(element5) {
        let elementIdx = this._indexOf(element5) - 1;
        return elementIdx >= 0 ? this.items[elementIdx] : null;
      }
      isRootHtmlElementCurrent() {
        return this.stackTop === 0 && this.tagIDs[0] === TAG_ID.HTML;
      }
      hasInScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.tagIDs[i], ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS.HTML)
            return !0;
          if (SCOPING_ELEMENT_NS.get(tn) === ns)
            return !1;
        }
        return !0;
      }
      hasNumberedHeaderInScope() {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.tagIDs[i], ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (isNumberedHeader(tn) && ns === NS.HTML)
            return !0;
          if (SCOPING_ELEMENT_NS.get(tn) === ns)
            return !1;
        }
        return !0;
      }
      hasInListItemScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.tagIDs[i], ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS.HTML)
            return !0;
          if ((tn === TAG_ID.UL || tn === TAG_ID.OL) && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns)
            return !1;
        }
        return !0;
      }
      hasInButtonScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.tagIDs[i], ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS.HTML)
            return !0;
          if (tn === TAG_ID.BUTTON && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns)
            return !1;
        }
        return !0;
      }
      hasInTableScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.tagIDs[i];
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS.HTML) {
            if (tn === tagName)
              return !0;
            if (tn === TAG_ID.TABLE || tn === TAG_ID.TEMPLATE || tn === TAG_ID.HTML)
              return !1;
          }
        }
        return !0;
      }
      hasTableBodyContextInTableScope() {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.tagIDs[i];
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS.HTML) {
            if (tn === TAG_ID.TBODY || tn === TAG_ID.THEAD || tn === TAG_ID.TFOOT)
              return !0;
            if (tn === TAG_ID.TABLE || tn === TAG_ID.HTML)
              return !1;
          }
        }
        return !0;
      }
      hasInSelectScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.tagIDs[i];
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS.HTML) {
            if (tn === tagName)
              return !0;
            if (tn !== TAG_ID.OPTION && tn !== TAG_ID.OPTGROUP)
              return !1;
          }
        }
        return !0;
      }
      generateImpliedEndTags() {
        for (; IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId); )
          this.pop();
      }
      generateImpliedEndTagsThoroughly() {
        for (; IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId); )
          this.pop();
      }
      generateImpliedEndTagsWithExclusion(exclusionId) {
        for (; this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId); )
          this.pop();
      }
    };
  }
});

// node_modules/parse5/dist/parser/formatting-element-list.js
var EntryType, MARKER, FormattingElementList, init_formatting_element_list = __esm({
  "node_modules/parse5/dist/parser/formatting-element-list.js"() {
    (function(EntryType2) {
      EntryType2[EntryType2.Marker = 0] = "Marker", EntryType2[EntryType2.Element = 1] = "Element";
    })(EntryType = EntryType || (EntryType = {}));
    MARKER = { type: EntryType.Marker }, FormattingElementList = class {
      constructor(treeAdapter) {
        this.treeAdapter = treeAdapter, this.entries = [], this.bookmark = null;
      }
      _getNoahArkConditionCandidates(newElement, neAttrs) {
        let candidates = [], neAttrsLength = neAttrs.length, neTagName = this.treeAdapter.getTagName(newElement), neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);
        for (let i = 0; i < this.entries.length; i++) {
          let entry2 = this.entries[i];
          if (entry2.type === EntryType.Marker)
            break;
          let { element: element5 } = entry2;
          if (this.treeAdapter.getTagName(element5) === neTagName && this.treeAdapter.getNamespaceURI(element5) === neNamespaceURI) {
            let elementAttrs = this.treeAdapter.getAttrList(element5);
            elementAttrs.length === neAttrsLength && candidates.push({ idx: i, attrs: elementAttrs });
          }
        }
        return candidates;
      }
      _ensureNoahArkCondition(newElement) {
        if (this.entries.length < 3)
          return;
        let neAttrs = this.treeAdapter.getAttrList(newElement), candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);
        if (candidates.length < 3)
          return;
        let neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value])), validCandidates = 0;
        for (let i = 0; i < candidates.length; i++) {
          let candidate = candidates[i];
          candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value) && (validCandidates += 1, validCandidates >= 3 && this.entries.splice(candidate.idx, 1));
        }
      }
      insertMarker() {
        this.entries.unshift(MARKER);
      }
      pushElement(element5, token) {
        this._ensureNoahArkCondition(element5), this.entries.unshift({
          type: EntryType.Element,
          element: element5,
          token
        });
      }
      insertElementAfterBookmark(element5, token) {
        let bookmarkIdx = this.entries.indexOf(this.bookmark);
        this.entries.splice(bookmarkIdx, 0, {
          type: EntryType.Element,
          element: element5,
          token
        });
      }
      removeEntry(entry2) {
        let entryIndex = this.entries.indexOf(entry2);
        entryIndex >= 0 && this.entries.splice(entryIndex, 1);
      }
      clearToLastMarker() {
        let markerIdx = this.entries.indexOf(MARKER);
        markerIdx >= 0 ? this.entries.splice(0, markerIdx + 1) : this.entries.length = 0;
      }
      getElementEntryInScopeWithTagName(tagName) {
        let entry2 = this.entries.find((entry3) => entry3.type === EntryType.Marker || this.treeAdapter.getTagName(entry3.element) === tagName);
        return entry2 && entry2.type === EntryType.Element ? entry2 : null;
      }
      getElementEntry(element5) {
        return this.entries.find((entry2) => entry2.type === EntryType.Element && entry2.element === element5);
      }
    };
  }
});

// node_modules/parse5/dist/tree-adapters/default.js
function createTextNode(value) {
  return {
    nodeName: "#text",
    value,
    parentNode: null
  };
}
var defaultTreeAdapter, init_default = __esm({
  "node_modules/parse5/dist/tree-adapters/default.js"() {
    init_html3();
    defaultTreeAdapter = {
      createDocument() {
        return {
          nodeName: "#document",
          mode: DOCUMENT_MODE.NO_QUIRKS,
          childNodes: []
        };
      },
      createDocumentFragment() {
        return {
          nodeName: "#document-fragment",
          childNodes: []
        };
      },
      createElement(tagName, namespaceURI, attrs) {
        return {
          nodeName: tagName,
          tagName,
          attrs,
          namespaceURI,
          childNodes: [],
          parentNode: null
        };
      },
      createCommentNode(data) {
        return {
          nodeName: "#comment",
          data,
          parentNode: null
        };
      },
      appendChild(parentNode, newNode) {
        parentNode.childNodes.push(newNode), newNode.parentNode = parentNode;
      },
      insertBefore(parentNode, newNode, referenceNode) {
        let insertionIdx = parentNode.childNodes.indexOf(referenceNode);
        parentNode.childNodes.splice(insertionIdx, 0, newNode), newNode.parentNode = parentNode;
      },
      setTemplateContent(templateElement, contentElement) {
        templateElement.content = contentElement;
      },
      getTemplateContent(templateElement) {
        return templateElement.content;
      },
      setDocumentType(document4, name, publicId, systemId) {
        let doctypeNode = document4.childNodes.find((node2) => node2.nodeName === "#documentType");
        if (doctypeNode)
          doctypeNode.name = name, doctypeNode.publicId = publicId, doctypeNode.systemId = systemId;
        else {
          let node2 = {
            nodeName: "#documentType",
            name,
            publicId,
            systemId,
            parentNode: null
          };
          defaultTreeAdapter.appendChild(document4, node2);
        }
      },
      setDocumentMode(document4, mode) {
        document4.mode = mode;
      },
      getDocumentMode(document4) {
        return document4.mode;
      },
      detachNode(node2) {
        if (node2.parentNode) {
          let idx = node2.parentNode.childNodes.indexOf(node2);
          node2.parentNode.childNodes.splice(idx, 1), node2.parentNode = null;
        }
      },
      insertText(parentNode, text7) {
        if (parentNode.childNodes.length > 0) {
          let prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];
          if (defaultTreeAdapter.isTextNode(prevNode)) {
            prevNode.value += text7;
            return;
          }
        }
        defaultTreeAdapter.appendChild(parentNode, createTextNode(text7));
      },
      insertTextBefore(parentNode, text7, referenceNode) {
        let prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
        prevNode && defaultTreeAdapter.isTextNode(prevNode) ? prevNode.value += text7 : defaultTreeAdapter.insertBefore(parentNode, createTextNode(text7), referenceNode);
      },
      adoptAttributes(recipient, attrs) {
        let recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));
        for (let j = 0; j < attrs.length; j++)
          recipientAttrsMap.has(attrs[j].name) || recipient.attrs.push(attrs[j]);
      },
      getFirstChild(node2) {
        return node2.childNodes[0];
      },
      getChildNodes(node2) {
        return node2.childNodes;
      },
      getParentNode(node2) {
        return node2.parentNode;
      },
      getAttrList(element5) {
        return element5.attrs;
      },
      getTagName(element5) {
        return element5.tagName;
      },
      getNamespaceURI(element5) {
        return element5.namespaceURI;
      },
      getTextNodeContent(textNode) {
        return textNode.value;
      },
      getCommentNodeContent(commentNode) {
        return commentNode.data;
      },
      getDocumentTypeNodeName(doctypeNode) {
        return doctypeNode.name;
      },
      getDocumentTypeNodePublicId(doctypeNode) {
        return doctypeNode.publicId;
      },
      getDocumentTypeNodeSystemId(doctypeNode) {
        return doctypeNode.systemId;
      },
      isTextNode(node2) {
        return node2.nodeName === "#text";
      },
      isCommentNode(node2) {
        return node2.nodeName === "#comment";
      },
      isDocumentTypeNode(node2) {
        return node2.nodeName === "#documentType";
      },
      isElementNode(node2) {
        return Object.prototype.hasOwnProperty.call(node2, "tagName");
      },
      setNodeSourceCodeLocation(node2, location2) {
        node2.sourceCodeLocation = location2;
      },
      getNodeSourceCodeLocation(node2) {
        return node2.sourceCodeLocation;
      },
      updateNodeSourceCodeLocation(node2, endLocation) {
        node2.sourceCodeLocation = { ...node2.sourceCodeLocation, ...endLocation };
      }
    };
  }
});

// node_modules/parse5/dist/common/doctype.js
function hasPrefix(publicId, prefixes) {
  return prefixes.some((prefix) => publicId.startsWith(prefix));
}
function isConforming(token) {
  return token.name === VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID);
}
function getDocumentMode(token) {
  if (token.name !== VALID_DOCTYPE_NAME)
    return DOCUMENT_MODE.QUIRKS;
  let { systemId } = token;
  if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID)
    return DOCUMENT_MODE.QUIRKS;
  let { publicId } = token;
  if (publicId !== null) {
    if (publicId = publicId.toLowerCase(), QUIRKS_MODE_PUBLIC_IDS.has(publicId))
      return DOCUMENT_MODE.QUIRKS;
    let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;
    if (hasPrefix(publicId, prefixes))
      return DOCUMENT_MODE.QUIRKS;
    if (prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES, hasPrefix(publicId, prefixes))
      return DOCUMENT_MODE.LIMITED_QUIRKS;
  }
  return DOCUMENT_MODE.NO_QUIRKS;
}
var VALID_DOCTYPE_NAME, VALID_SYSTEM_ID, QUIRKS_MODE_SYSTEM_ID, QUIRKS_MODE_PUBLIC_ID_PREFIXES, QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES, QUIRKS_MODE_PUBLIC_IDS, LIMITED_QUIRKS_PUBLIC_ID_PREFIXES, LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES, init_doctype = __esm({
  "node_modules/parse5/dist/common/doctype.js"() {
    init_html3();
    VALID_DOCTYPE_NAME = "html", VALID_SYSTEM_ID = "about:legacy-compat", QUIRKS_MODE_SYSTEM_ID = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd", QUIRKS_MODE_PUBLIC_ID_PREFIXES = [
      "+//silmaril//dtd html pro v0r11 19970101//",
      "-//as//dtd html 3.0 aswedit + extensions//",
      "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
      "-//ietf//dtd html 2.0 level 1//",
      "-//ietf//dtd html 2.0 level 2//",
      "-//ietf//dtd html 2.0 strict level 1//",
      "-//ietf//dtd html 2.0 strict level 2//",
      "-//ietf//dtd html 2.0 strict//",
      "-//ietf//dtd html 2.0//",
      "-//ietf//dtd html 2.1e//",
      "-//ietf//dtd html 3.0//",
      "-//ietf//dtd html 3.2 final//",
      "-//ietf//dtd html 3.2//",
      "-//ietf//dtd html 3//",
      "-//ietf//dtd html level 0//",
      "-//ietf//dtd html level 1//",
      "-//ietf//dtd html level 2//",
      "-//ietf//dtd html level 3//",
      "-//ietf//dtd html strict level 0//",
      "-//ietf//dtd html strict level 1//",
      "-//ietf//dtd html strict level 2//",
      "-//ietf//dtd html strict level 3//",
      "-//ietf//dtd html strict//",
      "-//ietf//dtd html//",
      "-//metrius//dtd metrius presentational//",
      "-//microsoft//dtd internet explorer 2.0 html strict//",
      "-//microsoft//dtd internet explorer 2.0 html//",
      "-//microsoft//dtd internet explorer 2.0 tables//",
      "-//microsoft//dtd internet explorer 3.0 html strict//",
      "-//microsoft//dtd internet explorer 3.0 html//",
      "-//microsoft//dtd internet explorer 3.0 tables//",
      "-//netscape comm. corp.//dtd html//",
      "-//netscape comm. corp.//dtd strict html//",
      "-//o'reilly and associates//dtd html 2.0//",
      "-//o'reilly and associates//dtd html extended 1.0//",
      "-//o'reilly and associates//dtd html extended relaxed 1.0//",
      "-//sq//dtd html 2.0 hotmetal + extensions//",
      "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
      "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
      "-//spyglass//dtd html 2.0 extended//",
      "-//sun microsystems corp.//dtd hotjava html//",
      "-//sun microsystems corp.//dtd hotjava strict html//",
      "-//w3c//dtd html 3 1995-03-24//",
      "-//w3c//dtd html 3.2 draft//",
      "-//w3c//dtd html 3.2 final//",
      "-//w3c//dtd html 3.2//",
      "-//w3c//dtd html 3.2s draft//",
      "-//w3c//dtd html 4.0 frameset//",
      "-//w3c//dtd html 4.0 transitional//",
      "-//w3c//dtd html experimental 19960712//",
      "-//w3c//dtd html experimental 970421//",
      "-//w3c//dtd w3 html//",
      "-//w3o//dtd w3 html 3.0//",
      "-//webtechs//dtd mozilla html 2.0//",
      "-//webtechs//dtd mozilla html//"
    ], QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [
      ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,
      "-//w3c//dtd html 4.01 frameset//",
      "-//w3c//dtd html 4.01 transitional//"
    ], QUIRKS_MODE_PUBLIC_IDS = /* @__PURE__ */ new Set([
      "-//w3o//dtd w3 html strict 3.0//en//",
      "-/w3c/dtd html 4.0 transitional/en",
      "html"
    ]), LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"], LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [
      ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,
      "-//w3c//dtd html 4.01 frameset//",
      "-//w3c//dtd html 4.01 transitional//"
    ];
  }
});

// node_modules/parse5/dist/common/foreign-content.js
var foreign_content_exports = {};
__export(foreign_content_exports, {
  SVG_TAG_NAMES_ADJUSTMENT_MAP: () => SVG_TAG_NAMES_ADJUSTMENT_MAP,
  adjustTokenMathMLAttrs: () => adjustTokenMathMLAttrs,
  adjustTokenSVGAttrs: () => adjustTokenSVGAttrs,
  adjustTokenSVGTagName: () => adjustTokenSVGTagName,
  adjustTokenXMLAttrs: () => adjustTokenXMLAttrs,
  causesExit: () => causesExit,
  isIntegrationPoint: () => isIntegrationPoint
});
function causesExit(startTagToken2) {
  let tn = startTagToken2.tagID;
  return tn === TAG_ID.FONT && startTagToken2.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE) || EXITS_FOREIGN_CONTENT.has(tn);
}
function adjustTokenMathMLAttrs(token) {
  for (let i = 0; i < token.attrs.length; i++)
    if (token.attrs[i].name === DEFINITION_URL_ATTR) {
      token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;
      break;
    }
}
function adjustTokenSVGAttrs(token) {
  for (let i = 0; i < token.attrs.length; i++) {
    let adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);
    adjustedAttrName != null && (token.attrs[i].name = adjustedAttrName);
  }
}
function adjustTokenXMLAttrs(token) {
  for (let i = 0; i < token.attrs.length; i++) {
    let adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);
    adjustedAttrEntry && (token.attrs[i].prefix = adjustedAttrEntry.prefix, token.attrs[i].name = adjustedAttrEntry.name, token.attrs[i].namespace = adjustedAttrEntry.namespace);
  }
}
function adjustTokenSVGTagName(token) {
  let adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);
  adjustedTagName != null && (token.tagName = adjustedTagName, token.tagID = getTagID(token.tagName));
}
function isMathMLTextIntegrationPoint(tn, ns) {
  return ns === NS.MATHML && (tn === TAG_ID.MI || tn === TAG_ID.MO || tn === TAG_ID.MN || tn === TAG_ID.MS || tn === TAG_ID.MTEXT);
}
function isHtmlIntegrationPoint(tn, ns, attrs) {
  if (ns === NS.MATHML && tn === TAG_ID.ANNOTATION_XML) {
    for (let i = 0; i < attrs.length; i++)
      if (attrs[i].name === ATTRS.ENCODING) {
        let value = attrs[i].value.toLowerCase();
        return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
      }
  }
  return ns === NS.SVG && (tn === TAG_ID.FOREIGN_OBJECT || tn === TAG_ID.DESC || tn === TAG_ID.TITLE);
}
function isIntegrationPoint(tn, ns, attrs, foreignNS) {
  return (!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs) || (!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns);
}
var MIME_TYPES, DEFINITION_URL_ATTR, ADJUSTED_DEFINITION_URL_ATTR, SVG_ATTRS_ADJUSTMENT_MAP, XML_ATTRS_ADJUSTMENT_MAP, SVG_TAG_NAMES_ADJUSTMENT_MAP, EXITS_FOREIGN_CONTENT, init_foreign_content = __esm({
  "node_modules/parse5/dist/common/foreign-content.js"() {
    init_html3();
    MIME_TYPES = {
      TEXT_HTML: "text/html",
      APPLICATION_XML: "application/xhtml+xml"
    }, DEFINITION_URL_ATTR = "definitionurl", ADJUSTED_DEFINITION_URL_ATTR = "definitionURL", SVG_ATTRS_ADJUSTMENT_MAP = new Map([
      "attributeName",
      "attributeType",
      "baseFrequency",
      "baseProfile",
      "calcMode",
      "clipPathUnits",
      "diffuseConstant",
      "edgeMode",
      "filterUnits",
      "glyphRef",
      "gradientTransform",
      "gradientUnits",
      "kernelMatrix",
      "kernelUnitLength",
      "keyPoints",
      "keySplines",
      "keyTimes",
      "lengthAdjust",
      "limitingConeAngle",
      "markerHeight",
      "markerUnits",
      "markerWidth",
      "maskContentUnits",
      "maskUnits",
      "numOctaves",
      "pathLength",
      "patternContentUnits",
      "patternTransform",
      "patternUnits",
      "pointsAtX",
      "pointsAtY",
      "pointsAtZ",
      "preserveAlpha",
      "preserveAspectRatio",
      "primitiveUnits",
      "refX",
      "refY",
      "repeatCount",
      "repeatDur",
      "requiredExtensions",
      "requiredFeatures",
      "specularConstant",
      "specularExponent",
      "spreadMethod",
      "startOffset",
      "stdDeviation",
      "stitchTiles",
      "surfaceScale",
      "systemLanguage",
      "tableValues",
      "targetX",
      "targetY",
      "textLength",
      "viewBox",
      "viewTarget",
      "xChannelSelector",
      "yChannelSelector",
      "zoomAndPan"
    ].map((attr) => [attr.toLowerCase(), attr])), XML_ATTRS_ADJUSTMENT_MAP = /* @__PURE__ */ new Map([
      ["xlink:actuate", { prefix: "xlink", name: "actuate", namespace: NS.XLINK }],
      ["xlink:arcrole", { prefix: "xlink", name: "arcrole", namespace: NS.XLINK }],
      ["xlink:href", { prefix: "xlink", name: "href", namespace: NS.XLINK }],
      ["xlink:role", { prefix: "xlink", name: "role", namespace: NS.XLINK }],
      ["xlink:show", { prefix: "xlink", name: "show", namespace: NS.XLINK }],
      ["xlink:title", { prefix: "xlink", name: "title", namespace: NS.XLINK }],
      ["xlink:type", { prefix: "xlink", name: "type", namespace: NS.XLINK }],
      ["xml:base", { prefix: "xml", name: "base", namespace: NS.XML }],
      ["xml:lang", { prefix: "xml", name: "lang", namespace: NS.XML }],
      ["xml:space", { prefix: "xml", name: "space", namespace: NS.XML }],
      ["xmlns", { prefix: "", name: "xmlns", namespace: NS.XMLNS }],
      ["xmlns:xlink", { prefix: "xmlns", name: "xlink", namespace: NS.XMLNS }]
    ]), SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([
      "altGlyph",
      "altGlyphDef",
      "altGlyphItem",
      "animateColor",
      "animateMotion",
      "animateTransform",
      "clipPath",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDistantLight",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussianBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "foreignObject",
      "glyphRef",
      "linearGradient",
      "radialGradient",
      "textPath"
    ].map((tn) => [tn.toLowerCase(), tn])), EXITS_FOREIGN_CONTENT = /* @__PURE__ */ new Set([
      TAG_ID.B,
      TAG_ID.BIG,
      TAG_ID.BLOCKQUOTE,
      TAG_ID.BODY,
      TAG_ID.BR,
      TAG_ID.CENTER,
      TAG_ID.CODE,
      TAG_ID.DD,
      TAG_ID.DIV,
      TAG_ID.DL,
      TAG_ID.DT,
      TAG_ID.EM,
      TAG_ID.EMBED,
      TAG_ID.H1,
      TAG_ID.H2,
      TAG_ID.H3,
      TAG_ID.H4,
      TAG_ID.H5,
      TAG_ID.H6,
      TAG_ID.HEAD,
      TAG_ID.HR,
      TAG_ID.I,
      TAG_ID.IMG,
      TAG_ID.LI,
      TAG_ID.LISTING,
      TAG_ID.MENU,
      TAG_ID.META,
      TAG_ID.NOBR,
      TAG_ID.OL,
      TAG_ID.P,
      TAG_ID.PRE,
      TAG_ID.RUBY,
      TAG_ID.S,
      TAG_ID.SMALL,
      TAG_ID.SPAN,
      TAG_ID.STRONG,
      TAG_ID.STRIKE,
      TAG_ID.SUB,
      TAG_ID.SUP,
      TAG_ID.TABLE,
      TAG_ID.TT,
      TAG_ID.U,
      TAG_ID.UL,
      TAG_ID.VAR
    ]);
  }
});

// node_modules/parse5/dist/parser/index.js
function aaObtainFormattingElementEntry(p2, token) {
  let formattingElementEntry = p2.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);
  return formattingElementEntry ? p2.openElements.contains(formattingElementEntry.element) ? p2.openElements.hasInScope(token.tagID) || (formattingElementEntry = null) : (p2.activeFormattingElements.removeEntry(formattingElementEntry), formattingElementEntry = null) : genericEndTagInBody(p2, token), formattingElementEntry;
}
function aaObtainFurthestBlock(p2, formattingElementEntry) {
  let furthestBlock = null, idx = p2.openElements.stackTop;
  for (; idx >= 0; idx--) {
    let element5 = p2.openElements.items[idx];
    if (element5 === formattingElementEntry.element)
      break;
    p2._isSpecialElement(element5, p2.openElements.tagIDs[idx]) && (furthestBlock = element5);
  }
  return furthestBlock || (p2.openElements.shortenToLength(idx < 0 ? 0 : idx), p2.activeFormattingElements.removeEntry(formattingElementEntry)), furthestBlock;
}
function aaInnerLoop(p2, furthestBlock, formattingElement) {
  let lastElement = furthestBlock, nextElement = p2.openElements.getCommonAncestor(furthestBlock);
  for (let i = 0, element5 = nextElement; element5 !== formattingElement; i++, element5 = nextElement) {
    nextElement = p2.openElements.getCommonAncestor(element5);
    let elementEntry = p2.activeFormattingElements.getElementEntry(element5), counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;
    !elementEntry || counterOverflow ? (counterOverflow && p2.activeFormattingElements.removeEntry(elementEntry), p2.openElements.remove(element5)) : (element5 = aaRecreateElementFromEntry(p2, elementEntry), lastElement === furthestBlock && (p2.activeFormattingElements.bookmark = elementEntry), p2.treeAdapter.detachNode(lastElement), p2.treeAdapter.appendChild(element5, lastElement), lastElement = element5);
  }
  return lastElement;
}
function aaRecreateElementFromEntry(p2, elementEntry) {
  let ns = p2.treeAdapter.getNamespaceURI(elementEntry.element), newElement = p2.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);
  return p2.openElements.replace(elementEntry.element, newElement), elementEntry.element = newElement, newElement;
}
function aaInsertLastNodeInCommonAncestor(p2, commonAncestor, lastElement) {
  let tn = p2.treeAdapter.getTagName(commonAncestor), tid = getTagID(tn);
  if (p2._isElementCausesFosterParenting(tid))
    p2._fosterParentElement(lastElement);
  else {
    let ns = p2.treeAdapter.getNamespaceURI(commonAncestor);
    tid === TAG_ID.TEMPLATE && ns === NS.HTML && (commonAncestor = p2.treeAdapter.getTemplateContent(commonAncestor)), p2.treeAdapter.appendChild(commonAncestor, lastElement);
  }
}
function aaReplaceFormattingElement(p2, furthestBlock, formattingElementEntry) {
  let ns = p2.treeAdapter.getNamespaceURI(formattingElementEntry.element), { token } = formattingElementEntry, newElement = p2.treeAdapter.createElement(token.tagName, ns, token.attrs);
  p2._adoptNodes(furthestBlock, newElement), p2.treeAdapter.appendChild(furthestBlock, newElement), p2.activeFormattingElements.insertElementAfterBookmark(newElement, token), p2.activeFormattingElements.removeEntry(formattingElementEntry), p2.openElements.remove(formattingElementEntry.element), p2.openElements.insertAfter(furthestBlock, newElement, token.tagID);
}
function callAdoptionAgency(p2, token) {
  for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {
    let formattingElementEntry = aaObtainFormattingElementEntry(p2, token);
    if (!formattingElementEntry)
      break;
    let furthestBlock = aaObtainFurthestBlock(p2, formattingElementEntry);
    if (!furthestBlock)
      break;
    p2.activeFormattingElements.bookmark = formattingElementEntry;
    let lastElement = aaInnerLoop(p2, furthestBlock, formattingElementEntry.element), commonAncestor = p2.openElements.getCommonAncestor(formattingElementEntry.element);
    p2.treeAdapter.detachNode(lastElement), commonAncestor && aaInsertLastNodeInCommonAncestor(p2, commonAncestor, lastElement), aaReplaceFormattingElement(p2, furthestBlock, formattingElementEntry);
  }
}
function appendComment(p2, token) {
  p2._appendCommentNode(token, p2.openElements.currentTmplContentOrNode);
}
function appendCommentToRootHtmlElement(p2, token) {
  p2._appendCommentNode(token, p2.openElements.items[0]);
}
function appendCommentToDocument(p2, token) {
  p2._appendCommentNode(token, p2.document);
}
function stopParsing(p2, token) {
  if (p2.stopped = !0, token.location) {
    let target = p2.fragmentContext ? 0 : 2;
    for (let i = p2.openElements.stackTop; i >= target; i--)
      p2._setEndLocation(p2.openElements.items[i], token);
    if (!p2.fragmentContext && p2.openElements.stackTop >= 0) {
      let htmlElement = p2.openElements.items[0], htmlLocation = p2.treeAdapter.getNodeSourceCodeLocation(htmlElement);
      if (htmlLocation && !htmlLocation.endTag && (p2._setEndLocation(htmlElement, token), p2.openElements.stackTop >= 1)) {
        let bodyElement = p2.openElements.items[1], bodyLocation = p2.treeAdapter.getNodeSourceCodeLocation(bodyElement);
        bodyLocation && !bodyLocation.endTag && p2._setEndLocation(bodyElement, token);
      }
    }
  }
}
function doctypeInInitialMode(p2, token) {
  p2._setDocumentType(token);
  let mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : getDocumentMode(token);
  isConforming(token) || p2._err(token, ERR.nonConformingDoctype), p2.treeAdapter.setDocumentMode(p2.document, mode), p2.insertionMode = InsertionMode.BEFORE_HTML;
}
function tokenInInitialMode(p2, token) {
  p2._err(token, ERR.missingDoctype, !0), p2.treeAdapter.setDocumentMode(p2.document, DOCUMENT_MODE.QUIRKS), p2.insertionMode = InsertionMode.BEFORE_HTML, p2._processToken(token);
}
function startTagBeforeHtml(p2, token) {
  token.tagID === TAG_ID.HTML ? (p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.BEFORE_HEAD) : tokenBeforeHtml(p2, token);
}
function endTagBeforeHtml(p2, token) {
  let tn = token.tagID;
  (tn === TAG_ID.HTML || tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.BR) && tokenBeforeHtml(p2, token);
}
function tokenBeforeHtml(p2, token) {
  p2._insertFakeRootElement(), p2.insertionMode = InsertionMode.BEFORE_HEAD, p2._processToken(token);
}
function startTagBeforeHead(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.HEAD: {
      p2._insertElement(token, NS.HTML), p2.headElement = p2.openElements.current, p2.insertionMode = InsertionMode.IN_HEAD;
      break;
    }
    default:
      tokenBeforeHead(p2, token);
  }
}
function endTagBeforeHead(p2, token) {
  let tn = token.tagID;
  tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.HTML || tn === TAG_ID.BR ? tokenBeforeHead(p2, token) : p2._err(token, ERR.endTagWithoutMatchingOpenElement);
}
function tokenBeforeHead(p2, token) {
  p2._insertFakeElement(TAG_NAMES.HEAD, TAG_ID.HEAD), p2.headElement = p2.openElements.current, p2.insertionMode = InsertionMode.IN_HEAD, p2._processToken(token);
}
function startTagInHead(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.BASE:
    case TAG_ID.BASEFONT:
    case TAG_ID.BGSOUND:
    case TAG_ID.LINK:
    case TAG_ID.META: {
      p2._appendElement(token, NS.HTML), token.ackSelfClosing = !0;
      break;
    }
    case TAG_ID.TITLE: {
      p2._switchToTextParsing(token, TokenizerMode.RCDATA);
      break;
    }
    case TAG_ID.NOSCRIPT: {
      p2.options.scriptingEnabled ? p2._switchToTextParsing(token, TokenizerMode.RAWTEXT) : (p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT);
      break;
    }
    case TAG_ID.NOFRAMES:
    case TAG_ID.STYLE: {
      p2._switchToTextParsing(token, TokenizerMode.RAWTEXT);
      break;
    }
    case TAG_ID.SCRIPT: {
      p2._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);
      break;
    }
    case TAG_ID.TEMPLATE: {
      p2._insertTemplate(token), p2.activeFormattingElements.insertMarker(), p2.framesetOk = !1, p2.insertionMode = InsertionMode.IN_TEMPLATE, p2.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);
      break;
    }
    case TAG_ID.HEAD: {
      p2._err(token, ERR.misplacedStartTagForHeadElement);
      break;
    }
    default:
      tokenInHead(p2, token);
  }
}
function endTagInHead(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HEAD: {
      p2.openElements.pop(), p2.insertionMode = InsertionMode.AFTER_HEAD;
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.BR:
    case TAG_ID.HTML: {
      tokenInHead(p2, token);
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p2, token);
      break;
    }
    default:
      p2._err(token, ERR.endTagWithoutMatchingOpenElement);
  }
}
function templateEndTagInHead(p2, token) {
  p2.openElements.tmplCount > 0 ? (p2.openElements.generateImpliedEndTagsThoroughly(), p2.openElements.currentTagId !== TAG_ID.TEMPLATE && p2._err(token, ERR.closingOfElementWithOpenChildElements), p2.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE), p2.activeFormattingElements.clearToLastMarker(), p2.tmplInsertionModeStack.shift(), p2._resetInsertionMode()) : p2._err(token, ERR.endTagWithoutMatchingOpenElement);
}
function tokenInHead(p2, token) {
  p2.openElements.pop(), p2.insertionMode = InsertionMode.AFTER_HEAD, p2._processToken(token);
}
function startTagInHeadNoScript(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.BASEFONT:
    case TAG_ID.BGSOUND:
    case TAG_ID.HEAD:
    case TAG_ID.LINK:
    case TAG_ID.META:
    case TAG_ID.NOFRAMES:
    case TAG_ID.STYLE: {
      startTagInHead(p2, token);
      break;
    }
    case TAG_ID.NOSCRIPT: {
      p2._err(token, ERR.nestedNoscriptInHead);
      break;
    }
    default:
      tokenInHeadNoScript(p2, token);
  }
}
function endTagInHeadNoScript(p2, token) {
  switch (token.tagID) {
    case TAG_ID.NOSCRIPT: {
      p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_HEAD;
      break;
    }
    case TAG_ID.BR: {
      tokenInHeadNoScript(p2, token);
      break;
    }
    default:
      p2._err(token, ERR.endTagWithoutMatchingOpenElement);
  }
}
function tokenInHeadNoScript(p2, token) {
  let errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;
  p2._err(token, errCode), p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_HEAD, p2._processToken(token);
}
function startTagAfterHead(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.BODY: {
      p2._insertElement(token, NS.HTML), p2.framesetOk = !1, p2.insertionMode = InsertionMode.IN_BODY;
      break;
    }
    case TAG_ID.FRAMESET: {
      p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.IN_FRAMESET;
      break;
    }
    case TAG_ID.BASE:
    case TAG_ID.BASEFONT:
    case TAG_ID.BGSOUND:
    case TAG_ID.LINK:
    case TAG_ID.META:
    case TAG_ID.NOFRAMES:
    case TAG_ID.SCRIPT:
    case TAG_ID.STYLE:
    case TAG_ID.TEMPLATE:
    case TAG_ID.TITLE: {
      p2._err(token, ERR.abandonedHeadElementChild), p2.openElements.push(p2.headElement, TAG_ID.HEAD), startTagInHead(p2, token), p2.openElements.remove(p2.headElement);
      break;
    }
    case TAG_ID.HEAD: {
      p2._err(token, ERR.misplacedStartTagForHeadElement);
      break;
    }
    default:
      tokenAfterHead(p2, token);
  }
}
function endTagAfterHead(p2, token) {
  switch (token.tagID) {
    case TAG_ID.BODY:
    case TAG_ID.HTML:
    case TAG_ID.BR: {
      tokenAfterHead(p2, token);
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p2, token);
      break;
    }
    default:
      p2._err(token, ERR.endTagWithoutMatchingOpenElement);
  }
}
function tokenAfterHead(p2, token) {
  p2._insertFakeElement(TAG_NAMES.BODY, TAG_ID.BODY), p2.insertionMode = InsertionMode.IN_BODY, modeInBody(p2, token);
}
function modeInBody(p2, token) {
  switch (token.type) {
    case TokenType.CHARACTER: {
      characterInBody(p2, token);
      break;
    }
    case TokenType.WHITESPACE_CHARACTER: {
      whitespaceCharacterInBody(p2, token);
      break;
    }
    case TokenType.COMMENT: {
      appendComment(p2, token);
      break;
    }
    case TokenType.START_TAG: {
      startTagInBody(p2, token);
      break;
    }
    case TokenType.END_TAG: {
      endTagInBody(p2, token);
      break;
    }
    case TokenType.EOF: {
      eofInBody(p2, token);
      break;
    }
    default:
  }
}
function whitespaceCharacterInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2._insertCharacters(token);
}
function characterInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2._insertCharacters(token), p2.framesetOk = !1;
}
function htmlStartTagInBody(p2, token) {
  p2.openElements.tmplCount === 0 && p2.treeAdapter.adoptAttributes(p2.openElements.items[0], token.attrs);
}
function bodyStartTagInBody(p2, token) {
  let bodyElement = p2.openElements.tryPeekProperlyNestedBodyElement();
  bodyElement && p2.openElements.tmplCount === 0 && (p2.framesetOk = !1, p2.treeAdapter.adoptAttributes(bodyElement, token.attrs));
}
function framesetStartTagInBody(p2, token) {
  let bodyElement = p2.openElements.tryPeekProperlyNestedBodyElement();
  p2.framesetOk && bodyElement && (p2.treeAdapter.detachNode(bodyElement), p2.openElements.popAllUpToHtmlElement(), p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.IN_FRAMESET);
}
function addressStartTagInBody(p2, token) {
  p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), p2._insertElement(token, NS.HTML);
}
function numberedHeaderStartTagInBody(p2, token) {
  p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), isNumberedHeader(p2.openElements.currentTagId) && p2.openElements.pop(), p2._insertElement(token, NS.HTML);
}
function preStartTagInBody(p2, token) {
  p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), p2._insertElement(token, NS.HTML), p2.skipNextNewLine = !0, p2.framesetOk = !1;
}
function formStartTagInBody(p2, token) {
  let inTemplate = p2.openElements.tmplCount > 0;
  (!p2.formElement || inTemplate) && (p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), p2._insertElement(token, NS.HTML), inTemplate || (p2.formElement = p2.openElements.current));
}
function listItemStartTagInBody(p2, token) {
  p2.framesetOk = !1;
  let tn = token.tagID;
  for (let i = p2.openElements.stackTop; i >= 0; i--) {
    let elementId = p2.openElements.tagIDs[i];
    if (tn === TAG_ID.LI && elementId === TAG_ID.LI || (tn === TAG_ID.DD || tn === TAG_ID.DT) && (elementId === TAG_ID.DD || elementId === TAG_ID.DT)) {
      p2.openElements.generateImpliedEndTagsWithExclusion(elementId), p2.openElements.popUntilTagNamePopped(elementId);
      break;
    }
    if (elementId !== TAG_ID.ADDRESS && elementId !== TAG_ID.DIV && elementId !== TAG_ID.P && p2._isSpecialElement(p2.openElements.items[i], elementId))
      break;
  }
  p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), p2._insertElement(token, NS.HTML);
}
function plaintextStartTagInBody(p2, token) {
  p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), p2._insertElement(token, NS.HTML), p2.tokenizer.state = TokenizerMode.PLAINTEXT;
}
function buttonStartTagInBody(p2, token) {
  p2.openElements.hasInScope(TAG_ID.BUTTON) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(TAG_ID.BUTTON)), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS.HTML), p2.framesetOk = !1;
}
function aStartTagInBody(p2, token) {
  let activeElementEntry = p2.activeFormattingElements.getElementEntryInScopeWithTagName(TAG_NAMES.A);
  activeElementEntry && (callAdoptionAgency(p2, token), p2.openElements.remove(activeElementEntry.element), p2.activeFormattingElements.removeEntry(activeElementEntry)), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
}
function bStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
}
function nobrStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2.openElements.hasInScope(TAG_ID.NOBR) && (callAdoptionAgency(p2, token), p2._reconstructActiveFormattingElements()), p2._insertElement(token, NS.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
}
function appletStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS.HTML), p2.activeFormattingElements.insertMarker(), p2.framesetOk = !1;
}
function tableStartTagInBody(p2, token) {
  p2.treeAdapter.getDocumentMode(p2.document) !== DOCUMENT_MODE.QUIRKS && p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), p2._insertElement(token, NS.HTML), p2.framesetOk = !1, p2.insertionMode = InsertionMode.IN_TABLE;
}
function areaStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2._appendElement(token, NS.HTML), p2.framesetOk = !1, token.ackSelfClosing = !0;
}
function isHiddenInput(token) {
  let inputType = getTokenAttr(token, ATTRS.TYPE);
  return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;
}
function inputStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2._appendElement(token, NS.HTML), isHiddenInput(token) || (p2.framesetOk = !1), token.ackSelfClosing = !0;
}
function paramStartTagInBody(p2, token) {
  p2._appendElement(token, NS.HTML), token.ackSelfClosing = !0;
}
function hrStartTagInBody(p2, token) {
  p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), p2._appendElement(token, NS.HTML), p2.framesetOk = !1, token.ackSelfClosing = !0;
}
function imageStartTagInBody(p2, token) {
  token.tagName = TAG_NAMES.IMG, token.tagID = TAG_ID.IMG, areaStartTagInBody(p2, token);
}
function textareaStartTagInBody(p2, token) {
  p2._insertElement(token, NS.HTML), p2.skipNextNewLine = !0, p2.tokenizer.state = TokenizerMode.RCDATA, p2.originalInsertionMode = p2.insertionMode, p2.framesetOk = !1, p2.insertionMode = InsertionMode.TEXT;
}
function xmpStartTagInBody(p2, token) {
  p2.openElements.hasInButtonScope(TAG_ID.P) && p2._closePElement(), p2._reconstructActiveFormattingElements(), p2.framesetOk = !1, p2._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
function iframeStartTagInBody(p2, token) {
  p2.framesetOk = !1, p2._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
function noembedStartTagInBody(p2, token) {
  p2._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
function selectStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS.HTML), p2.framesetOk = !1, p2.insertionMode = p2.insertionMode === InsertionMode.IN_TABLE || p2.insertionMode === InsertionMode.IN_CAPTION || p2.insertionMode === InsertionMode.IN_TABLE_BODY || p2.insertionMode === InsertionMode.IN_ROW || p2.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;
}
function optgroupStartTagInBody(p2, token) {
  p2.openElements.currentTagId === TAG_ID.OPTION && p2.openElements.pop(), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS.HTML);
}
function rbStartTagInBody(p2, token) {
  p2.openElements.hasInScope(TAG_ID.RUBY) && p2.openElements.generateImpliedEndTags(), p2._insertElement(token, NS.HTML);
}
function rtStartTagInBody(p2, token) {
  p2.openElements.hasInScope(TAG_ID.RUBY) && p2.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.RTC), p2._insertElement(token, NS.HTML);
}
function mathStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), adjustTokenMathMLAttrs(token), adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, NS.MATHML) : p2._insertElement(token, NS.MATHML), token.ackSelfClosing = !0;
}
function svgStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), adjustTokenSVGAttrs(token), adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, NS.SVG) : p2._insertElement(token, NS.SVG), token.ackSelfClosing = !0;
}
function genericStartTagInBody(p2, token) {
  p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS.HTML);
}
function startTagInBody(p2, token) {
  switch (token.tagID) {
    case TAG_ID.I:
    case TAG_ID.S:
    case TAG_ID.B:
    case TAG_ID.U:
    case TAG_ID.EM:
    case TAG_ID.TT:
    case TAG_ID.BIG:
    case TAG_ID.CODE:
    case TAG_ID.FONT:
    case TAG_ID.SMALL:
    case TAG_ID.STRIKE:
    case TAG_ID.STRONG: {
      bStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.A: {
      aStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.H1:
    case TAG_ID.H2:
    case TAG_ID.H3:
    case TAG_ID.H4:
    case TAG_ID.H5:
    case TAG_ID.H6: {
      numberedHeaderStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.P:
    case TAG_ID.DL:
    case TAG_ID.OL:
    case TAG_ID.UL:
    case TAG_ID.DIV:
    case TAG_ID.DIR:
    case TAG_ID.NAV:
    case TAG_ID.MAIN:
    case TAG_ID.MENU:
    case TAG_ID.ASIDE:
    case TAG_ID.CENTER:
    case TAG_ID.FIGURE:
    case TAG_ID.FOOTER:
    case TAG_ID.HEADER:
    case TAG_ID.HGROUP:
    case TAG_ID.DIALOG:
    case TAG_ID.DETAILS:
    case TAG_ID.ADDRESS:
    case TAG_ID.ARTICLE:
    case TAG_ID.SECTION:
    case TAG_ID.SUMMARY:
    case TAG_ID.FIELDSET:
    case TAG_ID.BLOCKQUOTE:
    case TAG_ID.FIGCAPTION: {
      addressStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.LI:
    case TAG_ID.DD:
    case TAG_ID.DT: {
      listItemStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.BR:
    case TAG_ID.IMG:
    case TAG_ID.WBR:
    case TAG_ID.AREA:
    case TAG_ID.EMBED:
    case TAG_ID.KEYGEN: {
      areaStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.HR: {
      hrStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.RB:
    case TAG_ID.RTC: {
      rbStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.RT:
    case TAG_ID.RP: {
      rtStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.PRE:
    case TAG_ID.LISTING: {
      preStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.XMP: {
      xmpStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.SVG: {
      svgStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.HTML: {
      htmlStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.BASE:
    case TAG_ID.LINK:
    case TAG_ID.META:
    case TAG_ID.STYLE:
    case TAG_ID.TITLE:
    case TAG_ID.SCRIPT:
    case TAG_ID.BGSOUND:
    case TAG_ID.BASEFONT:
    case TAG_ID.TEMPLATE: {
      startTagInHead(p2, token);
      break;
    }
    case TAG_ID.BODY: {
      bodyStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.FORM: {
      formStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.NOBR: {
      nobrStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.MATH: {
      mathStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.TABLE: {
      tableStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.INPUT: {
      inputStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.PARAM:
    case TAG_ID.TRACK:
    case TAG_ID.SOURCE: {
      paramStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.IMAGE: {
      imageStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.BUTTON: {
      buttonStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.APPLET:
    case TAG_ID.OBJECT:
    case TAG_ID.MARQUEE: {
      appletStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.IFRAME: {
      iframeStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.SELECT: {
      selectStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.OPTION:
    case TAG_ID.OPTGROUP: {
      optgroupStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.NOEMBED: {
      noembedStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.FRAMESET: {
      framesetStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.TEXTAREA: {
      textareaStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.NOSCRIPT: {
      p2.options.scriptingEnabled ? noembedStartTagInBody(p2, token) : genericStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.PLAINTEXT: {
      plaintextStartTagInBody(p2, token);
      break;
    }
    case TAG_ID.COL:
    case TAG_ID.TH:
    case TAG_ID.TD:
    case TAG_ID.TR:
    case TAG_ID.HEAD:
    case TAG_ID.FRAME:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD:
    case TAG_ID.CAPTION:
    case TAG_ID.COLGROUP:
      break;
    default:
      genericStartTagInBody(p2, token);
  }
}
function bodyEndTagInBody(p2, token) {
  if (p2.openElements.hasInScope(TAG_ID.BODY) && (p2.insertionMode = InsertionMode.AFTER_BODY, p2.options.sourceCodeLocationInfo)) {
    let bodyElement = p2.openElements.tryPeekProperlyNestedBodyElement();
    bodyElement && p2._setEndLocation(bodyElement, token);
  }
}
function htmlEndTagInBody(p2, token) {
  p2.openElements.hasInScope(TAG_ID.BODY) && (p2.insertionMode = InsertionMode.AFTER_BODY, endTagAfterBody(p2, token));
}
function addressEndTagInBody(p2, token) {
  let tn = token.tagID;
  p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn));
}
function formEndTagInBody(p2) {
  let inTemplate = p2.openElements.tmplCount > 0, { formElement } = p2;
  inTemplate || (p2.formElement = null), (formElement || inTemplate) && p2.openElements.hasInScope(TAG_ID.FORM) && (p2.openElements.generateImpliedEndTags(), inTemplate ? p2.openElements.popUntilTagNamePopped(TAG_ID.FORM) : formElement && p2.openElements.remove(formElement));
}
function pEndTagInBody(p2) {
  p2.openElements.hasInButtonScope(TAG_ID.P) || p2._insertFakeElement(TAG_NAMES.P, TAG_ID.P), p2._closePElement();
}
function liEndTagInBody(p2) {
  p2.openElements.hasInListItemScope(TAG_ID.LI) && (p2.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.LI), p2.openElements.popUntilTagNamePopped(TAG_ID.LI));
}
function ddEndTagInBody(p2, token) {
  let tn = token.tagID;
  p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTagsWithExclusion(tn), p2.openElements.popUntilTagNamePopped(tn));
}
function numberedHeaderEndTagInBody(p2) {
  p2.openElements.hasNumberedHeaderInScope() && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilNumberedHeaderPopped());
}
function appletEndTagInBody(p2, token) {
  let tn = token.tagID;
  p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn), p2.activeFormattingElements.clearToLastMarker());
}
function brEndTagInBody(p2) {
  p2._reconstructActiveFormattingElements(), p2._insertFakeElement(TAG_NAMES.BR, TAG_ID.BR), p2.openElements.pop(), p2.framesetOk = !1;
}
function genericEndTagInBody(p2, token) {
  let tn = token.tagName, tid = token.tagID;
  for (let i = p2.openElements.stackTop; i > 0; i--) {
    let element5 = p2.openElements.items[i], elementId = p2.openElements.tagIDs[i];
    if (tid === elementId && (tid !== TAG_ID.UNKNOWN || p2.treeAdapter.getTagName(element5) === tn)) {
      p2.openElements.generateImpliedEndTagsWithExclusion(tid), p2.openElements.stackTop >= i && p2.openElements.shortenToLength(i);
      break;
    }
    if (p2._isSpecialElement(element5, elementId))
      break;
  }
}
function endTagInBody(p2, token) {
  switch (token.tagID) {
    case TAG_ID.A:
    case TAG_ID.B:
    case TAG_ID.I:
    case TAG_ID.S:
    case TAG_ID.U:
    case TAG_ID.EM:
    case TAG_ID.TT:
    case TAG_ID.BIG:
    case TAG_ID.CODE:
    case TAG_ID.FONT:
    case TAG_ID.NOBR:
    case TAG_ID.SMALL:
    case TAG_ID.STRIKE:
    case TAG_ID.STRONG: {
      callAdoptionAgency(p2, token);
      break;
    }
    case TAG_ID.P: {
      pEndTagInBody(p2);
      break;
    }
    case TAG_ID.DL:
    case TAG_ID.UL:
    case TAG_ID.OL:
    case TAG_ID.DIR:
    case TAG_ID.DIV:
    case TAG_ID.NAV:
    case TAG_ID.PRE:
    case TAG_ID.MAIN:
    case TAG_ID.MENU:
    case TAG_ID.ASIDE:
    case TAG_ID.BUTTON:
    case TAG_ID.CENTER:
    case TAG_ID.FIGURE:
    case TAG_ID.FOOTER:
    case TAG_ID.HEADER:
    case TAG_ID.HGROUP:
    case TAG_ID.DIALOG:
    case TAG_ID.ADDRESS:
    case TAG_ID.ARTICLE:
    case TAG_ID.DETAILS:
    case TAG_ID.SECTION:
    case TAG_ID.SUMMARY:
    case TAG_ID.LISTING:
    case TAG_ID.FIELDSET:
    case TAG_ID.BLOCKQUOTE:
    case TAG_ID.FIGCAPTION: {
      addressEndTagInBody(p2, token);
      break;
    }
    case TAG_ID.LI: {
      liEndTagInBody(p2);
      break;
    }
    case TAG_ID.DD:
    case TAG_ID.DT: {
      ddEndTagInBody(p2, token);
      break;
    }
    case TAG_ID.H1:
    case TAG_ID.H2:
    case TAG_ID.H3:
    case TAG_ID.H4:
    case TAG_ID.H5:
    case TAG_ID.H6: {
      numberedHeaderEndTagInBody(p2);
      break;
    }
    case TAG_ID.BR: {
      brEndTagInBody(p2);
      break;
    }
    case TAG_ID.BODY: {
      bodyEndTagInBody(p2, token);
      break;
    }
    case TAG_ID.HTML: {
      htmlEndTagInBody(p2, token);
      break;
    }
    case TAG_ID.FORM: {
      formEndTagInBody(p2);
      break;
    }
    case TAG_ID.APPLET:
    case TAG_ID.OBJECT:
    case TAG_ID.MARQUEE: {
      appletEndTagInBody(p2, token);
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p2, token);
      break;
    }
    default:
      genericEndTagInBody(p2, token);
  }
}
function eofInBody(p2, token) {
  p2.tmplInsertionModeStack.length > 0 ? eofInTemplate(p2, token) : stopParsing(p2, token);
}
function endTagInText(p2, token) {
  var _a2;
  token.tagID === TAG_ID.SCRIPT && ((_a2 = p2.scriptHandler) === null || _a2 === void 0 || _a2.call(p2, p2.openElements.current)), p2.openElements.pop(), p2.insertionMode = p2.originalInsertionMode;
}
function eofInText(p2, token) {
  p2._err(token, ERR.eofInElementThatCanContainOnlyText), p2.openElements.pop(), p2.insertionMode = p2.originalInsertionMode, p2.onEof(token);
}
function characterInTable(p2, token) {
  if (TABLE_STRUCTURE_TAGS.has(p2.openElements.currentTagId))
    switch (p2.pendingCharacterTokens.length = 0, p2.hasNonWhitespacePendingCharacterToken = !1, p2.originalInsertionMode = p2.insertionMode, p2.insertionMode = InsertionMode.IN_TABLE_TEXT, token.type) {
      case TokenType.CHARACTER: {
        characterInTableText(p2, token);
        break;
      }
      case TokenType.WHITESPACE_CHARACTER: {
        whitespaceCharacterInTableText(p2, token);
        break;
      }
    }
  else
    tokenInTable(p2, token);
}
function captionStartTagInTable(p2, token) {
  p2.openElements.clearBackToTableContext(), p2.activeFormattingElements.insertMarker(), p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.IN_CAPTION;
}
function colgroupStartTagInTable(p2, token) {
  p2.openElements.clearBackToTableContext(), p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.IN_COLUMN_GROUP;
}
function colStartTagInTable(p2, token) {
  p2.openElements.clearBackToTableContext(), p2._insertFakeElement(TAG_NAMES.COLGROUP, TAG_ID.COLGROUP), p2.insertionMode = InsertionMode.IN_COLUMN_GROUP, startTagInColumnGroup(p2, token);
}
function tbodyStartTagInTable(p2, token) {
  p2.openElements.clearBackToTableContext(), p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.IN_TABLE_BODY;
}
function tdStartTagInTable(p2, token) {
  p2.openElements.clearBackToTableContext(), p2._insertFakeElement(TAG_NAMES.TBODY, TAG_ID.TBODY), p2.insertionMode = InsertionMode.IN_TABLE_BODY, startTagInTableBody(p2, token);
}
function tableStartTagInTable(p2, token) {
  p2.openElements.hasInTableScope(TAG_ID.TABLE) && (p2.openElements.popUntilTagNamePopped(TAG_ID.TABLE), p2._resetInsertionMode(), p2._processStartTag(token));
}
function inputStartTagInTable(p2, token) {
  isHiddenInput(token) ? p2._appendElement(token, NS.HTML) : tokenInTable(p2, token), token.ackSelfClosing = !0;
}
function formStartTagInTable(p2, token) {
  !p2.formElement && p2.openElements.tmplCount === 0 && (p2._insertElement(token, NS.HTML), p2.formElement = p2.openElements.current, p2.openElements.pop());
}
function startTagInTable(p2, token) {
  switch (token.tagID) {
    case TAG_ID.TD:
    case TAG_ID.TH:
    case TAG_ID.TR: {
      tdStartTagInTable(p2, token);
      break;
    }
    case TAG_ID.STYLE:
    case TAG_ID.SCRIPT:
    case TAG_ID.TEMPLATE: {
      startTagInHead(p2, token);
      break;
    }
    case TAG_ID.COL: {
      colStartTagInTable(p2, token);
      break;
    }
    case TAG_ID.FORM: {
      formStartTagInTable(p2, token);
      break;
    }
    case TAG_ID.TABLE: {
      tableStartTagInTable(p2, token);
      break;
    }
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      tbodyStartTagInTable(p2, token);
      break;
    }
    case TAG_ID.INPUT: {
      inputStartTagInTable(p2, token);
      break;
    }
    case TAG_ID.CAPTION: {
      captionStartTagInTable(p2, token);
      break;
    }
    case TAG_ID.COLGROUP: {
      colgroupStartTagInTable(p2, token);
      break;
    }
    default:
      tokenInTable(p2, token);
  }
}
function endTagInTable(p2, token) {
  switch (token.tagID) {
    case TAG_ID.TABLE: {
      p2.openElements.hasInTableScope(TAG_ID.TABLE) && (p2.openElements.popUntilTagNamePopped(TAG_ID.TABLE), p2._resetInsertionMode());
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p2, token);
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
    case TAG_ID.TBODY:
    case TAG_ID.TD:
    case TAG_ID.TFOOT:
    case TAG_ID.TH:
    case TAG_ID.THEAD:
    case TAG_ID.TR:
      break;
    default:
      tokenInTable(p2, token);
  }
}
function tokenInTable(p2, token) {
  let savedFosterParentingState = p2.fosterParentingEnabled;
  p2.fosterParentingEnabled = !0, modeInBody(p2, token), p2.fosterParentingEnabled = savedFosterParentingState;
}
function whitespaceCharacterInTableText(p2, token) {
  p2.pendingCharacterTokens.push(token);
}
function characterInTableText(p2, token) {
  p2.pendingCharacterTokens.push(token), p2.hasNonWhitespacePendingCharacterToken = !0;
}
function tokenInTableText(p2, token) {
  let i = 0;
  if (p2.hasNonWhitespacePendingCharacterToken)
    for (; i < p2.pendingCharacterTokens.length; i++)
      tokenInTable(p2, p2.pendingCharacterTokens[i]);
  else
    for (; i < p2.pendingCharacterTokens.length; i++)
      p2._insertCharacters(p2.pendingCharacterTokens[i]);
  p2.insertionMode = p2.originalInsertionMode, p2._processToken(token);
}
function startTagInCaption(p2, token) {
  let tn = token.tagID;
  TABLE_VOID_ELEMENTS.has(tn) ? p2.openElements.hasInTableScope(TAG_ID.CAPTION) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(TAG_ID.CAPTION), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = InsertionMode.IN_TABLE, startTagInTable(p2, token)) : startTagInBody(p2, token);
}
function endTagInCaption(p2, token) {
  let tn = token.tagID;
  switch (tn) {
    case TAG_ID.CAPTION:
    case TAG_ID.TABLE: {
      p2.openElements.hasInTableScope(TAG_ID.CAPTION) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(TAG_ID.CAPTION), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = InsertionMode.IN_TABLE, tn === TAG_ID.TABLE && endTagInTable(p2, token));
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
    case TAG_ID.TBODY:
    case TAG_ID.TD:
    case TAG_ID.TFOOT:
    case TAG_ID.TH:
    case TAG_ID.THEAD:
    case TAG_ID.TR:
      break;
    default:
      endTagInBody(p2, token);
  }
}
function startTagInColumnGroup(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.COL: {
      p2._appendElement(token, NS.HTML), token.ackSelfClosing = !0;
      break;
    }
    case TAG_ID.TEMPLATE: {
      startTagInHead(p2, token);
      break;
    }
    default:
      tokenInColumnGroup(p2, token);
  }
}
function endTagInColumnGroup(p2, token) {
  switch (token.tagID) {
    case TAG_ID.COLGROUP: {
      p2.openElements.currentTagId === TAG_ID.COLGROUP && (p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE);
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p2, token);
      break;
    }
    case TAG_ID.COL:
      break;
    default:
      tokenInColumnGroup(p2, token);
  }
}
function tokenInColumnGroup(p2, token) {
  p2.openElements.currentTagId === TAG_ID.COLGROUP && (p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE, p2._processToken(token));
}
function startTagInTableBody(p2, token) {
  switch (token.tagID) {
    case TAG_ID.TR: {
      p2.openElements.clearBackToTableBodyContext(), p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.IN_ROW;
      break;
    }
    case TAG_ID.TH:
    case TAG_ID.TD: {
      p2.openElements.clearBackToTableBodyContext(), p2._insertFakeElement(TAG_NAMES.TR, TAG_ID.TR), p2.insertionMode = InsertionMode.IN_ROW, startTagInRow(p2, token);
      break;
    }
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      p2.openElements.hasTableBodyContextInTableScope() && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE, startTagInTable(p2, token));
      break;
    }
    default:
      startTagInTable(p2, token);
  }
}
function endTagInTableBody(p2, token) {
  let tn = token.tagID;
  switch (token.tagID) {
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      p2.openElements.hasInTableScope(tn) && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE);
      break;
    }
    case TAG_ID.TABLE: {
      p2.openElements.hasTableBodyContextInTableScope() && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE, endTagInTable(p2, token));
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
    case TAG_ID.TD:
    case TAG_ID.TH:
    case TAG_ID.TR:
      break;
    default:
      endTagInTable(p2, token);
  }
}
function startTagInRow(p2, token) {
  switch (token.tagID) {
    case TAG_ID.TH:
    case TAG_ID.TD: {
      p2.openElements.clearBackToTableRowContext(), p2._insertElement(token, NS.HTML), p2.insertionMode = InsertionMode.IN_CELL, p2.activeFormattingElements.insertMarker();
      break;
    }
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD:
    case TAG_ID.TR: {
      p2.openElements.hasInTableScope(TAG_ID.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE_BODY, startTagInTableBody(p2, token));
      break;
    }
    default:
      startTagInTable(p2, token);
  }
}
function endTagInRow(p2, token) {
  switch (token.tagID) {
    case TAG_ID.TR: {
      p2.openElements.hasInTableScope(TAG_ID.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE_BODY);
      break;
    }
    case TAG_ID.TABLE: {
      p2.openElements.hasInTableScope(TAG_ID.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE_BODY, endTagInTableBody(p2, token));
      break;
    }
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      (p2.openElements.hasInTableScope(token.tagID) || p2.openElements.hasInTableScope(TAG_ID.TR)) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = InsertionMode.IN_TABLE_BODY, endTagInTableBody(p2, token));
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
    case TAG_ID.TD:
    case TAG_ID.TH:
      break;
    default:
      endTagInTable(p2, token);
  }
}
function startTagInCell(p2, token) {
  let tn = token.tagID;
  TABLE_VOID_ELEMENTS.has(tn) ? (p2.openElements.hasInTableScope(TAG_ID.TD) || p2.openElements.hasInTableScope(TAG_ID.TH)) && (p2._closeTableCell(), startTagInRow(p2, token)) : startTagInBody(p2, token);
}
function endTagInCell(p2, token) {
  let tn = token.tagID;
  switch (tn) {
    case TAG_ID.TD:
    case TAG_ID.TH: {
      p2.openElements.hasInTableScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = InsertionMode.IN_ROW);
      break;
    }
    case TAG_ID.TABLE:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD:
    case TAG_ID.TR: {
      p2.openElements.hasInTableScope(tn) && (p2._closeTableCell(), endTagInRow(p2, token));
      break;
    }
    case TAG_ID.BODY:
    case TAG_ID.CAPTION:
    case TAG_ID.COL:
    case TAG_ID.COLGROUP:
    case TAG_ID.HTML:
      break;
    default:
      endTagInBody(p2, token);
  }
}
function startTagInSelect(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.OPTION: {
      p2.openElements.currentTagId === TAG_ID.OPTION && p2.openElements.pop(), p2._insertElement(token, NS.HTML);
      break;
    }
    case TAG_ID.OPTGROUP: {
      p2.openElements.currentTagId === TAG_ID.OPTION && p2.openElements.pop(), p2.openElements.currentTagId === TAG_ID.OPTGROUP && p2.openElements.pop(), p2._insertElement(token, NS.HTML);
      break;
    }
    case TAG_ID.INPUT:
    case TAG_ID.KEYGEN:
    case TAG_ID.TEXTAREA:
    case TAG_ID.SELECT: {
      p2.openElements.hasInSelectScope(TAG_ID.SELECT) && (p2.openElements.popUntilTagNamePopped(TAG_ID.SELECT), p2._resetInsertionMode(), token.tagID !== TAG_ID.SELECT && p2._processStartTag(token));
      break;
    }
    case TAG_ID.SCRIPT:
    case TAG_ID.TEMPLATE: {
      startTagInHead(p2, token);
      break;
    }
    default:
  }
}
function endTagInSelect(p2, token) {
  switch (token.tagID) {
    case TAG_ID.OPTGROUP: {
      p2.openElements.stackTop > 0 && p2.openElements.currentTagId === TAG_ID.OPTION && p2.openElements.tagIDs[p2.openElements.stackTop - 1] === TAG_ID.OPTGROUP && p2.openElements.pop(), p2.openElements.currentTagId === TAG_ID.OPTGROUP && p2.openElements.pop();
      break;
    }
    case TAG_ID.OPTION: {
      p2.openElements.currentTagId === TAG_ID.OPTION && p2.openElements.pop();
      break;
    }
    case TAG_ID.SELECT: {
      p2.openElements.hasInSelectScope(TAG_ID.SELECT) && (p2.openElements.popUntilTagNamePopped(TAG_ID.SELECT), p2._resetInsertionMode());
      break;
    }
    case TAG_ID.TEMPLATE: {
      templateEndTagInHead(p2, token);
      break;
    }
    default:
  }
}
function startTagInSelectInTable(p2, token) {
  let tn = token.tagID;
  tn === TAG_ID.CAPTION || tn === TAG_ID.TABLE || tn === TAG_ID.TBODY || tn === TAG_ID.TFOOT || tn === TAG_ID.THEAD || tn === TAG_ID.TR || tn === TAG_ID.TD || tn === TAG_ID.TH ? (p2.openElements.popUntilTagNamePopped(TAG_ID.SELECT), p2._resetInsertionMode(), p2._processStartTag(token)) : startTagInSelect(p2, token);
}
function endTagInSelectInTable(p2, token) {
  let tn = token.tagID;
  tn === TAG_ID.CAPTION || tn === TAG_ID.TABLE || tn === TAG_ID.TBODY || tn === TAG_ID.TFOOT || tn === TAG_ID.THEAD || tn === TAG_ID.TR || tn === TAG_ID.TD || tn === TAG_ID.TH ? p2.openElements.hasInTableScope(tn) && (p2.openElements.popUntilTagNamePopped(TAG_ID.SELECT), p2._resetInsertionMode(), p2.onEndTag(token)) : endTagInSelect(p2, token);
}
function startTagInTemplate(p2, token) {
  switch (token.tagID) {
    case TAG_ID.BASE:
    case TAG_ID.BASEFONT:
    case TAG_ID.BGSOUND:
    case TAG_ID.LINK:
    case TAG_ID.META:
    case TAG_ID.NOFRAMES:
    case TAG_ID.SCRIPT:
    case TAG_ID.STYLE:
    case TAG_ID.TEMPLATE:
    case TAG_ID.TITLE: {
      startTagInHead(p2, token);
      break;
    }
    case TAG_ID.CAPTION:
    case TAG_ID.COLGROUP:
    case TAG_ID.TBODY:
    case TAG_ID.TFOOT:
    case TAG_ID.THEAD: {
      p2.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE, p2.insertionMode = InsertionMode.IN_TABLE, startTagInTable(p2, token);
      break;
    }
    case TAG_ID.COL: {
      p2.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP, p2.insertionMode = InsertionMode.IN_COLUMN_GROUP, startTagInColumnGroup(p2, token);
      break;
    }
    case TAG_ID.TR: {
      p2.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY, p2.insertionMode = InsertionMode.IN_TABLE_BODY, startTagInTableBody(p2, token);
      break;
    }
    case TAG_ID.TD:
    case TAG_ID.TH: {
      p2.tmplInsertionModeStack[0] = InsertionMode.IN_ROW, p2.insertionMode = InsertionMode.IN_ROW, startTagInRow(p2, token);
      break;
    }
    default:
      p2.tmplInsertionModeStack[0] = InsertionMode.IN_BODY, p2.insertionMode = InsertionMode.IN_BODY, startTagInBody(p2, token);
  }
}
function endTagInTemplate(p2, token) {
  token.tagID === TAG_ID.TEMPLATE && templateEndTagInHead(p2, token);
}
function eofInTemplate(p2, token) {
  p2.openElements.tmplCount > 0 ? (p2.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE), p2.activeFormattingElements.clearToLastMarker(), p2.tmplInsertionModeStack.shift(), p2._resetInsertionMode(), p2.onEof(token)) : stopParsing(p2, token);
}
function startTagAfterBody(p2, token) {
  token.tagID === TAG_ID.HTML ? startTagInBody(p2, token) : tokenAfterBody(p2, token);
}
function endTagAfterBody(p2, token) {
  var _a2;
  if (token.tagID === TAG_ID.HTML) {
    if (p2.fragmentContext || (p2.insertionMode = InsertionMode.AFTER_AFTER_BODY), p2.options.sourceCodeLocationInfo && p2.openElements.tagIDs[0] === TAG_ID.HTML) {
      p2._setEndLocation(p2.openElements.items[0], token);
      let bodyElement = p2.openElements.items[1];
      bodyElement && !(!((_a2 = p2.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a2 === void 0) && _a2.endTag) && p2._setEndLocation(bodyElement, token);
    }
  } else
    tokenAfterBody(p2, token);
}
function tokenAfterBody(p2, token) {
  p2.insertionMode = InsertionMode.IN_BODY, modeInBody(p2, token);
}
function startTagInFrameset(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.FRAMESET: {
      p2._insertElement(token, NS.HTML);
      break;
    }
    case TAG_ID.FRAME: {
      p2._appendElement(token, NS.HTML), token.ackSelfClosing = !0;
      break;
    }
    case TAG_ID.NOFRAMES: {
      startTagInHead(p2, token);
      break;
    }
    default:
  }
}
function endTagInFrameset(p2, token) {
  token.tagID === TAG_ID.FRAMESET && !p2.openElements.isRootHtmlElementCurrent() && (p2.openElements.pop(), !p2.fragmentContext && p2.openElements.currentTagId !== TAG_ID.FRAMESET && (p2.insertionMode = InsertionMode.AFTER_FRAMESET));
}
function startTagAfterFrameset(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.NOFRAMES: {
      startTagInHead(p2, token);
      break;
    }
    default:
  }
}
function endTagAfterFrameset(p2, token) {
  token.tagID === TAG_ID.HTML && (p2.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET);
}
function startTagAfterAfterBody(p2, token) {
  token.tagID === TAG_ID.HTML ? startTagInBody(p2, token) : tokenAfterAfterBody(p2, token);
}
function tokenAfterAfterBody(p2, token) {
  p2.insertionMode = InsertionMode.IN_BODY, modeInBody(p2, token);
}
function startTagAfterAfterFrameset(p2, token) {
  switch (token.tagID) {
    case TAG_ID.HTML: {
      startTagInBody(p2, token);
      break;
    }
    case TAG_ID.NOFRAMES: {
      startTagInHead(p2, token);
      break;
    }
    default:
  }
}
function nullCharacterInForeignContent(p2, token) {
  token.chars = REPLACEMENT_CHARACTER, p2._insertCharacters(token);
}
function characterInForeignContent(p2, token) {
  p2._insertCharacters(token), p2.framesetOk = !1;
}
function popUntilHtmlOrIntegrationPoint(p2) {
  for (; p2.treeAdapter.getNamespaceURI(p2.openElements.current) !== NS.HTML && !p2._isIntegrationPoint(p2.openElements.currentTagId, p2.openElements.current); )
    p2.openElements.pop();
}
function startTagInForeignContent(p2, token) {
  if (causesExit(token))
    popUntilHtmlOrIntegrationPoint(p2), p2._startTagOutsideForeignContent(token);
  else {
    let current = p2._getAdjustedCurrentElement(), currentNs = p2.treeAdapter.getNamespaceURI(current);
    currentNs === NS.MATHML ? adjustTokenMathMLAttrs(token) : currentNs === NS.SVG && (adjustTokenSVGTagName(token), adjustTokenSVGAttrs(token)), adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, currentNs) : p2._insertElement(token, currentNs), token.ackSelfClosing = !0;
  }
}
function endTagInForeignContent(p2, token) {
  if (token.tagID === TAG_ID.P || token.tagID === TAG_ID.BR) {
    popUntilHtmlOrIntegrationPoint(p2), p2._endTagOutsideForeignContent(token);
    return;
  }
  for (let i = p2.openElements.stackTop; i > 0; i--) {
    let element5 = p2.openElements.items[i];
    if (p2.treeAdapter.getNamespaceURI(element5) === NS.HTML) {
      p2._endTagOutsideForeignContent(token);
      break;
    }
    let tagName = p2.treeAdapter.getTagName(element5);
    if (tagName.toLowerCase() === token.tagName) {
      token.tagName = tagName, p2.openElements.shortenToLength(i);
      break;
    }
  }
}
var HIDDEN_INPUT_TYPE, AA_OUTER_LOOP_ITER, AA_INNER_LOOP_ITER, InsertionMode, BASE_LOC, TABLE_STRUCTURE_TAGS, defaultParserOptions, Parser, TABLE_VOID_ELEMENTS, init_parser = __esm({
  "node_modules/parse5/dist/parser/index.js"() {
    init_tokenizer();
    init_open_element_stack();
    init_formatting_element_list();
    init_default();
    init_doctype();
    init_foreign_content();
    init_error_codes();
    init_unicode();
    init_html3();
    init_token();
    HIDDEN_INPUT_TYPE = "hidden", AA_OUTER_LOOP_ITER = 8, AA_INNER_LOOP_ITER = 3;
    (function(InsertionMode2) {
      InsertionMode2[InsertionMode2.INITIAL = 0] = "INITIAL", InsertionMode2[InsertionMode2.BEFORE_HTML = 1] = "BEFORE_HTML", InsertionMode2[InsertionMode2.BEFORE_HEAD = 2] = "BEFORE_HEAD", InsertionMode2[InsertionMode2.IN_HEAD = 3] = "IN_HEAD", InsertionMode2[InsertionMode2.IN_HEAD_NO_SCRIPT = 4] = "IN_HEAD_NO_SCRIPT", InsertionMode2[InsertionMode2.AFTER_HEAD = 5] = "AFTER_HEAD", InsertionMode2[InsertionMode2.IN_BODY = 6] = "IN_BODY", InsertionMode2[InsertionMode2.TEXT = 7] = "TEXT", InsertionMode2[InsertionMode2.IN_TABLE = 8] = "IN_TABLE", InsertionMode2[InsertionMode2.IN_TABLE_TEXT = 9] = "IN_TABLE_TEXT", InsertionMode2[InsertionMode2.IN_CAPTION = 10] = "IN_CAPTION", InsertionMode2[InsertionMode2.IN_COLUMN_GROUP = 11] = "IN_COLUMN_GROUP", InsertionMode2[InsertionMode2.IN_TABLE_BODY = 12] = "IN_TABLE_BODY", InsertionMode2[InsertionMode2.IN_ROW = 13] = "IN_ROW", InsertionMode2[InsertionMode2.IN_CELL = 14] = "IN_CELL", InsertionMode2[InsertionMode2.IN_SELECT = 15] = "IN_SELECT", InsertionMode2[InsertionMode2.IN_SELECT_IN_TABLE = 16] = "IN_SELECT_IN_TABLE", InsertionMode2[InsertionMode2.IN_TEMPLATE = 17] = "IN_TEMPLATE", InsertionMode2[InsertionMode2.AFTER_BODY = 18] = "AFTER_BODY", InsertionMode2[InsertionMode2.IN_FRAMESET = 19] = "IN_FRAMESET", InsertionMode2[InsertionMode2.AFTER_FRAMESET = 20] = "AFTER_FRAMESET", InsertionMode2[InsertionMode2.AFTER_AFTER_BODY = 21] = "AFTER_AFTER_BODY", InsertionMode2[InsertionMode2.AFTER_AFTER_FRAMESET = 22] = "AFTER_AFTER_FRAMESET";
    })(InsertionMode || (InsertionMode = {}));
    BASE_LOC = {
      startLine: -1,
      startCol: -1,
      startOffset: -1,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    }, TABLE_STRUCTURE_TAGS = /* @__PURE__ */ new Set([TAG_ID.TABLE, TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TR]), defaultParserOptions = {
      scriptingEnabled: !0,
      sourceCodeLocationInfo: !1,
      treeAdapter: defaultTreeAdapter,
      onParseError: null
    }, Parser = class {
      constructor(options2, document4, fragmentContext = null, scriptHandler = null) {
        this.fragmentContext = fragmentContext, this.scriptHandler = scriptHandler, this.currentToken = null, this.stopped = !1, this.insertionMode = InsertionMode.INITIAL, this.originalInsertionMode = InsertionMode.INITIAL, this.headElement = null, this.formElement = null, this.currentNotInHTML = !1, this.tmplInsertionModeStack = [], this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = !1, this.framesetOk = !0, this.skipNextNewLine = !1, this.fosterParentingEnabled = !1, this.options = {
          ...defaultParserOptions,
          ...options2
        }, this.treeAdapter = this.options.treeAdapter, this.onParseError = this.options.onParseError, this.onParseError && (this.options.sourceCodeLocationInfo = !0), this.document = document4 ?? this.treeAdapter.createDocument(), this.tokenizer = new Tokenizer(this.options, this), this.activeFormattingElements = new FormattingElementList(this.treeAdapter), this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : TAG_ID.UNKNOWN, this._setContextModes(fragmentContext ?? this.document, this.fragmentContextID), this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);
      }
      static parse(html6, options2) {
        let parser = new this(options2);
        return parser.tokenizer.write(html6, !0), parser.document;
      }
      static getFragmentParser(fragmentContext, options2) {
        let opts = {
          ...defaultParserOptions,
          ...options2
        };
        fragmentContext ?? (fragmentContext = opts.treeAdapter.createElement(TAG_NAMES.TEMPLATE, NS.HTML, []));
        let documentMock = opts.treeAdapter.createElement("documentmock", NS.HTML, []), parser = new this(opts, documentMock, fragmentContext);
        return parser.fragmentContextID === TAG_ID.TEMPLATE && parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE), parser._initTokenizerForFragmentParsing(), parser._insertFakeRootElement(), parser._resetInsertionMode(), parser._findFormInFragmentContext(), parser;
      }
      getFragment() {
        let rootElement = this.treeAdapter.getFirstChild(this.document), fragment2 = this.treeAdapter.createDocumentFragment();
        return this._adoptNodes(rootElement, fragment2), fragment2;
      }
      _err(token, code3, beforeToken) {
        var _a2;
        if (!this.onParseError)
          return;
        let loc = (_a2 = token.location) !== null && _a2 !== void 0 ? _a2 : BASE_LOC, err = {
          code: code3,
          startLine: loc.startLine,
          startCol: loc.startCol,
          startOffset: loc.startOffset,
          endLine: beforeToken ? loc.startLine : loc.endLine,
          endCol: beforeToken ? loc.startCol : loc.endCol,
          endOffset: beforeToken ? loc.startOffset : loc.endOffset
        };
        this.onParseError(err);
      }
      onItemPush(node2, tid, isTop) {
        var _a2, _b;
        (_b = (_a2 = this.treeAdapter).onItemPush) === null || _b === void 0 || _b.call(_a2, node2), isTop && this.openElements.stackTop > 0 && this._setContextModes(node2, tid);
      }
      onItemPop(node2, isTop) {
        var _a2, _b;
        if (this.options.sourceCodeLocationInfo && this._setEndLocation(node2, this.currentToken), (_b = (_a2 = this.treeAdapter).onItemPop) === null || _b === void 0 || _b.call(_a2, node2, this.openElements.current), isTop) {
          let current, currentTagId;
          this.openElements.stackTop === 0 && this.fragmentContext ? (current = this.fragmentContext, currentTagId = this.fragmentContextID) : { current, currentTagId } = this.openElements, this._setContextModes(current, currentTagId);
        }
      }
      _setContextModes(current, tid) {
        let isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;
        this.currentNotInHTML = !isHTML, this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);
      }
      _switchToTextParsing(currentToken, nextTokenizerState) {
        this._insertElement(currentToken, NS.HTML), this.tokenizer.state = nextTokenizerState, this.originalInsertionMode = this.insertionMode, this.insertionMode = InsertionMode.TEXT;
      }
      switchToPlaintextParsing() {
        this.insertionMode = InsertionMode.TEXT, this.originalInsertionMode = InsertionMode.IN_BODY, this.tokenizer.state = TokenizerMode.PLAINTEXT;
      }
      _getAdjustedCurrentElement() {
        return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
      }
      _findFormInFragmentContext() {
        let node2 = this.fragmentContext;
        for (; node2; ) {
          if (this.treeAdapter.getTagName(node2) === TAG_NAMES.FORM) {
            this.formElement = node2;
            break;
          }
          node2 = this.treeAdapter.getParentNode(node2);
        }
      }
      _initTokenizerForFragmentParsing() {
        if (!(!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML))
          switch (this.fragmentContextID) {
            case TAG_ID.TITLE:
            case TAG_ID.TEXTAREA: {
              this.tokenizer.state = TokenizerMode.RCDATA;
              break;
            }
            case TAG_ID.STYLE:
            case TAG_ID.XMP:
            case TAG_ID.IFRAME:
            case TAG_ID.NOEMBED:
            case TAG_ID.NOFRAMES:
            case TAG_ID.NOSCRIPT: {
              this.tokenizer.state = TokenizerMode.RAWTEXT;
              break;
            }
            case TAG_ID.SCRIPT: {
              this.tokenizer.state = TokenizerMode.SCRIPT_DATA;
              break;
            }
            case TAG_ID.PLAINTEXT: {
              this.tokenizer.state = TokenizerMode.PLAINTEXT;
              break;
            }
            default:
          }
      }
      _setDocumentType(token) {
        let name = token.name || "", publicId = token.publicId || "", systemId = token.systemId || "";
        if (this.treeAdapter.setDocumentType(this.document, name, publicId, systemId), token.location) {
          let docTypeNode = this.treeAdapter.getChildNodes(this.document).find((node2) => this.treeAdapter.isDocumentTypeNode(node2));
          docTypeNode && this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);
        }
      }
      _attachElementToTree(element5, location2) {
        if (this.options.sourceCodeLocationInfo) {
          let loc = location2 && {
            ...location2,
            startTag: location2
          };
          this.treeAdapter.setNodeSourceCodeLocation(element5, loc);
        }
        if (this._shouldFosterParentOnInsertion())
          this._fosterParentElement(element5);
        else {
          let parent = this.openElements.currentTmplContentOrNode;
          this.treeAdapter.appendChild(parent, element5);
        }
      }
      _appendElement(token, namespaceURI) {
        let element5 = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element5, token.location);
      }
      _insertElement(token, namespaceURI) {
        let element5 = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element5, token.location), this.openElements.push(element5, token.tagID);
      }
      _insertFakeElement(tagName, tagID) {
        let element5 = this.treeAdapter.createElement(tagName, NS.HTML, []);
        this._attachElementToTree(element5, null), this.openElements.push(element5, tagID);
      }
      _insertTemplate(token) {
        let tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs), content3 = this.treeAdapter.createDocumentFragment();
        this.treeAdapter.setTemplateContent(tmpl, content3), this._attachElementToTree(tmpl, token.location), this.openElements.push(tmpl, token.tagID), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(content3, null);
      }
      _insertFakeRootElement() {
        let element5 = this.treeAdapter.createElement(TAG_NAMES.HTML, NS.HTML, []);
        this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(element5, null), this.treeAdapter.appendChild(this.openElements.current, element5), this.openElements.push(element5, TAG_ID.HTML);
      }
      _appendCommentNode(token, parent) {
        let commentNode = this.treeAdapter.createCommentNode(token.data);
        this.treeAdapter.appendChild(parent, commentNode), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
      }
      _insertCharacters(token) {
        let parent, beforeElement;
        if (this._shouldFosterParentOnInsertion() ? ({ parent, beforeElement } = this._findFosterParentingLocation(), beforeElement ? this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement) : this.treeAdapter.insertText(parent, token.chars)) : (parent = this.openElements.currentTmplContentOrNode, this.treeAdapter.insertText(parent, token.chars)), !token.location)
          return;
        let siblings2 = this.treeAdapter.getChildNodes(parent), textNodeIdx = beforeElement ? siblings2.lastIndexOf(beforeElement) : siblings2.length, textNode = siblings2[textNodeIdx - 1];
        if (this.treeAdapter.getNodeSourceCodeLocation(textNode)) {
          let { endLine, endCol, endOffset } = token.location;
          this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });
        } else
          this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
      }
      _adoptNodes(donor, recipient) {
        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor))
          this.treeAdapter.detachNode(child), this.treeAdapter.appendChild(recipient, child);
      }
      _setEndLocation(element5, closingToken) {
        if (this.treeAdapter.getNodeSourceCodeLocation(element5) && closingToken.location) {
          let ctLoc = closingToken.location, tn = this.treeAdapter.getTagName(element5), endLoc = closingToken.type === TokenType.END_TAG && tn === closingToken.tagName ? {
            endTag: { ...ctLoc },
            endLine: ctLoc.endLine,
            endCol: ctLoc.endCol,
            endOffset: ctLoc.endOffset
          } : {
            endLine: ctLoc.startLine,
            endCol: ctLoc.startCol,
            endOffset: ctLoc.startOffset
          };
          this.treeAdapter.updateNodeSourceCodeLocation(element5, endLoc);
        }
      }
      shouldProcessStartTagTokenInForeignContent(token) {
        if (!this.currentNotInHTML)
          return !1;
        let current, currentTagId;
        return this.openElements.stackTop === 0 && this.fragmentContext ? (current = this.fragmentContext, currentTagId = this.fragmentContextID) : { current, currentTagId } = this.openElements, token.tagID === TAG_ID.SVG && this.treeAdapter.getTagName(current) === TAG_NAMES.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === NS.MATHML ? !1 : this.tokenizer.inForeignNode || (token.tagID === TAG_ID.MGLYPH || token.tagID === TAG_ID.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, NS.HTML);
      }
      _processToken(token) {
        switch (token.type) {
          case TokenType.CHARACTER: {
            this.onCharacter(token);
            break;
          }
          case TokenType.NULL_CHARACTER: {
            this.onNullCharacter(token);
            break;
          }
          case TokenType.COMMENT: {
            this.onComment(token);
            break;
          }
          case TokenType.DOCTYPE: {
            this.onDoctype(token);
            break;
          }
          case TokenType.START_TAG: {
            this._processStartTag(token);
            break;
          }
          case TokenType.END_TAG: {
            this.onEndTag(token);
            break;
          }
          case TokenType.EOF: {
            this.onEof(token);
            break;
          }
          case TokenType.WHITESPACE_CHARACTER: {
            this.onWhitespaceCharacter(token);
            break;
          }
        }
      }
      _isIntegrationPoint(tid, element5, foreignNS) {
        let ns = this.treeAdapter.getNamespaceURI(element5), attrs = this.treeAdapter.getAttrList(element5);
        return isIntegrationPoint(tid, ns, attrs, foreignNS);
      }
      _reconstructActiveFormattingElements() {
        let listLength = this.activeFormattingElements.entries.length;
        if (listLength) {
          let endIndex = this.activeFormattingElements.entries.findIndex((entry2) => entry2.type === EntryType.Marker || this.openElements.contains(entry2.element)), unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;
          for (let i = unopenIdx; i >= 0; i--) {
            let entry2 = this.activeFormattingElements.entries[i];
            this._insertElement(entry2.token, this.treeAdapter.getNamespaceURI(entry2.element)), entry2.element = this.openElements.current;
          }
        }
      }
      _closeTableCell() {
        this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = InsertionMode.IN_ROW;
      }
      _closePElement() {
        this.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.P), this.openElements.popUntilTagNamePopped(TAG_ID.P);
      }
      _resetInsertionMode() {
        for (let i = this.openElements.stackTop; i >= 0; i--)
          switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {
            case TAG_ID.TR: {
              this.insertionMode = InsertionMode.IN_ROW;
              return;
            }
            case TAG_ID.TBODY:
            case TAG_ID.THEAD:
            case TAG_ID.TFOOT: {
              this.insertionMode = InsertionMode.IN_TABLE_BODY;
              return;
            }
            case TAG_ID.CAPTION: {
              this.insertionMode = InsertionMode.IN_CAPTION;
              return;
            }
            case TAG_ID.COLGROUP: {
              this.insertionMode = InsertionMode.IN_COLUMN_GROUP;
              return;
            }
            case TAG_ID.TABLE: {
              this.insertionMode = InsertionMode.IN_TABLE;
              return;
            }
            case TAG_ID.BODY: {
              this.insertionMode = InsertionMode.IN_BODY;
              return;
            }
            case TAG_ID.FRAMESET: {
              this.insertionMode = InsertionMode.IN_FRAMESET;
              return;
            }
            case TAG_ID.SELECT: {
              this._resetInsertionModeForSelect(i);
              return;
            }
            case TAG_ID.TEMPLATE: {
              this.insertionMode = this.tmplInsertionModeStack[0];
              return;
            }
            case TAG_ID.HTML: {
              this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;
              return;
            }
            case TAG_ID.TD:
            case TAG_ID.TH: {
              if (i > 0) {
                this.insertionMode = InsertionMode.IN_CELL;
                return;
              }
              break;
            }
            case TAG_ID.HEAD: {
              if (i > 0) {
                this.insertionMode = InsertionMode.IN_HEAD;
                return;
              }
              break;
            }
          }
        this.insertionMode = InsertionMode.IN_BODY;
      }
      _resetInsertionModeForSelect(selectIdx) {
        if (selectIdx > 0)
          for (let i = selectIdx - 1; i > 0; i--) {
            let tn = this.openElements.tagIDs[i];
            if (tn === TAG_ID.TEMPLATE)
              break;
            if (tn === TAG_ID.TABLE) {
              this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;
              return;
            }
          }
        this.insertionMode = InsertionMode.IN_SELECT;
      }
      _isElementCausesFosterParenting(tn) {
        return TABLE_STRUCTURE_TAGS.has(tn);
      }
      _shouldFosterParentOnInsertion() {
        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);
      }
      _findFosterParentingLocation() {
        for (let i = this.openElements.stackTop; i >= 0; i--) {
          let openElement = this.openElements.items[i];
          switch (this.openElements.tagIDs[i]) {
            case TAG_ID.TEMPLATE: {
              if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML)
                return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };
              break;
            }
            case TAG_ID.TABLE: {
              let parent = this.treeAdapter.getParentNode(openElement);
              return parent ? { parent, beforeElement: openElement } : { parent: this.openElements.items[i - 1], beforeElement: null };
            }
            default:
          }
        }
        return { parent: this.openElements.items[0], beforeElement: null };
      }
      _fosterParentElement(element5) {
        let location2 = this._findFosterParentingLocation();
        location2.beforeElement ? this.treeAdapter.insertBefore(location2.parent, element5, location2.beforeElement) : this.treeAdapter.appendChild(location2.parent, element5);
      }
      _isSpecialElement(element5, id) {
        let ns = this.treeAdapter.getNamespaceURI(element5);
        return SPECIAL_ELEMENTS[ns].has(id);
      }
      onCharacter(token) {
        if (this.skipNextNewLine = !1, this.tokenizer.inForeignNode) {
          characterInForeignContent(this, token);
          return;
        }
        switch (this.insertionMode) {
          case InsertionMode.INITIAL: {
            tokenInInitialMode(this, token);
            break;
          }
          case InsertionMode.BEFORE_HTML: {
            tokenBeforeHtml(this, token);
            break;
          }
          case InsertionMode.BEFORE_HEAD: {
            tokenBeforeHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD: {
            tokenInHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD_NO_SCRIPT: {
            tokenInHeadNoScript(this, token);
            break;
          }
          case InsertionMode.AFTER_HEAD: {
            tokenAfterHead(this, token);
            break;
          }
          case InsertionMode.IN_BODY:
          case InsertionMode.IN_CAPTION:
          case InsertionMode.IN_CELL:
          case InsertionMode.IN_TEMPLATE: {
            characterInBody(this, token);
            break;
          }
          case InsertionMode.TEXT:
          case InsertionMode.IN_SELECT:
          case InsertionMode.IN_SELECT_IN_TABLE: {
            this._insertCharacters(token);
            break;
          }
          case InsertionMode.IN_TABLE:
          case InsertionMode.IN_TABLE_BODY:
          case InsertionMode.IN_ROW: {
            characterInTable(this, token);
            break;
          }
          case InsertionMode.IN_TABLE_TEXT: {
            characterInTableText(this, token);
            break;
          }
          case InsertionMode.IN_COLUMN_GROUP: {
            tokenInColumnGroup(this, token);
            break;
          }
          case InsertionMode.AFTER_BODY: {
            tokenAfterBody(this, token);
            break;
          }
          case InsertionMode.AFTER_AFTER_BODY: {
            tokenAfterAfterBody(this, token);
            break;
          }
          default:
        }
      }
      onNullCharacter(token) {
        if (this.skipNextNewLine = !1, this.tokenizer.inForeignNode) {
          nullCharacterInForeignContent(this, token);
          return;
        }
        switch (this.insertionMode) {
          case InsertionMode.INITIAL: {
            tokenInInitialMode(this, token);
            break;
          }
          case InsertionMode.BEFORE_HTML: {
            tokenBeforeHtml(this, token);
            break;
          }
          case InsertionMode.BEFORE_HEAD: {
            tokenBeforeHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD: {
            tokenInHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD_NO_SCRIPT: {
            tokenInHeadNoScript(this, token);
            break;
          }
          case InsertionMode.AFTER_HEAD: {
            tokenAfterHead(this, token);
            break;
          }
          case InsertionMode.TEXT: {
            this._insertCharacters(token);
            break;
          }
          case InsertionMode.IN_TABLE:
          case InsertionMode.IN_TABLE_BODY:
          case InsertionMode.IN_ROW: {
            characterInTable(this, token);
            break;
          }
          case InsertionMode.IN_COLUMN_GROUP: {
            tokenInColumnGroup(this, token);
            break;
          }
          case InsertionMode.AFTER_BODY: {
            tokenAfterBody(this, token);
            break;
          }
          case InsertionMode.AFTER_AFTER_BODY: {
            tokenAfterAfterBody(this, token);
            break;
          }
          default:
        }
      }
      onComment(token) {
        if (this.skipNextNewLine = !1, this.currentNotInHTML) {
          appendComment(this, token);
          return;
        }
        switch (this.insertionMode) {
          case InsertionMode.INITIAL:
          case InsertionMode.BEFORE_HTML:
          case InsertionMode.BEFORE_HEAD:
          case InsertionMode.IN_HEAD:
          case InsertionMode.IN_HEAD_NO_SCRIPT:
          case InsertionMode.AFTER_HEAD:
          case InsertionMode.IN_BODY:
          case InsertionMode.IN_TABLE:
          case InsertionMode.IN_CAPTION:
          case InsertionMode.IN_COLUMN_GROUP:
          case InsertionMode.IN_TABLE_BODY:
          case InsertionMode.IN_ROW:
          case InsertionMode.IN_CELL:
          case InsertionMode.IN_SELECT:
          case InsertionMode.IN_SELECT_IN_TABLE:
          case InsertionMode.IN_TEMPLATE:
          case InsertionMode.IN_FRAMESET:
          case InsertionMode.AFTER_FRAMESET: {
            appendComment(this, token);
            break;
          }
          case InsertionMode.IN_TABLE_TEXT: {
            tokenInTableText(this, token);
            break;
          }
          case InsertionMode.AFTER_BODY: {
            appendCommentToRootHtmlElement(this, token);
            break;
          }
          case InsertionMode.AFTER_AFTER_BODY:
          case InsertionMode.AFTER_AFTER_FRAMESET: {
            appendCommentToDocument(this, token);
            break;
          }
          default:
        }
      }
      onDoctype(token) {
        switch (this.skipNextNewLine = !1, this.insertionMode) {
          case InsertionMode.INITIAL: {
            doctypeInInitialMode(this, token);
            break;
          }
          case InsertionMode.BEFORE_HEAD:
          case InsertionMode.IN_HEAD:
          case InsertionMode.IN_HEAD_NO_SCRIPT:
          case InsertionMode.AFTER_HEAD: {
            this._err(token, ERR.misplacedDoctype);
            break;
          }
          case InsertionMode.IN_TABLE_TEXT: {
            tokenInTableText(this, token);
            break;
          }
          default:
        }
      }
      onStartTag(token) {
        this.skipNextNewLine = !1, this.currentToken = token, this._processStartTag(token), token.selfClosing && !token.ackSelfClosing && this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);
      }
      _processStartTag(token) {
        this.shouldProcessStartTagTokenInForeignContent(token) ? startTagInForeignContent(this, token) : this._startTagOutsideForeignContent(token);
      }
      _startTagOutsideForeignContent(token) {
        switch (this.insertionMode) {
          case InsertionMode.INITIAL: {
            tokenInInitialMode(this, token);
            break;
          }
          case InsertionMode.BEFORE_HTML: {
            startTagBeforeHtml(this, token);
            break;
          }
          case InsertionMode.BEFORE_HEAD: {
            startTagBeforeHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD: {
            startTagInHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD_NO_SCRIPT: {
            startTagInHeadNoScript(this, token);
            break;
          }
          case InsertionMode.AFTER_HEAD: {
            startTagAfterHead(this, token);
            break;
          }
          case InsertionMode.IN_BODY: {
            startTagInBody(this, token);
            break;
          }
          case InsertionMode.IN_TABLE: {
            startTagInTable(this, token);
            break;
          }
          case InsertionMode.IN_TABLE_TEXT: {
            tokenInTableText(this, token);
            break;
          }
          case InsertionMode.IN_CAPTION: {
            startTagInCaption(this, token);
            break;
          }
          case InsertionMode.IN_COLUMN_GROUP: {
            startTagInColumnGroup(this, token);
            break;
          }
          case InsertionMode.IN_TABLE_BODY: {
            startTagInTableBody(this, token);
            break;
          }
          case InsertionMode.IN_ROW: {
            startTagInRow(this, token);
            break;
          }
          case InsertionMode.IN_CELL: {
            startTagInCell(this, token);
            break;
          }
          case InsertionMode.IN_SELECT: {
            startTagInSelect(this, token);
            break;
          }
          case InsertionMode.IN_SELECT_IN_TABLE: {
            startTagInSelectInTable(this, token);
            break;
          }
          case InsertionMode.IN_TEMPLATE: {
            startTagInTemplate(this, token);
            break;
          }
          case InsertionMode.AFTER_BODY: {
            startTagAfterBody(this, token);
            break;
          }
          case InsertionMode.IN_FRAMESET: {
            startTagInFrameset(this, token);
            break;
          }
          case InsertionMode.AFTER_FRAMESET: {
            startTagAfterFrameset(this, token);
            break;
          }
          case InsertionMode.AFTER_AFTER_BODY: {
            startTagAfterAfterBody(this, token);
            break;
          }
          case InsertionMode.AFTER_AFTER_FRAMESET: {
            startTagAfterAfterFrameset(this, token);
            break;
          }
          default:
        }
      }
      onEndTag(token) {
        this.skipNextNewLine = !1, this.currentToken = token, this.currentNotInHTML ? endTagInForeignContent(this, token) : this._endTagOutsideForeignContent(token);
      }
      _endTagOutsideForeignContent(token) {
        switch (this.insertionMode) {
          case InsertionMode.INITIAL: {
            tokenInInitialMode(this, token);
            break;
          }
          case InsertionMode.BEFORE_HTML: {
            endTagBeforeHtml(this, token);
            break;
          }
          case InsertionMode.BEFORE_HEAD: {
            endTagBeforeHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD: {
            endTagInHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD_NO_SCRIPT: {
            endTagInHeadNoScript(this, token);
            break;
          }
          case InsertionMode.AFTER_HEAD: {
            endTagAfterHead(this, token);
            break;
          }
          case InsertionMode.IN_BODY: {
            endTagInBody(this, token);
            break;
          }
          case InsertionMode.TEXT: {
            endTagInText(this, token);
            break;
          }
          case InsertionMode.IN_TABLE: {
            endTagInTable(this, token);
            break;
          }
          case InsertionMode.IN_TABLE_TEXT: {
            tokenInTableText(this, token);
            break;
          }
          case InsertionMode.IN_CAPTION: {
            endTagInCaption(this, token);
            break;
          }
          case InsertionMode.IN_COLUMN_GROUP: {
            endTagInColumnGroup(this, token);
            break;
          }
          case InsertionMode.IN_TABLE_BODY: {
            endTagInTableBody(this, token);
            break;
          }
          case InsertionMode.IN_ROW: {
            endTagInRow(this, token);
            break;
          }
          case InsertionMode.IN_CELL: {
            endTagInCell(this, token);
            break;
          }
          case InsertionMode.IN_SELECT: {
            endTagInSelect(this, token);
            break;
          }
          case InsertionMode.IN_SELECT_IN_TABLE: {
            endTagInSelectInTable(this, token);
            break;
          }
          case InsertionMode.IN_TEMPLATE: {
            endTagInTemplate(this, token);
            break;
          }
          case InsertionMode.AFTER_BODY: {
            endTagAfterBody(this, token);
            break;
          }
          case InsertionMode.IN_FRAMESET: {
            endTagInFrameset(this, token);
            break;
          }
          case InsertionMode.AFTER_FRAMESET: {
            endTagAfterFrameset(this, token);
            break;
          }
          case InsertionMode.AFTER_AFTER_BODY: {
            tokenAfterAfterBody(this, token);
            break;
          }
          default:
        }
      }
      onEof(token) {
        switch (this.insertionMode) {
          case InsertionMode.INITIAL: {
            tokenInInitialMode(this, token);
            break;
          }
          case InsertionMode.BEFORE_HTML: {
            tokenBeforeHtml(this, token);
            break;
          }
          case InsertionMode.BEFORE_HEAD: {
            tokenBeforeHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD: {
            tokenInHead(this, token);
            break;
          }
          case InsertionMode.IN_HEAD_NO_SCRIPT: {
            tokenInHeadNoScript(this, token);
            break;
          }
          case InsertionMode.AFTER_HEAD: {
            tokenAfterHead(this, token);
            break;
          }
          case InsertionMode.IN_BODY:
          case InsertionMode.IN_TABLE:
          case InsertionMode.IN_CAPTION:
          case InsertionMode.IN_COLUMN_GROUP:
          case InsertionMode.IN_TABLE_BODY:
          case InsertionMode.IN_ROW:
          case InsertionMode.IN_CELL:
          case InsertionMode.IN_SELECT:
          case InsertionMode.IN_SELECT_IN_TABLE: {
            eofInBody(this, token);
            break;
          }
          case InsertionMode.TEXT: {
            eofInText(this, token);
            break;
          }
          case InsertionMode.IN_TABLE_TEXT: {
            tokenInTableText(this, token);
            break;
          }
          case InsertionMode.IN_TEMPLATE: {
            eofInTemplate(this, token);
            break;
          }
          case InsertionMode.AFTER_BODY:
          case InsertionMode.IN_FRAMESET:
          case InsertionMode.AFTER_FRAMESET:
          case InsertionMode.AFTER_AFTER_BODY:
          case InsertionMode.AFTER_AFTER_FRAMESET: {
            stopParsing(this, token);
            break;
          }
          default:
        }
      }
      onWhitespaceCharacter(token) {
        if (this.skipNextNewLine && (this.skipNextNewLine = !1, token.chars.charCodeAt(0) === CODE_POINTS.LINE_FEED)) {
          if (token.chars.length === 1)
            return;
          token.chars = token.chars.substr(1);
        }
        if (this.tokenizer.inForeignNode) {
          this._insertCharacters(token);
          return;
        }
        switch (this.insertionMode) {
          case InsertionMode.IN_HEAD:
          case InsertionMode.IN_HEAD_NO_SCRIPT:
          case InsertionMode.AFTER_HEAD:
          case InsertionMode.TEXT:
          case InsertionMode.IN_COLUMN_GROUP:
          case InsertionMode.IN_SELECT:
          case InsertionMode.IN_SELECT_IN_TABLE:
          case InsertionMode.IN_FRAMESET:
          case InsertionMode.AFTER_FRAMESET: {
            this._insertCharacters(token);
            break;
          }
          case InsertionMode.IN_BODY:
          case InsertionMode.IN_CAPTION:
          case InsertionMode.IN_CELL:
          case InsertionMode.IN_TEMPLATE:
          case InsertionMode.AFTER_BODY:
          case InsertionMode.AFTER_AFTER_BODY:
          case InsertionMode.AFTER_AFTER_FRAMESET: {
            whitespaceCharacterInBody(this, token);
            break;
          }
          case InsertionMode.IN_TABLE:
          case InsertionMode.IN_TABLE_BODY:
          case InsertionMode.IN_ROW: {
            characterInTable(this, token);
            break;
          }
          case InsertionMode.IN_TABLE_TEXT: {
            whitespaceCharacterInTableText(this, token);
            break;
          }
          default:
        }
      }
    };
    TABLE_VOID_ELEMENTS = /* @__PURE__ */ new Set([TAG_ID.CAPTION, TAG_ID.COL, TAG_ID.COLGROUP, TAG_ID.TBODY, TAG_ID.TD, TAG_ID.TFOOT, TAG_ID.TH, TAG_ID.THEAD, TAG_ID.TR]);
  }
});

// node_modules/entities/lib/esm/escape.js
function getEscaper(regex, map2) {
  return function(data) {
    let match, lastIdx = 0, result = "";
    for (; match = regex.exec(data); )
      lastIdx !== match.index && (result += data.substring(lastIdx, match.index)), result += map2.get(match[0].charCodeAt(0)), lastIdx = match.index + 1;
    return result + data.substring(lastIdx);
  };
}
var xmlCodeMap, getCodePoint, escapeUTF8, escapeAttribute, escapeText, init_escape = __esm({
  "node_modules/entities/lib/esm/escape.js"() {
    xmlCodeMap = /* @__PURE__ */ new Map([
      [34, "&quot;"],
      [38, "&amp;"],
      [39, "&apos;"],
      [60, "&lt;"],
      [62, "&gt;"]
    ]), getCodePoint = String.prototype.codePointAt != null ? (str2, index2) => str2.codePointAt(index2) : (c, index2) => (c.charCodeAt(index2) & 64512) === 55296 ? (c.charCodeAt(index2) - 55296) * 1024 + c.charCodeAt(index2 + 1) - 56320 + 65536 : c.charCodeAt(index2);
    escapeUTF8 = getEscaper(/[&<>'"]/g, xmlCodeMap), escapeAttribute = getEscaper(/["&\u00A0]/g, /* @__PURE__ */ new Map([
      [34, "&quot;"],
      [38, "&amp;"],
      [160, "&nbsp;"]
    ])), escapeText = getEscaper(/[&<>\u00A0]/g, /* @__PURE__ */ new Map([
      [38, "&amp;"],
      [60, "&lt;"],
      [62, "&gt;"],
      [160, "&nbsp;"]
    ]));
  }
});

// node_modules/parse5/dist/serializer/index.js
function isVoidElement(node2, options2) {
  return options2.treeAdapter.isElementNode(node2) && options2.treeAdapter.getNamespaceURI(node2) === NS.HTML && VOID_ELEMENTS.has(options2.treeAdapter.getTagName(node2));
}
function serialize(node2, options2) {
  let opts = { ...defaultOpts, ...options2 };
  return isVoidElement(node2, opts) ? "" : serializeChildNodes(node2, opts);
}
function serializeOuter(node2, options2) {
  let opts = { ...defaultOpts, ...options2 };
  return serializeNode(node2, opts);
}
function serializeChildNodes(parentNode, options2) {
  let html6 = "", container = options2.treeAdapter.isElementNode(parentNode) && options2.treeAdapter.getTagName(parentNode) === TAG_NAMES.TEMPLATE && options2.treeAdapter.getNamespaceURI(parentNode) === NS.HTML ? options2.treeAdapter.getTemplateContent(parentNode) : parentNode, childNodes = options2.treeAdapter.getChildNodes(container);
  if (childNodes)
    for (let currentNode of childNodes)
      html6 += serializeNode(currentNode, options2);
  return html6;
}
function serializeNode(node2, options2) {
  return options2.treeAdapter.isElementNode(node2) ? serializeElement(node2, options2) : options2.treeAdapter.isTextNode(node2) ? serializeTextNode(node2, options2) : options2.treeAdapter.isCommentNode(node2) ? serializeCommentNode(node2, options2) : options2.treeAdapter.isDocumentTypeNode(node2) ? serializeDocumentTypeNode(node2, options2) : "";
}
function serializeElement(node2, options2) {
  let tn = options2.treeAdapter.getTagName(node2);
  return `<${tn}${serializeAttributes(node2, options2)}>${isVoidElement(node2, options2) ? "" : `${serializeChildNodes(node2, options2)}</${tn}>`}`;
}
function serializeAttributes(node2, { treeAdapter }) {
  let html6 = "";
  for (let attr of treeAdapter.getAttrList(node2)) {
    if (html6 += " ", !attr.namespace)
      html6 += attr.name;
    else
      switch (attr.namespace) {
        case NS.XML: {
          html6 += `xml:${attr.name}`;
          break;
        }
        case NS.XMLNS: {
          attr.name !== "xmlns" && (html6 += "xmlns:"), html6 += attr.name;
          break;
        }
        case NS.XLINK: {
          html6 += `xlink:${attr.name}`;
          break;
        }
        default:
          html6 += `${attr.prefix}:${attr.name}`;
      }
    html6 += `="${escapeAttribute(attr.value)}"`;
  }
  return html6;
}
function serializeTextNode(node2, options2) {
  let { treeAdapter } = options2, content3 = treeAdapter.getTextNodeContent(node2), parent = treeAdapter.getParentNode(node2), parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);
  return parentTn && treeAdapter.getNamespaceURI(parent) === NS.HTML && hasUnescapedText(parentTn, options2.scriptingEnabled) ? content3 : escapeText(content3);
}
function serializeCommentNode(node2, { treeAdapter }) {
  return `<!--${treeAdapter.getCommentNodeContent(node2)}-->`;
}
function serializeDocumentTypeNode(node2, { treeAdapter }) {
  return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node2)}>`;
}
var VOID_ELEMENTS, defaultOpts, init_serializer = __esm({
  "node_modules/parse5/dist/serializer/index.js"() {
    init_html3();
    init_escape();
    init_default();
    VOID_ELEMENTS = /* @__PURE__ */ new Set([
      TAG_NAMES.AREA,
      TAG_NAMES.BASE,
      TAG_NAMES.BASEFONT,
      TAG_NAMES.BGSOUND,
      TAG_NAMES.BR,
      TAG_NAMES.COL,
      TAG_NAMES.EMBED,
      TAG_NAMES.FRAME,
      TAG_NAMES.HR,
      TAG_NAMES.IMG,
      TAG_NAMES.INPUT,
      TAG_NAMES.KEYGEN,
      TAG_NAMES.LINK,
      TAG_NAMES.META,
      TAG_NAMES.PARAM,
      TAG_NAMES.SOURCE,
      TAG_NAMES.TRACK,
      TAG_NAMES.WBR
    ]);
    defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: !0 };
  }
});

// node_modules/parse5/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  ErrorCodes: () => ERR,
  Parser: () => Parser,
  Token: () => token_exports,
  Tokenizer: () => Tokenizer,
  TokenizerMode: () => TokenizerMode,
  defaultTreeAdapter: () => defaultTreeAdapter,
  foreignContent: () => foreign_content_exports,
  html: () => html_exports,
  parse: () => parse4,
  parseFragment: () => parseFragment,
  serialize: () => serialize,
  serializeOuter: () => serializeOuter
});
function parse4(html6, options2) {
  return Parser.parse(html6, options2);
}
function parseFragment(fragmentContext, html6, options2) {
  typeof fragmentContext == "string" && (options2 = html6, html6 = fragmentContext, fragmentContext = null);
  let parser = Parser.getFragmentParser(fragmentContext, options2);
  return parser.tokenizer.write(html6, !0), parser.getFragment();
}
var init_dist = __esm({
  "node_modules/parse5/dist/index.js"() {
    init_parser();
    init_default();
    init_parser();
    init_serializer();
    init_error_codes();
    init_foreign_content();
    init_html3();
    init_token();
    init_tokenizer();
  }
});

// node_modules/@remark-embedder/core/dist/index.js
var require_dist5 = __commonJS({
  "node_modules/@remark-embedder/core/dist/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: !0
    });
    exports2.default = void 0;
    var htmlToHast = async (string3) => {
      let {
        fromParse5: fromParse52
      } = await Promise.resolve().then(() => (init_hast_util_from_parse5(), hast_util_from_parse5_exports)), parse52 = await Promise.resolve().then(() => (init_dist(), dist_exports));
      return fromParse52(parse52.parseFragment(string3)).children[0];
    }, getUrlString = (url) => {
      let urlString = url.startsWith("http") ? url : `https://${url}`;
      try {
        return new URL(urlString).toString();
      } catch {
        return null;
      }
    }, remarkEmbedder2 = ({
      cache,
      transformers,
      handleHTML,
      handleError
    }) => {
      let transformersAndConfig = transformers.map((t) => Array.isArray(t) ? {
        config: t[1],
        transformer: t[0]
      } : {
        transformer: t
      });
      return async (tree) => {
        let {
          visit: visit2
        } = await Promise.resolve().then(() => (init_unist_util_visit(), unist_util_visit_exports)), nodeAndURL = [];
        visit2(tree, "paragraph", (paragraphNode) => {
          if (paragraphNode.children.length !== 1)
            return;
          let {
            children
          } = paragraphNode, node2 = children[0], isText = node2.type === "text", isValidLink = node2.type === "link" && !node2.title && node2.children.length === 1 && node2.children[0].type === "text" && node2.children[0].value === node2.url;
          if (!(isText || isValidLink))
            return;
          let value = isText ? node2.value : node2.url, urlString = getUrlString(value);
          !urlString || nodeAndURL.push({
            parentNode: paragraphNode,
            url: urlString
          });
        });
        let nodesToTransform = [];
        for (let node2 of nodeAndURL)
          for (let transformerAndConfig of transformersAndConfig)
            if (await transformerAndConfig.transformer.shouldTransform(node2.url)) {
              nodesToTransform.push({
                ...node2,
                ...transformerAndConfig
              });
              break;
            }
        let promises = nodesToTransform.map(async ({
          parentNode,
          url,
          transformer,
          config
        }) => {
          let errorMessageBanner = `The following error occurred while processing \`${url}\` with the remark-embedder transformer \`${transformer.name}\`:`;
          try {
            let cacheKey = `remark-embedder:${transformer.name}:${url}`, html6 = await (cache == null ? void 0 : cache.get(cacheKey));
            if (!html6)
              try {
                var _html$trim, _html;
                if (html6 = await transformer.getHTML(url, config), html6 = (_html$trim = (_html = html6) == null ? void 0 : _html.trim()) != null ? _html$trim : null, await (cache == null ? void 0 : cache.set(cacheKey, html6)), handleHTML) {
                  var _html$trim2, _html2;
                  html6 = await handleHTML(html6, {
                    url,
                    transformer,
                    config
                  }), html6 = (_html$trim2 = (_html2 = html6) == null ? void 0 : _html2.trim()) != null ? _html$trim2 : null;
                }
              } catch (e) {
                if (handleError) {
                  var _html$trim3, _html3;
                  let error = e;
                  console.error(`${errorMessageBanner}

${error.message}`), html6 = await handleError({
                    error,
                    url,
                    transformer,
                    config
                  }), html6 = (_html$trim3 = (_html3 = html6) == null ? void 0 : _html3.trim()) != null ? _html$trim3 : null;
                } else
                  throw e;
              }
            if (!html6)
              return;
            let htmlElement = await htmlToHast(html6);
            parentNode.data = {
              hChildren: htmlElement.children,
              hName: htmlElement.tagName,
              hProperties: htmlElement.properties
            };
          } catch (e) {
            let error = e;
            throw error.message = `${errorMessageBanner}

${error.message}`, error;
          }
        });
        return await Promise.all(promises), tree;
      };
    }, _default = remarkEmbedder2;
    exports2.default = _default;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/common/unicode.js
var require_unicode2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/common/unicode.js"(exports2) {
    "use strict";
    var UNDEFINED_CODE_POINTS2 = [
      65534,
      65535,
      131070,
      131071,
      196606,
      196607,
      262142,
      262143,
      327678,
      327679,
      393214,
      393215,
      458750,
      458751,
      524286,
      524287,
      589822,
      589823,
      655358,
      655359,
      720894,
      720895,
      786430,
      786431,
      851966,
      851967,
      917502,
      917503,
      983038,
      983039,
      1048574,
      1048575,
      1114110,
      1114111
    ];
    exports2.REPLACEMENT_CHARACTER = "\uFFFD";
    exports2.CODE_POINTS = {
      EOF: -1,
      NULL: 0,
      TABULATION: 9,
      CARRIAGE_RETURN: 13,
      LINE_FEED: 10,
      FORM_FEED: 12,
      SPACE: 32,
      EXCLAMATION_MARK: 33,
      QUOTATION_MARK: 34,
      NUMBER_SIGN: 35,
      AMPERSAND: 38,
      APOSTROPHE: 39,
      HYPHEN_MINUS: 45,
      SOLIDUS: 47,
      DIGIT_0: 48,
      DIGIT_9: 57,
      SEMICOLON: 59,
      LESS_THAN_SIGN: 60,
      EQUALS_SIGN: 61,
      GREATER_THAN_SIGN: 62,
      QUESTION_MARK: 63,
      LATIN_CAPITAL_A: 65,
      LATIN_CAPITAL_F: 70,
      LATIN_CAPITAL_X: 88,
      LATIN_CAPITAL_Z: 90,
      RIGHT_SQUARE_BRACKET: 93,
      GRAVE_ACCENT: 96,
      LATIN_SMALL_A: 97,
      LATIN_SMALL_F: 102,
      LATIN_SMALL_X: 120,
      LATIN_SMALL_Z: 122,
      REPLACEMENT_CHARACTER: 65533
    };
    exports2.CODE_POINT_SEQUENCES = {
      DASH_DASH_STRING: [45, 45],
      DOCTYPE_STRING: [68, 79, 67, 84, 89, 80, 69],
      CDATA_START_STRING: [91, 67, 68, 65, 84, 65, 91],
      SCRIPT_STRING: [115, 99, 114, 105, 112, 116],
      PUBLIC_STRING: [80, 85, 66, 76, 73, 67],
      SYSTEM_STRING: [83, 89, 83, 84, 69, 77]
    };
    exports2.isSurrogate = function(cp) {
      return cp >= 55296 && cp <= 57343;
    };
    exports2.isSurrogatePair = function(cp) {
      return cp >= 56320 && cp <= 57343;
    };
    exports2.getSurrogatePairCodePoint = function(cp1, cp2) {
      return (cp1 - 55296) * 1024 + 9216 + cp2;
    };
    exports2.isControlCodePoint = function(cp) {
      return cp !== 32 && cp !== 10 && cp !== 13 && cp !== 9 && cp !== 12 && cp >= 1 && cp <= 31 || cp >= 127 && cp <= 159;
    };
    exports2.isUndefinedCodePoint = function(cp) {
      return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS2.indexOf(cp) > -1;
    };
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/common/error-codes.js
var require_error_codes2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/common/error-codes.js"(exports2, module2) {
    "use strict";
    module2.exports = {
      controlCharacterInInputStream: "control-character-in-input-stream",
      noncharacterInInputStream: "noncharacter-in-input-stream",
      surrogateInInputStream: "surrogate-in-input-stream",
      nonVoidHtmlElementStartTagWithTrailingSolidus: "non-void-html-element-start-tag-with-trailing-solidus",
      endTagWithAttributes: "end-tag-with-attributes",
      endTagWithTrailingSolidus: "end-tag-with-trailing-solidus",
      unexpectedSolidusInTag: "unexpected-solidus-in-tag",
      unexpectedNullCharacter: "unexpected-null-character",
      unexpectedQuestionMarkInsteadOfTagName: "unexpected-question-mark-instead-of-tag-name",
      invalidFirstCharacterOfTagName: "invalid-first-character-of-tag-name",
      unexpectedEqualsSignBeforeAttributeName: "unexpected-equals-sign-before-attribute-name",
      missingEndTagName: "missing-end-tag-name",
      unexpectedCharacterInAttributeName: "unexpected-character-in-attribute-name",
      unknownNamedCharacterReference: "unknown-named-character-reference",
      missingSemicolonAfterCharacterReference: "missing-semicolon-after-character-reference",
      unexpectedCharacterAfterDoctypeSystemIdentifier: "unexpected-character-after-doctype-system-identifier",
      unexpectedCharacterInUnquotedAttributeValue: "unexpected-character-in-unquoted-attribute-value",
      eofBeforeTagName: "eof-before-tag-name",
      eofInTag: "eof-in-tag",
      missingAttributeValue: "missing-attribute-value",
      missingWhitespaceBetweenAttributes: "missing-whitespace-between-attributes",
      missingWhitespaceAfterDoctypePublicKeyword: "missing-whitespace-after-doctype-public-keyword",
      missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: "missing-whitespace-between-doctype-public-and-system-identifiers",
      missingWhitespaceAfterDoctypeSystemKeyword: "missing-whitespace-after-doctype-system-keyword",
      missingQuoteBeforeDoctypePublicIdentifier: "missing-quote-before-doctype-public-identifier",
      missingQuoteBeforeDoctypeSystemIdentifier: "missing-quote-before-doctype-system-identifier",
      missingDoctypePublicIdentifier: "missing-doctype-public-identifier",
      missingDoctypeSystemIdentifier: "missing-doctype-system-identifier",
      abruptDoctypePublicIdentifier: "abrupt-doctype-public-identifier",
      abruptDoctypeSystemIdentifier: "abrupt-doctype-system-identifier",
      cdataInHtmlContent: "cdata-in-html-content",
      incorrectlyOpenedComment: "incorrectly-opened-comment",
      eofInScriptHtmlCommentLikeText: "eof-in-script-html-comment-like-text",
      eofInDoctype: "eof-in-doctype",
      nestedComment: "nested-comment",
      abruptClosingOfEmptyComment: "abrupt-closing-of-empty-comment",
      eofInComment: "eof-in-comment",
      incorrectlyClosedComment: "incorrectly-closed-comment",
      eofInCdata: "eof-in-cdata",
      absenceOfDigitsInNumericCharacterReference: "absence-of-digits-in-numeric-character-reference",
      nullCharacterReference: "null-character-reference",
      surrogateCharacterReference: "surrogate-character-reference",
      characterReferenceOutsideUnicodeRange: "character-reference-outside-unicode-range",
      controlCharacterReference: "control-character-reference",
      noncharacterCharacterReference: "noncharacter-character-reference",
      missingWhitespaceBeforeDoctypeName: "missing-whitespace-before-doctype-name",
      missingDoctypeName: "missing-doctype-name",
      invalidCharacterSequenceAfterDoctypeName: "invalid-character-sequence-after-doctype-name",
      duplicateAttribute: "duplicate-attribute",
      nonConformingDoctype: "non-conforming-doctype",
      missingDoctype: "missing-doctype",
      misplacedDoctype: "misplaced-doctype",
      endTagWithoutMatchingOpenElement: "end-tag-without-matching-open-element",
      closingOfElementWithOpenChildElements: "closing-of-element-with-open-child-elements",
      disallowedContentInNoscriptInHead: "disallowed-content-in-noscript-in-head",
      openElementsLeftAfterEof: "open-elements-left-after-eof",
      abandonedHeadElementChild: "abandoned-head-element-child",
      misplacedStartTagForHeadElement: "misplaced-start-tag-for-head-element",
      nestedNoscriptInHead: "nested-noscript-in-head",
      eofInElementThatCanContainOnlyText: "eof-in-element-that-can-contain-only-text"
    };
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/tokenizer/preprocessor.js
var require_preprocessor2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/tokenizer/preprocessor.js"(exports2, module2) {
    "use strict";
    var unicode = require_unicode2(), ERR2 = require_error_codes2(), $2 = unicode.CODE_POINTS, DEFAULT_BUFFER_WATERLINE2 = 1 << 16, Preprocessor2 = class {
      constructor() {
        this.html = null, this.pos = -1, this.lastGapPos = -1, this.lastCharPos = -1, this.gapStack = [], this.skipNextNewLine = !1, this.lastChunkWritten = !1, this.endOfChunkHit = !1, this.bufferWaterline = DEFAULT_BUFFER_WATERLINE2;
      }
      _err() {
      }
      _addGap() {
        this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos;
      }
      _processSurrogate(cp) {
        if (this.pos !== this.lastCharPos) {
          let nextCp = this.html.charCodeAt(this.pos + 1);
          if (unicode.isSurrogatePair(nextCp))
            return this.pos++, this._addGap(), unicode.getSurrogatePairCodePoint(cp, nextCp);
        } else if (!this.lastChunkWritten)
          return this.endOfChunkHit = !0, $2.EOF;
        return this._err(ERR2.surrogateInInputStream), cp;
      }
      dropParsedChunk() {
        this.pos > this.bufferWaterline && (this.lastCharPos -= this.pos, this.html = this.html.substring(this.pos), this.pos = 0, this.lastGapPos = -1, this.gapStack = []);
      }
      write(chunk, isLastChunk) {
        this.html ? this.html += chunk : this.html = chunk, this.lastCharPos = this.html.length - 1, this.endOfChunkHit = !1, this.lastChunkWritten = isLastChunk;
      }
      insertHtmlAtCurrentPos(chunk) {
        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length), this.lastCharPos = this.html.length - 1, this.endOfChunkHit = !1;
      }
      advance() {
        if (this.pos++, this.pos > this.lastCharPos)
          return this.endOfChunkHit = !this.lastChunkWritten, $2.EOF;
        let cp = this.html.charCodeAt(this.pos);
        return this.skipNextNewLine && cp === $2.LINE_FEED ? (this.skipNextNewLine = !1, this._addGap(), this.advance()) : cp === $2.CARRIAGE_RETURN ? (this.skipNextNewLine = !0, $2.LINE_FEED) : (this.skipNextNewLine = !1, unicode.isSurrogate(cp) && (cp = this._processSurrogate(cp)), cp > 31 && cp < 127 || cp === $2.LINE_FEED || cp === $2.CARRIAGE_RETURN || cp > 159 && cp < 64976 || this._checkForProblematicCharacters(cp), cp);
      }
      _checkForProblematicCharacters(cp) {
        unicode.isControlCodePoint(cp) ? this._err(ERR2.controlCharacterInInputStream) : unicode.isUndefinedCodePoint(cp) && this._err(ERR2.noncharacterInInputStream);
      }
      retreat() {
        this.pos === this.lastGapPos && (this.lastGapPos = this.gapStack.pop(), this.pos--), this.pos--;
      }
    };
    module2.exports = Preprocessor2;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/tokenizer/named-entity-data.js
var require_named_entity_data2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/tokenizer/named-entity-data.js"(exports2, module2) {
    "use strict";
    module2.exports = new Uint16Array([4, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 106, 303, 412, 810, 1432, 1701, 1796, 1987, 2114, 2360, 2420, 2484, 3170, 3251, 4140, 4393, 4575, 4610, 5106, 5512, 5728, 6117, 6274, 6315, 6345, 6427, 6516, 7002, 7910, 8733, 9323, 9870, 10170, 10631, 10893, 11318, 11386, 11467, 12773, 13092, 14474, 14922, 15448, 15542, 16419, 17666, 18166, 18611, 19004, 19095, 19298, 19397, 4, 16, 69, 77, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 140, 150, 158, 169, 176, 194, 199, 210, 216, 222, 226, 242, 256, 266, 283, 294, 108, 105, 103, 5, 198, 1, 59, 148, 1, 198, 80, 5, 38, 1, 59, 156, 1, 38, 99, 117, 116, 101, 5, 193, 1, 59, 167, 1, 193, 114, 101, 118, 101, 59, 1, 258, 4, 2, 105, 121, 182, 191, 114, 99, 5, 194, 1, 59, 189, 1, 194, 59, 1, 1040, 114, 59, 3, 55349, 56580, 114, 97, 118, 101, 5, 192, 1, 59, 208, 1, 192, 112, 104, 97, 59, 1, 913, 97, 99, 114, 59, 1, 256, 100, 59, 1, 10835, 4, 2, 103, 112, 232, 237, 111, 110, 59, 1, 260, 102, 59, 3, 55349, 56632, 112, 108, 121, 70, 117, 110, 99, 116, 105, 111, 110, 59, 1, 8289, 105, 110, 103, 5, 197, 1, 59, 264, 1, 197, 4, 2, 99, 115, 272, 277, 114, 59, 3, 55349, 56476, 105, 103, 110, 59, 1, 8788, 105, 108, 100, 101, 5, 195, 1, 59, 292, 1, 195, 109, 108, 5, 196, 1, 59, 301, 1, 196, 4, 8, 97, 99, 101, 102, 111, 114, 115, 117, 321, 350, 354, 383, 388, 394, 400, 405, 4, 2, 99, 114, 327, 336, 107, 115, 108, 97, 115, 104, 59, 1, 8726, 4, 2, 118, 119, 342, 345, 59, 1, 10983, 101, 100, 59, 1, 8966, 121, 59, 1, 1041, 4, 3, 99, 114, 116, 362, 369, 379, 97, 117, 115, 101, 59, 1, 8757, 110, 111, 117, 108, 108, 105, 115, 59, 1, 8492, 97, 59, 1, 914, 114, 59, 3, 55349, 56581, 112, 102, 59, 3, 55349, 56633, 101, 118, 101, 59, 1, 728, 99, 114, 59, 1, 8492, 109, 112, 101, 113, 59, 1, 8782, 4, 14, 72, 79, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 117, 442, 447, 456, 504, 542, 547, 569, 573, 577, 616, 678, 784, 790, 796, 99, 121, 59, 1, 1063, 80, 89, 5, 169, 1, 59, 454, 1, 169, 4, 3, 99, 112, 121, 464, 470, 497, 117, 116, 101, 59, 1, 262, 4, 2, 59, 105, 476, 478, 1, 8914, 116, 97, 108, 68, 105, 102, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8517, 108, 101, 121, 115, 59, 1, 8493, 4, 4, 97, 101, 105, 111, 514, 520, 530, 535, 114, 111, 110, 59, 1, 268, 100, 105, 108, 5, 199, 1, 59, 528, 1, 199, 114, 99, 59, 1, 264, 110, 105, 110, 116, 59, 1, 8752, 111, 116, 59, 1, 266, 4, 2, 100, 110, 553, 560, 105, 108, 108, 97, 59, 1, 184, 116, 101, 114, 68, 111, 116, 59, 1, 183, 114, 59, 1, 8493, 105, 59, 1, 935, 114, 99, 108, 101, 4, 4, 68, 77, 80, 84, 591, 596, 603, 609, 111, 116, 59, 1, 8857, 105, 110, 117, 115, 59, 1, 8854, 108, 117, 115, 59, 1, 8853, 105, 109, 101, 115, 59, 1, 8855, 111, 4, 2, 99, 115, 623, 646, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8754, 101, 67, 117, 114, 108, 121, 4, 2, 68, 81, 658, 671, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8221, 117, 111, 116, 101, 59, 1, 8217, 4, 4, 108, 110, 112, 117, 688, 701, 736, 753, 111, 110, 4, 2, 59, 101, 696, 698, 1, 8759, 59, 1, 10868, 4, 3, 103, 105, 116, 709, 717, 722, 114, 117, 101, 110, 116, 59, 1, 8801, 110, 116, 59, 1, 8751, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8750, 4, 2, 102, 114, 742, 745, 59, 1, 8450, 111, 100, 117, 99, 116, 59, 1, 8720, 110, 116, 101, 114, 67, 108, 111, 99, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8755, 111, 115, 115, 59, 1, 10799, 99, 114, 59, 3, 55349, 56478, 112, 4, 2, 59, 67, 803, 805, 1, 8915, 97, 112, 59, 1, 8781, 4, 11, 68, 74, 83, 90, 97, 99, 101, 102, 105, 111, 115, 834, 850, 855, 860, 865, 888, 903, 916, 921, 1011, 1415, 4, 2, 59, 111, 840, 842, 1, 8517, 116, 114, 97, 104, 100, 59, 1, 10513, 99, 121, 59, 1, 1026, 99, 121, 59, 1, 1029, 99, 121, 59, 1, 1039, 4, 3, 103, 114, 115, 873, 879, 883, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8609, 104, 118, 59, 1, 10980, 4, 2, 97, 121, 894, 900, 114, 111, 110, 59, 1, 270, 59, 1, 1044, 108, 4, 2, 59, 116, 910, 912, 1, 8711, 97, 59, 1, 916, 114, 59, 3, 55349, 56583, 4, 2, 97, 102, 927, 998, 4, 2, 99, 109, 933, 992, 114, 105, 116, 105, 99, 97, 108, 4, 4, 65, 68, 71, 84, 950, 957, 978, 985, 99, 117, 116, 101, 59, 1, 180, 111, 4, 2, 116, 117, 964, 967, 59, 1, 729, 98, 108, 101, 65, 99, 117, 116, 101, 59, 1, 733, 114, 97, 118, 101, 59, 1, 96, 105, 108, 100, 101, 59, 1, 732, 111, 110, 100, 59, 1, 8900, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8518, 4, 4, 112, 116, 117, 119, 1021, 1026, 1048, 1249, 102, 59, 3, 55349, 56635, 4, 3, 59, 68, 69, 1034, 1036, 1041, 1, 168, 111, 116, 59, 1, 8412, 113, 117, 97, 108, 59, 1, 8784, 98, 108, 101, 4, 6, 67, 68, 76, 82, 85, 86, 1065, 1082, 1101, 1189, 1211, 1236, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8751, 111, 4, 2, 116, 119, 1089, 1092, 59, 1, 168, 110, 65, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 101, 111, 1107, 1141, 102, 116, 4, 3, 65, 82, 84, 1117, 1124, 1136, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8660, 101, 101, 59, 1, 10980, 110, 103, 4, 2, 76, 82, 1149, 1177, 101, 102, 116, 4, 2, 65, 82, 1158, 1165, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10233, 105, 103, 104, 116, 4, 2, 65, 84, 1199, 1206, 114, 114, 111, 119, 59, 1, 8658, 101, 101, 59, 1, 8872, 112, 4, 2, 65, 68, 1218, 1225, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8741, 110, 4, 6, 65, 66, 76, 82, 84, 97, 1264, 1292, 1299, 1352, 1391, 1408, 114, 114, 111, 119, 4, 3, 59, 66, 85, 1276, 1278, 1283, 1, 8595, 97, 114, 59, 1, 10515, 112, 65, 114, 114, 111, 119, 59, 1, 8693, 114, 101, 118, 101, 59, 1, 785, 101, 102, 116, 4, 3, 82, 84, 86, 1310, 1323, 1334, 105, 103, 104, 116, 86, 101, 99, 116, 111, 114, 59, 1, 10576, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10590, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1345, 1347, 1, 8637, 97, 114, 59, 1, 10582, 105, 103, 104, 116, 4, 2, 84, 86, 1362, 1373, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10591, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1384, 1386, 1, 8641, 97, 114, 59, 1, 10583, 101, 101, 4, 2, 59, 65, 1399, 1401, 1, 8868, 114, 114, 111, 119, 59, 1, 8615, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 99, 116, 1421, 1426, 114, 59, 3, 55349, 56479, 114, 111, 107, 59, 1, 272, 4, 16, 78, 84, 97, 99, 100, 102, 103, 108, 109, 111, 112, 113, 115, 116, 117, 120, 1466, 1470, 1478, 1489, 1515, 1520, 1525, 1536, 1544, 1593, 1609, 1617, 1650, 1664, 1668, 1677, 71, 59, 1, 330, 72, 5, 208, 1, 59, 1476, 1, 208, 99, 117, 116, 101, 5, 201, 1, 59, 1487, 1, 201, 4, 3, 97, 105, 121, 1497, 1503, 1512, 114, 111, 110, 59, 1, 282, 114, 99, 5, 202, 1, 59, 1510, 1, 202, 59, 1, 1069, 111, 116, 59, 1, 278, 114, 59, 3, 55349, 56584, 114, 97, 118, 101, 5, 200, 1, 59, 1534, 1, 200, 101, 109, 101, 110, 116, 59, 1, 8712, 4, 2, 97, 112, 1550, 1555, 99, 114, 59, 1, 274, 116, 121, 4, 2, 83, 86, 1563, 1576, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9723, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9643, 4, 2, 103, 112, 1599, 1604, 111, 110, 59, 1, 280, 102, 59, 3, 55349, 56636, 115, 105, 108, 111, 110, 59, 1, 917, 117, 4, 2, 97, 105, 1624, 1640, 108, 4, 2, 59, 84, 1631, 1633, 1, 10869, 105, 108, 100, 101, 59, 1, 8770, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8652, 4, 2, 99, 105, 1656, 1660, 114, 59, 1, 8496, 109, 59, 1, 10867, 97, 59, 1, 919, 109, 108, 5, 203, 1, 59, 1675, 1, 203, 4, 2, 105, 112, 1683, 1689, 115, 116, 115, 59, 1, 8707, 111, 110, 101, 110, 116, 105, 97, 108, 69, 59, 1, 8519, 4, 5, 99, 102, 105, 111, 115, 1713, 1717, 1722, 1762, 1791, 121, 59, 1, 1060, 114, 59, 3, 55349, 56585, 108, 108, 101, 100, 4, 2, 83, 86, 1732, 1745, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9724, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9642, 4, 3, 112, 114, 117, 1770, 1775, 1781, 102, 59, 3, 55349, 56637, 65, 108, 108, 59, 1, 8704, 114, 105, 101, 114, 116, 114, 102, 59, 1, 8497, 99, 114, 59, 1, 8497, 4, 12, 74, 84, 97, 98, 99, 100, 102, 103, 111, 114, 115, 116, 1822, 1827, 1834, 1848, 1855, 1877, 1882, 1887, 1890, 1896, 1978, 1984, 99, 121, 59, 1, 1027, 5, 62, 1, 59, 1832, 1, 62, 109, 109, 97, 4, 2, 59, 100, 1843, 1845, 1, 915, 59, 1, 988, 114, 101, 118, 101, 59, 1, 286, 4, 3, 101, 105, 121, 1863, 1869, 1874, 100, 105, 108, 59, 1, 290, 114, 99, 59, 1, 284, 59, 1, 1043, 111, 116, 59, 1, 288, 114, 59, 3, 55349, 56586, 59, 1, 8921, 112, 102, 59, 3, 55349, 56638, 101, 97, 116, 101, 114, 4, 6, 69, 70, 71, 76, 83, 84, 1915, 1933, 1944, 1953, 1959, 1971, 113, 117, 97, 108, 4, 2, 59, 76, 1925, 1927, 1, 8805, 101, 115, 115, 59, 1, 8923, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8807, 114, 101, 97, 116, 101, 114, 59, 1, 10914, 101, 115, 115, 59, 1, 8823, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10878, 105, 108, 100, 101, 59, 1, 8819, 99, 114, 59, 3, 55349, 56482, 59, 1, 8811, 4, 8, 65, 97, 99, 102, 105, 111, 115, 117, 2005, 2012, 2026, 2032, 2036, 2049, 2073, 2089, 82, 68, 99, 121, 59, 1, 1066, 4, 2, 99, 116, 2018, 2023, 101, 107, 59, 1, 711, 59, 1, 94, 105, 114, 99, 59, 1, 292, 114, 59, 1, 8460, 108, 98, 101, 114, 116, 83, 112, 97, 99, 101, 59, 1, 8459, 4, 2, 112, 114, 2055, 2059, 102, 59, 1, 8461, 105, 122, 111, 110, 116, 97, 108, 76, 105, 110, 101, 59, 1, 9472, 4, 2, 99, 116, 2079, 2083, 114, 59, 1, 8459, 114, 111, 107, 59, 1, 294, 109, 112, 4, 2, 68, 69, 2097, 2107, 111, 119, 110, 72, 117, 109, 112, 59, 1, 8782, 113, 117, 97, 108, 59, 1, 8783, 4, 14, 69, 74, 79, 97, 99, 100, 102, 103, 109, 110, 111, 115, 116, 117, 2144, 2149, 2155, 2160, 2171, 2189, 2194, 2198, 2209, 2245, 2307, 2329, 2334, 2341, 99, 121, 59, 1, 1045, 108, 105, 103, 59, 1, 306, 99, 121, 59, 1, 1025, 99, 117, 116, 101, 5, 205, 1, 59, 2169, 1, 205, 4, 2, 105, 121, 2177, 2186, 114, 99, 5, 206, 1, 59, 2184, 1, 206, 59, 1, 1048, 111, 116, 59, 1, 304, 114, 59, 1, 8465, 114, 97, 118, 101, 5, 204, 1, 59, 2207, 1, 204, 4, 3, 59, 97, 112, 2217, 2219, 2238, 1, 8465, 4, 2, 99, 103, 2225, 2229, 114, 59, 1, 298, 105, 110, 97, 114, 121, 73, 59, 1, 8520, 108, 105, 101, 115, 59, 1, 8658, 4, 2, 116, 118, 2251, 2281, 4, 2, 59, 101, 2257, 2259, 1, 8748, 4, 2, 103, 114, 2265, 2271, 114, 97, 108, 59, 1, 8747, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8898, 105, 115, 105, 98, 108, 101, 4, 2, 67, 84, 2293, 2300, 111, 109, 109, 97, 59, 1, 8291, 105, 109, 101, 115, 59, 1, 8290, 4, 3, 103, 112, 116, 2315, 2320, 2325, 111, 110, 59, 1, 302, 102, 59, 3, 55349, 56640, 97, 59, 1, 921, 99, 114, 59, 1, 8464, 105, 108, 100, 101, 59, 1, 296, 4, 2, 107, 109, 2347, 2352, 99, 121, 59, 1, 1030, 108, 5, 207, 1, 59, 2358, 1, 207, 4, 5, 99, 102, 111, 115, 117, 2372, 2386, 2391, 2397, 2414, 4, 2, 105, 121, 2378, 2383, 114, 99, 59, 1, 308, 59, 1, 1049, 114, 59, 3, 55349, 56589, 112, 102, 59, 3, 55349, 56641, 4, 2, 99, 101, 2403, 2408, 114, 59, 3, 55349, 56485, 114, 99, 121, 59, 1, 1032, 107, 99, 121, 59, 1, 1028, 4, 7, 72, 74, 97, 99, 102, 111, 115, 2436, 2441, 2446, 2452, 2467, 2472, 2478, 99, 121, 59, 1, 1061, 99, 121, 59, 1, 1036, 112, 112, 97, 59, 1, 922, 4, 2, 101, 121, 2458, 2464, 100, 105, 108, 59, 1, 310, 59, 1, 1050, 114, 59, 3, 55349, 56590, 112, 102, 59, 3, 55349, 56642, 99, 114, 59, 3, 55349, 56486, 4, 11, 74, 84, 97, 99, 101, 102, 108, 109, 111, 115, 116, 2508, 2513, 2520, 2562, 2585, 2981, 2986, 3004, 3011, 3146, 3167, 99, 121, 59, 1, 1033, 5, 60, 1, 59, 2518, 1, 60, 4, 5, 99, 109, 110, 112, 114, 2532, 2538, 2544, 2548, 2558, 117, 116, 101, 59, 1, 313, 98, 100, 97, 59, 1, 923, 103, 59, 1, 10218, 108, 97, 99, 101, 116, 114, 102, 59, 1, 8466, 114, 59, 1, 8606, 4, 3, 97, 101, 121, 2570, 2576, 2582, 114, 111, 110, 59, 1, 317, 100, 105, 108, 59, 1, 315, 59, 1, 1051, 4, 2, 102, 115, 2591, 2907, 116, 4, 10, 65, 67, 68, 70, 82, 84, 85, 86, 97, 114, 2614, 2663, 2672, 2728, 2735, 2760, 2820, 2870, 2888, 2895, 4, 2, 110, 114, 2620, 2633, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10216, 114, 111, 119, 4, 3, 59, 66, 82, 2644, 2646, 2651, 1, 8592, 97, 114, 59, 1, 8676, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8646, 101, 105, 108, 105, 110, 103, 59, 1, 8968, 111, 4, 2, 117, 119, 2679, 2692, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10214, 110, 4, 2, 84, 86, 2699, 2710, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10593, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2721, 2723, 1, 8643, 97, 114, 59, 1, 10585, 108, 111, 111, 114, 59, 1, 8970, 105, 103, 104, 116, 4, 2, 65, 86, 2745, 2752, 114, 114, 111, 119, 59, 1, 8596, 101, 99, 116, 111, 114, 59, 1, 10574, 4, 2, 101, 114, 2766, 2792, 101, 4, 3, 59, 65, 86, 2775, 2777, 2784, 1, 8867, 114, 114, 111, 119, 59, 1, 8612, 101, 99, 116, 111, 114, 59, 1, 10586, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 2806, 2808, 2813, 1, 8882, 97, 114, 59, 1, 10703, 113, 117, 97, 108, 59, 1, 8884, 112, 4, 3, 68, 84, 86, 2829, 2841, 2852, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10577, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10592, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2863, 2865, 1, 8639, 97, 114, 59, 1, 10584, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2881, 2883, 1, 8636, 97, 114, 59, 1, 10578, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8660, 115, 4, 6, 69, 70, 71, 76, 83, 84, 2922, 2936, 2947, 2956, 2962, 2974, 113, 117, 97, 108, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8922, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8806, 114, 101, 97, 116, 101, 114, 59, 1, 8822, 101, 115, 115, 59, 1, 10913, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10877, 105, 108, 100, 101, 59, 1, 8818, 114, 59, 3, 55349, 56591, 4, 2, 59, 101, 2992, 2994, 1, 8920, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8666, 105, 100, 111, 116, 59, 1, 319, 4, 3, 110, 112, 119, 3019, 3110, 3115, 103, 4, 4, 76, 82, 108, 114, 3030, 3058, 3070, 3098, 101, 102, 116, 4, 2, 65, 82, 3039, 3046, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10231, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10230, 101, 102, 116, 4, 2, 97, 114, 3079, 3086, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10233, 102, 59, 3, 55349, 56643, 101, 114, 4, 2, 76, 82, 3123, 3134, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8601, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8600, 4, 3, 99, 104, 116, 3154, 3158, 3161, 114, 59, 1, 8466, 59, 1, 8624, 114, 111, 107, 59, 1, 321, 59, 1, 8810, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 3188, 3192, 3196, 3222, 3227, 3237, 3243, 3248, 112, 59, 1, 10501, 121, 59, 1, 1052, 4, 2, 100, 108, 3202, 3213, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8287, 108, 105, 110, 116, 114, 102, 59, 1, 8499, 114, 59, 3, 55349, 56592, 110, 117, 115, 80, 108, 117, 115, 59, 1, 8723, 112, 102, 59, 3, 55349, 56644, 99, 114, 59, 1, 8499, 59, 1, 924, 4, 9, 74, 97, 99, 101, 102, 111, 115, 116, 117, 3271, 3276, 3283, 3306, 3422, 3427, 4120, 4126, 4137, 99, 121, 59, 1, 1034, 99, 117, 116, 101, 59, 1, 323, 4, 3, 97, 101, 121, 3291, 3297, 3303, 114, 111, 110, 59, 1, 327, 100, 105, 108, 59, 1, 325, 59, 1, 1053, 4, 3, 103, 115, 119, 3314, 3380, 3415, 97, 116, 105, 118, 101, 4, 3, 77, 84, 86, 3327, 3340, 3365, 101, 100, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8203, 104, 105, 4, 2, 99, 110, 3348, 3357, 107, 83, 112, 97, 99, 101, 59, 1, 8203, 83, 112, 97, 99, 101, 59, 1, 8203, 101, 114, 121, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8203, 116, 101, 100, 4, 2, 71, 76, 3389, 3405, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8811, 101, 115, 115, 76, 101, 115, 115, 59, 1, 8810, 76, 105, 110, 101, 59, 1, 10, 114, 59, 3, 55349, 56593, 4, 4, 66, 110, 112, 116, 3437, 3444, 3460, 3464, 114, 101, 97, 107, 59, 1, 8288, 66, 114, 101, 97, 107, 105, 110, 103, 83, 112, 97, 99, 101, 59, 1, 160, 102, 59, 1, 8469, 4, 13, 59, 67, 68, 69, 71, 72, 76, 78, 80, 82, 83, 84, 86, 3492, 3494, 3517, 3536, 3578, 3657, 3685, 3784, 3823, 3860, 3915, 4066, 4107, 1, 10988, 4, 2, 111, 117, 3500, 3510, 110, 103, 114, 117, 101, 110, 116, 59, 1, 8802, 112, 67, 97, 112, 59, 1, 8813, 111, 117, 98, 108, 101, 86, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8742, 4, 3, 108, 113, 120, 3544, 3552, 3571, 101, 109, 101, 110, 116, 59, 1, 8713, 117, 97, 108, 4, 2, 59, 84, 3561, 3563, 1, 8800, 105, 108, 100, 101, 59, 3, 8770, 824, 105, 115, 116, 115, 59, 1, 8708, 114, 101, 97, 116, 101, 114, 4, 7, 59, 69, 70, 71, 76, 83, 84, 3600, 3602, 3609, 3621, 3631, 3637, 3650, 1, 8815, 113, 117, 97, 108, 59, 1, 8817, 117, 108, 108, 69, 113, 117, 97, 108, 59, 3, 8807, 824, 114, 101, 97, 116, 101, 114, 59, 3, 8811, 824, 101, 115, 115, 59, 1, 8825, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10878, 824, 105, 108, 100, 101, 59, 1, 8821, 117, 109, 112, 4, 2, 68, 69, 3666, 3677, 111, 119, 110, 72, 117, 109, 112, 59, 3, 8782, 824, 113, 117, 97, 108, 59, 3, 8783, 824, 101, 4, 2, 102, 115, 3692, 3724, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3709, 3711, 3717, 1, 8938, 97, 114, 59, 3, 10703, 824, 113, 117, 97, 108, 59, 1, 8940, 115, 4, 6, 59, 69, 71, 76, 83, 84, 3739, 3741, 3748, 3757, 3764, 3777, 1, 8814, 113, 117, 97, 108, 59, 1, 8816, 114, 101, 97, 116, 101, 114, 59, 1, 8824, 101, 115, 115, 59, 3, 8810, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10877, 824, 105, 108, 100, 101, 59, 1, 8820, 101, 115, 116, 101, 100, 4, 2, 71, 76, 3795, 3812, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 3, 10914, 824, 101, 115, 115, 76, 101, 115, 115, 59, 3, 10913, 824, 114, 101, 99, 101, 100, 101, 115, 4, 3, 59, 69, 83, 3838, 3840, 3848, 1, 8832, 113, 117, 97, 108, 59, 3, 10927, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8928, 4, 2, 101, 105, 3866, 3881, 118, 101, 114, 115, 101, 69, 108, 101, 109, 101, 110, 116, 59, 1, 8716, 103, 104, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3900, 3902, 3908, 1, 8939, 97, 114, 59, 3, 10704, 824, 113, 117, 97, 108, 59, 1, 8941, 4, 2, 113, 117, 3921, 3973, 117, 97, 114, 101, 83, 117, 4, 2, 98, 112, 3933, 3952, 115, 101, 116, 4, 2, 59, 69, 3942, 3945, 3, 8847, 824, 113, 117, 97, 108, 59, 1, 8930, 101, 114, 115, 101, 116, 4, 2, 59, 69, 3963, 3966, 3, 8848, 824, 113, 117, 97, 108, 59, 1, 8931, 4, 3, 98, 99, 112, 3981, 4e3, 4045, 115, 101, 116, 4, 2, 59, 69, 3990, 3993, 3, 8834, 8402, 113, 117, 97, 108, 59, 1, 8840, 99, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 4015, 4017, 4025, 4037, 1, 8833, 113, 117, 97, 108, 59, 3, 10928, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8929, 105, 108, 100, 101, 59, 3, 8831, 824, 101, 114, 115, 101, 116, 4, 2, 59, 69, 4056, 4059, 3, 8835, 8402, 113, 117, 97, 108, 59, 1, 8841, 105, 108, 100, 101, 4, 4, 59, 69, 70, 84, 4080, 4082, 4089, 4100, 1, 8769, 113, 117, 97, 108, 59, 1, 8772, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8775, 105, 108, 100, 101, 59, 1, 8777, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8740, 99, 114, 59, 3, 55349, 56489, 105, 108, 100, 101, 5, 209, 1, 59, 4135, 1, 209, 59, 1, 925, 4, 14, 69, 97, 99, 100, 102, 103, 109, 111, 112, 114, 115, 116, 117, 118, 4170, 4176, 4187, 4205, 4212, 4217, 4228, 4253, 4259, 4292, 4295, 4316, 4337, 4346, 108, 105, 103, 59, 1, 338, 99, 117, 116, 101, 5, 211, 1, 59, 4185, 1, 211, 4, 2, 105, 121, 4193, 4202, 114, 99, 5, 212, 1, 59, 4200, 1, 212, 59, 1, 1054, 98, 108, 97, 99, 59, 1, 336, 114, 59, 3, 55349, 56594, 114, 97, 118, 101, 5, 210, 1, 59, 4226, 1, 210, 4, 3, 97, 101, 105, 4236, 4241, 4246, 99, 114, 59, 1, 332, 103, 97, 59, 1, 937, 99, 114, 111, 110, 59, 1, 927, 112, 102, 59, 3, 55349, 56646, 101, 110, 67, 117, 114, 108, 121, 4, 2, 68, 81, 4272, 4285, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8220, 117, 111, 116, 101, 59, 1, 8216, 59, 1, 10836, 4, 2, 99, 108, 4301, 4306, 114, 59, 3, 55349, 56490, 97, 115, 104, 5, 216, 1, 59, 4314, 1, 216, 105, 4, 2, 108, 109, 4323, 4332, 100, 101, 5, 213, 1, 59, 4330, 1, 213, 101, 115, 59, 1, 10807, 109, 108, 5, 214, 1, 59, 4344, 1, 214, 101, 114, 4, 2, 66, 80, 4354, 4380, 4, 2, 97, 114, 4360, 4364, 114, 59, 1, 8254, 97, 99, 4, 2, 101, 107, 4372, 4375, 59, 1, 9182, 101, 116, 59, 1, 9140, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9180, 4, 9, 97, 99, 102, 104, 105, 108, 111, 114, 115, 4413, 4422, 4426, 4431, 4435, 4438, 4448, 4471, 4561, 114, 116, 105, 97, 108, 68, 59, 1, 8706, 121, 59, 1, 1055, 114, 59, 3, 55349, 56595, 105, 59, 1, 934, 59, 1, 928, 117, 115, 77, 105, 110, 117, 115, 59, 1, 177, 4, 2, 105, 112, 4454, 4467, 110, 99, 97, 114, 101, 112, 108, 97, 110, 101, 59, 1, 8460, 102, 59, 1, 8473, 4, 4, 59, 101, 105, 111, 4481, 4483, 4526, 4531, 1, 10939, 99, 101, 100, 101, 115, 4, 4, 59, 69, 83, 84, 4498, 4500, 4507, 4519, 1, 8826, 113, 117, 97, 108, 59, 1, 10927, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8828, 105, 108, 100, 101, 59, 1, 8830, 109, 101, 59, 1, 8243, 4, 2, 100, 112, 4537, 4543, 117, 99, 116, 59, 1, 8719, 111, 114, 116, 105, 111, 110, 4, 2, 59, 97, 4555, 4557, 1, 8759, 108, 59, 1, 8733, 4, 2, 99, 105, 4567, 4572, 114, 59, 3, 55349, 56491, 59, 1, 936, 4, 4, 85, 102, 111, 115, 4585, 4594, 4599, 4604, 79, 84, 5, 34, 1, 59, 4592, 1, 34, 114, 59, 3, 55349, 56596, 112, 102, 59, 1, 8474, 99, 114, 59, 3, 55349, 56492, 4, 12, 66, 69, 97, 99, 101, 102, 104, 105, 111, 114, 115, 117, 4636, 4642, 4650, 4681, 4704, 4763, 4767, 4771, 5047, 5069, 5081, 5094, 97, 114, 114, 59, 1, 10512, 71, 5, 174, 1, 59, 4648, 1, 174, 4, 3, 99, 110, 114, 4658, 4664, 4668, 117, 116, 101, 59, 1, 340, 103, 59, 1, 10219, 114, 4, 2, 59, 116, 4675, 4677, 1, 8608, 108, 59, 1, 10518, 4, 3, 97, 101, 121, 4689, 4695, 4701, 114, 111, 110, 59, 1, 344, 100, 105, 108, 59, 1, 342, 59, 1, 1056, 4, 2, 59, 118, 4710, 4712, 1, 8476, 101, 114, 115, 101, 4, 2, 69, 85, 4722, 4748, 4, 2, 108, 113, 4728, 4736, 101, 109, 101, 110, 116, 59, 1, 8715, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8651, 112, 69, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10607, 114, 59, 1, 8476, 111, 59, 1, 929, 103, 104, 116, 4, 8, 65, 67, 68, 70, 84, 85, 86, 97, 4792, 4840, 4849, 4905, 4912, 4972, 5022, 5040, 4, 2, 110, 114, 4798, 4811, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10217, 114, 111, 119, 4, 3, 59, 66, 76, 4822, 4824, 4829, 1, 8594, 97, 114, 59, 1, 8677, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8644, 101, 105, 108, 105, 110, 103, 59, 1, 8969, 111, 4, 2, 117, 119, 4856, 4869, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10215, 110, 4, 2, 84, 86, 4876, 4887, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10589, 101, 99, 116, 111, 114, 4, 2, 59, 66, 4898, 4900, 1, 8642, 97, 114, 59, 1, 10581, 108, 111, 111, 114, 59, 1, 8971, 4, 2, 101, 114, 4918, 4944, 101, 4, 3, 59, 65, 86, 4927, 4929, 4936, 1, 8866, 114, 114, 111, 119, 59, 1, 8614, 101, 99, 116, 111, 114, 59, 1, 10587, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 4958, 4960, 4965, 1, 8883, 97, 114, 59, 1, 10704, 113, 117, 97, 108, 59, 1, 8885, 112, 4, 3, 68, 84, 86, 4981, 4993, 5004, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10575, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10588, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5015, 5017, 1, 8638, 97, 114, 59, 1, 10580, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5033, 5035, 1, 8640, 97, 114, 59, 1, 10579, 114, 114, 111, 119, 59, 1, 8658, 4, 2, 112, 117, 5053, 5057, 102, 59, 1, 8477, 110, 100, 73, 109, 112, 108, 105, 101, 115, 59, 1, 10608, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8667, 4, 2, 99, 104, 5087, 5091, 114, 59, 1, 8475, 59, 1, 8625, 108, 101, 68, 101, 108, 97, 121, 101, 100, 59, 1, 10740, 4, 13, 72, 79, 97, 99, 102, 104, 105, 109, 111, 113, 115, 116, 117, 5134, 5150, 5157, 5164, 5198, 5203, 5259, 5265, 5277, 5283, 5374, 5380, 5385, 4, 2, 67, 99, 5140, 5146, 72, 99, 121, 59, 1, 1065, 121, 59, 1, 1064, 70, 84, 99, 121, 59, 1, 1068, 99, 117, 116, 101, 59, 1, 346, 4, 5, 59, 97, 101, 105, 121, 5176, 5178, 5184, 5190, 5195, 1, 10940, 114, 111, 110, 59, 1, 352, 100, 105, 108, 59, 1, 350, 114, 99, 59, 1, 348, 59, 1, 1057, 114, 59, 3, 55349, 56598, 111, 114, 116, 4, 4, 68, 76, 82, 85, 5216, 5227, 5238, 5250, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8595, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8592, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8594, 112, 65, 114, 114, 111, 119, 59, 1, 8593, 103, 109, 97, 59, 1, 931, 97, 108, 108, 67, 105, 114, 99, 108, 101, 59, 1, 8728, 112, 102, 59, 3, 55349, 56650, 4, 2, 114, 117, 5289, 5293, 116, 59, 1, 8730, 97, 114, 101, 4, 4, 59, 73, 83, 85, 5306, 5308, 5322, 5367, 1, 9633, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8851, 117, 4, 2, 98, 112, 5329, 5347, 115, 101, 116, 4, 2, 59, 69, 5338, 5340, 1, 8847, 113, 117, 97, 108, 59, 1, 8849, 101, 114, 115, 101, 116, 4, 2, 59, 69, 5358, 5360, 1, 8848, 113, 117, 97, 108, 59, 1, 8850, 110, 105, 111, 110, 59, 1, 8852, 99, 114, 59, 3, 55349, 56494, 97, 114, 59, 1, 8902, 4, 4, 98, 99, 109, 112, 5395, 5420, 5475, 5478, 4, 2, 59, 115, 5401, 5403, 1, 8912, 101, 116, 4, 2, 59, 69, 5411, 5413, 1, 8912, 113, 117, 97, 108, 59, 1, 8838, 4, 2, 99, 104, 5426, 5468, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 5440, 5442, 5449, 5461, 1, 8827, 113, 117, 97, 108, 59, 1, 10928, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8829, 105, 108, 100, 101, 59, 1, 8831, 84, 104, 97, 116, 59, 1, 8715, 59, 1, 8721, 4, 3, 59, 101, 115, 5486, 5488, 5507, 1, 8913, 114, 115, 101, 116, 4, 2, 59, 69, 5498, 5500, 1, 8835, 113, 117, 97, 108, 59, 1, 8839, 101, 116, 59, 1, 8913, 4, 11, 72, 82, 83, 97, 99, 102, 104, 105, 111, 114, 115, 5536, 5546, 5552, 5567, 5579, 5602, 5607, 5655, 5695, 5701, 5711, 79, 82, 78, 5, 222, 1, 59, 5544, 1, 222, 65, 68, 69, 59, 1, 8482, 4, 2, 72, 99, 5558, 5563, 99, 121, 59, 1, 1035, 121, 59, 1, 1062, 4, 2, 98, 117, 5573, 5576, 59, 1, 9, 59, 1, 932, 4, 3, 97, 101, 121, 5587, 5593, 5599, 114, 111, 110, 59, 1, 356, 100, 105, 108, 59, 1, 354, 59, 1, 1058, 114, 59, 3, 55349, 56599, 4, 2, 101, 105, 5613, 5631, 4, 2, 114, 116, 5619, 5627, 101, 102, 111, 114, 101, 59, 1, 8756, 97, 59, 1, 920, 4, 2, 99, 110, 5637, 5647, 107, 83, 112, 97, 99, 101, 59, 3, 8287, 8202, 83, 112, 97, 99, 101, 59, 1, 8201, 108, 100, 101, 4, 4, 59, 69, 70, 84, 5668, 5670, 5677, 5688, 1, 8764, 113, 117, 97, 108, 59, 1, 8771, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8773, 105, 108, 100, 101, 59, 1, 8776, 112, 102, 59, 3, 55349, 56651, 105, 112, 108, 101, 68, 111, 116, 59, 1, 8411, 4, 2, 99, 116, 5717, 5722, 114, 59, 3, 55349, 56495, 114, 111, 107, 59, 1, 358, 4, 14, 97, 98, 99, 100, 102, 103, 109, 110, 111, 112, 114, 115, 116, 117, 5758, 5789, 5805, 5823, 5830, 5835, 5846, 5852, 5921, 5937, 6089, 6095, 6101, 6108, 4, 2, 99, 114, 5764, 5774, 117, 116, 101, 5, 218, 1, 59, 5772, 1, 218, 114, 4, 2, 59, 111, 5781, 5783, 1, 8607, 99, 105, 114, 59, 1, 10569, 114, 4, 2, 99, 101, 5796, 5800, 121, 59, 1, 1038, 118, 101, 59, 1, 364, 4, 2, 105, 121, 5811, 5820, 114, 99, 5, 219, 1, 59, 5818, 1, 219, 59, 1, 1059, 98, 108, 97, 99, 59, 1, 368, 114, 59, 3, 55349, 56600, 114, 97, 118, 101, 5, 217, 1, 59, 5844, 1, 217, 97, 99, 114, 59, 1, 362, 4, 2, 100, 105, 5858, 5905, 101, 114, 4, 2, 66, 80, 5866, 5892, 4, 2, 97, 114, 5872, 5876, 114, 59, 1, 95, 97, 99, 4, 2, 101, 107, 5884, 5887, 59, 1, 9183, 101, 116, 59, 1, 9141, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9181, 111, 110, 4, 2, 59, 80, 5913, 5915, 1, 8899, 108, 117, 115, 59, 1, 8846, 4, 2, 103, 112, 5927, 5932, 111, 110, 59, 1, 370, 102, 59, 3, 55349, 56652, 4, 8, 65, 68, 69, 84, 97, 100, 112, 115, 5955, 5985, 5996, 6009, 6026, 6033, 6044, 6075, 114, 114, 111, 119, 4, 3, 59, 66, 68, 5967, 5969, 5974, 1, 8593, 97, 114, 59, 1, 10514, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8645, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8597, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10606, 101, 101, 4, 2, 59, 65, 6017, 6019, 1, 8869, 114, 114, 111, 119, 59, 1, 8613, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 4, 2, 76, 82, 6052, 6063, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8598, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8599, 105, 4, 2, 59, 108, 6082, 6084, 1, 978, 111, 110, 59, 1, 933, 105, 110, 103, 59, 1, 366, 99, 114, 59, 3, 55349, 56496, 105, 108, 100, 101, 59, 1, 360, 109, 108, 5, 220, 1, 59, 6115, 1, 220, 4, 9, 68, 98, 99, 100, 101, 102, 111, 115, 118, 6137, 6143, 6148, 6152, 6166, 6250, 6255, 6261, 6267, 97, 115, 104, 59, 1, 8875, 97, 114, 59, 1, 10987, 121, 59, 1, 1042, 97, 115, 104, 4, 2, 59, 108, 6161, 6163, 1, 8873, 59, 1, 10982, 4, 2, 101, 114, 6172, 6175, 59, 1, 8897, 4, 3, 98, 116, 121, 6183, 6188, 6238, 97, 114, 59, 1, 8214, 4, 2, 59, 105, 6194, 6196, 1, 8214, 99, 97, 108, 4, 4, 66, 76, 83, 84, 6209, 6214, 6220, 6231, 97, 114, 59, 1, 8739, 105, 110, 101, 59, 1, 124, 101, 112, 97, 114, 97, 116, 111, 114, 59, 1, 10072, 105, 108, 100, 101, 59, 1, 8768, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8202, 114, 59, 3, 55349, 56601, 112, 102, 59, 3, 55349, 56653, 99, 114, 59, 3, 55349, 56497, 100, 97, 115, 104, 59, 1, 8874, 4, 5, 99, 101, 102, 111, 115, 6286, 6292, 6298, 6303, 6309, 105, 114, 99, 59, 1, 372, 100, 103, 101, 59, 1, 8896, 114, 59, 3, 55349, 56602, 112, 102, 59, 3, 55349, 56654, 99, 114, 59, 3, 55349, 56498, 4, 4, 102, 105, 111, 115, 6325, 6330, 6333, 6339, 114, 59, 3, 55349, 56603, 59, 1, 926, 112, 102, 59, 3, 55349, 56655, 99, 114, 59, 3, 55349, 56499, 4, 9, 65, 73, 85, 97, 99, 102, 111, 115, 117, 6365, 6370, 6375, 6380, 6391, 6405, 6410, 6416, 6422, 99, 121, 59, 1, 1071, 99, 121, 59, 1, 1031, 99, 121, 59, 1, 1070, 99, 117, 116, 101, 5, 221, 1, 59, 6389, 1, 221, 4, 2, 105, 121, 6397, 6402, 114, 99, 59, 1, 374, 59, 1, 1067, 114, 59, 3, 55349, 56604, 112, 102, 59, 3, 55349, 56656, 99, 114, 59, 3, 55349, 56500, 109, 108, 59, 1, 376, 4, 8, 72, 97, 99, 100, 101, 102, 111, 115, 6445, 6450, 6457, 6472, 6477, 6501, 6505, 6510, 99, 121, 59, 1, 1046, 99, 117, 116, 101, 59, 1, 377, 4, 2, 97, 121, 6463, 6469, 114, 111, 110, 59, 1, 381, 59, 1, 1047, 111, 116, 59, 1, 379, 4, 2, 114, 116, 6483, 6497, 111, 87, 105, 100, 116, 104, 83, 112, 97, 99, 101, 59, 1, 8203, 97, 59, 1, 918, 114, 59, 1, 8488, 112, 102, 59, 1, 8484, 99, 114, 59, 3, 55349, 56501, 4, 16, 97, 98, 99, 101, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 6550, 6561, 6568, 6612, 6622, 6634, 6645, 6672, 6699, 6854, 6870, 6923, 6933, 6963, 6974, 6983, 99, 117, 116, 101, 5, 225, 1, 59, 6559, 1, 225, 114, 101, 118, 101, 59, 1, 259, 4, 6, 59, 69, 100, 105, 117, 121, 6582, 6584, 6588, 6591, 6600, 6609, 1, 8766, 59, 3, 8766, 819, 59, 1, 8767, 114, 99, 5, 226, 1, 59, 6598, 1, 226, 116, 101, 5, 180, 1, 59, 6607, 1, 180, 59, 1, 1072, 108, 105, 103, 5, 230, 1, 59, 6620, 1, 230, 4, 2, 59, 114, 6628, 6630, 1, 8289, 59, 3, 55349, 56606, 114, 97, 118, 101, 5, 224, 1, 59, 6643, 1, 224, 4, 2, 101, 112, 6651, 6667, 4, 2, 102, 112, 6657, 6663, 115, 121, 109, 59, 1, 8501, 104, 59, 1, 8501, 104, 97, 59, 1, 945, 4, 2, 97, 112, 6678, 6692, 4, 2, 99, 108, 6684, 6688, 114, 59, 1, 257, 103, 59, 1, 10815, 5, 38, 1, 59, 6697, 1, 38, 4, 2, 100, 103, 6705, 6737, 4, 5, 59, 97, 100, 115, 118, 6717, 6719, 6724, 6727, 6734, 1, 8743, 110, 100, 59, 1, 10837, 59, 1, 10844, 108, 111, 112, 101, 59, 1, 10840, 59, 1, 10842, 4, 7, 59, 101, 108, 109, 114, 115, 122, 6753, 6755, 6758, 6762, 6814, 6835, 6848, 1, 8736, 59, 1, 10660, 101, 59, 1, 8736, 115, 100, 4, 2, 59, 97, 6770, 6772, 1, 8737, 4, 8, 97, 98, 99, 100, 101, 102, 103, 104, 6790, 6793, 6796, 6799, 6802, 6805, 6808, 6811, 59, 1, 10664, 59, 1, 10665, 59, 1, 10666, 59, 1, 10667, 59, 1, 10668, 59, 1, 10669, 59, 1, 10670, 59, 1, 10671, 116, 4, 2, 59, 118, 6821, 6823, 1, 8735, 98, 4, 2, 59, 100, 6830, 6832, 1, 8894, 59, 1, 10653, 4, 2, 112, 116, 6841, 6845, 104, 59, 1, 8738, 59, 1, 197, 97, 114, 114, 59, 1, 9084, 4, 2, 103, 112, 6860, 6865, 111, 110, 59, 1, 261, 102, 59, 3, 55349, 56658, 4, 7, 59, 69, 97, 101, 105, 111, 112, 6886, 6888, 6891, 6897, 6900, 6904, 6908, 1, 8776, 59, 1, 10864, 99, 105, 114, 59, 1, 10863, 59, 1, 8778, 100, 59, 1, 8779, 115, 59, 1, 39, 114, 111, 120, 4, 2, 59, 101, 6917, 6919, 1, 8776, 113, 59, 1, 8778, 105, 110, 103, 5, 229, 1, 59, 6931, 1, 229, 4, 3, 99, 116, 121, 6941, 6946, 6949, 114, 59, 3, 55349, 56502, 59, 1, 42, 109, 112, 4, 2, 59, 101, 6957, 6959, 1, 8776, 113, 59, 1, 8781, 105, 108, 100, 101, 5, 227, 1, 59, 6972, 1, 227, 109, 108, 5, 228, 1, 59, 6981, 1, 228, 4, 2, 99, 105, 6989, 6997, 111, 110, 105, 110, 116, 59, 1, 8755, 110, 116, 59, 1, 10769, 4, 16, 78, 97, 98, 99, 100, 101, 102, 105, 107, 108, 110, 111, 112, 114, 115, 117, 7036, 7041, 7119, 7135, 7149, 7155, 7219, 7224, 7347, 7354, 7463, 7489, 7786, 7793, 7814, 7866, 111, 116, 59, 1, 10989, 4, 2, 99, 114, 7047, 7094, 107, 4, 4, 99, 101, 112, 115, 7058, 7064, 7073, 7080, 111, 110, 103, 59, 1, 8780, 112, 115, 105, 108, 111, 110, 59, 1, 1014, 114, 105, 109, 101, 59, 1, 8245, 105, 109, 4, 2, 59, 101, 7088, 7090, 1, 8765, 113, 59, 1, 8909, 4, 2, 118, 119, 7100, 7105, 101, 101, 59, 1, 8893, 101, 100, 4, 2, 59, 103, 7113, 7115, 1, 8965, 101, 59, 1, 8965, 114, 107, 4, 2, 59, 116, 7127, 7129, 1, 9141, 98, 114, 107, 59, 1, 9142, 4, 2, 111, 121, 7141, 7146, 110, 103, 59, 1, 8780, 59, 1, 1073, 113, 117, 111, 59, 1, 8222, 4, 5, 99, 109, 112, 114, 116, 7167, 7181, 7188, 7193, 7199, 97, 117, 115, 4, 2, 59, 101, 7176, 7178, 1, 8757, 59, 1, 8757, 112, 116, 121, 118, 59, 1, 10672, 115, 105, 59, 1, 1014, 110, 111, 117, 59, 1, 8492, 4, 3, 97, 104, 119, 7207, 7210, 7213, 59, 1, 946, 59, 1, 8502, 101, 101, 110, 59, 1, 8812, 114, 59, 3, 55349, 56607, 103, 4, 7, 99, 111, 115, 116, 117, 118, 119, 7241, 7262, 7288, 7305, 7328, 7335, 7340, 4, 3, 97, 105, 117, 7249, 7253, 7258, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 4, 3, 100, 112, 116, 7270, 7275, 7281, 111, 116, 59, 1, 10752, 108, 117, 115, 59, 1, 10753, 105, 109, 101, 115, 59, 1, 10754, 4, 2, 113, 116, 7294, 7300, 99, 117, 112, 59, 1, 10758, 97, 114, 59, 1, 9733, 114, 105, 97, 110, 103, 108, 101, 4, 2, 100, 117, 7318, 7324, 111, 119, 110, 59, 1, 9661, 112, 59, 1, 9651, 112, 108, 117, 115, 59, 1, 10756, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 97, 114, 111, 119, 59, 1, 10509, 4, 3, 97, 107, 111, 7362, 7436, 7458, 4, 2, 99, 110, 7368, 7432, 107, 4, 3, 108, 115, 116, 7377, 7386, 7394, 111, 122, 101, 110, 103, 101, 59, 1, 10731, 113, 117, 97, 114, 101, 59, 1, 9642, 114, 105, 97, 110, 103, 108, 101, 4, 4, 59, 100, 108, 114, 7411, 7413, 7419, 7425, 1, 9652, 111, 119, 110, 59, 1, 9662, 101, 102, 116, 59, 1, 9666, 105, 103, 104, 116, 59, 1, 9656, 107, 59, 1, 9251, 4, 2, 49, 51, 7442, 7454, 4, 2, 50, 52, 7448, 7451, 59, 1, 9618, 59, 1, 9617, 52, 59, 1, 9619, 99, 107, 59, 1, 9608, 4, 2, 101, 111, 7469, 7485, 4, 2, 59, 113, 7475, 7478, 3, 61, 8421, 117, 105, 118, 59, 3, 8801, 8421, 116, 59, 1, 8976, 4, 4, 112, 116, 119, 120, 7499, 7504, 7517, 7523, 102, 59, 3, 55349, 56659, 4, 2, 59, 116, 7510, 7512, 1, 8869, 111, 109, 59, 1, 8869, 116, 105, 101, 59, 1, 8904, 4, 12, 68, 72, 85, 86, 98, 100, 104, 109, 112, 116, 117, 118, 7549, 7571, 7597, 7619, 7655, 7660, 7682, 7708, 7715, 7721, 7728, 7750, 4, 4, 76, 82, 108, 114, 7559, 7562, 7565, 7568, 59, 1, 9559, 59, 1, 9556, 59, 1, 9558, 59, 1, 9555, 4, 5, 59, 68, 85, 100, 117, 7583, 7585, 7588, 7591, 7594, 1, 9552, 59, 1, 9574, 59, 1, 9577, 59, 1, 9572, 59, 1, 9575, 4, 4, 76, 82, 108, 114, 7607, 7610, 7613, 7616, 59, 1, 9565, 59, 1, 9562, 59, 1, 9564, 59, 1, 9561, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7635, 7637, 7640, 7643, 7646, 7649, 7652, 1, 9553, 59, 1, 9580, 59, 1, 9571, 59, 1, 9568, 59, 1, 9579, 59, 1, 9570, 59, 1, 9567, 111, 120, 59, 1, 10697, 4, 4, 76, 82, 108, 114, 7670, 7673, 7676, 7679, 59, 1, 9557, 59, 1, 9554, 59, 1, 9488, 59, 1, 9484, 4, 5, 59, 68, 85, 100, 117, 7694, 7696, 7699, 7702, 7705, 1, 9472, 59, 1, 9573, 59, 1, 9576, 59, 1, 9516, 59, 1, 9524, 105, 110, 117, 115, 59, 1, 8863, 108, 117, 115, 59, 1, 8862, 105, 109, 101, 115, 59, 1, 8864, 4, 4, 76, 82, 108, 114, 7738, 7741, 7744, 7747, 59, 1, 9563, 59, 1, 9560, 59, 1, 9496, 59, 1, 9492, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7766, 7768, 7771, 7774, 7777, 7780, 7783, 1, 9474, 59, 1, 9578, 59, 1, 9569, 59, 1, 9566, 59, 1, 9532, 59, 1, 9508, 59, 1, 9500, 114, 105, 109, 101, 59, 1, 8245, 4, 2, 101, 118, 7799, 7804, 118, 101, 59, 1, 728, 98, 97, 114, 5, 166, 1, 59, 7812, 1, 166, 4, 4, 99, 101, 105, 111, 7824, 7829, 7834, 7846, 114, 59, 3, 55349, 56503, 109, 105, 59, 1, 8271, 109, 4, 2, 59, 101, 7841, 7843, 1, 8765, 59, 1, 8909, 108, 4, 3, 59, 98, 104, 7855, 7857, 7860, 1, 92, 59, 1, 10693, 115, 117, 98, 59, 1, 10184, 4, 2, 108, 109, 7872, 7885, 108, 4, 2, 59, 101, 7879, 7881, 1, 8226, 116, 59, 1, 8226, 112, 4, 3, 59, 69, 101, 7894, 7896, 7899, 1, 8782, 59, 1, 10926, 4, 2, 59, 113, 7905, 7907, 1, 8783, 59, 1, 8783, 4, 15, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 116, 117, 119, 121, 7942, 8021, 8075, 8080, 8121, 8126, 8157, 8279, 8295, 8430, 8446, 8485, 8491, 8707, 8726, 4, 3, 99, 112, 114, 7950, 7956, 8007, 117, 116, 101, 59, 1, 263, 4, 6, 59, 97, 98, 99, 100, 115, 7970, 7972, 7977, 7984, 7998, 8003, 1, 8745, 110, 100, 59, 1, 10820, 114, 99, 117, 112, 59, 1, 10825, 4, 2, 97, 117, 7990, 7994, 112, 59, 1, 10827, 112, 59, 1, 10823, 111, 116, 59, 1, 10816, 59, 3, 8745, 65024, 4, 2, 101, 111, 8013, 8017, 116, 59, 1, 8257, 110, 59, 1, 711, 4, 4, 97, 101, 105, 117, 8031, 8046, 8056, 8061, 4, 2, 112, 114, 8037, 8041, 115, 59, 1, 10829, 111, 110, 59, 1, 269, 100, 105, 108, 5, 231, 1, 59, 8054, 1, 231, 114, 99, 59, 1, 265, 112, 115, 4, 2, 59, 115, 8069, 8071, 1, 10828, 109, 59, 1, 10832, 111, 116, 59, 1, 267, 4, 3, 100, 109, 110, 8088, 8097, 8104, 105, 108, 5, 184, 1, 59, 8095, 1, 184, 112, 116, 121, 118, 59, 1, 10674, 116, 5, 162, 2, 59, 101, 8112, 8114, 1, 162, 114, 100, 111, 116, 59, 1, 183, 114, 59, 3, 55349, 56608, 4, 3, 99, 101, 105, 8134, 8138, 8154, 121, 59, 1, 1095, 99, 107, 4, 2, 59, 109, 8146, 8148, 1, 10003, 97, 114, 107, 59, 1, 10003, 59, 1, 967, 114, 4, 7, 59, 69, 99, 101, 102, 109, 115, 8174, 8176, 8179, 8258, 8261, 8268, 8273, 1, 9675, 59, 1, 10691, 4, 3, 59, 101, 108, 8187, 8189, 8193, 1, 710, 113, 59, 1, 8791, 101, 4, 2, 97, 100, 8200, 8223, 114, 114, 111, 119, 4, 2, 108, 114, 8210, 8216, 101, 102, 116, 59, 1, 8634, 105, 103, 104, 116, 59, 1, 8635, 4, 5, 82, 83, 97, 99, 100, 8235, 8238, 8241, 8246, 8252, 59, 1, 174, 59, 1, 9416, 115, 116, 59, 1, 8859, 105, 114, 99, 59, 1, 8858, 97, 115, 104, 59, 1, 8861, 59, 1, 8791, 110, 105, 110, 116, 59, 1, 10768, 105, 100, 59, 1, 10991, 99, 105, 114, 59, 1, 10690, 117, 98, 115, 4, 2, 59, 117, 8288, 8290, 1, 9827, 105, 116, 59, 1, 9827, 4, 4, 108, 109, 110, 112, 8305, 8326, 8376, 8400, 111, 110, 4, 2, 59, 101, 8313, 8315, 1, 58, 4, 2, 59, 113, 8321, 8323, 1, 8788, 59, 1, 8788, 4, 2, 109, 112, 8332, 8344, 97, 4, 2, 59, 116, 8339, 8341, 1, 44, 59, 1, 64, 4, 3, 59, 102, 108, 8352, 8354, 8358, 1, 8705, 110, 59, 1, 8728, 101, 4, 2, 109, 120, 8365, 8371, 101, 110, 116, 59, 1, 8705, 101, 115, 59, 1, 8450, 4, 2, 103, 105, 8382, 8395, 4, 2, 59, 100, 8388, 8390, 1, 8773, 111, 116, 59, 1, 10861, 110, 116, 59, 1, 8750, 4, 3, 102, 114, 121, 8408, 8412, 8417, 59, 3, 55349, 56660, 111, 100, 59, 1, 8720, 5, 169, 2, 59, 115, 8424, 8426, 1, 169, 114, 59, 1, 8471, 4, 2, 97, 111, 8436, 8441, 114, 114, 59, 1, 8629, 115, 115, 59, 1, 10007, 4, 2, 99, 117, 8452, 8457, 114, 59, 3, 55349, 56504, 4, 2, 98, 112, 8463, 8474, 4, 2, 59, 101, 8469, 8471, 1, 10959, 59, 1, 10961, 4, 2, 59, 101, 8480, 8482, 1, 10960, 59, 1, 10962, 100, 111, 116, 59, 1, 8943, 4, 7, 100, 101, 108, 112, 114, 118, 119, 8507, 8522, 8536, 8550, 8600, 8697, 8702, 97, 114, 114, 4, 2, 108, 114, 8516, 8519, 59, 1, 10552, 59, 1, 10549, 4, 2, 112, 115, 8528, 8532, 114, 59, 1, 8926, 99, 59, 1, 8927, 97, 114, 114, 4, 2, 59, 112, 8545, 8547, 1, 8630, 59, 1, 10557, 4, 6, 59, 98, 99, 100, 111, 115, 8564, 8566, 8573, 8587, 8592, 8596, 1, 8746, 114, 99, 97, 112, 59, 1, 10824, 4, 2, 97, 117, 8579, 8583, 112, 59, 1, 10822, 112, 59, 1, 10826, 111, 116, 59, 1, 8845, 114, 59, 1, 10821, 59, 3, 8746, 65024, 4, 4, 97, 108, 114, 118, 8610, 8623, 8663, 8672, 114, 114, 4, 2, 59, 109, 8618, 8620, 1, 8631, 59, 1, 10556, 121, 4, 3, 101, 118, 119, 8632, 8651, 8656, 113, 4, 2, 112, 115, 8639, 8645, 114, 101, 99, 59, 1, 8926, 117, 99, 99, 59, 1, 8927, 101, 101, 59, 1, 8910, 101, 100, 103, 101, 59, 1, 8911, 101, 110, 5, 164, 1, 59, 8670, 1, 164, 101, 97, 114, 114, 111, 119, 4, 2, 108, 114, 8684, 8690, 101, 102, 116, 59, 1, 8630, 105, 103, 104, 116, 59, 1, 8631, 101, 101, 59, 1, 8910, 101, 100, 59, 1, 8911, 4, 2, 99, 105, 8713, 8721, 111, 110, 105, 110, 116, 59, 1, 8754, 110, 116, 59, 1, 8753, 108, 99, 116, 121, 59, 1, 9005, 4, 19, 65, 72, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 114, 115, 116, 117, 119, 122, 8773, 8778, 8783, 8821, 8839, 8854, 8887, 8914, 8930, 8944, 9036, 9041, 9058, 9197, 9227, 9258, 9281, 9297, 9305, 114, 114, 59, 1, 8659, 97, 114, 59, 1, 10597, 4, 4, 103, 108, 114, 115, 8793, 8799, 8805, 8809, 103, 101, 114, 59, 1, 8224, 101, 116, 104, 59, 1, 8504, 114, 59, 1, 8595, 104, 4, 2, 59, 118, 8816, 8818, 1, 8208, 59, 1, 8867, 4, 2, 107, 108, 8827, 8834, 97, 114, 111, 119, 59, 1, 10511, 97, 99, 59, 1, 733, 4, 2, 97, 121, 8845, 8851, 114, 111, 110, 59, 1, 271, 59, 1, 1076, 4, 3, 59, 97, 111, 8862, 8864, 8880, 1, 8518, 4, 2, 103, 114, 8870, 8876, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8650, 116, 115, 101, 113, 59, 1, 10871, 4, 3, 103, 108, 109, 8895, 8902, 8907, 5, 176, 1, 59, 8900, 1, 176, 116, 97, 59, 1, 948, 112, 116, 121, 118, 59, 1, 10673, 4, 2, 105, 114, 8920, 8926, 115, 104, 116, 59, 1, 10623, 59, 3, 55349, 56609, 97, 114, 4, 2, 108, 114, 8938, 8941, 59, 1, 8643, 59, 1, 8642, 4, 5, 97, 101, 103, 115, 118, 8956, 8986, 8989, 8996, 9001, 109, 4, 3, 59, 111, 115, 8965, 8967, 8983, 1, 8900, 110, 100, 4, 2, 59, 115, 8975, 8977, 1, 8900, 117, 105, 116, 59, 1, 9830, 59, 1, 9830, 59, 1, 168, 97, 109, 109, 97, 59, 1, 989, 105, 110, 59, 1, 8946, 4, 3, 59, 105, 111, 9009, 9011, 9031, 1, 247, 100, 101, 5, 247, 2, 59, 111, 9020, 9022, 1, 247, 110, 116, 105, 109, 101, 115, 59, 1, 8903, 110, 120, 59, 1, 8903, 99, 121, 59, 1, 1106, 99, 4, 2, 111, 114, 9048, 9053, 114, 110, 59, 1, 8990, 111, 112, 59, 1, 8973, 4, 5, 108, 112, 116, 117, 119, 9070, 9076, 9081, 9130, 9144, 108, 97, 114, 59, 1, 36, 102, 59, 3, 55349, 56661, 4, 5, 59, 101, 109, 112, 115, 9093, 9095, 9109, 9116, 9122, 1, 729, 113, 4, 2, 59, 100, 9102, 9104, 1, 8784, 111, 116, 59, 1, 8785, 105, 110, 117, 115, 59, 1, 8760, 108, 117, 115, 59, 1, 8724, 113, 117, 97, 114, 101, 59, 1, 8865, 98, 108, 101, 98, 97, 114, 119, 101, 100, 103, 101, 59, 1, 8966, 110, 4, 3, 97, 100, 104, 9153, 9160, 9172, 114, 114, 111, 119, 59, 1, 8595, 111, 119, 110, 97, 114, 114, 111, 119, 115, 59, 1, 8650, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 9184, 9190, 101, 102, 116, 59, 1, 8643, 105, 103, 104, 116, 59, 1, 8642, 4, 2, 98, 99, 9203, 9211, 107, 97, 114, 111, 119, 59, 1, 10512, 4, 2, 111, 114, 9217, 9222, 114, 110, 59, 1, 8991, 111, 112, 59, 1, 8972, 4, 3, 99, 111, 116, 9235, 9248, 9252, 4, 2, 114, 121, 9241, 9245, 59, 3, 55349, 56505, 59, 1, 1109, 108, 59, 1, 10742, 114, 111, 107, 59, 1, 273, 4, 2, 100, 114, 9264, 9269, 111, 116, 59, 1, 8945, 105, 4, 2, 59, 102, 9276, 9278, 1, 9663, 59, 1, 9662, 4, 2, 97, 104, 9287, 9292, 114, 114, 59, 1, 8693, 97, 114, 59, 1, 10607, 97, 110, 103, 108, 101, 59, 1, 10662, 4, 2, 99, 105, 9311, 9315, 121, 59, 1, 1119, 103, 114, 97, 114, 114, 59, 1, 10239, 4, 18, 68, 97, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 9361, 9376, 9398, 9439, 9444, 9447, 9462, 9495, 9531, 9585, 9598, 9614, 9659, 9755, 9771, 9792, 9808, 9826, 4, 2, 68, 111, 9367, 9372, 111, 116, 59, 1, 10871, 116, 59, 1, 8785, 4, 2, 99, 115, 9382, 9392, 117, 116, 101, 5, 233, 1, 59, 9390, 1, 233, 116, 101, 114, 59, 1, 10862, 4, 4, 97, 105, 111, 121, 9408, 9414, 9430, 9436, 114, 111, 110, 59, 1, 283, 114, 4, 2, 59, 99, 9421, 9423, 1, 8790, 5, 234, 1, 59, 9428, 1, 234, 108, 111, 110, 59, 1, 8789, 59, 1, 1101, 111, 116, 59, 1, 279, 59, 1, 8519, 4, 2, 68, 114, 9453, 9458, 111, 116, 59, 1, 8786, 59, 3, 55349, 56610, 4, 3, 59, 114, 115, 9470, 9472, 9482, 1, 10906, 97, 118, 101, 5, 232, 1, 59, 9480, 1, 232, 4, 2, 59, 100, 9488, 9490, 1, 10902, 111, 116, 59, 1, 10904, 4, 4, 59, 105, 108, 115, 9505, 9507, 9515, 9518, 1, 10905, 110, 116, 101, 114, 115, 59, 1, 9191, 59, 1, 8467, 4, 2, 59, 100, 9524, 9526, 1, 10901, 111, 116, 59, 1, 10903, 4, 3, 97, 112, 115, 9539, 9544, 9564, 99, 114, 59, 1, 275, 116, 121, 4, 3, 59, 115, 118, 9554, 9556, 9561, 1, 8709, 101, 116, 59, 1, 8709, 59, 1, 8709, 112, 4, 2, 49, 59, 9571, 9583, 4, 2, 51, 52, 9577, 9580, 59, 1, 8196, 59, 1, 8197, 1, 8195, 4, 2, 103, 115, 9591, 9594, 59, 1, 331, 112, 59, 1, 8194, 4, 2, 103, 112, 9604, 9609, 111, 110, 59, 1, 281, 102, 59, 3, 55349, 56662, 4, 3, 97, 108, 115, 9622, 9635, 9640, 114, 4, 2, 59, 115, 9629, 9631, 1, 8917, 108, 59, 1, 10723, 117, 115, 59, 1, 10865, 105, 4, 3, 59, 108, 118, 9649, 9651, 9656, 1, 949, 111, 110, 59, 1, 949, 59, 1, 1013, 4, 4, 99, 115, 117, 118, 9669, 9686, 9716, 9747, 4, 2, 105, 111, 9675, 9680, 114, 99, 59, 1, 8790, 108, 111, 110, 59, 1, 8789, 4, 2, 105, 108, 9692, 9696, 109, 59, 1, 8770, 97, 110, 116, 4, 2, 103, 108, 9705, 9710, 116, 114, 59, 1, 10902, 101, 115, 115, 59, 1, 10901, 4, 3, 97, 101, 105, 9724, 9729, 9734, 108, 115, 59, 1, 61, 115, 116, 59, 1, 8799, 118, 4, 2, 59, 68, 9741, 9743, 1, 8801, 68, 59, 1, 10872, 112, 97, 114, 115, 108, 59, 1, 10725, 4, 2, 68, 97, 9761, 9766, 111, 116, 59, 1, 8787, 114, 114, 59, 1, 10609, 4, 3, 99, 100, 105, 9779, 9783, 9788, 114, 59, 1, 8495, 111, 116, 59, 1, 8784, 109, 59, 1, 8770, 4, 2, 97, 104, 9798, 9801, 59, 1, 951, 5, 240, 1, 59, 9806, 1, 240, 4, 2, 109, 114, 9814, 9822, 108, 5, 235, 1, 59, 9820, 1, 235, 111, 59, 1, 8364, 4, 3, 99, 105, 112, 9834, 9838, 9843, 108, 59, 1, 33, 115, 116, 59, 1, 8707, 4, 2, 101, 111, 9849, 9859, 99, 116, 97, 116, 105, 111, 110, 59, 1, 8496, 110, 101, 110, 116, 105, 97, 108, 101, 59, 1, 8519, 4, 12, 97, 99, 101, 102, 105, 106, 108, 110, 111, 112, 114, 115, 9896, 9910, 9914, 9921, 9954, 9960, 9967, 9989, 9994, 10027, 10036, 10164, 108, 108, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8786, 121, 59, 1, 1092, 109, 97, 108, 101, 59, 1, 9792, 4, 3, 105, 108, 114, 9929, 9935, 9950, 108, 105, 103, 59, 1, 64259, 4, 2, 105, 108, 9941, 9945, 103, 59, 1, 64256, 105, 103, 59, 1, 64260, 59, 3, 55349, 56611, 108, 105, 103, 59, 1, 64257, 108, 105, 103, 59, 3, 102, 106, 4, 3, 97, 108, 116, 9975, 9979, 9984, 116, 59, 1, 9837, 105, 103, 59, 1, 64258, 110, 115, 59, 1, 9649, 111, 102, 59, 1, 402, 4, 2, 112, 114, 1e4, 10005, 102, 59, 3, 55349, 56663, 4, 2, 97, 107, 10011, 10016, 108, 108, 59, 1, 8704, 4, 2, 59, 118, 10022, 10024, 1, 8916, 59, 1, 10969, 97, 114, 116, 105, 110, 116, 59, 1, 10765, 4, 2, 97, 111, 10042, 10159, 4, 2, 99, 115, 10048, 10155, 4, 6, 49, 50, 51, 52, 53, 55, 10062, 10102, 10114, 10135, 10139, 10151, 4, 6, 50, 51, 52, 53, 54, 56, 10076, 10083, 10086, 10093, 10096, 10099, 5, 189, 1, 59, 10081, 1, 189, 59, 1, 8531, 5, 188, 1, 59, 10091, 1, 188, 59, 1, 8533, 59, 1, 8537, 59, 1, 8539, 4, 2, 51, 53, 10108, 10111, 59, 1, 8532, 59, 1, 8534, 4, 3, 52, 53, 56, 10122, 10129, 10132, 5, 190, 1, 59, 10127, 1, 190, 59, 1, 8535, 59, 1, 8540, 53, 59, 1, 8536, 4, 2, 54, 56, 10145, 10148, 59, 1, 8538, 59, 1, 8541, 56, 59, 1, 8542, 108, 59, 1, 8260, 119, 110, 59, 1, 8994, 99, 114, 59, 3, 55349, 56507, 4, 17, 69, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 114, 115, 116, 118, 10206, 10217, 10247, 10254, 10268, 10273, 10358, 10363, 10374, 10380, 10385, 10406, 10458, 10464, 10470, 10497, 10610, 4, 2, 59, 108, 10212, 10214, 1, 8807, 59, 1, 10892, 4, 3, 99, 109, 112, 10225, 10231, 10244, 117, 116, 101, 59, 1, 501, 109, 97, 4, 2, 59, 100, 10239, 10241, 1, 947, 59, 1, 989, 59, 1, 10886, 114, 101, 118, 101, 59, 1, 287, 4, 2, 105, 121, 10260, 10265, 114, 99, 59, 1, 285, 59, 1, 1075, 111, 116, 59, 1, 289, 4, 4, 59, 108, 113, 115, 10283, 10285, 10288, 10308, 1, 8805, 59, 1, 8923, 4, 3, 59, 113, 115, 10296, 10298, 10301, 1, 8805, 59, 1, 8807, 108, 97, 110, 116, 59, 1, 10878, 4, 4, 59, 99, 100, 108, 10318, 10320, 10324, 10345, 1, 10878, 99, 59, 1, 10921, 111, 116, 4, 2, 59, 111, 10332, 10334, 1, 10880, 4, 2, 59, 108, 10340, 10342, 1, 10882, 59, 1, 10884, 4, 2, 59, 101, 10351, 10354, 3, 8923, 65024, 115, 59, 1, 10900, 114, 59, 3, 55349, 56612, 4, 2, 59, 103, 10369, 10371, 1, 8811, 59, 1, 8921, 109, 101, 108, 59, 1, 8503, 99, 121, 59, 1, 1107, 4, 4, 59, 69, 97, 106, 10395, 10397, 10400, 10403, 1, 8823, 59, 1, 10898, 59, 1, 10917, 59, 1, 10916, 4, 4, 69, 97, 101, 115, 10416, 10419, 10434, 10453, 59, 1, 8809, 112, 4, 2, 59, 112, 10426, 10428, 1, 10890, 114, 111, 120, 59, 1, 10890, 4, 2, 59, 113, 10440, 10442, 1, 10888, 4, 2, 59, 113, 10448, 10450, 1, 10888, 59, 1, 8809, 105, 109, 59, 1, 8935, 112, 102, 59, 3, 55349, 56664, 97, 118, 101, 59, 1, 96, 4, 2, 99, 105, 10476, 10480, 114, 59, 1, 8458, 109, 4, 3, 59, 101, 108, 10489, 10491, 10494, 1, 8819, 59, 1, 10894, 59, 1, 10896, 5, 62, 6, 59, 99, 100, 108, 113, 114, 10512, 10514, 10527, 10532, 10538, 10545, 1, 62, 4, 2, 99, 105, 10520, 10523, 59, 1, 10919, 114, 59, 1, 10874, 111, 116, 59, 1, 8919, 80, 97, 114, 59, 1, 10645, 117, 101, 115, 116, 59, 1, 10876, 4, 5, 97, 100, 101, 108, 115, 10557, 10574, 10579, 10599, 10605, 4, 2, 112, 114, 10563, 10570, 112, 114, 111, 120, 59, 1, 10886, 114, 59, 1, 10616, 111, 116, 59, 1, 8919, 113, 4, 2, 108, 113, 10586, 10592, 101, 115, 115, 59, 1, 8923, 108, 101, 115, 115, 59, 1, 10892, 101, 115, 115, 59, 1, 8823, 105, 109, 59, 1, 8819, 4, 2, 101, 110, 10616, 10626, 114, 116, 110, 101, 113, 113, 59, 3, 8809, 65024, 69, 59, 3, 8809, 65024, 4, 10, 65, 97, 98, 99, 101, 102, 107, 111, 115, 121, 10653, 10658, 10713, 10718, 10724, 10760, 10765, 10786, 10850, 10875, 114, 114, 59, 1, 8660, 4, 4, 105, 108, 109, 114, 10668, 10674, 10678, 10684, 114, 115, 112, 59, 1, 8202, 102, 59, 1, 189, 105, 108, 116, 59, 1, 8459, 4, 2, 100, 114, 10690, 10695, 99, 121, 59, 1, 1098, 4, 3, 59, 99, 119, 10703, 10705, 10710, 1, 8596, 105, 114, 59, 1, 10568, 59, 1, 8621, 97, 114, 59, 1, 8463, 105, 114, 99, 59, 1, 293, 4, 3, 97, 108, 114, 10732, 10748, 10754, 114, 116, 115, 4, 2, 59, 117, 10741, 10743, 1, 9829, 105, 116, 59, 1, 9829, 108, 105, 112, 59, 1, 8230, 99, 111, 110, 59, 1, 8889, 114, 59, 3, 55349, 56613, 115, 4, 2, 101, 119, 10772, 10779, 97, 114, 111, 119, 59, 1, 10533, 97, 114, 111, 119, 59, 1, 10534, 4, 5, 97, 109, 111, 112, 114, 10798, 10803, 10809, 10839, 10844, 114, 114, 59, 1, 8703, 116, 104, 116, 59, 1, 8763, 107, 4, 2, 108, 114, 10816, 10827, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8617, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8618, 102, 59, 3, 55349, 56665, 98, 97, 114, 59, 1, 8213, 4, 3, 99, 108, 116, 10858, 10863, 10869, 114, 59, 3, 55349, 56509, 97, 115, 104, 59, 1, 8463, 114, 111, 107, 59, 1, 295, 4, 2, 98, 112, 10881, 10887, 117, 108, 108, 59, 1, 8259, 104, 101, 110, 59, 1, 8208, 4, 15, 97, 99, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 10925, 10936, 10958, 10977, 10990, 11001, 11039, 11045, 11101, 11192, 11220, 11226, 11237, 11285, 11299, 99, 117, 116, 101, 5, 237, 1, 59, 10934, 1, 237, 4, 3, 59, 105, 121, 10944, 10946, 10955, 1, 8291, 114, 99, 5, 238, 1, 59, 10953, 1, 238, 59, 1, 1080, 4, 2, 99, 120, 10964, 10968, 121, 59, 1, 1077, 99, 108, 5, 161, 1, 59, 10975, 1, 161, 4, 2, 102, 114, 10983, 10986, 59, 1, 8660, 59, 3, 55349, 56614, 114, 97, 118, 101, 5, 236, 1, 59, 10999, 1, 236, 4, 4, 59, 105, 110, 111, 11011, 11013, 11028, 11034, 1, 8520, 4, 2, 105, 110, 11019, 11024, 110, 116, 59, 1, 10764, 116, 59, 1, 8749, 102, 105, 110, 59, 1, 10716, 116, 97, 59, 1, 8489, 108, 105, 103, 59, 1, 307, 4, 3, 97, 111, 112, 11053, 11092, 11096, 4, 3, 99, 103, 116, 11061, 11065, 11088, 114, 59, 1, 299, 4, 3, 101, 108, 112, 11073, 11076, 11082, 59, 1, 8465, 105, 110, 101, 59, 1, 8464, 97, 114, 116, 59, 1, 8465, 104, 59, 1, 305, 102, 59, 1, 8887, 101, 100, 59, 1, 437, 4, 5, 59, 99, 102, 111, 116, 11113, 11115, 11121, 11136, 11142, 1, 8712, 97, 114, 101, 59, 1, 8453, 105, 110, 4, 2, 59, 116, 11129, 11131, 1, 8734, 105, 101, 59, 1, 10717, 100, 111, 116, 59, 1, 305, 4, 5, 59, 99, 101, 108, 112, 11154, 11156, 11161, 11179, 11186, 1, 8747, 97, 108, 59, 1, 8890, 4, 2, 103, 114, 11167, 11173, 101, 114, 115, 59, 1, 8484, 99, 97, 108, 59, 1, 8890, 97, 114, 104, 107, 59, 1, 10775, 114, 111, 100, 59, 1, 10812, 4, 4, 99, 103, 112, 116, 11202, 11206, 11211, 11216, 121, 59, 1, 1105, 111, 110, 59, 1, 303, 102, 59, 3, 55349, 56666, 97, 59, 1, 953, 114, 111, 100, 59, 1, 10812, 117, 101, 115, 116, 5, 191, 1, 59, 11235, 1, 191, 4, 2, 99, 105, 11243, 11248, 114, 59, 3, 55349, 56510, 110, 4, 5, 59, 69, 100, 115, 118, 11261, 11263, 11266, 11271, 11282, 1, 8712, 59, 1, 8953, 111, 116, 59, 1, 8949, 4, 2, 59, 118, 11277, 11279, 1, 8948, 59, 1, 8947, 59, 1, 8712, 4, 2, 59, 105, 11291, 11293, 1, 8290, 108, 100, 101, 59, 1, 297, 4, 2, 107, 109, 11305, 11310, 99, 121, 59, 1, 1110, 108, 5, 239, 1, 59, 11316, 1, 239, 4, 6, 99, 102, 109, 111, 115, 117, 11332, 11346, 11351, 11357, 11363, 11380, 4, 2, 105, 121, 11338, 11343, 114, 99, 59, 1, 309, 59, 1, 1081, 114, 59, 3, 55349, 56615, 97, 116, 104, 59, 1, 567, 112, 102, 59, 3, 55349, 56667, 4, 2, 99, 101, 11369, 11374, 114, 59, 3, 55349, 56511, 114, 99, 121, 59, 1, 1112, 107, 99, 121, 59, 1, 1108, 4, 8, 97, 99, 102, 103, 104, 106, 111, 115, 11404, 11418, 11433, 11438, 11445, 11450, 11455, 11461, 112, 112, 97, 4, 2, 59, 118, 11413, 11415, 1, 954, 59, 1, 1008, 4, 2, 101, 121, 11424, 11430, 100, 105, 108, 59, 1, 311, 59, 1, 1082, 114, 59, 3, 55349, 56616, 114, 101, 101, 110, 59, 1, 312, 99, 121, 59, 1, 1093, 99, 121, 59, 1, 1116, 112, 102, 59, 3, 55349, 56668, 99, 114, 59, 3, 55349, 56512, 4, 23, 65, 66, 69, 72, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 11515, 11538, 11544, 11555, 11560, 11721, 11780, 11818, 11868, 12136, 12160, 12171, 12203, 12208, 12246, 12275, 12327, 12509, 12523, 12569, 12641, 12732, 12752, 4, 3, 97, 114, 116, 11523, 11528, 11532, 114, 114, 59, 1, 8666, 114, 59, 1, 8656, 97, 105, 108, 59, 1, 10523, 97, 114, 114, 59, 1, 10510, 4, 2, 59, 103, 11550, 11552, 1, 8806, 59, 1, 10891, 97, 114, 59, 1, 10594, 4, 9, 99, 101, 103, 109, 110, 112, 113, 114, 116, 11580, 11586, 11594, 11600, 11606, 11624, 11627, 11636, 11694, 117, 116, 101, 59, 1, 314, 109, 112, 116, 121, 118, 59, 1, 10676, 114, 97, 110, 59, 1, 8466, 98, 100, 97, 59, 1, 955, 103, 4, 3, 59, 100, 108, 11615, 11617, 11620, 1, 10216, 59, 1, 10641, 101, 59, 1, 10216, 59, 1, 10885, 117, 111, 5, 171, 1, 59, 11634, 1, 171, 114, 4, 8, 59, 98, 102, 104, 108, 112, 115, 116, 11655, 11657, 11669, 11673, 11677, 11681, 11685, 11690, 1, 8592, 4, 2, 59, 102, 11663, 11665, 1, 8676, 115, 59, 1, 10527, 115, 59, 1, 10525, 107, 59, 1, 8617, 112, 59, 1, 8619, 108, 59, 1, 10553, 105, 109, 59, 1, 10611, 108, 59, 1, 8610, 4, 3, 59, 97, 101, 11702, 11704, 11709, 1, 10923, 105, 108, 59, 1, 10521, 4, 2, 59, 115, 11715, 11717, 1, 10925, 59, 3, 10925, 65024, 4, 3, 97, 98, 114, 11729, 11734, 11739, 114, 114, 59, 1, 10508, 114, 107, 59, 1, 10098, 4, 2, 97, 107, 11745, 11758, 99, 4, 2, 101, 107, 11752, 11755, 59, 1, 123, 59, 1, 91, 4, 2, 101, 115, 11764, 11767, 59, 1, 10635, 108, 4, 2, 100, 117, 11774, 11777, 59, 1, 10639, 59, 1, 10637, 4, 4, 97, 101, 117, 121, 11790, 11796, 11811, 11815, 114, 111, 110, 59, 1, 318, 4, 2, 100, 105, 11802, 11807, 105, 108, 59, 1, 316, 108, 59, 1, 8968, 98, 59, 1, 123, 59, 1, 1083, 4, 4, 99, 113, 114, 115, 11828, 11832, 11845, 11864, 97, 59, 1, 10550, 117, 111, 4, 2, 59, 114, 11840, 11842, 1, 8220, 59, 1, 8222, 4, 2, 100, 117, 11851, 11857, 104, 97, 114, 59, 1, 10599, 115, 104, 97, 114, 59, 1, 10571, 104, 59, 1, 8626, 4, 5, 59, 102, 103, 113, 115, 11880, 11882, 12008, 12011, 12031, 1, 8804, 116, 4, 5, 97, 104, 108, 114, 116, 11895, 11913, 11935, 11947, 11996, 114, 114, 111, 119, 4, 2, 59, 116, 11905, 11907, 1, 8592, 97, 105, 108, 59, 1, 8610, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 11925, 11931, 111, 119, 110, 59, 1, 8637, 112, 59, 1, 8636, 101, 102, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8647, 105, 103, 104, 116, 4, 3, 97, 104, 115, 11959, 11974, 11984, 114, 114, 111, 119, 4, 2, 59, 115, 11969, 11971, 1, 8596, 59, 1, 8646, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8651, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8621, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8907, 59, 1, 8922, 4, 3, 59, 113, 115, 12019, 12021, 12024, 1, 8804, 59, 1, 8806, 108, 97, 110, 116, 59, 1, 10877, 4, 5, 59, 99, 100, 103, 115, 12043, 12045, 12049, 12070, 12083, 1, 10877, 99, 59, 1, 10920, 111, 116, 4, 2, 59, 111, 12057, 12059, 1, 10879, 4, 2, 59, 114, 12065, 12067, 1, 10881, 59, 1, 10883, 4, 2, 59, 101, 12076, 12079, 3, 8922, 65024, 115, 59, 1, 10899, 4, 5, 97, 100, 101, 103, 115, 12095, 12103, 12108, 12126, 12131, 112, 112, 114, 111, 120, 59, 1, 10885, 111, 116, 59, 1, 8918, 113, 4, 2, 103, 113, 12115, 12120, 116, 114, 59, 1, 8922, 103, 116, 114, 59, 1, 10891, 116, 114, 59, 1, 8822, 105, 109, 59, 1, 8818, 4, 3, 105, 108, 114, 12144, 12150, 12156, 115, 104, 116, 59, 1, 10620, 111, 111, 114, 59, 1, 8970, 59, 3, 55349, 56617, 4, 2, 59, 69, 12166, 12168, 1, 8822, 59, 1, 10897, 4, 2, 97, 98, 12177, 12198, 114, 4, 2, 100, 117, 12184, 12187, 59, 1, 8637, 4, 2, 59, 108, 12193, 12195, 1, 8636, 59, 1, 10602, 108, 107, 59, 1, 9604, 99, 121, 59, 1, 1113, 4, 5, 59, 97, 99, 104, 116, 12220, 12222, 12227, 12235, 12241, 1, 8810, 114, 114, 59, 1, 8647, 111, 114, 110, 101, 114, 59, 1, 8990, 97, 114, 100, 59, 1, 10603, 114, 105, 59, 1, 9722, 4, 2, 105, 111, 12252, 12258, 100, 111, 116, 59, 1, 320, 117, 115, 116, 4, 2, 59, 97, 12267, 12269, 1, 9136, 99, 104, 101, 59, 1, 9136, 4, 4, 69, 97, 101, 115, 12285, 12288, 12303, 12322, 59, 1, 8808, 112, 4, 2, 59, 112, 12295, 12297, 1, 10889, 114, 111, 120, 59, 1, 10889, 4, 2, 59, 113, 12309, 12311, 1, 10887, 4, 2, 59, 113, 12317, 12319, 1, 10887, 59, 1, 8808, 105, 109, 59, 1, 8934, 4, 8, 97, 98, 110, 111, 112, 116, 119, 122, 12345, 12359, 12364, 12421, 12446, 12467, 12474, 12490, 4, 2, 110, 114, 12351, 12355, 103, 59, 1, 10220, 114, 59, 1, 8701, 114, 107, 59, 1, 10214, 103, 4, 3, 108, 109, 114, 12373, 12401, 12409, 101, 102, 116, 4, 2, 97, 114, 12382, 12389, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10231, 97, 112, 115, 116, 111, 59, 1, 10236, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10230, 112, 97, 114, 114, 111, 119, 4, 2, 108, 114, 12433, 12439, 101, 102, 116, 59, 1, 8619, 105, 103, 104, 116, 59, 1, 8620, 4, 3, 97, 102, 108, 12454, 12458, 12462, 114, 59, 1, 10629, 59, 3, 55349, 56669, 117, 115, 59, 1, 10797, 105, 109, 101, 115, 59, 1, 10804, 4, 2, 97, 98, 12480, 12485, 115, 116, 59, 1, 8727, 97, 114, 59, 1, 95, 4, 3, 59, 101, 102, 12498, 12500, 12506, 1, 9674, 110, 103, 101, 59, 1, 9674, 59, 1, 10731, 97, 114, 4, 2, 59, 108, 12517, 12519, 1, 40, 116, 59, 1, 10643, 4, 5, 97, 99, 104, 109, 116, 12535, 12540, 12548, 12561, 12564, 114, 114, 59, 1, 8646, 111, 114, 110, 101, 114, 59, 1, 8991, 97, 114, 4, 2, 59, 100, 12556, 12558, 1, 8651, 59, 1, 10605, 59, 1, 8206, 114, 105, 59, 1, 8895, 4, 6, 97, 99, 104, 105, 113, 116, 12583, 12589, 12594, 12597, 12614, 12635, 113, 117, 111, 59, 1, 8249, 114, 59, 3, 55349, 56513, 59, 1, 8624, 109, 4, 3, 59, 101, 103, 12606, 12608, 12611, 1, 8818, 59, 1, 10893, 59, 1, 10895, 4, 2, 98, 117, 12620, 12623, 59, 1, 91, 111, 4, 2, 59, 114, 12630, 12632, 1, 8216, 59, 1, 8218, 114, 111, 107, 59, 1, 322, 5, 60, 8, 59, 99, 100, 104, 105, 108, 113, 114, 12660, 12662, 12675, 12680, 12686, 12692, 12698, 12705, 1, 60, 4, 2, 99, 105, 12668, 12671, 59, 1, 10918, 114, 59, 1, 10873, 111, 116, 59, 1, 8918, 114, 101, 101, 59, 1, 8907, 109, 101, 115, 59, 1, 8905, 97, 114, 114, 59, 1, 10614, 117, 101, 115, 116, 59, 1, 10875, 4, 2, 80, 105, 12711, 12716, 97, 114, 59, 1, 10646, 4, 3, 59, 101, 102, 12724, 12726, 12729, 1, 9667, 59, 1, 8884, 59, 1, 9666, 114, 4, 2, 100, 117, 12739, 12746, 115, 104, 97, 114, 59, 1, 10570, 104, 97, 114, 59, 1, 10598, 4, 2, 101, 110, 12758, 12768, 114, 116, 110, 101, 113, 113, 59, 3, 8808, 65024, 69, 59, 3, 8808, 65024, 4, 14, 68, 97, 99, 100, 101, 102, 104, 105, 108, 110, 111, 112, 115, 117, 12803, 12809, 12893, 12908, 12914, 12928, 12933, 12937, 13011, 13025, 13032, 13049, 13052, 13069, 68, 111, 116, 59, 1, 8762, 4, 4, 99, 108, 112, 114, 12819, 12827, 12849, 12887, 114, 5, 175, 1, 59, 12825, 1, 175, 4, 2, 101, 116, 12833, 12836, 59, 1, 9794, 4, 2, 59, 101, 12842, 12844, 1, 10016, 115, 101, 59, 1, 10016, 4, 2, 59, 115, 12855, 12857, 1, 8614, 116, 111, 4, 4, 59, 100, 108, 117, 12869, 12871, 12877, 12883, 1, 8614, 111, 119, 110, 59, 1, 8615, 101, 102, 116, 59, 1, 8612, 112, 59, 1, 8613, 107, 101, 114, 59, 1, 9646, 4, 2, 111, 121, 12899, 12905, 109, 109, 97, 59, 1, 10793, 59, 1, 1084, 97, 115, 104, 59, 1, 8212, 97, 115, 117, 114, 101, 100, 97, 110, 103, 108, 101, 59, 1, 8737, 114, 59, 3, 55349, 56618, 111, 59, 1, 8487, 4, 3, 99, 100, 110, 12945, 12954, 12985, 114, 111, 5, 181, 1, 59, 12952, 1, 181, 4, 4, 59, 97, 99, 100, 12964, 12966, 12971, 12976, 1, 8739, 115, 116, 59, 1, 42, 105, 114, 59, 1, 10992, 111, 116, 5, 183, 1, 59, 12983, 1, 183, 117, 115, 4, 3, 59, 98, 100, 12995, 12997, 13e3, 1, 8722, 59, 1, 8863, 4, 2, 59, 117, 13006, 13008, 1, 8760, 59, 1, 10794, 4, 2, 99, 100, 13017, 13021, 112, 59, 1, 10971, 114, 59, 1, 8230, 112, 108, 117, 115, 59, 1, 8723, 4, 2, 100, 112, 13038, 13044, 101, 108, 115, 59, 1, 8871, 102, 59, 3, 55349, 56670, 59, 1, 8723, 4, 2, 99, 116, 13058, 13063, 114, 59, 3, 55349, 56514, 112, 111, 115, 59, 1, 8766, 4, 3, 59, 108, 109, 13077, 13079, 13087, 1, 956, 116, 105, 109, 97, 112, 59, 1, 8888, 97, 112, 59, 1, 8888, 4, 24, 71, 76, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 13142, 13165, 13217, 13229, 13247, 13330, 13359, 13414, 13420, 13508, 13513, 13579, 13602, 13626, 13631, 13762, 13767, 13855, 13936, 13995, 14214, 14285, 14312, 14432, 4, 2, 103, 116, 13148, 13152, 59, 3, 8921, 824, 4, 2, 59, 118, 13158, 13161, 3, 8811, 8402, 59, 3, 8811, 824, 4, 3, 101, 108, 116, 13173, 13200, 13204, 102, 116, 4, 2, 97, 114, 13181, 13188, 114, 114, 111, 119, 59, 1, 8653, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8654, 59, 3, 8920, 824, 4, 2, 59, 118, 13210, 13213, 3, 8810, 8402, 59, 3, 8810, 824, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8655, 4, 2, 68, 100, 13235, 13241, 97, 115, 104, 59, 1, 8879, 97, 115, 104, 59, 1, 8878, 4, 5, 98, 99, 110, 112, 116, 13259, 13264, 13270, 13275, 13308, 108, 97, 59, 1, 8711, 117, 116, 101, 59, 1, 324, 103, 59, 3, 8736, 8402, 4, 5, 59, 69, 105, 111, 112, 13287, 13289, 13293, 13298, 13302, 1, 8777, 59, 3, 10864, 824, 100, 59, 3, 8779, 824, 115, 59, 1, 329, 114, 111, 120, 59, 1, 8777, 117, 114, 4, 2, 59, 97, 13316, 13318, 1, 9838, 108, 4, 2, 59, 115, 13325, 13327, 1, 9838, 59, 1, 8469, 4, 2, 115, 117, 13336, 13344, 112, 5, 160, 1, 59, 13342, 1, 160, 109, 112, 4, 2, 59, 101, 13352, 13355, 3, 8782, 824, 59, 3, 8783, 824, 4, 5, 97, 101, 111, 117, 121, 13371, 13385, 13391, 13407, 13411, 4, 2, 112, 114, 13377, 13380, 59, 1, 10819, 111, 110, 59, 1, 328, 100, 105, 108, 59, 1, 326, 110, 103, 4, 2, 59, 100, 13399, 13401, 1, 8775, 111, 116, 59, 3, 10861, 824, 112, 59, 1, 10818, 59, 1, 1085, 97, 115, 104, 59, 1, 8211, 4, 7, 59, 65, 97, 100, 113, 115, 120, 13436, 13438, 13443, 13466, 13472, 13478, 13494, 1, 8800, 114, 114, 59, 1, 8663, 114, 4, 2, 104, 114, 13450, 13454, 107, 59, 1, 10532, 4, 2, 59, 111, 13460, 13462, 1, 8599, 119, 59, 1, 8599, 111, 116, 59, 3, 8784, 824, 117, 105, 118, 59, 1, 8802, 4, 2, 101, 105, 13484, 13489, 97, 114, 59, 1, 10536, 109, 59, 3, 8770, 824, 105, 115, 116, 4, 2, 59, 115, 13503, 13505, 1, 8708, 59, 1, 8708, 114, 59, 3, 55349, 56619, 4, 4, 69, 101, 115, 116, 13523, 13527, 13563, 13568, 59, 3, 8807, 824, 4, 3, 59, 113, 115, 13535, 13537, 13559, 1, 8817, 4, 3, 59, 113, 115, 13545, 13547, 13551, 1, 8817, 59, 3, 8807, 824, 108, 97, 110, 116, 59, 3, 10878, 824, 59, 3, 10878, 824, 105, 109, 59, 1, 8821, 4, 2, 59, 114, 13574, 13576, 1, 8815, 59, 1, 8815, 4, 3, 65, 97, 112, 13587, 13592, 13597, 114, 114, 59, 1, 8654, 114, 114, 59, 1, 8622, 97, 114, 59, 1, 10994, 4, 3, 59, 115, 118, 13610, 13612, 13623, 1, 8715, 4, 2, 59, 100, 13618, 13620, 1, 8956, 59, 1, 8954, 59, 1, 8715, 99, 121, 59, 1, 1114, 4, 7, 65, 69, 97, 100, 101, 115, 116, 13647, 13652, 13656, 13661, 13665, 13737, 13742, 114, 114, 59, 1, 8653, 59, 3, 8806, 824, 114, 114, 59, 1, 8602, 114, 59, 1, 8229, 4, 4, 59, 102, 113, 115, 13675, 13677, 13703, 13725, 1, 8816, 116, 4, 2, 97, 114, 13684, 13691, 114, 114, 111, 119, 59, 1, 8602, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8622, 4, 3, 59, 113, 115, 13711, 13713, 13717, 1, 8816, 59, 3, 8806, 824, 108, 97, 110, 116, 59, 3, 10877, 824, 4, 2, 59, 115, 13731, 13734, 3, 10877, 824, 59, 1, 8814, 105, 109, 59, 1, 8820, 4, 2, 59, 114, 13748, 13750, 1, 8814, 105, 4, 2, 59, 101, 13757, 13759, 1, 8938, 59, 1, 8940, 105, 100, 59, 1, 8740, 4, 2, 112, 116, 13773, 13778, 102, 59, 3, 55349, 56671, 5, 172, 3, 59, 105, 110, 13787, 13789, 13829, 1, 172, 110, 4, 4, 59, 69, 100, 118, 13800, 13802, 13806, 13812, 1, 8713, 59, 3, 8953, 824, 111, 116, 59, 3, 8949, 824, 4, 3, 97, 98, 99, 13820, 13823, 13826, 59, 1, 8713, 59, 1, 8951, 59, 1, 8950, 105, 4, 2, 59, 118, 13836, 13838, 1, 8716, 4, 3, 97, 98, 99, 13846, 13849, 13852, 59, 1, 8716, 59, 1, 8958, 59, 1, 8957, 4, 3, 97, 111, 114, 13863, 13892, 13899, 114, 4, 4, 59, 97, 115, 116, 13874, 13876, 13883, 13888, 1, 8742, 108, 108, 101, 108, 59, 1, 8742, 108, 59, 3, 11005, 8421, 59, 3, 8706, 824, 108, 105, 110, 116, 59, 1, 10772, 4, 3, 59, 99, 101, 13907, 13909, 13914, 1, 8832, 117, 101, 59, 1, 8928, 4, 2, 59, 99, 13920, 13923, 3, 10927, 824, 4, 2, 59, 101, 13929, 13931, 1, 8832, 113, 59, 3, 10927, 824, 4, 4, 65, 97, 105, 116, 13946, 13951, 13971, 13982, 114, 114, 59, 1, 8655, 114, 114, 4, 3, 59, 99, 119, 13961, 13963, 13967, 1, 8603, 59, 3, 10547, 824, 59, 3, 8605, 824, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8603, 114, 105, 4, 2, 59, 101, 13990, 13992, 1, 8939, 59, 1, 8941, 4, 7, 99, 104, 105, 109, 112, 113, 117, 14011, 14036, 14060, 14080, 14085, 14090, 14106, 4, 4, 59, 99, 101, 114, 14021, 14023, 14028, 14032, 1, 8833, 117, 101, 59, 1, 8929, 59, 3, 10928, 824, 59, 3, 55349, 56515, 111, 114, 116, 4, 2, 109, 112, 14045, 14050, 105, 100, 59, 1, 8740, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8742, 109, 4, 2, 59, 101, 14067, 14069, 1, 8769, 4, 2, 59, 113, 14075, 14077, 1, 8772, 59, 1, 8772, 105, 100, 59, 1, 8740, 97, 114, 59, 1, 8742, 115, 117, 4, 2, 98, 112, 14098, 14102, 101, 59, 1, 8930, 101, 59, 1, 8931, 4, 3, 98, 99, 112, 14114, 14157, 14171, 4, 4, 59, 69, 101, 115, 14124, 14126, 14130, 14133, 1, 8836, 59, 3, 10949, 824, 59, 1, 8840, 101, 116, 4, 2, 59, 101, 14141, 14144, 3, 8834, 8402, 113, 4, 2, 59, 113, 14151, 14153, 1, 8840, 59, 3, 10949, 824, 99, 4, 2, 59, 101, 14164, 14166, 1, 8833, 113, 59, 3, 10928, 824, 4, 4, 59, 69, 101, 115, 14181, 14183, 14187, 14190, 1, 8837, 59, 3, 10950, 824, 59, 1, 8841, 101, 116, 4, 2, 59, 101, 14198, 14201, 3, 8835, 8402, 113, 4, 2, 59, 113, 14208, 14210, 1, 8841, 59, 3, 10950, 824, 4, 4, 103, 105, 108, 114, 14224, 14228, 14238, 14242, 108, 59, 1, 8825, 108, 100, 101, 5, 241, 1, 59, 14236, 1, 241, 103, 59, 1, 8824, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 14254, 14269, 101, 102, 116, 4, 2, 59, 101, 14263, 14265, 1, 8938, 113, 59, 1, 8940, 105, 103, 104, 116, 4, 2, 59, 101, 14279, 14281, 1, 8939, 113, 59, 1, 8941, 4, 2, 59, 109, 14291, 14293, 1, 957, 4, 3, 59, 101, 115, 14301, 14303, 14308, 1, 35, 114, 111, 59, 1, 8470, 112, 59, 1, 8199, 4, 9, 68, 72, 97, 100, 103, 105, 108, 114, 115, 14332, 14338, 14344, 14349, 14355, 14369, 14376, 14408, 14426, 97, 115, 104, 59, 1, 8877, 97, 114, 114, 59, 1, 10500, 112, 59, 3, 8781, 8402, 97, 115, 104, 59, 1, 8876, 4, 2, 101, 116, 14361, 14365, 59, 3, 8805, 8402, 59, 3, 62, 8402, 110, 102, 105, 110, 59, 1, 10718, 4, 3, 65, 101, 116, 14384, 14389, 14393, 114, 114, 59, 1, 10498, 59, 3, 8804, 8402, 4, 2, 59, 114, 14399, 14402, 3, 60, 8402, 105, 101, 59, 3, 8884, 8402, 4, 2, 65, 116, 14414, 14419, 114, 114, 59, 1, 10499, 114, 105, 101, 59, 3, 8885, 8402, 105, 109, 59, 3, 8764, 8402, 4, 3, 65, 97, 110, 14440, 14445, 14468, 114, 114, 59, 1, 8662, 114, 4, 2, 104, 114, 14452, 14456, 107, 59, 1, 10531, 4, 2, 59, 111, 14462, 14464, 1, 8598, 119, 59, 1, 8598, 101, 97, 114, 59, 1, 10535, 4, 18, 83, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 14512, 14515, 14535, 14560, 14597, 14603, 14618, 14643, 14657, 14662, 14701, 14741, 14747, 14769, 14851, 14877, 14907, 14916, 59, 1, 9416, 4, 2, 99, 115, 14521, 14531, 117, 116, 101, 5, 243, 1, 59, 14529, 1, 243, 116, 59, 1, 8859, 4, 2, 105, 121, 14541, 14557, 114, 4, 2, 59, 99, 14548, 14550, 1, 8858, 5, 244, 1, 59, 14555, 1, 244, 59, 1, 1086, 4, 5, 97, 98, 105, 111, 115, 14572, 14577, 14583, 14587, 14591, 115, 104, 59, 1, 8861, 108, 97, 99, 59, 1, 337, 118, 59, 1, 10808, 116, 59, 1, 8857, 111, 108, 100, 59, 1, 10684, 108, 105, 103, 59, 1, 339, 4, 2, 99, 114, 14609, 14614, 105, 114, 59, 1, 10687, 59, 3, 55349, 56620, 4, 3, 111, 114, 116, 14626, 14630, 14640, 110, 59, 1, 731, 97, 118, 101, 5, 242, 1, 59, 14638, 1, 242, 59, 1, 10689, 4, 2, 98, 109, 14649, 14654, 97, 114, 59, 1, 10677, 59, 1, 937, 110, 116, 59, 1, 8750, 4, 4, 97, 99, 105, 116, 14672, 14677, 14693, 14698, 114, 114, 59, 1, 8634, 4, 2, 105, 114, 14683, 14687, 114, 59, 1, 10686, 111, 115, 115, 59, 1, 10683, 110, 101, 59, 1, 8254, 59, 1, 10688, 4, 3, 97, 101, 105, 14709, 14714, 14719, 99, 114, 59, 1, 333, 103, 97, 59, 1, 969, 4, 3, 99, 100, 110, 14727, 14733, 14736, 114, 111, 110, 59, 1, 959, 59, 1, 10678, 117, 115, 59, 1, 8854, 112, 102, 59, 3, 55349, 56672, 4, 3, 97, 101, 108, 14755, 14759, 14764, 114, 59, 1, 10679, 114, 112, 59, 1, 10681, 117, 115, 59, 1, 8853, 4, 7, 59, 97, 100, 105, 111, 115, 118, 14785, 14787, 14792, 14831, 14837, 14841, 14848, 1, 8744, 114, 114, 59, 1, 8635, 4, 4, 59, 101, 102, 109, 14802, 14804, 14817, 14824, 1, 10845, 114, 4, 2, 59, 111, 14811, 14813, 1, 8500, 102, 59, 1, 8500, 5, 170, 1, 59, 14822, 1, 170, 5, 186, 1, 59, 14829, 1, 186, 103, 111, 102, 59, 1, 8886, 114, 59, 1, 10838, 108, 111, 112, 101, 59, 1, 10839, 59, 1, 10843, 4, 3, 99, 108, 111, 14859, 14863, 14873, 114, 59, 1, 8500, 97, 115, 104, 5, 248, 1, 59, 14871, 1, 248, 108, 59, 1, 8856, 105, 4, 2, 108, 109, 14884, 14893, 100, 101, 5, 245, 1, 59, 14891, 1, 245, 101, 115, 4, 2, 59, 97, 14901, 14903, 1, 8855, 115, 59, 1, 10806, 109, 108, 5, 246, 1, 59, 14914, 1, 246, 98, 97, 114, 59, 1, 9021, 4, 12, 97, 99, 101, 102, 104, 105, 108, 109, 111, 114, 115, 117, 14948, 14992, 14996, 15033, 15038, 15068, 15090, 15189, 15192, 15222, 15427, 15441, 114, 4, 4, 59, 97, 115, 116, 14959, 14961, 14976, 14989, 1, 8741, 5, 182, 2, 59, 108, 14968, 14970, 1, 182, 108, 101, 108, 59, 1, 8741, 4, 2, 105, 108, 14982, 14986, 109, 59, 1, 10995, 59, 1, 11005, 59, 1, 8706, 121, 59, 1, 1087, 114, 4, 5, 99, 105, 109, 112, 116, 15009, 15014, 15019, 15024, 15027, 110, 116, 59, 1, 37, 111, 100, 59, 1, 46, 105, 108, 59, 1, 8240, 59, 1, 8869, 101, 110, 107, 59, 1, 8241, 114, 59, 3, 55349, 56621, 4, 3, 105, 109, 111, 15046, 15057, 15063, 4, 2, 59, 118, 15052, 15054, 1, 966, 59, 1, 981, 109, 97, 116, 59, 1, 8499, 110, 101, 59, 1, 9742, 4, 3, 59, 116, 118, 15076, 15078, 15087, 1, 960, 99, 104, 102, 111, 114, 107, 59, 1, 8916, 59, 1, 982, 4, 2, 97, 117, 15096, 15119, 110, 4, 2, 99, 107, 15103, 15115, 107, 4, 2, 59, 104, 15110, 15112, 1, 8463, 59, 1, 8462, 118, 59, 1, 8463, 115, 4, 9, 59, 97, 98, 99, 100, 101, 109, 115, 116, 15140, 15142, 15148, 15151, 15156, 15168, 15171, 15179, 15184, 1, 43, 99, 105, 114, 59, 1, 10787, 59, 1, 8862, 105, 114, 59, 1, 10786, 4, 2, 111, 117, 15162, 15165, 59, 1, 8724, 59, 1, 10789, 59, 1, 10866, 110, 5, 177, 1, 59, 15177, 1, 177, 105, 109, 59, 1, 10790, 119, 111, 59, 1, 10791, 59, 1, 177, 4, 3, 105, 112, 117, 15200, 15208, 15213, 110, 116, 105, 110, 116, 59, 1, 10773, 102, 59, 3, 55349, 56673, 110, 100, 5, 163, 1, 59, 15220, 1, 163, 4, 10, 59, 69, 97, 99, 101, 105, 110, 111, 115, 117, 15244, 15246, 15249, 15253, 15258, 15334, 15347, 15367, 15416, 15421, 1, 8826, 59, 1, 10931, 112, 59, 1, 10935, 117, 101, 59, 1, 8828, 4, 2, 59, 99, 15264, 15266, 1, 10927, 4, 6, 59, 97, 99, 101, 110, 115, 15280, 15282, 15290, 15299, 15303, 15329, 1, 8826, 112, 112, 114, 111, 120, 59, 1, 10935, 117, 114, 108, 121, 101, 113, 59, 1, 8828, 113, 59, 1, 10927, 4, 3, 97, 101, 115, 15311, 15319, 15324, 112, 112, 114, 111, 120, 59, 1, 10937, 113, 113, 59, 1, 10933, 105, 109, 59, 1, 8936, 105, 109, 59, 1, 8830, 109, 101, 4, 2, 59, 115, 15342, 15344, 1, 8242, 59, 1, 8473, 4, 3, 69, 97, 115, 15355, 15358, 15362, 59, 1, 10933, 112, 59, 1, 10937, 105, 109, 59, 1, 8936, 4, 3, 100, 102, 112, 15375, 15378, 15404, 59, 1, 8719, 4, 3, 97, 108, 115, 15386, 15392, 15398, 108, 97, 114, 59, 1, 9006, 105, 110, 101, 59, 1, 8978, 117, 114, 102, 59, 1, 8979, 4, 2, 59, 116, 15410, 15412, 1, 8733, 111, 59, 1, 8733, 105, 109, 59, 1, 8830, 114, 101, 108, 59, 1, 8880, 4, 2, 99, 105, 15433, 15438, 114, 59, 3, 55349, 56517, 59, 1, 968, 110, 99, 115, 112, 59, 1, 8200, 4, 6, 102, 105, 111, 112, 115, 117, 15462, 15467, 15472, 15478, 15485, 15491, 114, 59, 3, 55349, 56622, 110, 116, 59, 1, 10764, 112, 102, 59, 3, 55349, 56674, 114, 105, 109, 101, 59, 1, 8279, 99, 114, 59, 3, 55349, 56518, 4, 3, 97, 101, 111, 15499, 15520, 15534, 116, 4, 2, 101, 105, 15506, 15515, 114, 110, 105, 111, 110, 115, 59, 1, 8461, 110, 116, 59, 1, 10774, 115, 116, 4, 2, 59, 101, 15528, 15530, 1, 63, 113, 59, 1, 8799, 116, 5, 34, 1, 59, 15540, 1, 34, 4, 21, 65, 66, 72, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 15586, 15609, 15615, 15620, 15796, 15855, 15893, 15931, 15977, 16001, 16039, 16183, 16204, 16222, 16228, 16285, 16312, 16318, 16363, 16408, 16416, 4, 3, 97, 114, 116, 15594, 15599, 15603, 114, 114, 59, 1, 8667, 114, 59, 1, 8658, 97, 105, 108, 59, 1, 10524, 97, 114, 114, 59, 1, 10511, 97, 114, 59, 1, 10596, 4, 7, 99, 100, 101, 110, 113, 114, 116, 15636, 15651, 15656, 15664, 15687, 15696, 15770, 4, 2, 101, 117, 15642, 15646, 59, 3, 8765, 817, 116, 101, 59, 1, 341, 105, 99, 59, 1, 8730, 109, 112, 116, 121, 118, 59, 1, 10675, 103, 4, 4, 59, 100, 101, 108, 15675, 15677, 15680, 15683, 1, 10217, 59, 1, 10642, 59, 1, 10661, 101, 59, 1, 10217, 117, 111, 5, 187, 1, 59, 15694, 1, 187, 114, 4, 11, 59, 97, 98, 99, 102, 104, 108, 112, 115, 116, 119, 15721, 15723, 15727, 15739, 15742, 15746, 15750, 15754, 15758, 15763, 15767, 1, 8594, 112, 59, 1, 10613, 4, 2, 59, 102, 15733, 15735, 1, 8677, 115, 59, 1, 10528, 59, 1, 10547, 115, 59, 1, 10526, 107, 59, 1, 8618, 112, 59, 1, 8620, 108, 59, 1, 10565, 105, 109, 59, 1, 10612, 108, 59, 1, 8611, 59, 1, 8605, 4, 2, 97, 105, 15776, 15781, 105, 108, 59, 1, 10522, 111, 4, 2, 59, 110, 15788, 15790, 1, 8758, 97, 108, 115, 59, 1, 8474, 4, 3, 97, 98, 114, 15804, 15809, 15814, 114, 114, 59, 1, 10509, 114, 107, 59, 1, 10099, 4, 2, 97, 107, 15820, 15833, 99, 4, 2, 101, 107, 15827, 15830, 59, 1, 125, 59, 1, 93, 4, 2, 101, 115, 15839, 15842, 59, 1, 10636, 108, 4, 2, 100, 117, 15849, 15852, 59, 1, 10638, 59, 1, 10640, 4, 4, 97, 101, 117, 121, 15865, 15871, 15886, 15890, 114, 111, 110, 59, 1, 345, 4, 2, 100, 105, 15877, 15882, 105, 108, 59, 1, 343, 108, 59, 1, 8969, 98, 59, 1, 125, 59, 1, 1088, 4, 4, 99, 108, 113, 115, 15903, 15907, 15914, 15927, 97, 59, 1, 10551, 100, 104, 97, 114, 59, 1, 10601, 117, 111, 4, 2, 59, 114, 15922, 15924, 1, 8221, 59, 1, 8221, 104, 59, 1, 8627, 4, 3, 97, 99, 103, 15939, 15966, 15970, 108, 4, 4, 59, 105, 112, 115, 15950, 15952, 15957, 15963, 1, 8476, 110, 101, 59, 1, 8475, 97, 114, 116, 59, 1, 8476, 59, 1, 8477, 116, 59, 1, 9645, 5, 174, 1, 59, 15975, 1, 174, 4, 3, 105, 108, 114, 15985, 15991, 15997, 115, 104, 116, 59, 1, 10621, 111, 111, 114, 59, 1, 8971, 59, 3, 55349, 56623, 4, 2, 97, 111, 16007, 16028, 114, 4, 2, 100, 117, 16014, 16017, 59, 1, 8641, 4, 2, 59, 108, 16023, 16025, 1, 8640, 59, 1, 10604, 4, 2, 59, 118, 16034, 16036, 1, 961, 59, 1, 1009, 4, 3, 103, 110, 115, 16047, 16167, 16171, 104, 116, 4, 6, 97, 104, 108, 114, 115, 116, 16063, 16081, 16103, 16130, 16143, 16155, 114, 114, 111, 119, 4, 2, 59, 116, 16073, 16075, 1, 8594, 97, 105, 108, 59, 1, 8611, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 16093, 16099, 111, 119, 110, 59, 1, 8641, 112, 59, 1, 8640, 101, 102, 116, 4, 2, 97, 104, 16112, 16120, 114, 114, 111, 119, 115, 59, 1, 8644, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8652, 105, 103, 104, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8649, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8605, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8908, 103, 59, 1, 730, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8787, 4, 3, 97, 104, 109, 16191, 16196, 16201, 114, 114, 59, 1, 8644, 97, 114, 59, 1, 8652, 59, 1, 8207, 111, 117, 115, 116, 4, 2, 59, 97, 16214, 16216, 1, 9137, 99, 104, 101, 59, 1, 9137, 109, 105, 100, 59, 1, 10990, 4, 4, 97, 98, 112, 116, 16238, 16252, 16257, 16278, 4, 2, 110, 114, 16244, 16248, 103, 59, 1, 10221, 114, 59, 1, 8702, 114, 107, 59, 1, 10215, 4, 3, 97, 102, 108, 16265, 16269, 16273, 114, 59, 1, 10630, 59, 3, 55349, 56675, 117, 115, 59, 1, 10798, 105, 109, 101, 115, 59, 1, 10805, 4, 2, 97, 112, 16291, 16304, 114, 4, 2, 59, 103, 16298, 16300, 1, 41, 116, 59, 1, 10644, 111, 108, 105, 110, 116, 59, 1, 10770, 97, 114, 114, 59, 1, 8649, 4, 4, 97, 99, 104, 113, 16328, 16334, 16339, 16342, 113, 117, 111, 59, 1, 8250, 114, 59, 3, 55349, 56519, 59, 1, 8625, 4, 2, 98, 117, 16348, 16351, 59, 1, 93, 111, 4, 2, 59, 114, 16358, 16360, 1, 8217, 59, 1, 8217, 4, 3, 104, 105, 114, 16371, 16377, 16383, 114, 101, 101, 59, 1, 8908, 109, 101, 115, 59, 1, 8906, 105, 4, 4, 59, 101, 102, 108, 16394, 16396, 16399, 16402, 1, 9657, 59, 1, 8885, 59, 1, 9656, 116, 114, 105, 59, 1, 10702, 108, 117, 104, 97, 114, 59, 1, 10600, 59, 1, 8478, 4, 19, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 16459, 16466, 16472, 16572, 16590, 16672, 16687, 16746, 16844, 16850, 16924, 16963, 16988, 17115, 17121, 17154, 17206, 17614, 17656, 99, 117, 116, 101, 59, 1, 347, 113, 117, 111, 59, 1, 8218, 4, 10, 59, 69, 97, 99, 101, 105, 110, 112, 115, 121, 16494, 16496, 16499, 16513, 16518, 16531, 16536, 16556, 16564, 16569, 1, 8827, 59, 1, 10932, 4, 2, 112, 114, 16505, 16508, 59, 1, 10936, 111, 110, 59, 1, 353, 117, 101, 59, 1, 8829, 4, 2, 59, 100, 16524, 16526, 1, 10928, 105, 108, 59, 1, 351, 114, 99, 59, 1, 349, 4, 3, 69, 97, 115, 16544, 16547, 16551, 59, 1, 10934, 112, 59, 1, 10938, 105, 109, 59, 1, 8937, 111, 108, 105, 110, 116, 59, 1, 10771, 105, 109, 59, 1, 8831, 59, 1, 1089, 111, 116, 4, 3, 59, 98, 101, 16582, 16584, 16587, 1, 8901, 59, 1, 8865, 59, 1, 10854, 4, 7, 65, 97, 99, 109, 115, 116, 120, 16606, 16611, 16634, 16642, 16646, 16652, 16668, 114, 114, 59, 1, 8664, 114, 4, 2, 104, 114, 16618, 16622, 107, 59, 1, 10533, 4, 2, 59, 111, 16628, 16630, 1, 8600, 119, 59, 1, 8600, 116, 5, 167, 1, 59, 16640, 1, 167, 105, 59, 1, 59, 119, 97, 114, 59, 1, 10537, 109, 4, 2, 105, 110, 16659, 16665, 110, 117, 115, 59, 1, 8726, 59, 1, 8726, 116, 59, 1, 10038, 114, 4, 2, 59, 111, 16679, 16682, 3, 55349, 56624, 119, 110, 59, 1, 8994, 4, 4, 97, 99, 111, 121, 16697, 16702, 16716, 16739, 114, 112, 59, 1, 9839, 4, 2, 104, 121, 16708, 16713, 99, 121, 59, 1, 1097, 59, 1, 1096, 114, 116, 4, 2, 109, 112, 16724, 16729, 105, 100, 59, 1, 8739, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8741, 5, 173, 1, 59, 16744, 1, 173, 4, 2, 103, 109, 16752, 16770, 109, 97, 4, 3, 59, 102, 118, 16762, 16764, 16767, 1, 963, 59, 1, 962, 59, 1, 962, 4, 8, 59, 100, 101, 103, 108, 110, 112, 114, 16788, 16790, 16795, 16806, 16817, 16828, 16832, 16838, 1, 8764, 111, 116, 59, 1, 10858, 4, 2, 59, 113, 16801, 16803, 1, 8771, 59, 1, 8771, 4, 2, 59, 69, 16812, 16814, 1, 10910, 59, 1, 10912, 4, 2, 59, 69, 16823, 16825, 1, 10909, 59, 1, 10911, 101, 59, 1, 8774, 108, 117, 115, 59, 1, 10788, 97, 114, 114, 59, 1, 10610, 97, 114, 114, 59, 1, 8592, 4, 4, 97, 101, 105, 116, 16860, 16883, 16891, 16904, 4, 2, 108, 115, 16866, 16878, 108, 115, 101, 116, 109, 105, 110, 117, 115, 59, 1, 8726, 104, 112, 59, 1, 10803, 112, 97, 114, 115, 108, 59, 1, 10724, 4, 2, 100, 108, 16897, 16900, 59, 1, 8739, 101, 59, 1, 8995, 4, 2, 59, 101, 16910, 16912, 1, 10922, 4, 2, 59, 115, 16918, 16920, 1, 10924, 59, 3, 10924, 65024, 4, 3, 102, 108, 112, 16932, 16938, 16958, 116, 99, 121, 59, 1, 1100, 4, 2, 59, 98, 16944, 16946, 1, 47, 4, 2, 59, 97, 16952, 16954, 1, 10692, 114, 59, 1, 9023, 102, 59, 3, 55349, 56676, 97, 4, 2, 100, 114, 16970, 16985, 101, 115, 4, 2, 59, 117, 16978, 16980, 1, 9824, 105, 116, 59, 1, 9824, 59, 1, 8741, 4, 3, 99, 115, 117, 16996, 17028, 17089, 4, 2, 97, 117, 17002, 17015, 112, 4, 2, 59, 115, 17009, 17011, 1, 8851, 59, 3, 8851, 65024, 112, 4, 2, 59, 115, 17022, 17024, 1, 8852, 59, 3, 8852, 65024, 117, 4, 2, 98, 112, 17035, 17062, 4, 3, 59, 101, 115, 17043, 17045, 17048, 1, 8847, 59, 1, 8849, 101, 116, 4, 2, 59, 101, 17056, 17058, 1, 8847, 113, 59, 1, 8849, 4, 3, 59, 101, 115, 17070, 17072, 17075, 1, 8848, 59, 1, 8850, 101, 116, 4, 2, 59, 101, 17083, 17085, 1, 8848, 113, 59, 1, 8850, 4, 3, 59, 97, 102, 17097, 17099, 17112, 1, 9633, 114, 4, 2, 101, 102, 17106, 17109, 59, 1, 9633, 59, 1, 9642, 59, 1, 9642, 97, 114, 114, 59, 1, 8594, 4, 4, 99, 101, 109, 116, 17131, 17136, 17142, 17148, 114, 59, 3, 55349, 56520, 116, 109, 110, 59, 1, 8726, 105, 108, 101, 59, 1, 8995, 97, 114, 102, 59, 1, 8902, 4, 2, 97, 114, 17160, 17172, 114, 4, 2, 59, 102, 17167, 17169, 1, 9734, 59, 1, 9733, 4, 2, 97, 110, 17178, 17202, 105, 103, 104, 116, 4, 2, 101, 112, 17188, 17197, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 104, 105, 59, 1, 981, 115, 59, 1, 175, 4, 5, 98, 99, 109, 110, 112, 17218, 17351, 17420, 17423, 17427, 4, 9, 59, 69, 100, 101, 109, 110, 112, 114, 115, 17238, 17240, 17243, 17248, 17261, 17267, 17279, 17285, 17291, 1, 8834, 59, 1, 10949, 111, 116, 59, 1, 10941, 4, 2, 59, 100, 17254, 17256, 1, 8838, 111, 116, 59, 1, 10947, 117, 108, 116, 59, 1, 10945, 4, 2, 69, 101, 17273, 17276, 59, 1, 10955, 59, 1, 8842, 108, 117, 115, 59, 1, 10943, 97, 114, 114, 59, 1, 10617, 4, 3, 101, 105, 117, 17299, 17335, 17339, 116, 4, 3, 59, 101, 110, 17308, 17310, 17322, 1, 8834, 113, 4, 2, 59, 113, 17317, 17319, 1, 8838, 59, 1, 10949, 101, 113, 4, 2, 59, 113, 17330, 17332, 1, 8842, 59, 1, 10955, 109, 59, 1, 10951, 4, 2, 98, 112, 17345, 17348, 59, 1, 10965, 59, 1, 10963, 99, 4, 6, 59, 97, 99, 101, 110, 115, 17366, 17368, 17376, 17385, 17389, 17415, 1, 8827, 112, 112, 114, 111, 120, 59, 1, 10936, 117, 114, 108, 121, 101, 113, 59, 1, 8829, 113, 59, 1, 10928, 4, 3, 97, 101, 115, 17397, 17405, 17410, 112, 112, 114, 111, 120, 59, 1, 10938, 113, 113, 59, 1, 10934, 105, 109, 59, 1, 8937, 105, 109, 59, 1, 8831, 59, 1, 8721, 103, 59, 1, 9834, 4, 13, 49, 50, 51, 59, 69, 100, 101, 104, 108, 109, 110, 112, 115, 17455, 17462, 17469, 17476, 17478, 17481, 17496, 17509, 17524, 17530, 17536, 17548, 17554, 5, 185, 1, 59, 17460, 1, 185, 5, 178, 1, 59, 17467, 1, 178, 5, 179, 1, 59, 17474, 1, 179, 1, 8835, 59, 1, 10950, 4, 2, 111, 115, 17487, 17491, 116, 59, 1, 10942, 117, 98, 59, 1, 10968, 4, 2, 59, 100, 17502, 17504, 1, 8839, 111, 116, 59, 1, 10948, 115, 4, 2, 111, 117, 17516, 17520, 108, 59, 1, 10185, 98, 59, 1, 10967, 97, 114, 114, 59, 1, 10619, 117, 108, 116, 59, 1, 10946, 4, 2, 69, 101, 17542, 17545, 59, 1, 10956, 59, 1, 8843, 108, 117, 115, 59, 1, 10944, 4, 3, 101, 105, 117, 17562, 17598, 17602, 116, 4, 3, 59, 101, 110, 17571, 17573, 17585, 1, 8835, 113, 4, 2, 59, 113, 17580, 17582, 1, 8839, 59, 1, 10950, 101, 113, 4, 2, 59, 113, 17593, 17595, 1, 8843, 59, 1, 10956, 109, 59, 1, 10952, 4, 2, 98, 112, 17608, 17611, 59, 1, 10964, 59, 1, 10966, 4, 3, 65, 97, 110, 17622, 17627, 17650, 114, 114, 59, 1, 8665, 114, 4, 2, 104, 114, 17634, 17638, 107, 59, 1, 10534, 4, 2, 59, 111, 17644, 17646, 1, 8601, 119, 59, 1, 8601, 119, 97, 114, 59, 1, 10538, 108, 105, 103, 5, 223, 1, 59, 17664, 1, 223, 4, 13, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 114, 115, 119, 17694, 17709, 17714, 17737, 17742, 17749, 17754, 17860, 17905, 17957, 17964, 18090, 18122, 4, 2, 114, 117, 17700, 17706, 103, 101, 116, 59, 1, 8982, 59, 1, 964, 114, 107, 59, 1, 9140, 4, 3, 97, 101, 121, 17722, 17728, 17734, 114, 111, 110, 59, 1, 357, 100, 105, 108, 59, 1, 355, 59, 1, 1090, 111, 116, 59, 1, 8411, 108, 114, 101, 99, 59, 1, 8981, 114, 59, 3, 55349, 56625, 4, 4, 101, 105, 107, 111, 17764, 17805, 17836, 17851, 4, 2, 114, 116, 17770, 17786, 101, 4, 2, 52, 102, 17777, 17780, 59, 1, 8756, 111, 114, 101, 59, 1, 8756, 97, 4, 3, 59, 115, 118, 17795, 17797, 17802, 1, 952, 121, 109, 59, 1, 977, 59, 1, 977, 4, 2, 99, 110, 17811, 17831, 107, 4, 2, 97, 115, 17818, 17826, 112, 112, 114, 111, 120, 59, 1, 8776, 105, 109, 59, 1, 8764, 115, 112, 59, 1, 8201, 4, 2, 97, 115, 17842, 17846, 112, 59, 1, 8776, 105, 109, 59, 1, 8764, 114, 110, 5, 254, 1, 59, 17858, 1, 254, 4, 3, 108, 109, 110, 17868, 17873, 17901, 100, 101, 59, 1, 732, 101, 115, 5, 215, 3, 59, 98, 100, 17884, 17886, 17898, 1, 215, 4, 2, 59, 97, 17892, 17894, 1, 8864, 114, 59, 1, 10801, 59, 1, 10800, 116, 59, 1, 8749, 4, 3, 101, 112, 115, 17913, 17917, 17953, 97, 59, 1, 10536, 4, 4, 59, 98, 99, 102, 17927, 17929, 17934, 17939, 1, 8868, 111, 116, 59, 1, 9014, 105, 114, 59, 1, 10993, 4, 2, 59, 111, 17945, 17948, 3, 55349, 56677, 114, 107, 59, 1, 10970, 97, 59, 1, 10537, 114, 105, 109, 101, 59, 1, 8244, 4, 3, 97, 105, 112, 17972, 17977, 18082, 100, 101, 59, 1, 8482, 4, 7, 97, 100, 101, 109, 112, 115, 116, 17993, 18051, 18056, 18059, 18066, 18072, 18076, 110, 103, 108, 101, 4, 5, 59, 100, 108, 113, 114, 18009, 18011, 18017, 18032, 18035, 1, 9653, 111, 119, 110, 59, 1, 9663, 101, 102, 116, 4, 2, 59, 101, 18026, 18028, 1, 9667, 113, 59, 1, 8884, 59, 1, 8796, 105, 103, 104, 116, 4, 2, 59, 101, 18045, 18047, 1, 9657, 113, 59, 1, 8885, 111, 116, 59, 1, 9708, 59, 1, 8796, 105, 110, 117, 115, 59, 1, 10810, 108, 117, 115, 59, 1, 10809, 98, 59, 1, 10701, 105, 109, 101, 59, 1, 10811, 101, 122, 105, 117, 109, 59, 1, 9186, 4, 3, 99, 104, 116, 18098, 18111, 18116, 4, 2, 114, 121, 18104, 18108, 59, 3, 55349, 56521, 59, 1, 1094, 99, 121, 59, 1, 1115, 114, 111, 107, 59, 1, 359, 4, 2, 105, 111, 18128, 18133, 120, 116, 59, 1, 8812, 104, 101, 97, 100, 4, 2, 108, 114, 18143, 18154, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8606, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8608, 4, 18, 65, 72, 97, 98, 99, 100, 102, 103, 104, 108, 109, 111, 112, 114, 115, 116, 117, 119, 18204, 18209, 18214, 18234, 18250, 18268, 18292, 18308, 18319, 18343, 18379, 18397, 18413, 18504, 18547, 18553, 18584, 18603, 114, 114, 59, 1, 8657, 97, 114, 59, 1, 10595, 4, 2, 99, 114, 18220, 18230, 117, 116, 101, 5, 250, 1, 59, 18228, 1, 250, 114, 59, 1, 8593, 114, 4, 2, 99, 101, 18241, 18245, 121, 59, 1, 1118, 118, 101, 59, 1, 365, 4, 2, 105, 121, 18256, 18265, 114, 99, 5, 251, 1, 59, 18263, 1, 251, 59, 1, 1091, 4, 3, 97, 98, 104, 18276, 18281, 18287, 114, 114, 59, 1, 8645, 108, 97, 99, 59, 1, 369, 97, 114, 59, 1, 10606, 4, 2, 105, 114, 18298, 18304, 115, 104, 116, 59, 1, 10622, 59, 3, 55349, 56626, 114, 97, 118, 101, 5, 249, 1, 59, 18317, 1, 249, 4, 2, 97, 98, 18325, 18338, 114, 4, 2, 108, 114, 18332, 18335, 59, 1, 8639, 59, 1, 8638, 108, 107, 59, 1, 9600, 4, 2, 99, 116, 18349, 18374, 4, 2, 111, 114, 18355, 18369, 114, 110, 4, 2, 59, 101, 18363, 18365, 1, 8988, 114, 59, 1, 8988, 111, 112, 59, 1, 8975, 114, 105, 59, 1, 9720, 4, 2, 97, 108, 18385, 18390, 99, 114, 59, 1, 363, 5, 168, 1, 59, 18395, 1, 168, 4, 2, 103, 112, 18403, 18408, 111, 110, 59, 1, 371, 102, 59, 3, 55349, 56678, 4, 6, 97, 100, 104, 108, 115, 117, 18427, 18434, 18445, 18470, 18475, 18494, 114, 114, 111, 119, 59, 1, 8593, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8597, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 18457, 18463, 101, 102, 116, 59, 1, 8639, 105, 103, 104, 116, 59, 1, 8638, 117, 115, 59, 1, 8846, 105, 4, 3, 59, 104, 108, 18484, 18486, 18489, 1, 965, 59, 1, 978, 111, 110, 59, 1, 965, 112, 97, 114, 114, 111, 119, 115, 59, 1, 8648, 4, 3, 99, 105, 116, 18512, 18537, 18542, 4, 2, 111, 114, 18518, 18532, 114, 110, 4, 2, 59, 101, 18526, 18528, 1, 8989, 114, 59, 1, 8989, 111, 112, 59, 1, 8974, 110, 103, 59, 1, 367, 114, 105, 59, 1, 9721, 99, 114, 59, 3, 55349, 56522, 4, 3, 100, 105, 114, 18561, 18566, 18572, 111, 116, 59, 1, 8944, 108, 100, 101, 59, 1, 361, 105, 4, 2, 59, 102, 18579, 18581, 1, 9653, 59, 1, 9652, 4, 2, 97, 109, 18590, 18595, 114, 114, 59, 1, 8648, 108, 5, 252, 1, 59, 18601, 1, 252, 97, 110, 103, 108, 101, 59, 1, 10663, 4, 15, 65, 66, 68, 97, 99, 100, 101, 102, 108, 110, 111, 112, 114, 115, 122, 18643, 18648, 18661, 18667, 18847, 18851, 18857, 18904, 18909, 18915, 18931, 18937, 18943, 18949, 18996, 114, 114, 59, 1, 8661, 97, 114, 4, 2, 59, 118, 18656, 18658, 1, 10984, 59, 1, 10985, 97, 115, 104, 59, 1, 8872, 4, 2, 110, 114, 18673, 18679, 103, 114, 116, 59, 1, 10652, 4, 7, 101, 107, 110, 112, 114, 115, 116, 18695, 18704, 18711, 18720, 18742, 18754, 18810, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 97, 112, 112, 97, 59, 1, 1008, 111, 116, 104, 105, 110, 103, 59, 1, 8709, 4, 3, 104, 105, 114, 18728, 18732, 18735, 105, 59, 1, 981, 59, 1, 982, 111, 112, 116, 111, 59, 1, 8733, 4, 2, 59, 104, 18748, 18750, 1, 8597, 111, 59, 1, 1009, 4, 2, 105, 117, 18760, 18766, 103, 109, 97, 59, 1, 962, 4, 2, 98, 112, 18772, 18791, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18784, 18787, 3, 8842, 65024, 59, 3, 10955, 65024, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18803, 18806, 3, 8843, 65024, 59, 3, 10956, 65024, 4, 2, 104, 114, 18816, 18822, 101, 116, 97, 59, 1, 977, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 18834, 18840, 101, 102, 116, 59, 1, 8882, 105, 103, 104, 116, 59, 1, 8883, 121, 59, 1, 1074, 97, 115, 104, 59, 1, 8866, 4, 3, 101, 108, 114, 18865, 18884, 18890, 4, 3, 59, 98, 101, 18873, 18875, 18880, 1, 8744, 97, 114, 59, 1, 8891, 113, 59, 1, 8794, 108, 105, 112, 59, 1, 8942, 4, 2, 98, 116, 18896, 18901, 97, 114, 59, 1, 124, 59, 1, 124, 114, 59, 3, 55349, 56627, 116, 114, 105, 59, 1, 8882, 115, 117, 4, 2, 98, 112, 18923, 18927, 59, 3, 8834, 8402, 59, 3, 8835, 8402, 112, 102, 59, 3, 55349, 56679, 114, 111, 112, 59, 1, 8733, 116, 114, 105, 59, 1, 8883, 4, 2, 99, 117, 18955, 18960, 114, 59, 3, 55349, 56523, 4, 2, 98, 112, 18966, 18981, 110, 4, 2, 69, 101, 18973, 18977, 59, 3, 10955, 65024, 59, 3, 8842, 65024, 110, 4, 2, 69, 101, 18988, 18992, 59, 3, 10956, 65024, 59, 3, 8843, 65024, 105, 103, 122, 97, 103, 59, 1, 10650, 4, 7, 99, 101, 102, 111, 112, 114, 115, 19020, 19026, 19061, 19066, 19072, 19075, 19089, 105, 114, 99, 59, 1, 373, 4, 2, 100, 105, 19032, 19055, 4, 2, 98, 103, 19038, 19043, 97, 114, 59, 1, 10847, 101, 4, 2, 59, 113, 19050, 19052, 1, 8743, 59, 1, 8793, 101, 114, 112, 59, 1, 8472, 114, 59, 3, 55349, 56628, 112, 102, 59, 3, 55349, 56680, 59, 1, 8472, 4, 2, 59, 101, 19081, 19083, 1, 8768, 97, 116, 104, 59, 1, 8768, 99, 114, 59, 3, 55349, 56524, 4, 14, 99, 100, 102, 104, 105, 108, 109, 110, 111, 114, 115, 117, 118, 119, 19125, 19146, 19152, 19157, 19173, 19176, 19192, 19197, 19202, 19236, 19252, 19269, 19286, 19291, 4, 3, 97, 105, 117, 19133, 19137, 19142, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 116, 114, 105, 59, 1, 9661, 114, 59, 3, 55349, 56629, 4, 2, 65, 97, 19163, 19168, 114, 114, 59, 1, 10234, 114, 114, 59, 1, 10231, 59, 1, 958, 4, 2, 65, 97, 19182, 19187, 114, 114, 59, 1, 10232, 114, 114, 59, 1, 10229, 97, 112, 59, 1, 10236, 105, 115, 59, 1, 8955, 4, 3, 100, 112, 116, 19210, 19215, 19230, 111, 116, 59, 1, 10752, 4, 2, 102, 108, 19221, 19225, 59, 3, 55349, 56681, 117, 115, 59, 1, 10753, 105, 109, 101, 59, 1, 10754, 4, 2, 65, 97, 19242, 19247, 114, 114, 59, 1, 10233, 114, 114, 59, 1, 10230, 4, 2, 99, 113, 19258, 19263, 114, 59, 3, 55349, 56525, 99, 117, 112, 59, 1, 10758, 4, 2, 112, 116, 19275, 19281, 108, 117, 115, 59, 1, 10756, 114, 105, 59, 1, 9651, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 19316, 19335, 19349, 19357, 19362, 19367, 19373, 19379, 99, 4, 2, 117, 121, 19323, 19332, 116, 101, 5, 253, 1, 59, 19330, 1, 253, 59, 1, 1103, 4, 2, 105, 121, 19341, 19346, 114, 99, 59, 1, 375, 59, 1, 1099, 110, 5, 165, 1, 59, 19355, 1, 165, 114, 59, 3, 55349, 56630, 99, 121, 59, 1, 1111, 112, 102, 59, 3, 55349, 56682, 99, 114, 59, 3, 55349, 56526, 4, 2, 99, 109, 19385, 19389, 121, 59, 1, 1102, 108, 5, 255, 1, 59, 19395, 1, 255, 4, 10, 97, 99, 100, 101, 102, 104, 105, 111, 115, 119, 19419, 19426, 19441, 19446, 19462, 19467, 19472, 19480, 19486, 19492, 99, 117, 116, 101, 59, 1, 378, 4, 2, 97, 121, 19432, 19438, 114, 111, 110, 59, 1, 382, 59, 1, 1079, 111, 116, 59, 1, 380, 4, 2, 101, 116, 19452, 19458, 116, 114, 102, 59, 1, 8488, 97, 59, 1, 950, 114, 59, 3, 55349, 56631, 99, 121, 59, 1, 1078, 103, 114, 97, 114, 114, 59, 1, 8669, 112, 102, 59, 3, 55349, 56683, 99, 114, 59, 3, 55349, 56527, 4, 2, 106, 110, 19498, 19501, 59, 1, 8205, 106, 59, 1, 8204]);
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/tokenizer/index.js
var require_tokenizer2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/tokenizer/index.js"(exports2, module2) {
    "use strict";
    var Preprocessor2 = require_preprocessor2(), unicode = require_unicode2(), neTree = require_named_entity_data2(), ERR2 = require_error_codes2(), $2 = unicode.CODE_POINTS, $$ = unicode.CODE_POINT_SEQUENCES, C1_CONTROLS_REFERENCE_REPLACEMENTS2 = {
      128: 8364,
      130: 8218,
      131: 402,
      132: 8222,
      133: 8230,
      134: 8224,
      135: 8225,
      136: 710,
      137: 8240,
      138: 352,
      139: 8249,
      140: 338,
      142: 381,
      145: 8216,
      146: 8217,
      147: 8220,
      148: 8221,
      149: 8226,
      150: 8211,
      151: 8212,
      152: 732,
      153: 8482,
      154: 353,
      155: 8250,
      156: 339,
      158: 382,
      159: 376
    }, HAS_DATA_FLAG = 1 << 0, DATA_DUPLET_FLAG = 1 << 1, HAS_BRANCHES_FLAG = 1 << 2, MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG, DATA_STATE = "DATA_STATE", RCDATA_STATE = "RCDATA_STATE", RAWTEXT_STATE = "RAWTEXT_STATE", SCRIPT_DATA_STATE = "SCRIPT_DATA_STATE", PLAINTEXT_STATE = "PLAINTEXT_STATE", TAG_OPEN_STATE = "TAG_OPEN_STATE", END_TAG_OPEN_STATE = "END_TAG_OPEN_STATE", TAG_NAME_STATE = "TAG_NAME_STATE", RCDATA_LESS_THAN_SIGN_STATE = "RCDATA_LESS_THAN_SIGN_STATE", RCDATA_END_TAG_OPEN_STATE = "RCDATA_END_TAG_OPEN_STATE", RCDATA_END_TAG_NAME_STATE = "RCDATA_END_TAG_NAME_STATE", RAWTEXT_LESS_THAN_SIGN_STATE = "RAWTEXT_LESS_THAN_SIGN_STATE", RAWTEXT_END_TAG_OPEN_STATE = "RAWTEXT_END_TAG_OPEN_STATE", RAWTEXT_END_TAG_NAME_STATE = "RAWTEXT_END_TAG_NAME_STATE", SCRIPT_DATA_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_LESS_THAN_SIGN_STATE", SCRIPT_DATA_END_TAG_OPEN_STATE = "SCRIPT_DATA_END_TAG_OPEN_STATE", SCRIPT_DATA_END_TAG_NAME_STATE = "SCRIPT_DATA_END_TAG_NAME_STATE", SCRIPT_DATA_ESCAPE_START_STATE = "SCRIPT_DATA_ESCAPE_START_STATE", SCRIPT_DATA_ESCAPE_START_DASH_STATE = "SCRIPT_DATA_ESCAPE_START_DASH_STATE", SCRIPT_DATA_ESCAPED_STATE = "SCRIPT_DATA_ESCAPED_STATE", SCRIPT_DATA_ESCAPED_DASH_STATE = "SCRIPT_DATA_ESCAPED_DASH_STATE", SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = "SCRIPT_DATA_ESCAPED_DASH_DASH_STATE", SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE", SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE", SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = "SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE", SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = "SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE", SCRIPT_DATA_DOUBLE_ESCAPED_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_STATE", SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE", SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE", SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE", SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = "SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE", BEFORE_ATTRIBUTE_NAME_STATE = "BEFORE_ATTRIBUTE_NAME_STATE", ATTRIBUTE_NAME_STATE = "ATTRIBUTE_NAME_STATE", AFTER_ATTRIBUTE_NAME_STATE = "AFTER_ATTRIBUTE_NAME_STATE", BEFORE_ATTRIBUTE_VALUE_STATE = "BEFORE_ATTRIBUTE_VALUE_STATE", ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = "ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE", ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = "ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE", ATTRIBUTE_VALUE_UNQUOTED_STATE = "ATTRIBUTE_VALUE_UNQUOTED_STATE", AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = "AFTER_ATTRIBUTE_VALUE_QUOTED_STATE", SELF_CLOSING_START_TAG_STATE = "SELF_CLOSING_START_TAG_STATE", BOGUS_COMMENT_STATE = "BOGUS_COMMENT_STATE", MARKUP_DECLARATION_OPEN_STATE = "MARKUP_DECLARATION_OPEN_STATE", COMMENT_START_STATE = "COMMENT_START_STATE", COMMENT_START_DASH_STATE = "COMMENT_START_DASH_STATE", COMMENT_STATE = "COMMENT_STATE", COMMENT_LESS_THAN_SIGN_STATE = "COMMENT_LESS_THAN_SIGN_STATE", COMMENT_LESS_THAN_SIGN_BANG_STATE = "COMMENT_LESS_THAN_SIGN_BANG_STATE", COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = "COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE", COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE", COMMENT_END_DASH_STATE = "COMMENT_END_DASH_STATE", COMMENT_END_STATE = "COMMENT_END_STATE", COMMENT_END_BANG_STATE = "COMMENT_END_BANG_STATE", DOCTYPE_STATE = "DOCTYPE_STATE", BEFORE_DOCTYPE_NAME_STATE = "BEFORE_DOCTYPE_NAME_STATE", DOCTYPE_NAME_STATE = "DOCTYPE_NAME_STATE", AFTER_DOCTYPE_NAME_STATE = "AFTER_DOCTYPE_NAME_STATE", AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = "AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE", BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE", DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE", DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE", AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE", BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE", AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = "AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE", BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE", DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE", DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE", AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE", BOGUS_DOCTYPE_STATE = "BOGUS_DOCTYPE_STATE", CDATA_SECTION_STATE = "CDATA_SECTION_STATE", CDATA_SECTION_BRACKET_STATE = "CDATA_SECTION_BRACKET_STATE", CDATA_SECTION_END_STATE = "CDATA_SECTION_END_STATE", CHARACTER_REFERENCE_STATE = "CHARACTER_REFERENCE_STATE", NAMED_CHARACTER_REFERENCE_STATE = "NAMED_CHARACTER_REFERENCE_STATE", AMBIGUOUS_AMPERSAND_STATE = "AMBIGUOS_AMPERSAND_STATE", NUMERIC_CHARACTER_REFERENCE_STATE = "NUMERIC_CHARACTER_REFERENCE_STATE", HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = "HEXADEMICAL_CHARACTER_REFERENCE_START_STATE", DECIMAL_CHARACTER_REFERENCE_START_STATE = "DECIMAL_CHARACTER_REFERENCE_START_STATE", HEXADEMICAL_CHARACTER_REFERENCE_STATE = "HEXADEMICAL_CHARACTER_REFERENCE_STATE", DECIMAL_CHARACTER_REFERENCE_STATE = "DECIMAL_CHARACTER_REFERENCE_STATE", NUMERIC_CHARACTER_REFERENCE_END_STATE = "NUMERIC_CHARACTER_REFERENCE_END_STATE";
    function isWhitespace2(cp) {
      return cp === $2.SPACE || cp === $2.LINE_FEED || cp === $2.TABULATION || cp === $2.FORM_FEED;
    }
    function isAsciiDigit2(cp) {
      return cp >= $2.DIGIT_0 && cp <= $2.DIGIT_9;
    }
    function isAsciiUpper2(cp) {
      return cp >= $2.LATIN_CAPITAL_A && cp <= $2.LATIN_CAPITAL_Z;
    }
    function isAsciiLower2(cp) {
      return cp >= $2.LATIN_SMALL_A && cp <= $2.LATIN_SMALL_Z;
    }
    function isAsciiLetter2(cp) {
      return isAsciiLower2(cp) || isAsciiUpper2(cp);
    }
    function isAsciiAlphaNumeric2(cp) {
      return isAsciiLetter2(cp) || isAsciiDigit2(cp);
    }
    function isAsciiUpperHexDigit2(cp) {
      return cp >= $2.LATIN_CAPITAL_A && cp <= $2.LATIN_CAPITAL_F;
    }
    function isAsciiLowerHexDigit2(cp) {
      return cp >= $2.LATIN_SMALL_A && cp <= $2.LATIN_SMALL_F;
    }
    function isAsciiHexDigit2(cp) {
      return isAsciiDigit2(cp) || isAsciiUpperHexDigit2(cp) || isAsciiLowerHexDigit2(cp);
    }
    function toAsciiLowerCodePoint(cp) {
      return cp + 32;
    }
    function toChar(cp) {
      return cp <= 65535 ? String.fromCharCode(cp) : (cp -= 65536, String.fromCharCode(cp >>> 10 & 1023 | 55296) + String.fromCharCode(56320 | cp & 1023));
    }
    function toAsciiLowerChar(cp) {
      return String.fromCharCode(toAsciiLowerCodePoint(cp));
    }
    function findNamedEntityTreeBranch(nodeIx, cp) {
      let branchCount = neTree[++nodeIx], lo = ++nodeIx, hi = lo + branchCount - 1;
      for (; lo <= hi; ) {
        let mid = lo + hi >>> 1, midCp = neTree[mid];
        if (midCp < cp)
          lo = mid + 1;
        else if (midCp > cp)
          hi = mid - 1;
        else
          return neTree[mid + branchCount];
      }
      return -1;
    }
    var Tokenizer2 = class {
      constructor() {
        this.preprocessor = new Preprocessor2(), this.tokenQueue = [], this.allowCDATA = !1, this.state = DATA_STATE, this.returnState = "", this.charRefCode = -1, this.tempBuff = [], this.lastStartTagName = "", this.consumedAfterSnapshot = -1, this.active = !1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = null;
      }
      _err() {
      }
      _errOnNextCodePoint(err) {
        this._consume(), this._err(err), this._unconsume();
      }
      getNextToken() {
        for (; !this.tokenQueue.length && this.active; ) {
          this.consumedAfterSnapshot = 0;
          let cp = this._consume();
          this._ensureHibernation() || this[this.state](cp);
        }
        return this.tokenQueue.shift();
      }
      write(chunk, isLastChunk) {
        this.active = !0, this.preprocessor.write(chunk, isLastChunk);
      }
      insertHtmlAtCurrentPos(chunk) {
        this.active = !0, this.preprocessor.insertHtmlAtCurrentPos(chunk);
      }
      _ensureHibernation() {
        if (this.preprocessor.endOfChunkHit) {
          for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)
            this.preprocessor.retreat();
          return this.active = !1, this.tokenQueue.push({ type: Tokenizer2.HIBERNATION_TOKEN }), !0;
        }
        return !1;
      }
      _consume() {
        return this.consumedAfterSnapshot++, this.preprocessor.advance();
      }
      _unconsume() {
        this.consumedAfterSnapshot--, this.preprocessor.retreat();
      }
      _reconsumeInState(state) {
        this.state = state, this._unconsume();
      }
      _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {
        let consumedCount = 0, isMatch = !0, patternLength = pattern.length, patternPos = 0, cp = startCp, patternCp;
        for (; patternPos < patternLength; patternPos++) {
          if (patternPos > 0 && (cp = this._consume(), consumedCount++), cp === $2.EOF) {
            isMatch = !1;
            break;
          }
          if (patternCp = pattern[patternPos], cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {
            isMatch = !1;
            break;
          }
        }
        if (!isMatch)
          for (; consumedCount--; )
            this._unconsume();
        return isMatch;
      }
      _isTempBufferEqualToScriptString() {
        if (this.tempBuff.length !== $$.SCRIPT_STRING.length)
          return !1;
        for (let i = 0; i < this.tempBuff.length; i++)
          if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])
            return !1;
        return !0;
      }
      _createStartTagToken() {
        this.currentToken = {
          type: Tokenizer2.START_TAG_TOKEN,
          tagName: "",
          selfClosing: !1,
          ackSelfClosing: !1,
          attrs: []
        };
      }
      _createEndTagToken() {
        this.currentToken = {
          type: Tokenizer2.END_TAG_TOKEN,
          tagName: "",
          selfClosing: !1,
          attrs: []
        };
      }
      _createCommentToken() {
        this.currentToken = {
          type: Tokenizer2.COMMENT_TOKEN,
          data: ""
        };
      }
      _createDoctypeToken(initialName) {
        this.currentToken = {
          type: Tokenizer2.DOCTYPE_TOKEN,
          name: initialName,
          forceQuirks: !1,
          publicId: null,
          systemId: null
        };
      }
      _createCharacterToken(type, ch) {
        this.currentCharacterToken = {
          type,
          chars: ch
        };
      }
      _createEOFToken() {
        this.currentToken = { type: Tokenizer2.EOF_TOKEN };
      }
      _createAttr(attrNameFirstCh) {
        this.currentAttr = {
          name: attrNameFirstCh,
          value: ""
        };
      }
      _leaveAttrName(toState) {
        Tokenizer2.getTokenAttr(this.currentToken, this.currentAttr.name) === null ? this.currentToken.attrs.push(this.currentAttr) : this._err(ERR2.duplicateAttribute), this.state = toState;
      }
      _leaveAttrValue(toState) {
        this.state = toState;
      }
      _emitCurrentToken() {
        this._emitCurrentCharacterToken();
        let ct = this.currentToken;
        this.currentToken = null, ct.type === Tokenizer2.START_TAG_TOKEN ? this.lastStartTagName = ct.tagName : ct.type === Tokenizer2.END_TAG_TOKEN && (ct.attrs.length > 0 && this._err(ERR2.endTagWithAttributes), ct.selfClosing && this._err(ERR2.endTagWithTrailingSolidus)), this.tokenQueue.push(ct);
      }
      _emitCurrentCharacterToken() {
        this.currentCharacterToken && (this.tokenQueue.push(this.currentCharacterToken), this.currentCharacterToken = null);
      }
      _emitEOFToken() {
        this._createEOFToken(), this._emitCurrentToken();
      }
      _appendCharToCurrentCharacterToken(type, ch) {
        this.currentCharacterToken && this.currentCharacterToken.type !== type && this._emitCurrentCharacterToken(), this.currentCharacterToken ? this.currentCharacterToken.chars += ch : this._createCharacterToken(type, ch);
      }
      _emitCodePoint(cp) {
        let type = Tokenizer2.CHARACTER_TOKEN;
        isWhitespace2(cp) ? type = Tokenizer2.WHITESPACE_CHARACTER_TOKEN : cp === $2.NULL && (type = Tokenizer2.NULL_CHARACTER_TOKEN), this._appendCharToCurrentCharacterToken(type, toChar(cp));
      }
      _emitSeveralCodePoints(codePoints) {
        for (let i = 0; i < codePoints.length; i++)
          this._emitCodePoint(codePoints[i]);
      }
      _emitChars(ch) {
        this._appendCharToCurrentCharacterToken(Tokenizer2.CHARACTER_TOKEN, ch);
      }
      _matchNamedCharacterReference(startCp) {
        let result = null, excess = 1, i = findNamedEntityTreeBranch(0, startCp);
        for (this.tempBuff.push(startCp); i > -1; ) {
          let current = neTree[i], inNode = current < MAX_BRANCH_MARKER_VALUE;
          inNode && current & HAS_DATA_FLAG && (result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]], excess = 0);
          let cp = this._consume();
          if (this.tempBuff.push(cp), excess++, cp === $2.EOF)
            break;
          inNode ? i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1 : i = cp === current ? ++i : -1;
        }
        for (; excess--; )
          this.tempBuff.pop(), this._unconsume();
        return result;
      }
      _isCharacterReferenceInAttribute() {
        return this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE || this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE || this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE;
      }
      _isCharacterReferenceAttributeQuirk(withSemicolon) {
        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {
          let nextCp = this._consume();
          return this._unconsume(), nextCp === $2.EQUALS_SIGN || isAsciiAlphaNumeric2(nextCp);
        }
        return !1;
      }
      _flushCodePointsConsumedAsCharacterReference() {
        if (this._isCharacterReferenceInAttribute())
          for (let i = 0; i < this.tempBuff.length; i++)
            this.currentAttr.value += toChar(this.tempBuff[i]);
        else
          this._emitSeveralCodePoints(this.tempBuff);
        this.tempBuff = [];
      }
      [DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.LESS_THAN_SIGN ? this.state = TAG_OPEN_STATE : cp === $2.AMPERSAND ? (this.returnState = DATA_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitCodePoint(cp)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [RCDATA_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.AMPERSAND ? (this.returnState = RCDATA_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.LESS_THAN_SIGN ? this.state = RCDATA_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [RAWTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.LESS_THAN_SIGN ? this.state = RAWTEXT_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [SCRIPT_DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.LESS_THAN_SIGN ? this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [PLAINTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk(), cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? this._emitEOFToken() : this._emitCodePoint(cp);
      }
      [TAG_OPEN_STATE](cp) {
        cp === $2.EXCLAMATION_MARK ? this.state = MARKUP_DECLARATION_OPEN_STATE : cp === $2.SOLIDUS ? this.state = END_TAG_OPEN_STATE : isAsciiLetter2(cp) ? (this._createStartTagToken(), this._reconsumeInState(TAG_NAME_STATE)) : cp === $2.QUESTION_MARK ? (this._err(ERR2.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(), this._reconsumeInState(BOGUS_COMMENT_STATE)) : cp === $2.EOF ? (this._err(ERR2.eofBeforeTagName), this._emitChars("<"), this._emitEOFToken()) : (this._err(ERR2.invalidFirstCharacterOfTagName), this._emitChars("<"), this._reconsumeInState(DATA_STATE));
      }
      [END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(TAG_NAME_STATE)) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingEndTagName), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofBeforeTagName), this._emitChars("</"), this._emitEOFToken()) : (this._err(ERR2.invalidFirstCharacterOfTagName), this._createCommentToken(), this._reconsumeInState(BOGUS_COMMENT_STATE));
      }
      [TAG_NAME_STATE](cp) {
        isWhitespace2(cp) ? this.state = BEFORE_ATTRIBUTE_NAME_STATE : cp === $2.SOLIDUS ? this.state = SELF_CLOSING_START_TAG_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : isAsciiUpper2(cp) ? this.currentToken.tagName += toAsciiLowerChar(cp) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : this.currentToken.tagName += toChar(cp);
      }
      [RCDATA_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = RCDATA_END_TAG_OPEN_STATE) : (this._emitChars("<"), this._reconsumeInState(RCDATA_STATE));
      }
      [RCDATA_END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(RCDATA_END_TAG_NAME_STATE)) : (this._emitChars("</"), this._reconsumeInState(RCDATA_STATE));
      }
      [RCDATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper2(cp))
          this.currentToken.tagName += toAsciiLowerChar(cp), this.tempBuff.push(cp);
        else if (isAsciiLower2(cp))
          this.currentToken.tagName += toChar(cp), this.tempBuff.push(cp);
        else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace2(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $2.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $2.GREATER_THAN_SIGN) {
              this.state = DATA_STATE, this._emitCurrentToken();
              return;
            }
          }
          this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(RCDATA_STATE);
        }
      }
      [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = RAWTEXT_END_TAG_OPEN_STATE) : (this._emitChars("<"), this._reconsumeInState(RAWTEXT_STATE));
      }
      [RAWTEXT_END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE)) : (this._emitChars("</"), this._reconsumeInState(RAWTEXT_STATE));
      }
      [RAWTEXT_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper2(cp))
          this.currentToken.tagName += toAsciiLowerChar(cp), this.tempBuff.push(cp);
        else if (isAsciiLower2(cp))
          this.currentToken.tagName += toChar(cp), this.tempBuff.push(cp);
        else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace2(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $2.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $2.GREATER_THAN_SIGN) {
              this._emitCurrentToken(), this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(RAWTEXT_STATE);
        }
      }
      [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = SCRIPT_DATA_END_TAG_OPEN_STATE) : cp === $2.EXCLAMATION_MARK ? (this.state = SCRIPT_DATA_ESCAPE_START_STATE, this._emitChars("<!")) : (this._emitChars("<"), this._reconsumeInState(SCRIPT_DATA_STATE));
      }
      [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE)) : (this._emitChars("</"), this._reconsumeInState(SCRIPT_DATA_STATE));
      }
      [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper2(cp))
          this.currentToken.tagName += toAsciiLowerChar(cp), this.tempBuff.push(cp);
        else if (isAsciiLower2(cp))
          this.currentToken.tagName += toChar(cp), this.tempBuff.push(cp);
        else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace2(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            } else if (cp === $2.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            } else if (cp === $2.GREATER_THAN_SIGN) {
              this._emitCurrentToken(), this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(SCRIPT_DATA_STATE);
        }
      }
      [SCRIPT_DATA_ESCAPE_START_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE, this._emitChars("-")) : this._reconsumeInState(SCRIPT_DATA_STATE);
      }
      [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE, this._emitChars("-")) : this._reconsumeInState(SCRIPT_DATA_STATE);
      }
      [SCRIPT_DATA_ESCAPED_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_ESCAPED_DASH_STATE, this._emitChars("-")) : cp === $2.LESS_THAN_SIGN ? this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : this._emitCodePoint(cp);
      }
      [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE, this._emitChars("-")) : cp === $2.LESS_THAN_SIGN ? this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.state = SCRIPT_DATA_ESCAPED_STATE, this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = SCRIPT_DATA_ESCAPED_STATE, this._emitCodePoint(cp));
      }
      [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this._emitChars("-") : cp === $2.LESS_THAN_SIGN ? this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = SCRIPT_DATA_STATE, this._emitChars(">")) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.state = SCRIPT_DATA_ESCAPED_STATE, this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = SCRIPT_DATA_ESCAPED_STATE, this._emitCodePoint(cp));
      }
      [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE) : isAsciiLetter2(cp) ? (this.tempBuff = [], this._emitChars("<"), this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE)) : (this._emitChars("<"), this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE));
      }
      [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {
        isAsciiLetter2(cp) ? (this._createEndTagToken(), this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE)) : (this._emitChars("</"), this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE));
      }
      [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper2(cp))
          this.currentToken.tagName += toAsciiLowerChar(cp), this.tempBuff.push(cp);
        else if (isAsciiLower2(cp))
          this.currentToken.tagName += toChar(cp), this.tempBuff.push(cp);
        else {
          if (this.lastStartTagName === this.currentToken.tagName) {
            if (isWhitespace2(cp)) {
              this.state = BEFORE_ATTRIBUTE_NAME_STATE;
              return;
            }
            if (cp === $2.SOLIDUS) {
              this.state = SELF_CLOSING_START_TAG_STATE;
              return;
            }
            if (cp === $2.GREATER_THAN_SIGN) {
              this._emitCurrentToken(), this.state = DATA_STATE;
              return;
            }
          }
          this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
      }
      [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {
        isWhitespace2(cp) || cp === $2.SOLIDUS || cp === $2.GREATER_THAN_SIGN ? (this.state = this._isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE, this._emitCodePoint(cp)) : isAsciiUpper2(cp) ? (this.tempBuff.push(toAsciiLowerCodePoint(cp)), this._emitCodePoint(cp)) : isAsciiLower2(cp) ? (this.tempBuff.push(cp), this._emitCodePoint(cp)) : this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE, this._emitChars("-")) : cp === $2.LESS_THAN_SIGN ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE, this._emitChars("<")) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : this._emitCodePoint(cp);
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE, this._emitChars("-")) : cp === $2.LESS_THAN_SIGN ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE, this._emitChars("<")) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitCodePoint(cp));
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this._emitChars("-") : cp === $2.LESS_THAN_SIGN ? (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE, this._emitChars("<")) : cp === $2.GREATER_THAN_SIGN ? (this.state = SCRIPT_DATA_STATE, this._emitChars(">")) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitChars(unicode.REPLACEMENT_CHARACTER)) : cp === $2.EOF ? (this._err(ERR2.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitCodePoint(cp));
      }
      [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.SOLIDUS ? (this.tempBuff = [], this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE, this._emitChars("/")) : this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
      }
      [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {
        isWhitespace2(cp) || cp === $2.SOLIDUS || cp === $2.GREATER_THAN_SIGN ? (this.state = this._isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE, this._emitCodePoint(cp)) : isAsciiUpper2(cp) ? (this.tempBuff.push(toAsciiLowerCodePoint(cp)), this._emitCodePoint(cp)) : isAsciiLower2(cp) ? (this.tempBuff.push(cp), this._emitCodePoint(cp)) : this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
      }
      [BEFORE_ATTRIBUTE_NAME_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.SOLIDUS || cp === $2.GREATER_THAN_SIGN || cp === $2.EOF ? this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE) : cp === $2.EQUALS_SIGN ? (this._err(ERR2.unexpectedEqualsSignBeforeAttributeName), this._createAttr("="), this.state = ATTRIBUTE_NAME_STATE) : (this._createAttr(""), this._reconsumeInState(ATTRIBUTE_NAME_STATE)));
      }
      [ATTRIBUTE_NAME_STATE](cp) {
        isWhitespace2(cp) || cp === $2.SOLIDUS || cp === $2.GREATER_THAN_SIGN || cp === $2.EOF ? (this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE), this._unconsume()) : cp === $2.EQUALS_SIGN ? this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE) : isAsciiUpper2(cp) ? this.currentAttr.name += toAsciiLowerChar(cp) : cp === $2.QUOTATION_MARK || cp === $2.APOSTROPHE || cp === $2.LESS_THAN_SIGN ? (this._err(ERR2.unexpectedCharacterInAttributeName), this.currentAttr.name += toChar(cp)) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentAttr.name += unicode.REPLACEMENT_CHARACTER) : this.currentAttr.name += toChar(cp);
      }
      [AFTER_ATTRIBUTE_NAME_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.SOLIDUS ? this.state = SELF_CLOSING_START_TAG_STATE : cp === $2.EQUALS_SIGN ? this.state = BEFORE_ATTRIBUTE_VALUE_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : (this._createAttr(""), this._reconsumeInState(ATTRIBUTE_NAME_STATE)));
      }
      [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.QUOTATION_MARK ? this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE : cp === $2.APOSTROPHE ? this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingAttributeValue), this.state = DATA_STATE, this._emitCurrentToken()) : this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE));
      }
      [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {
        cp === $2.QUOTATION_MARK ? this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE : cp === $2.AMPERSAND ? (this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentAttr.value += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : this.currentAttr.value += toChar(cp);
      }
      [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {
        cp === $2.APOSTROPHE ? this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE : cp === $2.AMPERSAND ? (this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentAttr.value += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : this.currentAttr.value += toChar(cp);
      }
      [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {
        isWhitespace2(cp) ? this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE) : cp === $2.AMPERSAND ? (this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE, this.state = CHARACTER_REFERENCE_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._leaveAttrValue(DATA_STATE), this._emitCurrentToken()) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentAttr.value += unicode.REPLACEMENT_CHARACTER) : cp === $2.QUOTATION_MARK || cp === $2.APOSTROPHE || cp === $2.LESS_THAN_SIGN || cp === $2.EQUALS_SIGN || cp === $2.GRAVE_ACCENT ? (this._err(ERR2.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += toChar(cp)) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : this.currentAttr.value += toChar(cp);
      }
      [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {
        isWhitespace2(cp) ? this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE) : cp === $2.SOLIDUS ? this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._leaveAttrValue(DATA_STATE), this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : (this._err(ERR2.missingWhitespaceBetweenAttributes), this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE));
      }
      [SELF_CLOSING_START_TAG_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? (this.currentToken.selfClosing = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInTag), this._emitEOFToken()) : (this._err(ERR2.unexpectedSolidusInTag), this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE));
      }
      [BOGUS_COMMENT_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._emitCurrentToken(), this._emitEOFToken()) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.data += unicode.REPLACEMENT_CHARACTER) : this.currentToken.data += toChar(cp);
      }
      [MARKUP_DECLARATION_OPEN_STATE](cp) {
        this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, !0) ? (this._createCommentToken(), this.state = COMMENT_START_STATE) : this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, !1) ? this.state = DOCTYPE_STATE : this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, !0) ? this.allowCDATA ? this.state = CDATA_SECTION_STATE : (this._err(ERR2.cdataInHtmlContent), this._createCommentToken(), this.currentToken.data = "[CDATA[", this.state = BOGUS_COMMENT_STATE) : this._ensureHibernation() || (this._err(ERR2.incorrectlyOpenedComment), this._createCommentToken(), this._reconsumeInState(BOGUS_COMMENT_STATE));
      }
      [COMMENT_START_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_START_DASH_STATE : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptClosingOfEmptyComment), this.state = DATA_STATE, this._emitCurrentToken()) : this._reconsumeInState(COMMENT_STATE);
      }
      [COMMENT_START_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_END_STATE : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptClosingOfEmptyComment), this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "-", this._reconsumeInState(COMMENT_STATE));
      }
      [COMMENT_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_END_DASH_STATE : cp === $2.LESS_THAN_SIGN ? (this.currentToken.data += "<", this.state = COMMENT_LESS_THAN_SIGN_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.data += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.data += toChar(cp);
      }
      [COMMENT_LESS_THAN_SIGN_STATE](cp) {
        cp === $2.EXCLAMATION_MARK ? (this.currentToken.data += "!", this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE) : cp === $2.LESS_THAN_SIGN ? this.currentToken.data += "!" : this._reconsumeInState(COMMENT_STATE);
      }
      [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE : this._reconsumeInState(COMMENT_STATE);
      }
      [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE : this._reconsumeInState(COMMENT_END_DASH_STATE);
      }
      [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {
        cp !== $2.GREATER_THAN_SIGN && cp !== $2.EOF && this._err(ERR2.nestedComment), this._reconsumeInState(COMMENT_END_STATE);
      }
      [COMMENT_END_DASH_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? this.state = COMMENT_END_STATE : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "-", this._reconsumeInState(COMMENT_STATE));
      }
      [COMMENT_END_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EXCLAMATION_MARK ? this.state = COMMENT_END_BANG_STATE : cp === $2.HYPHEN_MINUS ? this.currentToken.data += "-" : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "--", this._reconsumeInState(COMMENT_STATE));
      }
      [COMMENT_END_BANG_STATE](cp) {
        cp === $2.HYPHEN_MINUS ? (this.currentToken.data += "--!", this.state = COMMENT_END_DASH_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.incorrectlyClosedComment), this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "--!", this._reconsumeInState(COMMENT_STATE));
      }
      [DOCTYPE_STATE](cp) {
        isWhitespace2(cp) ? this.state = BEFORE_DOCTYPE_NAME_STATE : cp === $2.GREATER_THAN_SIGN ? this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingWhitespaceBeforeDoctypeName), this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE));
      }
      [BEFORE_DOCTYPE_NAME_STATE](cp) {
        isWhitespace2(cp) || (isAsciiUpper2(cp) ? (this._createDoctypeToken(toAsciiLowerChar(cp)), this.state = DOCTYPE_NAME_STATE) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER), this.state = DOCTYPE_NAME_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypeName), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._createDoctypeToken(toChar(cp)), this.state = DOCTYPE_NAME_STATE));
      }
      [DOCTYPE_NAME_STATE](cp) {
        isWhitespace2(cp) ? this.state = AFTER_DOCTYPE_NAME_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : isAsciiUpper2(cp) ? this.currentToken.name += toAsciiLowerChar(cp) : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.name += unicode.REPLACEMENT_CHARACTER) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.name += toChar(cp);
      }
      [AFTER_DOCTYPE_NAME_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, !1) ? this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE : this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, !1) ? this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE : this._ensureHibernation() || (this._err(ERR2.invalidCharacterSequenceAfterDoctypeName), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {
        isWhitespace2(cp) ? this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE : cp === $2.QUOTATION_MARK ? (this._err(ERR2.missingWhitespaceAfterDoctypePublicKeyword), this.currentToken.publicId = "", this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this._err(ERR2.missingWhitespaceAfterDoctypePublicKeyword), this.currentToken.publicId = "", this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE));
      }
      [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.QUOTATION_MARK ? (this.currentToken.publicId = "", this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this.currentToken.publicId = "", this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        cp === $2.QUOTATION_MARK ? this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.publicId += toChar(cp);
      }
      [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        cp === $2.APOSTROPHE ? this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.publicId += toChar(cp);
      }
      [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        isWhitespace2(cp) ? this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE : cp === $2.GREATER_THAN_SIGN ? (this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.QUOTATION_MARK ? (this._err(ERR2.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this._err(ERR2.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE));
      }
      [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.QUOTATION_MARK ? (this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {
        isWhitespace2(cp) ? this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE : cp === $2.QUOTATION_MARK ? (this._err(ERR2.missingWhitespaceAfterDoctypeSystemKeyword), this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this._err(ERR2.missingWhitespaceAfterDoctypeSystemKeyword), this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE));
      }
      [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.QUOTATION_MARK ? (this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE) : cp === $2.APOSTROPHE ? (this.currentToken.systemId = "", this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.missingDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this.state = DATA_STATE, this._emitCurrentToken()) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        cp === $2.QUOTATION_MARK ? this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.systemId += toChar(cp);
      }
      [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        cp === $2.APOSTROPHE ? this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE : cp === $2.NULL ? (this._err(ERR2.unexpectedNullCharacter), this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER) : cp === $2.GREATER_THAN_SIGN ? (this._err(ERR2.abruptDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.systemId += toChar(cp);
      }
      [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        isWhitespace2(cp) || (cp === $2.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.EOF ? (this._err(ERR2.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(ERR2.unexpectedCharacterAfterDoctypeSystemIdentifier), this._reconsumeInState(BOGUS_DOCTYPE_STATE)));
      }
      [BOGUS_DOCTYPE_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = DATA_STATE) : cp === $2.NULL ? this._err(ERR2.unexpectedNullCharacter) : cp === $2.EOF && (this._emitCurrentToken(), this._emitEOFToken());
      }
      [CDATA_SECTION_STATE](cp) {
        cp === $2.RIGHT_SQUARE_BRACKET ? this.state = CDATA_SECTION_BRACKET_STATE : cp === $2.EOF ? (this._err(ERR2.eofInCdata), this._emitEOFToken()) : this._emitCodePoint(cp);
      }
      [CDATA_SECTION_BRACKET_STATE](cp) {
        cp === $2.RIGHT_SQUARE_BRACKET ? this.state = CDATA_SECTION_END_STATE : (this._emitChars("]"), this._reconsumeInState(CDATA_SECTION_STATE));
      }
      [CDATA_SECTION_END_STATE](cp) {
        cp === $2.GREATER_THAN_SIGN ? this.state = DATA_STATE : cp === $2.RIGHT_SQUARE_BRACKET ? this._emitChars("]") : (this._emitChars("]]"), this._reconsumeInState(CDATA_SECTION_STATE));
      }
      [CHARACTER_REFERENCE_STATE](cp) {
        this.tempBuff = [$2.AMPERSAND], cp === $2.NUMBER_SIGN ? (this.tempBuff.push(cp), this.state = NUMERIC_CHARACTER_REFERENCE_STATE) : isAsciiAlphaNumeric2(cp) ? this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE) : (this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
      }
      [NAMED_CHARACTER_REFERENCE_STATE](cp) {
        let matchResult = this._matchNamedCharacterReference(cp);
        if (this._ensureHibernation())
          this.tempBuff = [$2.AMPERSAND];
        else if (matchResult) {
          let withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $2.SEMICOLON;
          this._isCharacterReferenceAttributeQuirk(withSemicolon) || (withSemicolon || this._errOnNextCodePoint(ERR2.missingSemicolonAfterCharacterReference), this.tempBuff = matchResult), this._flushCodePointsConsumedAsCharacterReference(), this.state = this.returnState;
        } else
          this._flushCodePointsConsumedAsCharacterReference(), this.state = AMBIGUOUS_AMPERSAND_STATE;
      }
      [AMBIGUOUS_AMPERSAND_STATE](cp) {
        isAsciiAlphaNumeric2(cp) ? this._isCharacterReferenceInAttribute() ? this.currentAttr.value += toChar(cp) : this._emitCodePoint(cp) : (cp === $2.SEMICOLON && this._err(ERR2.unknownNamedCharacterReference), this._reconsumeInState(this.returnState));
      }
      [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {
        this.charRefCode = 0, cp === $2.LATIN_SMALL_X || cp === $2.LATIN_CAPITAL_X ? (this.tempBuff.push(cp), this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE) : this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);
      }
      [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {
        isAsciiHexDigit2(cp) ? this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE) : (this._err(ERR2.absenceOfDigitsInNumericCharacterReference), this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
      }
      [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {
        isAsciiDigit2(cp) ? this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE) : (this._err(ERR2.absenceOfDigitsInNumericCharacterReference), this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
      }
      [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {
        isAsciiUpperHexDigit2(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 55 : isAsciiLowerHexDigit2(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 87 : isAsciiDigit2(cp) ? this.charRefCode = this.charRefCode * 16 + cp - 48 : cp === $2.SEMICOLON ? this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE : (this._err(ERR2.missingSemicolonAfterCharacterReference), this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE));
      }
      [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {
        isAsciiDigit2(cp) ? this.charRefCode = this.charRefCode * 10 + cp - 48 : cp === $2.SEMICOLON ? this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE : (this._err(ERR2.missingSemicolonAfterCharacterReference), this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE));
      }
      [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {
        if (this.charRefCode === $2.NULL)
          this._err(ERR2.nullCharacterReference), this.charRefCode = $2.REPLACEMENT_CHARACTER;
        else if (this.charRefCode > 1114111)
          this._err(ERR2.characterReferenceOutsideUnicodeRange), this.charRefCode = $2.REPLACEMENT_CHARACTER;
        else if (unicode.isSurrogate(this.charRefCode))
          this._err(ERR2.surrogateCharacterReference), this.charRefCode = $2.REPLACEMENT_CHARACTER;
        else if (unicode.isUndefinedCodePoint(this.charRefCode))
          this._err(ERR2.noncharacterCharacterReference);
        else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $2.CARRIAGE_RETURN) {
          this._err(ERR2.controlCharacterReference);
          let replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS2[this.charRefCode];
          replacement && (this.charRefCode = replacement);
        }
        this.tempBuff = [this.charRefCode], this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState);
      }
    };
    Tokenizer2.CHARACTER_TOKEN = "CHARACTER_TOKEN";
    Tokenizer2.NULL_CHARACTER_TOKEN = "NULL_CHARACTER_TOKEN";
    Tokenizer2.WHITESPACE_CHARACTER_TOKEN = "WHITESPACE_CHARACTER_TOKEN";
    Tokenizer2.START_TAG_TOKEN = "START_TAG_TOKEN";
    Tokenizer2.END_TAG_TOKEN = "END_TAG_TOKEN";
    Tokenizer2.COMMENT_TOKEN = "COMMENT_TOKEN";
    Tokenizer2.DOCTYPE_TOKEN = "DOCTYPE_TOKEN";
    Tokenizer2.EOF_TOKEN = "EOF_TOKEN";
    Tokenizer2.HIBERNATION_TOKEN = "HIBERNATION_TOKEN";
    Tokenizer2.MODE = {
      DATA: DATA_STATE,
      RCDATA: RCDATA_STATE,
      RAWTEXT: RAWTEXT_STATE,
      SCRIPT_DATA: SCRIPT_DATA_STATE,
      PLAINTEXT: PLAINTEXT_STATE
    };
    Tokenizer2.getTokenAttr = function(token, attrName) {
      for (let i = token.attrs.length - 1; i >= 0; i--)
        if (token.attrs[i].name === attrName)
          return token.attrs[i].value;
      return null;
    };
    module2.exports = Tokenizer2;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/common/html.js
var require_html2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/common/html.js"(exports2) {
    "use strict";
    var NS2 = exports2.NAMESPACES = {
      HTML: "http://www.w3.org/1999/xhtml",
      MATHML: "http://www.w3.org/1998/Math/MathML",
      SVG: "http://www.w3.org/2000/svg",
      XLINK: "http://www.w3.org/1999/xlink",
      XML: "http://www.w3.org/XML/1998/namespace",
      XMLNS: "http://www.w3.org/2000/xmlns/"
    };
    exports2.ATTRS = {
      TYPE: "type",
      ACTION: "action",
      ENCODING: "encoding",
      PROMPT: "prompt",
      NAME: "name",
      COLOR: "color",
      FACE: "face",
      SIZE: "size"
    };
    exports2.DOCUMENT_MODE = {
      NO_QUIRKS: "no-quirks",
      QUIRKS: "quirks",
      LIMITED_QUIRKS: "limited-quirks"
    };
    var $2 = exports2.TAG_NAMES = {
      A: "a",
      ADDRESS: "address",
      ANNOTATION_XML: "annotation-xml",
      APPLET: "applet",
      AREA: "area",
      ARTICLE: "article",
      ASIDE: "aside",
      B: "b",
      BASE: "base",
      BASEFONT: "basefont",
      BGSOUND: "bgsound",
      BIG: "big",
      BLOCKQUOTE: "blockquote",
      BODY: "body",
      BR: "br",
      BUTTON: "button",
      CAPTION: "caption",
      CENTER: "center",
      CODE: "code",
      COL: "col",
      COLGROUP: "colgroup",
      DD: "dd",
      DESC: "desc",
      DETAILS: "details",
      DIALOG: "dialog",
      DIR: "dir",
      DIV: "div",
      DL: "dl",
      DT: "dt",
      EM: "em",
      EMBED: "embed",
      FIELDSET: "fieldset",
      FIGCAPTION: "figcaption",
      FIGURE: "figure",
      FONT: "font",
      FOOTER: "footer",
      FOREIGN_OBJECT: "foreignObject",
      FORM: "form",
      FRAME: "frame",
      FRAMESET: "frameset",
      H1: "h1",
      H2: "h2",
      H3: "h3",
      H4: "h4",
      H5: "h5",
      H6: "h6",
      HEAD: "head",
      HEADER: "header",
      HGROUP: "hgroup",
      HR: "hr",
      HTML: "html",
      I: "i",
      IMG: "img",
      IMAGE: "image",
      INPUT: "input",
      IFRAME: "iframe",
      KEYGEN: "keygen",
      LABEL: "label",
      LI: "li",
      LINK: "link",
      LISTING: "listing",
      MAIN: "main",
      MALIGNMARK: "malignmark",
      MARQUEE: "marquee",
      MATH: "math",
      MENU: "menu",
      META: "meta",
      MGLYPH: "mglyph",
      MI: "mi",
      MO: "mo",
      MN: "mn",
      MS: "ms",
      MTEXT: "mtext",
      NAV: "nav",
      NOBR: "nobr",
      NOFRAMES: "noframes",
      NOEMBED: "noembed",
      NOSCRIPT: "noscript",
      OBJECT: "object",
      OL: "ol",
      OPTGROUP: "optgroup",
      OPTION: "option",
      P: "p",
      PARAM: "param",
      PLAINTEXT: "plaintext",
      PRE: "pre",
      RB: "rb",
      RP: "rp",
      RT: "rt",
      RTC: "rtc",
      RUBY: "ruby",
      S: "s",
      SCRIPT: "script",
      SECTION: "section",
      SELECT: "select",
      SOURCE: "source",
      SMALL: "small",
      SPAN: "span",
      STRIKE: "strike",
      STRONG: "strong",
      STYLE: "style",
      SUB: "sub",
      SUMMARY: "summary",
      SUP: "sup",
      TABLE: "table",
      TBODY: "tbody",
      TEMPLATE: "template",
      TEXTAREA: "textarea",
      TFOOT: "tfoot",
      TD: "td",
      TH: "th",
      THEAD: "thead",
      TITLE: "title",
      TR: "tr",
      TRACK: "track",
      TT: "tt",
      U: "u",
      UL: "ul",
      SVG: "svg",
      VAR: "var",
      WBR: "wbr",
      XMP: "xmp"
    };
    exports2.SPECIAL_ELEMENTS = {
      [NS2.HTML]: {
        [$2.ADDRESS]: !0,
        [$2.APPLET]: !0,
        [$2.AREA]: !0,
        [$2.ARTICLE]: !0,
        [$2.ASIDE]: !0,
        [$2.BASE]: !0,
        [$2.BASEFONT]: !0,
        [$2.BGSOUND]: !0,
        [$2.BLOCKQUOTE]: !0,
        [$2.BODY]: !0,
        [$2.BR]: !0,
        [$2.BUTTON]: !0,
        [$2.CAPTION]: !0,
        [$2.CENTER]: !0,
        [$2.COL]: !0,
        [$2.COLGROUP]: !0,
        [$2.DD]: !0,
        [$2.DETAILS]: !0,
        [$2.DIR]: !0,
        [$2.DIV]: !0,
        [$2.DL]: !0,
        [$2.DT]: !0,
        [$2.EMBED]: !0,
        [$2.FIELDSET]: !0,
        [$2.FIGCAPTION]: !0,
        [$2.FIGURE]: !0,
        [$2.FOOTER]: !0,
        [$2.FORM]: !0,
        [$2.FRAME]: !0,
        [$2.FRAMESET]: !0,
        [$2.H1]: !0,
        [$2.H2]: !0,
        [$2.H3]: !0,
        [$2.H4]: !0,
        [$2.H5]: !0,
        [$2.H6]: !0,
        [$2.HEAD]: !0,
        [$2.HEADER]: !0,
        [$2.HGROUP]: !0,
        [$2.HR]: !0,
        [$2.HTML]: !0,
        [$2.IFRAME]: !0,
        [$2.IMG]: !0,
        [$2.INPUT]: !0,
        [$2.LI]: !0,
        [$2.LINK]: !0,
        [$2.LISTING]: !0,
        [$2.MAIN]: !0,
        [$2.MARQUEE]: !0,
        [$2.MENU]: !0,
        [$2.META]: !0,
        [$2.NAV]: !0,
        [$2.NOEMBED]: !0,
        [$2.NOFRAMES]: !0,
        [$2.NOSCRIPT]: !0,
        [$2.OBJECT]: !0,
        [$2.OL]: !0,
        [$2.P]: !0,
        [$2.PARAM]: !0,
        [$2.PLAINTEXT]: !0,
        [$2.PRE]: !0,
        [$2.SCRIPT]: !0,
        [$2.SECTION]: !0,
        [$2.SELECT]: !0,
        [$2.SOURCE]: !0,
        [$2.STYLE]: !0,
        [$2.SUMMARY]: !0,
        [$2.TABLE]: !0,
        [$2.TBODY]: !0,
        [$2.TD]: !0,
        [$2.TEMPLATE]: !0,
        [$2.TEXTAREA]: !0,
        [$2.TFOOT]: !0,
        [$2.TH]: !0,
        [$2.THEAD]: !0,
        [$2.TITLE]: !0,
        [$2.TR]: !0,
        [$2.TRACK]: !0,
        [$2.UL]: !0,
        [$2.WBR]: !0,
        [$2.XMP]: !0
      },
      [NS2.MATHML]: {
        [$2.MI]: !0,
        [$2.MO]: !0,
        [$2.MN]: !0,
        [$2.MS]: !0,
        [$2.MTEXT]: !0,
        [$2.ANNOTATION_XML]: !0
      },
      [NS2.SVG]: {
        [$2.TITLE]: !0,
        [$2.FOREIGN_OBJECT]: !0,
        [$2.DESC]: !0
      }
    };
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/parser/open-element-stack.js
var require_open_element_stack2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/parser/open-element-stack.js"(exports2, module2) {
    "use strict";
    var HTML = require_html2(), $2 = HTML.TAG_NAMES, NS2 = HTML.NAMESPACES;
    function isImpliedEndTagRequired(tn) {
      switch (tn.length) {
        case 1:
          return tn === $2.P;
        case 2:
          return tn === $2.RB || tn === $2.RP || tn === $2.RT || tn === $2.DD || tn === $2.DT || tn === $2.LI;
        case 3:
          return tn === $2.RTC;
        case 6:
          return tn === $2.OPTION;
        case 8:
          return tn === $2.OPTGROUP;
      }
      return !1;
    }
    function isImpliedEndTagRequiredThoroughly(tn) {
      switch (tn.length) {
        case 1:
          return tn === $2.P;
        case 2:
          return tn === $2.RB || tn === $2.RP || tn === $2.RT || tn === $2.DD || tn === $2.DT || tn === $2.LI || tn === $2.TD || tn === $2.TH || tn === $2.TR;
        case 3:
          return tn === $2.RTC;
        case 5:
          return tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD;
        case 6:
          return tn === $2.OPTION;
        case 7:
          return tn === $2.CAPTION;
        case 8:
          return tn === $2.OPTGROUP || tn === $2.COLGROUP;
      }
      return !1;
    }
    function isScopingElement(tn, ns) {
      switch (tn.length) {
        case 2:
          if (tn === $2.TD || tn === $2.TH)
            return ns === NS2.HTML;
          if (tn === $2.MI || tn === $2.MO || tn === $2.MN || tn === $2.MS)
            return ns === NS2.MATHML;
          break;
        case 4:
          if (tn === $2.HTML)
            return ns === NS2.HTML;
          if (tn === $2.DESC)
            return ns === NS2.SVG;
          break;
        case 5:
          if (tn === $2.TABLE)
            return ns === NS2.HTML;
          if (tn === $2.MTEXT)
            return ns === NS2.MATHML;
          if (tn === $2.TITLE)
            return ns === NS2.SVG;
          break;
        case 6:
          return (tn === $2.APPLET || tn === $2.OBJECT) && ns === NS2.HTML;
        case 7:
          return (tn === $2.CAPTION || tn === $2.MARQUEE) && ns === NS2.HTML;
        case 8:
          return tn === $2.TEMPLATE && ns === NS2.HTML;
        case 13:
          return tn === $2.FOREIGN_OBJECT && ns === NS2.SVG;
        case 14:
          return tn === $2.ANNOTATION_XML && ns === NS2.MATHML;
      }
      return !1;
    }
    var OpenElementStack2 = class {
      constructor(document4, treeAdapter) {
        this.stackTop = -1, this.items = [], this.current = document4, this.currentTagName = null, this.currentTmplContent = null, this.tmplCount = 0, this.treeAdapter = treeAdapter;
      }
      _indexOf(element5) {
        let idx = -1;
        for (let i = this.stackTop; i >= 0; i--)
          if (this.items[i] === element5) {
            idx = i;
            break;
          }
        return idx;
      }
      _isInTemplate() {
        return this.currentTagName === $2.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS2.HTML;
      }
      _updateCurrentElement() {
        this.current = this.items[this.stackTop], this.currentTagName = this.current && this.treeAdapter.getTagName(this.current), this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
      }
      push(element5) {
        this.items[++this.stackTop] = element5, this._updateCurrentElement(), this._isInTemplate() && this.tmplCount++;
      }
      pop() {
        this.stackTop--, this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this._updateCurrentElement();
      }
      replace(oldElement, newElement) {
        let idx = this._indexOf(oldElement);
        this.items[idx] = newElement, idx === this.stackTop && this._updateCurrentElement();
      }
      insertAfter(referenceElement, newElement) {
        let insertionIdx = this._indexOf(referenceElement) + 1;
        this.items.splice(insertionIdx, 0, newElement), insertionIdx === ++this.stackTop && this._updateCurrentElement();
      }
      popUntilTagNamePopped(tagName) {
        for (; this.stackTop > -1; ) {
          let tn = this.currentTagName, ns = this.treeAdapter.getNamespaceURI(this.current);
          if (this.pop(), tn === tagName && ns === NS2.HTML)
            break;
        }
      }
      popUntilElementPopped(element5) {
        for (; this.stackTop > -1; ) {
          let poppedElement = this.current;
          if (this.pop(), poppedElement === element5)
            break;
        }
      }
      popUntilNumberedHeaderPopped() {
        for (; this.stackTop > -1; ) {
          let tn = this.currentTagName, ns = this.treeAdapter.getNamespaceURI(this.current);
          if (this.pop(), tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6 && ns === NS2.HTML)
            break;
        }
      }
      popUntilTableCellPopped() {
        for (; this.stackTop > -1; ) {
          let tn = this.currentTagName, ns = this.treeAdapter.getNamespaceURI(this.current);
          if (this.pop(), tn === $2.TD || tn === $2.TH && ns === NS2.HTML)
            break;
        }
      }
      popAllUpToHtmlElement() {
        this.stackTop = 0, this._updateCurrentElement();
      }
      clearBackToTableContext() {
        for (; this.currentTagName !== $2.TABLE && this.currentTagName !== $2.TEMPLATE && this.currentTagName !== $2.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS2.HTML; )
          this.pop();
      }
      clearBackToTableBodyContext() {
        for (; this.currentTagName !== $2.TBODY && this.currentTagName !== $2.TFOOT && this.currentTagName !== $2.THEAD && this.currentTagName !== $2.TEMPLATE && this.currentTagName !== $2.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS2.HTML; )
          this.pop();
      }
      clearBackToTableRowContext() {
        for (; this.currentTagName !== $2.TR && this.currentTagName !== $2.TEMPLATE && this.currentTagName !== $2.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS2.HTML; )
          this.pop();
      }
      remove(element5) {
        for (let i = this.stackTop; i >= 0; i--)
          if (this.items[i] === element5) {
            this.items.splice(i, 1), this.stackTop--, this._updateCurrentElement();
            break;
          }
      }
      tryPeekProperlyNestedBodyElement() {
        let element5 = this.items[1];
        return element5 && this.treeAdapter.getTagName(element5) === $2.BODY ? element5 : null;
      }
      contains(element5) {
        return this._indexOf(element5) > -1;
      }
      getCommonAncestor(element5) {
        let elementIdx = this._indexOf(element5);
        return --elementIdx >= 0 ? this.items[elementIdx] : null;
      }
      isRootHtmlElementCurrent() {
        return this.stackTop === 0 && this.currentTagName === $2.HTML;
      }
      hasInScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]), ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS2.HTML)
            return !0;
          if (isScopingElement(tn, ns))
            return !1;
        }
        return !0;
      }
      hasNumberedHeaderInScope() {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]), ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if ((tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6) && ns === NS2.HTML)
            return !0;
          if (isScopingElement(tn, ns))
            return !1;
        }
        return !0;
      }
      hasInListItemScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]), ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS2.HTML)
            return !0;
          if ((tn === $2.UL || tn === $2.OL) && ns === NS2.HTML || isScopingElement(tn, ns))
            return !1;
        }
        return !0;
      }
      hasInButtonScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]), ns = this.treeAdapter.getNamespaceURI(this.items[i]);
          if (tn === tagName && ns === NS2.HTML)
            return !0;
          if (tn === $2.BUTTON && ns === NS2.HTML || isScopingElement(tn, ns))
            return !1;
        }
        return !0;
      }
      hasInTableScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]);
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS2.HTML) {
            if (tn === tagName)
              return !0;
            if (tn === $2.TABLE || tn === $2.TEMPLATE || tn === $2.HTML)
              return !1;
          }
        }
        return !0;
      }
      hasTableBodyContextInTableScope() {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]);
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS2.HTML) {
            if (tn === $2.TBODY || tn === $2.THEAD || tn === $2.TFOOT)
              return !0;
            if (tn === $2.TABLE || tn === $2.HTML)
              return !1;
          }
        }
        return !0;
      }
      hasInSelectScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
          let tn = this.treeAdapter.getTagName(this.items[i]);
          if (this.treeAdapter.getNamespaceURI(this.items[i]) === NS2.HTML) {
            if (tn === tagName)
              return !0;
            if (tn !== $2.OPTION && tn !== $2.OPTGROUP)
              return !1;
          }
        }
        return !0;
      }
      generateImpliedEndTags() {
        for (; isImpliedEndTagRequired(this.currentTagName); )
          this.pop();
      }
      generateImpliedEndTagsThoroughly() {
        for (; isImpliedEndTagRequiredThoroughly(this.currentTagName); )
          this.pop();
      }
      generateImpliedEndTagsWithExclusion(exclusionTagName) {
        for (; isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName; )
          this.pop();
      }
    };
    module2.exports = OpenElementStack2;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/parser/formatting-element-list.js
var require_formatting_element_list2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/parser/formatting-element-list.js"(exports2, module2) {
    "use strict";
    var FormattingElementList2 = class {
      constructor(treeAdapter) {
        this.length = 0, this.entries = [], this.treeAdapter = treeAdapter, this.bookmark = null;
      }
      _getNoahArkConditionCandidates(newElement) {
        let candidates = [];
        if (this.length >= 3) {
          let neAttrsLength = this.treeAdapter.getAttrList(newElement).length, neTagName = this.treeAdapter.getTagName(newElement), neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);
          for (let i = this.length - 1; i >= 0; i--) {
            let entry2 = this.entries[i];
            if (entry2.type === FormattingElementList2.MARKER_ENTRY)
              break;
            let element5 = entry2.element, elementAttrs = this.treeAdapter.getAttrList(element5);
            this.treeAdapter.getTagName(element5) === neTagName && this.treeAdapter.getNamespaceURI(element5) === neNamespaceURI && elementAttrs.length === neAttrsLength && candidates.push({ idx: i, attrs: elementAttrs });
          }
        }
        return candidates.length < 3 ? [] : candidates;
      }
      _ensureNoahArkCondition(newElement) {
        let candidates = this._getNoahArkConditionCandidates(newElement), cLength = candidates.length;
        if (cLength) {
          let neAttrs = this.treeAdapter.getAttrList(newElement), neAttrsLength = neAttrs.length, neAttrsMap = /* @__PURE__ */ Object.create(null);
          for (let i = 0; i < neAttrsLength; i++) {
            let neAttr = neAttrs[i];
            neAttrsMap[neAttr.name] = neAttr.value;
          }
          for (let i = 0; i < neAttrsLength; i++)
            for (let j = 0; j < cLength; j++) {
              let cAttr = candidates[j].attrs[i];
              if (neAttrsMap[cAttr.name] !== cAttr.value && (candidates.splice(j, 1), cLength--), candidates.length < 3)
                return;
            }
          for (let i = cLength - 1; i >= 3 - 1; i--)
            this.entries.splice(candidates[i].idx, 1), this.length--;
        }
      }
      insertMarker() {
        this.entries.push({ type: FormattingElementList2.MARKER_ENTRY }), this.length++;
      }
      pushElement(element5, token) {
        this._ensureNoahArkCondition(element5), this.entries.push({
          type: FormattingElementList2.ELEMENT_ENTRY,
          element: element5,
          token
        }), this.length++;
      }
      insertElementAfterBookmark(element5, token) {
        let bookmarkIdx = this.length - 1;
        for (; bookmarkIdx >= 0 && this.entries[bookmarkIdx] !== this.bookmark; bookmarkIdx--)
          ;
        this.entries.splice(bookmarkIdx + 1, 0, {
          type: FormattingElementList2.ELEMENT_ENTRY,
          element: element5,
          token
        }), this.length++;
      }
      removeEntry(entry2) {
        for (let i = this.length - 1; i >= 0; i--)
          if (this.entries[i] === entry2) {
            this.entries.splice(i, 1), this.length--;
            break;
          }
      }
      clearToLastMarker() {
        for (; this.length; ) {
          let entry2 = this.entries.pop();
          if (this.length--, entry2.type === FormattingElementList2.MARKER_ENTRY)
            break;
        }
      }
      getElementEntryInScopeWithTagName(tagName) {
        for (let i = this.length - 1; i >= 0; i--) {
          let entry2 = this.entries[i];
          if (entry2.type === FormattingElementList2.MARKER_ENTRY)
            return null;
          if (this.treeAdapter.getTagName(entry2.element) === tagName)
            return entry2;
        }
        return null;
      }
      getElementEntry(element5) {
        for (let i = this.length - 1; i >= 0; i--) {
          let entry2 = this.entries[i];
          if (entry2.type === FormattingElementList2.ELEMENT_ENTRY && entry2.element === element5)
            return entry2;
        }
        return null;
      }
    };
    FormattingElementList2.MARKER_ENTRY = "MARKER_ENTRY";
    FormattingElementList2.ELEMENT_ENTRY = "ELEMENT_ENTRY";
    module2.exports = FormattingElementList2;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/utils/mixin.js
var require_mixin2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/utils/mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = class {
      constructor(host) {
        let originalMethods = {}, overriddenMethods = this._getOverriddenMethods(this, originalMethods);
        for (let key2 of Object.keys(overriddenMethods))
          typeof overriddenMethods[key2] == "function" && (originalMethods[key2] = host[key2], host[key2] = overriddenMethods[key2]);
      }
      _getOverriddenMethods() {
        throw new Error("Not implemented");
      }
    };
    Mixin.install = function(host, Ctor, opts) {
      host.__mixins || (host.__mixins = []);
      for (let i = 0; i < host.__mixins.length; i++)
        if (host.__mixins[i].constructor === Ctor)
          return host.__mixins[i];
      let mixin = new Ctor(host, opts);
      return host.__mixins.push(mixin), mixin;
    };
    module2.exports = Mixin;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js
var require_preprocessor_mixin3 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin2(), PositionTrackingPreprocessorMixin = class extends Mixin {
      constructor(preprocessor) {
        super(preprocessor), this.preprocessor = preprocessor, this.isEol = !1, this.lineStartPos = 0, this.droppedBufferSize = 0, this.offset = 0, this.col = 0, this.line = 1;
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          advance() {
            let pos = this.pos + 1, ch = this.html[pos];
            return mxn.isEol && (mxn.isEol = !1, mxn.line++, mxn.lineStartPos = pos), (ch === `
` || ch === "\r" && this.html[pos + 1] !== `
`) && (mxn.isEol = !0), mxn.col = pos - mxn.lineStartPos + 1, mxn.offset = mxn.droppedBufferSize + pos, orig.advance.call(this);
          },
          retreat() {
            orig.retreat.call(this), mxn.isEol = !1, mxn.col = this.pos - mxn.lineStartPos + 1;
          },
          dropParsedChunk() {
            let prevPos = this.pos;
            orig.dropParsedChunk.call(this);
            let reduction = prevPos - this.pos;
            mxn.lineStartPos -= reduction, mxn.droppedBufferSize += reduction, mxn.offset = mxn.droppedBufferSize + this.pos;
          }
        };
      }
    };
    module2.exports = PositionTrackingPreprocessorMixin;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js
var require_tokenizer_mixin3 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin2(), Tokenizer2 = require_tokenizer2(), PositionTrackingPreprocessorMixin = require_preprocessor_mixin3(), LocationInfoTokenizerMixin = class extends Mixin {
      constructor(tokenizer) {
        super(tokenizer), this.tokenizer = tokenizer, this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin), this.currentAttrLocation = null, this.ctLoc = null;
      }
      _getCurrentLocation() {
        return {
          startLine: this.posTracker.line,
          startCol: this.posTracker.col,
          startOffset: this.posTracker.offset,
          endLine: -1,
          endCol: -1,
          endOffset: -1
        };
      }
      _attachCurrentAttrLocationInfo() {
        this.currentAttrLocation.endLine = this.posTracker.line, this.currentAttrLocation.endCol = this.posTracker.col, this.currentAttrLocation.endOffset = this.posTracker.offset;
        let currentToken = this.tokenizer.currentToken, currentAttr = this.tokenizer.currentAttr;
        currentToken.location.attrs || (currentToken.location.attrs = /* @__PURE__ */ Object.create(null)), currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;
      }
      _getOverriddenMethods(mxn, orig) {
        let methods = {
          _createStartTagToken() {
            orig._createStartTagToken.call(this), this.currentToken.location = mxn.ctLoc;
          },
          _createEndTagToken() {
            orig._createEndTagToken.call(this), this.currentToken.location = mxn.ctLoc;
          },
          _createCommentToken() {
            orig._createCommentToken.call(this), this.currentToken.location = mxn.ctLoc;
          },
          _createDoctypeToken(initialName) {
            orig._createDoctypeToken.call(this, initialName), this.currentToken.location = mxn.ctLoc;
          },
          _createCharacterToken(type, ch) {
            orig._createCharacterToken.call(this, type, ch), this.currentCharacterToken.location = mxn.ctLoc;
          },
          _createEOFToken() {
            orig._createEOFToken.call(this), this.currentToken.location = mxn._getCurrentLocation();
          },
          _createAttr(attrNameFirstCh) {
            orig._createAttr.call(this, attrNameFirstCh), mxn.currentAttrLocation = mxn._getCurrentLocation();
          },
          _leaveAttrName(toState) {
            orig._leaveAttrName.call(this, toState), mxn._attachCurrentAttrLocationInfo();
          },
          _leaveAttrValue(toState) {
            orig._leaveAttrValue.call(this, toState), mxn._attachCurrentAttrLocationInfo();
          },
          _emitCurrentToken() {
            let ctLoc = this.currentToken.location;
            this.currentCharacterToken && (this.currentCharacterToken.location.endLine = ctLoc.startLine, this.currentCharacterToken.location.endCol = ctLoc.startCol, this.currentCharacterToken.location.endOffset = ctLoc.startOffset), this.currentToken.type === Tokenizer2.EOF_TOKEN ? (ctLoc.endLine = ctLoc.startLine, ctLoc.endCol = ctLoc.startCol, ctLoc.endOffset = ctLoc.startOffset) : (ctLoc.endLine = mxn.posTracker.line, ctLoc.endCol = mxn.posTracker.col + 1, ctLoc.endOffset = mxn.posTracker.offset + 1), orig._emitCurrentToken.call(this);
          },
          _emitCurrentCharacterToken() {
            let ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;
            ctLoc && ctLoc.endOffset === -1 && (ctLoc.endLine = mxn.posTracker.line, ctLoc.endCol = mxn.posTracker.col, ctLoc.endOffset = mxn.posTracker.offset), orig._emitCurrentCharacterToken.call(this);
          }
        };
        return Object.keys(Tokenizer2.MODE).forEach((modeName) => {
          let state = Tokenizer2.MODE[modeName];
          methods[state] = function(cp) {
            mxn.ctLoc = mxn._getCurrentLocation(), orig[state].call(this, cp);
          };
        }), methods;
      }
    };
    module2.exports = LocationInfoTokenizerMixin;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js
var require_open_element_stack_mixin2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin2(), LocationInfoOpenElementStackMixin = class extends Mixin {
      constructor(stack, opts) {
        super(stack), this.onItemPop = opts.onItemPop;
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          pop() {
            mxn.onItemPop(this.current), orig.pop.call(this);
          },
          popAllUpToHtmlElement() {
            for (let i = this.stackTop; i > 0; i--)
              mxn.onItemPop(this.items[i]);
            orig.popAllUpToHtmlElement.call(this);
          },
          remove(element5) {
            mxn.onItemPop(this.current), orig.remove.call(this, element5);
          }
        };
      }
    };
    module2.exports = LocationInfoOpenElementStackMixin;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/extensions/location-info/parser-mixin.js
var require_parser_mixin3 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/extensions/location-info/parser-mixin.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin2(), Tokenizer2 = require_tokenizer2(), LocationInfoTokenizerMixin = require_tokenizer_mixin3(), LocationInfoOpenElementStackMixin = require_open_element_stack_mixin2(), HTML = require_html2(), $2 = HTML.TAG_NAMES, LocationInfoParserMixin = class extends Mixin {
      constructor(parser) {
        super(parser), this.parser = parser, this.treeAdapter = this.parser.treeAdapter, this.posTracker = null, this.lastStartTagToken = null, this.lastFosterParentingLocation = null, this.currentToken = null;
      }
      _setStartLocation(element5) {
        let loc = null;
        this.lastStartTagToken && (loc = Object.assign({}, this.lastStartTagToken.location), loc.startTag = this.lastStartTagToken.location), this.treeAdapter.setNodeSourceCodeLocation(element5, loc);
      }
      _setEndLocation(element5, closingToken) {
        if (this.treeAdapter.getNodeSourceCodeLocation(element5) && closingToken.location) {
          let ctLoc = closingToken.location, tn = this.treeAdapter.getTagName(element5), isClosingEndTag = closingToken.type === Tokenizer2.END_TAG_TOKEN && tn === closingToken.tagName, endLoc = {};
          isClosingEndTag ? (endLoc.endTag = Object.assign({}, ctLoc), endLoc.endLine = ctLoc.endLine, endLoc.endCol = ctLoc.endCol, endLoc.endOffset = ctLoc.endOffset) : (endLoc.endLine = ctLoc.startLine, endLoc.endCol = ctLoc.startCol, endLoc.endOffset = ctLoc.startOffset), this.treeAdapter.updateNodeSourceCodeLocation(element5, endLoc);
        }
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          _bootstrap(document4, fragmentContext) {
            orig._bootstrap.call(this, document4, fragmentContext), mxn.lastStartTagToken = null, mxn.lastFosterParentingLocation = null, mxn.currentToken = null;
            let tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
            mxn.posTracker = tokenizerMixin.posTracker, Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {
              onItemPop: function(element5) {
                mxn._setEndLocation(element5, mxn.currentToken);
              }
            });
          },
          _runParsingLoop(scriptHandler) {
            orig._runParsingLoop.call(this, scriptHandler);
            for (let i = this.openElements.stackTop; i >= 0; i--)
              mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);
          },
          _processTokenInForeignContent(token) {
            mxn.currentToken = token, orig._processTokenInForeignContent.call(this, token);
          },
          _processToken(token) {
            if (mxn.currentToken = token, orig._processToken.call(this, token), token.type === Tokenizer2.END_TAG_TOKEN && (token.tagName === $2.HTML || token.tagName === $2.BODY && this.openElements.hasInScope($2.BODY)))
              for (let i = this.openElements.stackTop; i >= 0; i--) {
                let element5 = this.openElements.items[i];
                if (this.treeAdapter.getTagName(element5) === token.tagName) {
                  mxn._setEndLocation(element5, token);
                  break;
                }
              }
          },
          _setDocumentType(token) {
            orig._setDocumentType.call(this, token);
            let documentChildren = this.treeAdapter.getChildNodes(this.document), cnLength = documentChildren.length;
            for (let i = 0; i < cnLength; i++) {
              let node2 = documentChildren[i];
              if (this.treeAdapter.isDocumentTypeNode(node2)) {
                this.treeAdapter.setNodeSourceCodeLocation(node2, token.location);
                break;
              }
            }
          },
          _attachElementToTree(element5) {
            mxn._setStartLocation(element5), mxn.lastStartTagToken = null, orig._attachElementToTree.call(this, element5);
          },
          _appendElement(token, namespaceURI) {
            mxn.lastStartTagToken = token, orig._appendElement.call(this, token, namespaceURI);
          },
          _insertElement(token, namespaceURI) {
            mxn.lastStartTagToken = token, orig._insertElement.call(this, token, namespaceURI);
          },
          _insertTemplate(token) {
            mxn.lastStartTagToken = token, orig._insertTemplate.call(this, token);
            let tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);
            this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);
          },
          _insertFakeRootElement() {
            orig._insertFakeRootElement.call(this), this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);
          },
          _appendCommentNode(token, parent) {
            orig._appendCommentNode.call(this, token, parent);
            let children = this.treeAdapter.getChildNodes(parent), commentNode = children[children.length - 1];
            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
          },
          _findFosterParentingLocation() {
            return mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this), mxn.lastFosterParentingLocation;
          },
          _insertCharacters(token) {
            orig._insertCharacters.call(this, token);
            let hasFosterParent = this._shouldFosterParentOnInsertion(), parent = hasFosterParent && mxn.lastFosterParentingLocation.parent || this.openElements.currentTmplContent || this.openElements.current, siblings2 = this.treeAdapter.getChildNodes(parent), textNodeIdx = hasFosterParent && mxn.lastFosterParentingLocation.beforeElement ? siblings2.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1 : siblings2.length - 1, textNode = siblings2[textNodeIdx];
            if (this.treeAdapter.getNodeSourceCodeLocation(textNode)) {
              let { endLine, endCol, endOffset } = token.location;
              this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });
            } else
              this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
          }
        };
      }
    };
    module2.exports = LocationInfoParserMixin;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js
var require_mixin_base2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js"(exports2, module2) {
    "use strict";
    var Mixin = require_mixin2(), ErrorReportingMixinBase = class extends Mixin {
      constructor(host, opts) {
        super(host), this.posTracker = null, this.onParseError = opts.onParseError;
      }
      _setErrorLocation(err) {
        err.startLine = err.endLine = this.posTracker.line, err.startCol = err.endCol = this.posTracker.col, err.startOffset = err.endOffset = this.posTracker.offset;
      }
      _reportError(code3) {
        let err = {
          code: code3,
          startLine: -1,
          startCol: -1,
          startOffset: -1,
          endLine: -1,
          endCol: -1,
          endOffset: -1
        };
        this._setErrorLocation(err), this.onParseError(err);
      }
      _getOverriddenMethods(mxn) {
        return {
          _err(code3) {
            mxn._reportError(code3);
          }
        };
      }
    };
    module2.exports = ErrorReportingMixinBase;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js
var require_preprocessor_mixin4 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js"(exports2, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base2(), PositionTrackingPreprocessorMixin = require_preprocessor_mixin3(), Mixin = require_mixin2(), ErrorReportingPreprocessorMixin = class extends ErrorReportingMixinBase {
      constructor(preprocessor, opts) {
        super(preprocessor, opts), this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin), this.lastErrOffset = -1;
      }
      _reportError(code3) {
        this.lastErrOffset !== this.posTracker.offset && (this.lastErrOffset = this.posTracker.offset, super._reportError(code3));
      }
    };
    module2.exports = ErrorReportingPreprocessorMixin;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js
var require_tokenizer_mixin4 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js"(exports2, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base2(), ErrorReportingPreprocessorMixin = require_preprocessor_mixin4(), Mixin = require_mixin2(), ErrorReportingTokenizerMixin = class extends ErrorReportingMixinBase {
      constructor(tokenizer, opts) {
        super(tokenizer, opts);
        let preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);
        this.posTracker = preprocessorMixin.posTracker;
      }
    };
    module2.exports = ErrorReportingTokenizerMixin;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js
var require_parser_mixin4 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js"(exports2, module2) {
    "use strict";
    var ErrorReportingMixinBase = require_mixin_base2(), ErrorReportingTokenizerMixin = require_tokenizer_mixin4(), LocationInfoTokenizerMixin = require_tokenizer_mixin3(), Mixin = require_mixin2(), ErrorReportingParserMixin = class extends ErrorReportingMixinBase {
      constructor(parser, opts) {
        super(parser, opts), this.opts = opts, this.ctLoc = null, this.locBeforeToken = !1;
      }
      _setErrorLocation(err) {
        this.ctLoc && (err.startLine = this.ctLoc.startLine, err.startCol = this.ctLoc.startCol, err.startOffset = this.ctLoc.startOffset, err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine, err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol, err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset);
      }
      _getOverriddenMethods(mxn, orig) {
        return {
          _bootstrap(document4, fragmentContext) {
            orig._bootstrap.call(this, document4, fragmentContext), Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts), Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
          },
          _processInputToken(token) {
            mxn.ctLoc = token.location, orig._processInputToken.call(this, token);
          },
          _err(code3, options2) {
            mxn.locBeforeToken = options2 && options2.beforeToken, mxn._reportError(code3);
          }
        };
      }
    };
    module2.exports = ErrorReportingParserMixin;
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/tree-adapters/default.js
var require_default2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/tree-adapters/default.js"(exports2) {
    "use strict";
    var { DOCUMENT_MODE: DOCUMENT_MODE2 } = require_html2();
    exports2.createDocument = function() {
      return {
        nodeName: "#document",
        mode: DOCUMENT_MODE2.NO_QUIRKS,
        childNodes: []
      };
    };
    exports2.createDocumentFragment = function() {
      return {
        nodeName: "#document-fragment",
        childNodes: []
      };
    };
    exports2.createElement = function(tagName, namespaceURI, attrs) {
      return {
        nodeName: tagName,
        tagName,
        attrs,
        namespaceURI,
        childNodes: [],
        parentNode: null
      };
    };
    exports2.createCommentNode = function(data) {
      return {
        nodeName: "#comment",
        data,
        parentNode: null
      };
    };
    var createTextNode2 = function(value) {
      return {
        nodeName: "#text",
        value,
        parentNode: null
      };
    }, appendChild = exports2.appendChild = function(parentNode, newNode) {
      parentNode.childNodes.push(newNode), newNode.parentNode = parentNode;
    }, insertBefore = exports2.insertBefore = function(parentNode, newNode, referenceNode) {
      let insertionIdx = parentNode.childNodes.indexOf(referenceNode);
      parentNode.childNodes.splice(insertionIdx, 0, newNode), newNode.parentNode = parentNode;
    };
    exports2.setTemplateContent = function(templateElement, contentElement) {
      templateElement.content = contentElement;
    };
    exports2.getTemplateContent = function(templateElement) {
      return templateElement.content;
    };
    exports2.setDocumentType = function(document4, name, publicId, systemId) {
      let doctypeNode = null;
      for (let i = 0; i < document4.childNodes.length; i++)
        if (document4.childNodes[i].nodeName === "#documentType") {
          doctypeNode = document4.childNodes[i];
          break;
        }
      doctypeNode ? (doctypeNode.name = name, doctypeNode.publicId = publicId, doctypeNode.systemId = systemId) : appendChild(document4, {
        nodeName: "#documentType",
        name,
        publicId,
        systemId
      });
    };
    exports2.setDocumentMode = function(document4, mode) {
      document4.mode = mode;
    };
    exports2.getDocumentMode = function(document4) {
      return document4.mode;
    };
    exports2.detachNode = function(node2) {
      if (node2.parentNode) {
        let idx = node2.parentNode.childNodes.indexOf(node2);
        node2.parentNode.childNodes.splice(idx, 1), node2.parentNode = null;
      }
    };
    exports2.insertText = function(parentNode, text7) {
      if (parentNode.childNodes.length) {
        let prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];
        if (prevNode.nodeName === "#text") {
          prevNode.value += text7;
          return;
        }
      }
      appendChild(parentNode, createTextNode2(text7));
    };
    exports2.insertTextBefore = function(parentNode, text7, referenceNode) {
      let prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
      prevNode && prevNode.nodeName === "#text" ? prevNode.value += text7 : insertBefore(parentNode, createTextNode2(text7), referenceNode);
    };
    exports2.adoptAttributes = function(recipient, attrs) {
      let recipientAttrsMap = [];
      for (let i = 0; i < recipient.attrs.length; i++)
        recipientAttrsMap.push(recipient.attrs[i].name);
      for (let j = 0; j < attrs.length; j++)
        recipientAttrsMap.indexOf(attrs[j].name) === -1 && recipient.attrs.push(attrs[j]);
    };
    exports2.getFirstChild = function(node2) {
      return node2.childNodes[0];
    };
    exports2.getChildNodes = function(node2) {
      return node2.childNodes;
    };
    exports2.getParentNode = function(node2) {
      return node2.parentNode;
    };
    exports2.getAttrList = function(element5) {
      return element5.attrs;
    };
    exports2.getTagName = function(element5) {
      return element5.tagName;
    };
    exports2.getNamespaceURI = function(element5) {
      return element5.namespaceURI;
    };
    exports2.getTextNodeContent = function(textNode) {
      return textNode.value;
    };
    exports2.getCommentNodeContent = function(commentNode) {
      return commentNode.data;
    };
    exports2.getDocumentTypeNodeName = function(doctypeNode) {
      return doctypeNode.name;
    };
    exports2.getDocumentTypeNodePublicId = function(doctypeNode) {
      return doctypeNode.publicId;
    };
    exports2.getDocumentTypeNodeSystemId = function(doctypeNode) {
      return doctypeNode.systemId;
    };
    exports2.isTextNode = function(node2) {
      return node2.nodeName === "#text";
    };
    exports2.isCommentNode = function(node2) {
      return node2.nodeName === "#comment";
    };
    exports2.isDocumentTypeNode = function(node2) {
      return node2.nodeName === "#documentType";
    };
    exports2.isElementNode = function(node2) {
      return !!node2.tagName;
    };
    exports2.setNodeSourceCodeLocation = function(node2, location2) {
      node2.sourceCodeLocation = location2;
    };
    exports2.getNodeSourceCodeLocation = function(node2) {
      return node2.sourceCodeLocation;
    };
    exports2.updateNodeSourceCodeLocation = function(node2, endLocation) {
      node2.sourceCodeLocation = Object.assign(node2.sourceCodeLocation, endLocation);
    };
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/utils/merge-options.js
var require_merge_options2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/utils/merge-options.js"(exports2, module2) {
    "use strict";
    module2.exports = function(defaults, options2) {
      return options2 = options2 || /* @__PURE__ */ Object.create(null), [defaults, options2].reduce((merged, optObj) => (Object.keys(optObj).forEach((key2) => {
        merged[key2] = optObj[key2];
      }), merged), /* @__PURE__ */ Object.create(null));
    };
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/common/doctype.js
var require_doctype2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/common/doctype.js"(exports2) {
    "use strict";
    var { DOCUMENT_MODE: DOCUMENT_MODE2 } = require_html2(), VALID_DOCTYPE_NAME2 = "html", VALID_SYSTEM_ID2 = "about:legacy-compat", QUIRKS_MODE_SYSTEM_ID2 = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd", QUIRKS_MODE_PUBLIC_ID_PREFIXES2 = [
      "+//silmaril//dtd html pro v0r11 19970101//",
      "-//as//dtd html 3.0 aswedit + extensions//",
      "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
      "-//ietf//dtd html 2.0 level 1//",
      "-//ietf//dtd html 2.0 level 2//",
      "-//ietf//dtd html 2.0 strict level 1//",
      "-//ietf//dtd html 2.0 strict level 2//",
      "-//ietf//dtd html 2.0 strict//",
      "-//ietf//dtd html 2.0//",
      "-//ietf//dtd html 2.1e//",
      "-//ietf//dtd html 3.0//",
      "-//ietf//dtd html 3.2 final//",
      "-//ietf//dtd html 3.2//",
      "-//ietf//dtd html 3//",
      "-//ietf//dtd html level 0//",
      "-//ietf//dtd html level 1//",
      "-//ietf//dtd html level 2//",
      "-//ietf//dtd html level 3//",
      "-//ietf//dtd html strict level 0//",
      "-//ietf//dtd html strict level 1//",
      "-//ietf//dtd html strict level 2//",
      "-//ietf//dtd html strict level 3//",
      "-//ietf//dtd html strict//",
      "-//ietf//dtd html//",
      "-//metrius//dtd metrius presentational//",
      "-//microsoft//dtd internet explorer 2.0 html strict//",
      "-//microsoft//dtd internet explorer 2.0 html//",
      "-//microsoft//dtd internet explorer 2.0 tables//",
      "-//microsoft//dtd internet explorer 3.0 html strict//",
      "-//microsoft//dtd internet explorer 3.0 html//",
      "-//microsoft//dtd internet explorer 3.0 tables//",
      "-//netscape comm. corp.//dtd html//",
      "-//netscape comm. corp.//dtd strict html//",
      "-//o'reilly and associates//dtd html 2.0//",
      "-//o'reilly and associates//dtd html extended 1.0//",
      "-//o'reilly and associates//dtd html extended relaxed 1.0//",
      "-//sq//dtd html 2.0 hotmetal + extensions//",
      "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
      "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
      "-//spyglass//dtd html 2.0 extended//",
      "-//sun microsystems corp.//dtd hotjava html//",
      "-//sun microsystems corp.//dtd hotjava strict html//",
      "-//w3c//dtd html 3 1995-03-24//",
      "-//w3c//dtd html 3.2 draft//",
      "-//w3c//dtd html 3.2 final//",
      "-//w3c//dtd html 3.2//",
      "-//w3c//dtd html 3.2s draft//",
      "-//w3c//dtd html 4.0 frameset//",
      "-//w3c//dtd html 4.0 transitional//",
      "-//w3c//dtd html experimental 19960712//",
      "-//w3c//dtd html experimental 970421//",
      "-//w3c//dtd w3 html//",
      "-//w3o//dtd w3 html 3.0//",
      "-//webtechs//dtd mozilla html 2.0//",
      "-//webtechs//dtd mozilla html//"
    ], QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES2 = QUIRKS_MODE_PUBLIC_ID_PREFIXES2.concat([
      "-//w3c//dtd html 4.01 frameset//",
      "-//w3c//dtd html 4.01 transitional//"
    ]), QUIRKS_MODE_PUBLIC_IDS2 = ["-//w3o//dtd w3 html strict 3.0//en//", "-/w3c/dtd html 4.0 transitional/en", "html"], LIMITED_QUIRKS_PUBLIC_ID_PREFIXES2 = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"], LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES2 = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES2.concat([
      "-//w3c//dtd html 4.01 frameset//",
      "-//w3c//dtd html 4.01 transitional//"
    ]);
    function enquoteDoctypeId(id) {
      let quote = id.indexOf('"') !== -1 ? "'" : '"';
      return quote + id + quote;
    }
    function hasPrefix2(publicId, prefixes) {
      for (let i = 0; i < prefixes.length; i++)
        if (publicId.indexOf(prefixes[i]) === 0)
          return !0;
      return !1;
    }
    exports2.isConforming = function(token) {
      return token.name === VALID_DOCTYPE_NAME2 && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID2);
    };
    exports2.getDocumentMode = function(token) {
      if (token.name !== VALID_DOCTYPE_NAME2)
        return DOCUMENT_MODE2.QUIRKS;
      let systemId = token.systemId;
      if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID2)
        return DOCUMENT_MODE2.QUIRKS;
      let publicId = token.publicId;
      if (publicId !== null) {
        if (publicId = publicId.toLowerCase(), QUIRKS_MODE_PUBLIC_IDS2.indexOf(publicId) > -1)
          return DOCUMENT_MODE2.QUIRKS;
        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES2 : QUIRKS_MODE_PUBLIC_ID_PREFIXES2;
        if (hasPrefix2(publicId, prefixes))
          return DOCUMENT_MODE2.QUIRKS;
        if (prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES2 : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES2, hasPrefix2(publicId, prefixes))
          return DOCUMENT_MODE2.LIMITED_QUIRKS;
      }
      return DOCUMENT_MODE2.NO_QUIRKS;
    };
    exports2.serializeContent = function(name, publicId, systemId) {
      let str2 = "!DOCTYPE ";
      return name && (str2 += name), publicId ? str2 += " PUBLIC " + enquoteDoctypeId(publicId) : systemId && (str2 += " SYSTEM"), systemId !== null && (str2 += " " + enquoteDoctypeId(systemId)), str2;
    };
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/common/foreign-content.js
var require_foreign_content2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/common/foreign-content.js"(exports2) {
    "use strict";
    var Tokenizer2 = require_tokenizer2(), HTML = require_html2(), $2 = HTML.TAG_NAMES, NS2 = HTML.NAMESPACES, ATTRS2 = HTML.ATTRS, MIME_TYPES2 = {
      TEXT_HTML: "text/html",
      APPLICATION_XML: "application/xhtml+xml"
    }, DEFINITION_URL_ATTR2 = "definitionurl", ADJUSTED_DEFINITION_URL_ATTR2 = "definitionURL", SVG_ATTRS_ADJUSTMENT_MAP2 = {
      attributename: "attributeName",
      attributetype: "attributeType",
      basefrequency: "baseFrequency",
      baseprofile: "baseProfile",
      calcmode: "calcMode",
      clippathunits: "clipPathUnits",
      diffuseconstant: "diffuseConstant",
      edgemode: "edgeMode",
      filterunits: "filterUnits",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      limitingconeangle: "limitingConeAngle",
      markerheight: "markerHeight",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      numoctaves: "numOctaves",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      refx: "refX",
      refy: "refY",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stitchtiles: "stitchTiles",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textlength: "textLength",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      xchannelselector: "xChannelSelector",
      ychannelselector: "yChannelSelector",
      zoomandpan: "zoomAndPan"
    }, XML_ATTRS_ADJUSTMENT_MAP2 = {
      "xlink:actuate": { prefix: "xlink", name: "actuate", namespace: NS2.XLINK },
      "xlink:arcrole": { prefix: "xlink", name: "arcrole", namespace: NS2.XLINK },
      "xlink:href": { prefix: "xlink", name: "href", namespace: NS2.XLINK },
      "xlink:role": { prefix: "xlink", name: "role", namespace: NS2.XLINK },
      "xlink:show": { prefix: "xlink", name: "show", namespace: NS2.XLINK },
      "xlink:title": { prefix: "xlink", name: "title", namespace: NS2.XLINK },
      "xlink:type": { prefix: "xlink", name: "type", namespace: NS2.XLINK },
      "xml:base": { prefix: "xml", name: "base", namespace: NS2.XML },
      "xml:lang": { prefix: "xml", name: "lang", namespace: NS2.XML },
      "xml:space": { prefix: "xml", name: "space", namespace: NS2.XML },
      xmlns: { prefix: "", name: "xmlns", namespace: NS2.XMLNS },
      "xmlns:xlink": { prefix: "xmlns", name: "xlink", namespace: NS2.XMLNS }
    }, SVG_TAG_NAMES_ADJUSTMENT_MAP2 = exports2.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
      altglyph: "altGlyph",
      altglyphdef: "altGlyphDef",
      altglyphitem: "altGlyphItem",
      animatecolor: "animateColor",
      animatemotion: "animateMotion",
      animatetransform: "animateTransform",
      clippath: "clipPath",
      feblend: "feBlend",
      fecolormatrix: "feColorMatrix",
      fecomponenttransfer: "feComponentTransfer",
      fecomposite: "feComposite",
      feconvolvematrix: "feConvolveMatrix",
      fediffuselighting: "feDiffuseLighting",
      fedisplacementmap: "feDisplacementMap",
      fedistantlight: "feDistantLight",
      feflood: "feFlood",
      fefunca: "feFuncA",
      fefuncb: "feFuncB",
      fefuncg: "feFuncG",
      fefuncr: "feFuncR",
      fegaussianblur: "feGaussianBlur",
      feimage: "feImage",
      femerge: "feMerge",
      femergenode: "feMergeNode",
      femorphology: "feMorphology",
      feoffset: "feOffset",
      fepointlight: "fePointLight",
      fespecularlighting: "feSpecularLighting",
      fespotlight: "feSpotLight",
      fetile: "feTile",
      feturbulence: "feTurbulence",
      foreignobject: "foreignObject",
      glyphref: "glyphRef",
      lineargradient: "linearGradient",
      radialgradient: "radialGradient",
      textpath: "textPath"
    }, EXITS_FOREIGN_CONTENT2 = {
      [$2.B]: !0,
      [$2.BIG]: !0,
      [$2.BLOCKQUOTE]: !0,
      [$2.BODY]: !0,
      [$2.BR]: !0,
      [$2.CENTER]: !0,
      [$2.CODE]: !0,
      [$2.DD]: !0,
      [$2.DIV]: !0,
      [$2.DL]: !0,
      [$2.DT]: !0,
      [$2.EM]: !0,
      [$2.EMBED]: !0,
      [$2.H1]: !0,
      [$2.H2]: !0,
      [$2.H3]: !0,
      [$2.H4]: !0,
      [$2.H5]: !0,
      [$2.H6]: !0,
      [$2.HEAD]: !0,
      [$2.HR]: !0,
      [$2.I]: !0,
      [$2.IMG]: !0,
      [$2.LI]: !0,
      [$2.LISTING]: !0,
      [$2.MENU]: !0,
      [$2.META]: !0,
      [$2.NOBR]: !0,
      [$2.OL]: !0,
      [$2.P]: !0,
      [$2.PRE]: !0,
      [$2.RUBY]: !0,
      [$2.S]: !0,
      [$2.SMALL]: !0,
      [$2.SPAN]: !0,
      [$2.STRONG]: !0,
      [$2.STRIKE]: !0,
      [$2.SUB]: !0,
      [$2.SUP]: !0,
      [$2.TABLE]: !0,
      [$2.TT]: !0,
      [$2.U]: !0,
      [$2.UL]: !0,
      [$2.VAR]: !0
    };
    exports2.causesExit = function(startTagToken2) {
      let tn = startTagToken2.tagName;
      return tn === $2.FONT && (Tokenizer2.getTokenAttr(startTagToken2, ATTRS2.COLOR) !== null || Tokenizer2.getTokenAttr(startTagToken2, ATTRS2.SIZE) !== null || Tokenizer2.getTokenAttr(startTagToken2, ATTRS2.FACE) !== null) ? !0 : EXITS_FOREIGN_CONTENT2[tn];
    };
    exports2.adjustTokenMathMLAttrs = function(token) {
      for (let i = 0; i < token.attrs.length; i++)
        if (token.attrs[i].name === DEFINITION_URL_ATTR2) {
          token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR2;
          break;
        }
    };
    exports2.adjustTokenSVGAttrs = function(token) {
      for (let i = 0; i < token.attrs.length; i++) {
        let adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP2[token.attrs[i].name];
        adjustedAttrName && (token.attrs[i].name = adjustedAttrName);
      }
    };
    exports2.adjustTokenXMLAttrs = function(token) {
      for (let i = 0; i < token.attrs.length; i++) {
        let adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP2[token.attrs[i].name];
        adjustedAttrEntry && (token.attrs[i].prefix = adjustedAttrEntry.prefix, token.attrs[i].name = adjustedAttrEntry.name, token.attrs[i].namespace = adjustedAttrEntry.namespace);
      }
    };
    exports2.adjustTokenSVGTagName = function(token) {
      let adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP2[token.tagName];
      adjustedTagName && (token.tagName = adjustedTagName);
    };
    function isMathMLTextIntegrationPoint2(tn, ns) {
      return ns === NS2.MATHML && (tn === $2.MI || tn === $2.MO || tn === $2.MN || tn === $2.MS || tn === $2.MTEXT);
    }
    function isHtmlIntegrationPoint2(tn, ns, attrs) {
      if (ns === NS2.MATHML && tn === $2.ANNOTATION_XML) {
        for (let i = 0; i < attrs.length; i++)
          if (attrs[i].name === ATTRS2.ENCODING) {
            let value = attrs[i].value.toLowerCase();
            return value === MIME_TYPES2.TEXT_HTML || value === MIME_TYPES2.APPLICATION_XML;
          }
      }
      return ns === NS2.SVG && (tn === $2.FOREIGN_OBJECT || tn === $2.DESC || tn === $2.TITLE);
    }
    exports2.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {
      return !!((!foreignNS || foreignNS === NS2.HTML) && isHtmlIntegrationPoint2(tn, ns, attrs) || (!foreignNS || foreignNS === NS2.MATHML) && isMathMLTextIntegrationPoint2(tn, ns));
    };
  }
});

// node_modules/hast-util-raw/node_modules/parse5/lib/parser/index.js
var require_parser2 = __commonJS({
  "node_modules/hast-util-raw/node_modules/parse5/lib/parser/index.js"(exports2, module2) {
    "use strict";
    var Tokenizer2 = require_tokenizer2(), OpenElementStack2 = require_open_element_stack2(), FormattingElementList2 = require_formatting_element_list2(), LocationInfoParserMixin = require_parser_mixin3(), ErrorReportingParserMixin = require_parser_mixin4(), Mixin = require_mixin2(), defaultTreeAdapter2 = require_default2(), mergeOptions = require_merge_options2(), doctype3 = require_doctype2(), foreignContent = require_foreign_content2(), ERR2 = require_error_codes2(), unicode = require_unicode2(), HTML = require_html2(), $2 = HTML.TAG_NAMES, NS2 = HTML.NAMESPACES, ATTRS2 = HTML.ATTRS, DEFAULT_OPTIONS = {
      scriptingEnabled: !0,
      sourceCodeLocationInfo: !1,
      onParseError: null,
      treeAdapter: defaultTreeAdapter2
    }, HIDDEN_INPUT_TYPE2 = "hidden", AA_OUTER_LOOP_ITER2 = 8, AA_INNER_LOOP_ITER2 = 3, INITIAL_MODE = "INITIAL_MODE", BEFORE_HTML_MODE = "BEFORE_HTML_MODE", BEFORE_HEAD_MODE = "BEFORE_HEAD_MODE", IN_HEAD_MODE = "IN_HEAD_MODE", IN_HEAD_NO_SCRIPT_MODE = "IN_HEAD_NO_SCRIPT_MODE", AFTER_HEAD_MODE = "AFTER_HEAD_MODE", IN_BODY_MODE = "IN_BODY_MODE", TEXT_MODE = "TEXT_MODE", IN_TABLE_MODE = "IN_TABLE_MODE", IN_TABLE_TEXT_MODE = "IN_TABLE_TEXT_MODE", IN_CAPTION_MODE = "IN_CAPTION_MODE", IN_COLUMN_GROUP_MODE = "IN_COLUMN_GROUP_MODE", IN_TABLE_BODY_MODE = "IN_TABLE_BODY_MODE", IN_ROW_MODE = "IN_ROW_MODE", IN_CELL_MODE = "IN_CELL_MODE", IN_SELECT_MODE = "IN_SELECT_MODE", IN_SELECT_IN_TABLE_MODE = "IN_SELECT_IN_TABLE_MODE", IN_TEMPLATE_MODE = "IN_TEMPLATE_MODE", AFTER_BODY_MODE = "AFTER_BODY_MODE", IN_FRAMESET_MODE = "IN_FRAMESET_MODE", AFTER_FRAMESET_MODE = "AFTER_FRAMESET_MODE", AFTER_AFTER_BODY_MODE = "AFTER_AFTER_BODY_MODE", AFTER_AFTER_FRAMESET_MODE = "AFTER_AFTER_FRAMESET_MODE", INSERTION_MODE_RESET_MAP = {
      [$2.TR]: IN_ROW_MODE,
      [$2.TBODY]: IN_TABLE_BODY_MODE,
      [$2.THEAD]: IN_TABLE_BODY_MODE,
      [$2.TFOOT]: IN_TABLE_BODY_MODE,
      [$2.CAPTION]: IN_CAPTION_MODE,
      [$2.COLGROUP]: IN_COLUMN_GROUP_MODE,
      [$2.TABLE]: IN_TABLE_MODE,
      [$2.BODY]: IN_BODY_MODE,
      [$2.FRAMESET]: IN_FRAMESET_MODE
    }, TEMPLATE_INSERTION_MODE_SWITCH_MAP = {
      [$2.CAPTION]: IN_TABLE_MODE,
      [$2.COLGROUP]: IN_TABLE_MODE,
      [$2.TBODY]: IN_TABLE_MODE,
      [$2.TFOOT]: IN_TABLE_MODE,
      [$2.THEAD]: IN_TABLE_MODE,
      [$2.COL]: IN_COLUMN_GROUP_MODE,
      [$2.TR]: IN_TABLE_BODY_MODE,
      [$2.TD]: IN_ROW_MODE,
      [$2.TH]: IN_ROW_MODE
    }, TOKEN_HANDLERS = {
      [INITIAL_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenInInitialMode2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenInInitialMode2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: doctypeInInitialMode2,
        [Tokenizer2.START_TAG_TOKEN]: tokenInInitialMode2,
        [Tokenizer2.END_TAG_TOKEN]: tokenInInitialMode2,
        [Tokenizer2.EOF_TOKEN]: tokenInInitialMode2
      },
      [BEFORE_HTML_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenBeforeHtml2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenBeforeHtml2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagBeforeHtml2,
        [Tokenizer2.END_TAG_TOKEN]: endTagBeforeHtml2,
        [Tokenizer2.EOF_TOKEN]: tokenBeforeHtml2
      },
      [BEFORE_HEAD_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenBeforeHead2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenBeforeHead2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer2.START_TAG_TOKEN]: startTagBeforeHead2,
        [Tokenizer2.END_TAG_TOKEN]: endTagBeforeHead2,
        [Tokenizer2.EOF_TOKEN]: tokenBeforeHead2
      },
      [IN_HEAD_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenInHead2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenInHead2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer2.START_TAG_TOKEN]: startTagInHead2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInHead2,
        [Tokenizer2.EOF_TOKEN]: tokenInHead2
      },
      [IN_HEAD_NO_SCRIPT_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenInHeadNoScript2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer2.START_TAG_TOKEN]: startTagInHeadNoScript2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInHeadNoScript2,
        [Tokenizer2.EOF_TOKEN]: tokenInHeadNoScript2
      },
      [AFTER_HEAD_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenAfterHead2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenAfterHead2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterHead2,
        [Tokenizer2.END_TAG_TOKEN]: endTagAfterHead2,
        [Tokenizer2.EOF_TOKEN]: tokenAfterHead2
      },
      [IN_BODY_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInBody2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInBody2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [TEXT_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: ignoreToken,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: ignoreToken,
        [Tokenizer2.END_TAG_TOKEN]: endTagInText2,
        [Tokenizer2.EOF_TOKEN]: eofInText2
      },
      [IN_TABLE_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInTable2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInTable2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_TABLE_TEXT_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInTableText2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText2,
        [Tokenizer2.COMMENT_TOKEN]: tokenInTableText2,
        [Tokenizer2.DOCTYPE_TOKEN]: tokenInTableText2,
        [Tokenizer2.START_TAG_TOKEN]: tokenInTableText2,
        [Tokenizer2.END_TAG_TOKEN]: tokenInTableText2,
        [Tokenizer2.EOF_TOKEN]: tokenInTableText2
      },
      [IN_CAPTION_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInCaption2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInCaption2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_COLUMN_GROUP_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenInColumnGroup2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenInColumnGroup2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInColumnGroup2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInColumnGroup2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_TABLE_BODY_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInTableBody2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInTableBody2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_ROW_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: characterInTable2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInRow2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInRow2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_CELL_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInCell2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInCell2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_SELECT_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInSelect2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInSelect2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_SELECT_IN_TABLE_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInSelectInTable2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInSelectInTable2,
        [Tokenizer2.EOF_TOKEN]: eofInBody2
      },
      [IN_TEMPLATE_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: characterInBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInTemplate2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInTemplate2,
        [Tokenizer2.EOF_TOKEN]: eofInTemplate2
      },
      [AFTER_BODY_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenAfterBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenAfterBody2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendCommentToRootHtmlElement2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterBody2,
        [Tokenizer2.END_TAG_TOKEN]: endTagAfterBody2,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      },
      [IN_FRAMESET_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagInFrameset2,
        [Tokenizer2.END_TAG_TOKEN]: endTagInFrameset2,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      },
      [AFTER_FRAMESET_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer2.COMMENT_TOKEN]: appendComment2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterFrameset2,
        [Tokenizer2.END_TAG_TOKEN]: endTagAfterFrameset2,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      },
      [AFTER_AFTER_BODY_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: tokenAfterAfterBody2,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody2,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendCommentToDocument2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterAfterBody2,
        [Tokenizer2.END_TAG_TOKEN]: tokenAfterAfterBody2,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      },
      [AFTER_AFTER_FRAMESET_MODE]: {
        [Tokenizer2.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer2.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody2,
        [Tokenizer2.COMMENT_TOKEN]: appendCommentToDocument2,
        [Tokenizer2.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer2.START_TAG_TOKEN]: startTagAfterAfterFrameset2,
        [Tokenizer2.END_TAG_TOKEN]: ignoreToken,
        [Tokenizer2.EOF_TOKEN]: stopParsing2
      }
    }, Parser3 = class {
      constructor(options2) {
        this.options = mergeOptions(DEFAULT_OPTIONS, options2), this.treeAdapter = this.options.treeAdapter, this.pendingScript = null, this.options.sourceCodeLocationInfo && Mixin.install(this, LocationInfoParserMixin), this.options.onParseError && Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });
      }
      parse(html6) {
        let document4 = this.treeAdapter.createDocument();
        return this._bootstrap(document4, null), this.tokenizer.write(html6, !0), this._runParsingLoop(null), document4;
      }
      parseFragment(html6, fragmentContext) {
        fragmentContext || (fragmentContext = this.treeAdapter.createElement($2.TEMPLATE, NS2.HTML, []));
        let documentMock = this.treeAdapter.createElement("documentmock", NS2.HTML, []);
        this._bootstrap(documentMock, fragmentContext), this.treeAdapter.getTagName(fragmentContext) === $2.TEMPLATE && this._pushTmplInsertionMode(IN_TEMPLATE_MODE), this._initTokenizerForFragmentParsing(), this._insertFakeRootElement(), this._resetInsertionMode(), this._findFormInFragmentContext(), this.tokenizer.write(html6, !0), this._runParsingLoop(null);
        let rootElement = this.treeAdapter.getFirstChild(documentMock), fragment2 = this.treeAdapter.createDocumentFragment();
        return this._adoptNodes(rootElement, fragment2), fragment2;
      }
      _bootstrap(document4, fragmentContext) {
        this.tokenizer = new Tokenizer2(this.options), this.stopped = !1, this.insertionMode = INITIAL_MODE, this.originalInsertionMode = "", this.document = document4, this.fragmentContext = fragmentContext, this.headElement = null, this.formElement = null, this.openElements = new OpenElementStack2(this.document, this.treeAdapter), this.activeFormattingElements = new FormattingElementList2(this.treeAdapter), this.tmplInsertionModeStack = [], this.tmplInsertionModeStackTop = -1, this.currentTmplInsertionMode = null, this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = !1, this.framesetOk = !0, this.skipNextNewLine = !1, this.fosterParentingEnabled = !1;
      }
      _err() {
      }
      _runParsingLoop(scriptHandler) {
        for (; !this.stopped; ) {
          this._setupTokenizerCDATAMode();
          let token = this.tokenizer.getNextToken();
          if (token.type === Tokenizer2.HIBERNATION_TOKEN)
            break;
          if (this.skipNextNewLine && (this.skipNextNewLine = !1, token.type === Tokenizer2.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === `
`)) {
            if (token.chars.length === 1)
              continue;
            token.chars = token.chars.substr(1);
          }
          if (this._processInputToken(token), scriptHandler && this.pendingScript)
            break;
        }
      }
      runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {
        if (this._runParsingLoop(scriptHandler), scriptHandler && this.pendingScript) {
          let script = this.pendingScript;
          this.pendingScript = null, scriptHandler(script);
          return;
        }
        writeCallback && writeCallback();
      }
      _setupTokenizerCDATAMode() {
        let current = this._getAdjustedCurrentElement();
        this.tokenizer.allowCDATA = current && current !== this.document && this.treeAdapter.getNamespaceURI(current) !== NS2.HTML && !this._isIntegrationPoint(current);
      }
      _switchToTextParsing(currentToken, nextTokenizerState) {
        this._insertElement(currentToken, NS2.HTML), this.tokenizer.state = nextTokenizerState, this.originalInsertionMode = this.insertionMode, this.insertionMode = TEXT_MODE;
      }
      switchToPlaintextParsing() {
        this.insertionMode = TEXT_MODE, this.originalInsertionMode = IN_BODY_MODE, this.tokenizer.state = Tokenizer2.MODE.PLAINTEXT;
      }
      _getAdjustedCurrentElement() {
        return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
      }
      _findFormInFragmentContext() {
        let node2 = this.fragmentContext;
        do {
          if (this.treeAdapter.getTagName(node2) === $2.FORM) {
            this.formElement = node2;
            break;
          }
          node2 = this.treeAdapter.getParentNode(node2);
        } while (node2);
      }
      _initTokenizerForFragmentParsing() {
        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS2.HTML) {
          let tn = this.treeAdapter.getTagName(this.fragmentContext);
          tn === $2.TITLE || tn === $2.TEXTAREA ? this.tokenizer.state = Tokenizer2.MODE.RCDATA : tn === $2.STYLE || tn === $2.XMP || tn === $2.IFRAME || tn === $2.NOEMBED || tn === $2.NOFRAMES || tn === $2.NOSCRIPT ? this.tokenizer.state = Tokenizer2.MODE.RAWTEXT : tn === $2.SCRIPT ? this.tokenizer.state = Tokenizer2.MODE.SCRIPT_DATA : tn === $2.PLAINTEXT && (this.tokenizer.state = Tokenizer2.MODE.PLAINTEXT);
        }
      }
      _setDocumentType(token) {
        let name = token.name || "", publicId = token.publicId || "", systemId = token.systemId || "";
        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);
      }
      _attachElementToTree(element5) {
        if (this._shouldFosterParentOnInsertion())
          this._fosterParentElement(element5);
        else {
          let parent = this.openElements.currentTmplContent || this.openElements.current;
          this.treeAdapter.appendChild(parent, element5);
        }
      }
      _appendElement(token, namespaceURI) {
        let element5 = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element5);
      }
      _insertElement(token, namespaceURI) {
        let element5 = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element5), this.openElements.push(element5);
      }
      _insertFakeElement(tagName) {
        let element5 = this.treeAdapter.createElement(tagName, NS2.HTML, []);
        this._attachElementToTree(element5), this.openElements.push(element5);
      }
      _insertTemplate(token) {
        let tmpl = this.treeAdapter.createElement(token.tagName, NS2.HTML, token.attrs), content3 = this.treeAdapter.createDocumentFragment();
        this.treeAdapter.setTemplateContent(tmpl, content3), this._attachElementToTree(tmpl), this.openElements.push(tmpl);
      }
      _insertFakeRootElement() {
        let element5 = this.treeAdapter.createElement($2.HTML, NS2.HTML, []);
        this.treeAdapter.appendChild(this.openElements.current, element5), this.openElements.push(element5);
      }
      _appendCommentNode(token, parent) {
        let commentNode = this.treeAdapter.createCommentNode(token.data);
        this.treeAdapter.appendChild(parent, commentNode);
      }
      _insertCharacters(token) {
        if (this._shouldFosterParentOnInsertion())
          this._fosterParentText(token.chars);
        else {
          let parent = this.openElements.currentTmplContent || this.openElements.current;
          this.treeAdapter.insertText(parent, token.chars);
        }
      }
      _adoptNodes(donor, recipient) {
        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor))
          this.treeAdapter.detachNode(child), this.treeAdapter.appendChild(recipient, child);
      }
      _shouldProcessTokenInForeignContent(token) {
        let current = this._getAdjustedCurrentElement();
        if (!current || current === this.document)
          return !1;
        let ns = this.treeAdapter.getNamespaceURI(current);
        if (ns === NS2.HTML || this.treeAdapter.getTagName(current) === $2.ANNOTATION_XML && ns === NS2.MATHML && token.type === Tokenizer2.START_TAG_TOKEN && token.tagName === $2.SVG)
          return !1;
        let isCharacterToken = token.type === Tokenizer2.CHARACTER_TOKEN || token.type === Tokenizer2.NULL_CHARACTER_TOKEN || token.type === Tokenizer2.WHITESPACE_CHARACTER_TOKEN;
        return (token.type === Tokenizer2.START_TAG_TOKEN && token.tagName !== $2.MGLYPH && token.tagName !== $2.MALIGNMARK || isCharacterToken) && this._isIntegrationPoint(current, NS2.MATHML) || (token.type === Tokenizer2.START_TAG_TOKEN || isCharacterToken) && this._isIntegrationPoint(current, NS2.HTML) ? !1 : token.type !== Tokenizer2.EOF_TOKEN;
      }
      _processToken(token) {
        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);
      }
      _processTokenInBodyMode(token) {
        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);
      }
      _processTokenInForeignContent(token) {
        token.type === Tokenizer2.CHARACTER_TOKEN ? characterInForeignContent2(this, token) : token.type === Tokenizer2.NULL_CHARACTER_TOKEN ? nullCharacterInForeignContent2(this, token) : token.type === Tokenizer2.WHITESPACE_CHARACTER_TOKEN ? insertCharacters(this, token) : token.type === Tokenizer2.COMMENT_TOKEN ? appendComment2(this, token) : token.type === Tokenizer2.START_TAG_TOKEN ? startTagInForeignContent2(this, token) : token.type === Tokenizer2.END_TAG_TOKEN && endTagInForeignContent2(this, token);
      }
      _processInputToken(token) {
        this._shouldProcessTokenInForeignContent(token) ? this._processTokenInForeignContent(token) : this._processToken(token), token.type === Tokenizer2.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing && this._err(ERR2.nonVoidHtmlElementStartTagWithTrailingSolidus);
      }
      _isIntegrationPoint(element5, foreignNS) {
        let tn = this.treeAdapter.getTagName(element5), ns = this.treeAdapter.getNamespaceURI(element5), attrs = this.treeAdapter.getAttrList(element5);
        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);
      }
      _reconstructActiveFormattingElements() {
        let listLength = this.activeFormattingElements.length;
        if (listLength) {
          let unopenIdx = listLength, entry2 = null;
          do
            if (unopenIdx--, entry2 = this.activeFormattingElements.entries[unopenIdx], entry2.type === FormattingElementList2.MARKER_ENTRY || this.openElements.contains(entry2.element)) {
              unopenIdx++;
              break;
            }
          while (unopenIdx > 0);
          for (let i = unopenIdx; i < listLength; i++)
            entry2 = this.activeFormattingElements.entries[i], this._insertElement(entry2.token, this.treeAdapter.getNamespaceURI(entry2.element)), entry2.element = this.openElements.current;
        }
      }
      _closeTableCell() {
        this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = IN_ROW_MODE;
      }
      _closePElement() {
        this.openElements.generateImpliedEndTagsWithExclusion($2.P), this.openElements.popUntilTagNamePopped($2.P);
      }
      _resetInsertionMode() {
        for (let i = this.openElements.stackTop, last = !1; i >= 0; i--) {
          let element5 = this.openElements.items[i];
          i === 0 && (last = !0, this.fragmentContext && (element5 = this.fragmentContext));
          let tn = this.treeAdapter.getTagName(element5), newInsertionMode = INSERTION_MODE_RESET_MAP[tn];
          if (newInsertionMode) {
            this.insertionMode = newInsertionMode;
            break;
          } else if (!last && (tn === $2.TD || tn === $2.TH)) {
            this.insertionMode = IN_CELL_MODE;
            break;
          } else if (!last && tn === $2.HEAD) {
            this.insertionMode = IN_HEAD_MODE;
            break;
          } else if (tn === $2.SELECT) {
            this._resetInsertionModeForSelect(i);
            break;
          } else if (tn === $2.TEMPLATE) {
            this.insertionMode = this.currentTmplInsertionMode;
            break;
          } else if (tn === $2.HTML) {
            this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;
            break;
          } else if (last) {
            this.insertionMode = IN_BODY_MODE;
            break;
          }
        }
      }
      _resetInsertionModeForSelect(selectIdx) {
        if (selectIdx > 0)
          for (let i = selectIdx - 1; i > 0; i--) {
            let ancestor = this.openElements.items[i], tn = this.treeAdapter.getTagName(ancestor);
            if (tn === $2.TEMPLATE)
              break;
            if (tn === $2.TABLE) {
              this.insertionMode = IN_SELECT_IN_TABLE_MODE;
              return;
            }
          }
        this.insertionMode = IN_SELECT_MODE;
      }
      _pushTmplInsertionMode(mode) {
        this.tmplInsertionModeStack.push(mode), this.tmplInsertionModeStackTop++, this.currentTmplInsertionMode = mode;
      }
      _popTmplInsertionMode() {
        this.tmplInsertionModeStack.pop(), this.tmplInsertionModeStackTop--, this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
      }
      _isElementCausesFosterParenting(element5) {
        let tn = this.treeAdapter.getTagName(element5);
        return tn === $2.TABLE || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR;
      }
      _shouldFosterParentOnInsertion() {
        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
      }
      _findFosterParentingLocation() {
        let location2 = {
          parent: null,
          beforeElement: null
        };
        for (let i = this.openElements.stackTop; i >= 0; i--) {
          let openElement = this.openElements.items[i], tn = this.treeAdapter.getTagName(openElement), ns = this.treeAdapter.getNamespaceURI(openElement);
          if (tn === $2.TEMPLATE && ns === NS2.HTML) {
            location2.parent = this.treeAdapter.getTemplateContent(openElement);
            break;
          } else if (tn === $2.TABLE) {
            location2.parent = this.treeAdapter.getParentNode(openElement), location2.parent ? location2.beforeElement = openElement : location2.parent = this.openElements.items[i - 1];
            break;
          }
        }
        return location2.parent || (location2.parent = this.openElements.items[0]), location2;
      }
      _fosterParentElement(element5) {
        let location2 = this._findFosterParentingLocation();
        location2.beforeElement ? this.treeAdapter.insertBefore(location2.parent, element5, location2.beforeElement) : this.treeAdapter.appendChild(location2.parent, element5);
      }
      _fosterParentText(chars) {
        let location2 = this._findFosterParentingLocation();
        location2.beforeElement ? this.treeAdapter.insertTextBefore(location2.parent, chars, location2.beforeElement) : this.treeAdapter.insertText(location2.parent, chars);
      }
      _isSpecialElement(element5) {
        let tn = this.treeAdapter.getTagName(element5), ns = this.treeAdapter.getNamespaceURI(element5);
        return HTML.SPECIAL_ELEMENTS[ns][tn];
      }
    };
    module2.exports = Parser3;
    function aaObtainFormattingElementEntry2(p2, token) {
      let formattingElementEntry = p2.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);
      return formattingElementEntry ? p2.openElements.contains(formattingElementEntry.element) ? p2.openElements.hasInScope(token.tagName) || (formattingElementEntry = null) : (p2.activeFormattingElements.removeEntry(formattingElementEntry), formattingElementEntry = null) : genericEndTagInBody2(p2, token), formattingElementEntry;
    }
    function aaObtainFurthestBlock2(p2, formattingElementEntry) {
      let furthestBlock = null;
      for (let i = p2.openElements.stackTop; i >= 0; i--) {
        let element5 = p2.openElements.items[i];
        if (element5 === formattingElementEntry.element)
          break;
        p2._isSpecialElement(element5) && (furthestBlock = element5);
      }
      return furthestBlock || (p2.openElements.popUntilElementPopped(formattingElementEntry.element), p2.activeFormattingElements.removeEntry(formattingElementEntry)), furthestBlock;
    }
    function aaInnerLoop2(p2, furthestBlock, formattingElement) {
      let lastElement = furthestBlock, nextElement = p2.openElements.getCommonAncestor(furthestBlock);
      for (let i = 0, element5 = nextElement; element5 !== formattingElement; i++, element5 = nextElement) {
        nextElement = p2.openElements.getCommonAncestor(element5);
        let elementEntry = p2.activeFormattingElements.getElementEntry(element5), counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER2;
        !elementEntry || counterOverflow ? (counterOverflow && p2.activeFormattingElements.removeEntry(elementEntry), p2.openElements.remove(element5)) : (element5 = aaRecreateElementFromEntry2(p2, elementEntry), lastElement === furthestBlock && (p2.activeFormattingElements.bookmark = elementEntry), p2.treeAdapter.detachNode(lastElement), p2.treeAdapter.appendChild(element5, lastElement), lastElement = element5);
      }
      return lastElement;
    }
    function aaRecreateElementFromEntry2(p2, elementEntry) {
      let ns = p2.treeAdapter.getNamespaceURI(elementEntry.element), newElement = p2.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);
      return p2.openElements.replace(elementEntry.element, newElement), elementEntry.element = newElement, newElement;
    }
    function aaInsertLastNodeInCommonAncestor2(p2, commonAncestor, lastElement) {
      if (p2._isElementCausesFosterParenting(commonAncestor))
        p2._fosterParentElement(lastElement);
      else {
        let tn = p2.treeAdapter.getTagName(commonAncestor), ns = p2.treeAdapter.getNamespaceURI(commonAncestor);
        tn === $2.TEMPLATE && ns === NS2.HTML && (commonAncestor = p2.treeAdapter.getTemplateContent(commonAncestor)), p2.treeAdapter.appendChild(commonAncestor, lastElement);
      }
    }
    function aaReplaceFormattingElement2(p2, furthestBlock, formattingElementEntry) {
      let ns = p2.treeAdapter.getNamespaceURI(formattingElementEntry.element), token = formattingElementEntry.token, newElement = p2.treeAdapter.createElement(token.tagName, ns, token.attrs);
      p2._adoptNodes(furthestBlock, newElement), p2.treeAdapter.appendChild(furthestBlock, newElement), p2.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token), p2.activeFormattingElements.removeEntry(formattingElementEntry), p2.openElements.remove(formattingElementEntry.element), p2.openElements.insertAfter(furthestBlock, newElement);
    }
    function callAdoptionAgency2(p2, token) {
      let formattingElementEntry;
      for (let i = 0; i < AA_OUTER_LOOP_ITER2 && (formattingElementEntry = aaObtainFormattingElementEntry2(p2, token, formattingElementEntry), !!formattingElementEntry); i++) {
        let furthestBlock = aaObtainFurthestBlock2(p2, formattingElementEntry);
        if (!furthestBlock)
          break;
        p2.activeFormattingElements.bookmark = formattingElementEntry;
        let lastElement = aaInnerLoop2(p2, furthestBlock, formattingElementEntry.element), commonAncestor = p2.openElements.getCommonAncestor(formattingElementEntry.element);
        p2.treeAdapter.detachNode(lastElement), aaInsertLastNodeInCommonAncestor2(p2, commonAncestor, lastElement), aaReplaceFormattingElement2(p2, furthestBlock, formattingElementEntry);
      }
    }
    function ignoreToken() {
    }
    function misplacedDoctype(p2) {
      p2._err(ERR2.misplacedDoctype);
    }
    function appendComment2(p2, token) {
      p2._appendCommentNode(token, p2.openElements.currentTmplContent || p2.openElements.current);
    }
    function appendCommentToRootHtmlElement2(p2, token) {
      p2._appendCommentNode(token, p2.openElements.items[0]);
    }
    function appendCommentToDocument2(p2, token) {
      p2._appendCommentNode(token, p2.document);
    }
    function insertCharacters(p2, token) {
      p2._insertCharacters(token);
    }
    function stopParsing2(p2) {
      p2.stopped = !0;
    }
    function doctypeInInitialMode2(p2, token) {
      p2._setDocumentType(token);
      let mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype3.getDocumentMode(token);
      doctype3.isConforming(token) || p2._err(ERR2.nonConformingDoctype), p2.treeAdapter.setDocumentMode(p2.document, mode), p2.insertionMode = BEFORE_HTML_MODE;
    }
    function tokenInInitialMode2(p2, token) {
      p2._err(ERR2.missingDoctype, { beforeToken: !0 }), p2.treeAdapter.setDocumentMode(p2.document, HTML.DOCUMENT_MODE.QUIRKS), p2.insertionMode = BEFORE_HTML_MODE, p2._processToken(token);
    }
    function startTagBeforeHtml2(p2, token) {
      token.tagName === $2.HTML ? (p2._insertElement(token, NS2.HTML), p2.insertionMode = BEFORE_HEAD_MODE) : tokenBeforeHtml2(p2, token);
    }
    function endTagBeforeHtml2(p2, token) {
      let tn = token.tagName;
      (tn === $2.HTML || tn === $2.HEAD || tn === $2.BODY || tn === $2.BR) && tokenBeforeHtml2(p2, token);
    }
    function tokenBeforeHtml2(p2, token) {
      p2._insertFakeRootElement(), p2.insertionMode = BEFORE_HEAD_MODE, p2._processToken(token);
    }
    function startTagBeforeHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.HEAD ? (p2._insertElement(token, NS2.HTML), p2.headElement = p2.openElements.current, p2.insertionMode = IN_HEAD_MODE) : tokenBeforeHead2(p2, token);
    }
    function endTagBeforeHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HEAD || tn === $2.BODY || tn === $2.HTML || tn === $2.BR ? tokenBeforeHead2(p2, token) : p2._err(ERR2.endTagWithoutMatchingOpenElement);
    }
    function tokenBeforeHead2(p2, token) {
      p2._insertFakeElement($2.HEAD), p2.headElement = p2.openElements.current, p2.insertionMode = IN_HEAD_MODE, p2._processToken(token);
    }
    function startTagInHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.BASE || tn === $2.BASEFONT || tn === $2.BGSOUND || tn === $2.LINK || tn === $2.META ? (p2._appendElement(token, NS2.HTML), token.ackSelfClosing = !0) : tn === $2.TITLE ? p2._switchToTextParsing(token, Tokenizer2.MODE.RCDATA) : tn === $2.NOSCRIPT ? p2.options.scriptingEnabled ? p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT) : (p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_HEAD_NO_SCRIPT_MODE) : tn === $2.NOFRAMES || tn === $2.STYLE ? p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT) : tn === $2.SCRIPT ? p2._switchToTextParsing(token, Tokenizer2.MODE.SCRIPT_DATA) : tn === $2.TEMPLATE ? (p2._insertTemplate(token, NS2.HTML), p2.activeFormattingElements.insertMarker(), p2.framesetOk = !1, p2.insertionMode = IN_TEMPLATE_MODE, p2._pushTmplInsertionMode(IN_TEMPLATE_MODE)) : tn === $2.HEAD ? p2._err(ERR2.misplacedStartTagForHeadElement) : tokenInHead2(p2, token);
    }
    function endTagInHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HEAD ? (p2.openElements.pop(), p2.insertionMode = AFTER_HEAD_MODE) : tn === $2.BODY || tn === $2.BR || tn === $2.HTML ? tokenInHead2(p2, token) : tn === $2.TEMPLATE && p2.openElements.tmplCount > 0 ? (p2.openElements.generateImpliedEndTagsThoroughly(), p2.openElements.currentTagName !== $2.TEMPLATE && p2._err(ERR2.closingOfElementWithOpenChildElements), p2.openElements.popUntilTagNamePopped($2.TEMPLATE), p2.activeFormattingElements.clearToLastMarker(), p2._popTmplInsertionMode(), p2._resetInsertionMode()) : p2._err(ERR2.endTagWithoutMatchingOpenElement);
    }
    function tokenInHead2(p2, token) {
      p2.openElements.pop(), p2.insertionMode = AFTER_HEAD_MODE, p2._processToken(token);
    }
    function startTagInHeadNoScript2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.BASEFONT || tn === $2.BGSOUND || tn === $2.HEAD || tn === $2.LINK || tn === $2.META || tn === $2.NOFRAMES || tn === $2.STYLE ? startTagInHead2(p2, token) : tn === $2.NOSCRIPT ? p2._err(ERR2.nestedNoscriptInHead) : tokenInHeadNoScript2(p2, token);
    }
    function endTagInHeadNoScript2(p2, token) {
      let tn = token.tagName;
      tn === $2.NOSCRIPT ? (p2.openElements.pop(), p2.insertionMode = IN_HEAD_MODE) : tn === $2.BR ? tokenInHeadNoScript2(p2, token) : p2._err(ERR2.endTagWithoutMatchingOpenElement);
    }
    function tokenInHeadNoScript2(p2, token) {
      let errCode = token.type === Tokenizer2.EOF_TOKEN ? ERR2.openElementsLeftAfterEof : ERR2.disallowedContentInNoscriptInHead;
      p2._err(errCode), p2.openElements.pop(), p2.insertionMode = IN_HEAD_MODE, p2._processToken(token);
    }
    function startTagAfterHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.BODY ? (p2._insertElement(token, NS2.HTML), p2.framesetOk = !1, p2.insertionMode = IN_BODY_MODE) : tn === $2.FRAMESET ? (p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_FRAMESET_MODE) : tn === $2.BASE || tn === $2.BASEFONT || tn === $2.BGSOUND || tn === $2.LINK || tn === $2.META || tn === $2.NOFRAMES || tn === $2.SCRIPT || tn === $2.STYLE || tn === $2.TEMPLATE || tn === $2.TITLE ? (p2._err(ERR2.abandonedHeadElementChild), p2.openElements.push(p2.headElement), startTagInHead2(p2, token), p2.openElements.remove(p2.headElement)) : tn === $2.HEAD ? p2._err(ERR2.misplacedStartTagForHeadElement) : tokenAfterHead2(p2, token);
    }
    function endTagAfterHead2(p2, token) {
      let tn = token.tagName;
      tn === $2.BODY || tn === $2.HTML || tn === $2.BR ? tokenAfterHead2(p2, token) : tn === $2.TEMPLATE ? endTagInHead2(p2, token) : p2._err(ERR2.endTagWithoutMatchingOpenElement);
    }
    function tokenAfterHead2(p2, token) {
      p2._insertFakeElement($2.BODY), p2.insertionMode = IN_BODY_MODE, p2._processToken(token);
    }
    function whitespaceCharacterInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertCharacters(token);
    }
    function characterInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertCharacters(token), p2.framesetOk = !1;
    }
    function htmlStartTagInBody2(p2, token) {
      p2.openElements.tmplCount === 0 && p2.treeAdapter.adoptAttributes(p2.openElements.items[0], token.attrs);
    }
    function bodyStartTagInBody2(p2, token) {
      let bodyElement = p2.openElements.tryPeekProperlyNestedBodyElement();
      bodyElement && p2.openElements.tmplCount === 0 && (p2.framesetOk = !1, p2.treeAdapter.adoptAttributes(bodyElement, token.attrs));
    }
    function framesetStartTagInBody2(p2, token) {
      let bodyElement = p2.openElements.tryPeekProperlyNestedBodyElement();
      p2.framesetOk && bodyElement && (p2.treeAdapter.detachNode(bodyElement), p2.openElements.popAllUpToHtmlElement(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_FRAMESET_MODE);
    }
    function addressStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML);
    }
    function numberedHeaderStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement();
      let tn = p2.openElements.currentTagName;
      (tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6) && p2.openElements.pop(), p2._insertElement(token, NS2.HTML);
    }
    function preStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML), p2.skipNextNewLine = !0, p2.framesetOk = !1;
    }
    function formStartTagInBody2(p2, token) {
      let inTemplate = p2.openElements.tmplCount > 0;
      (!p2.formElement || inTemplate) && (p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML), inTemplate || (p2.formElement = p2.openElements.current));
    }
    function listItemStartTagInBody2(p2, token) {
      p2.framesetOk = !1;
      let tn = token.tagName;
      for (let i = p2.openElements.stackTop; i >= 0; i--) {
        let element5 = p2.openElements.items[i], elementTn = p2.treeAdapter.getTagName(element5), closeTn = null;
        if (tn === $2.LI && elementTn === $2.LI ? closeTn = $2.LI : (tn === $2.DD || tn === $2.DT) && (elementTn === $2.DD || elementTn === $2.DT) && (closeTn = elementTn), closeTn) {
          p2.openElements.generateImpliedEndTagsWithExclusion(closeTn), p2.openElements.popUntilTagNamePopped(closeTn);
          break;
        }
        if (elementTn !== $2.ADDRESS && elementTn !== $2.DIV && elementTn !== $2.P && p2._isSpecialElement(element5))
          break;
      }
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML);
    }
    function plaintextStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML), p2.tokenizer.state = Tokenizer2.MODE.PLAINTEXT;
    }
    function buttonStartTagInBody2(p2, token) {
      p2.openElements.hasInScope($2.BUTTON) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped($2.BUTTON)), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.framesetOk = !1;
    }
    function aStartTagInBody2(p2, token) {
      let activeElementEntry = p2.activeFormattingElements.getElementEntryInScopeWithTagName($2.A);
      activeElementEntry && (callAdoptionAgency2(p2, token), p2.openElements.remove(activeElementEntry.element), p2.activeFormattingElements.removeEntry(activeElementEntry)), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
    }
    function bStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
    }
    function nobrStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2.openElements.hasInScope($2.NOBR) && (callAdoptionAgency2(p2, token), p2._reconstructActiveFormattingElements()), p2._insertElement(token, NS2.HTML), p2.activeFormattingElements.pushElement(p2.openElements.current, token);
    }
    function appletStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.activeFormattingElements.insertMarker(), p2.framesetOk = !1;
    }
    function tableStartTagInBody2(p2, token) {
      p2.treeAdapter.getDocumentMode(p2.document) !== HTML.DOCUMENT_MODE.QUIRKS && p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML), p2.framesetOk = !1, p2.insertionMode = IN_TABLE_MODE;
    }
    function areaStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._appendElement(token, NS2.HTML), p2.framesetOk = !1, token.ackSelfClosing = !0;
    }
    function inputStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._appendElement(token, NS2.HTML);
      let inputType = Tokenizer2.getTokenAttr(token, ATTRS2.TYPE);
      (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE2) && (p2.framesetOk = !1), token.ackSelfClosing = !0;
    }
    function paramStartTagInBody2(p2, token) {
      p2._appendElement(token, NS2.HTML), token.ackSelfClosing = !0;
    }
    function hrStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._appendElement(token, NS2.HTML), p2.framesetOk = !1, token.ackSelfClosing = !0;
    }
    function imageStartTagInBody2(p2, token) {
      token.tagName = $2.IMG, areaStartTagInBody2(p2, token);
    }
    function textareaStartTagInBody2(p2, token) {
      p2._insertElement(token, NS2.HTML), p2.skipNextNewLine = !0, p2.tokenizer.state = Tokenizer2.MODE.RCDATA, p2.originalInsertionMode = p2.insertionMode, p2.framesetOk = !1, p2.insertionMode = TEXT_MODE;
    }
    function xmpStartTagInBody2(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._reconstructActiveFormattingElements(), p2.framesetOk = !1, p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT);
    }
    function iframeStartTagInBody2(p2, token) {
      p2.framesetOk = !1, p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT);
    }
    function noembedStartTagInBody2(p2, token) {
      p2._switchToTextParsing(token, Tokenizer2.MODE.RAWTEXT);
    }
    function selectStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML), p2.framesetOk = !1, p2.insertionMode === IN_TABLE_MODE || p2.insertionMode === IN_CAPTION_MODE || p2.insertionMode === IN_TABLE_BODY_MODE || p2.insertionMode === IN_ROW_MODE || p2.insertionMode === IN_CELL_MODE ? p2.insertionMode = IN_SELECT_IN_TABLE_MODE : p2.insertionMode = IN_SELECT_MODE;
    }
    function optgroupStartTagInBody2(p2, token) {
      p2.openElements.currentTagName === $2.OPTION && p2.openElements.pop(), p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML);
    }
    function rbStartTagInBody2(p2, token) {
      p2.openElements.hasInScope($2.RUBY) && p2.openElements.generateImpliedEndTags(), p2._insertElement(token, NS2.HTML);
    }
    function rtStartTagInBody2(p2, token) {
      p2.openElements.hasInScope($2.RUBY) && p2.openElements.generateImpliedEndTagsWithExclusion($2.RTC), p2._insertElement(token, NS2.HTML);
    }
    function menuStartTagInBody(p2, token) {
      p2.openElements.hasInButtonScope($2.P) && p2._closePElement(), p2._insertElement(token, NS2.HTML);
    }
    function mathStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), foreignContent.adjustTokenMathMLAttrs(token), foreignContent.adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, NS2.MATHML) : p2._insertElement(token, NS2.MATHML), token.ackSelfClosing = !0;
    }
    function svgStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), foreignContent.adjustTokenSVGAttrs(token), foreignContent.adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, NS2.SVG) : p2._insertElement(token, NS2.SVG), token.ackSelfClosing = !0;
    }
    function genericStartTagInBody2(p2, token) {
      p2._reconstructActiveFormattingElements(), p2._insertElement(token, NS2.HTML);
    }
    function startTagInBody2(p2, token) {
      let tn = token.tagName;
      switch (tn.length) {
        case 1:
          tn === $2.I || tn === $2.S || tn === $2.B || tn === $2.U ? bStartTagInBody2(p2, token) : tn === $2.P ? addressStartTagInBody2(p2, token) : tn === $2.A ? aStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token);
          break;
        case 2:
          tn === $2.DL || tn === $2.OL || tn === $2.UL ? addressStartTagInBody2(p2, token) : tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6 ? numberedHeaderStartTagInBody2(p2, token) : tn === $2.LI || tn === $2.DD || tn === $2.DT ? listItemStartTagInBody2(p2, token) : tn === $2.EM || tn === $2.TT ? bStartTagInBody2(p2, token) : tn === $2.BR ? areaStartTagInBody2(p2, token) : tn === $2.HR ? hrStartTagInBody2(p2, token) : tn === $2.RB ? rbStartTagInBody2(p2, token) : tn === $2.RT || tn === $2.RP ? rtStartTagInBody2(p2, token) : tn !== $2.TH && tn !== $2.TD && tn !== $2.TR && genericStartTagInBody2(p2, token);
          break;
        case 3:
          tn === $2.DIV || tn === $2.DIR || tn === $2.NAV ? addressStartTagInBody2(p2, token) : tn === $2.PRE ? preStartTagInBody2(p2, token) : tn === $2.BIG ? bStartTagInBody2(p2, token) : tn === $2.IMG || tn === $2.WBR ? areaStartTagInBody2(p2, token) : tn === $2.XMP ? xmpStartTagInBody2(p2, token) : tn === $2.SVG ? svgStartTagInBody2(p2, token) : tn === $2.RTC ? rbStartTagInBody2(p2, token) : tn !== $2.COL && genericStartTagInBody2(p2, token);
          break;
        case 4:
          tn === $2.HTML ? htmlStartTagInBody2(p2, token) : tn === $2.BASE || tn === $2.LINK || tn === $2.META ? startTagInHead2(p2, token) : tn === $2.BODY ? bodyStartTagInBody2(p2, token) : tn === $2.MAIN || tn === $2.MENU ? addressStartTagInBody2(p2, token) : tn === $2.FORM ? formStartTagInBody2(p2, token) : tn === $2.CODE || tn === $2.FONT ? bStartTagInBody2(p2, token) : tn === $2.NOBR ? nobrStartTagInBody2(p2, token) : tn === $2.AREA ? areaStartTagInBody2(p2, token) : tn === $2.MATH ? mathStartTagInBody2(p2, token) : tn === $2.MENU ? menuStartTagInBody(p2, token) : tn !== $2.HEAD && genericStartTagInBody2(p2, token);
          break;
        case 5:
          tn === $2.STYLE || tn === $2.TITLE ? startTagInHead2(p2, token) : tn === $2.ASIDE ? addressStartTagInBody2(p2, token) : tn === $2.SMALL ? bStartTagInBody2(p2, token) : tn === $2.TABLE ? tableStartTagInBody2(p2, token) : tn === $2.EMBED ? areaStartTagInBody2(p2, token) : tn === $2.INPUT ? inputStartTagInBody2(p2, token) : tn === $2.PARAM || tn === $2.TRACK ? paramStartTagInBody2(p2, token) : tn === $2.IMAGE ? imageStartTagInBody2(p2, token) : tn !== $2.FRAME && tn !== $2.TBODY && tn !== $2.TFOOT && tn !== $2.THEAD && genericStartTagInBody2(p2, token);
          break;
        case 6:
          tn === $2.SCRIPT ? startTagInHead2(p2, token) : tn === $2.CENTER || tn === $2.FIGURE || tn === $2.FOOTER || tn === $2.HEADER || tn === $2.HGROUP || tn === $2.DIALOG ? addressStartTagInBody2(p2, token) : tn === $2.BUTTON ? buttonStartTagInBody2(p2, token) : tn === $2.STRIKE || tn === $2.STRONG ? bStartTagInBody2(p2, token) : tn === $2.APPLET || tn === $2.OBJECT ? appletStartTagInBody2(p2, token) : tn === $2.KEYGEN ? areaStartTagInBody2(p2, token) : tn === $2.SOURCE ? paramStartTagInBody2(p2, token) : tn === $2.IFRAME ? iframeStartTagInBody2(p2, token) : tn === $2.SELECT ? selectStartTagInBody2(p2, token) : tn === $2.OPTION ? optgroupStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token);
          break;
        case 7:
          tn === $2.BGSOUND ? startTagInHead2(p2, token) : tn === $2.DETAILS || tn === $2.ADDRESS || tn === $2.ARTICLE || tn === $2.SECTION || tn === $2.SUMMARY ? addressStartTagInBody2(p2, token) : tn === $2.LISTING ? preStartTagInBody2(p2, token) : tn === $2.MARQUEE ? appletStartTagInBody2(p2, token) : tn === $2.NOEMBED ? noembedStartTagInBody2(p2, token) : tn !== $2.CAPTION && genericStartTagInBody2(p2, token);
          break;
        case 8:
          tn === $2.BASEFONT ? startTagInHead2(p2, token) : tn === $2.FRAMESET ? framesetStartTagInBody2(p2, token) : tn === $2.FIELDSET ? addressStartTagInBody2(p2, token) : tn === $2.TEXTAREA ? textareaStartTagInBody2(p2, token) : tn === $2.TEMPLATE ? startTagInHead2(p2, token) : tn === $2.NOSCRIPT ? p2.options.scriptingEnabled ? noembedStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token) : tn === $2.OPTGROUP ? optgroupStartTagInBody2(p2, token) : tn !== $2.COLGROUP && genericStartTagInBody2(p2, token);
          break;
        case 9:
          tn === $2.PLAINTEXT ? plaintextStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token);
          break;
        case 10:
          tn === $2.BLOCKQUOTE || tn === $2.FIGCAPTION ? addressStartTagInBody2(p2, token) : genericStartTagInBody2(p2, token);
          break;
        default:
          genericStartTagInBody2(p2, token);
      }
    }
    function bodyEndTagInBody2(p2) {
      p2.openElements.hasInScope($2.BODY) && (p2.insertionMode = AFTER_BODY_MODE);
    }
    function htmlEndTagInBody2(p2, token) {
      p2.openElements.hasInScope($2.BODY) && (p2.insertionMode = AFTER_BODY_MODE, p2._processToken(token));
    }
    function addressEndTagInBody2(p2, token) {
      let tn = token.tagName;
      p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn));
    }
    function formEndTagInBody2(p2) {
      let inTemplate = p2.openElements.tmplCount > 0, formElement = p2.formElement;
      inTemplate || (p2.formElement = null), (formElement || inTemplate) && p2.openElements.hasInScope($2.FORM) && (p2.openElements.generateImpliedEndTags(), inTemplate ? p2.openElements.popUntilTagNamePopped($2.FORM) : p2.openElements.remove(formElement));
    }
    function pEndTagInBody2(p2) {
      p2.openElements.hasInButtonScope($2.P) || p2._insertFakeElement($2.P), p2._closePElement();
    }
    function liEndTagInBody2(p2) {
      p2.openElements.hasInListItemScope($2.LI) && (p2.openElements.generateImpliedEndTagsWithExclusion($2.LI), p2.openElements.popUntilTagNamePopped($2.LI));
    }
    function ddEndTagInBody2(p2, token) {
      let tn = token.tagName;
      p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTagsWithExclusion(tn), p2.openElements.popUntilTagNamePopped(tn));
    }
    function numberedHeaderEndTagInBody2(p2) {
      p2.openElements.hasNumberedHeaderInScope() && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilNumberedHeaderPopped());
    }
    function appletEndTagInBody2(p2, token) {
      let tn = token.tagName;
      p2.openElements.hasInScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn), p2.activeFormattingElements.clearToLastMarker());
    }
    function brEndTagInBody2(p2) {
      p2._reconstructActiveFormattingElements(), p2._insertFakeElement($2.BR), p2.openElements.pop(), p2.framesetOk = !1;
    }
    function genericEndTagInBody2(p2, token) {
      let tn = token.tagName;
      for (let i = p2.openElements.stackTop; i > 0; i--) {
        let element5 = p2.openElements.items[i];
        if (p2.treeAdapter.getTagName(element5) === tn) {
          p2.openElements.generateImpliedEndTagsWithExclusion(tn), p2.openElements.popUntilElementPopped(element5);
          break;
        }
        if (p2._isSpecialElement(element5))
          break;
      }
    }
    function endTagInBody2(p2, token) {
      let tn = token.tagName;
      switch (tn.length) {
        case 1:
          tn === $2.A || tn === $2.B || tn === $2.I || tn === $2.S || tn === $2.U ? callAdoptionAgency2(p2, token) : tn === $2.P ? pEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 2:
          tn === $2.DL || tn === $2.UL || tn === $2.OL ? addressEndTagInBody2(p2, token) : tn === $2.LI ? liEndTagInBody2(p2, token) : tn === $2.DD || tn === $2.DT ? ddEndTagInBody2(p2, token) : tn === $2.H1 || tn === $2.H2 || tn === $2.H3 || tn === $2.H4 || tn === $2.H5 || tn === $2.H6 ? numberedHeaderEndTagInBody2(p2, token) : tn === $2.BR ? brEndTagInBody2(p2, token) : tn === $2.EM || tn === $2.TT ? callAdoptionAgency2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 3:
          tn === $2.BIG ? callAdoptionAgency2(p2, token) : tn === $2.DIR || tn === $2.DIV || tn === $2.NAV || tn === $2.PRE ? addressEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 4:
          tn === $2.BODY ? bodyEndTagInBody2(p2, token) : tn === $2.HTML ? htmlEndTagInBody2(p2, token) : tn === $2.FORM ? formEndTagInBody2(p2, token) : tn === $2.CODE || tn === $2.FONT || tn === $2.NOBR ? callAdoptionAgency2(p2, token) : tn === $2.MAIN || tn === $2.MENU ? addressEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 5:
          tn === $2.ASIDE ? addressEndTagInBody2(p2, token) : tn === $2.SMALL ? callAdoptionAgency2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 6:
          tn === $2.CENTER || tn === $2.FIGURE || tn === $2.FOOTER || tn === $2.HEADER || tn === $2.HGROUP || tn === $2.DIALOG ? addressEndTagInBody2(p2, token) : tn === $2.APPLET || tn === $2.OBJECT ? appletEndTagInBody2(p2, token) : tn === $2.STRIKE || tn === $2.STRONG ? callAdoptionAgency2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 7:
          tn === $2.ADDRESS || tn === $2.ARTICLE || tn === $2.DETAILS || tn === $2.SECTION || tn === $2.SUMMARY || tn === $2.LISTING ? addressEndTagInBody2(p2, token) : tn === $2.MARQUEE ? appletEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 8:
          tn === $2.FIELDSET ? addressEndTagInBody2(p2, token) : tn === $2.TEMPLATE ? endTagInHead2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        case 10:
          tn === $2.BLOCKQUOTE || tn === $2.FIGCAPTION ? addressEndTagInBody2(p2, token) : genericEndTagInBody2(p2, token);
          break;
        default:
          genericEndTagInBody2(p2, token);
      }
    }
    function eofInBody2(p2, token) {
      p2.tmplInsertionModeStackTop > -1 ? eofInTemplate2(p2, token) : p2.stopped = !0;
    }
    function endTagInText2(p2, token) {
      token.tagName === $2.SCRIPT && (p2.pendingScript = p2.openElements.current), p2.openElements.pop(), p2.insertionMode = p2.originalInsertionMode;
    }
    function eofInText2(p2, token) {
      p2._err(ERR2.eofInElementThatCanContainOnlyText), p2.openElements.pop(), p2.insertionMode = p2.originalInsertionMode, p2._processToken(token);
    }
    function characterInTable2(p2, token) {
      let curTn = p2.openElements.currentTagName;
      curTn === $2.TABLE || curTn === $2.TBODY || curTn === $2.TFOOT || curTn === $2.THEAD || curTn === $2.TR ? (p2.pendingCharacterTokens = [], p2.hasNonWhitespacePendingCharacterToken = !1, p2.originalInsertionMode = p2.insertionMode, p2.insertionMode = IN_TABLE_TEXT_MODE, p2._processToken(token)) : tokenInTable2(p2, token);
    }
    function captionStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2.activeFormattingElements.insertMarker(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_CAPTION_MODE;
    }
    function colgroupStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_COLUMN_GROUP_MODE;
    }
    function colStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2._insertFakeElement($2.COLGROUP), p2.insertionMode = IN_COLUMN_GROUP_MODE, p2._processToken(token);
    }
    function tbodyStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_TABLE_BODY_MODE;
    }
    function tdStartTagInTable2(p2, token) {
      p2.openElements.clearBackToTableContext(), p2._insertFakeElement($2.TBODY), p2.insertionMode = IN_TABLE_BODY_MODE, p2._processToken(token);
    }
    function tableStartTagInTable2(p2, token) {
      p2.openElements.hasInTableScope($2.TABLE) && (p2.openElements.popUntilTagNamePopped($2.TABLE), p2._resetInsertionMode(), p2._processToken(token));
    }
    function inputStartTagInTable2(p2, token) {
      let inputType = Tokenizer2.getTokenAttr(token, ATTRS2.TYPE);
      inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE2 ? p2._appendElement(token, NS2.HTML) : tokenInTable2(p2, token), token.ackSelfClosing = !0;
    }
    function formStartTagInTable2(p2, token) {
      !p2.formElement && p2.openElements.tmplCount === 0 && (p2._insertElement(token, NS2.HTML), p2.formElement = p2.openElements.current, p2.openElements.pop());
    }
    function startTagInTable2(p2, token) {
      let tn = token.tagName;
      switch (tn.length) {
        case 2:
          tn === $2.TD || tn === $2.TH || tn === $2.TR ? tdStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 3:
          tn === $2.COL ? colStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 4:
          tn === $2.FORM ? formStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 5:
          tn === $2.TABLE ? tableStartTagInTable2(p2, token) : tn === $2.STYLE ? startTagInHead2(p2, token) : tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD ? tbodyStartTagInTable2(p2, token) : tn === $2.INPUT ? inputStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 6:
          tn === $2.SCRIPT ? startTagInHead2(p2, token) : tokenInTable2(p2, token);
          break;
        case 7:
          tn === $2.CAPTION ? captionStartTagInTable2(p2, token) : tokenInTable2(p2, token);
          break;
        case 8:
          tn === $2.COLGROUP ? colgroupStartTagInTable2(p2, token) : tn === $2.TEMPLATE ? startTagInHead2(p2, token) : tokenInTable2(p2, token);
          break;
        default:
          tokenInTable2(p2, token);
      }
    }
    function endTagInTable2(p2, token) {
      let tn = token.tagName;
      tn === $2.TABLE ? p2.openElements.hasInTableScope($2.TABLE) && (p2.openElements.popUntilTagNamePopped($2.TABLE), p2._resetInsertionMode()) : tn === $2.TEMPLATE ? endTagInHead2(p2, token) : tn !== $2.BODY && tn !== $2.CAPTION && tn !== $2.COL && tn !== $2.COLGROUP && tn !== $2.HTML && tn !== $2.TBODY && tn !== $2.TD && tn !== $2.TFOOT && tn !== $2.TH && tn !== $2.THEAD && tn !== $2.TR && tokenInTable2(p2, token);
    }
    function tokenInTable2(p2, token) {
      let savedFosterParentingState = p2.fosterParentingEnabled;
      p2.fosterParentingEnabled = !0, p2._processTokenInBodyMode(token), p2.fosterParentingEnabled = savedFosterParentingState;
    }
    function whitespaceCharacterInTableText2(p2, token) {
      p2.pendingCharacterTokens.push(token);
    }
    function characterInTableText2(p2, token) {
      p2.pendingCharacterTokens.push(token), p2.hasNonWhitespacePendingCharacterToken = !0;
    }
    function tokenInTableText2(p2, token) {
      let i = 0;
      if (p2.hasNonWhitespacePendingCharacterToken)
        for (; i < p2.pendingCharacterTokens.length; i++)
          tokenInTable2(p2, p2.pendingCharacterTokens[i]);
      else
        for (; i < p2.pendingCharacterTokens.length; i++)
          p2._insertCharacters(p2.pendingCharacterTokens[i]);
      p2.insertionMode = p2.originalInsertionMode, p2._processToken(token);
    }
    function startTagInCaption2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.COL || tn === $2.COLGROUP || tn === $2.TBODY || tn === $2.TD || tn === $2.TFOOT || tn === $2.TH || tn === $2.THEAD || tn === $2.TR ? p2.openElements.hasInTableScope($2.CAPTION) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped($2.CAPTION), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = IN_TABLE_MODE, p2._processToken(token)) : startTagInBody2(p2, token);
    }
    function endTagInCaption2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.TABLE ? p2.openElements.hasInTableScope($2.CAPTION) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped($2.CAPTION), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = IN_TABLE_MODE, tn === $2.TABLE && p2._processToken(token)) : tn !== $2.BODY && tn !== $2.COL && tn !== $2.COLGROUP && tn !== $2.HTML && tn !== $2.TBODY && tn !== $2.TD && tn !== $2.TFOOT && tn !== $2.TH && tn !== $2.THEAD && tn !== $2.TR && endTagInBody2(p2, token);
    }
    function startTagInColumnGroup2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.COL ? (p2._appendElement(token, NS2.HTML), token.ackSelfClosing = !0) : tn === $2.TEMPLATE ? startTagInHead2(p2, token) : tokenInColumnGroup2(p2, token);
    }
    function endTagInColumnGroup2(p2, token) {
      let tn = token.tagName;
      tn === $2.COLGROUP ? p2.openElements.currentTagName === $2.COLGROUP && (p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE) : tn === $2.TEMPLATE ? endTagInHead2(p2, token) : tn !== $2.COL && tokenInColumnGroup2(p2, token);
    }
    function tokenInColumnGroup2(p2, token) {
      p2.openElements.currentTagName === $2.COLGROUP && (p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE, p2._processToken(token));
    }
    function startTagInTableBody2(p2, token) {
      let tn = token.tagName;
      tn === $2.TR ? (p2.openElements.clearBackToTableBodyContext(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_ROW_MODE) : tn === $2.TH || tn === $2.TD ? (p2.openElements.clearBackToTableBodyContext(), p2._insertFakeElement($2.TR), p2.insertionMode = IN_ROW_MODE, p2._processToken(token)) : tn === $2.CAPTION || tn === $2.COL || tn === $2.COLGROUP || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD ? p2.openElements.hasTableBodyContextInTableScope() && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE, p2._processToken(token)) : startTagInTable2(p2, token);
    }
    function endTagInTableBody2(p2, token) {
      let tn = token.tagName;
      tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD ? p2.openElements.hasInTableScope(tn) && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE) : tn === $2.TABLE ? p2.openElements.hasTableBodyContextInTableScope() && (p2.openElements.clearBackToTableBodyContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_MODE, p2._processToken(token)) : (tn !== $2.BODY && tn !== $2.CAPTION && tn !== $2.COL && tn !== $2.COLGROUP || tn !== $2.HTML && tn !== $2.TD && tn !== $2.TH && tn !== $2.TR) && endTagInTable2(p2, token);
    }
    function startTagInRow2(p2, token) {
      let tn = token.tagName;
      tn === $2.TH || tn === $2.TD ? (p2.openElements.clearBackToTableRowContext(), p2._insertElement(token, NS2.HTML), p2.insertionMode = IN_CELL_MODE, p2.activeFormattingElements.insertMarker()) : tn === $2.CAPTION || tn === $2.COL || tn === $2.COLGROUP || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR ? p2.openElements.hasInTableScope($2.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_BODY_MODE, p2._processToken(token)) : startTagInTable2(p2, token);
    }
    function endTagInRow2(p2, token) {
      let tn = token.tagName;
      tn === $2.TR ? p2.openElements.hasInTableScope($2.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_BODY_MODE) : tn === $2.TABLE ? p2.openElements.hasInTableScope($2.TR) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_BODY_MODE, p2._processToken(token)) : tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD ? (p2.openElements.hasInTableScope(tn) || p2.openElements.hasInTableScope($2.TR)) && (p2.openElements.clearBackToTableRowContext(), p2.openElements.pop(), p2.insertionMode = IN_TABLE_BODY_MODE, p2._processToken(token)) : (tn !== $2.BODY && tn !== $2.CAPTION && tn !== $2.COL && tn !== $2.COLGROUP || tn !== $2.HTML && tn !== $2.TD && tn !== $2.TH) && endTagInTable2(p2, token);
    }
    function startTagInCell2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.COL || tn === $2.COLGROUP || tn === $2.TBODY || tn === $2.TD || tn === $2.TFOOT || tn === $2.TH || tn === $2.THEAD || tn === $2.TR ? (p2.openElements.hasInTableScope($2.TD) || p2.openElements.hasInTableScope($2.TH)) && (p2._closeTableCell(), p2._processToken(token)) : startTagInBody2(p2, token);
    }
    function endTagInCell2(p2, token) {
      let tn = token.tagName;
      tn === $2.TD || tn === $2.TH ? p2.openElements.hasInTableScope(tn) && (p2.openElements.generateImpliedEndTags(), p2.openElements.popUntilTagNamePopped(tn), p2.activeFormattingElements.clearToLastMarker(), p2.insertionMode = IN_ROW_MODE) : tn === $2.TABLE || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR ? p2.openElements.hasInTableScope(tn) && (p2._closeTableCell(), p2._processToken(token)) : tn !== $2.BODY && tn !== $2.CAPTION && tn !== $2.COL && tn !== $2.COLGROUP && tn !== $2.HTML && endTagInBody2(p2, token);
    }
    function startTagInSelect2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.OPTION ? (p2.openElements.currentTagName === $2.OPTION && p2.openElements.pop(), p2._insertElement(token, NS2.HTML)) : tn === $2.OPTGROUP ? (p2.openElements.currentTagName === $2.OPTION && p2.openElements.pop(), p2.openElements.currentTagName === $2.OPTGROUP && p2.openElements.pop(), p2._insertElement(token, NS2.HTML)) : tn === $2.INPUT || tn === $2.KEYGEN || tn === $2.TEXTAREA || tn === $2.SELECT ? p2.openElements.hasInSelectScope($2.SELECT) && (p2.openElements.popUntilTagNamePopped($2.SELECT), p2._resetInsertionMode(), tn !== $2.SELECT && p2._processToken(token)) : (tn === $2.SCRIPT || tn === $2.TEMPLATE) && startTagInHead2(p2, token);
    }
    function endTagInSelect2(p2, token) {
      let tn = token.tagName;
      if (tn === $2.OPTGROUP) {
        let prevOpenElement = p2.openElements.items[p2.openElements.stackTop - 1], prevOpenElementTn = prevOpenElement && p2.treeAdapter.getTagName(prevOpenElement);
        p2.openElements.currentTagName === $2.OPTION && prevOpenElementTn === $2.OPTGROUP && p2.openElements.pop(), p2.openElements.currentTagName === $2.OPTGROUP && p2.openElements.pop();
      } else
        tn === $2.OPTION ? p2.openElements.currentTagName === $2.OPTION && p2.openElements.pop() : tn === $2.SELECT && p2.openElements.hasInSelectScope($2.SELECT) ? (p2.openElements.popUntilTagNamePopped($2.SELECT), p2._resetInsertionMode()) : tn === $2.TEMPLATE && endTagInHead2(p2, token);
    }
    function startTagInSelectInTable2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.TABLE || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR || tn === $2.TD || tn === $2.TH ? (p2.openElements.popUntilTagNamePopped($2.SELECT), p2._resetInsertionMode(), p2._processToken(token)) : startTagInSelect2(p2, token);
    }
    function endTagInSelectInTable2(p2, token) {
      let tn = token.tagName;
      tn === $2.CAPTION || tn === $2.TABLE || tn === $2.TBODY || tn === $2.TFOOT || tn === $2.THEAD || tn === $2.TR || tn === $2.TD || tn === $2.TH ? p2.openElements.hasInTableScope(tn) && (p2.openElements.popUntilTagNamePopped($2.SELECT), p2._resetInsertionMode(), p2._processToken(token)) : endTagInSelect2(p2, token);
    }
    function startTagInTemplate2(p2, token) {
      let tn = token.tagName;
      if (tn === $2.BASE || tn === $2.BASEFONT || tn === $2.BGSOUND || tn === $2.LINK || tn === $2.META || tn === $2.NOFRAMES || tn === $2.SCRIPT || tn === $2.STYLE || tn === $2.TEMPLATE || tn === $2.TITLE)
        startTagInHead2(p2, token);
      else {
        let newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;
        p2._popTmplInsertionMode(), p2._pushTmplInsertionMode(newInsertionMode), p2.insertionMode = newInsertionMode, p2._processToken(token);
      }
    }
    function endTagInTemplate2(p2, token) {
      token.tagName === $2.TEMPLATE && endTagInHead2(p2, token);
    }
    function eofInTemplate2(p2, token) {
      p2.openElements.tmplCount > 0 ? (p2.openElements.popUntilTagNamePopped($2.TEMPLATE), p2.activeFormattingElements.clearToLastMarker(), p2._popTmplInsertionMode(), p2._resetInsertionMode(), p2._processToken(token)) : p2.stopped = !0;
    }
    function startTagAfterBody2(p2, token) {
      token.tagName === $2.HTML ? startTagInBody2(p2, token) : tokenAfterBody2(p2, token);
    }
    function endTagAfterBody2(p2, token) {
      token.tagName === $2.HTML ? p2.fragmentContext || (p2.insertionMode = AFTER_AFTER_BODY_MODE) : tokenAfterBody2(p2, token);
    }
    function tokenAfterBody2(p2, token) {
      p2.insertionMode = IN_BODY_MODE, p2._processToken(token);
    }
    function startTagInFrameset2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.FRAMESET ? p2._insertElement(token, NS2.HTML) : tn === $2.FRAME ? (p2._appendElement(token, NS2.HTML), token.ackSelfClosing = !0) : tn === $2.NOFRAMES && startTagInHead2(p2, token);
    }
    function endTagInFrameset2(p2, token) {
      token.tagName === $2.FRAMESET && !p2.openElements.isRootHtmlElementCurrent() && (p2.openElements.pop(), !p2.fragmentContext && p2.openElements.currentTagName !== $2.FRAMESET && (p2.insertionMode = AFTER_FRAMESET_MODE));
    }
    function startTagAfterFrameset2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.NOFRAMES && startTagInHead2(p2, token);
    }
    function endTagAfterFrameset2(p2, token) {
      token.tagName === $2.HTML && (p2.insertionMode = AFTER_AFTER_FRAMESET_MODE);
    }
    function startTagAfterAfterBody2(p2, token) {
      token.tagName === $2.HTML ? startTagInBody2(p2, token) : tokenAfterAfterBody2(p2, token);
    }
    function tokenAfterAfterBody2(p2, token) {
      p2.insertionMode = IN_BODY_MODE, p2._processToken(token);
    }
    function startTagAfterAfterFrameset2(p2, token) {
      let tn = token.tagName;
      tn === $2.HTML ? startTagInBody2(p2, token) : tn === $2.NOFRAMES && startTagInHead2(p2, token);
    }
    function nullCharacterInForeignContent2(p2, token) {
      token.chars = unicode.REPLACEMENT_CHARACTER, p2._insertCharacters(token);
    }
    function characterInForeignContent2(p2, token) {
      p2._insertCharacters(token), p2.framesetOk = !1;
    }
    function startTagInForeignContent2(p2, token) {
      if (foreignContent.causesExit(token) && !p2.fragmentContext) {
        for (; p2.treeAdapter.getNamespaceURI(p2.openElements.current) !== NS2.HTML && !p2._isIntegrationPoint(p2.openElements.current); )
          p2.openElements.pop();
        p2._processToken(token);
      } else {
        let current = p2._getAdjustedCurrentElement(), currentNs = p2.treeAdapter.getNamespaceURI(current);
        currentNs === NS2.MATHML ? foreignContent.adjustTokenMathMLAttrs(token) : currentNs === NS2.SVG && (foreignContent.adjustTokenSVGTagName(token), foreignContent.adjustTokenSVGAttrs(token)), foreignContent.adjustTokenXMLAttrs(token), token.selfClosing ? p2._appendElement(token, currentNs) : p2._insertElement(token, currentNs), token.ackSelfClosing = !0;
      }
    }
    function endTagInForeignContent2(p2, token) {
      for (let i = p2.openElements.stackTop; i > 0; i--) {
        let element5 = p2.openElements.items[i];
        if (p2.treeAdapter.getNamespaceURI(element5) === NS2.HTML) {
          p2._processToken(token);
          break;
        }
        if (p2.treeAdapter.getTagName(element5).toLowerCase() === token.tagName) {
          p2.openElements.popUntilElementPopped(element5);
          break;
        }
      }
    }
  }
});

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports2, module2) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty, nativeCodeString = "[native code]";
      function classNames() {
        for (var classes = [], i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!!arg) {
            var argType = typeof arg;
            if (argType === "string" || argType === "number")
              classes.push(arg);
            else if (Array.isArray(arg)) {
              if (arg.length) {
                var inner = classNames.apply(null, arg);
                inner && classes.push(inner);
              }
            } else if (argType === "object") {
              if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
                classes.push(arg.toString());
                continue;
              }
              for (var key2 in arg)
                hasOwn.call(arg, key2) && arg[key2] && classes.push(key2);
            }
          }
        }
        return classes.join(" ");
      }
      typeof module2 < "u" && module2.exports ? (classNames.default = classNames, module2.exports = classNames) : typeof define == "function" && typeof define.amd == "object" && define.amd ? define("classnames", [], function() {
        return classNames;
      }) : window.classNames = classNames;
    })();
  }
});

// node_modules/fuse.js/dist/fuse.common.js
var require_fuse_common = __commonJS({
  "node_modules/fuse.js/dist/fuse.common.js"(exports2, module2) {
    "use strict";
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread2(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach(function(key2) {
          _defineProperty(target, key2, source[key2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key2) {
          Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
        });
      }
      return target;
    }
    function _typeof(obj) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), Constructor;
    }
    function _defineProperty(obj, key2, value) {
      return key2 in obj ? Object.defineProperty(obj, key2, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key2] = value, obj;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      Object.defineProperty(subClass, "prototype", {
        value: Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }),
        writable: !1
      }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, _getPrototypeOf(o);
    }
    function _setPrototypeOf(o, p2) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o2, p3) {
        return o2.__proto__ = p3, o2;
      }, _setPrototypeOf(o, p2);
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function")
        return !0;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), !0;
      } catch {
        return !1;
      }
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (typeof call == "object" || typeof call == "function"))
        return call;
      if (call !== void 0)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(self2);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!!o) {
        if (typeof o == "string")
          return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
          return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return _arrayLikeToArray(o, minLen);
      }
    }
    function _arrayLikeToArray(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _nonIterableSpread() {
      throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function isArray(value) {
      return Array.isArray ? Array.isArray(value) : getTag(value) === "[object Array]";
    }
    var INFINITY = 1 / 0;
    function baseToString(value) {
      if (typeof value == "string")
        return value;
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    function toString2(value) {
      return value == null ? "" : baseToString(value);
    }
    function isString(value) {
      return typeof value == "string";
    }
    function isNumber(value) {
      return typeof value == "number";
    }
    function isBoolean(value) {
      return value === !0 || value === !1 || isObjectLike(value) && getTag(value) == "[object Boolean]";
    }
    function isObject(value) {
      return _typeof(value) === "object";
    }
    function isObjectLike(value) {
      return isObject(value) && value !== null;
    }
    function isDefined(value) {
      return value != null;
    }
    function isBlank(value) {
      return !value.trim().length;
    }
    function getTag(value) {
      return value == null ? value === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(value);
    }
    var INCORRECT_INDEX_TYPE = "Incorrect 'index' type", LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = function(key2) {
      return "Invalid value for key ".concat(key2);
    }, PATTERN_LENGTH_TOO_LARGE = function(max) {
      return "Pattern length exceeds max of ".concat(max, ".");
    }, MISSING_KEY_PROPERTY = function(name) {
      return "Missing ".concat(name, " property in key");
    }, INVALID_KEY_WEIGHT_VALUE = function(key2) {
      return "Property 'weight' in key '".concat(key2, "' must be a positive integer");
    }, hasOwn = Object.prototype.hasOwnProperty, KeyStore = /* @__PURE__ */ function() {
      function KeyStore2(keys2) {
        var _this = this;
        _classCallCheck(this, KeyStore2), this._keys = [], this._keyMap = {};
        var totalWeight = 0;
        keys2.forEach(function(key2) {
          var obj = createKey(key2);
          totalWeight += obj.weight, _this._keys.push(obj), _this._keyMap[obj.id] = obj, totalWeight += obj.weight;
        }), this._keys.forEach(function(key2) {
          key2.weight /= totalWeight;
        });
      }
      return _createClass(KeyStore2, [{
        key: "get",
        value: function(keyId) {
          return this._keyMap[keyId];
        }
      }, {
        key: "keys",
        value: function() {
          return this._keys;
        }
      }, {
        key: "toJSON",
        value: function() {
          return JSON.stringify(this._keys);
        }
      }]), KeyStore2;
    }();
    function createKey(key2) {
      var path6 = null, id = null, src = null, weight = 1, getFn = null;
      if (isString(key2) || isArray(key2))
        src = key2, path6 = createKeyPath(key2), id = createKeyId(key2);
      else {
        if (!hasOwn.call(key2, "name"))
          throw new Error(MISSING_KEY_PROPERTY("name"));
        var name = key2.name;
        if (src = name, hasOwn.call(key2, "weight") && (weight = key2.weight, weight <= 0))
          throw new Error(INVALID_KEY_WEIGHT_VALUE(name));
        path6 = createKeyPath(name), id = createKeyId(name), getFn = key2.getFn;
      }
      return {
        path: path6,
        id,
        weight,
        src,
        getFn
      };
    }
    function createKeyPath(key2) {
      return isArray(key2) ? key2 : key2.split(".");
    }
    function createKeyId(key2) {
      return isArray(key2) ? key2.join(".") : key2;
    }
    function get(obj, path6) {
      var list3 = [], arr = !1, deepGet = function deepGet2(obj2, path7, index2) {
        if (!!isDefined(obj2))
          if (!path7[index2])
            list3.push(obj2);
          else {
            var key2 = path7[index2], value = obj2[key2];
            if (!isDefined(value))
              return;
            if (index2 === path7.length - 1 && (isString(value) || isNumber(value) || isBoolean(value)))
              list3.push(toString2(value));
            else if (isArray(value)) {
              arr = !0;
              for (var i = 0, len = value.length; i < len; i += 1)
                deepGet2(value[i], path7, index2 + 1);
            } else
              path7.length && deepGet2(value, path7, index2 + 1);
          }
      };
      return deepGet(obj, isString(path6) ? path6.split(".") : path6, 0), arr ? list3 : list3[0];
    }
    var MatchOptions = {
      includeMatches: !1,
      findAllMatches: !1,
      minMatchCharLength: 1
    }, BasicOptions = {
      isCaseSensitive: !1,
      includeScore: !1,
      keys: [],
      shouldSort: !0,
      sortFn: function(a, b) {
        return a.score === b.score ? a.idx < b.idx ? -1 : 1 : a.score < b.score ? -1 : 1;
      }
    }, FuzzyOptions = {
      location: 0,
      threshold: 0.6,
      distance: 100
    }, AdvancedOptions = {
      useExtendedSearch: !1,
      getFn: get,
      ignoreLocation: !1,
      ignoreFieldNorm: !1,
      fieldNormWeight: 1
    }, Config = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, BasicOptions), MatchOptions), FuzzyOptions), AdvancedOptions), SPACE = /[^ ]+/g;
    function norm() {
      var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, mantissa = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3, cache = /* @__PURE__ */ new Map(), m = Math.pow(10, mantissa);
      return {
        get: function(value) {
          var numTokens = value.match(SPACE).length;
          if (cache.has(numTokens))
            return cache.get(numTokens);
          var norm2 = 1 / Math.pow(numTokens, 0.5 * weight), n = parseFloat(Math.round(norm2 * m) / m);
          return cache.set(numTokens, n), n;
        },
        clear: function() {
          cache.clear();
        }
      };
    }
    var FuseIndex = /* @__PURE__ */ function() {
      function FuseIndex2() {
        var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$getFn = _ref.getFn, getFn = _ref$getFn === void 0 ? Config.getFn : _ref$getFn, _ref$fieldNormWeight = _ref.fieldNormWeight, fieldNormWeight = _ref$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref$fieldNormWeight;
        _classCallCheck(this, FuseIndex2), this.norm = norm(fieldNormWeight, 3), this.getFn = getFn, this.isCreated = !1, this.setIndexRecords();
      }
      return _createClass(FuseIndex2, [{
        key: "setSources",
        value: function() {
          var docs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
          this.docs = docs;
        }
      }, {
        key: "setIndexRecords",
        value: function() {
          var records = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
          this.records = records;
        }
      }, {
        key: "setKeys",
        value: function() {
          var _this = this, keys2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
          this.keys = keys2, this._keysMap = {}, keys2.forEach(function(key2, idx) {
            _this._keysMap[key2.id] = idx;
          });
        }
      }, {
        key: "create",
        value: function() {
          var _this2 = this;
          this.isCreated || !this.docs.length || (this.isCreated = !0, isString(this.docs[0]) ? this.docs.forEach(function(doc, docIndex) {
            _this2._addString(doc, docIndex);
          }) : this.docs.forEach(function(doc, docIndex) {
            _this2._addObject(doc, docIndex);
          }), this.norm.clear());
        }
      }, {
        key: "add",
        value: function(doc) {
          var idx = this.size();
          isString(doc) ? this._addString(doc, idx) : this._addObject(doc, idx);
        }
      }, {
        key: "removeAt",
        value: function(idx) {
          this.records.splice(idx, 1);
          for (var i = idx, len = this.size(); i < len; i += 1)
            this.records[i].i -= 1;
        }
      }, {
        key: "getValueForItemAtKeyId",
        value: function(item, keyId) {
          return item[this._keysMap[keyId]];
        }
      }, {
        key: "size",
        value: function() {
          return this.records.length;
        }
      }, {
        key: "_addString",
        value: function(doc, docIndex) {
          if (!(!isDefined(doc) || isBlank(doc))) {
            var record = {
              v: doc,
              i: docIndex,
              n: this.norm.get(doc)
            };
            this.records.push(record);
          }
        }
      }, {
        key: "_addObject",
        value: function(doc, docIndex) {
          var _this3 = this, record = {
            i: docIndex,
            $: {}
          };
          this.keys.forEach(function(key2, keyIndex) {
            var value = key2.getFn ? key2.getFn(doc) : _this3.getFn(doc, key2.path);
            if (!!isDefined(value)) {
              if (isArray(value))
                (function() {
                  for (var subRecords = [], stack = [{
                    nestedArrIndex: -1,
                    value
                  }]; stack.length; ) {
                    var _stack$pop = stack.pop(), nestedArrIndex = _stack$pop.nestedArrIndex, _value = _stack$pop.value;
                    if (!!isDefined(_value))
                      if (isString(_value) && !isBlank(_value)) {
                        var subRecord2 = {
                          v: _value,
                          i: nestedArrIndex,
                          n: _this3.norm.get(_value)
                        };
                        subRecords.push(subRecord2);
                      } else
                        isArray(_value) && _value.forEach(function(item, k) {
                          stack.push({
                            nestedArrIndex: k,
                            value: item
                          });
                        });
                  }
                  record.$[keyIndex] = subRecords;
                })();
              else if (isString(value) && !isBlank(value)) {
                var subRecord = {
                  v: value,
                  n: _this3.norm.get(value)
                };
                record.$[keyIndex] = subRecord;
              }
            }
          }), this.records.push(record);
        }
      }, {
        key: "toJSON",
        value: function() {
          return {
            keys: this.keys,
            records: this.records
          };
        }
      }]), FuseIndex2;
    }();
    function createIndex(keys2, docs) {
      var _ref2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _ref2$getFn = _ref2.getFn, getFn = _ref2$getFn === void 0 ? Config.getFn : _ref2$getFn, _ref2$fieldNormWeight = _ref2.fieldNormWeight, fieldNormWeight = _ref2$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref2$fieldNormWeight, myIndex = new FuseIndex({
        getFn,
        fieldNormWeight
      });
      return myIndex.setKeys(keys2.map(createKey)), myIndex.setSources(docs), myIndex.create(), myIndex;
    }
    function parseIndex(data) {
      var _ref3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref3$getFn = _ref3.getFn, getFn = _ref3$getFn === void 0 ? Config.getFn : _ref3$getFn, _ref3$fieldNormWeight = _ref3.fieldNormWeight, fieldNormWeight = _ref3$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref3$fieldNormWeight, keys2 = data.keys, records = data.records, myIndex = new FuseIndex({
        getFn,
        fieldNormWeight
      });
      return myIndex.setKeys(keys2), myIndex.setIndexRecords(records), myIndex;
    }
    function computeScore$1(pattern) {
      var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$errors = _ref.errors, errors2 = _ref$errors === void 0 ? 0 : _ref$errors, _ref$currentLocation = _ref.currentLocation, currentLocation = _ref$currentLocation === void 0 ? 0 : _ref$currentLocation, _ref$expectedLocation = _ref.expectedLocation, expectedLocation = _ref$expectedLocation === void 0 ? 0 : _ref$expectedLocation, _ref$distance = _ref.distance, distance = _ref$distance === void 0 ? Config.distance : _ref$distance, _ref$ignoreLocation = _ref.ignoreLocation, ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation, accuracy = errors2 / pattern.length;
      if (ignoreLocation)
        return accuracy;
      var proximity = Math.abs(expectedLocation - currentLocation);
      return distance ? accuracy + proximity / distance : proximity ? 1 : accuracy;
    }
    function convertMaskToIndices() {
      for (var matchmask = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], minMatchCharLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Config.minMatchCharLength, indices = [], start = -1, end = -1, i = 0, len = matchmask.length; i < len; i += 1) {
        var match = matchmask[i];
        match && start === -1 ? start = i : !match && start !== -1 && (end = i - 1, end - start + 1 >= minMatchCharLength && indices.push([start, end]), start = -1);
      }
      return matchmask[i - 1] && i - start >= minMatchCharLength && indices.push([start, i - 1]), indices;
    }
    var MAX_BITS = 32;
    function search3(text7, pattern, patternAlphabet) {
      var _ref = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, _ref$location = _ref.location, location2 = _ref$location === void 0 ? Config.location : _ref$location, _ref$distance = _ref.distance, distance = _ref$distance === void 0 ? Config.distance : _ref$distance, _ref$threshold = _ref.threshold, threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold, _ref$findAllMatches = _ref.findAllMatches, findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches, _ref$minMatchCharLeng = _ref.minMatchCharLength, minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng, _ref$includeMatches = _ref.includeMatches, includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches, _ref$ignoreLocation = _ref.ignoreLocation, ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;
      if (pattern.length > MAX_BITS)
        throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));
      for (var patternLen = pattern.length, textLen = text7.length, expectedLocation = Math.max(0, Math.min(location2, textLen)), currentThreshold = threshold, bestLocation = expectedLocation, computeMatches = minMatchCharLength > 1 || includeMatches, matchMask = computeMatches ? Array(textLen) : [], index2; (index2 = text7.indexOf(pattern, bestLocation)) > -1; ) {
        var score = computeScore$1(pattern, {
          currentLocation: index2,
          expectedLocation,
          distance,
          ignoreLocation
        });
        if (currentThreshold = Math.min(score, currentThreshold), bestLocation = index2 + patternLen, computeMatches)
          for (var i = 0; i < patternLen; )
            matchMask[index2 + i] = 1, i += 1;
      }
      bestLocation = -1;
      for (var lastBitArr = [], finalScore = 1, binMax = patternLen + textLen, mask = 1 << patternLen - 1, _i = 0; _i < patternLen; _i += 1) {
        for (var binMin = 0, binMid = binMax; binMin < binMid; ) {
          var _score2 = computeScore$1(pattern, {
            errors: _i,
            currentLocation: expectedLocation + binMid,
            expectedLocation,
            distance,
            ignoreLocation
          });
          _score2 <= currentThreshold ? binMin = binMid : binMax = binMid, binMid = Math.floor((binMax - binMin) / 2 + binMin);
        }
        binMax = binMid;
        var start = Math.max(1, expectedLocation - binMid + 1), finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen, bitArr = Array(finish + 2);
        bitArr[finish + 1] = (1 << _i) - 1;
        for (var j = finish; j >= start; j -= 1) {
          var currentLocation = j - 1, charMatch = patternAlphabet[text7.charAt(currentLocation)];
          if (computeMatches && (matchMask[currentLocation] = +!!charMatch), bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch, _i && (bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1]), bitArr[j] & mask && (finalScore = computeScore$1(pattern, {
            errors: _i,
            currentLocation,
            expectedLocation,
            distance,
            ignoreLocation
          }), finalScore <= currentThreshold)) {
            if (currentThreshold = finalScore, bestLocation = currentLocation, bestLocation <= expectedLocation)
              break;
            start = Math.max(1, 2 * expectedLocation - bestLocation);
          }
        }
        var _score = computeScore$1(pattern, {
          errors: _i + 1,
          currentLocation: expectedLocation,
          expectedLocation,
          distance,
          ignoreLocation
        });
        if (_score > currentThreshold)
          break;
        lastBitArr = bitArr;
      }
      var result = {
        isMatch: bestLocation >= 0,
        score: Math.max(1e-3, finalScore)
      };
      if (computeMatches) {
        var indices = convertMaskToIndices(matchMask, minMatchCharLength);
        indices.length ? includeMatches && (result.indices = indices) : result.isMatch = !1;
      }
      return result;
    }
    function createPatternAlphabet(pattern) {
      for (var mask = {}, i = 0, len = pattern.length; i < len; i += 1) {
        var _char = pattern.charAt(i);
        mask[_char] = (mask[_char] || 0) | 1 << len - i - 1;
      }
      return mask;
    }
    var BitapSearch = /* @__PURE__ */ function() {
      function BitapSearch2(pattern) {
        var _this = this, _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$location = _ref.location, location2 = _ref$location === void 0 ? Config.location : _ref$location, _ref$threshold = _ref.threshold, threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold, _ref$distance = _ref.distance, distance = _ref$distance === void 0 ? Config.distance : _ref$distance, _ref$includeMatches = _ref.includeMatches, includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches, _ref$findAllMatches = _ref.findAllMatches, findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches, _ref$minMatchCharLeng = _ref.minMatchCharLength, minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng, _ref$isCaseSensitive = _ref.isCaseSensitive, isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive, _ref$ignoreLocation = _ref.ignoreLocation, ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;
        if (_classCallCheck(this, BitapSearch2), this.options = {
          location: location2,
          threshold,
          distance,
          includeMatches,
          findAllMatches,
          minMatchCharLength,
          isCaseSensitive,
          ignoreLocation
        }, this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase(), this.chunks = [], !!this.pattern.length) {
          var addChunk = function(pattern2, startIndex2) {
            _this.chunks.push({
              pattern: pattern2,
              alphabet: createPatternAlphabet(pattern2),
              startIndex: startIndex2
            });
          }, len = this.pattern.length;
          if (len > MAX_BITS) {
            for (var i = 0, remainder = len % MAX_BITS, end = len - remainder; i < end; )
              addChunk(this.pattern.substr(i, MAX_BITS), i), i += MAX_BITS;
            if (remainder) {
              var startIndex = len - MAX_BITS;
              addChunk(this.pattern.substr(startIndex), startIndex);
            }
          } else
            addChunk(this.pattern, 0);
        }
      }
      return _createClass(BitapSearch2, [{
        key: "searchIn",
        value: function(text7) {
          var _this$options = this.options, isCaseSensitive = _this$options.isCaseSensitive, includeMatches = _this$options.includeMatches;
          if (isCaseSensitive || (text7 = text7.toLowerCase()), this.pattern === text7) {
            var _result = {
              isMatch: !0,
              score: 0
            };
            return includeMatches && (_result.indices = [[0, text7.length - 1]]), _result;
          }
          var _this$options2 = this.options, location2 = _this$options2.location, distance = _this$options2.distance, threshold = _this$options2.threshold, findAllMatches = _this$options2.findAllMatches, minMatchCharLength = _this$options2.minMatchCharLength, ignoreLocation = _this$options2.ignoreLocation, allIndices = [], totalScore = 0, hasMatches = !1;
          this.chunks.forEach(function(_ref2) {
            var pattern = _ref2.pattern, alphabet = _ref2.alphabet, startIndex = _ref2.startIndex, _search = search3(text7, pattern, alphabet, {
              location: location2 + startIndex,
              distance,
              threshold,
              findAllMatches,
              minMatchCharLength,
              includeMatches,
              ignoreLocation
            }), isMatch = _search.isMatch, score = _search.score, indices = _search.indices;
            isMatch && (hasMatches = !0), totalScore += score, isMatch && indices && (allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices)));
          });
          var result = {
            isMatch: hasMatches,
            score: hasMatches ? totalScore / this.chunks.length : 1
          };
          return hasMatches && includeMatches && (result.indices = allIndices), result;
        }
      }]), BitapSearch2;
    }(), BaseMatch = /* @__PURE__ */ function() {
      function BaseMatch2(pattern) {
        _classCallCheck(this, BaseMatch2), this.pattern = pattern;
      }
      return _createClass(BaseMatch2, [{
        key: "search",
        value: function() {
        }
      }], [{
        key: "isMultiMatch",
        value: function(pattern) {
          return getMatch(pattern, this.multiRegex);
        }
      }, {
        key: "isSingleMatch",
        value: function(pattern) {
          return getMatch(pattern, this.singleRegex);
        }
      }]), BaseMatch2;
    }();
    function getMatch(pattern, exp) {
      var matches = pattern.match(exp);
      return matches ? matches[1] : null;
    }
    var ExactMatch = /* @__PURE__ */ function(_BaseMatch) {
      _inherits(ExactMatch2, _BaseMatch);
      var _super = _createSuper(ExactMatch2);
      function ExactMatch2(pattern) {
        return _classCallCheck(this, ExactMatch2), _super.call(this, pattern);
      }
      return _createClass(ExactMatch2, [{
        key: "search",
        value: function(text7) {
          var isMatch = text7 === this.pattern;
          return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [0, this.pattern.length - 1]
          };
        }
      }], [{
        key: "type",
        get: function() {
          return "exact";
        }
      }, {
        key: "multiRegex",
        get: function() {
          return /^="(.*)"$/;
        }
      }, {
        key: "singleRegex",
        get: function() {
          return /^=(.*)$/;
        }
      }]), ExactMatch2;
    }(BaseMatch), InverseExactMatch = /* @__PURE__ */ function(_BaseMatch) {
      _inherits(InverseExactMatch2, _BaseMatch);
      var _super = _createSuper(InverseExactMatch2);
      function InverseExactMatch2(pattern) {
        return _classCallCheck(this, InverseExactMatch2), _super.call(this, pattern);
      }
      return _createClass(InverseExactMatch2, [{
        key: "search",
        value: function(text7) {
          var index2 = text7.indexOf(this.pattern), isMatch = index2 === -1;
          return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [0, text7.length - 1]
          };
        }
      }], [{
        key: "type",
        get: function() {
          return "inverse-exact";
        }
      }, {
        key: "multiRegex",
        get: function() {
          return /^!"(.*)"$/;
        }
      }, {
        key: "singleRegex",
        get: function() {
          return /^!(.*)$/;
        }
      }]), InverseExactMatch2;
    }(BaseMatch), PrefixExactMatch = /* @__PURE__ */ function(_BaseMatch) {
      _inherits(PrefixExactMatch2, _BaseMatch);
      var _super = _createSuper(PrefixExactMatch2);
      function PrefixExactMatch2(pattern) {
        return _classCallCheck(this, PrefixExactMatch2), _super.call(this, pattern);
      }
      return _createClass(PrefixExactMatch2, [{
        key: "search",
        value: function(text7) {
          var isMatch = text7.startsWith(this.pattern);
          return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [0, this.pattern.length - 1]
          };
        }
      }], [{
        key: "type",
        get: function() {
          return "prefix-exact";
        }
      }, {
        key: "multiRegex",
        get: function() {
          return /^\^"(.*)"$/;
        }
      }, {
        key: "singleRegex",
        get: function() {
          return /^\^(.*)$/;
        }
      }]), PrefixExactMatch2;
    }(BaseMatch), InversePrefixExactMatch = /* @__PURE__ */ function(_BaseMatch) {
      _inherits(InversePrefixExactMatch2, _BaseMatch);
      var _super = _createSuper(InversePrefixExactMatch2);
      function InversePrefixExactMatch2(pattern) {
        return _classCallCheck(this, InversePrefixExactMatch2), _super.call(this, pattern);
      }
      return _createClass(InversePrefixExactMatch2, [{
        key: "search",
        value: function(text7) {
          var isMatch = !text7.startsWith(this.pattern);
          return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [0, text7.length - 1]
          };
        }
      }], [{
        key: "type",
        get: function() {
          return "inverse-prefix-exact";
        }
      }, {
        key: "multiRegex",
        get: function() {
          return /^!\^"(.*)"$/;
        }
      }, {
        key: "singleRegex",
        get: function() {
          return /^!\^(.*)$/;
        }
      }]), InversePrefixExactMatch2;
    }(BaseMatch), SuffixExactMatch = /* @__PURE__ */ function(_BaseMatch) {
      _inherits(SuffixExactMatch2, _BaseMatch);
      var _super = _createSuper(SuffixExactMatch2);
      function SuffixExactMatch2(pattern) {
        return _classCallCheck(this, SuffixExactMatch2), _super.call(this, pattern);
      }
      return _createClass(SuffixExactMatch2, [{
        key: "search",
        value: function(text7) {
          var isMatch = text7.endsWith(this.pattern);
          return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [text7.length - this.pattern.length, text7.length - 1]
          };
        }
      }], [{
        key: "type",
        get: function() {
          return "suffix-exact";
        }
      }, {
        key: "multiRegex",
        get: function() {
          return /^"(.*)"\$$/;
        }
      }, {
        key: "singleRegex",
        get: function() {
          return /^(.*)\$$/;
        }
      }]), SuffixExactMatch2;
    }(BaseMatch), InverseSuffixExactMatch = /* @__PURE__ */ function(_BaseMatch) {
      _inherits(InverseSuffixExactMatch2, _BaseMatch);
      var _super = _createSuper(InverseSuffixExactMatch2);
      function InverseSuffixExactMatch2(pattern) {
        return _classCallCheck(this, InverseSuffixExactMatch2), _super.call(this, pattern);
      }
      return _createClass(InverseSuffixExactMatch2, [{
        key: "search",
        value: function(text7) {
          var isMatch = !text7.endsWith(this.pattern);
          return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [0, text7.length - 1]
          };
        }
      }], [{
        key: "type",
        get: function() {
          return "inverse-suffix-exact";
        }
      }, {
        key: "multiRegex",
        get: function() {
          return /^!"(.*)"\$$/;
        }
      }, {
        key: "singleRegex",
        get: function() {
          return /^!(.*)\$$/;
        }
      }]), InverseSuffixExactMatch2;
    }(BaseMatch), FuzzyMatch = /* @__PURE__ */ function(_BaseMatch) {
      _inherits(FuzzyMatch2, _BaseMatch);
      var _super = _createSuper(FuzzyMatch2);
      function FuzzyMatch2(pattern) {
        var _this, _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$location = _ref.location, location2 = _ref$location === void 0 ? Config.location : _ref$location, _ref$threshold = _ref.threshold, threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold, _ref$distance = _ref.distance, distance = _ref$distance === void 0 ? Config.distance : _ref$distance, _ref$includeMatches = _ref.includeMatches, includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches, _ref$findAllMatches = _ref.findAllMatches, findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches, _ref$minMatchCharLeng = _ref.minMatchCharLength, minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng, _ref$isCaseSensitive = _ref.isCaseSensitive, isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive, _ref$ignoreLocation = _ref.ignoreLocation, ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;
        return _classCallCheck(this, FuzzyMatch2), _this = _super.call(this, pattern), _this._bitapSearch = new BitapSearch(pattern, {
          location: location2,
          threshold,
          distance,
          includeMatches,
          findAllMatches,
          minMatchCharLength,
          isCaseSensitive,
          ignoreLocation
        }), _this;
      }
      return _createClass(FuzzyMatch2, [{
        key: "search",
        value: function(text7) {
          return this._bitapSearch.searchIn(text7);
        }
      }], [{
        key: "type",
        get: function() {
          return "fuzzy";
        }
      }, {
        key: "multiRegex",
        get: function() {
          return /^"(.*)"$/;
        }
      }, {
        key: "singleRegex",
        get: function() {
          return /^(.*)$/;
        }
      }]), FuzzyMatch2;
    }(BaseMatch), IncludeMatch = /* @__PURE__ */ function(_BaseMatch) {
      _inherits(IncludeMatch2, _BaseMatch);
      var _super = _createSuper(IncludeMatch2);
      function IncludeMatch2(pattern) {
        return _classCallCheck(this, IncludeMatch2), _super.call(this, pattern);
      }
      return _createClass(IncludeMatch2, [{
        key: "search",
        value: function(text7) {
          for (var location2 = 0, index2, indices = [], patternLen = this.pattern.length; (index2 = text7.indexOf(this.pattern, location2)) > -1; )
            location2 = index2 + patternLen, indices.push([index2, location2 - 1]);
          var isMatch = !!indices.length;
          return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices
          };
        }
      }], [{
        key: "type",
        get: function() {
          return "include";
        }
      }, {
        key: "multiRegex",
        get: function() {
          return /^'"(.*)"$/;
        }
      }, {
        key: "singleRegex",
        get: function() {
          return /^'(.*)$/;
        }
      }]), IncludeMatch2;
    }(BaseMatch), searchers = [ExactMatch, IncludeMatch, PrefixExactMatch, InversePrefixExactMatch, InverseSuffixExactMatch, SuffixExactMatch, InverseExactMatch, FuzzyMatch], searchersLen = searchers.length, SPACE_RE = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/, OR_TOKEN = "|";
    function parseQuery(pattern) {
      var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return pattern.split(OR_TOKEN).map(function(item) {
        for (var query = item.trim().split(SPACE_RE).filter(function(item2) {
          return item2 && !!item2.trim();
        }), results = [], i = 0, len = query.length; i < len; i += 1) {
          for (var queryItem = query[i], found = !1, idx = -1; !found && ++idx < searchersLen; ) {
            var searcher = searchers[idx], token = searcher.isMultiMatch(queryItem);
            token && (results.push(new searcher(token, options2)), found = !0);
          }
          if (!found)
            for (idx = -1; ++idx < searchersLen; ) {
              var _searcher = searchers[idx], _token = _searcher.isSingleMatch(queryItem);
              if (_token) {
                results.push(new _searcher(_token, options2));
                break;
              }
            }
        }
        return results;
      });
    }
    var MultiMatchSet = /* @__PURE__ */ new Set([FuzzyMatch.type, IncludeMatch.type]), ExtendedSearch = /* @__PURE__ */ function() {
      function ExtendedSearch2(pattern) {
        var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$isCaseSensitive = _ref.isCaseSensitive, isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive, _ref$includeMatches = _ref.includeMatches, includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches, _ref$minMatchCharLeng = _ref.minMatchCharLength, minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng, _ref$ignoreLocation = _ref.ignoreLocation, ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation, _ref$findAllMatches = _ref.findAllMatches, findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches, _ref$location = _ref.location, location2 = _ref$location === void 0 ? Config.location : _ref$location, _ref$threshold = _ref.threshold, threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold, _ref$distance = _ref.distance, distance = _ref$distance === void 0 ? Config.distance : _ref$distance;
        _classCallCheck(this, ExtendedSearch2), this.query = null, this.options = {
          isCaseSensitive,
          includeMatches,
          minMatchCharLength,
          findAllMatches,
          ignoreLocation,
          location: location2,
          threshold,
          distance
        }, this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase(), this.query = parseQuery(this.pattern, this.options);
      }
      return _createClass(ExtendedSearch2, [{
        key: "searchIn",
        value: function(text7) {
          var query = this.query;
          if (!query)
            return {
              isMatch: !1,
              score: 1
            };
          var _this$options = this.options, includeMatches = _this$options.includeMatches, isCaseSensitive = _this$options.isCaseSensitive;
          text7 = isCaseSensitive ? text7 : text7.toLowerCase();
          for (var numMatches = 0, allIndices = [], totalScore = 0, i = 0, qLen = query.length; i < qLen; i += 1) {
            var searchers2 = query[i];
            allIndices.length = 0, numMatches = 0;
            for (var j = 0, pLen = searchers2.length; j < pLen; j += 1) {
              var searcher = searchers2[j], _searcher$search = searcher.search(text7), isMatch = _searcher$search.isMatch, indices = _searcher$search.indices, score = _searcher$search.score;
              if (isMatch) {
                if (numMatches += 1, totalScore += score, includeMatches) {
                  var type = searcher.constructor.type;
                  MultiMatchSet.has(type) ? allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices)) : allIndices.push(indices);
                }
              } else {
                totalScore = 0, numMatches = 0, allIndices.length = 0;
                break;
              }
            }
            if (numMatches) {
              var result = {
                isMatch: !0,
                score: totalScore / numMatches
              };
              return includeMatches && (result.indices = allIndices), result;
            }
          }
          return {
            isMatch: !1,
            score: 1
          };
        }
      }], [{
        key: "condition",
        value: function(_, options2) {
          return options2.useExtendedSearch;
        }
      }]), ExtendedSearch2;
    }(), registeredSearchers = [];
    function register() {
      registeredSearchers.push.apply(registeredSearchers, arguments);
    }
    function createSearcher(pattern, options2) {
      for (var i = 0, len = registeredSearchers.length; i < len; i += 1) {
        var searcherClass = registeredSearchers[i];
        if (searcherClass.condition(pattern, options2))
          return new searcherClass(pattern, options2);
      }
      return new BitapSearch(pattern, options2);
    }
    var LogicalOperator = {
      AND: "$and",
      OR: "$or"
    }, KeyType = {
      PATH: "$path",
      PATTERN: "$val"
    }, isExpression = function(query) {
      return !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);
    }, isPath = function(query) {
      return !!query[KeyType.PATH];
    }, isLeaf = function(query) {
      return !isArray(query) && isObject(query) && !isExpression(query);
    }, convertToExplicit = function(query) {
      return _defineProperty({}, LogicalOperator.AND, Object.keys(query).map(function(key2) {
        return _defineProperty({}, key2, query[key2]);
      }));
    };
    function parse6(query, options2) {
      var _ref3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _ref3$auto = _ref3.auto, auto = _ref3$auto === void 0 ? !0 : _ref3$auto, next = function next2(query2) {
        var keys2 = Object.keys(query2), isQueryPath = isPath(query2);
        if (!isQueryPath && keys2.length > 1 && !isExpression(query2))
          return next2(convertToExplicit(query2));
        if (isLeaf(query2)) {
          var key2 = isQueryPath ? query2[KeyType.PATH] : keys2[0], pattern = isQueryPath ? query2[KeyType.PATTERN] : query2[key2];
          if (!isString(pattern))
            throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key2));
          var obj = {
            keyId: createKeyId(key2),
            pattern
          };
          return auto && (obj.searcher = createSearcher(pattern, options2)), obj;
        }
        var node2 = {
          children: [],
          operator: keys2[0]
        };
        return keys2.forEach(function(key3) {
          var value = query2[key3];
          isArray(value) && value.forEach(function(item) {
            node2.children.push(next2(item));
          });
        }), node2;
      };
      return isExpression(query) || (query = convertToExplicit(query)), next(query);
    }
    function computeScore(results, _ref) {
      var _ref$ignoreFieldNorm = _ref.ignoreFieldNorm, ignoreFieldNorm = _ref$ignoreFieldNorm === void 0 ? Config.ignoreFieldNorm : _ref$ignoreFieldNorm;
      results.forEach(function(result) {
        var totalScore = 1;
        result.matches.forEach(function(_ref2) {
          var key2 = _ref2.key, norm2 = _ref2.norm, score = _ref2.score, weight = key2 ? key2.weight : null;
          totalScore *= Math.pow(score === 0 && weight ? Number.EPSILON : score, (weight || 1) * (ignoreFieldNorm ? 1 : norm2));
        }), result.score = totalScore;
      });
    }
    function transformMatches(result, data) {
      var matches = result.matches;
      data.matches = [], isDefined(matches) && matches.forEach(function(match) {
        if (!(!isDefined(match.indices) || !match.indices.length)) {
          var indices = match.indices, value = match.value, obj = {
            indices,
            value
          };
          match.key && (obj.key = match.key.src), match.idx > -1 && (obj.refIndex = match.idx), data.matches.push(obj);
        }
      });
    }
    function transformScore(result, data) {
      data.score = result.score;
    }
    function format2(results, docs) {
      var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _ref$includeMatches = _ref.includeMatches, includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches, _ref$includeScore = _ref.includeScore, includeScore = _ref$includeScore === void 0 ? Config.includeScore : _ref$includeScore, transformers = [];
      return includeMatches && transformers.push(transformMatches), includeScore && transformers.push(transformScore), results.map(function(result) {
        var idx = result.idx, data = {
          item: docs[idx],
          refIndex: idx
        };
        return transformers.length && transformers.forEach(function(transformer) {
          transformer(result, data);
        }), data;
      });
    }
    var Fuse$1 = /* @__PURE__ */ function() {
      function Fuse3(docs) {
        var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, index2 = arguments.length > 2 ? arguments[2] : void 0;
        _classCallCheck(this, Fuse3), this.options = _objectSpread2(_objectSpread2({}, Config), options2), this.options.useExtendedSearch, this._keyStore = new KeyStore(this.options.keys), this.setCollection(docs, index2);
      }
      return _createClass(Fuse3, [{
        key: "setCollection",
        value: function(docs, index2) {
          if (this._docs = docs, index2 && !(index2 instanceof FuseIndex))
            throw new Error(INCORRECT_INDEX_TYPE);
          this._myIndex = index2 || createIndex(this.options.keys, this._docs, {
            getFn: this.options.getFn,
            fieldNormWeight: this.options.fieldNormWeight
          });
        }
      }, {
        key: "add",
        value: function(doc) {
          !isDefined(doc) || (this._docs.push(doc), this._myIndex.add(doc));
        }
      }, {
        key: "remove",
        value: function() {
          for (var predicate = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function() {
            return !1;
          }, results = [], i = 0, len = this._docs.length; i < len; i += 1) {
            var doc = this._docs[i];
            predicate(doc, i) && (this.removeAt(i), i -= 1, len -= 1, results.push(doc));
          }
          return results;
        }
      }, {
        key: "removeAt",
        value: function(idx) {
          this._docs.splice(idx, 1), this._myIndex.removeAt(idx);
        }
      }, {
        key: "getIndex",
        value: function() {
          return this._myIndex;
        }
      }, {
        key: "search",
        value: function(query) {
          var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$limit = _ref.limit, limit = _ref$limit === void 0 ? -1 : _ref$limit, _this$options = this.options, includeMatches = _this$options.includeMatches, includeScore = _this$options.includeScore, shouldSort = _this$options.shouldSort, sortFn = _this$options.sortFn, ignoreFieldNorm = _this$options.ignoreFieldNorm, results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);
          return computeScore(results, {
            ignoreFieldNorm
          }), shouldSort && results.sort(sortFn), isNumber(limit) && limit > -1 && (results = results.slice(0, limit)), format2(results, this._docs, {
            includeMatches,
            includeScore
          });
        }
      }, {
        key: "_searchStringList",
        value: function(query) {
          var searcher = createSearcher(query, this.options), records = this._myIndex.records, results = [];
          return records.forEach(function(_ref2) {
            var text7 = _ref2.v, idx = _ref2.i, norm2 = _ref2.n;
            if (!!isDefined(text7)) {
              var _searcher$searchIn = searcher.searchIn(text7), isMatch = _searcher$searchIn.isMatch, score = _searcher$searchIn.score, indices = _searcher$searchIn.indices;
              isMatch && results.push({
                item: text7,
                idx,
                matches: [{
                  score,
                  value: text7,
                  norm: norm2,
                  indices
                }]
              });
            }
          }), results;
        }
      }, {
        key: "_searchLogical",
        value: function(query) {
          var _this = this, expression = parse6(query, this.options), evaluate = function evaluate2(node2, item, idx) {
            if (!node2.children) {
              var keyId = node2.keyId, searcher = node2.searcher, matches = _this._findMatches({
                key: _this._keyStore.get(keyId),
                value: _this._myIndex.getValueForItemAtKeyId(item, keyId),
                searcher
              });
              return matches && matches.length ? [{
                idx,
                item,
                matches
              }] : [];
            }
            for (var res = [], i = 0, len = node2.children.length; i < len; i += 1) {
              var child = node2.children[i], result = evaluate2(child, item, idx);
              if (result.length)
                res.push.apply(res, _toConsumableArray(result));
              else if (node2.operator === LogicalOperator.AND)
                return [];
            }
            return res;
          }, records = this._myIndex.records, resultMap = {}, results = [];
          return records.forEach(function(_ref3) {
            var item = _ref3.$, idx = _ref3.i;
            if (isDefined(item)) {
              var expResults = evaluate(expression, item, idx);
              expResults.length && (resultMap[idx] || (resultMap[idx] = {
                idx,
                item,
                matches: []
              }, results.push(resultMap[idx])), expResults.forEach(function(_ref4) {
                var _resultMap$idx$matche, matches = _ref4.matches;
                (_resultMap$idx$matche = resultMap[idx].matches).push.apply(_resultMap$idx$matche, _toConsumableArray(matches));
              }));
            }
          }), results;
        }
      }, {
        key: "_searchObjectList",
        value: function(query) {
          var _this2 = this, searcher = createSearcher(query, this.options), _this$_myIndex = this._myIndex, keys2 = _this$_myIndex.keys, records = _this$_myIndex.records, results = [];
          return records.forEach(function(_ref5) {
            var item = _ref5.$, idx = _ref5.i;
            if (!!isDefined(item)) {
              var matches = [];
              keys2.forEach(function(key2, keyIndex) {
                matches.push.apply(matches, _toConsumableArray(_this2._findMatches({
                  key: key2,
                  value: item[keyIndex],
                  searcher
                })));
              }), matches.length && results.push({
                idx,
                item,
                matches
              });
            }
          }), results;
        }
      }, {
        key: "_findMatches",
        value: function(_ref6) {
          var key2 = _ref6.key, value = _ref6.value, searcher = _ref6.searcher;
          if (!isDefined(value))
            return [];
          var matches = [];
          if (isArray(value))
            value.forEach(function(_ref7) {
              var text8 = _ref7.v, idx = _ref7.i, norm3 = _ref7.n;
              if (!!isDefined(text8)) {
                var _searcher$searchIn2 = searcher.searchIn(text8), isMatch2 = _searcher$searchIn2.isMatch, score2 = _searcher$searchIn2.score, indices2 = _searcher$searchIn2.indices;
                isMatch2 && matches.push({
                  score: score2,
                  key: key2,
                  value: text8,
                  idx,
                  norm: norm3,
                  indices: indices2
                });
              }
            });
          else {
            var text7 = value.v, norm2 = value.n, _searcher$searchIn3 = searcher.searchIn(text7), isMatch = _searcher$searchIn3.isMatch, score = _searcher$searchIn3.score, indices = _searcher$searchIn3.indices;
            isMatch && matches.push({
              score,
              key: key2,
              value: text7,
              norm: norm2,
              indices
            });
          }
          return matches;
        }
      }]), Fuse3;
    }();
    Fuse$1.version = "6.6.2";
    Fuse$1.createIndex = createIndex;
    Fuse$1.parseIndex = parseIndex;
    Fuse$1.config = Config;
    Fuse$1.parseQuery = parse6;
    register(ExtendedSearch);
    var Fuse2 = Fuse$1;
    module2.exports = Fuse2;
  }
});

// node_modules/is-plain-object/dist/is-plain-object.js
var require_is_plain_object = __commonJS({
  "node_modules/is-plain-object/dist/is-plain-object.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function isObject(o) {
      return Object.prototype.toString.call(o) === "[object Object]";
    }
    function isPlainObject2(o) {
      var ctor, prot;
      return isObject(o) === !1 ? !1 : (ctor = o.constructor, ctor === void 0 ? !0 : (prot = ctor.prototype, !(isObject(prot) === !1 || prot.hasOwnProperty("isPrototypeOf") === !1)));
    }
    exports2.isPlainObject = isPlainObject2;
  }
});

// node_modules/universal-user-agent/dist-node/index.js
var require_dist_node = __commonJS({
  "node_modules/universal-user-agent/dist-node/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function getUserAgent() {
      return typeof navigator == "object" && "userAgent" in navigator ? navigator.userAgent : typeof process == "object" && "version" in process ? `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})` : "<environment undetectable>";
    }
    exports2.getUserAgent = getUserAgent;
  }
});

// node_modules/@octokit/endpoint/dist-node/index.js
var require_dist_node2 = __commonJS({
  "node_modules/@octokit/endpoint/dist-node/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var isPlainObject2 = require_is_plain_object(), universalUserAgent = require_dist_node();
    function lowercaseKeys(object) {
      return object ? Object.keys(object).reduce((newObj, key2) => (newObj[key2.toLowerCase()] = object[key2], newObj), {}) : {};
    }
    function mergeDeep(defaults, options2) {
      let result = Object.assign({}, defaults);
      return Object.keys(options2).forEach((key2) => {
        isPlainObject2.isPlainObject(options2[key2]) ? key2 in defaults ? result[key2] = mergeDeep(defaults[key2], options2[key2]) : Object.assign(result, {
          [key2]: options2[key2]
        }) : Object.assign(result, {
          [key2]: options2[key2]
        });
      }), result;
    }
    function removeUndefinedProperties(obj) {
      for (let key2 in obj)
        obj[key2] === void 0 && delete obj[key2];
      return obj;
    }
    function merge2(defaults, route, options2) {
      if (typeof route == "string") {
        let [method, url] = route.split(" ");
        options2 = Object.assign(url ? {
          method,
          url
        } : {
          url: method
        }, options2);
      } else
        options2 = Object.assign({}, route);
      options2.headers = lowercaseKeys(options2.headers), removeUndefinedProperties(options2), removeUndefinedProperties(options2.headers);
      let mergedOptions = mergeDeep(defaults || {}, options2);
      return defaults && defaults.mediaType.previews.length && (mergedOptions.mediaType.previews = defaults.mediaType.previews.filter((preview) => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews)), mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, "")), mergedOptions;
    }
    function addQueryParameters(url, parameters) {
      let separator = /\?/.test(url) ? "&" : "?", names = Object.keys(parameters);
      return names.length === 0 ? url : url + separator + names.map((name) => name === "q" ? "q=" + parameters.q.split("+").map(encodeURIComponent).join("+") : `${name}=${encodeURIComponent(parameters[name])}`).join("&");
    }
    var urlVariableRegex = /\{[^}]+\}/g;
    function removeNonChars(variableName) {
      return variableName.replace(/^\W+|\W+$/g, "").split(/,/);
    }
    function extractUrlVariableNames(url) {
      let matches = url.match(urlVariableRegex);
      return matches ? matches.map(removeNonChars).reduce((a, b) => a.concat(b), []) : [];
    }
    function omit(object, keysToOmit) {
      return Object.keys(object).filter((option2) => !keysToOmit.includes(option2)).reduce((obj, key2) => (obj[key2] = object[key2], obj), {});
    }
    function encodeReserved(str2) {
      return str2.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {
        return /%[0-9A-Fa-f]/.test(part) || (part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]")), part;
      }).join("");
    }
    function encodeUnreserved(str2) {
      return encodeURIComponent(str2).replace(/[!'()*]/g, function(c) {
        return "%" + c.charCodeAt(0).toString(16).toUpperCase();
      });
    }
    function encodeValue(operator, value, key2) {
      return value = operator === "+" || operator === "#" ? encodeReserved(value) : encodeUnreserved(value), key2 ? encodeUnreserved(key2) + "=" + value : value;
    }
    function isDefined(value) {
      return value != null;
    }
    function isKeyOperator(operator) {
      return operator === ";" || operator === "&" || operator === "?";
    }
    function getValues(context, operator, key2, modifier) {
      var value = context[key2], result = [];
      if (isDefined(value) && value !== "")
        if (typeof value == "string" || typeof value == "number" || typeof value == "boolean")
          value = value.toString(), modifier && modifier !== "*" && (value = value.substring(0, parseInt(modifier, 10))), result.push(encodeValue(operator, value, isKeyOperator(operator) ? key2 : ""));
        else if (modifier === "*")
          Array.isArray(value) ? value.filter(isDefined).forEach(function(value2) {
            result.push(encodeValue(operator, value2, isKeyOperator(operator) ? key2 : ""));
          }) : Object.keys(value).forEach(function(k) {
            isDefined(value[k]) && result.push(encodeValue(operator, value[k], k));
          });
        else {
          let tmp = [];
          Array.isArray(value) ? value.filter(isDefined).forEach(function(value2) {
            tmp.push(encodeValue(operator, value2));
          }) : Object.keys(value).forEach(function(k) {
            isDefined(value[k]) && (tmp.push(encodeUnreserved(k)), tmp.push(encodeValue(operator, value[k].toString())));
          }), isKeyOperator(operator) ? result.push(encodeUnreserved(key2) + "=" + tmp.join(",")) : tmp.length !== 0 && result.push(tmp.join(","));
        }
      else
        operator === ";" ? isDefined(value) && result.push(encodeUnreserved(key2)) : value === "" && (operator === "&" || operator === "?") ? result.push(encodeUnreserved(key2) + "=") : value === "" && result.push("");
      return result;
    }
    function parseUrl(template) {
      return {
        expand: expand.bind(null, template)
      };
    }
    function expand(template, context) {
      var operators = ["+", "#", ".", "/", ";", "?", "&"];
      return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(_, expression, literal) {
        if (expression) {
          let operator = "", values = [];
          if (operators.indexOf(expression.charAt(0)) !== -1 && (operator = expression.charAt(0), expression = expression.substr(1)), expression.split(/,/g).forEach(function(variable) {
            var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
            values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
          }), operator && operator !== "+") {
            var separator = ",";
            return operator === "?" ? separator = "&" : operator !== "#" && (separator = operator), (values.length !== 0 ? operator : "") + values.join(separator);
          } else
            return values.join(",");
        } else
          return encodeReserved(literal);
      });
    }
    function parse6(options2) {
      let method = options2.method.toUpperCase(), url = (options2.url || "/").replace(/:([a-z]\w+)/g, "{$1}"), headers = Object.assign({}, options2.headers), body3, parameters = omit(options2, ["method", "baseUrl", "url", "headers", "request", "mediaType"]), urlVariableNames = extractUrlVariableNames(url);
      url = parseUrl(url).expand(parameters), /^http/.test(url) || (url = options2.baseUrl + url);
      let omittedParameters = Object.keys(options2).filter((option2) => urlVariableNames.includes(option2)).concat("baseUrl"), remainingParameters = omit(parameters, omittedParameters);
      if (!/application\/octet-stream/i.test(headers.accept) && (options2.mediaType.format && (headers.accept = headers.accept.split(/,/).map((preview) => preview.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${options2.mediaType.format}`)).join(",")), options2.mediaType.previews.length)) {
        let previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
        headers.accept = previewsFromAcceptHeader.concat(options2.mediaType.previews).map((preview) => {
          let format2 = options2.mediaType.format ? `.${options2.mediaType.format}` : "+json";
          return `application/vnd.github.${preview}-preview${format2}`;
        }).join(",");
      }
      return ["GET", "HEAD"].includes(method) ? url = addQueryParameters(url, remainingParameters) : "data" in remainingParameters ? body3 = remainingParameters.data : Object.keys(remainingParameters).length && (body3 = remainingParameters), !headers["content-type"] && typeof body3 < "u" && (headers["content-type"] = "application/json; charset=utf-8"), ["PATCH", "PUT"].includes(method) && typeof body3 > "u" && (body3 = ""), Object.assign({
        method,
        url,
        headers
      }, typeof body3 < "u" ? {
        body: body3
      } : null, options2.request ? {
        request: options2.request
      } : null);
    }
    function endpointWithDefaults(defaults, route, options2) {
      return parse6(merge2(defaults, route, options2));
    }
    function withDefaults(oldDefaults, newDefaults) {
      let DEFAULTS2 = merge2(oldDefaults, newDefaults), endpoint2 = endpointWithDefaults.bind(null, DEFAULTS2);
      return Object.assign(endpoint2, {
        DEFAULTS: DEFAULTS2,
        defaults: withDefaults.bind(null, DEFAULTS2),
        merge: merge2.bind(null, DEFAULTS2),
        parse: parse6
      });
    }
    var VERSION = "7.0.5", userAgent = `octokit-endpoint.js/${VERSION} ${universalUserAgent.getUserAgent()}`, DEFAULTS = {
      method: "GET",
      baseUrl: "https://api.github.com",
      headers: {
        accept: "application/vnd.github.v3+json",
        "user-agent": userAgent
      },
      mediaType: {
        format: "",
        previews: []
      }
    }, endpoint = withDefaults(null, DEFAULTS);
    exports2.endpoint = endpoint;
  }
});

// node_modules/node-fetch/node_modules/webidl-conversions/lib/index.js
var require_lib4 = __commonJS({
  "node_modules/node-fetch/node_modules/webidl-conversions/lib/index.js"(exports2, module2) {
    "use strict";
    var conversions = {};
    module2.exports = conversions;
    function sign(x) {
      return x < 0 ? -1 : 1;
    }
    function evenRound(x) {
      return x % 1 === 0.5 && (x & 1) === 0 ? Math.floor(x) : Math.round(x);
    }
    function createNumberConversion(bitLength, typeOpts) {
      typeOpts.unsigned || --bitLength;
      let lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength), upperBound = Math.pow(2, bitLength) - 1, moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength), moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);
      return function(V, opts) {
        opts || (opts = {});
        let x = +V;
        if (opts.enforceRange) {
          if (!Number.isFinite(x))
            throw new TypeError("Argument is not a finite number");
          if (x = sign(x) * Math.floor(Math.abs(x)), x < lowerBound || x > upperBound)
            throw new TypeError("Argument is not in byte range");
          return x;
        }
        if (!isNaN(x) && opts.clamp)
          return x = evenRound(x), x < lowerBound && (x = lowerBound), x > upperBound && (x = upperBound), x;
        if (!Number.isFinite(x) || x === 0)
          return 0;
        if (x = sign(x) * Math.floor(Math.abs(x)), x = x % moduloVal, !typeOpts.unsigned && x >= moduloBound)
          return x - moduloVal;
        if (typeOpts.unsigned) {
          if (x < 0)
            x += moduloVal;
          else if (x === -0)
            return 0;
        }
        return x;
      };
    }
    conversions.void = function() {
    };
    conversions.boolean = function(val) {
      return !!val;
    };
    conversions.byte = createNumberConversion(8, { unsigned: !1 });
    conversions.octet = createNumberConversion(8, { unsigned: !0 });
    conversions.short = createNumberConversion(16, { unsigned: !1 });
    conversions["unsigned short"] = createNumberConversion(16, { unsigned: !0 });
    conversions.long = createNumberConversion(32, { unsigned: !1 });
    conversions["unsigned long"] = createNumberConversion(32, { unsigned: !0 });
    conversions["long long"] = createNumberConversion(32, { unsigned: !1, moduloBitLength: 64 });
    conversions["unsigned long long"] = createNumberConversion(32, { unsigned: !0, moduloBitLength: 64 });
    conversions.double = function(V) {
      let x = +V;
      if (!Number.isFinite(x))
        throw new TypeError("Argument is not a finite floating-point value");
      return x;
    };
    conversions["unrestricted double"] = function(V) {
      let x = +V;
      if (isNaN(x))
        throw new TypeError("Argument is NaN");
      return x;
    };
    conversions.float = conversions.double;
    conversions["unrestricted float"] = conversions["unrestricted double"];
    conversions.DOMString = function(V, opts) {
      return opts || (opts = {}), opts.treatNullAsEmptyString && V === null ? "" : String(V);
    };
    conversions.ByteString = function(V, opts) {
      let x = String(V), c;
      for (let i = 0; (c = x.codePointAt(i)) !== void 0; ++i)
        if (c > 255)
          throw new TypeError("Argument is not a valid bytestring");
      return x;
    };
    conversions.USVString = function(V) {
      let S = String(V), n = S.length, U = [];
      for (let i = 0; i < n; ++i) {
        let c = S.charCodeAt(i);
        if (c < 55296 || c > 57343)
          U.push(String.fromCodePoint(c));
        else if (56320 <= c && c <= 57343)
          U.push(String.fromCodePoint(65533));
        else if (i === n - 1)
          U.push(String.fromCodePoint(65533));
        else {
          let d = S.charCodeAt(i + 1);
          if (56320 <= d && d <= 57343) {
            let a = c & 1023, b = d & 1023;
            U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b)), ++i;
          } else
            U.push(String.fromCodePoint(65533));
        }
      }
      return U.join("");
    };
    conversions.Date = function(V, opts) {
      if (!(V instanceof Date))
        throw new TypeError("Argument is not a Date object");
      if (!isNaN(V))
        return V;
    };
    conversions.RegExp = function(V, opts) {
      return V instanceof RegExp || (V = new RegExp(V)), V;
    };
  }
});

// node_modules/node-fetch/node_modules/whatwg-url/lib/utils.js
var require_utils6 = __commonJS({
  "node_modules/node-fetch/node_modules/whatwg-url/lib/utils.js"(exports2, module2) {
    "use strict";
    module2.exports.mixin = function(target, source) {
      let keys2 = Object.getOwnPropertyNames(source);
      for (let i = 0; i < keys2.length; ++i)
        Object.defineProperty(target, keys2[i], Object.getOwnPropertyDescriptor(source, keys2[i]));
    };
    module2.exports.wrapperSymbol = Symbol("wrapper");
    module2.exports.implSymbol = Symbol("impl");
    module2.exports.wrapperForImpl = function(impl) {
      return impl[module2.exports.wrapperSymbol];
    };
    module2.exports.implForWrapper = function(wrapper) {
      return wrapper[module2.exports.implSymbol];
    };
  }
});

// node_modules/node-fetch/node_modules/tr46/lib/mappingTable.json
var require_mappingTable2 = __commonJS({
  "node_modules/node-fetch/node_modules/tr46/lib/mappingTable.json"(exports2, module2) {
    module2.exports = [[[0, 44], "disallowed_STD3_valid"], [[45, 46], "valid"], [[47, 47], "disallowed_STD3_valid"], [[48, 57], "valid"], [[58, 64], "disallowed_STD3_valid"], [[65, 65], "mapped", [97]], [[66, 66], "mapped", [98]], [[67, 67], "mapped", [99]], [[68, 68], "mapped", [100]], [[69, 69], "mapped", [101]], [[70, 70], "mapped", [102]], [[71, 71], "mapped", [103]], [[72, 72], "mapped", [104]], [[73, 73], "mapped", [105]], [[74, 74], "mapped", [106]], [[75, 75], "mapped", [107]], [[76, 76], "mapped", [108]], [[77, 77], "mapped", [109]], [[78, 78], "mapped", [110]], [[79, 79], "mapped", [111]], [[80, 80], "mapped", [112]], [[81, 81], "mapped", [113]], [[82, 82], "mapped", [114]], [[83, 83], "mapped", [115]], [[84, 84], "mapped", [116]], [[85, 85], "mapped", [117]], [[86, 86], "mapped", [118]], [[87, 87], "mapped", [119]], [[88, 88], "mapped", [120]], [[89, 89], "mapped", [121]], [[90, 90], "mapped", [122]], [[91, 96], "disallowed_STD3_valid"], [[97, 122], "valid"], [[123, 127], "disallowed_STD3_valid"], [[128, 159], "disallowed"], [[160, 160], "disallowed_STD3_mapped", [32]], [[161, 167], "valid", [], "NV8"], [[168, 168], "disallowed_STD3_mapped", [32, 776]], [[169, 169], "valid", [], "NV8"], [[170, 170], "mapped", [97]], [[171, 172], "valid", [], "NV8"], [[173, 173], "ignored"], [[174, 174], "valid", [], "NV8"], [[175, 175], "disallowed_STD3_mapped", [32, 772]], [[176, 177], "valid", [], "NV8"], [[178, 178], "mapped", [50]], [[179, 179], "mapped", [51]], [[180, 180], "disallowed_STD3_mapped", [32, 769]], [[181, 181], "mapped", [956]], [[182, 182], "valid", [], "NV8"], [[183, 183], "valid"], [[184, 184], "disallowed_STD3_mapped", [32, 807]], [[185, 185], "mapped", [49]], [[186, 186], "mapped", [111]], [[187, 187], "valid", [], "NV8"], [[188, 188], "mapped", [49, 8260, 52]], [[189, 189], "mapped", [49, 8260, 50]], [[190, 190], "mapped", [51, 8260, 52]], [[191, 191], "valid", [], "NV8"], [[192, 192], "mapped", [224]], [[193, 193], "mapped", [225]], [[194, 194], "mapped", [226]], [[195, 195], "mapped", [227]], [[196, 196], "mapped", [228]], [[197, 197], "mapped", [229]], [[198, 198], "mapped", [230]], [[199, 199], "mapped", [231]], [[200, 200], "mapped", [232]], [[201, 201], "mapped", [233]], [[202, 202], "mapped", [234]], [[203, 203], "mapped", [235]], [[204, 204], "mapped", [236]], [[205, 205], "mapped", [237]], [[206, 206], "mapped", [238]], [[207, 207], "mapped", [239]], [[208, 208], "mapped", [240]], [[209, 209], "mapped", [241]], [[210, 210], "mapped", [242]], [[211, 211], "mapped", [243]], [[212, 212], "mapped", [244]], [[213, 213], "mapped", [245]], [[214, 214], "mapped", [246]], [[215, 215], "valid", [], "NV8"], [[216, 216], "mapped", [248]], [[217, 217], "mapped", [249]], [[218, 218], "mapped", [250]], [[219, 219], "mapped", [251]], [[220, 220], "mapped", [252]], [[221, 221], "mapped", [253]], [[222, 222], "mapped", [254]], [[223, 223], "deviation", [115, 115]], [[224, 246], "valid"], [[247, 247], "valid", [], "NV8"], [[248, 255], "valid"], [[256, 256], "mapped", [257]], [[257, 257], "valid"], [[258, 258], "mapped", [259]], [[259, 259], "valid"], [[260, 260], "mapped", [261]], [[261, 261], "valid"], [[262, 262], "mapped", [263]], [[263, 263], "valid"], [[264, 264], "mapped", [265]], [[265, 265], "valid"], [[266, 266], "mapped", [267]], [[267, 267], "valid"], [[268, 268], "mapped", [269]], [[269, 269], "valid"], [[270, 270], "mapped", [271]], [[271, 271], "valid"], [[272, 272], "mapped", [273]], [[273, 273], "valid"], [[274, 274], "mapped", [275]], [[275, 275], "valid"], [[276, 276], "mapped", [277]], [[277, 277], "valid"], [[278, 278], "mapped", [279]], [[279, 279], "valid"], [[280, 280], "mapped", [281]], [[281, 281], "valid"], [[282, 282], "mapped", [283]], [[283, 283], "valid"], [[284, 284], "mapped", [285]], [[285, 285], "valid"], [[286, 286], "mapped", [287]], [[287, 287], "valid"], [[288, 288], "mapped", [289]], [[289, 289], "valid"], [[290, 290], "mapped", [291]], [[291, 291], "valid"], [[292, 292], "mapped", [293]], [[293, 293], "valid"], [[294, 294], "mapped", [295]], [[295, 295], "valid"], [[296, 296], "mapped", [297]], [[297, 297], "valid"], [[298, 298], "mapped", [299]], [[299, 299], "valid"], [[300, 300], "mapped", [301]], [[301, 301], "valid"], [[302, 302], "mapped", [303]], [[303, 303], "valid"], [[304, 304], "mapped", [105, 775]], [[305, 305], "valid"], [[306, 307], "mapped", [105, 106]], [[308, 308], "mapped", [309]], [[309, 309], "valid"], [[310, 310], "mapped", [311]], [[311, 312], "valid"], [[313, 313], "mapped", [314]], [[314, 314], "valid"], [[315, 315], "mapped", [316]], [[316, 316], "valid"], [[317, 317], "mapped", [318]], [[318, 318], "valid"], [[319, 320], "mapped", [108, 183]], [[321, 321], "mapped", [322]], [[322, 322], "valid"], [[323, 323], "mapped", [324]], [[324, 324], "valid"], [[325, 325], "mapped", [326]], [[326, 326], "valid"], [[327, 327], "mapped", [328]], [[328, 328], "valid"], [[329, 329], "mapped", [700, 110]], [[330, 330], "mapped", [331]], [[331, 331], "valid"], [[332, 332], "mapped", [333]], [[333, 333], "valid"], [[334, 334], "mapped", [335]], [[335, 335], "valid"], [[336, 336], "mapped", [337]], [[337, 337], "valid"], [[338, 338], "mapped", [339]], [[339, 339], "valid"], [[340, 340], "mapped", [341]], [[341, 341], "valid"], [[342, 342], "mapped", [343]], [[343, 343], "valid"], [[344, 344], "mapped", [345]], [[345, 345], "valid"], [[346, 346], "mapped", [347]], [[347, 347], "valid"], [[348, 348], "mapped", [349]], [[349, 349], "valid"], [[350, 350], "mapped", [351]], [[351, 351], "valid"], [[352, 352], "mapped", [353]], [[353, 353], "valid"], [[354, 354], "mapped", [355]], [[355, 355], "valid"], [[356, 356], "mapped", [357]], [[357, 357], "valid"], [[358, 358], "mapped", [359]], [[359, 359], "valid"], [[360, 360], "mapped", [361]], [[361, 361], "valid"], [[362, 362], "mapped", [363]], [[363, 363], "valid"], [[364, 364], "mapped", [365]], [[365, 365], "valid"], [[366, 366], "mapped", [367]], [[367, 367], "valid"], [[368, 368], "mapped", [369]], [[369, 369], "valid"], [[370, 370], "mapped", [371]], [[371, 371], "valid"], [[372, 372], "mapped", [373]], [[373, 373], "valid"], [[374, 374], "mapped", [375]], [[375, 375], "valid"], [[376, 376], "mapped", [255]], [[377, 377], "mapped", [378]], [[378, 378], "valid"], [[379, 379], "mapped", [380]], [[380, 380], "valid"], [[381, 381], "mapped", [382]], [[382, 382], "valid"], [[383, 383], "mapped", [115]], [[384, 384], "valid"], [[385, 385], "mapped", [595]], [[386, 386], "mapped", [387]], [[387, 387], "valid"], [[388, 388], "mapped", [389]], [[389, 389], "valid"], [[390, 390], "mapped", [596]], [[391, 391], "mapped", [392]], [[392, 392], "valid"], [[393, 393], "mapped", [598]], [[394, 394], "mapped", [599]], [[395, 395], "mapped", [396]], [[396, 397], "valid"], [[398, 398], "mapped", [477]], [[399, 399], "mapped", [601]], [[400, 400], "mapped", [603]], [[401, 401], "mapped", [402]], [[402, 402], "valid"], [[403, 403], "mapped", [608]], [[404, 404], "mapped", [611]], [[405, 405], "valid"], [[406, 406], "mapped", [617]], [[407, 407], "mapped", [616]], [[408, 408], "mapped", [409]], [[409, 411], "valid"], [[412, 412], "mapped", [623]], [[413, 413], "mapped", [626]], [[414, 414], "valid"], [[415, 415], "mapped", [629]], [[416, 416], "mapped", [417]], [[417, 417], "valid"], [[418, 418], "mapped", [419]], [[419, 419], "valid"], [[420, 420], "mapped", [421]], [[421, 421], "valid"], [[422, 422], "mapped", [640]], [[423, 423], "mapped", [424]], [[424, 424], "valid"], [[425, 425], "mapped", [643]], [[426, 427], "valid"], [[428, 428], "mapped", [429]], [[429, 429], "valid"], [[430, 430], "mapped", [648]], [[431, 431], "mapped", [432]], [[432, 432], "valid"], [[433, 433], "mapped", [650]], [[434, 434], "mapped", [651]], [[435, 435], "mapped", [436]], [[436, 436], "valid"], [[437, 437], "mapped", [438]], [[438, 438], "valid"], [[439, 439], "mapped", [658]], [[440, 440], "mapped", [441]], [[441, 443], "valid"], [[444, 444], "mapped", [445]], [[445, 451], "valid"], [[452, 454], "mapped", [100, 382]], [[455, 457], "mapped", [108, 106]], [[458, 460], "mapped", [110, 106]], [[461, 461], "mapped", [462]], [[462, 462], "valid"], [[463, 463], "mapped", [464]], [[464, 464], "valid"], [[465, 465], "mapped", [466]], [[466, 466], "valid"], [[467, 467], "mapped", [468]], [[468, 468], "valid"], [[469, 469], "mapped", [470]], [[470, 470], "valid"], [[471, 471], "mapped", [472]], [[472, 472], "valid"], [[473, 473], "mapped", [474]], [[474, 474], "valid"], [[475, 475], "mapped", [476]], [[476, 477], "valid"], [[478, 478], "mapped", [479]], [[479, 479], "valid"], [[480, 480], "mapped", [481]], [[481, 481], "valid"], [[482, 482], "mapped", [483]], [[483, 483], "valid"], [[484, 484], "mapped", [485]], [[485, 485], "valid"], [[486, 486], "mapped", [487]], [[487, 487], "valid"], [[488, 488], "mapped", [489]], [[489, 489], "valid"], [[490, 490], "mapped", [491]], [[491, 491], "valid"], [[492, 492], "mapped", [493]], [[493, 493], "valid"], [[494, 494], "mapped", [495]], [[495, 496], "valid"], [[497, 499], "mapped", [100, 122]], [[500, 500], "mapped", [501]], [[501, 501], "valid"], [[502, 502], "mapped", [405]], [[503, 503], "mapped", [447]], [[504, 504], "mapped", [505]], [[505, 505], "valid"], [[506, 506], "mapped", [507]], [[507, 507], "valid"], [[508, 508], "mapped", [509]], [[509, 509], "valid"], [[510, 510], "mapped", [511]], [[511, 511], "valid"], [[512, 512], "mapped", [513]], [[513, 513], "valid"], [[514, 514], "mapped", [515]], [[515, 515], "valid"], [[516, 516], "mapped", [517]], [[517, 517], "valid"], [[518, 518], "mapped", [519]], [[519, 519], "valid"], [[520, 520], "mapped", [521]], [[521, 521], "valid"], [[522, 522], "mapped", [523]], [[523, 523], "valid"], [[524, 524], "mapped", [525]], [[525, 525], "valid"], [[526, 526], "mapped", [527]], [[527, 527], "valid"], [[528, 528], "mapped", [529]], [[529, 529], "valid"], [[530, 530], "mapped", [531]], [[531, 531], "valid"], [[532, 532], "mapped", [533]], [[533, 533], "valid"], [[534, 534], "mapped", [535]], [[535, 535], "valid"], [[536, 536], "mapped", [537]], [[537, 537], "valid"], [[538, 538], "mapped", [539]], [[539, 539], "valid"], [[540, 540], "mapped", [541]], [[541, 541], "valid"], [[542, 542], "mapped", [543]], [[543, 543], "valid"], [[544, 544], "mapped", [414]], [[545, 545], "valid"], [[546, 546], "mapped", [547]], [[547, 547], "valid"], [[548, 548], "mapped", [549]], [[549, 549], "valid"], [[550, 550], "mapped", [551]], [[551, 551], "valid"], [[552, 552], "mapped", [553]], [[553, 553], "valid"], [[554, 554], "mapped", [555]], [[555, 555], "valid"], [[556, 556], "mapped", [557]], [[557, 557], "valid"], [[558, 558], "mapped", [559]], [[559, 559], "valid"], [[560, 560], "mapped", [561]], [[561, 561], "valid"], [[562, 562], "mapped", [563]], [[563, 563], "valid"], [[564, 566], "valid"], [[567, 569], "valid"], [[570, 570], "mapped", [11365]], [[571, 571], "mapped", [572]], [[572, 572], "valid"], [[573, 573], "mapped", [410]], [[574, 574], "mapped", [11366]], [[575, 576], "valid"], [[577, 577], "mapped", [578]], [[578, 578], "valid"], [[579, 579], "mapped", [384]], [[580, 580], "mapped", [649]], [[581, 581], "mapped", [652]], [[582, 582], "mapped", [583]], [[583, 583], "valid"], [[584, 584], "mapped", [585]], [[585, 585], "valid"], [[586, 586], "mapped", [587]], [[587, 587], "valid"], [[588, 588], "mapped", [589]], [[589, 589], "valid"], [[590, 590], "mapped", [591]], [[591, 591], "valid"], [[592, 680], "valid"], [[681, 685], "valid"], [[686, 687], "valid"], [[688, 688], "mapped", [104]], [[689, 689], "mapped", [614]], [[690, 690], "mapped", [106]], [[691, 691], "mapped", [114]], [[692, 692], "mapped", [633]], [[693, 693], "mapped", [635]], [[694, 694], "mapped", [641]], [[695, 695], "mapped", [119]], [[696, 696], "mapped", [121]], [[697, 705], "valid"], [[706, 709], "valid", [], "NV8"], [[710, 721], "valid"], [[722, 727], "valid", [], "NV8"], [[728, 728], "disallowed_STD3_mapped", [32, 774]], [[729, 729], "disallowed_STD3_mapped", [32, 775]], [[730, 730], "disallowed_STD3_mapped", [32, 778]], [[731, 731], "disallowed_STD3_mapped", [32, 808]], [[732, 732], "disallowed_STD3_mapped", [32, 771]], [[733, 733], "disallowed_STD3_mapped", [32, 779]], [[734, 734], "valid", [], "NV8"], [[735, 735], "valid", [], "NV8"], [[736, 736], "mapped", [611]], [[737, 737], "mapped", [108]], [[738, 738], "mapped", [115]], [[739, 739], "mapped", [120]], [[740, 740], "mapped", [661]], [[741, 745], "valid", [], "NV8"], [[746, 747], "valid", [], "NV8"], [[748, 748], "valid"], [[749, 749], "valid", [], "NV8"], [[750, 750], "valid"], [[751, 767], "valid", [], "NV8"], [[768, 831], "valid"], [[832, 832], "mapped", [768]], [[833, 833], "mapped", [769]], [[834, 834], "valid"], [[835, 835], "mapped", [787]], [[836, 836], "mapped", [776, 769]], [[837, 837], "mapped", [953]], [[838, 846], "valid"], [[847, 847], "ignored"], [[848, 855], "valid"], [[856, 860], "valid"], [[861, 863], "valid"], [[864, 865], "valid"], [[866, 866], "valid"], [[867, 879], "valid"], [[880, 880], "mapped", [881]], [[881, 881], "valid"], [[882, 882], "mapped", [883]], [[883, 883], "valid"], [[884, 884], "mapped", [697]], [[885, 885], "valid"], [[886, 886], "mapped", [887]], [[887, 887], "valid"], [[888, 889], "disallowed"], [[890, 890], "disallowed_STD3_mapped", [32, 953]], [[891, 893], "valid"], [[894, 894], "disallowed_STD3_mapped", [59]], [[895, 895], "mapped", [1011]], [[896, 899], "disallowed"], [[900, 900], "disallowed_STD3_mapped", [32, 769]], [[901, 901], "disallowed_STD3_mapped", [32, 776, 769]], [[902, 902], "mapped", [940]], [[903, 903], "mapped", [183]], [[904, 904], "mapped", [941]], [[905, 905], "mapped", [942]], [[906, 906], "mapped", [943]], [[907, 907], "disallowed"], [[908, 908], "mapped", [972]], [[909, 909], "disallowed"], [[910, 910], "mapped", [973]], [[911, 911], "mapped", [974]], [[912, 912], "valid"], [[913, 913], "mapped", [945]], [[914, 914], "mapped", [946]], [[915, 915], "mapped", [947]], [[916, 916], "mapped", [948]], [[917, 917], "mapped", [949]], [[918, 918], "mapped", [950]], [[919, 919], "mapped", [951]], [[920, 920], "mapped", [952]], [[921, 921], "mapped", [953]], [[922, 922], "mapped", [954]], [[923, 923], "mapped", [955]], [[924, 924], "mapped", [956]], [[925, 925], "mapped", [957]], [[926, 926], "mapped", [958]], [[927, 927], "mapped", [959]], [[928, 928], "mapped", [960]], [[929, 929], "mapped", [961]], [[930, 930], "disallowed"], [[931, 931], "mapped", [963]], [[932, 932], "mapped", [964]], [[933, 933], "mapped", [965]], [[934, 934], "mapped", [966]], [[935, 935], "mapped", [967]], [[936, 936], "mapped", [968]], [[937, 937], "mapped", [969]], [[938, 938], "mapped", [970]], [[939, 939], "mapped", [971]], [[940, 961], "valid"], [[962, 962], "deviation", [963]], [[963, 974], "valid"], [[975, 975], "mapped", [983]], [[976, 976], "mapped", [946]], [[977, 977], "mapped", [952]], [[978, 978], "mapped", [965]], [[979, 979], "mapped", [973]], [[980, 980], "mapped", [971]], [[981, 981], "mapped", [966]], [[982, 982], "mapped", [960]], [[983, 983], "valid"], [[984, 984], "mapped", [985]], [[985, 985], "valid"], [[986, 986], "mapped", [987]], [[987, 987], "valid"], [[988, 988], "mapped", [989]], [[989, 989], "valid"], [[990, 990], "mapped", [991]], [[991, 991], "valid"], [[992, 992], "mapped", [993]], [[993, 993], "valid"], [[994, 994], "mapped", [995]], [[995, 995], "valid"], [[996, 996], "mapped", [997]], [[997, 997], "valid"], [[998, 998], "mapped", [999]], [[999, 999], "valid"], [[1e3, 1e3], "mapped", [1001]], [[1001, 1001], "valid"], [[1002, 1002], "mapped", [1003]], [[1003, 1003], "valid"], [[1004, 1004], "mapped", [1005]], [[1005, 1005], "valid"], [[1006, 1006], "mapped", [1007]], [[1007, 1007], "valid"], [[1008, 1008], "mapped", [954]], [[1009, 1009], "mapped", [961]], [[1010, 1010], "mapped", [963]], [[1011, 1011], "valid"], [[1012, 1012], "mapped", [952]], [[1013, 1013], "mapped", [949]], [[1014, 1014], "valid", [], "NV8"], [[1015, 1015], "mapped", [1016]], [[1016, 1016], "valid"], [[1017, 1017], "mapped", [963]], [[1018, 1018], "mapped", [1019]], [[1019, 1019], "valid"], [[1020, 1020], "valid"], [[1021, 1021], "mapped", [891]], [[1022, 1022], "mapped", [892]], [[1023, 1023], "mapped", [893]], [[1024, 1024], "mapped", [1104]], [[1025, 1025], "mapped", [1105]], [[1026, 1026], "mapped", [1106]], [[1027, 1027], "mapped", [1107]], [[1028, 1028], "mapped", [1108]], [[1029, 1029], "mapped", [1109]], [[1030, 1030], "mapped", [1110]], [[1031, 1031], "mapped", [1111]], [[1032, 1032], "mapped", [1112]], [[1033, 1033], "mapped", [1113]], [[1034, 1034], "mapped", [1114]], [[1035, 1035], "mapped", [1115]], [[1036, 1036], "mapped", [1116]], [[1037, 1037], "mapped", [1117]], [[1038, 1038], "mapped", [1118]], [[1039, 1039], "mapped", [1119]], [[1040, 1040], "mapped", [1072]], [[1041, 1041], "mapped", [1073]], [[1042, 1042], "mapped", [1074]], [[1043, 1043], "mapped", [1075]], [[1044, 1044], "mapped", [1076]], [[1045, 1045], "mapped", [1077]], [[1046, 1046], "mapped", [1078]], [[1047, 1047], "mapped", [1079]], [[1048, 1048], "mapped", [1080]], [[1049, 1049], "mapped", [1081]], [[1050, 1050], "mapped", [1082]], [[1051, 1051], "mapped", [1083]], [[1052, 1052], "mapped", [1084]], [[1053, 1053], "mapped", [1085]], [[1054, 1054], "mapped", [1086]], [[1055, 1055], "mapped", [1087]], [[1056, 1056], "mapped", [1088]], [[1057, 1057], "mapped", [1089]], [[1058, 1058], "mapped", [1090]], [[1059, 1059], "mapped", [1091]], [[1060, 1060], "mapped", [1092]], [[1061, 1061], "mapped", [1093]], [[1062, 1062], "mapped", [1094]], [[1063, 1063], "mapped", [1095]], [[1064, 1064], "mapped", [1096]], [[1065, 1065], "mapped", [1097]], [[1066, 1066], "mapped", [1098]], [[1067, 1067], "mapped", [1099]], [[1068, 1068], "mapped", [1100]], [[1069, 1069], "mapped", [1101]], [[1070, 1070], "mapped", [1102]], [[1071, 1071], "mapped", [1103]], [[1072, 1103], "valid"], [[1104, 1104], "valid"], [[1105, 1116], "valid"], [[1117, 1117], "valid"], [[1118, 1119], "valid"], [[1120, 1120], "mapped", [1121]], [[1121, 1121], "valid"], [[1122, 1122], "mapped", [1123]], [[1123, 1123], "valid"], [[1124, 1124], "mapped", [1125]], [[1125, 1125], "valid"], [[1126, 1126], "mapped", [1127]], [[1127, 1127], "valid"], [[1128, 1128], "mapped", [1129]], [[1129, 1129], "valid"], [[1130, 1130], "mapped", [1131]], [[1131, 1131], "valid"], [[1132, 1132], "mapped", [1133]], [[1133, 1133], "valid"], [[1134, 1134], "mapped", [1135]], [[1135, 1135], "valid"], [[1136, 1136], "mapped", [1137]], [[1137, 1137], "valid"], [[1138, 1138], "mapped", [1139]], [[1139, 1139], "valid"], [[1140, 1140], "mapped", [1141]], [[1141, 1141], "valid"], [[1142, 1142], "mapped", [1143]], [[1143, 1143], "valid"], [[1144, 1144], "mapped", [1145]], [[1145, 1145], "valid"], [[1146, 1146], "mapped", [1147]], [[1147, 1147], "valid"], [[1148, 1148], "mapped", [1149]], [[1149, 1149], "valid"], [[1150, 1150], "mapped", [1151]], [[1151, 1151], "valid"], [[1152, 1152], "mapped", [1153]], [[1153, 1153], "valid"], [[1154, 1154], "valid", [], "NV8"], [[1155, 1158], "valid"], [[1159, 1159], "valid"], [[1160, 1161], "valid", [], "NV8"], [[1162, 1162], "mapped", [1163]], [[1163, 1163], "valid"], [[1164, 1164], "mapped", [1165]], [[1165, 1165], "valid"], [[1166, 1166], "mapped", [1167]], [[1167, 1167], "valid"], [[1168, 1168], "mapped", [1169]], [[1169, 1169], "valid"], [[1170, 1170], "mapped", [1171]], [[1171, 1171], "valid"], [[1172, 1172], "mapped", [1173]], [[1173, 1173], "valid"], [[1174, 1174], "mapped", [1175]], [[1175, 1175], "valid"], [[1176, 1176], "mapped", [1177]], [[1177, 1177], "valid"], [[1178, 1178], "mapped", [1179]], [[1179, 1179], "valid"], [[1180, 1180], "mapped", [1181]], [[1181, 1181], "valid"], [[1182, 1182], "mapped", [1183]], [[1183, 1183], "valid"], [[1184, 1184], "mapped", [1185]], [[1185, 1185], "valid"], [[1186, 1186], "mapped", [1187]], [[1187, 1187], "valid"], [[1188, 1188], "mapped", [1189]], [[1189, 1189], "valid"], [[1190, 1190], "mapped", [1191]], [[1191, 1191], "valid"], [[1192, 1192], "mapped", [1193]], [[1193, 1193], "valid"], [[1194, 1194], "mapped", [1195]], [[1195, 1195], "valid"], [[1196, 1196], "mapped", [1197]], [[1197, 1197], "valid"], [[1198, 1198], "mapped", [1199]], [[1199, 1199], "valid"], [[1200, 1200], "mapped", [1201]], [[1201, 1201], "valid"], [[1202, 1202], "mapped", [1203]], [[1203, 1203], "valid"], [[1204, 1204], "mapped", [1205]], [[1205, 1205], "valid"], [[1206, 1206], "mapped", [1207]], [[1207, 1207], "valid"], [[1208, 1208], "mapped", [1209]], [[1209, 1209], "valid"], [[1210, 1210], "mapped", [1211]], [[1211, 1211], "valid"], [[1212, 1212], "mapped", [1213]], [[1213, 1213], "valid"], [[1214, 1214], "mapped", [1215]], [[1215, 1215], "valid"], [[1216, 1216], "disallowed"], [[1217, 1217], "mapped", [1218]], [[1218, 1218], "valid"], [[1219, 1219], "mapped", [1220]], [[1220, 1220], "valid"], [[1221, 1221], "mapped", [1222]], [[1222, 1222], "valid"], [[1223, 1223], "mapped", [1224]], [[1224, 1224], "valid"], [[1225, 1225], "mapped", [1226]], [[1226, 1226], "valid"], [[1227, 1227], "mapped", [1228]], [[1228, 1228], "valid"], [[1229, 1229], "mapped", [1230]], [[1230, 1230], "valid"], [[1231, 1231], "valid"], [[1232, 1232], "mapped", [1233]], [[1233, 1233], "valid"], [[1234, 1234], "mapped", [1235]], [[1235, 1235], "valid"], [[1236, 1236], "mapped", [1237]], [[1237, 1237], "valid"], [[1238, 1238], "mapped", [1239]], [[1239, 1239], "valid"], [[1240, 1240], "mapped", [1241]], [[1241, 1241], "valid"], [[1242, 1242], "mapped", [1243]], [[1243, 1243], "valid"], [[1244, 1244], "mapped", [1245]], [[1245, 1245], "valid"], [[1246, 1246], "mapped", [1247]], [[1247, 1247], "valid"], [[1248, 1248], "mapped", [1249]], [[1249, 1249], "valid"], [[1250, 1250], "mapped", [1251]], [[1251, 1251], "valid"], [[1252, 1252], "mapped", [1253]], [[1253, 1253], "valid"], [[1254, 1254], "mapped", [1255]], [[1255, 1255], "valid"], [[1256, 1256], "mapped", [1257]], [[1257, 1257], "valid"], [[1258, 1258], "mapped", [1259]], [[1259, 1259], "valid"], [[1260, 1260], "mapped", [1261]], [[1261, 1261], "valid"], [[1262, 1262], "mapped", [1263]], [[1263, 1263], "valid"], [[1264, 1264], "mapped", [1265]], [[1265, 1265], "valid"], [[1266, 1266], "mapped", [1267]], [[1267, 1267], "valid"], [[1268, 1268], "mapped", [1269]], [[1269, 1269], "valid"], [[1270, 1270], "mapped", [1271]], [[1271, 1271], "valid"], [[1272, 1272], "mapped", [1273]], [[1273, 1273], "valid"], [[1274, 1274], "mapped", [1275]], [[1275, 1275], "valid"], [[1276, 1276], "mapped", [1277]], [[1277, 1277], "valid"], [[1278, 1278], "mapped", [1279]], [[1279, 1279], "valid"], [[1280, 1280], "mapped", [1281]], [[1281, 1281], "valid"], [[1282, 1282], "mapped", [1283]], [[1283, 1283], "valid"], [[1284, 1284], "mapped", [1285]], [[1285, 1285], "valid"], [[1286, 1286], "mapped", [1287]], [[1287, 1287], "valid"], [[1288, 1288], "mapped", [1289]], [[1289, 1289], "valid"], [[1290, 1290], "mapped", [1291]], [[1291, 1291], "valid"], [[1292, 1292], "mapped", [1293]], [[1293, 1293], "valid"], [[1294, 1294], "mapped", [1295]], [[1295, 1295], "valid"], [[1296, 1296], "mapped", [1297]], [[1297, 1297], "valid"], [[1298, 1298], "mapped", [1299]], [[1299, 1299], "valid"], [[1300, 1300], "mapped", [1301]], [[1301, 1301], "valid"], [[1302, 1302], "mapped", [1303]], [[1303, 1303], "valid"], [[1304, 1304], "mapped", [1305]], [[1305, 1305], "valid"], [[1306, 1306], "mapped", [1307]], [[1307, 1307], "valid"], [[1308, 1308], "mapped", [1309]], [[1309, 1309], "valid"], [[1310, 1310], "mapped", [1311]], [[1311, 1311], "valid"], [[1312, 1312], "mapped", [1313]], [[1313, 1313], "valid"], [[1314, 1314], "mapped", [1315]], [[1315, 1315], "valid"], [[1316, 1316], "mapped", [1317]], [[1317, 1317], "valid"], [[1318, 1318], "mapped", [1319]], [[1319, 1319], "valid"], [[1320, 1320], "mapped", [1321]], [[1321, 1321], "valid"], [[1322, 1322], "mapped", [1323]], [[1323, 1323], "valid"], [[1324, 1324], "mapped", [1325]], [[1325, 1325], "valid"], [[1326, 1326], "mapped", [1327]], [[1327, 1327], "valid"], [[1328, 1328], "disallowed"], [[1329, 1329], "mapped", [1377]], [[1330, 1330], "mapped", [1378]], [[1331, 1331], "mapped", [1379]], [[1332, 1332], "mapped", [1380]], [[1333, 1333], "mapped", [1381]], [[1334, 1334], "mapped", [1382]], [[1335, 1335], "mapped", [1383]], [[1336, 1336], "mapped", [1384]], [[1337, 1337], "mapped", [1385]], [[1338, 1338], "mapped", [1386]], [[1339, 1339], "mapped", [1387]], [[1340, 1340], "mapped", [1388]], [[1341, 1341], "mapped", [1389]], [[1342, 1342], "mapped", [1390]], [[1343, 1343], "mapped", [1391]], [[1344, 1344], "mapped", [1392]], [[1345, 1345], "mapped", [1393]], [[1346, 1346], "mapped", [1394]], [[1347, 1347], "mapped", [1395]], [[1348, 1348], "mapped", [1396]], [[1349, 1349], "mapped", [1397]], [[1350, 1350], "mapped", [1398]], [[1351, 1351], "mapped", [1399]], [[1352, 1352], "mapped", [1400]], [[1353, 1353], "mapped", [1401]], [[1354, 1354], "mapped", [1402]], [[1355, 1355], "mapped", [1403]], [[1356, 1356], "mapped", [1404]], [[1357, 1357], "mapped", [1405]], [[1358, 1358], "mapped", [1406]], [[1359, 1359], "mapped", [1407]], [[1360, 1360], "mapped", [1408]], [[1361, 1361], "mapped", [1409]], [[1362, 1362], "mapped", [1410]], [[1363, 1363], "mapped", [1411]], [[1364, 1364], "mapped", [1412]], [[1365, 1365], "mapped", [1413]], [[1366, 1366], "mapped", [1414]], [[1367, 1368], "disallowed"], [[1369, 1369], "valid"], [[1370, 1375], "valid", [], "NV8"], [[1376, 1376], "disallowed"], [[1377, 1414], "valid"], [[1415, 1415], "mapped", [1381, 1410]], [[1416, 1416], "disallowed"], [[1417, 1417], "valid", [], "NV8"], [[1418, 1418], "valid", [], "NV8"], [[1419, 1420], "disallowed"], [[1421, 1422], "valid", [], "NV8"], [[1423, 1423], "valid", [], "NV8"], [[1424, 1424], "disallowed"], [[1425, 1441], "valid"], [[1442, 1442], "valid"], [[1443, 1455], "valid"], [[1456, 1465], "valid"], [[1466, 1466], "valid"], [[1467, 1469], "valid"], [[1470, 1470], "valid", [], "NV8"], [[1471, 1471], "valid"], [[1472, 1472], "valid", [], "NV8"], [[1473, 1474], "valid"], [[1475, 1475], "valid", [], "NV8"], [[1476, 1476], "valid"], [[1477, 1477], "valid"], [[1478, 1478], "valid", [], "NV8"], [[1479, 1479], "valid"], [[1480, 1487], "disallowed"], [[1488, 1514], "valid"], [[1515, 1519], "disallowed"], [[1520, 1524], "valid"], [[1525, 1535], "disallowed"], [[1536, 1539], "disallowed"], [[1540, 1540], "disallowed"], [[1541, 1541], "disallowed"], [[1542, 1546], "valid", [], "NV8"], [[1547, 1547], "valid", [], "NV8"], [[1548, 1548], "valid", [], "NV8"], [[1549, 1551], "valid", [], "NV8"], [[1552, 1557], "valid"], [[1558, 1562], "valid"], [[1563, 1563], "valid", [], "NV8"], [[1564, 1564], "disallowed"], [[1565, 1565], "disallowed"], [[1566, 1566], "valid", [], "NV8"], [[1567, 1567], "valid", [], "NV8"], [[1568, 1568], "valid"], [[1569, 1594], "valid"], [[1595, 1599], "valid"], [[1600, 1600], "valid", [], "NV8"], [[1601, 1618], "valid"], [[1619, 1621], "valid"], [[1622, 1624], "valid"], [[1625, 1630], "valid"], [[1631, 1631], "valid"], [[1632, 1641], "valid"], [[1642, 1645], "valid", [], "NV8"], [[1646, 1647], "valid"], [[1648, 1652], "valid"], [[1653, 1653], "mapped", [1575, 1652]], [[1654, 1654], "mapped", [1608, 1652]], [[1655, 1655], "mapped", [1735, 1652]], [[1656, 1656], "mapped", [1610, 1652]], [[1657, 1719], "valid"], [[1720, 1721], "valid"], [[1722, 1726], "valid"], [[1727, 1727], "valid"], [[1728, 1742], "valid"], [[1743, 1743], "valid"], [[1744, 1747], "valid"], [[1748, 1748], "valid", [], "NV8"], [[1749, 1756], "valid"], [[1757, 1757], "disallowed"], [[1758, 1758], "valid", [], "NV8"], [[1759, 1768], "valid"], [[1769, 1769], "valid", [], "NV8"], [[1770, 1773], "valid"], [[1774, 1775], "valid"], [[1776, 1785], "valid"], [[1786, 1790], "valid"], [[1791, 1791], "valid"], [[1792, 1805], "valid", [], "NV8"], [[1806, 1806], "disallowed"], [[1807, 1807], "disallowed"], [[1808, 1836], "valid"], [[1837, 1839], "valid"], [[1840, 1866], "valid"], [[1867, 1868], "disallowed"], [[1869, 1871], "valid"], [[1872, 1901], "valid"], [[1902, 1919], "valid"], [[1920, 1968], "valid"], [[1969, 1969], "valid"], [[1970, 1983], "disallowed"], [[1984, 2037], "valid"], [[2038, 2042], "valid", [], "NV8"], [[2043, 2047], "disallowed"], [[2048, 2093], "valid"], [[2094, 2095], "disallowed"], [[2096, 2110], "valid", [], "NV8"], [[2111, 2111], "disallowed"], [[2112, 2139], "valid"], [[2140, 2141], "disallowed"], [[2142, 2142], "valid", [], "NV8"], [[2143, 2207], "disallowed"], [[2208, 2208], "valid"], [[2209, 2209], "valid"], [[2210, 2220], "valid"], [[2221, 2226], "valid"], [[2227, 2228], "valid"], [[2229, 2274], "disallowed"], [[2275, 2275], "valid"], [[2276, 2302], "valid"], [[2303, 2303], "valid"], [[2304, 2304], "valid"], [[2305, 2307], "valid"], [[2308, 2308], "valid"], [[2309, 2361], "valid"], [[2362, 2363], "valid"], [[2364, 2381], "valid"], [[2382, 2382], "valid"], [[2383, 2383], "valid"], [[2384, 2388], "valid"], [[2389, 2389], "valid"], [[2390, 2391], "valid"], [[2392, 2392], "mapped", [2325, 2364]], [[2393, 2393], "mapped", [2326, 2364]], [[2394, 2394], "mapped", [2327, 2364]], [[2395, 2395], "mapped", [2332, 2364]], [[2396, 2396], "mapped", [2337, 2364]], [[2397, 2397], "mapped", [2338, 2364]], [[2398, 2398], "mapped", [2347, 2364]], [[2399, 2399], "mapped", [2351, 2364]], [[2400, 2403], "valid"], [[2404, 2405], "valid", [], "NV8"], [[2406, 2415], "valid"], [[2416, 2416], "valid", [], "NV8"], [[2417, 2418], "valid"], [[2419, 2423], "valid"], [[2424, 2424], "valid"], [[2425, 2426], "valid"], [[2427, 2428], "valid"], [[2429, 2429], "valid"], [[2430, 2431], "valid"], [[2432, 2432], "valid"], [[2433, 2435], "valid"], [[2436, 2436], "disallowed"], [[2437, 2444], "valid"], [[2445, 2446], "disallowed"], [[2447, 2448], "valid"], [[2449, 2450], "disallowed"], [[2451, 2472], "valid"], [[2473, 2473], "disallowed"], [[2474, 2480], "valid"], [[2481, 2481], "disallowed"], [[2482, 2482], "valid"], [[2483, 2485], "disallowed"], [[2486, 2489], "valid"], [[2490, 2491], "disallowed"], [[2492, 2492], "valid"], [[2493, 2493], "valid"], [[2494, 2500], "valid"], [[2501, 2502], "disallowed"], [[2503, 2504], "valid"], [[2505, 2506], "disallowed"], [[2507, 2509], "valid"], [[2510, 2510], "valid"], [[2511, 2518], "disallowed"], [[2519, 2519], "valid"], [[2520, 2523], "disallowed"], [[2524, 2524], "mapped", [2465, 2492]], [[2525, 2525], "mapped", [2466, 2492]], [[2526, 2526], "disallowed"], [[2527, 2527], "mapped", [2479, 2492]], [[2528, 2531], "valid"], [[2532, 2533], "disallowed"], [[2534, 2545], "valid"], [[2546, 2554], "valid", [], "NV8"], [[2555, 2555], "valid", [], "NV8"], [[2556, 2560], "disallowed"], [[2561, 2561], "valid"], [[2562, 2562], "valid"], [[2563, 2563], "valid"], [[2564, 2564], "disallowed"], [[2565, 2570], "valid"], [[2571, 2574], "disallowed"], [[2575, 2576], "valid"], [[2577, 2578], "disallowed"], [[2579, 2600], "valid"], [[2601, 2601], "disallowed"], [[2602, 2608], "valid"], [[2609, 2609], "disallowed"], [[2610, 2610], "valid"], [[2611, 2611], "mapped", [2610, 2620]], [[2612, 2612], "disallowed"], [[2613, 2613], "valid"], [[2614, 2614], "mapped", [2616, 2620]], [[2615, 2615], "disallowed"], [[2616, 2617], "valid"], [[2618, 2619], "disallowed"], [[2620, 2620], "valid"], [[2621, 2621], "disallowed"], [[2622, 2626], "valid"], [[2627, 2630], "disallowed"], [[2631, 2632], "valid"], [[2633, 2634], "disallowed"], [[2635, 2637], "valid"], [[2638, 2640], "disallowed"], [[2641, 2641], "valid"], [[2642, 2648], "disallowed"], [[2649, 2649], "mapped", [2582, 2620]], [[2650, 2650], "mapped", [2583, 2620]], [[2651, 2651], "mapped", [2588, 2620]], [[2652, 2652], "valid"], [[2653, 2653], "disallowed"], [[2654, 2654], "mapped", [2603, 2620]], [[2655, 2661], "disallowed"], [[2662, 2676], "valid"], [[2677, 2677], "valid"], [[2678, 2688], "disallowed"], [[2689, 2691], "valid"], [[2692, 2692], "disallowed"], [[2693, 2699], "valid"], [[2700, 2700], "valid"], [[2701, 2701], "valid"], [[2702, 2702], "disallowed"], [[2703, 2705], "valid"], [[2706, 2706], "disallowed"], [[2707, 2728], "valid"], [[2729, 2729], "disallowed"], [[2730, 2736], "valid"], [[2737, 2737], "disallowed"], [[2738, 2739], "valid"], [[2740, 2740], "disallowed"], [[2741, 2745], "valid"], [[2746, 2747], "disallowed"], [[2748, 2757], "valid"], [[2758, 2758], "disallowed"], [[2759, 2761], "valid"], [[2762, 2762], "disallowed"], [[2763, 2765], "valid"], [[2766, 2767], "disallowed"], [[2768, 2768], "valid"], [[2769, 2783], "disallowed"], [[2784, 2784], "valid"], [[2785, 2787], "valid"], [[2788, 2789], "disallowed"], [[2790, 2799], "valid"], [[2800, 2800], "valid", [], "NV8"], [[2801, 2801], "valid", [], "NV8"], [[2802, 2808], "disallowed"], [[2809, 2809], "valid"], [[2810, 2816], "disallowed"], [[2817, 2819], "valid"], [[2820, 2820], "disallowed"], [[2821, 2828], "valid"], [[2829, 2830], "disallowed"], [[2831, 2832], "valid"], [[2833, 2834], "disallowed"], [[2835, 2856], "valid"], [[2857, 2857], "disallowed"], [[2858, 2864], "valid"], [[2865, 2865], "disallowed"], [[2866, 2867], "valid"], [[2868, 2868], "disallowed"], [[2869, 2869], "valid"], [[2870, 2873], "valid"], [[2874, 2875], "disallowed"], [[2876, 2883], "valid"], [[2884, 2884], "valid"], [[2885, 2886], "disallowed"], [[2887, 2888], "valid"], [[2889, 2890], "disallowed"], [[2891, 2893], "valid"], [[2894, 2901], "disallowed"], [[2902, 2903], "valid"], [[2904, 2907], "disallowed"], [[2908, 2908], "mapped", [2849, 2876]], [[2909, 2909], "mapped", [2850, 2876]], [[2910, 2910], "disallowed"], [[2911, 2913], "valid"], [[2914, 2915], "valid"], [[2916, 2917], "disallowed"], [[2918, 2927], "valid"], [[2928, 2928], "valid", [], "NV8"], [[2929, 2929], "valid"], [[2930, 2935], "valid", [], "NV8"], [[2936, 2945], "disallowed"], [[2946, 2947], "valid"], [[2948, 2948], "disallowed"], [[2949, 2954], "valid"], [[2955, 2957], "disallowed"], [[2958, 2960], "valid"], [[2961, 2961], "disallowed"], [[2962, 2965], "valid"], [[2966, 2968], "disallowed"], [[2969, 2970], "valid"], [[2971, 2971], "disallowed"], [[2972, 2972], "valid"], [[2973, 2973], "disallowed"], [[2974, 2975], "valid"], [[2976, 2978], "disallowed"], [[2979, 2980], "valid"], [[2981, 2983], "disallowed"], [[2984, 2986], "valid"], [[2987, 2989], "disallowed"], [[2990, 2997], "valid"], [[2998, 2998], "valid"], [[2999, 3001], "valid"], [[3002, 3005], "disallowed"], [[3006, 3010], "valid"], [[3011, 3013], "disallowed"], [[3014, 3016], "valid"], [[3017, 3017], "disallowed"], [[3018, 3021], "valid"], [[3022, 3023], "disallowed"], [[3024, 3024], "valid"], [[3025, 3030], "disallowed"], [[3031, 3031], "valid"], [[3032, 3045], "disallowed"], [[3046, 3046], "valid"], [[3047, 3055], "valid"], [[3056, 3058], "valid", [], "NV8"], [[3059, 3066], "valid", [], "NV8"], [[3067, 3071], "disallowed"], [[3072, 3072], "valid"], [[3073, 3075], "valid"], [[3076, 3076], "disallowed"], [[3077, 3084], "valid"], [[3085, 3085], "disallowed"], [[3086, 3088], "valid"], [[3089, 3089], "disallowed"], [[3090, 3112], "valid"], [[3113, 3113], "disallowed"], [[3114, 3123], "valid"], [[3124, 3124], "valid"], [[3125, 3129], "valid"], [[3130, 3132], "disallowed"], [[3133, 3133], "valid"], [[3134, 3140], "valid"], [[3141, 3141], "disallowed"], [[3142, 3144], "valid"], [[3145, 3145], "disallowed"], [[3146, 3149], "valid"], [[3150, 3156], "disallowed"], [[3157, 3158], "valid"], [[3159, 3159], "disallowed"], [[3160, 3161], "valid"], [[3162, 3162], "valid"], [[3163, 3167], "disallowed"], [[3168, 3169], "valid"], [[3170, 3171], "valid"], [[3172, 3173], "disallowed"], [[3174, 3183], "valid"], [[3184, 3191], "disallowed"], [[3192, 3199], "valid", [], "NV8"], [[3200, 3200], "disallowed"], [[3201, 3201], "valid"], [[3202, 3203], "valid"], [[3204, 3204], "disallowed"], [[3205, 3212], "valid"], [[3213, 3213], "disallowed"], [[3214, 3216], "valid"], [[3217, 3217], "disallowed"], [[3218, 3240], "valid"], [[3241, 3241], "disallowed"], [[3242, 3251], "valid"], [[3252, 3252], "disallowed"], [[3253, 3257], "valid"], [[3258, 3259], "disallowed"], [[3260, 3261], "valid"], [[3262, 3268], "valid"], [[3269, 3269], "disallowed"], [[3270, 3272], "valid"], [[3273, 3273], "disallowed"], [[3274, 3277], "valid"], [[3278, 3284], "disallowed"], [[3285, 3286], "valid"], [[3287, 3293], "disallowed"], [[3294, 3294], "valid"], [[3295, 3295], "disallowed"], [[3296, 3297], "valid"], [[3298, 3299], "valid"], [[3300, 3301], "disallowed"], [[3302, 3311], "valid"], [[3312, 3312], "disallowed"], [[3313, 3314], "valid"], [[3315, 3328], "disallowed"], [[3329, 3329], "valid"], [[3330, 3331], "valid"], [[3332, 3332], "disallowed"], [[3333, 3340], "valid"], [[3341, 3341], "disallowed"], [[3342, 3344], "valid"], [[3345, 3345], "disallowed"], [[3346, 3368], "valid"], [[3369, 3369], "valid"], [[3370, 3385], "valid"], [[3386, 3386], "valid"], [[3387, 3388], "disallowed"], [[3389, 3389], "valid"], [[3390, 3395], "valid"], [[3396, 3396], "valid"], [[3397, 3397], "disallowed"], [[3398, 3400], "valid"], [[3401, 3401], "disallowed"], [[3402, 3405], "valid"], [[3406, 3406], "valid"], [[3407, 3414], "disallowed"], [[3415, 3415], "valid"], [[3416, 3422], "disallowed"], [[3423, 3423], "valid"], [[3424, 3425], "valid"], [[3426, 3427], "valid"], [[3428, 3429], "disallowed"], [[3430, 3439], "valid"], [[3440, 3445], "valid", [], "NV8"], [[3446, 3448], "disallowed"], [[3449, 3449], "valid", [], "NV8"], [[3450, 3455], "valid"], [[3456, 3457], "disallowed"], [[3458, 3459], "valid"], [[3460, 3460], "disallowed"], [[3461, 3478], "valid"], [[3479, 3481], "disallowed"], [[3482, 3505], "valid"], [[3506, 3506], "disallowed"], [[3507, 3515], "valid"], [[3516, 3516], "disallowed"], [[3517, 3517], "valid"], [[3518, 3519], "disallowed"], [[3520, 3526], "valid"], [[3527, 3529], "disallowed"], [[3530, 3530], "valid"], [[3531, 3534], "disallowed"], [[3535, 3540], "valid"], [[3541, 3541], "disallowed"], [[3542, 3542], "valid"], [[3543, 3543], "disallowed"], [[3544, 3551], "valid"], [[3552, 3557], "disallowed"], [[3558, 3567], "valid"], [[3568, 3569], "disallowed"], [[3570, 3571], "valid"], [[3572, 3572], "valid", [], "NV8"], [[3573, 3584], "disallowed"], [[3585, 3634], "valid"], [[3635, 3635], "mapped", [3661, 3634]], [[3636, 3642], "valid"], [[3643, 3646], "disallowed"], [[3647, 3647], "valid", [], "NV8"], [[3648, 3662], "valid"], [[3663, 3663], "valid", [], "NV8"], [[3664, 3673], "valid"], [[3674, 3675], "valid", [], "NV8"], [[3676, 3712], "disallowed"], [[3713, 3714], "valid"], [[3715, 3715], "disallowed"], [[3716, 3716], "valid"], [[3717, 3718], "disallowed"], [[3719, 3720], "valid"], [[3721, 3721], "disallowed"], [[3722, 3722], "valid"], [[3723, 3724], "disallowed"], [[3725, 3725], "valid"], [[3726, 3731], "disallowed"], [[3732, 3735], "valid"], [[3736, 3736], "disallowed"], [[3737, 3743], "valid"], [[3744, 3744], "disallowed"], [[3745, 3747], "valid"], [[3748, 3748], "disallowed"], [[3749, 3749], "valid"], [[3750, 3750], "disallowed"], [[3751, 3751], "valid"], [[3752, 3753], "disallowed"], [[3754, 3755], "valid"], [[3756, 3756], "disallowed"], [[3757, 3762], "valid"], [[3763, 3763], "mapped", [3789, 3762]], [[3764, 3769], "valid"], [[3770, 3770], "disallowed"], [[3771, 3773], "valid"], [[3774, 3775], "disallowed"], [[3776, 3780], "valid"], [[3781, 3781], "disallowed"], [[3782, 3782], "valid"], [[3783, 3783], "disallowed"], [[3784, 3789], "valid"], [[3790, 3791], "disallowed"], [[3792, 3801], "valid"], [[3802, 3803], "disallowed"], [[3804, 3804], "mapped", [3755, 3737]], [[3805, 3805], "mapped", [3755, 3745]], [[3806, 3807], "valid"], [[3808, 3839], "disallowed"], [[3840, 3840], "valid"], [[3841, 3850], "valid", [], "NV8"], [[3851, 3851], "valid"], [[3852, 3852], "mapped", [3851]], [[3853, 3863], "valid", [], "NV8"], [[3864, 3865], "valid"], [[3866, 3871], "valid", [], "NV8"], [[3872, 3881], "valid"], [[3882, 3892], "valid", [], "NV8"], [[3893, 3893], "valid"], [[3894, 3894], "valid", [], "NV8"], [[3895, 3895], "valid"], [[3896, 3896], "valid", [], "NV8"], [[3897, 3897], "valid"], [[3898, 3901], "valid", [], "NV8"], [[3902, 3906], "valid"], [[3907, 3907], "mapped", [3906, 4023]], [[3908, 3911], "valid"], [[3912, 3912], "disallowed"], [[3913, 3916], "valid"], [[3917, 3917], "mapped", [3916, 4023]], [[3918, 3921], "valid"], [[3922, 3922], "mapped", [3921, 4023]], [[3923, 3926], "valid"], [[3927, 3927], "mapped", [3926, 4023]], [[3928, 3931], "valid"], [[3932, 3932], "mapped", [3931, 4023]], [[3933, 3944], "valid"], [[3945, 3945], "mapped", [3904, 4021]], [[3946, 3946], "valid"], [[3947, 3948], "valid"], [[3949, 3952], "disallowed"], [[3953, 3954], "valid"], [[3955, 3955], "mapped", [3953, 3954]], [[3956, 3956], "valid"], [[3957, 3957], "mapped", [3953, 3956]], [[3958, 3958], "mapped", [4018, 3968]], [[3959, 3959], "mapped", [4018, 3953, 3968]], [[3960, 3960], "mapped", [4019, 3968]], [[3961, 3961], "mapped", [4019, 3953, 3968]], [[3962, 3968], "valid"], [[3969, 3969], "mapped", [3953, 3968]], [[3970, 3972], "valid"], [[3973, 3973], "valid", [], "NV8"], [[3974, 3979], "valid"], [[3980, 3983], "valid"], [[3984, 3986], "valid"], [[3987, 3987], "mapped", [3986, 4023]], [[3988, 3989], "valid"], [[3990, 3990], "valid"], [[3991, 3991], "valid"], [[3992, 3992], "disallowed"], [[3993, 3996], "valid"], [[3997, 3997], "mapped", [3996, 4023]], [[3998, 4001], "valid"], [[4002, 4002], "mapped", [4001, 4023]], [[4003, 4006], "valid"], [[4007, 4007], "mapped", [4006, 4023]], [[4008, 4011], "valid"], [[4012, 4012], "mapped", [4011, 4023]], [[4013, 4013], "valid"], [[4014, 4016], "valid"], [[4017, 4023], "valid"], [[4024, 4024], "valid"], [[4025, 4025], "mapped", [3984, 4021]], [[4026, 4028], "valid"], [[4029, 4029], "disallowed"], [[4030, 4037], "valid", [], "NV8"], [[4038, 4038], "valid"], [[4039, 4044], "valid", [], "NV8"], [[4045, 4045], "disallowed"], [[4046, 4046], "valid", [], "NV8"], [[4047, 4047], "valid", [], "NV8"], [[4048, 4049], "valid", [], "NV8"], [[4050, 4052], "valid", [], "NV8"], [[4053, 4056], "valid", [], "NV8"], [[4057, 4058], "valid", [], "NV8"], [[4059, 4095], "disallowed"], [[4096, 4129], "valid"], [[4130, 4130], "valid"], [[4131, 4135], "valid"], [[4136, 4136], "valid"], [[4137, 4138], "valid"], [[4139, 4139], "valid"], [[4140, 4146], "valid"], [[4147, 4149], "valid"], [[4150, 4153], "valid"], [[4154, 4159], "valid"], [[4160, 4169], "valid"], [[4170, 4175], "valid", [], "NV8"], [[4176, 4185], "valid"], [[4186, 4249], "valid"], [[4250, 4253], "valid"], [[4254, 4255], "valid", [], "NV8"], [[4256, 4293], "disallowed"], [[4294, 4294], "disallowed"], [[4295, 4295], "mapped", [11559]], [[4296, 4300], "disallowed"], [[4301, 4301], "mapped", [11565]], [[4302, 4303], "disallowed"], [[4304, 4342], "valid"], [[4343, 4344], "valid"], [[4345, 4346], "valid"], [[4347, 4347], "valid", [], "NV8"], [[4348, 4348], "mapped", [4316]], [[4349, 4351], "valid"], [[4352, 4441], "valid", [], "NV8"], [[4442, 4446], "valid", [], "NV8"], [[4447, 4448], "disallowed"], [[4449, 4514], "valid", [], "NV8"], [[4515, 4519], "valid", [], "NV8"], [[4520, 4601], "valid", [], "NV8"], [[4602, 4607], "valid", [], "NV8"], [[4608, 4614], "valid"], [[4615, 4615], "valid"], [[4616, 4678], "valid"], [[4679, 4679], "valid"], [[4680, 4680], "valid"], [[4681, 4681], "disallowed"], [[4682, 4685], "valid"], [[4686, 4687], "disallowed"], [[4688, 4694], "valid"], [[4695, 4695], "disallowed"], [[4696, 4696], "valid"], [[4697, 4697], "disallowed"], [[4698, 4701], "valid"], [[4702, 4703], "disallowed"], [[4704, 4742], "valid"], [[4743, 4743], "valid"], [[4744, 4744], "valid"], [[4745, 4745], "disallowed"], [[4746, 4749], "valid"], [[4750, 4751], "disallowed"], [[4752, 4782], "valid"], [[4783, 4783], "valid"], [[4784, 4784], "valid"], [[4785, 4785], "disallowed"], [[4786, 4789], "valid"], [[4790, 4791], "disallowed"], [[4792, 4798], "valid"], [[4799, 4799], "disallowed"], [[4800, 4800], "valid"], [[4801, 4801], "disallowed"], [[4802, 4805], "valid"], [[4806, 4807], "disallowed"], [[4808, 4814], "valid"], [[4815, 4815], "valid"], [[4816, 4822], "valid"], [[4823, 4823], "disallowed"], [[4824, 4846], "valid"], [[4847, 4847], "valid"], [[4848, 4878], "valid"], [[4879, 4879], "valid"], [[4880, 4880], "valid"], [[4881, 4881], "disallowed"], [[4882, 4885], "valid"], [[4886, 4887], "disallowed"], [[4888, 4894], "valid"], [[4895, 4895], "valid"], [[4896, 4934], "valid"], [[4935, 4935], "valid"], [[4936, 4954], "valid"], [[4955, 4956], "disallowed"], [[4957, 4958], "valid"], [[4959, 4959], "valid"], [[4960, 4960], "valid", [], "NV8"], [[4961, 4988], "valid", [], "NV8"], [[4989, 4991], "disallowed"], [[4992, 5007], "valid"], [[5008, 5017], "valid", [], "NV8"], [[5018, 5023], "disallowed"], [[5024, 5108], "valid"], [[5109, 5109], "valid"], [[5110, 5111], "disallowed"], [[5112, 5112], "mapped", [5104]], [[5113, 5113], "mapped", [5105]], [[5114, 5114], "mapped", [5106]], [[5115, 5115], "mapped", [5107]], [[5116, 5116], "mapped", [5108]], [[5117, 5117], "mapped", [5109]], [[5118, 5119], "disallowed"], [[5120, 5120], "valid", [], "NV8"], [[5121, 5740], "valid"], [[5741, 5742], "valid", [], "NV8"], [[5743, 5750], "valid"], [[5751, 5759], "valid"], [[5760, 5760], "disallowed"], [[5761, 5786], "valid"], [[5787, 5788], "valid", [], "NV8"], [[5789, 5791], "disallowed"], [[5792, 5866], "valid"], [[5867, 5872], "valid", [], "NV8"], [[5873, 5880], "valid"], [[5881, 5887], "disallowed"], [[5888, 5900], "valid"], [[5901, 5901], "disallowed"], [[5902, 5908], "valid"], [[5909, 5919], "disallowed"], [[5920, 5940], "valid"], [[5941, 5942], "valid", [], "NV8"], [[5943, 5951], "disallowed"], [[5952, 5971], "valid"], [[5972, 5983], "disallowed"], [[5984, 5996], "valid"], [[5997, 5997], "disallowed"], [[5998, 6e3], "valid"], [[6001, 6001], "disallowed"], [[6002, 6003], "valid"], [[6004, 6015], "disallowed"], [[6016, 6067], "valid"], [[6068, 6069], "disallowed"], [[6070, 6099], "valid"], [[6100, 6102], "valid", [], "NV8"], [[6103, 6103], "valid"], [[6104, 6107], "valid", [], "NV8"], [[6108, 6108], "valid"], [[6109, 6109], "valid"], [[6110, 6111], "disallowed"], [[6112, 6121], "valid"], [[6122, 6127], "disallowed"], [[6128, 6137], "valid", [], "NV8"], [[6138, 6143], "disallowed"], [[6144, 6149], "valid", [], "NV8"], [[6150, 6150], "disallowed"], [[6151, 6154], "valid", [], "NV8"], [[6155, 6157], "ignored"], [[6158, 6158], "disallowed"], [[6159, 6159], "disallowed"], [[6160, 6169], "valid"], [[6170, 6175], "disallowed"], [[6176, 6263], "valid"], [[6264, 6271], "disallowed"], [[6272, 6313], "valid"], [[6314, 6314], "valid"], [[6315, 6319], "disallowed"], [[6320, 6389], "valid"], [[6390, 6399], "disallowed"], [[6400, 6428], "valid"], [[6429, 6430], "valid"], [[6431, 6431], "disallowed"], [[6432, 6443], "valid"], [[6444, 6447], "disallowed"], [[6448, 6459], "valid"], [[6460, 6463], "disallowed"], [[6464, 6464], "valid", [], "NV8"], [[6465, 6467], "disallowed"], [[6468, 6469], "valid", [], "NV8"], [[6470, 6509], "valid"], [[6510, 6511], "disallowed"], [[6512, 6516], "valid"], [[6517, 6527], "disallowed"], [[6528, 6569], "valid"], [[6570, 6571], "valid"], [[6572, 6575], "disallowed"], [[6576, 6601], "valid"], [[6602, 6607], "disallowed"], [[6608, 6617], "valid"], [[6618, 6618], "valid", [], "XV8"], [[6619, 6621], "disallowed"], [[6622, 6623], "valid", [], "NV8"], [[6624, 6655], "valid", [], "NV8"], [[6656, 6683], "valid"], [[6684, 6685], "disallowed"], [[6686, 6687], "valid", [], "NV8"], [[6688, 6750], "valid"], [[6751, 6751], "disallowed"], [[6752, 6780], "valid"], [[6781, 6782], "disallowed"], [[6783, 6793], "valid"], [[6794, 6799], "disallowed"], [[6800, 6809], "valid"], [[6810, 6815], "disallowed"], [[6816, 6822], "valid", [], "NV8"], [[6823, 6823], "valid"], [[6824, 6829], "valid", [], "NV8"], [[6830, 6831], "disallowed"], [[6832, 6845], "valid"], [[6846, 6846], "valid", [], "NV8"], [[6847, 6911], "disallowed"], [[6912, 6987], "valid"], [[6988, 6991], "disallowed"], [[6992, 7001], "valid"], [[7002, 7018], "valid", [], "NV8"], [[7019, 7027], "valid"], [[7028, 7036], "valid", [], "NV8"], [[7037, 7039], "disallowed"], [[7040, 7082], "valid"], [[7083, 7085], "valid"], [[7086, 7097], "valid"], [[7098, 7103], "valid"], [[7104, 7155], "valid"], [[7156, 7163], "disallowed"], [[7164, 7167], "valid", [], "NV8"], [[7168, 7223], "valid"], [[7224, 7226], "disallowed"], [[7227, 7231], "valid", [], "NV8"], [[7232, 7241], "valid"], [[7242, 7244], "disallowed"], [[7245, 7293], "valid"], [[7294, 7295], "valid", [], "NV8"], [[7296, 7359], "disallowed"], [[7360, 7367], "valid", [], "NV8"], [[7368, 7375], "disallowed"], [[7376, 7378], "valid"], [[7379, 7379], "valid", [], "NV8"], [[7380, 7410], "valid"], [[7411, 7414], "valid"], [[7415, 7415], "disallowed"], [[7416, 7417], "valid"], [[7418, 7423], "disallowed"], [[7424, 7467], "valid"], [[7468, 7468], "mapped", [97]], [[7469, 7469], "mapped", [230]], [[7470, 7470], "mapped", [98]], [[7471, 7471], "valid"], [[7472, 7472], "mapped", [100]], [[7473, 7473], "mapped", [101]], [[7474, 7474], "mapped", [477]], [[7475, 7475], "mapped", [103]], [[7476, 7476], "mapped", [104]], [[7477, 7477], "mapped", [105]], [[7478, 7478], "mapped", [106]], [[7479, 7479], "mapped", [107]], [[7480, 7480], "mapped", [108]], [[7481, 7481], "mapped", [109]], [[7482, 7482], "mapped", [110]], [[7483, 7483], "valid"], [[7484, 7484], "mapped", [111]], [[7485, 7485], "mapped", [547]], [[7486, 7486], "mapped", [112]], [[7487, 7487], "mapped", [114]], [[7488, 7488], "mapped", [116]], [[7489, 7489], "mapped", [117]], [[7490, 7490], "mapped", [119]], [[7491, 7491], "mapped", [97]], [[7492, 7492], "mapped", [592]], [[7493, 7493], "mapped", [593]], [[7494, 7494], "mapped", [7426]], [[7495, 7495], "mapped", [98]], [[7496, 7496], "mapped", [100]], [[7497, 7497], "mapped", [101]], [[7498, 7498], "mapped", [601]], [[7499, 7499], "mapped", [603]], [[7500, 7500], "mapped", [604]], [[7501, 7501], "mapped", [103]], [[7502, 7502], "valid"], [[7503, 7503], "mapped", [107]], [[7504, 7504], "mapped", [109]], [[7505, 7505], "mapped", [331]], [[7506, 7506], "mapped", [111]], [[7507, 7507], "mapped", [596]], [[7508, 7508], "mapped", [7446]], [[7509, 7509], "mapped", [7447]], [[7510, 7510], "mapped", [112]], [[7511, 7511], "mapped", [116]], [[7512, 7512], "mapped", [117]], [[7513, 7513], "mapped", [7453]], [[7514, 7514], "mapped", [623]], [[7515, 7515], "mapped", [118]], [[7516, 7516], "mapped", [7461]], [[7517, 7517], "mapped", [946]], [[7518, 7518], "mapped", [947]], [[7519, 7519], "mapped", [948]], [[7520, 7520], "mapped", [966]], [[7521, 7521], "mapped", [967]], [[7522, 7522], "mapped", [105]], [[7523, 7523], "mapped", [114]], [[7524, 7524], "mapped", [117]], [[7525, 7525], "mapped", [118]], [[7526, 7526], "mapped", [946]], [[7527, 7527], "mapped", [947]], [[7528, 7528], "mapped", [961]], [[7529, 7529], "mapped", [966]], [[7530, 7530], "mapped", [967]], [[7531, 7531], "valid"], [[7532, 7543], "valid"], [[7544, 7544], "mapped", [1085]], [[7545, 7578], "valid"], [[7579, 7579], "mapped", [594]], [[7580, 7580], "mapped", [99]], [[7581, 7581], "mapped", [597]], [[7582, 7582], "mapped", [240]], [[7583, 7583], "mapped", [604]], [[7584, 7584], "mapped", [102]], [[7585, 7585], "mapped", [607]], [[7586, 7586], "mapped", [609]], [[7587, 7587], "mapped", [613]], [[7588, 7588], "mapped", [616]], [[7589, 7589], "mapped", [617]], [[7590, 7590], "mapped", [618]], [[7591, 7591], "mapped", [7547]], [[7592, 7592], "mapped", [669]], [[7593, 7593], "mapped", [621]], [[7594, 7594], "mapped", [7557]], [[7595, 7595], "mapped", [671]], [[7596, 7596], "mapped", [625]], [[7597, 7597], "mapped", [624]], [[7598, 7598], "mapped", [626]], [[7599, 7599], "mapped", [627]], [[7600, 7600], "mapped", [628]], [[7601, 7601], "mapped", [629]], [[7602, 7602], "mapped", [632]], [[7603, 7603], "mapped", [642]], [[7604, 7604], "mapped", [643]], [[7605, 7605], "mapped", [427]], [[7606, 7606], "mapped", [649]], [[7607, 7607], "mapped", [650]], [[7608, 7608], "mapped", [7452]], [[7609, 7609], "mapped", [651]], [[7610, 7610], "mapped", [652]], [[7611, 7611], "mapped", [122]], [[7612, 7612], "mapped", [656]], [[7613, 7613], "mapped", [657]], [[7614, 7614], "mapped", [658]], [[7615, 7615], "mapped", [952]], [[7616, 7619], "valid"], [[7620, 7626], "valid"], [[7627, 7654], "valid"], [[7655, 7669], "valid"], [[7670, 7675], "disallowed"], [[7676, 7676], "valid"], [[7677, 7677], "valid"], [[7678, 7679], "valid"], [[7680, 7680], "mapped", [7681]], [[7681, 7681], "valid"], [[7682, 7682], "mapped", [7683]], [[7683, 7683], "valid"], [[7684, 7684], "mapped", [7685]], [[7685, 7685], "valid"], [[7686, 7686], "mapped", [7687]], [[7687, 7687], "valid"], [[7688, 7688], "mapped", [7689]], [[7689, 7689], "valid"], [[7690, 7690], "mapped", [7691]], [[7691, 7691], "valid"], [[7692, 7692], "mapped", [7693]], [[7693, 7693], "valid"], [[7694, 7694], "mapped", [7695]], [[7695, 7695], "valid"], [[7696, 7696], "mapped", [7697]], [[7697, 7697], "valid"], [[7698, 7698], "mapped", [7699]], [[7699, 7699], "valid"], [[7700, 7700], "mapped", [7701]], [[7701, 7701], "valid"], [[7702, 7702], "mapped", [7703]], [[7703, 7703], "valid"], [[7704, 7704], "mapped", [7705]], [[7705, 7705], "valid"], [[7706, 7706], "mapped", [7707]], [[7707, 7707], "valid"], [[7708, 7708], "mapped", [7709]], [[7709, 7709], "valid"], [[7710, 7710], "mapped", [7711]], [[7711, 7711], "valid"], [[7712, 7712], "mapped", [7713]], [[7713, 7713], "valid"], [[7714, 7714], "mapped", [7715]], [[7715, 7715], "valid"], [[7716, 7716], "mapped", [7717]], [[7717, 7717], "valid"], [[7718, 7718], "mapped", [7719]], [[7719, 7719], "valid"], [[7720, 7720], "mapped", [7721]], [[7721, 7721], "valid"], [[7722, 7722], "mapped", [7723]], [[7723, 7723], "valid"], [[7724, 7724], "mapped", [7725]], [[7725, 7725], "valid"], [[7726, 7726], "mapped", [7727]], [[7727, 7727], "valid"], [[7728, 7728], "mapped", [7729]], [[7729, 7729], "valid"], [[7730, 7730], "mapped", [7731]], [[7731, 7731], "valid"], [[7732, 7732], "mapped", [7733]], [[7733, 7733], "valid"], [[7734, 7734], "mapped", [7735]], [[7735, 7735], "valid"], [[7736, 7736], "mapped", [7737]], [[7737, 7737], "valid"], [[7738, 7738], "mapped", [7739]], [[7739, 7739], "valid"], [[7740, 7740], "mapped", [7741]], [[7741, 7741], "valid"], [[7742, 7742], "mapped", [7743]], [[7743, 7743], "valid"], [[7744, 7744], "mapped", [7745]], [[7745, 7745], "valid"], [[7746, 7746], "mapped", [7747]], [[7747, 7747], "valid"], [[7748, 7748], "mapped", [7749]], [[7749, 7749], "valid"], [[7750, 7750], "mapped", [7751]], [[7751, 7751], "valid"], [[7752, 7752], "mapped", [7753]], [[7753, 7753], "valid"], [[7754, 7754], "mapped", [7755]], [[7755, 7755], "valid"], [[7756, 7756], "mapped", [7757]], [[7757, 7757], "valid"], [[7758, 7758], "mapped", [7759]], [[7759, 7759], "valid"], [[7760, 7760], "mapped", [7761]], [[7761, 7761], "valid"], [[7762, 7762], "mapped", [7763]], [[7763, 7763], "valid"], [[7764, 7764], "mapped", [7765]], [[7765, 7765], "valid"], [[7766, 7766], "mapped", [7767]], [[7767, 7767], "valid"], [[7768, 7768], "mapped", [7769]], [[7769, 7769], "valid"], [[7770, 7770], "mapped", [7771]], [[7771, 7771], "valid"], [[7772, 7772], "mapped", [7773]], [[7773, 7773], "valid"], [[7774, 7774], "mapped", [7775]], [[7775, 7775], "valid"], [[7776, 7776], "mapped", [7777]], [[7777, 7777], "valid"], [[7778, 7778], "mapped", [7779]], [[7779, 7779], "valid"], [[7780, 7780], "mapped", [7781]], [[7781, 7781], "valid"], [[7782, 7782], "mapped", [7783]], [[7783, 7783], "valid"], [[7784, 7784], "mapped", [7785]], [[7785, 7785], "valid"], [[7786, 7786], "mapped", [7787]], [[7787, 7787], "valid"], [[7788, 7788], "mapped", [7789]], [[7789, 7789], "valid"], [[7790, 7790], "mapped", [7791]], [[7791, 7791], "valid"], [[7792, 7792], "mapped", [7793]], [[7793, 7793], "valid"], [[7794, 7794], "mapped", [7795]], [[7795, 7795], "valid"], [[7796, 7796], "mapped", [7797]], [[7797, 7797], "valid"], [[7798, 7798], "mapped", [7799]], [[7799, 7799], "valid"], [[7800, 7800], "mapped", [7801]], [[7801, 7801], "valid"], [[7802, 7802], "mapped", [7803]], [[7803, 7803], "valid"], [[7804, 7804], "mapped", [7805]], [[7805, 7805], "valid"], [[7806, 7806], "mapped", [7807]], [[7807, 7807], "valid"], [[7808, 7808], "mapped", [7809]], [[7809, 7809], "valid"], [[7810, 7810], "mapped", [7811]], [[7811, 7811], "valid"], [[7812, 7812], "mapped", [7813]], [[7813, 7813], "valid"], [[7814, 7814], "mapped", [7815]], [[7815, 7815], "valid"], [[7816, 7816], "mapped", [7817]], [[7817, 7817], "valid"], [[7818, 7818], "mapped", [7819]], [[7819, 7819], "valid"], [[7820, 7820], "mapped", [7821]], [[7821, 7821], "valid"], [[7822, 7822], "mapped", [7823]], [[7823, 7823], "valid"], [[7824, 7824], "mapped", [7825]], [[7825, 7825], "valid"], [[7826, 7826], "mapped", [7827]], [[7827, 7827], "valid"], [[7828, 7828], "mapped", [7829]], [[7829, 7833], "valid"], [[7834, 7834], "mapped", [97, 702]], [[7835, 7835], "mapped", [7777]], [[7836, 7837], "valid"], [[7838, 7838], "mapped", [115, 115]], [[7839, 7839], "valid"], [[7840, 7840], "mapped", [7841]], [[7841, 7841], "valid"], [[7842, 7842], "mapped", [7843]], [[7843, 7843], "valid"], [[7844, 7844], "mapped", [7845]], [[7845, 7845], "valid"], [[7846, 7846], "mapped", [7847]], [[7847, 7847], "valid"], [[7848, 7848], "mapped", [7849]], [[7849, 7849], "valid"], [[7850, 7850], "mapped", [7851]], [[7851, 7851], "valid"], [[7852, 7852], "mapped", [7853]], [[7853, 7853], "valid"], [[7854, 7854], "mapped", [7855]], [[7855, 7855], "valid"], [[7856, 7856], "mapped", [7857]], [[7857, 7857], "valid"], [[7858, 7858], "mapped", [7859]], [[7859, 7859], "valid"], [[7860, 7860], "mapped", [7861]], [[7861, 7861], "valid"], [[7862, 7862], "mapped", [7863]], [[7863, 7863], "valid"], [[7864, 7864], "mapped", [7865]], [[7865, 7865], "valid"], [[7866, 7866], "mapped", [7867]], [[7867, 7867], "valid"], [[7868, 7868], "mapped", [7869]], [[7869, 7869], "valid"], [[7870, 7870], "mapped", [7871]], [[7871, 7871], "valid"], [[7872, 7872], "mapped", [7873]], [[7873, 7873], "valid"], [[7874, 7874], "mapped", [7875]], [[7875, 7875], "valid"], [[7876, 7876], "mapped", [7877]], [[7877, 7877], "valid"], [[7878, 7878], "mapped", [7879]], [[7879, 7879], "valid"], [[7880, 7880], "mapped", [7881]], [[7881, 7881], "valid"], [[7882, 7882], "mapped", [7883]], [[7883, 7883], "valid"], [[7884, 7884], "mapped", [7885]], [[7885, 7885], "valid"], [[7886, 7886], "mapped", [7887]], [[7887, 7887], "valid"], [[7888, 7888], "mapped", [7889]], [[7889, 7889], "valid"], [[7890, 7890], "mapped", [7891]], [[7891, 7891], "valid"], [[7892, 7892], "mapped", [7893]], [[7893, 7893], "valid"], [[7894, 7894], "mapped", [7895]], [[7895, 7895], "valid"], [[7896, 7896], "mapped", [7897]], [[7897, 7897], "valid"], [[7898, 7898], "mapped", [7899]], [[7899, 7899], "valid"], [[7900, 7900], "mapped", [7901]], [[7901, 7901], "valid"], [[7902, 7902], "mapped", [7903]], [[7903, 7903], "valid"], [[7904, 7904], "mapped", [7905]], [[7905, 7905], "valid"], [[7906, 7906], "mapped", [7907]], [[7907, 7907], "valid"], [[7908, 7908], "mapped", [7909]], [[7909, 7909], "valid"], [[7910, 7910], "mapped", [7911]], [[7911, 7911], "valid"], [[7912, 7912], "mapped", [7913]], [[7913, 7913], "valid"], [[7914, 7914], "mapped", [7915]], [[7915, 7915], "valid"], [[7916, 7916], "mapped", [7917]], [[7917, 7917], "valid"], [[7918, 7918], "mapped", [7919]], [[7919, 7919], "valid"], [[7920, 7920], "mapped", [7921]], [[7921, 7921], "valid"], [[7922, 7922], "mapped", [7923]], [[7923, 7923], "valid"], [[7924, 7924], "mapped", [7925]], [[7925, 7925], "valid"], [[7926, 7926], "mapped", [7927]], [[7927, 7927], "valid"], [[7928, 7928], "mapped", [7929]], [[7929, 7929], "valid"], [[7930, 7930], "mapped", [7931]], [[7931, 7931], "valid"], [[7932, 7932], "mapped", [7933]], [[7933, 7933], "valid"], [[7934, 7934], "mapped", [7935]], [[7935, 7935], "valid"], [[7936, 7943], "valid"], [[7944, 7944], "mapped", [7936]], [[7945, 7945], "mapped", [7937]], [[7946, 7946], "mapped", [7938]], [[7947, 7947], "mapped", [7939]], [[7948, 7948], "mapped", [7940]], [[7949, 7949], "mapped", [7941]], [[7950, 7950], "mapped", [7942]], [[7951, 7951], "mapped", [7943]], [[7952, 7957], "valid"], [[7958, 7959], "disallowed"], [[7960, 7960], "mapped", [7952]], [[7961, 7961], "mapped", [7953]], [[7962, 7962], "mapped", [7954]], [[7963, 7963], "mapped", [7955]], [[7964, 7964], "mapped", [7956]], [[7965, 7965], "mapped", [7957]], [[7966, 7967], "disallowed"], [[7968, 7975], "valid"], [[7976, 7976], "mapped", [7968]], [[7977, 7977], "mapped", [7969]], [[7978, 7978], "mapped", [7970]], [[7979, 7979], "mapped", [7971]], [[7980, 7980], "mapped", [7972]], [[7981, 7981], "mapped", [7973]], [[7982, 7982], "mapped", [7974]], [[7983, 7983], "mapped", [7975]], [[7984, 7991], "valid"], [[7992, 7992], "mapped", [7984]], [[7993, 7993], "mapped", [7985]], [[7994, 7994], "mapped", [7986]], [[7995, 7995], "mapped", [7987]], [[7996, 7996], "mapped", [7988]], [[7997, 7997], "mapped", [7989]], [[7998, 7998], "mapped", [7990]], [[7999, 7999], "mapped", [7991]], [[8e3, 8005], "valid"], [[8006, 8007], "disallowed"], [[8008, 8008], "mapped", [8e3]], [[8009, 8009], "mapped", [8001]], [[8010, 8010], "mapped", [8002]], [[8011, 8011], "mapped", [8003]], [[8012, 8012], "mapped", [8004]], [[8013, 8013], "mapped", [8005]], [[8014, 8015], "disallowed"], [[8016, 8023], "valid"], [[8024, 8024], "disallowed"], [[8025, 8025], "mapped", [8017]], [[8026, 8026], "disallowed"], [[8027, 8027], "mapped", [8019]], [[8028, 8028], "disallowed"], [[8029, 8029], "mapped", [8021]], [[8030, 8030], "disallowed"], [[8031, 8031], "mapped", [8023]], [[8032, 8039], "valid"], [[8040, 8040], "mapped", [8032]], [[8041, 8041], "mapped", [8033]], [[8042, 8042], "mapped", [8034]], [[8043, 8043], "mapped", [8035]], [[8044, 8044], "mapped", [8036]], [[8045, 8045], "mapped", [8037]], [[8046, 8046], "mapped", [8038]], [[8047, 8047], "mapped", [8039]], [[8048, 8048], "valid"], [[8049, 8049], "mapped", [940]], [[8050, 8050], "valid"], [[8051, 8051], "mapped", [941]], [[8052, 8052], "valid"], [[8053, 8053], "mapped", [942]], [[8054, 8054], "valid"], [[8055, 8055], "mapped", [943]], [[8056, 8056], "valid"], [[8057, 8057], "mapped", [972]], [[8058, 8058], "valid"], [[8059, 8059], "mapped", [973]], [[8060, 8060], "valid"], [[8061, 8061], "mapped", [974]], [[8062, 8063], "disallowed"], [[8064, 8064], "mapped", [7936, 953]], [[8065, 8065], "mapped", [7937, 953]], [[8066, 8066], "mapped", [7938, 953]], [[8067, 8067], "mapped", [7939, 953]], [[8068, 8068], "mapped", [7940, 953]], [[8069, 8069], "mapped", [7941, 953]], [[8070, 8070], "mapped", [7942, 953]], [[8071, 8071], "mapped", [7943, 953]], [[8072, 8072], "mapped", [7936, 953]], [[8073, 8073], "mapped", [7937, 953]], [[8074, 8074], "mapped", [7938, 953]], [[8075, 8075], "mapped", [7939, 953]], [[8076, 8076], "mapped", [7940, 953]], [[8077, 8077], "mapped", [7941, 953]], [[8078, 8078], "mapped", [7942, 953]], [[8079, 8079], "mapped", [7943, 953]], [[8080, 8080], "mapped", [7968, 953]], [[8081, 8081], "mapped", [7969, 953]], [[8082, 8082], "mapped", [7970, 953]], [[8083, 8083], "mapped", [7971, 953]], [[8084, 8084], "mapped", [7972, 953]], [[8085, 8085], "mapped", [7973, 953]], [[8086, 8086], "mapped", [7974, 953]], [[8087, 8087], "mapped", [7975, 953]], [[8088, 8088], "mapped", [7968, 953]], [[8089, 8089], "mapped", [7969, 953]], [[8090, 8090], "mapped", [7970, 953]], [[8091, 8091], "mapped", [7971, 953]], [[8092, 8092], "mapped", [7972, 953]], [[8093, 8093], "mapped", [7973, 953]], [[8094, 8094], "mapped", [7974, 953]], [[8095, 8095], "mapped", [7975, 953]], [[8096, 8096], "mapped", [8032, 953]], [[8097, 8097], "mapped", [8033, 953]], [[8098, 8098], "mapped", [8034, 953]], [[8099, 8099], "mapped", [8035, 953]], [[8100, 8100], "mapped", [8036, 953]], [[8101, 8101], "mapped", [8037, 953]], [[8102, 8102], "mapped", [8038, 953]], [[8103, 8103], "mapped", [8039, 953]], [[8104, 8104], "mapped", [8032, 953]], [[8105, 8105], "mapped", [8033, 953]], [[8106, 8106], "mapped", [8034, 953]], [[8107, 8107], "mapped", [8035, 953]], [[8108, 8108], "mapped", [8036, 953]], [[8109, 8109], "mapped", [8037, 953]], [[8110, 8110], "mapped", [8038, 953]], [[8111, 8111], "mapped", [8039, 953]], [[8112, 8113], "valid"], [[8114, 8114], "mapped", [8048, 953]], [[8115, 8115], "mapped", [945, 953]], [[8116, 8116], "mapped", [940, 953]], [[8117, 8117], "disallowed"], [[8118, 8118], "valid"], [[8119, 8119], "mapped", [8118, 953]], [[8120, 8120], "mapped", [8112]], [[8121, 8121], "mapped", [8113]], [[8122, 8122], "mapped", [8048]], [[8123, 8123], "mapped", [940]], [[8124, 8124], "mapped", [945, 953]], [[8125, 8125], "disallowed_STD3_mapped", [32, 787]], [[8126, 8126], "mapped", [953]], [[8127, 8127], "disallowed_STD3_mapped", [32, 787]], [[8128, 8128], "disallowed_STD3_mapped", [32, 834]], [[8129, 8129], "disallowed_STD3_mapped", [32, 776, 834]], [[8130, 8130], "mapped", [8052, 953]], [[8131, 8131], "mapped", [951, 953]], [[8132, 8132], "mapped", [942, 953]], [[8133, 8133], "disallowed"], [[8134, 8134], "valid"], [[8135, 8135], "mapped", [8134, 953]], [[8136, 8136], "mapped", [8050]], [[8137, 8137], "mapped", [941]], [[8138, 8138], "mapped", [8052]], [[8139, 8139], "mapped", [942]], [[8140, 8140], "mapped", [951, 953]], [[8141, 8141], "disallowed_STD3_mapped", [32, 787, 768]], [[8142, 8142], "disallowed_STD3_mapped", [32, 787, 769]], [[8143, 8143], "disallowed_STD3_mapped", [32, 787, 834]], [[8144, 8146], "valid"], [[8147, 8147], "mapped", [912]], [[8148, 8149], "disallowed"], [[8150, 8151], "valid"], [[8152, 8152], "mapped", [8144]], [[8153, 8153], "mapped", [8145]], [[8154, 8154], "mapped", [8054]], [[8155, 8155], "mapped", [943]], [[8156, 8156], "disallowed"], [[8157, 8157], "disallowed_STD3_mapped", [32, 788, 768]], [[8158, 8158], "disallowed_STD3_mapped", [32, 788, 769]], [[8159, 8159], "disallowed_STD3_mapped", [32, 788, 834]], [[8160, 8162], "valid"], [[8163, 8163], "mapped", [944]], [[8164, 8167], "valid"], [[8168, 8168], "mapped", [8160]], [[8169, 8169], "mapped", [8161]], [[8170, 8170], "mapped", [8058]], [[8171, 8171], "mapped", [973]], [[8172, 8172], "mapped", [8165]], [[8173, 8173], "disallowed_STD3_mapped", [32, 776, 768]], [[8174, 8174], "disallowed_STD3_mapped", [32, 776, 769]], [[8175, 8175], "disallowed_STD3_mapped", [96]], [[8176, 8177], "disallowed"], [[8178, 8178], "mapped", [8060, 953]], [[8179, 8179], "mapped", [969, 953]], [[8180, 8180], "mapped", [974, 953]], [[8181, 8181], "disallowed"], [[8182, 8182], "valid"], [[8183, 8183], "mapped", [8182, 953]], [[8184, 8184], "mapped", [8056]], [[8185, 8185], "mapped", [972]], [[8186, 8186], "mapped", [8060]], [[8187, 8187], "mapped", [974]], [[8188, 8188], "mapped", [969, 953]], [[8189, 8189], "disallowed_STD3_mapped", [32, 769]], [[8190, 8190], "disallowed_STD3_mapped", [32, 788]], [[8191, 8191], "disallowed"], [[8192, 8202], "disallowed_STD3_mapped", [32]], [[8203, 8203], "ignored"], [[8204, 8205], "deviation", []], [[8206, 8207], "disallowed"], [[8208, 8208], "valid", [], "NV8"], [[8209, 8209], "mapped", [8208]], [[8210, 8214], "valid", [], "NV8"], [[8215, 8215], "disallowed_STD3_mapped", [32, 819]], [[8216, 8227], "valid", [], "NV8"], [[8228, 8230], "disallowed"], [[8231, 8231], "valid", [], "NV8"], [[8232, 8238], "disallowed"], [[8239, 8239], "disallowed_STD3_mapped", [32]], [[8240, 8242], "valid", [], "NV8"], [[8243, 8243], "mapped", [8242, 8242]], [[8244, 8244], "mapped", [8242, 8242, 8242]], [[8245, 8245], "valid", [], "NV8"], [[8246, 8246], "mapped", [8245, 8245]], [[8247, 8247], "mapped", [8245, 8245, 8245]], [[8248, 8251], "valid", [], "NV8"], [[8252, 8252], "disallowed_STD3_mapped", [33, 33]], [[8253, 8253], "valid", [], "NV8"], [[8254, 8254], "disallowed_STD3_mapped", [32, 773]], [[8255, 8262], "valid", [], "NV8"], [[8263, 8263], "disallowed_STD3_mapped", [63, 63]], [[8264, 8264], "disallowed_STD3_mapped", [63, 33]], [[8265, 8265], "disallowed_STD3_mapped", [33, 63]], [[8266, 8269], "valid", [], "NV8"], [[8270, 8274], "valid", [], "NV8"], [[8275, 8276], "valid", [], "NV8"], [[8277, 8278], "valid", [], "NV8"], [[8279, 8279], "mapped", [8242, 8242, 8242, 8242]], [[8280, 8286], "valid", [], "NV8"], [[8287, 8287], "disallowed_STD3_mapped", [32]], [[8288, 8288], "ignored"], [[8289, 8291], "disallowed"], [[8292, 8292], "ignored"], [[8293, 8293], "disallowed"], [[8294, 8297], "disallowed"], [[8298, 8303], "disallowed"], [[8304, 8304], "mapped", [48]], [[8305, 8305], "mapped", [105]], [[8306, 8307], "disallowed"], [[8308, 8308], "mapped", [52]], [[8309, 8309], "mapped", [53]], [[8310, 8310], "mapped", [54]], [[8311, 8311], "mapped", [55]], [[8312, 8312], "mapped", [56]], [[8313, 8313], "mapped", [57]], [[8314, 8314], "disallowed_STD3_mapped", [43]], [[8315, 8315], "mapped", [8722]], [[8316, 8316], "disallowed_STD3_mapped", [61]], [[8317, 8317], "disallowed_STD3_mapped", [40]], [[8318, 8318], "disallowed_STD3_mapped", [41]], [[8319, 8319], "mapped", [110]], [[8320, 8320], "mapped", [48]], [[8321, 8321], "mapped", [49]], [[8322, 8322], "mapped", [50]], [[8323, 8323], "mapped", [51]], [[8324, 8324], "mapped", [52]], [[8325, 8325], "mapped", [53]], [[8326, 8326], "mapped", [54]], [[8327, 8327], "mapped", [55]], [[8328, 8328], "mapped", [56]], [[8329, 8329], "mapped", [57]], [[8330, 8330], "disallowed_STD3_mapped", [43]], [[8331, 8331], "mapped", [8722]], [[8332, 8332], "disallowed_STD3_mapped", [61]], [[8333, 8333], "disallowed_STD3_mapped", [40]], [[8334, 8334], "disallowed_STD3_mapped", [41]], [[8335, 8335], "disallowed"], [[8336, 8336], "mapped", [97]], [[8337, 8337], "mapped", [101]], [[8338, 8338], "mapped", [111]], [[8339, 8339], "mapped", [120]], [[8340, 8340], "mapped", [601]], [[8341, 8341], "mapped", [104]], [[8342, 8342], "mapped", [107]], [[8343, 8343], "mapped", [108]], [[8344, 8344], "mapped", [109]], [[8345, 8345], "mapped", [110]], [[8346, 8346], "mapped", [112]], [[8347, 8347], "mapped", [115]], [[8348, 8348], "mapped", [116]], [[8349, 8351], "disallowed"], [[8352, 8359], "valid", [], "NV8"], [[8360, 8360], "mapped", [114, 115]], [[8361, 8362], "valid", [], "NV8"], [[8363, 8363], "valid", [], "NV8"], [[8364, 8364], "valid", [], "NV8"], [[8365, 8367], "valid", [], "NV8"], [[8368, 8369], "valid", [], "NV8"], [[8370, 8373], "valid", [], "NV8"], [[8374, 8376], "valid", [], "NV8"], [[8377, 8377], "valid", [], "NV8"], [[8378, 8378], "valid", [], "NV8"], [[8379, 8381], "valid", [], "NV8"], [[8382, 8382], "valid", [], "NV8"], [[8383, 8399], "disallowed"], [[8400, 8417], "valid", [], "NV8"], [[8418, 8419], "valid", [], "NV8"], [[8420, 8426], "valid", [], "NV8"], [[8427, 8427], "valid", [], "NV8"], [[8428, 8431], "valid", [], "NV8"], [[8432, 8432], "valid", [], "NV8"], [[8433, 8447], "disallowed"], [[8448, 8448], "disallowed_STD3_mapped", [97, 47, 99]], [[8449, 8449], "disallowed_STD3_mapped", [97, 47, 115]], [[8450, 8450], "mapped", [99]], [[8451, 8451], "mapped", [176, 99]], [[8452, 8452], "valid", [], "NV8"], [[8453, 8453], "disallowed_STD3_mapped", [99, 47, 111]], [[8454, 8454], "disallowed_STD3_mapped", [99, 47, 117]], [[8455, 8455], "mapped", [603]], [[8456, 8456], "valid", [], "NV8"], [[8457, 8457], "mapped", [176, 102]], [[8458, 8458], "mapped", [103]], [[8459, 8462], "mapped", [104]], [[8463, 8463], "mapped", [295]], [[8464, 8465], "mapped", [105]], [[8466, 8467], "mapped", [108]], [[8468, 8468], "valid", [], "NV8"], [[8469, 8469], "mapped", [110]], [[8470, 8470], "mapped", [110, 111]], [[8471, 8472], "valid", [], "NV8"], [[8473, 8473], "mapped", [112]], [[8474, 8474], "mapped", [113]], [[8475, 8477], "mapped", [114]], [[8478, 8479], "valid", [], "NV8"], [[8480, 8480], "mapped", [115, 109]], [[8481, 8481], "mapped", [116, 101, 108]], [[8482, 8482], "mapped", [116, 109]], [[8483, 8483], "valid", [], "NV8"], [[8484, 8484], "mapped", [122]], [[8485, 8485], "valid", [], "NV8"], [[8486, 8486], "mapped", [969]], [[8487, 8487], "valid", [], "NV8"], [[8488, 8488], "mapped", [122]], [[8489, 8489], "valid", [], "NV8"], [[8490, 8490], "mapped", [107]], [[8491, 8491], "mapped", [229]], [[8492, 8492], "mapped", [98]], [[8493, 8493], "mapped", [99]], [[8494, 8494], "valid", [], "NV8"], [[8495, 8496], "mapped", [101]], [[8497, 8497], "mapped", [102]], [[8498, 8498], "disallowed"], [[8499, 8499], "mapped", [109]], [[8500, 8500], "mapped", [111]], [[8501, 8501], "mapped", [1488]], [[8502, 8502], "mapped", [1489]], [[8503, 8503], "mapped", [1490]], [[8504, 8504], "mapped", [1491]], [[8505, 8505], "mapped", [105]], [[8506, 8506], "valid", [], "NV8"], [[8507, 8507], "mapped", [102, 97, 120]], [[8508, 8508], "mapped", [960]], [[8509, 8510], "mapped", [947]], [[8511, 8511], "mapped", [960]], [[8512, 8512], "mapped", [8721]], [[8513, 8516], "valid", [], "NV8"], [[8517, 8518], "mapped", [100]], [[8519, 8519], "mapped", [101]], [[8520, 8520], "mapped", [105]], [[8521, 8521], "mapped", [106]], [[8522, 8523], "valid", [], "NV8"], [[8524, 8524], "valid", [], "NV8"], [[8525, 8525], "valid", [], "NV8"], [[8526, 8526], "valid"], [[8527, 8527], "valid", [], "NV8"], [[8528, 8528], "mapped", [49, 8260, 55]], [[8529, 8529], "mapped", [49, 8260, 57]], [[8530, 8530], "mapped", [49, 8260, 49, 48]], [[8531, 8531], "mapped", [49, 8260, 51]], [[8532, 8532], "mapped", [50, 8260, 51]], [[8533, 8533], "mapped", [49, 8260, 53]], [[8534, 8534], "mapped", [50, 8260, 53]], [[8535, 8535], "mapped", [51, 8260, 53]], [[8536, 8536], "mapped", [52, 8260, 53]], [[8537, 8537], "mapped", [49, 8260, 54]], [[8538, 8538], "mapped", [53, 8260, 54]], [[8539, 8539], "mapped", [49, 8260, 56]], [[8540, 8540], "mapped", [51, 8260, 56]], [[8541, 8541], "mapped", [53, 8260, 56]], [[8542, 8542], "mapped", [55, 8260, 56]], [[8543, 8543], "mapped", [49, 8260]], [[8544, 8544], "mapped", [105]], [[8545, 8545], "mapped", [105, 105]], [[8546, 8546], "mapped", [105, 105, 105]], [[8547, 8547], "mapped", [105, 118]], [[8548, 8548], "mapped", [118]], [[8549, 8549], "mapped", [118, 105]], [[8550, 8550], "mapped", [118, 105, 105]], [[8551, 8551], "mapped", [118, 105, 105, 105]], [[8552, 8552], "mapped", [105, 120]], [[8553, 8553], "mapped", [120]], [[8554, 8554], "mapped", [120, 105]], [[8555, 8555], "mapped", [120, 105, 105]], [[8556, 8556], "mapped", [108]], [[8557, 8557], "mapped", [99]], [[8558, 8558], "mapped", [100]], [[8559, 8559], "mapped", [109]], [[8560, 8560], "mapped", [105]], [[8561, 8561], "mapped", [105, 105]], [[8562, 8562], "mapped", [105, 105, 105]], [[8563, 8563], "mapped", [105, 118]], [[8564, 8564], "mapped", [118]], [[8565, 8565], "mapped", [118, 105]], [[8566, 8566], "mapped", [118, 105, 105]], [[8567, 8567], "mapped", [118, 105, 105, 105]], [[8568, 8568], "mapped", [105, 120]], [[8569, 8569], "mapped", [120]], [[8570, 8570], "mapped", [120, 105]], [[8571, 8571], "mapped", [120, 105, 105]], [[8572, 8572], "mapped", [108]], [[8573, 8573], "mapped", [99]], [[8574, 8574], "mapped", [100]], [[8575, 8575], "mapped", [109]], [[8576, 8578], "valid", [], "NV8"], [[8579, 8579], "disallowed"], [[8580, 8580], "valid"], [[8581, 8584], "valid", [], "NV8"], [[8585, 8585], "mapped", [48, 8260, 51]], [[8586, 8587], "valid", [], "NV8"], [[8588, 8591], "disallowed"], [[8592, 8682], "valid", [], "NV8"], [[8683, 8691], "valid", [], "NV8"], [[8692, 8703], "valid", [], "NV8"], [[8704, 8747], "valid", [], "NV8"], [[8748, 8748], "mapped", [8747, 8747]], [[8749, 8749], "mapped", [8747, 8747, 8747]], [[8750, 8750], "valid", [], "NV8"], [[8751, 8751], "mapped", [8750, 8750]], [[8752, 8752], "mapped", [8750, 8750, 8750]], [[8753, 8799], "valid", [], "NV8"], [[8800, 8800], "disallowed_STD3_valid"], [[8801, 8813], "valid", [], "NV8"], [[8814, 8815], "disallowed_STD3_valid"], [[8816, 8945], "valid", [], "NV8"], [[8946, 8959], "valid", [], "NV8"], [[8960, 8960], "valid", [], "NV8"], [[8961, 8961], "valid", [], "NV8"], [[8962, 9e3], "valid", [], "NV8"], [[9001, 9001], "mapped", [12296]], [[9002, 9002], "mapped", [12297]], [[9003, 9082], "valid", [], "NV8"], [[9083, 9083], "valid", [], "NV8"], [[9084, 9084], "valid", [], "NV8"], [[9085, 9114], "valid", [], "NV8"], [[9115, 9166], "valid", [], "NV8"], [[9167, 9168], "valid", [], "NV8"], [[9169, 9179], "valid", [], "NV8"], [[9180, 9191], "valid", [], "NV8"], [[9192, 9192], "valid", [], "NV8"], [[9193, 9203], "valid", [], "NV8"], [[9204, 9210], "valid", [], "NV8"], [[9211, 9215], "disallowed"], [[9216, 9252], "valid", [], "NV8"], [[9253, 9254], "valid", [], "NV8"], [[9255, 9279], "disallowed"], [[9280, 9290], "valid", [], "NV8"], [[9291, 9311], "disallowed"], [[9312, 9312], "mapped", [49]], [[9313, 9313], "mapped", [50]], [[9314, 9314], "mapped", [51]], [[9315, 9315], "mapped", [52]], [[9316, 9316], "mapped", [53]], [[9317, 9317], "mapped", [54]], [[9318, 9318], "mapped", [55]], [[9319, 9319], "mapped", [56]], [[9320, 9320], "mapped", [57]], [[9321, 9321], "mapped", [49, 48]], [[9322, 9322], "mapped", [49, 49]], [[9323, 9323], "mapped", [49, 50]], [[9324, 9324], "mapped", [49, 51]], [[9325, 9325], "mapped", [49, 52]], [[9326, 9326], "mapped", [49, 53]], [[9327, 9327], "mapped", [49, 54]], [[9328, 9328], "mapped", [49, 55]], [[9329, 9329], "mapped", [49, 56]], [[9330, 9330], "mapped", [49, 57]], [[9331, 9331], "mapped", [50, 48]], [[9332, 9332], "disallowed_STD3_mapped", [40, 49, 41]], [[9333, 9333], "disallowed_STD3_mapped", [40, 50, 41]], [[9334, 9334], "disallowed_STD3_mapped", [40, 51, 41]], [[9335, 9335], "disallowed_STD3_mapped", [40, 52, 41]], [[9336, 9336], "disallowed_STD3_mapped", [40, 53, 41]], [[9337, 9337], "disallowed_STD3_mapped", [40, 54, 41]], [[9338, 9338], "disallowed_STD3_mapped", [40, 55, 41]], [[9339, 9339], "disallowed_STD3_mapped", [40, 56, 41]], [[9340, 9340], "disallowed_STD3_mapped", [40, 57, 41]], [[9341, 9341], "disallowed_STD3_mapped", [40, 49, 48, 41]], [[9342, 9342], "disallowed_STD3_mapped", [40, 49, 49, 41]], [[9343, 9343], "disallowed_STD3_mapped", [40, 49, 50, 41]], [[9344, 9344], "disallowed_STD3_mapped", [40, 49, 51, 41]], [[9345, 9345], "disallowed_STD3_mapped", [40, 49, 52, 41]], [[9346, 9346], "disallowed_STD3_mapped", [40, 49, 53, 41]], [[9347, 9347], "disallowed_STD3_mapped", [40, 49, 54, 41]], [[9348, 9348], "disallowed_STD3_mapped", [40, 49, 55, 41]], [[9349, 9349], "disallowed_STD3_mapped", [40, 49, 56, 41]], [[9350, 9350], "disallowed_STD3_mapped", [40, 49, 57, 41]], [[9351, 9351], "disallowed_STD3_mapped", [40, 50, 48, 41]], [[9352, 9371], "disallowed"], [[9372, 9372], "disallowed_STD3_mapped", [40, 97, 41]], [[9373, 9373], "disallowed_STD3_mapped", [40, 98, 41]], [[9374, 9374], "disallowed_STD3_mapped", [40, 99, 41]], [[9375, 9375], "disallowed_STD3_mapped", [40, 100, 41]], [[9376, 9376], "disallowed_STD3_mapped", [40, 101, 41]], [[9377, 9377], "disallowed_STD3_mapped", [40, 102, 41]], [[9378, 9378], "disallowed_STD3_mapped", [40, 103, 41]], [[9379, 9379], "disallowed_STD3_mapped", [40, 104, 41]], [[9380, 9380], "disallowed_STD3_mapped", [40, 105, 41]], [[9381, 9381], "disallowed_STD3_mapped", [40, 106, 41]], [[9382, 9382], "disallowed_STD3_mapped", [40, 107, 41]], [[9383, 9383], "disallowed_STD3_mapped", [40, 108, 41]], [[9384, 9384], "disallowed_STD3_mapped", [40, 109, 41]], [[9385, 9385], "disallowed_STD3_mapped", [40, 110, 41]], [[9386, 9386], "disallowed_STD3_mapped", [40, 111, 41]], [[9387, 9387], "disallowed_STD3_mapped", [40, 112, 41]], [[9388, 9388], "disallowed_STD3_mapped", [40, 113, 41]], [[9389, 9389], "disallowed_STD3_mapped", [40, 114, 41]], [[9390, 9390], "disallowed_STD3_mapped", [40, 115, 41]], [[9391, 9391], "disallowed_STD3_mapped", [40, 116, 41]], [[9392, 9392], "disallowed_STD3_mapped", [40, 117, 41]], [[9393, 9393], "disallowed_STD3_mapped", [40, 118, 41]], [[9394, 9394], "disallowed_STD3_mapped", [40, 119, 41]], [[9395, 9395], "disallowed_STD3_mapped", [40, 120, 41]], [[9396, 9396], "disallowed_STD3_mapped", [40, 121, 41]], [[9397, 9397], "disallowed_STD3_mapped", [40, 122, 41]], [[9398, 9398], "mapped", [97]], [[9399, 9399], "mapped", [98]], [[9400, 9400], "mapped", [99]], [[9401, 9401], "mapped", [100]], [[9402, 9402], "mapped", [101]], [[9403, 9403], "mapped", [102]], [[9404, 9404], "mapped", [103]], [[9405, 9405], "mapped", [104]], [[9406, 9406], "mapped", [105]], [[9407, 9407], "mapped", [106]], [[9408, 9408], "mapped", [107]], [[9409, 9409], "mapped", [108]], [[9410, 9410], "mapped", [109]], [[9411, 9411], "mapped", [110]], [[9412, 9412], "mapped", [111]], [[9413, 9413], "mapped", [112]], [[9414, 9414], "mapped", [113]], [[9415, 9415], "mapped", [114]], [[9416, 9416], "mapped", [115]], [[9417, 9417], "mapped", [116]], [[9418, 9418], "mapped", [117]], [[9419, 9419], "mapped", [118]], [[9420, 9420], "mapped", [119]], [[9421, 9421], "mapped", [120]], [[9422, 9422], "mapped", [121]], [[9423, 9423], "mapped", [122]], [[9424, 9424], "mapped", [97]], [[9425, 9425], "mapped", [98]], [[9426, 9426], "mapped", [99]], [[9427, 9427], "mapped", [100]], [[9428, 9428], "mapped", [101]], [[9429, 9429], "mapped", [102]], [[9430, 9430], "mapped", [103]], [[9431, 9431], "mapped", [104]], [[9432, 9432], "mapped", [105]], [[9433, 9433], "mapped", [106]], [[9434, 9434], "mapped", [107]], [[9435, 9435], "mapped", [108]], [[9436, 9436], "mapped", [109]], [[9437, 9437], "mapped", [110]], [[9438, 9438], "mapped", [111]], [[9439, 9439], "mapped", [112]], [[9440, 9440], "mapped", [113]], [[9441, 9441], "mapped", [114]], [[9442, 9442], "mapped", [115]], [[9443, 9443], "mapped", [116]], [[9444, 9444], "mapped", [117]], [[9445, 9445], "mapped", [118]], [[9446, 9446], "mapped", [119]], [[9447, 9447], "mapped", [120]], [[9448, 9448], "mapped", [121]], [[9449, 9449], "mapped", [122]], [[9450, 9450], "mapped", [48]], [[9451, 9470], "valid", [], "NV8"], [[9471, 9471], "valid", [], "NV8"], [[9472, 9621], "valid", [], "NV8"], [[9622, 9631], "valid", [], "NV8"], [[9632, 9711], "valid", [], "NV8"], [[9712, 9719], "valid", [], "NV8"], [[9720, 9727], "valid", [], "NV8"], [[9728, 9747], "valid", [], "NV8"], [[9748, 9749], "valid", [], "NV8"], [[9750, 9751], "valid", [], "NV8"], [[9752, 9752], "valid", [], "NV8"], [[9753, 9753], "valid", [], "NV8"], [[9754, 9839], "valid", [], "NV8"], [[9840, 9841], "valid", [], "NV8"], [[9842, 9853], "valid", [], "NV8"], [[9854, 9855], "valid", [], "NV8"], [[9856, 9865], "valid", [], "NV8"], [[9866, 9873], "valid", [], "NV8"], [[9874, 9884], "valid", [], "NV8"], [[9885, 9885], "valid", [], "NV8"], [[9886, 9887], "valid", [], "NV8"], [[9888, 9889], "valid", [], "NV8"], [[9890, 9905], "valid", [], "NV8"], [[9906, 9906], "valid", [], "NV8"], [[9907, 9916], "valid", [], "NV8"], [[9917, 9919], "valid", [], "NV8"], [[9920, 9923], "valid", [], "NV8"], [[9924, 9933], "valid", [], "NV8"], [[9934, 9934], "valid", [], "NV8"], [[9935, 9953], "valid", [], "NV8"], [[9954, 9954], "valid", [], "NV8"], [[9955, 9955], "valid", [], "NV8"], [[9956, 9959], "valid", [], "NV8"], [[9960, 9983], "valid", [], "NV8"], [[9984, 9984], "valid", [], "NV8"], [[9985, 9988], "valid", [], "NV8"], [[9989, 9989], "valid", [], "NV8"], [[9990, 9993], "valid", [], "NV8"], [[9994, 9995], "valid", [], "NV8"], [[9996, 10023], "valid", [], "NV8"], [[10024, 10024], "valid", [], "NV8"], [[10025, 10059], "valid", [], "NV8"], [[10060, 10060], "valid", [], "NV8"], [[10061, 10061], "valid", [], "NV8"], [[10062, 10062], "valid", [], "NV8"], [[10063, 10066], "valid", [], "NV8"], [[10067, 10069], "valid", [], "NV8"], [[10070, 10070], "valid", [], "NV8"], [[10071, 10071], "valid", [], "NV8"], [[10072, 10078], "valid", [], "NV8"], [[10079, 10080], "valid", [], "NV8"], [[10081, 10087], "valid", [], "NV8"], [[10088, 10101], "valid", [], "NV8"], [[10102, 10132], "valid", [], "NV8"], [[10133, 10135], "valid", [], "NV8"], [[10136, 10159], "valid", [], "NV8"], [[10160, 10160], "valid", [], "NV8"], [[10161, 10174], "valid", [], "NV8"], [[10175, 10175], "valid", [], "NV8"], [[10176, 10182], "valid", [], "NV8"], [[10183, 10186], "valid", [], "NV8"], [[10187, 10187], "valid", [], "NV8"], [[10188, 10188], "valid", [], "NV8"], [[10189, 10189], "valid", [], "NV8"], [[10190, 10191], "valid", [], "NV8"], [[10192, 10219], "valid", [], "NV8"], [[10220, 10223], "valid", [], "NV8"], [[10224, 10239], "valid", [], "NV8"], [[10240, 10495], "valid", [], "NV8"], [[10496, 10763], "valid", [], "NV8"], [[10764, 10764], "mapped", [8747, 8747, 8747, 8747]], [[10765, 10867], "valid", [], "NV8"], [[10868, 10868], "disallowed_STD3_mapped", [58, 58, 61]], [[10869, 10869], "disallowed_STD3_mapped", [61, 61]], [[10870, 10870], "disallowed_STD3_mapped", [61, 61, 61]], [[10871, 10971], "valid", [], "NV8"], [[10972, 10972], "mapped", [10973, 824]], [[10973, 11007], "valid", [], "NV8"], [[11008, 11021], "valid", [], "NV8"], [[11022, 11027], "valid", [], "NV8"], [[11028, 11034], "valid", [], "NV8"], [[11035, 11039], "valid", [], "NV8"], [[11040, 11043], "valid", [], "NV8"], [[11044, 11084], "valid", [], "NV8"], [[11085, 11087], "valid", [], "NV8"], [[11088, 11092], "valid", [], "NV8"], [[11093, 11097], "valid", [], "NV8"], [[11098, 11123], "valid", [], "NV8"], [[11124, 11125], "disallowed"], [[11126, 11157], "valid", [], "NV8"], [[11158, 11159], "disallowed"], [[11160, 11193], "valid", [], "NV8"], [[11194, 11196], "disallowed"], [[11197, 11208], "valid", [], "NV8"], [[11209, 11209], "disallowed"], [[11210, 11217], "valid", [], "NV8"], [[11218, 11243], "disallowed"], [[11244, 11247], "valid", [], "NV8"], [[11248, 11263], "disallowed"], [[11264, 11264], "mapped", [11312]], [[11265, 11265], "mapped", [11313]], [[11266, 11266], "mapped", [11314]], [[11267, 11267], "mapped", [11315]], [[11268, 11268], "mapped", [11316]], [[11269, 11269], "mapped", [11317]], [[11270, 11270], "mapped", [11318]], [[11271, 11271], "mapped", [11319]], [[11272, 11272], "mapped", [11320]], [[11273, 11273], "mapped", [11321]], [[11274, 11274], "mapped", [11322]], [[11275, 11275], "mapped", [11323]], [[11276, 11276], "mapped", [11324]], [[11277, 11277], "mapped", [11325]], [[11278, 11278], "mapped", [11326]], [[11279, 11279], "mapped", [11327]], [[11280, 11280], "mapped", [11328]], [[11281, 11281], "mapped", [11329]], [[11282, 11282], "mapped", [11330]], [[11283, 11283], "mapped", [11331]], [[11284, 11284], "mapped", [11332]], [[11285, 11285], "mapped", [11333]], [[11286, 11286], "mapped", [11334]], [[11287, 11287], "mapped", [11335]], [[11288, 11288], "mapped", [11336]], [[11289, 11289], "mapped", [11337]], [[11290, 11290], "mapped", [11338]], [[11291, 11291], "mapped", [11339]], [[11292, 11292], "mapped", [11340]], [[11293, 11293], "mapped", [11341]], [[11294, 11294], "mapped", [11342]], [[11295, 11295], "mapped", [11343]], [[11296, 11296], "mapped", [11344]], [[11297, 11297], "mapped", [11345]], [[11298, 11298], "mapped", [11346]], [[11299, 11299], "mapped", [11347]], [[11300, 11300], "mapped", [11348]], [[11301, 11301], "mapped", [11349]], [[11302, 11302], "mapped", [11350]], [[11303, 11303], "mapped", [11351]], [[11304, 11304], "mapped", [11352]], [[11305, 11305], "mapped", [11353]], [[11306, 11306], "mapped", [11354]], [[11307, 11307], "mapped", [11355]], [[11308, 11308], "mapped", [11356]], [[11309, 11309], "mapped", [11357]], [[11310, 11310], "mapped", [11358]], [[11311, 11311], "disallowed"], [[11312, 11358], "valid"], [[11359, 11359], "disallowed"], [[11360, 11360], "mapped", [11361]], [[11361, 11361], "valid"], [[11362, 11362], "mapped", [619]], [[11363, 11363], "mapped", [7549]], [[11364, 11364], "mapped", [637]], [[11365, 11366], "valid"], [[11367, 11367], "mapped", [11368]], [[11368, 11368], "valid"], [[11369, 11369], "mapped", [11370]], [[11370, 11370], "valid"], [[11371, 11371], "mapped", [11372]], [[11372, 11372], "valid"], [[11373, 11373], "mapped", [593]], [[11374, 11374], "mapped", [625]], [[11375, 11375], "mapped", [592]], [[11376, 11376], "mapped", [594]], [[11377, 11377], "valid"], [[11378, 11378], "mapped", [11379]], [[11379, 11379], "valid"], [[11380, 11380], "valid"], [[11381, 11381], "mapped", [11382]], [[11382, 11383], "valid"], [[11384, 11387], "valid"], [[11388, 11388], "mapped", [106]], [[11389, 11389], "mapped", [118]], [[11390, 11390], "mapped", [575]], [[11391, 11391], "mapped", [576]], [[11392, 11392], "mapped", [11393]], [[11393, 11393], "valid"], [[11394, 11394], "mapped", [11395]], [[11395, 11395], "valid"], [[11396, 11396], "mapped", [11397]], [[11397, 11397], "valid"], [[11398, 11398], "mapped", [11399]], [[11399, 11399], "valid"], [[11400, 11400], "mapped", [11401]], [[11401, 11401], "valid"], [[11402, 11402], "mapped", [11403]], [[11403, 11403], "valid"], [[11404, 11404], "mapped", [11405]], [[11405, 11405], "valid"], [[11406, 11406], "mapped", [11407]], [[11407, 11407], "valid"], [[11408, 11408], "mapped", [11409]], [[11409, 11409], "valid"], [[11410, 11410], "mapped", [11411]], [[11411, 11411], "valid"], [[11412, 11412], "mapped", [11413]], [[11413, 11413], "valid"], [[11414, 11414], "mapped", [11415]], [[11415, 11415], "valid"], [[11416, 11416], "mapped", [11417]], [[11417, 11417], "valid"], [[11418, 11418], "mapped", [11419]], [[11419, 11419], "valid"], [[11420, 11420], "mapped", [11421]], [[11421, 11421], "valid"], [[11422, 11422], "mapped", [11423]], [[11423, 11423], "valid"], [[11424, 11424], "mapped", [11425]], [[11425, 11425], "valid"], [[11426, 11426], "mapped", [11427]], [[11427, 11427], "valid"], [[11428, 11428], "mapped", [11429]], [[11429, 11429], "valid"], [[11430, 11430], "mapped", [11431]], [[11431, 11431], "valid"], [[11432, 11432], "mapped", [11433]], [[11433, 11433], "valid"], [[11434, 11434], "mapped", [11435]], [[11435, 11435], "valid"], [[11436, 11436], "mapped", [11437]], [[11437, 11437], "valid"], [[11438, 11438], "mapped", [11439]], [[11439, 11439], "valid"], [[11440, 11440], "mapped", [11441]], [[11441, 11441], "valid"], [[11442, 11442], "mapped", [11443]], [[11443, 11443], "valid"], [[11444, 11444], "mapped", [11445]], [[11445, 11445], "valid"], [[11446, 11446], "mapped", [11447]], [[11447, 11447], "valid"], [[11448, 11448], "mapped", [11449]], [[11449, 11449], "valid"], [[11450, 11450], "mapped", [11451]], [[11451, 11451], "valid"], [[11452, 11452], "mapped", [11453]], [[11453, 11453], "valid"], [[11454, 11454], "mapped", [11455]], [[11455, 11455], "valid"], [[11456, 11456], "mapped", [11457]], [[11457, 11457], "valid"], [[11458, 11458], "mapped", [11459]], [[11459, 11459], "valid"], [[11460, 11460], "mapped", [11461]], [[11461, 11461], "valid"], [[11462, 11462], "mapped", [11463]], [[11463, 11463], "valid"], [[11464, 11464], "mapped", [11465]], [[11465, 11465], "valid"], [[11466, 11466], "mapped", [11467]], [[11467, 11467], "valid"], [[11468, 11468], "mapped", [11469]], [[11469, 11469], "valid"], [[11470, 11470], "mapped", [11471]], [[11471, 11471], "valid"], [[11472, 11472], "mapped", [11473]], [[11473, 11473], "valid"], [[11474, 11474], "mapped", [11475]], [[11475, 11475], "valid"], [[11476, 11476], "mapped", [11477]], [[11477, 11477], "valid"], [[11478, 11478], "mapped", [11479]], [[11479, 11479], "valid"], [[11480, 11480], "mapped", [11481]], [[11481, 11481], "valid"], [[11482, 11482], "mapped", [11483]], [[11483, 11483], "valid"], [[11484, 11484], "mapped", [11485]], [[11485, 11485], "valid"], [[11486, 11486], "mapped", [11487]], [[11487, 11487], "valid"], [[11488, 11488], "mapped", [11489]], [[11489, 11489], "valid"], [[11490, 11490], "mapped", [11491]], [[11491, 11492], "valid"], [[11493, 11498], "valid", [], "NV8"], [[11499, 11499], "mapped", [11500]], [[11500, 11500], "valid"], [[11501, 11501], "mapped", [11502]], [[11502, 11505], "valid"], [[11506, 11506], "mapped", [11507]], [[11507, 11507], "valid"], [[11508, 11512], "disallowed"], [[11513, 11519], "valid", [], "NV8"], [[11520, 11557], "valid"], [[11558, 11558], "disallowed"], [[11559, 11559], "valid"], [[11560, 11564], "disallowed"], [[11565, 11565], "valid"], [[11566, 11567], "disallowed"], [[11568, 11621], "valid"], [[11622, 11623], "valid"], [[11624, 11630], "disallowed"], [[11631, 11631], "mapped", [11617]], [[11632, 11632], "valid", [], "NV8"], [[11633, 11646], "disallowed"], [[11647, 11647], "valid"], [[11648, 11670], "valid"], [[11671, 11679], "disallowed"], [[11680, 11686], "valid"], [[11687, 11687], "disallowed"], [[11688, 11694], "valid"], [[11695, 11695], "disallowed"], [[11696, 11702], "valid"], [[11703, 11703], "disallowed"], [[11704, 11710], "valid"], [[11711, 11711], "disallowed"], [[11712, 11718], "valid"], [[11719, 11719], "disallowed"], [[11720, 11726], "valid"], [[11727, 11727], "disallowed"], [[11728, 11734], "valid"], [[11735, 11735], "disallowed"], [[11736, 11742], "valid"], [[11743, 11743], "disallowed"], [[11744, 11775], "valid"], [[11776, 11799], "valid", [], "NV8"], [[11800, 11803], "valid", [], "NV8"], [[11804, 11805], "valid", [], "NV8"], [[11806, 11822], "valid", [], "NV8"], [[11823, 11823], "valid"], [[11824, 11824], "valid", [], "NV8"], [[11825, 11825], "valid", [], "NV8"], [[11826, 11835], "valid", [], "NV8"], [[11836, 11842], "valid", [], "NV8"], [[11843, 11903], "disallowed"], [[11904, 11929], "valid", [], "NV8"], [[11930, 11930], "disallowed"], [[11931, 11934], "valid", [], "NV8"], [[11935, 11935], "mapped", [27597]], [[11936, 12018], "valid", [], "NV8"], [[12019, 12019], "mapped", [40863]], [[12020, 12031], "disallowed"], [[12032, 12032], "mapped", [19968]], [[12033, 12033], "mapped", [20008]], [[12034, 12034], "mapped", [20022]], [[12035, 12035], "mapped", [20031]], [[12036, 12036], "mapped", [20057]], [[12037, 12037], "mapped", [20101]], [[12038, 12038], "mapped", [20108]], [[12039, 12039], "mapped", [20128]], [[12040, 12040], "mapped", [20154]], [[12041, 12041], "mapped", [20799]], [[12042, 12042], "mapped", [20837]], [[12043, 12043], "mapped", [20843]], [[12044, 12044], "mapped", [20866]], [[12045, 12045], "mapped", [20886]], [[12046, 12046], "mapped", [20907]], [[12047, 12047], "mapped", [20960]], [[12048, 12048], "mapped", [20981]], [[12049, 12049], "mapped", [20992]], [[12050, 12050], "mapped", [21147]], [[12051, 12051], "mapped", [21241]], [[12052, 12052], "mapped", [21269]], [[12053, 12053], "mapped", [21274]], [[12054, 12054], "mapped", [21304]], [[12055, 12055], "mapped", [21313]], [[12056, 12056], "mapped", [21340]], [[12057, 12057], "mapped", [21353]], [[12058, 12058], "mapped", [21378]], [[12059, 12059], "mapped", [21430]], [[12060, 12060], "mapped", [21448]], [[12061, 12061], "mapped", [21475]], [[12062, 12062], "mapped", [22231]], [[12063, 12063], "mapped", [22303]], [[12064, 12064], "mapped", [22763]], [[12065, 12065], "mapped", [22786]], [[12066, 12066], "mapped", [22794]], [[12067, 12067], "mapped", [22805]], [[12068, 12068], "mapped", [22823]], [[12069, 12069], "mapped", [22899]], [[12070, 12070], "mapped", [23376]], [[12071, 12071], "mapped", [23424]], [[12072, 12072], "mapped", [23544]], [[12073, 12073], "mapped", [23567]], [[12074, 12074], "mapped", [23586]], [[12075, 12075], "mapped", [23608]], [[12076, 12076], "mapped", [23662]], [[12077, 12077], "mapped", [23665]], [[12078, 12078], "mapped", [24027]], [[12079, 12079], "mapped", [24037]], [[12080, 12080], "mapped", [24049]], [[12081, 12081], "mapped", [24062]], [[12082, 12082], "mapped", [24178]], [[12083, 12083], "mapped", [24186]], [[12084, 12084], "mapped", [24191]], [[12085, 12085], "mapped", [24308]], [[12086, 12086], "mapped", [24318]], [[12087, 12087], "mapped", [24331]], [[12088, 12088], "mapped", [24339]], [[12089, 12089], "mapped", [24400]], [[12090, 12090], "mapped", [24417]], [[12091, 12091], "mapped", [24435]], [[12092, 12092], "mapped", [24515]], [[12093, 12093], "mapped", [25096]], [[12094, 12094], "mapped", [25142]], [[12095, 12095], "mapped", [25163]], [[12096, 12096], "mapped", [25903]], [[12097, 12097], "mapped", [25908]], [[12098, 12098], "mapped", [25991]], [[12099, 12099], "mapped", [26007]], [[12100, 12100], "mapped", [26020]], [[12101, 12101], "mapped", [26041]], [[12102, 12102], "mapped", [26080]], [[12103, 12103], "mapped", [26085]], [[12104, 12104], "mapped", [26352]], [[12105, 12105], "mapped", [26376]], [[12106, 12106], "mapped", [26408]], [[12107, 12107], "mapped", [27424]], [[12108, 12108], "mapped", [27490]], [[12109, 12109], "mapped", [27513]], [[12110, 12110], "mapped", [27571]], [[12111, 12111], "mapped", [27595]], [[12112, 12112], "mapped", [27604]], [[12113, 12113], "mapped", [27611]], [[12114, 12114], "mapped", [27663]], [[12115, 12115], "mapped", [27668]], [[12116, 12116], "mapped", [27700]], [[12117, 12117], "mapped", [28779]], [[12118, 12118], "mapped", [29226]], [[12119, 12119], "mapped", [29238]], [[12120, 12120], "mapped", [29243]], [[12121, 12121], "mapped", [29247]], [[12122, 12122], "mapped", [29255]], [[12123, 12123], "mapped", [29273]], [[12124, 12124], "mapped", [29275]], [[12125, 12125], "mapped", [29356]], [[12126, 12126], "mapped", [29572]], [[12127, 12127], "mapped", [29577]], [[12128, 12128], "mapped", [29916]], [[12129, 12129], "mapped", [29926]], [[12130, 12130], "mapped", [29976]], [[12131, 12131], "mapped", [29983]], [[12132, 12132], "mapped", [29992]], [[12133, 12133], "mapped", [3e4]], [[12134, 12134], "mapped", [30091]], [[12135, 12135], "mapped", [30098]], [[12136, 12136], "mapped", [30326]], [[12137, 12137], "mapped", [30333]], [[12138, 12138], "mapped", [30382]], [[12139, 12139], "mapped", [30399]], [[12140, 12140], "mapped", [30446]], [[12141, 12141], "mapped", [30683]], [[12142, 12142], "mapped", [30690]], [[12143, 12143], "mapped", [30707]], [[12144, 12144], "mapped", [31034]], [[12145, 12145], "mapped", [31160]], [[12146, 12146], "mapped", [31166]], [[12147, 12147], "mapped", [31348]], [[12148, 12148], "mapped", [31435]], [[12149, 12149], "mapped", [31481]], [[12150, 12150], "mapped", [31859]], [[12151, 12151], "mapped", [31992]], [[12152, 12152], "mapped", [32566]], [[12153, 12153], "mapped", [32593]], [[12154, 12154], "mapped", [32650]], [[12155, 12155], "mapped", [32701]], [[12156, 12156], "mapped", [32769]], [[12157, 12157], "mapped", [32780]], [[12158, 12158], "mapped", [32786]], [[12159, 12159], "mapped", [32819]], [[12160, 12160], "mapped", [32895]], [[12161, 12161], "mapped", [32905]], [[12162, 12162], "mapped", [33251]], [[12163, 12163], "mapped", [33258]], [[12164, 12164], "mapped", [33267]], [[12165, 12165], "mapped", [33276]], [[12166, 12166], "mapped", [33292]], [[12167, 12167], "mapped", [33307]], [[12168, 12168], "mapped", [33311]], [[12169, 12169], "mapped", [33390]], [[12170, 12170], "mapped", [33394]], [[12171, 12171], "mapped", [33400]], [[12172, 12172], "mapped", [34381]], [[12173, 12173], "mapped", [34411]], [[12174, 12174], "mapped", [34880]], [[12175, 12175], "mapped", [34892]], [[12176, 12176], "mapped", [34915]], [[12177, 12177], "mapped", [35198]], [[12178, 12178], "mapped", [35211]], [[12179, 12179], "mapped", [35282]], [[12180, 12180], "mapped", [35328]], [[12181, 12181], "mapped", [35895]], [[12182, 12182], "mapped", [35910]], [[12183, 12183], "mapped", [35925]], [[12184, 12184], "mapped", [35960]], [[12185, 12185], "mapped", [35997]], [[12186, 12186], "mapped", [36196]], [[12187, 12187], "mapped", [36208]], [[12188, 12188], "mapped", [36275]], [[12189, 12189], "mapped", [36523]], [[12190, 12190], "mapped", [36554]], [[12191, 12191], "mapped", [36763]], [[12192, 12192], "mapped", [36784]], [[12193, 12193], "mapped", [36789]], [[12194, 12194], "mapped", [37009]], [[12195, 12195], "mapped", [37193]], [[12196, 12196], "mapped", [37318]], [[12197, 12197], "mapped", [37324]], [[12198, 12198], "mapped", [37329]], [[12199, 12199], "mapped", [38263]], [[12200, 12200], "mapped", [38272]], [[12201, 12201], "mapped", [38428]], [[12202, 12202], "mapped", [38582]], [[12203, 12203], "mapped", [38585]], [[12204, 12204], "mapped", [38632]], [[12205, 12205], "mapped", [38737]], [[12206, 12206], "mapped", [38750]], [[12207, 12207], "mapped", [38754]], [[12208, 12208], "mapped", [38761]], [[12209, 12209], "mapped", [38859]], [[12210, 12210], "mapped", [38893]], [[12211, 12211], "mapped", [38899]], [[12212, 12212], "mapped", [38913]], [[12213, 12213], "mapped", [39080]], [[12214, 12214], "mapped", [39131]], [[12215, 12215], "mapped", [39135]], [[12216, 12216], "mapped", [39318]], [[12217, 12217], "mapped", [39321]], [[12218, 12218], "mapped", [39340]], [[12219, 12219], "mapped", [39592]], [[12220, 12220], "mapped", [39640]], [[12221, 12221], "mapped", [39647]], [[12222, 12222], "mapped", [39717]], [[12223, 12223], "mapped", [39727]], [[12224, 12224], "mapped", [39730]], [[12225, 12225], "mapped", [39740]], [[12226, 12226], "mapped", [39770]], [[12227, 12227], "mapped", [40165]], [[12228, 12228], "mapped", [40565]], [[12229, 12229], "mapped", [40575]], [[12230, 12230], "mapped", [40613]], [[12231, 12231], "mapped", [40635]], [[12232, 12232], "mapped", [40643]], [[12233, 12233], "mapped", [40653]], [[12234, 12234], "mapped", [40657]], [[12235, 12235], "mapped", [40697]], [[12236, 12236], "mapped", [40701]], [[12237, 12237], "mapped", [40718]], [[12238, 12238], "mapped", [40723]], [[12239, 12239], "mapped", [40736]], [[12240, 12240], "mapped", [40763]], [[12241, 12241], "mapped", [40778]], [[12242, 12242], "mapped", [40786]], [[12243, 12243], "mapped", [40845]], [[12244, 12244], "mapped", [40860]], [[12245, 12245], "mapped", [40864]], [[12246, 12271], "disallowed"], [[12272, 12283], "disallowed"], [[12284, 12287], "disallowed"], [[12288, 12288], "disallowed_STD3_mapped", [32]], [[12289, 12289], "valid", [], "NV8"], [[12290, 12290], "mapped", [46]], [[12291, 12292], "valid", [], "NV8"], [[12293, 12295], "valid"], [[12296, 12329], "valid", [], "NV8"], [[12330, 12333], "valid"], [[12334, 12341], "valid", [], "NV8"], [[12342, 12342], "mapped", [12306]], [[12343, 12343], "valid", [], "NV8"], [[12344, 12344], "mapped", [21313]], [[12345, 12345], "mapped", [21316]], [[12346, 12346], "mapped", [21317]], [[12347, 12347], "valid", [], "NV8"], [[12348, 12348], "valid"], [[12349, 12349], "valid", [], "NV8"], [[12350, 12350], "valid", [], "NV8"], [[12351, 12351], "valid", [], "NV8"], [[12352, 12352], "disallowed"], [[12353, 12436], "valid"], [[12437, 12438], "valid"], [[12439, 12440], "disallowed"], [[12441, 12442], "valid"], [[12443, 12443], "disallowed_STD3_mapped", [32, 12441]], [[12444, 12444], "disallowed_STD3_mapped", [32, 12442]], [[12445, 12446], "valid"], [[12447, 12447], "mapped", [12424, 12426]], [[12448, 12448], "valid", [], "NV8"], [[12449, 12542], "valid"], [[12543, 12543], "mapped", [12467, 12488]], [[12544, 12548], "disallowed"], [[12549, 12588], "valid"], [[12589, 12589], "valid"], [[12590, 12592], "disallowed"], [[12593, 12593], "mapped", [4352]], [[12594, 12594], "mapped", [4353]], [[12595, 12595], "mapped", [4522]], [[12596, 12596], "mapped", [4354]], [[12597, 12597], "mapped", [4524]], [[12598, 12598], "mapped", [4525]], [[12599, 12599], "mapped", [4355]], [[12600, 12600], "mapped", [4356]], [[12601, 12601], "mapped", [4357]], [[12602, 12602], "mapped", [4528]], [[12603, 12603], "mapped", [4529]], [[12604, 12604], "mapped", [4530]], [[12605, 12605], "mapped", [4531]], [[12606, 12606], "mapped", [4532]], [[12607, 12607], "mapped", [4533]], [[12608, 12608], "mapped", [4378]], [[12609, 12609], "mapped", [4358]], [[12610, 12610], "mapped", [4359]], [[12611, 12611], "mapped", [4360]], [[12612, 12612], "mapped", [4385]], [[12613, 12613], "mapped", [4361]], [[12614, 12614], "mapped", [4362]], [[12615, 12615], "mapped", [4363]], [[12616, 12616], "mapped", [4364]], [[12617, 12617], "mapped", [4365]], [[12618, 12618], "mapped", [4366]], [[12619, 12619], "mapped", [4367]], [[12620, 12620], "mapped", [4368]], [[12621, 12621], "mapped", [4369]], [[12622, 12622], "mapped", [4370]], [[12623, 12623], "mapped", [4449]], [[12624, 12624], "mapped", [4450]], [[12625, 12625], "mapped", [4451]], [[12626, 12626], "mapped", [4452]], [[12627, 12627], "mapped", [4453]], [[12628, 12628], "mapped", [4454]], [[12629, 12629], "mapped", [4455]], [[12630, 12630], "mapped", [4456]], [[12631, 12631], "mapped", [4457]], [[12632, 12632], "mapped", [4458]], [[12633, 12633], "mapped", [4459]], [[12634, 12634], "mapped", [4460]], [[12635, 12635], "mapped", [4461]], [[12636, 12636], "mapped", [4462]], [[12637, 12637], "mapped", [4463]], [[12638, 12638], "mapped", [4464]], [[12639, 12639], "mapped", [4465]], [[12640, 12640], "mapped", [4466]], [[12641, 12641], "mapped", [4467]], [[12642, 12642], "mapped", [4468]], [[12643, 12643], "mapped", [4469]], [[12644, 12644], "disallowed"], [[12645, 12645], "mapped", [4372]], [[12646, 12646], "mapped", [4373]], [[12647, 12647], "mapped", [4551]], [[12648, 12648], "mapped", [4552]], [[12649, 12649], "mapped", [4556]], [[12650, 12650], "mapped", [4558]], [[12651, 12651], "mapped", [4563]], [[12652, 12652], "mapped", [4567]], [[12653, 12653], "mapped", [4569]], [[12654, 12654], "mapped", [4380]], [[12655, 12655], "mapped", [4573]], [[12656, 12656], "mapped", [4575]], [[12657, 12657], "mapped", [4381]], [[12658, 12658], "mapped", [4382]], [[12659, 12659], "mapped", [4384]], [[12660, 12660], "mapped", [4386]], [[12661, 12661], "mapped", [4387]], [[12662, 12662], "mapped", [4391]], [[12663, 12663], "mapped", [4393]], [[12664, 12664], "mapped", [4395]], [[12665, 12665], "mapped", [4396]], [[12666, 12666], "mapped", [4397]], [[12667, 12667], "mapped", [4398]], [[12668, 12668], "mapped", [4399]], [[12669, 12669], "mapped", [4402]], [[12670, 12670], "mapped", [4406]], [[12671, 12671], "mapped", [4416]], [[12672, 12672], "mapped", [4423]], [[12673, 12673], "mapped", [4428]], [[12674, 12674], "mapped", [4593]], [[12675, 12675], "mapped", [4594]], [[12676, 12676], "mapped", [4439]], [[12677, 12677], "mapped", [4440]], [[12678, 12678], "mapped", [4441]], [[12679, 12679], "mapped", [4484]], [[12680, 12680], "mapped", [4485]], [[12681, 12681], "mapped", [4488]], [[12682, 12682], "mapped", [4497]], [[12683, 12683], "mapped", [4498]], [[12684, 12684], "mapped", [4500]], [[12685, 12685], "mapped", [4510]], [[12686, 12686], "mapped", [4513]], [[12687, 12687], "disallowed"], [[12688, 12689], "valid", [], "NV8"], [[12690, 12690], "mapped", [19968]], [[12691, 12691], "mapped", [20108]], [[12692, 12692], "mapped", [19977]], [[12693, 12693], "mapped", [22235]], [[12694, 12694], "mapped", [19978]], [[12695, 12695], "mapped", [20013]], [[12696, 12696], "mapped", [19979]], [[12697, 12697], "mapped", [30002]], [[12698, 12698], "mapped", [20057]], [[12699, 12699], "mapped", [19993]], [[12700, 12700], "mapped", [19969]], [[12701, 12701], "mapped", [22825]], [[12702, 12702], "mapped", [22320]], [[12703, 12703], "mapped", [20154]], [[12704, 12727], "valid"], [[12728, 12730], "valid"], [[12731, 12735], "disallowed"], [[12736, 12751], "valid", [], "NV8"], [[12752, 12771], "valid", [], "NV8"], [[12772, 12783], "disallowed"], [[12784, 12799], "valid"], [[12800, 12800], "disallowed_STD3_mapped", [40, 4352, 41]], [[12801, 12801], "disallowed_STD3_mapped", [40, 4354, 41]], [[12802, 12802], "disallowed_STD3_mapped", [40, 4355, 41]], [[12803, 12803], "disallowed_STD3_mapped", [40, 4357, 41]], [[12804, 12804], "disallowed_STD3_mapped", [40, 4358, 41]], [[12805, 12805], "disallowed_STD3_mapped", [40, 4359, 41]], [[12806, 12806], "disallowed_STD3_mapped", [40, 4361, 41]], [[12807, 12807], "disallowed_STD3_mapped", [40, 4363, 41]], [[12808, 12808], "disallowed_STD3_mapped", [40, 4364, 41]], [[12809, 12809], "disallowed_STD3_mapped", [40, 4366, 41]], [[12810, 12810], "disallowed_STD3_mapped", [40, 4367, 41]], [[12811, 12811], "disallowed_STD3_mapped", [40, 4368, 41]], [[12812, 12812], "disallowed_STD3_mapped", [40, 4369, 41]], [[12813, 12813], "disallowed_STD3_mapped", [40, 4370, 41]], [[12814, 12814], "disallowed_STD3_mapped", [40, 44032, 41]], [[12815, 12815], "disallowed_STD3_mapped", [40, 45208, 41]], [[12816, 12816], "disallowed_STD3_mapped", [40, 45796, 41]], [[12817, 12817], "disallowed_STD3_mapped", [40, 46972, 41]], [[12818, 12818], "disallowed_STD3_mapped", [40, 47560, 41]], [[12819, 12819], "disallowed_STD3_mapped", [40, 48148, 41]], [[12820, 12820], "disallowed_STD3_mapped", [40, 49324, 41]], [[12821, 12821], "disallowed_STD3_mapped", [40, 50500, 41]], [[12822, 12822], "disallowed_STD3_mapped", [40, 51088, 41]], [[12823, 12823], "disallowed_STD3_mapped", [40, 52264, 41]], [[12824, 12824], "disallowed_STD3_mapped", [40, 52852, 41]], [[12825, 12825], "disallowed_STD3_mapped", [40, 53440, 41]], [[12826, 12826], "disallowed_STD3_mapped", [40, 54028, 41]], [[12827, 12827], "disallowed_STD3_mapped", [40, 54616, 41]], [[12828, 12828], "disallowed_STD3_mapped", [40, 51452, 41]], [[12829, 12829], "disallowed_STD3_mapped", [40, 50724, 51204, 41]], [[12830, 12830], "disallowed_STD3_mapped", [40, 50724, 54980, 41]], [[12831, 12831], "disallowed"], [[12832, 12832], "disallowed_STD3_mapped", [40, 19968, 41]], [[12833, 12833], "disallowed_STD3_mapped", [40, 20108, 41]], [[12834, 12834], "disallowed_STD3_mapped", [40, 19977, 41]], [[12835, 12835], "disallowed_STD3_mapped", [40, 22235, 41]], [[12836, 12836], "disallowed_STD3_mapped", [40, 20116, 41]], [[12837, 12837], "disallowed_STD3_mapped", [40, 20845, 41]], [[12838, 12838], "disallowed_STD3_mapped", [40, 19971, 41]], [[12839, 12839], "disallowed_STD3_mapped", [40, 20843, 41]], [[12840, 12840], "disallowed_STD3_mapped", [40, 20061, 41]], [[12841, 12841], "disallowed_STD3_mapped", [40, 21313, 41]], [[12842, 12842], "disallowed_STD3_mapped", [40, 26376, 41]], [[12843, 12843], "disallowed_STD3_mapped", [40, 28779, 41]], [[12844, 12844], "disallowed_STD3_mapped", [40, 27700, 41]], [[12845, 12845], "disallowed_STD3_mapped", [40, 26408, 41]], [[12846, 12846], "disallowed_STD3_mapped", [40, 37329, 41]], [[12847, 12847], "disallowed_STD3_mapped", [40, 22303, 41]], [[12848, 12848], "disallowed_STD3_mapped", [40, 26085, 41]], [[12849, 12849], "disallowed_STD3_mapped", [40, 26666, 41]], [[12850, 12850], "disallowed_STD3_mapped", [40, 26377, 41]], [[12851, 12851], "disallowed_STD3_mapped", [40, 31038, 41]], [[12852, 12852], "disallowed_STD3_mapped", [40, 21517, 41]], [[12853, 12853], "disallowed_STD3_mapped", [40, 29305, 41]], [[12854, 12854], "disallowed_STD3_mapped", [40, 36001, 41]], [[12855, 12855], "disallowed_STD3_mapped", [40, 31069, 41]], [[12856, 12856], "disallowed_STD3_mapped", [40, 21172, 41]], [[12857, 12857], "disallowed_STD3_mapped", [40, 20195, 41]], [[12858, 12858], "disallowed_STD3_mapped", [40, 21628, 41]], [[12859, 12859], "disallowed_STD3_mapped", [40, 23398, 41]], [[12860, 12860], "disallowed_STD3_mapped", [40, 30435, 41]], [[12861, 12861], "disallowed_STD3_mapped", [40, 20225, 41]], [[12862, 12862], "disallowed_STD3_mapped", [40, 36039, 41]], [[12863, 12863], "disallowed_STD3_mapped", [40, 21332, 41]], [[12864, 12864], "disallowed_STD3_mapped", [40, 31085, 41]], [[12865, 12865], "disallowed_STD3_mapped", [40, 20241, 41]], [[12866, 12866], "disallowed_STD3_mapped", [40, 33258, 41]], [[12867, 12867], "disallowed_STD3_mapped", [40, 33267, 41]], [[12868, 12868], "mapped", [21839]], [[12869, 12869], "mapped", [24188]], [[12870, 12870], "mapped", [25991]], [[12871, 12871], "mapped", [31631]], [[12872, 12879], "valid", [], "NV8"], [[12880, 12880], "mapped", [112, 116, 101]], [[12881, 12881], "mapped", [50, 49]], [[12882, 12882], "mapped", [50, 50]], [[12883, 12883], "mapped", [50, 51]], [[12884, 12884], "mapped", [50, 52]], [[12885, 12885], "mapped", [50, 53]], [[12886, 12886], "mapped", [50, 54]], [[12887, 12887], "mapped", [50, 55]], [[12888, 12888], "mapped", [50, 56]], [[12889, 12889], "mapped", [50, 57]], [[12890, 12890], "mapped", [51, 48]], [[12891, 12891], "mapped", [51, 49]], [[12892, 12892], "mapped", [51, 50]], [[12893, 12893], "mapped", [51, 51]], [[12894, 12894], "mapped", [51, 52]], [[12895, 12895], "mapped", [51, 53]], [[12896, 12896], "mapped", [4352]], [[12897, 12897], "mapped", [4354]], [[12898, 12898], "mapped", [4355]], [[12899, 12899], "mapped", [4357]], [[12900, 12900], "mapped", [4358]], [[12901, 12901], "mapped", [4359]], [[12902, 12902], "mapped", [4361]], [[12903, 12903], "mapped", [4363]], [[12904, 12904], "mapped", [4364]], [[12905, 12905], "mapped", [4366]], [[12906, 12906], "mapped", [4367]], [[12907, 12907], "mapped", [4368]], [[12908, 12908], "mapped", [4369]], [[12909, 12909], "mapped", [4370]], [[12910, 12910], "mapped", [44032]], [[12911, 12911], "mapped", [45208]], [[12912, 12912], "mapped", [45796]], [[12913, 12913], "mapped", [46972]], [[12914, 12914], "mapped", [47560]], [[12915, 12915], "mapped", [48148]], [[12916, 12916], "mapped", [49324]], [[12917, 12917], "mapped", [50500]], [[12918, 12918], "mapped", [51088]], [[12919, 12919], "mapped", [52264]], [[12920, 12920], "mapped", [52852]], [[12921, 12921], "mapped", [53440]], [[12922, 12922], "mapped", [54028]], [[12923, 12923], "mapped", [54616]], [[12924, 12924], "mapped", [52280, 44256]], [[12925, 12925], "mapped", [51452, 51032]], [[12926, 12926], "mapped", [50864]], [[12927, 12927], "valid", [], "NV8"], [[12928, 12928], "mapped", [19968]], [[12929, 12929], "mapped", [20108]], [[12930, 12930], "mapped", [19977]], [[12931, 12931], "mapped", [22235]], [[12932, 12932], "mapped", [20116]], [[12933, 12933], "mapped", [20845]], [[12934, 12934], "mapped", [19971]], [[12935, 12935], "mapped", [20843]], [[12936, 12936], "mapped", [20061]], [[12937, 12937], "mapped", [21313]], [[12938, 12938], "mapped", [26376]], [[12939, 12939], "mapped", [28779]], [[12940, 12940], "mapped", [27700]], [[12941, 12941], "mapped", [26408]], [[12942, 12942], "mapped", [37329]], [[12943, 12943], "mapped", [22303]], [[12944, 12944], "mapped", [26085]], [[12945, 12945], "mapped", [26666]], [[12946, 12946], "mapped", [26377]], [[12947, 12947], "mapped", [31038]], [[12948, 12948], "mapped", [21517]], [[12949, 12949], "mapped", [29305]], [[12950, 12950], "mapped", [36001]], [[12951, 12951], "mapped", [31069]], [[12952, 12952], "mapped", [21172]], [[12953, 12953], "mapped", [31192]], [[12954, 12954], "mapped", [30007]], [[12955, 12955], "mapped", [22899]], [[12956, 12956], "mapped", [36969]], [[12957, 12957], "mapped", [20778]], [[12958, 12958], "mapped", [21360]], [[12959, 12959], "mapped", [27880]], [[12960, 12960], "mapped", [38917]], [[12961, 12961], "mapped", [20241]], [[12962, 12962], "mapped", [20889]], [[12963, 12963], "mapped", [27491]], [[12964, 12964], "mapped", [19978]], [[12965, 12965], "mapped", [20013]], [[12966, 12966], "mapped", [19979]], [[12967, 12967], "mapped", [24038]], [[12968, 12968], "mapped", [21491]], [[12969, 12969], "mapped", [21307]], [[12970, 12970], "mapped", [23447]], [[12971, 12971], "mapped", [23398]], [[12972, 12972], "mapped", [30435]], [[12973, 12973], "mapped", [20225]], [[12974, 12974], "mapped", [36039]], [[12975, 12975], "mapped", [21332]], [[12976, 12976], "mapped", [22812]], [[12977, 12977], "mapped", [51, 54]], [[12978, 12978], "mapped", [51, 55]], [[12979, 12979], "mapped", [51, 56]], [[12980, 12980], "mapped", [51, 57]], [[12981, 12981], "mapped", [52, 48]], [[12982, 12982], "mapped", [52, 49]], [[12983, 12983], "mapped", [52, 50]], [[12984, 12984], "mapped", [52, 51]], [[12985, 12985], "mapped", [52, 52]], [[12986, 12986], "mapped", [52, 53]], [[12987, 12987], "mapped", [52, 54]], [[12988, 12988], "mapped", [52, 55]], [[12989, 12989], "mapped", [52, 56]], [[12990, 12990], "mapped", [52, 57]], [[12991, 12991], "mapped", [53, 48]], [[12992, 12992], "mapped", [49, 26376]], [[12993, 12993], "mapped", [50, 26376]], [[12994, 12994], "mapped", [51, 26376]], [[12995, 12995], "mapped", [52, 26376]], [[12996, 12996], "mapped", [53, 26376]], [[12997, 12997], "mapped", [54, 26376]], [[12998, 12998], "mapped", [55, 26376]], [[12999, 12999], "mapped", [56, 26376]], [[13e3, 13e3], "mapped", [57, 26376]], [[13001, 13001], "mapped", [49, 48, 26376]], [[13002, 13002], "mapped", [49, 49, 26376]], [[13003, 13003], "mapped", [49, 50, 26376]], [[13004, 13004], "mapped", [104, 103]], [[13005, 13005], "mapped", [101, 114, 103]], [[13006, 13006], "mapped", [101, 118]], [[13007, 13007], "mapped", [108, 116, 100]], [[13008, 13008], "mapped", [12450]], [[13009, 13009], "mapped", [12452]], [[13010, 13010], "mapped", [12454]], [[13011, 13011], "mapped", [12456]], [[13012, 13012], "mapped", [12458]], [[13013, 13013], "mapped", [12459]], [[13014, 13014], "mapped", [12461]], [[13015, 13015], "mapped", [12463]], [[13016, 13016], "mapped", [12465]], [[13017, 13017], "mapped", [12467]], [[13018, 13018], "mapped", [12469]], [[13019, 13019], "mapped", [12471]], [[13020, 13020], "mapped", [12473]], [[13021, 13021], "mapped", [12475]], [[13022, 13022], "mapped", [12477]], [[13023, 13023], "mapped", [12479]], [[13024, 13024], "mapped", [12481]], [[13025, 13025], "mapped", [12484]], [[13026, 13026], "mapped", [12486]], [[13027, 13027], "mapped", [12488]], [[13028, 13028], "mapped", [12490]], [[13029, 13029], "mapped", [12491]], [[13030, 13030], "mapped", [12492]], [[13031, 13031], "mapped", [12493]], [[13032, 13032], "mapped", [12494]], [[13033, 13033], "mapped", [12495]], [[13034, 13034], "mapped", [12498]], [[13035, 13035], "mapped", [12501]], [[13036, 13036], "mapped", [12504]], [[13037, 13037], "mapped", [12507]], [[13038, 13038], "mapped", [12510]], [[13039, 13039], "mapped", [12511]], [[13040, 13040], "mapped", [12512]], [[13041, 13041], "mapped", [12513]], [[13042, 13042], "mapped", [12514]], [[13043, 13043], "mapped", [12516]], [[13044, 13044], "mapped", [12518]], [[13045, 13045], "mapped", [12520]], [[13046, 13046], "mapped", [12521]], [[13047, 13047], "mapped", [12522]], [[13048, 13048], "mapped", [12523]], [[13049, 13049], "mapped", [12524]], [[13050, 13050], "mapped", [12525]], [[13051, 13051], "mapped", [12527]], [[13052, 13052], "mapped", [12528]], [[13053, 13053], "mapped", [12529]], [[13054, 13054], "mapped", [12530]], [[13055, 13055], "disallowed"], [[13056, 13056], "mapped", [12450, 12497, 12540, 12488]], [[13057, 13057], "mapped", [12450, 12523, 12501, 12449]], [[13058, 13058], "mapped", [12450, 12531, 12506, 12450]], [[13059, 13059], "mapped", [12450, 12540, 12523]], [[13060, 13060], "mapped", [12452, 12491, 12531, 12464]], [[13061, 13061], "mapped", [12452, 12531, 12481]], [[13062, 13062], "mapped", [12454, 12457, 12531]], [[13063, 13063], "mapped", [12456, 12473, 12463, 12540, 12489]], [[13064, 13064], "mapped", [12456, 12540, 12459, 12540]], [[13065, 13065], "mapped", [12458, 12531, 12473]], [[13066, 13066], "mapped", [12458, 12540, 12512]], [[13067, 13067], "mapped", [12459, 12452, 12522]], [[13068, 13068], "mapped", [12459, 12521, 12483, 12488]], [[13069, 13069], "mapped", [12459, 12525, 12522, 12540]], [[13070, 13070], "mapped", [12460, 12525, 12531]], [[13071, 13071], "mapped", [12460, 12531, 12510]], [[13072, 13072], "mapped", [12462, 12460]], [[13073, 13073], "mapped", [12462, 12491, 12540]], [[13074, 13074], "mapped", [12461, 12517, 12522, 12540]], [[13075, 13075], "mapped", [12462, 12523, 12480, 12540]], [[13076, 13076], "mapped", [12461, 12525]], [[13077, 13077], "mapped", [12461, 12525, 12464, 12521, 12512]], [[13078, 13078], "mapped", [12461, 12525, 12513, 12540, 12488, 12523]], [[13079, 13079], "mapped", [12461, 12525, 12527, 12483, 12488]], [[13080, 13080], "mapped", [12464, 12521, 12512]], [[13081, 13081], "mapped", [12464, 12521, 12512, 12488, 12531]], [[13082, 13082], "mapped", [12463, 12523, 12476, 12452, 12525]], [[13083, 13083], "mapped", [12463, 12525, 12540, 12493]], [[13084, 13084], "mapped", [12465, 12540, 12473]], [[13085, 13085], "mapped", [12467, 12523, 12490]], [[13086, 13086], "mapped", [12467, 12540, 12509]], [[13087, 13087], "mapped", [12469, 12452, 12463, 12523]], [[13088, 13088], "mapped", [12469, 12531, 12481, 12540, 12512]], [[13089, 13089], "mapped", [12471, 12522, 12531, 12464]], [[13090, 13090], "mapped", [12475, 12531, 12481]], [[13091, 13091], "mapped", [12475, 12531, 12488]], [[13092, 13092], "mapped", [12480, 12540, 12473]], [[13093, 13093], "mapped", [12487, 12471]], [[13094, 13094], "mapped", [12489, 12523]], [[13095, 13095], "mapped", [12488, 12531]], [[13096, 13096], "mapped", [12490, 12494]], [[13097, 13097], "mapped", [12494, 12483, 12488]], [[13098, 13098], "mapped", [12495, 12452, 12484]], [[13099, 13099], "mapped", [12497, 12540, 12475, 12531, 12488]], [[13100, 13100], "mapped", [12497, 12540, 12484]], [[13101, 13101], "mapped", [12496, 12540, 12524, 12523]], [[13102, 13102], "mapped", [12500, 12450, 12473, 12488, 12523]], [[13103, 13103], "mapped", [12500, 12463, 12523]], [[13104, 13104], "mapped", [12500, 12467]], [[13105, 13105], "mapped", [12499, 12523]], [[13106, 13106], "mapped", [12501, 12449, 12521, 12483, 12489]], [[13107, 13107], "mapped", [12501, 12451, 12540, 12488]], [[13108, 13108], "mapped", [12502, 12483, 12471, 12455, 12523]], [[13109, 13109], "mapped", [12501, 12521, 12531]], [[13110, 13110], "mapped", [12504, 12463, 12479, 12540, 12523]], [[13111, 13111], "mapped", [12506, 12477]], [[13112, 13112], "mapped", [12506, 12491, 12498]], [[13113, 13113], "mapped", [12504, 12523, 12484]], [[13114, 13114], "mapped", [12506, 12531, 12473]], [[13115, 13115], "mapped", [12506, 12540, 12472]], [[13116, 13116], "mapped", [12505, 12540, 12479]], [[13117, 13117], "mapped", [12509, 12452, 12531, 12488]], [[13118, 13118], "mapped", [12508, 12523, 12488]], [[13119, 13119], "mapped", [12507, 12531]], [[13120, 13120], "mapped", [12509, 12531, 12489]], [[13121, 13121], "mapped", [12507, 12540, 12523]], [[13122, 13122], "mapped", [12507, 12540, 12531]], [[13123, 13123], "mapped", [12510, 12452, 12463, 12525]], [[13124, 13124], "mapped", [12510, 12452, 12523]], [[13125, 13125], "mapped", [12510, 12483, 12495]], [[13126, 13126], "mapped", [12510, 12523, 12463]], [[13127, 13127], "mapped", [12510, 12531, 12471, 12519, 12531]], [[13128, 13128], "mapped", [12511, 12463, 12525, 12531]], [[13129, 13129], "mapped", [12511, 12522]], [[13130, 13130], "mapped", [12511, 12522, 12496, 12540, 12523]], [[13131, 13131], "mapped", [12513, 12460]], [[13132, 13132], "mapped", [12513, 12460, 12488, 12531]], [[13133, 13133], "mapped", [12513, 12540, 12488, 12523]], [[13134, 13134], "mapped", [12516, 12540, 12489]], [[13135, 13135], "mapped", [12516, 12540, 12523]], [[13136, 13136], "mapped", [12518, 12450, 12531]], [[13137, 13137], "mapped", [12522, 12483, 12488, 12523]], [[13138, 13138], "mapped", [12522, 12521]], [[13139, 13139], "mapped", [12523, 12500, 12540]], [[13140, 13140], "mapped", [12523, 12540, 12502, 12523]], [[13141, 13141], "mapped", [12524, 12512]], [[13142, 13142], "mapped", [12524, 12531, 12488, 12466, 12531]], [[13143, 13143], "mapped", [12527, 12483, 12488]], [[13144, 13144], "mapped", [48, 28857]], [[13145, 13145], "mapped", [49, 28857]], [[13146, 13146], "mapped", [50, 28857]], [[13147, 13147], "mapped", [51, 28857]], [[13148, 13148], "mapped", [52, 28857]], [[13149, 13149], "mapped", [53, 28857]], [[13150, 13150], "mapped", [54, 28857]], [[13151, 13151], "mapped", [55, 28857]], [[13152, 13152], "mapped", [56, 28857]], [[13153, 13153], "mapped", [57, 28857]], [[13154, 13154], "mapped", [49, 48, 28857]], [[13155, 13155], "mapped", [49, 49, 28857]], [[13156, 13156], "mapped", [49, 50, 28857]], [[13157, 13157], "mapped", [49, 51, 28857]], [[13158, 13158], "mapped", [49, 52, 28857]], [[13159, 13159], "mapped", [49, 53, 28857]], [[13160, 13160], "mapped", [49, 54, 28857]], [[13161, 13161], "mapped", [49, 55, 28857]], [[13162, 13162], "mapped", [49, 56, 28857]], [[13163, 13163], "mapped", [49, 57, 28857]], [[13164, 13164], "mapped", [50, 48, 28857]], [[13165, 13165], "mapped", [50, 49, 28857]], [[13166, 13166], "mapped", [50, 50, 28857]], [[13167, 13167], "mapped", [50, 51, 28857]], [[13168, 13168], "mapped", [50, 52, 28857]], [[13169, 13169], "mapped", [104, 112, 97]], [[13170, 13170], "mapped", [100, 97]], [[13171, 13171], "mapped", [97, 117]], [[13172, 13172], "mapped", [98, 97, 114]], [[13173, 13173], "mapped", [111, 118]], [[13174, 13174], "mapped", [112, 99]], [[13175, 13175], "mapped", [100, 109]], [[13176, 13176], "mapped", [100, 109, 50]], [[13177, 13177], "mapped", [100, 109, 51]], [[13178, 13178], "mapped", [105, 117]], [[13179, 13179], "mapped", [24179, 25104]], [[13180, 13180], "mapped", [26157, 21644]], [[13181, 13181], "mapped", [22823, 27491]], [[13182, 13182], "mapped", [26126, 27835]], [[13183, 13183], "mapped", [26666, 24335, 20250, 31038]], [[13184, 13184], "mapped", [112, 97]], [[13185, 13185], "mapped", [110, 97]], [[13186, 13186], "mapped", [956, 97]], [[13187, 13187], "mapped", [109, 97]], [[13188, 13188], "mapped", [107, 97]], [[13189, 13189], "mapped", [107, 98]], [[13190, 13190], "mapped", [109, 98]], [[13191, 13191], "mapped", [103, 98]], [[13192, 13192], "mapped", [99, 97, 108]], [[13193, 13193], "mapped", [107, 99, 97, 108]], [[13194, 13194], "mapped", [112, 102]], [[13195, 13195], "mapped", [110, 102]], [[13196, 13196], "mapped", [956, 102]], [[13197, 13197], "mapped", [956, 103]], [[13198, 13198], "mapped", [109, 103]], [[13199, 13199], "mapped", [107, 103]], [[13200, 13200], "mapped", [104, 122]], [[13201, 13201], "mapped", [107, 104, 122]], [[13202, 13202], "mapped", [109, 104, 122]], [[13203, 13203], "mapped", [103, 104, 122]], [[13204, 13204], "mapped", [116, 104, 122]], [[13205, 13205], "mapped", [956, 108]], [[13206, 13206], "mapped", [109, 108]], [[13207, 13207], "mapped", [100, 108]], [[13208, 13208], "mapped", [107, 108]], [[13209, 13209], "mapped", [102, 109]], [[13210, 13210], "mapped", [110, 109]], [[13211, 13211], "mapped", [956, 109]], [[13212, 13212], "mapped", [109, 109]], [[13213, 13213], "mapped", [99, 109]], [[13214, 13214], "mapped", [107, 109]], [[13215, 13215], "mapped", [109, 109, 50]], [[13216, 13216], "mapped", [99, 109, 50]], [[13217, 13217], "mapped", [109, 50]], [[13218, 13218], "mapped", [107, 109, 50]], [[13219, 13219], "mapped", [109, 109, 51]], [[13220, 13220], "mapped", [99, 109, 51]], [[13221, 13221], "mapped", [109, 51]], [[13222, 13222], "mapped", [107, 109, 51]], [[13223, 13223], "mapped", [109, 8725, 115]], [[13224, 13224], "mapped", [109, 8725, 115, 50]], [[13225, 13225], "mapped", [112, 97]], [[13226, 13226], "mapped", [107, 112, 97]], [[13227, 13227], "mapped", [109, 112, 97]], [[13228, 13228], "mapped", [103, 112, 97]], [[13229, 13229], "mapped", [114, 97, 100]], [[13230, 13230], "mapped", [114, 97, 100, 8725, 115]], [[13231, 13231], "mapped", [114, 97, 100, 8725, 115, 50]], [[13232, 13232], "mapped", [112, 115]], [[13233, 13233], "mapped", [110, 115]], [[13234, 13234], "mapped", [956, 115]], [[13235, 13235], "mapped", [109, 115]], [[13236, 13236], "mapped", [112, 118]], [[13237, 13237], "mapped", [110, 118]], [[13238, 13238], "mapped", [956, 118]], [[13239, 13239], "mapped", [109, 118]], [[13240, 13240], "mapped", [107, 118]], [[13241, 13241], "mapped", [109, 118]], [[13242, 13242], "mapped", [112, 119]], [[13243, 13243], "mapped", [110, 119]], [[13244, 13244], "mapped", [956, 119]], [[13245, 13245], "mapped", [109, 119]], [[13246, 13246], "mapped", [107, 119]], [[13247, 13247], "mapped", [109, 119]], [[13248, 13248], "mapped", [107, 969]], [[13249, 13249], "mapped", [109, 969]], [[13250, 13250], "disallowed"], [[13251, 13251], "mapped", [98, 113]], [[13252, 13252], "mapped", [99, 99]], [[13253, 13253], "mapped", [99, 100]], [[13254, 13254], "mapped", [99, 8725, 107, 103]], [[13255, 13255], "disallowed"], [[13256, 13256], "mapped", [100, 98]], [[13257, 13257], "mapped", [103, 121]], [[13258, 13258], "mapped", [104, 97]], [[13259, 13259], "mapped", [104, 112]], [[13260, 13260], "mapped", [105, 110]], [[13261, 13261], "mapped", [107, 107]], [[13262, 13262], "mapped", [107, 109]], [[13263, 13263], "mapped", [107, 116]], [[13264, 13264], "mapped", [108, 109]], [[13265, 13265], "mapped", [108, 110]], [[13266, 13266], "mapped", [108, 111, 103]], [[13267, 13267], "mapped", [108, 120]], [[13268, 13268], "mapped", [109, 98]], [[13269, 13269], "mapped", [109, 105, 108]], [[13270, 13270], "mapped", [109, 111, 108]], [[13271, 13271], "mapped", [112, 104]], [[13272, 13272], "disallowed"], [[13273, 13273], "mapped", [112, 112, 109]], [[13274, 13274], "mapped", [112, 114]], [[13275, 13275], "mapped", [115, 114]], [[13276, 13276], "mapped", [115, 118]], [[13277, 13277], "mapped", [119, 98]], [[13278, 13278], "mapped", [118, 8725, 109]], [[13279, 13279], "mapped", [97, 8725, 109]], [[13280, 13280], "mapped", [49, 26085]], [[13281, 13281], "mapped", [50, 26085]], [[13282, 13282], "mapped", [51, 26085]], [[13283, 13283], "mapped", [52, 26085]], [[13284, 13284], "mapped", [53, 26085]], [[13285, 13285], "mapped", [54, 26085]], [[13286, 13286], "mapped", [55, 26085]], [[13287, 13287], "mapped", [56, 26085]], [[13288, 13288], "mapped", [57, 26085]], [[13289, 13289], "mapped", [49, 48, 26085]], [[13290, 13290], "mapped", [49, 49, 26085]], [[13291, 13291], "mapped", [49, 50, 26085]], [[13292, 13292], "mapped", [49, 51, 26085]], [[13293, 13293], "mapped", [49, 52, 26085]], [[13294, 13294], "mapped", [49, 53, 26085]], [[13295, 13295], "mapped", [49, 54, 26085]], [[13296, 13296], "mapped", [49, 55, 26085]], [[13297, 13297], "mapped", [49, 56, 26085]], [[13298, 13298], "mapped", [49, 57, 26085]], [[13299, 13299], "mapped", [50, 48, 26085]], [[13300, 13300], "mapped", [50, 49, 26085]], [[13301, 13301], "mapped", [50, 50, 26085]], [[13302, 13302], "mapped", [50, 51, 26085]], [[13303, 13303], "mapped", [50, 52, 26085]], [[13304, 13304], "mapped", [50, 53, 26085]], [[13305, 13305], "mapped", [50, 54, 26085]], [[13306, 13306], "mapped", [50, 55, 26085]], [[13307, 13307], "mapped", [50, 56, 26085]], [[13308, 13308], "mapped", [50, 57, 26085]], [[13309, 13309], "mapped", [51, 48, 26085]], [[13310, 13310], "mapped", [51, 49, 26085]], [[13311, 13311], "mapped", [103, 97, 108]], [[13312, 19893], "valid"], [[19894, 19903], "disallowed"], [[19904, 19967], "valid", [], "NV8"], [[19968, 40869], "valid"], [[40870, 40891], "valid"], [[40892, 40899], "valid"], [[40900, 40907], "valid"], [[40908, 40908], "valid"], [[40909, 40917], "valid"], [[40918, 40959], "disallowed"], [[40960, 42124], "valid"], [[42125, 42127], "disallowed"], [[42128, 42145], "valid", [], "NV8"], [[42146, 42147], "valid", [], "NV8"], [[42148, 42163], "valid", [], "NV8"], [[42164, 42164], "valid", [], "NV8"], [[42165, 42176], "valid", [], "NV8"], [[42177, 42177], "valid", [], "NV8"], [[42178, 42180], "valid", [], "NV8"], [[42181, 42181], "valid", [], "NV8"], [[42182, 42182], "valid", [], "NV8"], [[42183, 42191], "disallowed"], [[42192, 42237], "valid"], [[42238, 42239], "valid", [], "NV8"], [[42240, 42508], "valid"], [[42509, 42511], "valid", [], "NV8"], [[42512, 42539], "valid"], [[42540, 42559], "disallowed"], [[42560, 42560], "mapped", [42561]], [[42561, 42561], "valid"], [[42562, 42562], "mapped", [42563]], [[42563, 42563], "valid"], [[42564, 42564], "mapped", [42565]], [[42565, 42565], "valid"], [[42566, 42566], "mapped", [42567]], [[42567, 42567], "valid"], [[42568, 42568], "mapped", [42569]], [[42569, 42569], "valid"], [[42570, 42570], "mapped", [42571]], [[42571, 42571], "valid"], [[42572, 42572], "mapped", [42573]], [[42573, 42573], "valid"], [[42574, 42574], "mapped", [42575]], [[42575, 42575], "valid"], [[42576, 42576], "mapped", [42577]], [[42577, 42577], "valid"], [[42578, 42578], "mapped", [42579]], [[42579, 42579], "valid"], [[42580, 42580], "mapped", [42581]], [[42581, 42581], "valid"], [[42582, 42582], "mapped", [42583]], [[42583, 42583], "valid"], [[42584, 42584], "mapped", [42585]], [[42585, 42585], "valid"], [[42586, 42586], "mapped", [42587]], [[42587, 42587], "valid"], [[42588, 42588], "mapped", [42589]], [[42589, 42589], "valid"], [[42590, 42590], "mapped", [42591]], [[42591, 42591], "valid"], [[42592, 42592], "mapped", [42593]], [[42593, 42593], "valid"], [[42594, 42594], "mapped", [42595]], [[42595, 42595], "valid"], [[42596, 42596], "mapped", [42597]], [[42597, 42597], "valid"], [[42598, 42598], "mapped", [42599]], [[42599, 42599], "valid"], [[42600, 42600], "mapped", [42601]], [[42601, 42601], "valid"], [[42602, 42602], "mapped", [42603]], [[42603, 42603], "valid"], [[42604, 42604], "mapped", [42605]], [[42605, 42607], "valid"], [[42608, 42611], "valid", [], "NV8"], [[42612, 42619], "valid"], [[42620, 42621], "valid"], [[42622, 42622], "valid", [], "NV8"], [[42623, 42623], "valid"], [[42624, 42624], "mapped", [42625]], [[42625, 42625], "valid"], [[42626, 42626], "mapped", [42627]], [[42627, 42627], "valid"], [[42628, 42628], "mapped", [42629]], [[42629, 42629], "valid"], [[42630, 42630], "mapped", [42631]], [[42631, 42631], "valid"], [[42632, 42632], "mapped", [42633]], [[42633, 42633], "valid"], [[42634, 42634], "mapped", [42635]], [[42635, 42635], "valid"], [[42636, 42636], "mapped", [42637]], [[42637, 42637], "valid"], [[42638, 42638], "mapped", [42639]], [[42639, 42639], "valid"], [[42640, 42640], "mapped", [42641]], [[42641, 42641], "valid"], [[42642, 42642], "mapped", [42643]], [[42643, 42643], "valid"], [[42644, 42644], "mapped", [42645]], [[42645, 42645], "valid"], [[42646, 42646], "mapped", [42647]], [[42647, 42647], "valid"], [[42648, 42648], "mapped", [42649]], [[42649, 42649], "valid"], [[42650, 42650], "mapped", [42651]], [[42651, 42651], "valid"], [[42652, 42652], "mapped", [1098]], [[42653, 42653], "mapped", [1100]], [[42654, 42654], "valid"], [[42655, 42655], "valid"], [[42656, 42725], "valid"], [[42726, 42735], "valid", [], "NV8"], [[42736, 42737], "valid"], [[42738, 42743], "valid", [], "NV8"], [[42744, 42751], "disallowed"], [[42752, 42774], "valid", [], "NV8"], [[42775, 42778], "valid"], [[42779, 42783], "valid"], [[42784, 42785], "valid", [], "NV8"], [[42786, 42786], "mapped", [42787]], [[42787, 42787], "valid"], [[42788, 42788], "mapped", [42789]], [[42789, 42789], "valid"], [[42790, 42790], "mapped", [42791]], [[42791, 42791], "valid"], [[42792, 42792], "mapped", [42793]], [[42793, 42793], "valid"], [[42794, 42794], "mapped", [42795]], [[42795, 42795], "valid"], [[42796, 42796], "mapped", [42797]], [[42797, 42797], "valid"], [[42798, 42798], "mapped", [42799]], [[42799, 42801], "valid"], [[42802, 42802], "mapped", [42803]], [[42803, 42803], "valid"], [[42804, 42804], "mapped", [42805]], [[42805, 42805], "valid"], [[42806, 42806], "mapped", [42807]], [[42807, 42807], "valid"], [[42808, 42808], "mapped", [42809]], [[42809, 42809], "valid"], [[42810, 42810], "mapped", [42811]], [[42811, 42811], "valid"], [[42812, 42812], "mapped", [42813]], [[42813, 42813], "valid"], [[42814, 42814], "mapped", [42815]], [[42815, 42815], "valid"], [[42816, 42816], "mapped", [42817]], [[42817, 42817], "valid"], [[42818, 42818], "mapped", [42819]], [[42819, 42819], "valid"], [[42820, 42820], "mapped", [42821]], [[42821, 42821], "valid"], [[42822, 42822], "mapped", [42823]], [[42823, 42823], "valid"], [[42824, 42824], "mapped", [42825]], [[42825, 42825], "valid"], [[42826, 42826], "mapped", [42827]], [[42827, 42827], "valid"], [[42828, 42828], "mapped", [42829]], [[42829, 42829], "valid"], [[42830, 42830], "mapped", [42831]], [[42831, 42831], "valid"], [[42832, 42832], "mapped", [42833]], [[42833, 42833], "valid"], [[42834, 42834], "mapped", [42835]], [[42835, 42835], "valid"], [[42836, 42836], "mapped", [42837]], [[42837, 42837], "valid"], [[42838, 42838], "mapped", [42839]], [[42839, 42839], "valid"], [[42840, 42840], "mapped", [42841]], [[42841, 42841], "valid"], [[42842, 42842], "mapped", [42843]], [[42843, 42843], "valid"], [[42844, 42844], "mapped", [42845]], [[42845, 42845], "valid"], [[42846, 42846], "mapped", [42847]], [[42847, 42847], "valid"], [[42848, 42848], "mapped", [42849]], [[42849, 42849], "valid"], [[42850, 42850], "mapped", [42851]], [[42851, 42851], "valid"], [[42852, 42852], "mapped", [42853]], [[42853, 42853], "valid"], [[42854, 42854], "mapped", [42855]], [[42855, 42855], "valid"], [[42856, 42856], "mapped", [42857]], [[42857, 42857], "valid"], [[42858, 42858], "mapped", [42859]], [[42859, 42859], "valid"], [[42860, 42860], "mapped", [42861]], [[42861, 42861], "valid"], [[42862, 42862], "mapped", [42863]], [[42863, 42863], "valid"], [[42864, 42864], "mapped", [42863]], [[42865, 42872], "valid"], [[42873, 42873], "mapped", [42874]], [[42874, 42874], "valid"], [[42875, 42875], "mapped", [42876]], [[42876, 42876], "valid"], [[42877, 42877], "mapped", [7545]], [[42878, 42878], "mapped", [42879]], [[42879, 42879], "valid"], [[42880, 42880], "mapped", [42881]], [[42881, 42881], "valid"], [[42882, 42882], "mapped", [42883]], [[42883, 42883], "valid"], [[42884, 42884], "mapped", [42885]], [[42885, 42885], "valid"], [[42886, 42886], "mapped", [42887]], [[42887, 42888], "valid"], [[42889, 42890], "valid", [], "NV8"], [[42891, 42891], "mapped", [42892]], [[42892, 42892], "valid"], [[42893, 42893], "mapped", [613]], [[42894, 42894], "valid"], [[42895, 42895], "valid"], [[42896, 42896], "mapped", [42897]], [[42897, 42897], "valid"], [[42898, 42898], "mapped", [42899]], [[42899, 42899], "valid"], [[42900, 42901], "valid"], [[42902, 42902], "mapped", [42903]], [[42903, 42903], "valid"], [[42904, 42904], "mapped", [42905]], [[42905, 42905], "valid"], [[42906, 42906], "mapped", [42907]], [[42907, 42907], "valid"], [[42908, 42908], "mapped", [42909]], [[42909, 42909], "valid"], [[42910, 42910], "mapped", [42911]], [[42911, 42911], "valid"], [[42912, 42912], "mapped", [42913]], [[42913, 42913], "valid"], [[42914, 42914], "mapped", [42915]], [[42915, 42915], "valid"], [[42916, 42916], "mapped", [42917]], [[42917, 42917], "valid"], [[42918, 42918], "mapped", [42919]], [[42919, 42919], "valid"], [[42920, 42920], "mapped", [42921]], [[42921, 42921], "valid"], [[42922, 42922], "mapped", [614]], [[42923, 42923], "mapped", [604]], [[42924, 42924], "mapped", [609]], [[42925, 42925], "mapped", [620]], [[42926, 42927], "disallowed"], [[42928, 42928], "mapped", [670]], [[42929, 42929], "mapped", [647]], [[42930, 42930], "mapped", [669]], [[42931, 42931], "mapped", [43859]], [[42932, 42932], "mapped", [42933]], [[42933, 42933], "valid"], [[42934, 42934], "mapped", [42935]], [[42935, 42935], "valid"], [[42936, 42998], "disallowed"], [[42999, 42999], "valid"], [[43e3, 43e3], "mapped", [295]], [[43001, 43001], "mapped", [339]], [[43002, 43002], "valid"], [[43003, 43007], "valid"], [[43008, 43047], "valid"], [[43048, 43051], "valid", [], "NV8"], [[43052, 43055], "disallowed"], [[43056, 43065], "valid", [], "NV8"], [[43066, 43071], "disallowed"], [[43072, 43123], "valid"], [[43124, 43127], "valid", [], "NV8"], [[43128, 43135], "disallowed"], [[43136, 43204], "valid"], [[43205, 43213], "disallowed"], [[43214, 43215], "valid", [], "NV8"], [[43216, 43225], "valid"], [[43226, 43231], "disallowed"], [[43232, 43255], "valid"], [[43256, 43258], "valid", [], "NV8"], [[43259, 43259], "valid"], [[43260, 43260], "valid", [], "NV8"], [[43261, 43261], "valid"], [[43262, 43263], "disallowed"], [[43264, 43309], "valid"], [[43310, 43311], "valid", [], "NV8"], [[43312, 43347], "valid"], [[43348, 43358], "disallowed"], [[43359, 43359], "valid", [], "NV8"], [[43360, 43388], "valid", [], "NV8"], [[43389, 43391], "disallowed"], [[43392, 43456], "valid"], [[43457, 43469], "valid", [], "NV8"], [[43470, 43470], "disallowed"], [[43471, 43481], "valid"], [[43482, 43485], "disallowed"], [[43486, 43487], "valid", [], "NV8"], [[43488, 43518], "valid"], [[43519, 43519], "disallowed"], [[43520, 43574], "valid"], [[43575, 43583], "disallowed"], [[43584, 43597], "valid"], [[43598, 43599], "disallowed"], [[43600, 43609], "valid"], [[43610, 43611], "disallowed"], [[43612, 43615], "valid", [], "NV8"], [[43616, 43638], "valid"], [[43639, 43641], "valid", [], "NV8"], [[43642, 43643], "valid"], [[43644, 43647], "valid"], [[43648, 43714], "valid"], [[43715, 43738], "disallowed"], [[43739, 43741], "valid"], [[43742, 43743], "valid", [], "NV8"], [[43744, 43759], "valid"], [[43760, 43761], "valid", [], "NV8"], [[43762, 43766], "valid"], [[43767, 43776], "disallowed"], [[43777, 43782], "valid"], [[43783, 43784], "disallowed"], [[43785, 43790], "valid"], [[43791, 43792], "disallowed"], [[43793, 43798], "valid"], [[43799, 43807], "disallowed"], [[43808, 43814], "valid"], [[43815, 43815], "disallowed"], [[43816, 43822], "valid"], [[43823, 43823], "disallowed"], [[43824, 43866], "valid"], [[43867, 43867], "valid", [], "NV8"], [[43868, 43868], "mapped", [42791]], [[43869, 43869], "mapped", [43831]], [[43870, 43870], "mapped", [619]], [[43871, 43871], "mapped", [43858]], [[43872, 43875], "valid"], [[43876, 43877], "valid"], [[43878, 43887], "disallowed"], [[43888, 43888], "mapped", [5024]], [[43889, 43889], "mapped", [5025]], [[43890, 43890], "mapped", [5026]], [[43891, 43891], "mapped", [5027]], [[43892, 43892], "mapped", [5028]], [[43893, 43893], "mapped", [5029]], [[43894, 43894], "mapped", [5030]], [[43895, 43895], "mapped", [5031]], [[43896, 43896], "mapped", [5032]], [[43897, 43897], "mapped", [5033]], [[43898, 43898], "mapped", [5034]], [[43899, 43899], "mapped", [5035]], [[43900, 43900], "mapped", [5036]], [[43901, 43901], "mapped", [5037]], [[43902, 43902], "mapped", [5038]], [[43903, 43903], "mapped", [5039]], [[43904, 43904], "mapped", [5040]], [[43905, 43905], "mapped", [5041]], [[43906, 43906], "mapped", [5042]], [[43907, 43907], "mapped", [5043]], [[43908, 43908], "mapped", [5044]], [[43909, 43909], "mapped", [5045]], [[43910, 43910], "mapped", [5046]], [[43911, 43911], "mapped", [5047]], [[43912, 43912], "mapped", [5048]], [[43913, 43913], "mapped", [5049]], [[43914, 43914], "mapped", [5050]], [[43915, 43915], "mapped", [5051]], [[43916, 43916], "mapped", [5052]], [[43917, 43917], "mapped", [5053]], [[43918, 43918], "mapped", [5054]], [[43919, 43919], "mapped", [5055]], [[43920, 43920], "mapped", [5056]], [[43921, 43921], "mapped", [5057]], [[43922, 43922], "mapped", [5058]], [[43923, 43923], "mapped", [5059]], [[43924, 43924], "mapped", [5060]], [[43925, 43925], "mapped", [5061]], [[43926, 43926], "mapped", [5062]], [[43927, 43927], "mapped", [5063]], [[43928, 43928], "mapped", [5064]], [[43929, 43929], "mapped", [5065]], [[43930, 43930], "mapped", [5066]], [[43931, 43931], "mapped", [5067]], [[43932, 43932], "mapped", [5068]], [[43933, 43933], "mapped", [5069]], [[43934, 43934], "mapped", [5070]], [[43935, 43935], "mapped", [5071]], [[43936, 43936], "mapped", [5072]], [[43937, 43937], "mapped", [5073]], [[43938, 43938], "mapped", [5074]], [[43939, 43939], "mapped", [5075]], [[43940, 43940], "mapped", [5076]], [[43941, 43941], "mapped", [5077]], [[43942, 43942], "mapped", [5078]], [[43943, 43943], "mapped", [5079]], [[43944, 43944], "mapped", [5080]], [[43945, 43945], "mapped", [5081]], [[43946, 43946], "mapped", [5082]], [[43947, 43947], "mapped", [5083]], [[43948, 43948], "mapped", [5084]], [[43949, 43949], "mapped", [5085]], [[43950, 43950], "mapped", [5086]], [[43951, 43951], "mapped", [5087]], [[43952, 43952], "mapped", [5088]], [[43953, 43953], "mapped", [5089]], [[43954, 43954], "mapped", [5090]], [[43955, 43955], "mapped", [5091]], [[43956, 43956], "mapped", [5092]], [[43957, 43957], "mapped", [5093]], [[43958, 43958], "mapped", [5094]], [[43959, 43959], "mapped", [5095]], [[43960, 43960], "mapped", [5096]], [[43961, 43961], "mapped", [5097]], [[43962, 43962], "mapped", [5098]], [[43963, 43963], "mapped", [5099]], [[43964, 43964], "mapped", [5100]], [[43965, 43965], "mapped", [5101]], [[43966, 43966], "mapped", [5102]], [[43967, 43967], "mapped", [5103]], [[43968, 44010], "valid"], [[44011, 44011], "valid", [], "NV8"], [[44012, 44013], "valid"], [[44014, 44015], "disallowed"], [[44016, 44025], "valid"], [[44026, 44031], "disallowed"], [[44032, 55203], "valid"], [[55204, 55215], "disallowed"], [[55216, 55238], "valid", [], "NV8"], [[55239, 55242], "disallowed"], [[55243, 55291], "valid", [], "NV8"], [[55292, 55295], "disallowed"], [[55296, 57343], "disallowed"], [[57344, 63743], "disallowed"], [[63744, 63744], "mapped", [35912]], [[63745, 63745], "mapped", [26356]], [[63746, 63746], "mapped", [36554]], [[63747, 63747], "mapped", [36040]], [[63748, 63748], "mapped", [28369]], [[63749, 63749], "mapped", [20018]], [[63750, 63750], "mapped", [21477]], [[63751, 63752], "mapped", [40860]], [[63753, 63753], "mapped", [22865]], [[63754, 63754], "mapped", [37329]], [[63755, 63755], "mapped", [21895]], [[63756, 63756], "mapped", [22856]], [[63757, 63757], "mapped", [25078]], [[63758, 63758], "mapped", [30313]], [[63759, 63759], "mapped", [32645]], [[63760, 63760], "mapped", [34367]], [[63761, 63761], "mapped", [34746]], [[63762, 63762], "mapped", [35064]], [[63763, 63763], "mapped", [37007]], [[63764, 63764], "mapped", [27138]], [[63765, 63765], "mapped", [27931]], [[63766, 63766], "mapped", [28889]], [[63767, 63767], "mapped", [29662]], [[63768, 63768], "mapped", [33853]], [[63769, 63769], "mapped", [37226]], [[63770, 63770], "mapped", [39409]], [[63771, 63771], "mapped", [20098]], [[63772, 63772], "mapped", [21365]], [[63773, 63773], "mapped", [27396]], [[63774, 63774], "mapped", [29211]], [[63775, 63775], "mapped", [34349]], [[63776, 63776], "mapped", [40478]], [[63777, 63777], "mapped", [23888]], [[63778, 63778], "mapped", [28651]], [[63779, 63779], "mapped", [34253]], [[63780, 63780], "mapped", [35172]], [[63781, 63781], "mapped", [25289]], [[63782, 63782], "mapped", [33240]], [[63783, 63783], "mapped", [34847]], [[63784, 63784], "mapped", [24266]], [[63785, 63785], "mapped", [26391]], [[63786, 63786], "mapped", [28010]], [[63787, 63787], "mapped", [29436]], [[63788, 63788], "mapped", [37070]], [[63789, 63789], "mapped", [20358]], [[63790, 63790], "mapped", [20919]], [[63791, 63791], "mapped", [21214]], [[63792, 63792], "mapped", [25796]], [[63793, 63793], "mapped", [27347]], [[63794, 63794], "mapped", [29200]], [[63795, 63795], "mapped", [30439]], [[63796, 63796], "mapped", [32769]], [[63797, 63797], "mapped", [34310]], [[63798, 63798], "mapped", [34396]], [[63799, 63799], "mapped", [36335]], [[63800, 63800], "mapped", [38706]], [[63801, 63801], "mapped", [39791]], [[63802, 63802], "mapped", [40442]], [[63803, 63803], "mapped", [30860]], [[63804, 63804], "mapped", [31103]], [[63805, 63805], "mapped", [32160]], [[63806, 63806], "mapped", [33737]], [[63807, 63807], "mapped", [37636]], [[63808, 63808], "mapped", [40575]], [[63809, 63809], "mapped", [35542]], [[63810, 63810], "mapped", [22751]], [[63811, 63811], "mapped", [24324]], [[63812, 63812], "mapped", [31840]], [[63813, 63813], "mapped", [32894]], [[63814, 63814], "mapped", [29282]], [[63815, 63815], "mapped", [30922]], [[63816, 63816], "mapped", [36034]], [[63817, 63817], "mapped", [38647]], [[63818, 63818], "mapped", [22744]], [[63819, 63819], "mapped", [23650]], [[63820, 63820], "mapped", [27155]], [[63821, 63821], "mapped", [28122]], [[63822, 63822], "mapped", [28431]], [[63823, 63823], "mapped", [32047]], [[63824, 63824], "mapped", [32311]], [[63825, 63825], "mapped", [38475]], [[63826, 63826], "mapped", [21202]], [[63827, 63827], "mapped", [32907]], [[63828, 63828], "mapped", [20956]], [[63829, 63829], "mapped", [20940]], [[63830, 63830], "mapped", [31260]], [[63831, 63831], "mapped", [32190]], [[63832, 63832], "mapped", [33777]], [[63833, 63833], "mapped", [38517]], [[63834, 63834], "mapped", [35712]], [[63835, 63835], "mapped", [25295]], [[63836, 63836], "mapped", [27138]], [[63837, 63837], "mapped", [35582]], [[63838, 63838], "mapped", [20025]], [[63839, 63839], "mapped", [23527]], [[63840, 63840], "mapped", [24594]], [[63841, 63841], "mapped", [29575]], [[63842, 63842], "mapped", [30064]], [[63843, 63843], "mapped", [21271]], [[63844, 63844], "mapped", [30971]], [[63845, 63845], "mapped", [20415]], [[63846, 63846], "mapped", [24489]], [[63847, 63847], "mapped", [19981]], [[63848, 63848], "mapped", [27852]], [[63849, 63849], "mapped", [25976]], [[63850, 63850], "mapped", [32034]], [[63851, 63851], "mapped", [21443]], [[63852, 63852], "mapped", [22622]], [[63853, 63853], "mapped", [30465]], [[63854, 63854], "mapped", [33865]], [[63855, 63855], "mapped", [35498]], [[63856, 63856], "mapped", [27578]], [[63857, 63857], "mapped", [36784]], [[63858, 63858], "mapped", [27784]], [[63859, 63859], "mapped", [25342]], [[63860, 63860], "mapped", [33509]], [[63861, 63861], "mapped", [25504]], [[63862, 63862], "mapped", [30053]], [[63863, 63863], "mapped", [20142]], [[63864, 63864], "mapped", [20841]], [[63865, 63865], "mapped", [20937]], [[63866, 63866], "mapped", [26753]], [[63867, 63867], "mapped", [31975]], [[63868, 63868], "mapped", [33391]], [[63869, 63869], "mapped", [35538]], [[63870, 63870], "mapped", [37327]], [[63871, 63871], "mapped", [21237]], [[63872, 63872], "mapped", [21570]], [[63873, 63873], "mapped", [22899]], [[63874, 63874], "mapped", [24300]], [[63875, 63875], "mapped", [26053]], [[63876, 63876], "mapped", [28670]], [[63877, 63877], "mapped", [31018]], [[63878, 63878], "mapped", [38317]], [[63879, 63879], "mapped", [39530]], [[63880, 63880], "mapped", [40599]], [[63881, 63881], "mapped", [40654]], [[63882, 63882], "mapped", [21147]], [[63883, 63883], "mapped", [26310]], [[63884, 63884], "mapped", [27511]], [[63885, 63885], "mapped", [36706]], [[63886, 63886], "mapped", [24180]], [[63887, 63887], "mapped", [24976]], [[63888, 63888], "mapped", [25088]], [[63889, 63889], "mapped", [25754]], [[63890, 63890], "mapped", [28451]], [[63891, 63891], "mapped", [29001]], [[63892, 63892], "mapped", [29833]], [[63893, 63893], "mapped", [31178]], [[63894, 63894], "mapped", [32244]], [[63895, 63895], "mapped", [32879]], [[63896, 63896], "mapped", [36646]], [[63897, 63897], "mapped", [34030]], [[63898, 63898], "mapped", [36899]], [[63899, 63899], "mapped", [37706]], [[63900, 63900], "mapped", [21015]], [[63901, 63901], "mapped", [21155]], [[63902, 63902], "mapped", [21693]], [[63903, 63903], "mapped", [28872]], [[63904, 63904], "mapped", [35010]], [[63905, 63905], "mapped", [35498]], [[63906, 63906], "mapped", [24265]], [[63907, 63907], "mapped", [24565]], [[63908, 63908], "mapped", [25467]], [[63909, 63909], "mapped", [27566]], [[63910, 63910], "mapped", [31806]], [[63911, 63911], "mapped", [29557]], [[63912, 63912], "mapped", [20196]], [[63913, 63913], "mapped", [22265]], [[63914, 63914], "mapped", [23527]], [[63915, 63915], "mapped", [23994]], [[63916, 63916], "mapped", [24604]], [[63917, 63917], "mapped", [29618]], [[63918, 63918], "mapped", [29801]], [[63919, 63919], "mapped", [32666]], [[63920, 63920], "mapped", [32838]], [[63921, 63921], "mapped", [37428]], [[63922, 63922], "mapped", [38646]], [[63923, 63923], "mapped", [38728]], [[63924, 63924], "mapped", [38936]], [[63925, 63925], "mapped", [20363]], [[63926, 63926], "mapped", [31150]], [[63927, 63927], "mapped", [37300]], [[63928, 63928], "mapped", [38584]], [[63929, 63929], "mapped", [24801]], [[63930, 63930], "mapped", [20102]], [[63931, 63931], "mapped", [20698]], [[63932, 63932], "mapped", [23534]], [[63933, 63933], "mapped", [23615]], [[63934, 63934], "mapped", [26009]], [[63935, 63935], "mapped", [27138]], [[63936, 63936], "mapped", [29134]], [[63937, 63937], "mapped", [30274]], [[63938, 63938], "mapped", [34044]], [[63939, 63939], "mapped", [36988]], [[63940, 63940], "mapped", [40845]], [[63941, 63941], "mapped", [26248]], [[63942, 63942], "mapped", [38446]], [[63943, 63943], "mapped", [21129]], [[63944, 63944], "mapped", [26491]], [[63945, 63945], "mapped", [26611]], [[63946, 63946], "mapped", [27969]], [[63947, 63947], "mapped", [28316]], [[63948, 63948], "mapped", [29705]], [[63949, 63949], "mapped", [30041]], [[63950, 63950], "mapped", [30827]], [[63951, 63951], "mapped", [32016]], [[63952, 63952], "mapped", [39006]], [[63953, 63953], "mapped", [20845]], [[63954, 63954], "mapped", [25134]], [[63955, 63955], "mapped", [38520]], [[63956, 63956], "mapped", [20523]], [[63957, 63957], "mapped", [23833]], [[63958, 63958], "mapped", [28138]], [[63959, 63959], "mapped", [36650]], [[63960, 63960], "mapped", [24459]], [[63961, 63961], "mapped", [24900]], [[63962, 63962], "mapped", [26647]], [[63963, 63963], "mapped", [29575]], [[63964, 63964], "mapped", [38534]], [[63965, 63965], "mapped", [21033]], [[63966, 63966], "mapped", [21519]], [[63967, 63967], "mapped", [23653]], [[63968, 63968], "mapped", [26131]], [[63969, 63969], "mapped", [26446]], [[63970, 63970], "mapped", [26792]], [[63971, 63971], "mapped", [27877]], [[63972, 63972], "mapped", [29702]], [[63973, 63973], "mapped", [30178]], [[63974, 63974], "mapped", [32633]], [[63975, 63975], "mapped", [35023]], [[63976, 63976], "mapped", [35041]], [[63977, 63977], "mapped", [37324]], [[63978, 63978], "mapped", [38626]], [[63979, 63979], "mapped", [21311]], [[63980, 63980], "mapped", [28346]], [[63981, 63981], "mapped", [21533]], [[63982, 63982], "mapped", [29136]], [[63983, 63983], "mapped", [29848]], [[63984, 63984], "mapped", [34298]], [[63985, 63985], "mapped", [38563]], [[63986, 63986], "mapped", [40023]], [[63987, 63987], "mapped", [40607]], [[63988, 63988], "mapped", [26519]], [[63989, 63989], "mapped", [28107]], [[63990, 63990], "mapped", [33256]], [[63991, 63991], "mapped", [31435]], [[63992, 63992], "mapped", [31520]], [[63993, 63993], "mapped", [31890]], [[63994, 63994], "mapped", [29376]], [[63995, 63995], "mapped", [28825]], [[63996, 63996], "mapped", [35672]], [[63997, 63997], "mapped", [20160]], [[63998, 63998], "mapped", [33590]], [[63999, 63999], "mapped", [21050]], [[64e3, 64e3], "mapped", [20999]], [[64001, 64001], "mapped", [24230]], [[64002, 64002], "mapped", [25299]], [[64003, 64003], "mapped", [31958]], [[64004, 64004], "mapped", [23429]], [[64005, 64005], "mapped", [27934]], [[64006, 64006], "mapped", [26292]], [[64007, 64007], "mapped", [36667]], [[64008, 64008], "mapped", [34892]], [[64009, 64009], "mapped", [38477]], [[64010, 64010], "mapped", [35211]], [[64011, 64011], "mapped", [24275]], [[64012, 64012], "mapped", [20800]], [[64013, 64013], "mapped", [21952]], [[64014, 64015], "valid"], [[64016, 64016], "mapped", [22618]], [[64017, 64017], "valid"], [[64018, 64018], "mapped", [26228]], [[64019, 64020], "valid"], [[64021, 64021], "mapped", [20958]], [[64022, 64022], "mapped", [29482]], [[64023, 64023], "mapped", [30410]], [[64024, 64024], "mapped", [31036]], [[64025, 64025], "mapped", [31070]], [[64026, 64026], "mapped", [31077]], [[64027, 64027], "mapped", [31119]], [[64028, 64028], "mapped", [38742]], [[64029, 64029], "mapped", [31934]], [[64030, 64030], "mapped", [32701]], [[64031, 64031], "valid"], [[64032, 64032], "mapped", [34322]], [[64033, 64033], "valid"], [[64034, 64034], "mapped", [35576]], [[64035, 64036], "valid"], [[64037, 64037], "mapped", [36920]], [[64038, 64038], "mapped", [37117]], [[64039, 64041], "valid"], [[64042, 64042], "mapped", [39151]], [[64043, 64043], "mapped", [39164]], [[64044, 64044], "mapped", [39208]], [[64045, 64045], "mapped", [40372]], [[64046, 64046], "mapped", [37086]], [[64047, 64047], "mapped", [38583]], [[64048, 64048], "mapped", [20398]], [[64049, 64049], "mapped", [20711]], [[64050, 64050], "mapped", [20813]], [[64051, 64051], "mapped", [21193]], [[64052, 64052], "mapped", [21220]], [[64053, 64053], "mapped", [21329]], [[64054, 64054], "mapped", [21917]], [[64055, 64055], "mapped", [22022]], [[64056, 64056], "mapped", [22120]], [[64057, 64057], "mapped", [22592]], [[64058, 64058], "mapped", [22696]], [[64059, 64059], "mapped", [23652]], [[64060, 64060], "mapped", [23662]], [[64061, 64061], "mapped", [24724]], [[64062, 64062], "mapped", [24936]], [[64063, 64063], "mapped", [24974]], [[64064, 64064], "mapped", [25074]], [[64065, 64065], "mapped", [25935]], [[64066, 64066], "mapped", [26082]], [[64067, 64067], "mapped", [26257]], [[64068, 64068], "mapped", [26757]], [[64069, 64069], "mapped", [28023]], [[64070, 64070], "mapped", [28186]], [[64071, 64071], "mapped", [28450]], [[64072, 64072], "mapped", [29038]], [[64073, 64073], "mapped", [29227]], [[64074, 64074], "mapped", [29730]], [[64075, 64075], "mapped", [30865]], [[64076, 64076], "mapped", [31038]], [[64077, 64077], "mapped", [31049]], [[64078, 64078], "mapped", [31048]], [[64079, 64079], "mapped", [31056]], [[64080, 64080], "mapped", [31062]], [[64081, 64081], "mapped", [31069]], [[64082, 64082], "mapped", [31117]], [[64083, 64083], "mapped", [31118]], [[64084, 64084], "mapped", [31296]], [[64085, 64085], "mapped", [31361]], [[64086, 64086], "mapped", [31680]], [[64087, 64087], "mapped", [32244]], [[64088, 64088], "mapped", [32265]], [[64089, 64089], "mapped", [32321]], [[64090, 64090], "mapped", [32626]], [[64091, 64091], "mapped", [32773]], [[64092, 64092], "mapped", [33261]], [[64093, 64094], "mapped", [33401]], [[64095, 64095], "mapped", [33879]], [[64096, 64096], "mapped", [35088]], [[64097, 64097], "mapped", [35222]], [[64098, 64098], "mapped", [35585]], [[64099, 64099], "mapped", [35641]], [[64100, 64100], "mapped", [36051]], [[64101, 64101], "mapped", [36104]], [[64102, 64102], "mapped", [36790]], [[64103, 64103], "mapped", [36920]], [[64104, 64104], "mapped", [38627]], [[64105, 64105], "mapped", [38911]], [[64106, 64106], "mapped", [38971]], [[64107, 64107], "mapped", [24693]], [[64108, 64108], "mapped", [148206]], [[64109, 64109], "mapped", [33304]], [[64110, 64111], "disallowed"], [[64112, 64112], "mapped", [20006]], [[64113, 64113], "mapped", [20917]], [[64114, 64114], "mapped", [20840]], [[64115, 64115], "mapped", [20352]], [[64116, 64116], "mapped", [20805]], [[64117, 64117], "mapped", [20864]], [[64118, 64118], "mapped", [21191]], [[64119, 64119], "mapped", [21242]], [[64120, 64120], "mapped", [21917]], [[64121, 64121], "mapped", [21845]], [[64122, 64122], "mapped", [21913]], [[64123, 64123], "mapped", [21986]], [[64124, 64124], "mapped", [22618]], [[64125, 64125], "mapped", [22707]], [[64126, 64126], "mapped", [22852]], [[64127, 64127], "mapped", [22868]], [[64128, 64128], "mapped", [23138]], [[64129, 64129], "mapped", [23336]], [[64130, 64130], "mapped", [24274]], [[64131, 64131], "mapped", [24281]], [[64132, 64132], "mapped", [24425]], [[64133, 64133], "mapped", [24493]], [[64134, 64134], "mapped", [24792]], [[64135, 64135], "mapped", [24910]], [[64136, 64136], "mapped", [24840]], [[64137, 64137], "mapped", [24974]], [[64138, 64138], "mapped", [24928]], [[64139, 64139], "mapped", [25074]], [[64140, 64140], "mapped", [25140]], [[64141, 64141], "mapped", [25540]], [[64142, 64142], "mapped", [25628]], [[64143, 64143], "mapped", [25682]], [[64144, 64144], "mapped", [25942]], [[64145, 64145], "mapped", [26228]], [[64146, 64146], "mapped", [26391]], [[64147, 64147], "mapped", [26395]], [[64148, 64148], "mapped", [26454]], [[64149, 64149], "mapped", [27513]], [[64150, 64150], "mapped", [27578]], [[64151, 64151], "mapped", [27969]], [[64152, 64152], "mapped", [28379]], [[64153, 64153], "mapped", [28363]], [[64154, 64154], "mapped", [28450]], [[64155, 64155], "mapped", [28702]], [[64156, 64156], "mapped", [29038]], [[64157, 64157], "mapped", [30631]], [[64158, 64158], "mapped", [29237]], [[64159, 64159], "mapped", [29359]], [[64160, 64160], "mapped", [29482]], [[64161, 64161], "mapped", [29809]], [[64162, 64162], "mapped", [29958]], [[64163, 64163], "mapped", [30011]], [[64164, 64164], "mapped", [30237]], [[64165, 64165], "mapped", [30239]], [[64166, 64166], "mapped", [30410]], [[64167, 64167], "mapped", [30427]], [[64168, 64168], "mapped", [30452]], [[64169, 64169], "mapped", [30538]], [[64170, 64170], "mapped", [30528]], [[64171, 64171], "mapped", [30924]], [[64172, 64172], "mapped", [31409]], [[64173, 64173], "mapped", [31680]], [[64174, 64174], "mapped", [31867]], [[64175, 64175], "mapped", [32091]], [[64176, 64176], "mapped", [32244]], [[64177, 64177], "mapped", [32574]], [[64178, 64178], "mapped", [32773]], [[64179, 64179], "mapped", [33618]], [[64180, 64180], "mapped", [33775]], [[64181, 64181], "mapped", [34681]], [[64182, 64182], "mapped", [35137]], [[64183, 64183], "mapped", [35206]], [[64184, 64184], "mapped", [35222]], [[64185, 64185], "mapped", [35519]], [[64186, 64186], "mapped", [35576]], [[64187, 64187], "mapped", [35531]], [[64188, 64188], "mapped", [35585]], [[64189, 64189], "mapped", [35582]], [[64190, 64190], "mapped", [35565]], [[64191, 64191], "mapped", [35641]], [[64192, 64192], "mapped", [35722]], [[64193, 64193], "mapped", [36104]], [[64194, 64194], "mapped", [36664]], [[64195, 64195], "mapped", [36978]], [[64196, 64196], "mapped", [37273]], [[64197, 64197], "mapped", [37494]], [[64198, 64198], "mapped", [38524]], [[64199, 64199], "mapped", [38627]], [[64200, 64200], "mapped", [38742]], [[64201, 64201], "mapped", [38875]], [[64202, 64202], "mapped", [38911]], [[64203, 64203], "mapped", [38923]], [[64204, 64204], "mapped", [38971]], [[64205, 64205], "mapped", [39698]], [[64206, 64206], "mapped", [40860]], [[64207, 64207], "mapped", [141386]], [[64208, 64208], "mapped", [141380]], [[64209, 64209], "mapped", [144341]], [[64210, 64210], "mapped", [15261]], [[64211, 64211], "mapped", [16408]], [[64212, 64212], "mapped", [16441]], [[64213, 64213], "mapped", [152137]], [[64214, 64214], "mapped", [154832]], [[64215, 64215], "mapped", [163539]], [[64216, 64216], "mapped", [40771]], [[64217, 64217], "mapped", [40846]], [[64218, 64255], "disallowed"], [[64256, 64256], "mapped", [102, 102]], [[64257, 64257], "mapped", [102, 105]], [[64258, 64258], "mapped", [102, 108]], [[64259, 64259], "mapped", [102, 102, 105]], [[64260, 64260], "mapped", [102, 102, 108]], [[64261, 64262], "mapped", [115, 116]], [[64263, 64274], "disallowed"], [[64275, 64275], "mapped", [1396, 1398]], [[64276, 64276], "mapped", [1396, 1381]], [[64277, 64277], "mapped", [1396, 1387]], [[64278, 64278], "mapped", [1406, 1398]], [[64279, 64279], "mapped", [1396, 1389]], [[64280, 64284], "disallowed"], [[64285, 64285], "mapped", [1497, 1460]], [[64286, 64286], "valid"], [[64287, 64287], "mapped", [1522, 1463]], [[64288, 64288], "mapped", [1506]], [[64289, 64289], "mapped", [1488]], [[64290, 64290], "mapped", [1491]], [[64291, 64291], "mapped", [1492]], [[64292, 64292], "mapped", [1499]], [[64293, 64293], "mapped", [1500]], [[64294, 64294], "mapped", [1501]], [[64295, 64295], "mapped", [1512]], [[64296, 64296], "mapped", [1514]], [[64297, 64297], "disallowed_STD3_mapped", [43]], [[64298, 64298], "mapped", [1513, 1473]], [[64299, 64299], "mapped", [1513, 1474]], [[64300, 64300], "mapped", [1513, 1468, 1473]], [[64301, 64301], "mapped", [1513, 1468, 1474]], [[64302, 64302], "mapped", [1488, 1463]], [[64303, 64303], "mapped", [1488, 1464]], [[64304, 64304], "mapped", [1488, 1468]], [[64305, 64305], "mapped", [1489, 1468]], [[64306, 64306], "mapped", [1490, 1468]], [[64307, 64307], "mapped", [1491, 1468]], [[64308, 64308], "mapped", [1492, 1468]], [[64309, 64309], "mapped", [1493, 1468]], [[64310, 64310], "mapped", [1494, 1468]], [[64311, 64311], "disallowed"], [[64312, 64312], "mapped", [1496, 1468]], [[64313, 64313], "mapped", [1497, 1468]], [[64314, 64314], "mapped", [1498, 1468]], [[64315, 64315], "mapped", [1499, 1468]], [[64316, 64316], "mapped", [1500, 1468]], [[64317, 64317], "disallowed"], [[64318, 64318], "mapped", [1502, 1468]], [[64319, 64319], "disallowed"], [[64320, 64320], "mapped", [1504, 1468]], [[64321, 64321], "mapped", [1505, 1468]], [[64322, 64322], "disallowed"], [[64323, 64323], "mapped", [1507, 1468]], [[64324, 64324], "mapped", [1508, 1468]], [[64325, 64325], "disallowed"], [[64326, 64326], "mapped", [1510, 1468]], [[64327, 64327], "mapped", [1511, 1468]], [[64328, 64328], "mapped", [1512, 1468]], [[64329, 64329], "mapped", [1513, 1468]], [[64330, 64330], "mapped", [1514, 1468]], [[64331, 64331], "mapped", [1493, 1465]], [[64332, 64332], "mapped", [1489, 1471]], [[64333, 64333], "mapped", [1499, 1471]], [[64334, 64334], "mapped", [1508, 1471]], [[64335, 64335], "mapped", [1488, 1500]], [[64336, 64337], "mapped", [1649]], [[64338, 64341], "mapped", [1659]], [[64342, 64345], "mapped", [1662]], [[64346, 64349], "mapped", [1664]], [[64350, 64353], "mapped", [1658]], [[64354, 64357], "mapped", [1663]], [[64358, 64361], "mapped", [1657]], [[64362, 64365], "mapped", [1700]], [[64366, 64369], "mapped", [1702]], [[64370, 64373], "mapped", [1668]], [[64374, 64377], "mapped", [1667]], [[64378, 64381], "mapped", [1670]], [[64382, 64385], "mapped", [1671]], [[64386, 64387], "mapped", [1677]], [[64388, 64389], "mapped", [1676]], [[64390, 64391], "mapped", [1678]], [[64392, 64393], "mapped", [1672]], [[64394, 64395], "mapped", [1688]], [[64396, 64397], "mapped", [1681]], [[64398, 64401], "mapped", [1705]], [[64402, 64405], "mapped", [1711]], [[64406, 64409], "mapped", [1715]], [[64410, 64413], "mapped", [1713]], [[64414, 64415], "mapped", [1722]], [[64416, 64419], "mapped", [1723]], [[64420, 64421], "mapped", [1728]], [[64422, 64425], "mapped", [1729]], [[64426, 64429], "mapped", [1726]], [[64430, 64431], "mapped", [1746]], [[64432, 64433], "mapped", [1747]], [[64434, 64449], "valid", [], "NV8"], [[64450, 64466], "disallowed"], [[64467, 64470], "mapped", [1709]], [[64471, 64472], "mapped", [1735]], [[64473, 64474], "mapped", [1734]], [[64475, 64476], "mapped", [1736]], [[64477, 64477], "mapped", [1735, 1652]], [[64478, 64479], "mapped", [1739]], [[64480, 64481], "mapped", [1733]], [[64482, 64483], "mapped", [1737]], [[64484, 64487], "mapped", [1744]], [[64488, 64489], "mapped", [1609]], [[64490, 64491], "mapped", [1574, 1575]], [[64492, 64493], "mapped", [1574, 1749]], [[64494, 64495], "mapped", [1574, 1608]], [[64496, 64497], "mapped", [1574, 1735]], [[64498, 64499], "mapped", [1574, 1734]], [[64500, 64501], "mapped", [1574, 1736]], [[64502, 64504], "mapped", [1574, 1744]], [[64505, 64507], "mapped", [1574, 1609]], [[64508, 64511], "mapped", [1740]], [[64512, 64512], "mapped", [1574, 1580]], [[64513, 64513], "mapped", [1574, 1581]], [[64514, 64514], "mapped", [1574, 1605]], [[64515, 64515], "mapped", [1574, 1609]], [[64516, 64516], "mapped", [1574, 1610]], [[64517, 64517], "mapped", [1576, 1580]], [[64518, 64518], "mapped", [1576, 1581]], [[64519, 64519], "mapped", [1576, 1582]], [[64520, 64520], "mapped", [1576, 1605]], [[64521, 64521], "mapped", [1576, 1609]], [[64522, 64522], "mapped", [1576, 1610]], [[64523, 64523], "mapped", [1578, 1580]], [[64524, 64524], "mapped", [1578, 1581]], [[64525, 64525], "mapped", [1578, 1582]], [[64526, 64526], "mapped", [1578, 1605]], [[64527, 64527], "mapped", [1578, 1609]], [[64528, 64528], "mapped", [1578, 1610]], [[64529, 64529], "mapped", [1579, 1580]], [[64530, 64530], "mapped", [1579, 1605]], [[64531, 64531], "mapped", [1579, 1609]], [[64532, 64532], "mapped", [1579, 1610]], [[64533, 64533], "mapped", [1580, 1581]], [[64534, 64534], "mapped", [1580, 1605]], [[64535, 64535], "mapped", [1581, 1580]], [[64536, 64536], "mapped", [1581, 1605]], [[64537, 64537], "mapped", [1582, 1580]], [[64538, 64538], "mapped", [1582, 1581]], [[64539, 64539], "mapped", [1582, 1605]], [[64540, 64540], "mapped", [1587, 1580]], [[64541, 64541], "mapped", [1587, 1581]], [[64542, 64542], "mapped", [1587, 1582]], [[64543, 64543], "mapped", [1587, 1605]], [[64544, 64544], "mapped", [1589, 1581]], [[64545, 64545], "mapped", [1589, 1605]], [[64546, 64546], "mapped", [1590, 1580]], [[64547, 64547], "mapped", [1590, 1581]], [[64548, 64548], "mapped", [1590, 1582]], [[64549, 64549], "mapped", [1590, 1605]], [[64550, 64550], "mapped", [1591, 1581]], [[64551, 64551], "mapped", [1591, 1605]], [[64552, 64552], "mapped", [1592, 1605]], [[64553, 64553], "mapped", [1593, 1580]], [[64554, 64554], "mapped", [1593, 1605]], [[64555, 64555], "mapped", [1594, 1580]], [[64556, 64556], "mapped", [1594, 1605]], [[64557, 64557], "mapped", [1601, 1580]], [[64558, 64558], "mapped", [1601, 1581]], [[64559, 64559], "mapped", [1601, 1582]], [[64560, 64560], "mapped", [1601, 1605]], [[64561, 64561], "mapped", [1601, 1609]], [[64562, 64562], "mapped", [1601, 1610]], [[64563, 64563], "mapped", [1602, 1581]], [[64564, 64564], "mapped", [1602, 1605]], [[64565, 64565], "mapped", [1602, 1609]], [[64566, 64566], "mapped", [1602, 1610]], [[64567, 64567], "mapped", [1603, 1575]], [[64568, 64568], "mapped", [1603, 1580]], [[64569, 64569], "mapped", [1603, 1581]], [[64570, 64570], "mapped", [1603, 1582]], [[64571, 64571], "mapped", [1603, 1604]], [[64572, 64572], "mapped", [1603, 1605]], [[64573, 64573], "mapped", [1603, 1609]], [[64574, 64574], "mapped", [1603, 1610]], [[64575, 64575], "mapped", [1604, 1580]], [[64576, 64576], "mapped", [1604, 1581]], [[64577, 64577], "mapped", [1604, 1582]], [[64578, 64578], "mapped", [1604, 1605]], [[64579, 64579], "mapped", [1604, 1609]], [[64580, 64580], "mapped", [1604, 1610]], [[64581, 64581], "mapped", [1605, 1580]], [[64582, 64582], "mapped", [1605, 1581]], [[64583, 64583], "mapped", [1605, 1582]], [[64584, 64584], "mapped", [1605, 1605]], [[64585, 64585], "mapped", [1605, 1609]], [[64586, 64586], "mapped", [1605, 1610]], [[64587, 64587], "mapped", [1606, 1580]], [[64588, 64588], "mapped", [1606, 1581]], [[64589, 64589], "mapped", [1606, 1582]], [[64590, 64590], "mapped", [1606, 1605]], [[64591, 64591], "mapped", [1606, 1609]], [[64592, 64592], "mapped", [1606, 1610]], [[64593, 64593], "mapped", [1607, 1580]], [[64594, 64594], "mapped", [1607, 1605]], [[64595, 64595], "mapped", [1607, 1609]], [[64596, 64596], "mapped", [1607, 1610]], [[64597, 64597], "mapped", [1610, 1580]], [[64598, 64598], "mapped", [1610, 1581]], [[64599, 64599], "mapped", [1610, 1582]], [[64600, 64600], "mapped", [1610, 1605]], [[64601, 64601], "mapped", [1610, 1609]], [[64602, 64602], "mapped", [1610, 1610]], [[64603, 64603], "mapped", [1584, 1648]], [[64604, 64604], "mapped", [1585, 1648]], [[64605, 64605], "mapped", [1609, 1648]], [[64606, 64606], "disallowed_STD3_mapped", [32, 1612, 1617]], [[64607, 64607], "disallowed_STD3_mapped", [32, 1613, 1617]], [[64608, 64608], "disallowed_STD3_mapped", [32, 1614, 1617]], [[64609, 64609], "disallowed_STD3_mapped", [32, 1615, 1617]], [[64610, 64610], "disallowed_STD3_mapped", [32, 1616, 1617]], [[64611, 64611], "disallowed_STD3_mapped", [32, 1617, 1648]], [[64612, 64612], "mapped", [1574, 1585]], [[64613, 64613], "mapped", [1574, 1586]], [[64614, 64614], "mapped", [1574, 1605]], [[64615, 64615], "mapped", [1574, 1606]], [[64616, 64616], "mapped", [1574, 1609]], [[64617, 64617], "mapped", [1574, 1610]], [[64618, 64618], "mapped", [1576, 1585]], [[64619, 64619], "mapped", [1576, 1586]], [[64620, 64620], "mapped", [1576, 1605]], [[64621, 64621], "mapped", [1576, 1606]], [[64622, 64622], "mapped", [1576, 1609]], [[64623, 64623], "mapped", [1576, 1610]], [[64624, 64624], "mapped", [1578, 1585]], [[64625, 64625], "mapped", [1578, 1586]], [[64626, 64626], "mapped", [1578, 1605]], [[64627, 64627], "mapped", [1578, 1606]], [[64628, 64628], "mapped", [1578, 1609]], [[64629, 64629], "mapped", [1578, 1610]], [[64630, 64630], "mapped", [1579, 1585]], [[64631, 64631], "mapped", [1579, 1586]], [[64632, 64632], "mapped", [1579, 1605]], [[64633, 64633], "mapped", [1579, 1606]], [[64634, 64634], "mapped", [1579, 1609]], [[64635, 64635], "mapped", [1579, 1610]], [[64636, 64636], "mapped", [1601, 1609]], [[64637, 64637], "mapped", [1601, 1610]], [[64638, 64638], "mapped", [1602, 1609]], [[64639, 64639], "mapped", [1602, 1610]], [[64640, 64640], "mapped", [1603, 1575]], [[64641, 64641], "mapped", [1603, 1604]], [[64642, 64642], "mapped", [1603, 1605]], [[64643, 64643], "mapped", [1603, 1609]], [[64644, 64644], "mapped", [1603, 1610]], [[64645, 64645], "mapped", [1604, 1605]], [[64646, 64646], "mapped", [1604, 1609]], [[64647, 64647], "mapped", [1604, 1610]], [[64648, 64648], "mapped", [1605, 1575]], [[64649, 64649], "mapped", [1605, 1605]], [[64650, 64650], "mapped", [1606, 1585]], [[64651, 64651], "mapped", [1606, 1586]], [[64652, 64652], "mapped", [1606, 1605]], [[64653, 64653], "mapped", [1606, 1606]], [[64654, 64654], "mapped", [1606, 1609]], [[64655, 64655], "mapped", [1606, 1610]], [[64656, 64656], "mapped", [1609, 1648]], [[64657, 64657], "mapped", [1610, 1585]], [[64658, 64658], "mapped", [1610, 1586]], [[64659, 64659], "mapped", [1610, 1605]], [[64660, 64660], "mapped", [1610, 1606]], [[64661, 64661], "mapped", [1610, 1609]], [[64662, 64662], "mapped", [1610, 1610]], [[64663, 64663], "mapped", [1574, 1580]], [[64664, 64664], "mapped", [1574, 1581]], [[64665, 64665], "mapped", [1574, 1582]], [[64666, 64666], "mapped", [1574, 1605]], [[64667, 64667], "mapped", [1574, 1607]], [[64668, 64668], "mapped", [1576, 1580]], [[64669, 64669], "mapped", [1576, 1581]], [[64670, 64670], "mapped", [1576, 1582]], [[64671, 64671], "mapped", [1576, 1605]], [[64672, 64672], "mapped", [1576, 1607]], [[64673, 64673], "mapped", [1578, 1580]], [[64674, 64674], "mapped", [1578, 1581]], [[64675, 64675], "mapped", [1578, 1582]], [[64676, 64676], "mapped", [1578, 1605]], [[64677, 64677], "mapped", [1578, 1607]], [[64678, 64678], "mapped", [1579, 1605]], [[64679, 64679], "mapped", [1580, 1581]], [[64680, 64680], "mapped", [1580, 1605]], [[64681, 64681], "mapped", [1581, 1580]], [[64682, 64682], "mapped", [1581, 1605]], [[64683, 64683], "mapped", [1582, 1580]], [[64684, 64684], "mapped", [1582, 1605]], [[64685, 64685], "mapped", [1587, 1580]], [[64686, 64686], "mapped", [1587, 1581]], [[64687, 64687], "mapped", [1587, 1582]], [[64688, 64688], "mapped", [1587, 1605]], [[64689, 64689], "mapped", [1589, 1581]], [[64690, 64690], "mapped", [1589, 1582]], [[64691, 64691], "mapped", [1589, 1605]], [[64692, 64692], "mapped", [1590, 1580]], [[64693, 64693], "mapped", [1590, 1581]], [[64694, 64694], "mapped", [1590, 1582]], [[64695, 64695], "mapped", [1590, 1605]], [[64696, 64696], "mapped", [1591, 1581]], [[64697, 64697], "mapped", [1592, 1605]], [[64698, 64698], "mapped", [1593, 1580]], [[64699, 64699], "mapped", [1593, 1605]], [[64700, 64700], "mapped", [1594, 1580]], [[64701, 64701], "mapped", [1594, 1605]], [[64702, 64702], "mapped", [1601, 1580]], [[64703, 64703], "mapped", [1601, 1581]], [[64704, 64704], "mapped", [1601, 1582]], [[64705, 64705], "mapped", [1601, 1605]], [[64706, 64706], "mapped", [1602, 1581]], [[64707, 64707], "mapped", [1602, 1605]], [[64708, 64708], "mapped", [1603, 1580]], [[64709, 64709], "mapped", [1603, 1581]], [[64710, 64710], "mapped", [1603, 1582]], [[64711, 64711], "mapped", [1603, 1604]], [[64712, 64712], "mapped", [1603, 1605]], [[64713, 64713], "mapped", [1604, 1580]], [[64714, 64714], "mapped", [1604, 1581]], [[64715, 64715], "mapped", [1604, 1582]], [[64716, 64716], "mapped", [1604, 1605]], [[64717, 64717], "mapped", [1604, 1607]], [[64718, 64718], "mapped", [1605, 1580]], [[64719, 64719], "mapped", [1605, 1581]], [[64720, 64720], "mapped", [1605, 1582]], [[64721, 64721], "mapped", [1605, 1605]], [[64722, 64722], "mapped", [1606, 1580]], [[64723, 64723], "mapped", [1606, 1581]], [[64724, 64724], "mapped", [1606, 1582]], [[64725, 64725], "mapped", [1606, 1605]], [[64726, 64726], "mapped", [1606, 1607]], [[64727, 64727], "mapped", [1607, 1580]], [[64728, 64728], "mapped", [1607, 1605]], [[64729, 64729], "mapped", [1607, 1648]], [[64730, 64730], "mapped", [1610, 1580]], [[64731, 64731], "mapped", [1610, 1581]], [[64732, 64732], "mapped", [1610, 1582]], [[64733, 64733], "mapped", [1610, 1605]], [[64734, 64734], "mapped", [1610, 1607]], [[64735, 64735], "mapped", [1574, 1605]], [[64736, 64736], "mapped", [1574, 1607]], [[64737, 64737], "mapped", [1576, 1605]], [[64738, 64738], "mapped", [1576, 1607]], [[64739, 64739], "mapped", [1578, 1605]], [[64740, 64740], "mapped", [1578, 1607]], [[64741, 64741], "mapped", [1579, 1605]], [[64742, 64742], "mapped", [1579, 1607]], [[64743, 64743], "mapped", [1587, 1605]], [[64744, 64744], "mapped", [1587, 1607]], [[64745, 64745], "mapped", [1588, 1605]], [[64746, 64746], "mapped", [1588, 1607]], [[64747, 64747], "mapped", [1603, 1604]], [[64748, 64748], "mapped", [1603, 1605]], [[64749, 64749], "mapped", [1604, 1605]], [[64750, 64750], "mapped", [1606, 1605]], [[64751, 64751], "mapped", [1606, 1607]], [[64752, 64752], "mapped", [1610, 1605]], [[64753, 64753], "mapped", [1610, 1607]], [[64754, 64754], "mapped", [1600, 1614, 1617]], [[64755, 64755], "mapped", [1600, 1615, 1617]], [[64756, 64756], "mapped", [1600, 1616, 1617]], [[64757, 64757], "mapped", [1591, 1609]], [[64758, 64758], "mapped", [1591, 1610]], [[64759, 64759], "mapped", [1593, 1609]], [[64760, 64760], "mapped", [1593, 1610]], [[64761, 64761], "mapped", [1594, 1609]], [[64762, 64762], "mapped", [1594, 1610]], [[64763, 64763], "mapped", [1587, 1609]], [[64764, 64764], "mapped", [1587, 1610]], [[64765, 64765], "mapped", [1588, 1609]], [[64766, 64766], "mapped", [1588, 1610]], [[64767, 64767], "mapped", [1581, 1609]], [[64768, 64768], "mapped", [1581, 1610]], [[64769, 64769], "mapped", [1580, 1609]], [[64770, 64770], "mapped", [1580, 1610]], [[64771, 64771], "mapped", [1582, 1609]], [[64772, 64772], "mapped", [1582, 1610]], [[64773, 64773], "mapped", [1589, 1609]], [[64774, 64774], "mapped", [1589, 1610]], [[64775, 64775], "mapped", [1590, 1609]], [[64776, 64776], "mapped", [1590, 1610]], [[64777, 64777], "mapped", [1588, 1580]], [[64778, 64778], "mapped", [1588, 1581]], [[64779, 64779], "mapped", [1588, 1582]], [[64780, 64780], "mapped", [1588, 1605]], [[64781, 64781], "mapped", [1588, 1585]], [[64782, 64782], "mapped", [1587, 1585]], [[64783, 64783], "mapped", [1589, 1585]], [[64784, 64784], "mapped", [1590, 1585]], [[64785, 64785], "mapped", [1591, 1609]], [[64786, 64786], "mapped", [1591, 1610]], [[64787, 64787], "mapped", [1593, 1609]], [[64788, 64788], "mapped", [1593, 1610]], [[64789, 64789], "mapped", [1594, 1609]], [[64790, 64790], "mapped", [1594, 1610]], [[64791, 64791], "mapped", [1587, 1609]], [[64792, 64792], "mapped", [1587, 1610]], [[64793, 64793], "mapped", [1588, 1609]], [[64794, 64794], "mapped", [1588, 1610]], [[64795, 64795], "mapped", [1581, 1609]], [[64796, 64796], "mapped", [1581, 1610]], [[64797, 64797], "mapped", [1580, 1609]], [[64798, 64798], "mapped", [1580, 1610]], [[64799, 64799], "mapped", [1582, 1609]], [[64800, 64800], "mapped", [1582, 1610]], [[64801, 64801], "mapped", [1589, 1609]], [[64802, 64802], "mapped", [1589, 1610]], [[64803, 64803], "mapped", [1590, 1609]], [[64804, 64804], "mapped", [1590, 1610]], [[64805, 64805], "mapped", [1588, 1580]], [[64806, 64806], "mapped", [1588, 1581]], [[64807, 64807], "mapped", [1588, 1582]], [[64808, 64808], "mapped", [1588, 1605]], [[64809, 64809], "mapped", [1588, 1585]], [[64810, 64810], "mapped", [1587, 1585]], [[64811, 64811], "mapped", [1589, 1585]], [[64812, 64812], "mapped", [1590, 1585]], [[64813, 64813], "mapped", [1588, 1580]], [[64814, 64814], "mapped", [1588, 1581]], [[64815, 64815], "mapped", [1588, 1582]], [[64816, 64816], "mapped", [1588, 1605]], [[64817, 64817], "mapped", [1587, 1607]], [[64818, 64818], "mapped", [1588, 1607]], [[64819, 64819], "mapped", [1591, 1605]], [[64820, 64820], "mapped", [1587, 1580]], [[64821, 64821], "mapped", [1587, 1581]], [[64822, 64822], "mapped", [1587, 1582]], [[64823, 64823], "mapped", [1588, 1580]], [[64824, 64824], "mapped", [1588, 1581]], [[64825, 64825], "mapped", [1588, 1582]], [[64826, 64826], "mapped", [1591, 1605]], [[64827, 64827], "mapped", [1592, 1605]], [[64828, 64829], "mapped", [1575, 1611]], [[64830, 64831], "valid", [], "NV8"], [[64832, 64847], "disallowed"], [[64848, 64848], "mapped", [1578, 1580, 1605]], [[64849, 64850], "mapped", [1578, 1581, 1580]], [[64851, 64851], "mapped", [1578, 1581, 1605]], [[64852, 64852], "mapped", [1578, 1582, 1605]], [[64853, 64853], "mapped", [1578, 1605, 1580]], [[64854, 64854], "mapped", [1578, 1605, 1581]], [[64855, 64855], "mapped", [1578, 1605, 1582]], [[64856, 64857], "mapped", [1580, 1605, 1581]], [[64858, 64858], "mapped", [1581, 1605, 1610]], [[64859, 64859], "mapped", [1581, 1605, 1609]], [[64860, 64860], "mapped", [1587, 1581, 1580]], [[64861, 64861], "mapped", [1587, 1580, 1581]], [[64862, 64862], "mapped", [1587, 1580, 1609]], [[64863, 64864], "mapped", [1587, 1605, 1581]], [[64865, 64865], "mapped", [1587, 1605, 1580]], [[64866, 64867], "mapped", [1587, 1605, 1605]], [[64868, 64869], "mapped", [1589, 1581, 1581]], [[64870, 64870], "mapped", [1589, 1605, 1605]], [[64871, 64872], "mapped", [1588, 1581, 1605]], [[64873, 64873], "mapped", [1588, 1580, 1610]], [[64874, 64875], "mapped", [1588, 1605, 1582]], [[64876, 64877], "mapped", [1588, 1605, 1605]], [[64878, 64878], "mapped", [1590, 1581, 1609]], [[64879, 64880], "mapped", [1590, 1582, 1605]], [[64881, 64882], "mapped", [1591, 1605, 1581]], [[64883, 64883], "mapped", [1591, 1605, 1605]], [[64884, 64884], "mapped", [1591, 1605, 1610]], [[64885, 64885], "mapped", [1593, 1580, 1605]], [[64886, 64887], "mapped", [1593, 1605, 1605]], [[64888, 64888], "mapped", [1593, 1605, 1609]], [[64889, 64889], "mapped", [1594, 1605, 1605]], [[64890, 64890], "mapped", [1594, 1605, 1610]], [[64891, 64891], "mapped", [1594, 1605, 1609]], [[64892, 64893], "mapped", [1601, 1582, 1605]], [[64894, 64894], "mapped", [1602, 1605, 1581]], [[64895, 64895], "mapped", [1602, 1605, 1605]], [[64896, 64896], "mapped", [1604, 1581, 1605]], [[64897, 64897], "mapped", [1604, 1581, 1610]], [[64898, 64898], "mapped", [1604, 1581, 1609]], [[64899, 64900], "mapped", [1604, 1580, 1580]], [[64901, 64902], "mapped", [1604, 1582, 1605]], [[64903, 64904], "mapped", [1604, 1605, 1581]], [[64905, 64905], "mapped", [1605, 1581, 1580]], [[64906, 64906], "mapped", [1605, 1581, 1605]], [[64907, 64907], "mapped", [1605, 1581, 1610]], [[64908, 64908], "mapped", [1605, 1580, 1581]], [[64909, 64909], "mapped", [1605, 1580, 1605]], [[64910, 64910], "mapped", [1605, 1582, 1580]], [[64911, 64911], "mapped", [1605, 1582, 1605]], [[64912, 64913], "disallowed"], [[64914, 64914], "mapped", [1605, 1580, 1582]], [[64915, 64915], "mapped", [1607, 1605, 1580]], [[64916, 64916], "mapped", [1607, 1605, 1605]], [[64917, 64917], "mapped", [1606, 1581, 1605]], [[64918, 64918], "mapped", [1606, 1581, 1609]], [[64919, 64920], "mapped", [1606, 1580, 1605]], [[64921, 64921], "mapped", [1606, 1580, 1609]], [[64922, 64922], "mapped", [1606, 1605, 1610]], [[64923, 64923], "mapped", [1606, 1605, 1609]], [[64924, 64925], "mapped", [1610, 1605, 1605]], [[64926, 64926], "mapped", [1576, 1582, 1610]], [[64927, 64927], "mapped", [1578, 1580, 1610]], [[64928, 64928], "mapped", [1578, 1580, 1609]], [[64929, 64929], "mapped", [1578, 1582, 1610]], [[64930, 64930], "mapped", [1578, 1582, 1609]], [[64931, 64931], "mapped", [1578, 1605, 1610]], [[64932, 64932], "mapped", [1578, 1605, 1609]], [[64933, 64933], "mapped", [1580, 1605, 1610]], [[64934, 64934], "mapped", [1580, 1581, 1609]], [[64935, 64935], "mapped", [1580, 1605, 1609]], [[64936, 64936], "mapped", [1587, 1582, 1609]], [[64937, 64937], "mapped", [1589, 1581, 1610]], [[64938, 64938], "mapped", [1588, 1581, 1610]], [[64939, 64939], "mapped", [1590, 1581, 1610]], [[64940, 64940], "mapped", [1604, 1580, 1610]], [[64941, 64941], "mapped", [1604, 1605, 1610]], [[64942, 64942], "mapped", [1610, 1581, 1610]], [[64943, 64943], "mapped", [1610, 1580, 1610]], [[64944, 64944], "mapped", [1610, 1605, 1610]], [[64945, 64945], "mapped", [1605, 1605, 1610]], [[64946, 64946], "mapped", [1602, 1605, 1610]], [[64947, 64947], "mapped", [1606, 1581, 1610]], [[64948, 64948], "mapped", [1602, 1605, 1581]], [[64949, 64949], "mapped", [1604, 1581, 1605]], [[64950, 64950], "mapped", [1593, 1605, 1610]], [[64951, 64951], "mapped", [1603, 1605, 1610]], [[64952, 64952], "mapped", [1606, 1580, 1581]], [[64953, 64953], "mapped", [1605, 1582, 1610]], [[64954, 64954], "mapped", [1604, 1580, 1605]], [[64955, 64955], "mapped", [1603, 1605, 1605]], [[64956, 64956], "mapped", [1604, 1580, 1605]], [[64957, 64957], "mapped", [1606, 1580, 1581]], [[64958, 64958], "mapped", [1580, 1581, 1610]], [[64959, 64959], "mapped", [1581, 1580, 1610]], [[64960, 64960], "mapped", [1605, 1580, 1610]], [[64961, 64961], "mapped", [1601, 1605, 1610]], [[64962, 64962], "mapped", [1576, 1581, 1610]], [[64963, 64963], "mapped", [1603, 1605, 1605]], [[64964, 64964], "mapped", [1593, 1580, 1605]], [[64965, 64965], "mapped", [1589, 1605, 1605]], [[64966, 64966], "mapped", [1587, 1582, 1610]], [[64967, 64967], "mapped", [1606, 1580, 1610]], [[64968, 64975], "disallowed"], [[64976, 65007], "disallowed"], [[65008, 65008], "mapped", [1589, 1604, 1746]], [[65009, 65009], "mapped", [1602, 1604, 1746]], [[65010, 65010], "mapped", [1575, 1604, 1604, 1607]], [[65011, 65011], "mapped", [1575, 1603, 1576, 1585]], [[65012, 65012], "mapped", [1605, 1581, 1605, 1583]], [[65013, 65013], "mapped", [1589, 1604, 1593, 1605]], [[65014, 65014], "mapped", [1585, 1587, 1608, 1604]], [[65015, 65015], "mapped", [1593, 1604, 1610, 1607]], [[65016, 65016], "mapped", [1608, 1587, 1604, 1605]], [[65017, 65017], "mapped", [1589, 1604, 1609]], [[65018, 65018], "disallowed_STD3_mapped", [1589, 1604, 1609, 32, 1575, 1604, 1604, 1607, 32, 1593, 1604, 1610, 1607, 32, 1608, 1587, 1604, 1605]], [[65019, 65019], "disallowed_STD3_mapped", [1580, 1604, 32, 1580, 1604, 1575, 1604, 1607]], [[65020, 65020], "mapped", [1585, 1740, 1575, 1604]], [[65021, 65021], "valid", [], "NV8"], [[65022, 65023], "disallowed"], [[65024, 65039], "ignored"], [[65040, 65040], "disallowed_STD3_mapped", [44]], [[65041, 65041], "mapped", [12289]], [[65042, 65042], "disallowed"], [[65043, 65043], "disallowed_STD3_mapped", [58]], [[65044, 65044], "disallowed_STD3_mapped", [59]], [[65045, 65045], "disallowed_STD3_mapped", [33]], [[65046, 65046], "disallowed_STD3_mapped", [63]], [[65047, 65047], "mapped", [12310]], [[65048, 65048], "mapped", [12311]], [[65049, 65049], "disallowed"], [[65050, 65055], "disallowed"], [[65056, 65059], "valid"], [[65060, 65062], "valid"], [[65063, 65069], "valid"], [[65070, 65071], "valid"], [[65072, 65072], "disallowed"], [[65073, 65073], "mapped", [8212]], [[65074, 65074], "mapped", [8211]], [[65075, 65076], "disallowed_STD3_mapped", [95]], [[65077, 65077], "disallowed_STD3_mapped", [40]], [[65078, 65078], "disallowed_STD3_mapped", [41]], [[65079, 65079], "disallowed_STD3_mapped", [123]], [[65080, 65080], "disallowed_STD3_mapped", [125]], [[65081, 65081], "mapped", [12308]], [[65082, 65082], "mapped", [12309]], [[65083, 65083], "mapped", [12304]], [[65084, 65084], "mapped", [12305]], [[65085, 65085], "mapped", [12298]], [[65086, 65086], "mapped", [12299]], [[65087, 65087], "mapped", [12296]], [[65088, 65088], "mapped", [12297]], [[65089, 65089], "mapped", [12300]], [[65090, 65090], "mapped", [12301]], [[65091, 65091], "mapped", [12302]], [[65092, 65092], "mapped", [12303]], [[65093, 65094], "valid", [], "NV8"], [[65095, 65095], "disallowed_STD3_mapped", [91]], [[65096, 65096], "disallowed_STD3_mapped", [93]], [[65097, 65100], "disallowed_STD3_mapped", [32, 773]], [[65101, 65103], "disallowed_STD3_mapped", [95]], [[65104, 65104], "disallowed_STD3_mapped", [44]], [[65105, 65105], "mapped", [12289]], [[65106, 65106], "disallowed"], [[65107, 65107], "disallowed"], [[65108, 65108], "disallowed_STD3_mapped", [59]], [[65109, 65109], "disallowed_STD3_mapped", [58]], [[65110, 65110], "disallowed_STD3_mapped", [63]], [[65111, 65111], "disallowed_STD3_mapped", [33]], [[65112, 65112], "mapped", [8212]], [[65113, 65113], "disallowed_STD3_mapped", [40]], [[65114, 65114], "disallowed_STD3_mapped", [41]], [[65115, 65115], "disallowed_STD3_mapped", [123]], [[65116, 65116], "disallowed_STD3_mapped", [125]], [[65117, 65117], "mapped", [12308]], [[65118, 65118], "mapped", [12309]], [[65119, 65119], "disallowed_STD3_mapped", [35]], [[65120, 65120], "disallowed_STD3_mapped", [38]], [[65121, 65121], "disallowed_STD3_mapped", [42]], [[65122, 65122], "disallowed_STD3_mapped", [43]], [[65123, 65123], "mapped", [45]], [[65124, 65124], "disallowed_STD3_mapped", [60]], [[65125, 65125], "disallowed_STD3_mapped", [62]], [[65126, 65126], "disallowed_STD3_mapped", [61]], [[65127, 65127], "disallowed"], [[65128, 65128], "disallowed_STD3_mapped", [92]], [[65129, 65129], "disallowed_STD3_mapped", [36]], [[65130, 65130], "disallowed_STD3_mapped", [37]], [[65131, 65131], "disallowed_STD3_mapped", [64]], [[65132, 65135], "disallowed"], [[65136, 65136], "disallowed_STD3_mapped", [32, 1611]], [[65137, 65137], "mapped", [1600, 1611]], [[65138, 65138], "disallowed_STD3_mapped", [32, 1612]], [[65139, 65139], "valid"], [[65140, 65140], "disallowed_STD3_mapped", [32, 1613]], [[65141, 65141], "disallowed"], [[65142, 65142], "disallowed_STD3_mapped", [32, 1614]], [[65143, 65143], "mapped", [1600, 1614]], [[65144, 65144], "disallowed_STD3_mapped", [32, 1615]], [[65145, 65145], "mapped", [1600, 1615]], [[65146, 65146], "disallowed_STD3_mapped", [32, 1616]], [[65147, 65147], "mapped", [1600, 1616]], [[65148, 65148], "disallowed_STD3_mapped", [32, 1617]], [[65149, 65149], "mapped", [1600, 1617]], [[65150, 65150], "disallowed_STD3_mapped", [32, 1618]], [[65151, 65151], "mapped", [1600, 1618]], [[65152, 65152], "mapped", [1569]], [[65153, 65154], "mapped", [1570]], [[65155, 65156], "mapped", [1571]], [[65157, 65158], "mapped", [1572]], [[65159, 65160], "mapped", [1573]], [[65161, 65164], "mapped", [1574]], [[65165, 65166], "mapped", [1575]], [[65167, 65170], "mapped", [1576]], [[65171, 65172], "mapped", [1577]], [[65173, 65176], "mapped", [1578]], [[65177, 65180], "mapped", [1579]], [[65181, 65184], "mapped", [1580]], [[65185, 65188], "mapped", [1581]], [[65189, 65192], "mapped", [1582]], [[65193, 65194], "mapped", [1583]], [[65195, 65196], "mapped", [1584]], [[65197, 65198], "mapped", [1585]], [[65199, 65200], "mapped", [1586]], [[65201, 65204], "mapped", [1587]], [[65205, 65208], "mapped", [1588]], [[65209, 65212], "mapped", [1589]], [[65213, 65216], "mapped", [1590]], [[65217, 65220], "mapped", [1591]], [[65221, 65224], "mapped", [1592]], [[65225, 65228], "mapped", [1593]], [[65229, 65232], "mapped", [1594]], [[65233, 65236], "mapped", [1601]], [[65237, 65240], "mapped", [1602]], [[65241, 65244], "mapped", [1603]], [[65245, 65248], "mapped", [1604]], [[65249, 65252], "mapped", [1605]], [[65253, 65256], "mapped", [1606]], [[65257, 65260], "mapped", [1607]], [[65261, 65262], "mapped", [1608]], [[65263, 65264], "mapped", [1609]], [[65265, 65268], "mapped", [1610]], [[65269, 65270], "mapped", [1604, 1570]], [[65271, 65272], "mapped", [1604, 1571]], [[65273, 65274], "mapped", [1604, 1573]], [[65275, 65276], "mapped", [1604, 1575]], [[65277, 65278], "disallowed"], [[65279, 65279], "ignored"], [[65280, 65280], "disallowed"], [[65281, 65281], "disallowed_STD3_mapped", [33]], [[65282, 65282], "disallowed_STD3_mapped", [34]], [[65283, 65283], "disallowed_STD3_mapped", [35]], [[65284, 65284], "disallowed_STD3_mapped", [36]], [[65285, 65285], "disallowed_STD3_mapped", [37]], [[65286, 65286], "disallowed_STD3_mapped", [38]], [[65287, 65287], "disallowed_STD3_mapped", [39]], [[65288, 65288], "disallowed_STD3_mapped", [40]], [[65289, 65289], "disallowed_STD3_mapped", [41]], [[65290, 65290], "disallowed_STD3_mapped", [42]], [[65291, 65291], "disallowed_STD3_mapped", [43]], [[65292, 65292], "disallowed_STD3_mapped", [44]], [[65293, 65293], "mapped", [45]], [[65294, 65294], "mapped", [46]], [[65295, 65295], "disallowed_STD3_mapped", [47]], [[65296, 65296], "mapped", [48]], [[65297, 65297], "mapped", [49]], [[65298, 65298], "mapped", [50]], [[65299, 65299], "mapped", [51]], [[65300, 65300], "mapped", [52]], [[65301, 65301], "mapped", [53]], [[65302, 65302], "mapped", [54]], [[65303, 65303], "mapped", [55]], [[65304, 65304], "mapped", [56]], [[65305, 65305], "mapped", [57]], [[65306, 65306], "disallowed_STD3_mapped", [58]], [[65307, 65307], "disallowed_STD3_mapped", [59]], [[65308, 65308], "disallowed_STD3_mapped", [60]], [[65309, 65309], "disallowed_STD3_mapped", [61]], [[65310, 65310], "disallowed_STD3_mapped", [62]], [[65311, 65311], "disallowed_STD3_mapped", [63]], [[65312, 65312], "disallowed_STD3_mapped", [64]], [[65313, 65313], "mapped", [97]], [[65314, 65314], "mapped", [98]], [[65315, 65315], "mapped", [99]], [[65316, 65316], "mapped", [100]], [[65317, 65317], "mapped", [101]], [[65318, 65318], "mapped", [102]], [[65319, 65319], "mapped", [103]], [[65320, 65320], "mapped", [104]], [[65321, 65321], "mapped", [105]], [[65322, 65322], "mapped", [106]], [[65323, 65323], "mapped", [107]], [[65324, 65324], "mapped", [108]], [[65325, 65325], "mapped", [109]], [[65326, 65326], "mapped", [110]], [[65327, 65327], "mapped", [111]], [[65328, 65328], "mapped", [112]], [[65329, 65329], "mapped", [113]], [[65330, 65330], "mapped", [114]], [[65331, 65331], "mapped", [115]], [[65332, 65332], "mapped", [116]], [[65333, 65333], "mapped", [117]], [[65334, 65334], "mapped", [118]], [[65335, 65335], "mapped", [119]], [[65336, 65336], "mapped", [120]], [[65337, 65337], "mapped", [121]], [[65338, 65338], "mapped", [122]], [[65339, 65339], "disallowed_STD3_mapped", [91]], [[65340, 65340], "disallowed_STD3_mapped", [92]], [[65341, 65341], "disallowed_STD3_mapped", [93]], [[65342, 65342], "disallowed_STD3_mapped", [94]], [[65343, 65343], "disallowed_STD3_mapped", [95]], [[65344, 65344], "disallowed_STD3_mapped", [96]], [[65345, 65345], "mapped", [97]], [[65346, 65346], "mapped", [98]], [[65347, 65347], "mapped", [99]], [[65348, 65348], "mapped", [100]], [[65349, 65349], "mapped", [101]], [[65350, 65350], "mapped", [102]], [[65351, 65351], "mapped", [103]], [[65352, 65352], "mapped", [104]], [[65353, 65353], "mapped", [105]], [[65354, 65354], "mapped", [106]], [[65355, 65355], "mapped", [107]], [[65356, 65356], "mapped", [108]], [[65357, 65357], "mapped", [109]], [[65358, 65358], "mapped", [110]], [[65359, 65359], "mapped", [111]], [[65360, 65360], "mapped", [112]], [[65361, 65361], "mapped", [113]], [[65362, 65362], "mapped", [114]], [[65363, 65363], "mapped", [115]], [[65364, 65364], "mapped", [116]], [[65365, 65365], "mapped", [117]], [[65366, 65366], "mapped", [118]], [[65367, 65367], "mapped", [119]], [[65368, 65368], "mapped", [120]], [[65369, 65369], "mapped", [121]], [[65370, 65370], "mapped", [122]], [[65371, 65371], "disallowed_STD3_mapped", [123]], [[65372, 65372], "disallowed_STD3_mapped", [124]], [[65373, 65373], "disallowed_STD3_mapped", [125]], [[65374, 65374], "disallowed_STD3_mapped", [126]], [[65375, 65375], "mapped", [10629]], [[65376, 65376], "mapped", [10630]], [[65377, 65377], "mapped", [46]], [[65378, 65378], "mapped", [12300]], [[65379, 65379], "mapped", [12301]], [[65380, 65380], "mapped", [12289]], [[65381, 65381], "mapped", [12539]], [[65382, 65382], "mapped", [12530]], [[65383, 65383], "mapped", [12449]], [[65384, 65384], "mapped", [12451]], [[65385, 65385], "mapped", [12453]], [[65386, 65386], "mapped", [12455]], [[65387, 65387], "mapped", [12457]], [[65388, 65388], "mapped", [12515]], [[65389, 65389], "mapped", [12517]], [[65390, 65390], "mapped", [12519]], [[65391, 65391], "mapped", [12483]], [[65392, 65392], "mapped", [12540]], [[65393, 65393], "mapped", [12450]], [[65394, 65394], "mapped", [12452]], [[65395, 65395], "mapped", [12454]], [[65396, 65396], "mapped", [12456]], [[65397, 65397], "mapped", [12458]], [[65398, 65398], "mapped", [12459]], [[65399, 65399], "mapped", [12461]], [[65400, 65400], "mapped", [12463]], [[65401, 65401], "mapped", [12465]], [[65402, 65402], "mapped", [12467]], [[65403, 65403], "mapped", [12469]], [[65404, 65404], "mapped", [12471]], [[65405, 65405], "mapped", [12473]], [[65406, 65406], "mapped", [12475]], [[65407, 65407], "mapped", [12477]], [[65408, 65408], "mapped", [12479]], [[65409, 65409], "mapped", [12481]], [[65410, 65410], "mapped", [12484]], [[65411, 65411], "mapped", [12486]], [[65412, 65412], "mapped", [12488]], [[65413, 65413], "mapped", [12490]], [[65414, 65414], "mapped", [12491]], [[65415, 65415], "mapped", [12492]], [[65416, 65416], "mapped", [12493]], [[65417, 65417], "mapped", [12494]], [[65418, 65418], "mapped", [12495]], [[65419, 65419], "mapped", [12498]], [[65420, 65420], "mapped", [12501]], [[65421, 65421], "mapped", [12504]], [[65422, 65422], "mapped", [12507]], [[65423, 65423], "mapped", [12510]], [[65424, 65424], "mapped", [12511]], [[65425, 65425], "mapped", [12512]], [[65426, 65426], "mapped", [12513]], [[65427, 65427], "mapped", [12514]], [[65428, 65428], "mapped", [12516]], [[65429, 65429], "mapped", [12518]], [[65430, 65430], "mapped", [12520]], [[65431, 65431], "mapped", [12521]], [[65432, 65432], "mapped", [12522]], [[65433, 65433], "mapped", [12523]], [[65434, 65434], "mapped", [12524]], [[65435, 65435], "mapped", [12525]], [[65436, 65436], "mapped", [12527]], [[65437, 65437], "mapped", [12531]], [[65438, 65438], "mapped", [12441]], [[65439, 65439], "mapped", [12442]], [[65440, 65440], "disallowed"], [[65441, 65441], "mapped", [4352]], [[65442, 65442], "mapped", [4353]], [[65443, 65443], "mapped", [4522]], [[65444, 65444], "mapped", [4354]], [[65445, 65445], "mapped", [4524]], [[65446, 65446], "mapped", [4525]], [[65447, 65447], "mapped", [4355]], [[65448, 65448], "mapped", [4356]], [[65449, 65449], "mapped", [4357]], [[65450, 65450], "mapped", [4528]], [[65451, 65451], "mapped", [4529]], [[65452, 65452], "mapped", [4530]], [[65453, 65453], "mapped", [4531]], [[65454, 65454], "mapped", [4532]], [[65455, 65455], "mapped", [4533]], [[65456, 65456], "mapped", [4378]], [[65457, 65457], "mapped", [4358]], [[65458, 65458], "mapped", [4359]], [[65459, 65459], "mapped", [4360]], [[65460, 65460], "mapped", [4385]], [[65461, 65461], "mapped", [4361]], [[65462, 65462], "mapped", [4362]], [[65463, 65463], "mapped", [4363]], [[65464, 65464], "mapped", [4364]], [[65465, 65465], "mapped", [4365]], [[65466, 65466], "mapped", [4366]], [[65467, 65467], "mapped", [4367]], [[65468, 65468], "mapped", [4368]], [[65469, 65469], "mapped", [4369]], [[65470, 65470], "mapped", [4370]], [[65471, 65473], "disallowed"], [[65474, 65474], "mapped", [4449]], [[65475, 65475], "mapped", [4450]], [[65476, 65476], "mapped", [4451]], [[65477, 65477], "mapped", [4452]], [[65478, 65478], "mapped", [4453]], [[65479, 65479], "mapped", [4454]], [[65480, 65481], "disallowed"], [[65482, 65482], "mapped", [4455]], [[65483, 65483], "mapped", [4456]], [[65484, 65484], "mapped", [4457]], [[65485, 65485], "mapped", [4458]], [[65486, 65486], "mapped", [4459]], [[65487, 65487], "mapped", [4460]], [[65488, 65489], "disallowed"], [[65490, 65490], "mapped", [4461]], [[65491, 65491], "mapped", [4462]], [[65492, 65492], "mapped", [4463]], [[65493, 65493], "mapped", [4464]], [[65494, 65494], "mapped", [4465]], [[65495, 65495], "mapped", [4466]], [[65496, 65497], "disallowed"], [[65498, 65498], "mapped", [4467]], [[65499, 65499], "mapped", [4468]], [[65500, 65500], "mapped", [4469]], [[65501, 65503], "disallowed"], [[65504, 65504], "mapped", [162]], [[65505, 65505], "mapped", [163]], [[65506, 65506], "mapped", [172]], [[65507, 65507], "disallowed_STD3_mapped", [32, 772]], [[65508, 65508], "mapped", [166]], [[65509, 65509], "mapped", [165]], [[65510, 65510], "mapped", [8361]], [[65511, 65511], "disallowed"], [[65512, 65512], "mapped", [9474]], [[65513, 65513], "mapped", [8592]], [[65514, 65514], "mapped", [8593]], [[65515, 65515], "mapped", [8594]], [[65516, 65516], "mapped", [8595]], [[65517, 65517], "mapped", [9632]], [[65518, 65518], "mapped", [9675]], [[65519, 65528], "disallowed"], [[65529, 65531], "disallowed"], [[65532, 65532], "disallowed"], [[65533, 65533], "disallowed"], [[65534, 65535], "disallowed"], [[65536, 65547], "valid"], [[65548, 65548], "disallowed"], [[65549, 65574], "valid"], [[65575, 65575], "disallowed"], [[65576, 65594], "valid"], [[65595, 65595], "disallowed"], [[65596, 65597], "valid"], [[65598, 65598], "disallowed"], [[65599, 65613], "valid"], [[65614, 65615], "disallowed"], [[65616, 65629], "valid"], [[65630, 65663], "disallowed"], [[65664, 65786], "valid"], [[65787, 65791], "disallowed"], [[65792, 65794], "valid", [], "NV8"], [[65795, 65798], "disallowed"], [[65799, 65843], "valid", [], "NV8"], [[65844, 65846], "disallowed"], [[65847, 65855], "valid", [], "NV8"], [[65856, 65930], "valid", [], "NV8"], [[65931, 65932], "valid", [], "NV8"], [[65933, 65935], "disallowed"], [[65936, 65947], "valid", [], "NV8"], [[65948, 65951], "disallowed"], [[65952, 65952], "valid", [], "NV8"], [[65953, 65999], "disallowed"], [[66e3, 66044], "valid", [], "NV8"], [[66045, 66045], "valid"], [[66046, 66175], "disallowed"], [[66176, 66204], "valid"], [[66205, 66207], "disallowed"], [[66208, 66256], "valid"], [[66257, 66271], "disallowed"], [[66272, 66272], "valid"], [[66273, 66299], "valid", [], "NV8"], [[66300, 66303], "disallowed"], [[66304, 66334], "valid"], [[66335, 66335], "valid"], [[66336, 66339], "valid", [], "NV8"], [[66340, 66351], "disallowed"], [[66352, 66368], "valid"], [[66369, 66369], "valid", [], "NV8"], [[66370, 66377], "valid"], [[66378, 66378], "valid", [], "NV8"], [[66379, 66383], "disallowed"], [[66384, 66426], "valid"], [[66427, 66431], "disallowed"], [[66432, 66461], "valid"], [[66462, 66462], "disallowed"], [[66463, 66463], "valid", [], "NV8"], [[66464, 66499], "valid"], [[66500, 66503], "disallowed"], [[66504, 66511], "valid"], [[66512, 66517], "valid", [], "NV8"], [[66518, 66559], "disallowed"], [[66560, 66560], "mapped", [66600]], [[66561, 66561], "mapped", [66601]], [[66562, 66562], "mapped", [66602]], [[66563, 66563], "mapped", [66603]], [[66564, 66564], "mapped", [66604]], [[66565, 66565], "mapped", [66605]], [[66566, 66566], "mapped", [66606]], [[66567, 66567], "mapped", [66607]], [[66568, 66568], "mapped", [66608]], [[66569, 66569], "mapped", [66609]], [[66570, 66570], "mapped", [66610]], [[66571, 66571], "mapped", [66611]], [[66572, 66572], "mapped", [66612]], [[66573, 66573], "mapped", [66613]], [[66574, 66574], "mapped", [66614]], [[66575, 66575], "mapped", [66615]], [[66576, 66576], "mapped", [66616]], [[66577, 66577], "mapped", [66617]], [[66578, 66578], "mapped", [66618]], [[66579, 66579], "mapped", [66619]], [[66580, 66580], "mapped", [66620]], [[66581, 66581], "mapped", [66621]], [[66582, 66582], "mapped", [66622]], [[66583, 66583], "mapped", [66623]], [[66584, 66584], "mapped", [66624]], [[66585, 66585], "mapped", [66625]], [[66586, 66586], "mapped", [66626]], [[66587, 66587], "mapped", [66627]], [[66588, 66588], "mapped", [66628]], [[66589, 66589], "mapped", [66629]], [[66590, 66590], "mapped", [66630]], [[66591, 66591], "mapped", [66631]], [[66592, 66592], "mapped", [66632]], [[66593, 66593], "mapped", [66633]], [[66594, 66594], "mapped", [66634]], [[66595, 66595], "mapped", [66635]], [[66596, 66596], "mapped", [66636]], [[66597, 66597], "mapped", [66637]], [[66598, 66598], "mapped", [66638]], [[66599, 66599], "mapped", [66639]], [[66600, 66637], "valid"], [[66638, 66717], "valid"], [[66718, 66719], "disallowed"], [[66720, 66729], "valid"], [[66730, 66815], "disallowed"], [[66816, 66855], "valid"], [[66856, 66863], "disallowed"], [[66864, 66915], "valid"], [[66916, 66926], "disallowed"], [[66927, 66927], "valid", [], "NV8"], [[66928, 67071], "disallowed"], [[67072, 67382], "valid"], [[67383, 67391], "disallowed"], [[67392, 67413], "valid"], [[67414, 67423], "disallowed"], [[67424, 67431], "valid"], [[67432, 67583], "disallowed"], [[67584, 67589], "valid"], [[67590, 67591], "disallowed"], [[67592, 67592], "valid"], [[67593, 67593], "disallowed"], [[67594, 67637], "valid"], [[67638, 67638], "disallowed"], [[67639, 67640], "valid"], [[67641, 67643], "disallowed"], [[67644, 67644], "valid"], [[67645, 67646], "disallowed"], [[67647, 67647], "valid"], [[67648, 67669], "valid"], [[67670, 67670], "disallowed"], [[67671, 67679], "valid", [], "NV8"], [[67680, 67702], "valid"], [[67703, 67711], "valid", [], "NV8"], [[67712, 67742], "valid"], [[67743, 67750], "disallowed"], [[67751, 67759], "valid", [], "NV8"], [[67760, 67807], "disallowed"], [[67808, 67826], "valid"], [[67827, 67827], "disallowed"], [[67828, 67829], "valid"], [[67830, 67834], "disallowed"], [[67835, 67839], "valid", [], "NV8"], [[67840, 67861], "valid"], [[67862, 67865], "valid", [], "NV8"], [[67866, 67867], "valid", [], "NV8"], [[67868, 67870], "disallowed"], [[67871, 67871], "valid", [], "NV8"], [[67872, 67897], "valid"], [[67898, 67902], "disallowed"], [[67903, 67903], "valid", [], "NV8"], [[67904, 67967], "disallowed"], [[67968, 68023], "valid"], [[68024, 68027], "disallowed"], [[68028, 68029], "valid", [], "NV8"], [[68030, 68031], "valid"], [[68032, 68047], "valid", [], "NV8"], [[68048, 68049], "disallowed"], [[68050, 68095], "valid", [], "NV8"], [[68096, 68099], "valid"], [[68100, 68100], "disallowed"], [[68101, 68102], "valid"], [[68103, 68107], "disallowed"], [[68108, 68115], "valid"], [[68116, 68116], "disallowed"], [[68117, 68119], "valid"], [[68120, 68120], "disallowed"], [[68121, 68147], "valid"], [[68148, 68151], "disallowed"], [[68152, 68154], "valid"], [[68155, 68158], "disallowed"], [[68159, 68159], "valid"], [[68160, 68167], "valid", [], "NV8"], [[68168, 68175], "disallowed"], [[68176, 68184], "valid", [], "NV8"], [[68185, 68191], "disallowed"], [[68192, 68220], "valid"], [[68221, 68223], "valid", [], "NV8"], [[68224, 68252], "valid"], [[68253, 68255], "valid", [], "NV8"], [[68256, 68287], "disallowed"], [[68288, 68295], "valid"], [[68296, 68296], "valid", [], "NV8"], [[68297, 68326], "valid"], [[68327, 68330], "disallowed"], [[68331, 68342], "valid", [], "NV8"], [[68343, 68351], "disallowed"], [[68352, 68405], "valid"], [[68406, 68408], "disallowed"], [[68409, 68415], "valid", [], "NV8"], [[68416, 68437], "valid"], [[68438, 68439], "disallowed"], [[68440, 68447], "valid", [], "NV8"], [[68448, 68466], "valid"], [[68467, 68471], "disallowed"], [[68472, 68479], "valid", [], "NV8"], [[68480, 68497], "valid"], [[68498, 68504], "disallowed"], [[68505, 68508], "valid", [], "NV8"], [[68509, 68520], "disallowed"], [[68521, 68527], "valid", [], "NV8"], [[68528, 68607], "disallowed"], [[68608, 68680], "valid"], [[68681, 68735], "disallowed"], [[68736, 68736], "mapped", [68800]], [[68737, 68737], "mapped", [68801]], [[68738, 68738], "mapped", [68802]], [[68739, 68739], "mapped", [68803]], [[68740, 68740], "mapped", [68804]], [[68741, 68741], "mapped", [68805]], [[68742, 68742], "mapped", [68806]], [[68743, 68743], "mapped", [68807]], [[68744, 68744], "mapped", [68808]], [[68745, 68745], "mapped", [68809]], [[68746, 68746], "mapped", [68810]], [[68747, 68747], "mapped", [68811]], [[68748, 68748], "mapped", [68812]], [[68749, 68749], "mapped", [68813]], [[68750, 68750], "mapped", [68814]], [[68751, 68751], "mapped", [68815]], [[68752, 68752], "mapped", [68816]], [[68753, 68753], "mapped", [68817]], [[68754, 68754], "mapped", [68818]], [[68755, 68755], "mapped", [68819]], [[68756, 68756], "mapped", [68820]], [[68757, 68757], "mapped", [68821]], [[68758, 68758], "mapped", [68822]], [[68759, 68759], "mapped", [68823]], [[68760, 68760], "mapped", [68824]], [[68761, 68761], "mapped", [68825]], [[68762, 68762], "mapped", [68826]], [[68763, 68763], "mapped", [68827]], [[68764, 68764], "mapped", [68828]], [[68765, 68765], "mapped", [68829]], [[68766, 68766], "mapped", [68830]], [[68767, 68767], "mapped", [68831]], [[68768, 68768], "mapped", [68832]], [[68769, 68769], "mapped", [68833]], [[68770, 68770], "mapped", [68834]], [[68771, 68771], "mapped", [68835]], [[68772, 68772], "mapped", [68836]], [[68773, 68773], "mapped", [68837]], [[68774, 68774], "mapped", [68838]], [[68775, 68775], "mapped", [68839]], [[68776, 68776], "mapped", [68840]], [[68777, 68777], "mapped", [68841]], [[68778, 68778], "mapped", [68842]], [[68779, 68779], "mapped", [68843]], [[68780, 68780], "mapped", [68844]], [[68781, 68781], "mapped", [68845]], [[68782, 68782], "mapped", [68846]], [[68783, 68783], "mapped", [68847]], [[68784, 68784], "mapped", [68848]], [[68785, 68785], "mapped", [68849]], [[68786, 68786], "mapped", [68850]], [[68787, 68799], "disallowed"], [[68800, 68850], "valid"], [[68851, 68857], "disallowed"], [[68858, 68863], "valid", [], "NV8"], [[68864, 69215], "disallowed"], [[69216, 69246], "valid", [], "NV8"], [[69247, 69631], "disallowed"], [[69632, 69702], "valid"], [[69703, 69709], "valid", [], "NV8"], [[69710, 69713], "disallowed"], [[69714, 69733], "valid", [], "NV8"], [[69734, 69743], "valid"], [[69744, 69758], "disallowed"], [[69759, 69759], "valid"], [[69760, 69818], "valid"], [[69819, 69820], "valid", [], "NV8"], [[69821, 69821], "disallowed"], [[69822, 69825], "valid", [], "NV8"], [[69826, 69839], "disallowed"], [[69840, 69864], "valid"], [[69865, 69871], "disallowed"], [[69872, 69881], "valid"], [[69882, 69887], "disallowed"], [[69888, 69940], "valid"], [[69941, 69941], "disallowed"], [[69942, 69951], "valid"], [[69952, 69955], "valid", [], "NV8"], [[69956, 69967], "disallowed"], [[69968, 70003], "valid"], [[70004, 70005], "valid", [], "NV8"], [[70006, 70006], "valid"], [[70007, 70015], "disallowed"], [[70016, 70084], "valid"], [[70085, 70088], "valid", [], "NV8"], [[70089, 70089], "valid", [], "NV8"], [[70090, 70092], "valid"], [[70093, 70093], "valid", [], "NV8"], [[70094, 70095], "disallowed"], [[70096, 70105], "valid"], [[70106, 70106], "valid"], [[70107, 70107], "valid", [], "NV8"], [[70108, 70108], "valid"], [[70109, 70111], "valid", [], "NV8"], [[70112, 70112], "disallowed"], [[70113, 70132], "valid", [], "NV8"], [[70133, 70143], "disallowed"], [[70144, 70161], "valid"], [[70162, 70162], "disallowed"], [[70163, 70199], "valid"], [[70200, 70205], "valid", [], "NV8"], [[70206, 70271], "disallowed"], [[70272, 70278], "valid"], [[70279, 70279], "disallowed"], [[70280, 70280], "valid"], [[70281, 70281], "disallowed"], [[70282, 70285], "valid"], [[70286, 70286], "disallowed"], [[70287, 70301], "valid"], [[70302, 70302], "disallowed"], [[70303, 70312], "valid"], [[70313, 70313], "valid", [], "NV8"], [[70314, 70319], "disallowed"], [[70320, 70378], "valid"], [[70379, 70383], "disallowed"], [[70384, 70393], "valid"], [[70394, 70399], "disallowed"], [[70400, 70400], "valid"], [[70401, 70403], "valid"], [[70404, 70404], "disallowed"], [[70405, 70412], "valid"], [[70413, 70414], "disallowed"], [[70415, 70416], "valid"], [[70417, 70418], "disallowed"], [[70419, 70440], "valid"], [[70441, 70441], "disallowed"], [[70442, 70448], "valid"], [[70449, 70449], "disallowed"], [[70450, 70451], "valid"], [[70452, 70452], "disallowed"], [[70453, 70457], "valid"], [[70458, 70459], "disallowed"], [[70460, 70468], "valid"], [[70469, 70470], "disallowed"], [[70471, 70472], "valid"], [[70473, 70474], "disallowed"], [[70475, 70477], "valid"], [[70478, 70479], "disallowed"], [[70480, 70480], "valid"], [[70481, 70486], "disallowed"], [[70487, 70487], "valid"], [[70488, 70492], "disallowed"], [[70493, 70499], "valid"], [[70500, 70501], "disallowed"], [[70502, 70508], "valid"], [[70509, 70511], "disallowed"], [[70512, 70516], "valid"], [[70517, 70783], "disallowed"], [[70784, 70853], "valid"], [[70854, 70854], "valid", [], "NV8"], [[70855, 70855], "valid"], [[70856, 70863], "disallowed"], [[70864, 70873], "valid"], [[70874, 71039], "disallowed"], [[71040, 71093], "valid"], [[71094, 71095], "disallowed"], [[71096, 71104], "valid"], [[71105, 71113], "valid", [], "NV8"], [[71114, 71127], "valid", [], "NV8"], [[71128, 71133], "valid"], [[71134, 71167], "disallowed"], [[71168, 71232], "valid"], [[71233, 71235], "valid", [], "NV8"], [[71236, 71236], "valid"], [[71237, 71247], "disallowed"], [[71248, 71257], "valid"], [[71258, 71295], "disallowed"], [[71296, 71351], "valid"], [[71352, 71359], "disallowed"], [[71360, 71369], "valid"], [[71370, 71423], "disallowed"], [[71424, 71449], "valid"], [[71450, 71452], "disallowed"], [[71453, 71467], "valid"], [[71468, 71471], "disallowed"], [[71472, 71481], "valid"], [[71482, 71487], "valid", [], "NV8"], [[71488, 71839], "disallowed"], [[71840, 71840], "mapped", [71872]], [[71841, 71841], "mapped", [71873]], [[71842, 71842], "mapped", [71874]], [[71843, 71843], "mapped", [71875]], [[71844, 71844], "mapped", [71876]], [[71845, 71845], "mapped", [71877]], [[71846, 71846], "mapped", [71878]], [[71847, 71847], "mapped", [71879]], [[71848, 71848], "mapped", [71880]], [[71849, 71849], "mapped", [71881]], [[71850, 71850], "mapped", [71882]], [[71851, 71851], "mapped", [71883]], [[71852, 71852], "mapped", [71884]], [[71853, 71853], "mapped", [71885]], [[71854, 71854], "mapped", [71886]], [[71855, 71855], "mapped", [71887]], [[71856, 71856], "mapped", [71888]], [[71857, 71857], "mapped", [71889]], [[71858, 71858], "mapped", [71890]], [[71859, 71859], "mapped", [71891]], [[71860, 71860], "mapped", [71892]], [[71861, 71861], "mapped", [71893]], [[71862, 71862], "mapped", [71894]], [[71863, 71863], "mapped", [71895]], [[71864, 71864], "mapped", [71896]], [[71865, 71865], "mapped", [71897]], [[71866, 71866], "mapped", [71898]], [[71867, 71867], "mapped", [71899]], [[71868, 71868], "mapped", [71900]], [[71869, 71869], "mapped", [71901]], [[71870, 71870], "mapped", [71902]], [[71871, 71871], "mapped", [71903]], [[71872, 71913], "valid"], [[71914, 71922], "valid", [], "NV8"], [[71923, 71934], "disallowed"], [[71935, 71935], "valid"], [[71936, 72383], "disallowed"], [[72384, 72440], "valid"], [[72441, 73727], "disallowed"], [[73728, 74606], "valid"], [[74607, 74648], "valid"], [[74649, 74649], "valid"], [[74650, 74751], "disallowed"], [[74752, 74850], "valid", [], "NV8"], [[74851, 74862], "valid", [], "NV8"], [[74863, 74863], "disallowed"], [[74864, 74867], "valid", [], "NV8"], [[74868, 74868], "valid", [], "NV8"], [[74869, 74879], "disallowed"], [[74880, 75075], "valid"], [[75076, 77823], "disallowed"], [[77824, 78894], "valid"], [[78895, 82943], "disallowed"], [[82944, 83526], "valid"], [[83527, 92159], "disallowed"], [[92160, 92728], "valid"], [[92729, 92735], "disallowed"], [[92736, 92766], "valid"], [[92767, 92767], "disallowed"], [[92768, 92777], "valid"], [[92778, 92781], "disallowed"], [[92782, 92783], "valid", [], "NV8"], [[92784, 92879], "disallowed"], [[92880, 92909], "valid"], [[92910, 92911], "disallowed"], [[92912, 92916], "valid"], [[92917, 92917], "valid", [], "NV8"], [[92918, 92927], "disallowed"], [[92928, 92982], "valid"], [[92983, 92991], "valid", [], "NV8"], [[92992, 92995], "valid"], [[92996, 92997], "valid", [], "NV8"], [[92998, 93007], "disallowed"], [[93008, 93017], "valid"], [[93018, 93018], "disallowed"], [[93019, 93025], "valid", [], "NV8"], [[93026, 93026], "disallowed"], [[93027, 93047], "valid"], [[93048, 93052], "disallowed"], [[93053, 93071], "valid"], [[93072, 93951], "disallowed"], [[93952, 94020], "valid"], [[94021, 94031], "disallowed"], [[94032, 94078], "valid"], [[94079, 94094], "disallowed"], [[94095, 94111], "valid"], [[94112, 110591], "disallowed"], [[110592, 110593], "valid"], [[110594, 113663], "disallowed"], [[113664, 113770], "valid"], [[113771, 113775], "disallowed"], [[113776, 113788], "valid"], [[113789, 113791], "disallowed"], [[113792, 113800], "valid"], [[113801, 113807], "disallowed"], [[113808, 113817], "valid"], [[113818, 113819], "disallowed"], [[113820, 113820], "valid", [], "NV8"], [[113821, 113822], "valid"], [[113823, 113823], "valid", [], "NV8"], [[113824, 113827], "ignored"], [[113828, 118783], "disallowed"], [[118784, 119029], "valid", [], "NV8"], [[119030, 119039], "disallowed"], [[119040, 119078], "valid", [], "NV8"], [[119079, 119080], "disallowed"], [[119081, 119081], "valid", [], "NV8"], [[119082, 119133], "valid", [], "NV8"], [[119134, 119134], "mapped", [119127, 119141]], [[119135, 119135], "mapped", [119128, 119141]], [[119136, 119136], "mapped", [119128, 119141, 119150]], [[119137, 119137], "mapped", [119128, 119141, 119151]], [[119138, 119138], "mapped", [119128, 119141, 119152]], [[119139, 119139], "mapped", [119128, 119141, 119153]], [[119140, 119140], "mapped", [119128, 119141, 119154]], [[119141, 119154], "valid", [], "NV8"], [[119155, 119162], "disallowed"], [[119163, 119226], "valid", [], "NV8"], [[119227, 119227], "mapped", [119225, 119141]], [[119228, 119228], "mapped", [119226, 119141]], [[119229, 119229], "mapped", [119225, 119141, 119150]], [[119230, 119230], "mapped", [119226, 119141, 119150]], [[119231, 119231], "mapped", [119225, 119141, 119151]], [[119232, 119232], "mapped", [119226, 119141, 119151]], [[119233, 119261], "valid", [], "NV8"], [[119262, 119272], "valid", [], "NV8"], [[119273, 119295], "disallowed"], [[119296, 119365], "valid", [], "NV8"], [[119366, 119551], "disallowed"], [[119552, 119638], "valid", [], "NV8"], [[119639, 119647], "disallowed"], [[119648, 119665], "valid", [], "NV8"], [[119666, 119807], "disallowed"], [[119808, 119808], "mapped", [97]], [[119809, 119809], "mapped", [98]], [[119810, 119810], "mapped", [99]], [[119811, 119811], "mapped", [100]], [[119812, 119812], "mapped", [101]], [[119813, 119813], "mapped", [102]], [[119814, 119814], "mapped", [103]], [[119815, 119815], "mapped", [104]], [[119816, 119816], "mapped", [105]], [[119817, 119817], "mapped", [106]], [[119818, 119818], "mapped", [107]], [[119819, 119819], "mapped", [108]], [[119820, 119820], "mapped", [109]], [[119821, 119821], "mapped", [110]], [[119822, 119822], "mapped", [111]], [[119823, 119823], "mapped", [112]], [[119824, 119824], "mapped", [113]], [[119825, 119825], "mapped", [114]], [[119826, 119826], "mapped", [115]], [[119827, 119827], "mapped", [116]], [[119828, 119828], "mapped", [117]], [[119829, 119829], "mapped", [118]], [[119830, 119830], "mapped", [119]], [[119831, 119831], "mapped", [120]], [[119832, 119832], "mapped", [121]], [[119833, 119833], "mapped", [122]], [[119834, 119834], "mapped", [97]], [[119835, 119835], "mapped", [98]], [[119836, 119836], "mapped", [99]], [[119837, 119837], "mapped", [100]], [[119838, 119838], "mapped", [101]], [[119839, 119839], "mapped", [102]], [[119840, 119840], "mapped", [103]], [[119841, 119841], "mapped", [104]], [[119842, 119842], "mapped", [105]], [[119843, 119843], "mapped", [106]], [[119844, 119844], "mapped", [107]], [[119845, 119845], "mapped", [108]], [[119846, 119846], "mapped", [109]], [[119847, 119847], "mapped", [110]], [[119848, 119848], "mapped", [111]], [[119849, 119849], "mapped", [112]], [[119850, 119850], "mapped", [113]], [[119851, 119851], "mapped", [114]], [[119852, 119852], "mapped", [115]], [[119853, 119853], "mapped", [116]], [[119854, 119854], "mapped", [117]], [[119855, 119855], "mapped", [118]], [[119856, 119856], "mapped", [119]], [[119857, 119857], "mapped", [120]], [[119858, 119858], "mapped", [121]], [[119859, 119859], "mapped", [122]], [[119860, 119860], "mapped", [97]], [[119861, 119861], "mapped", [98]], [[119862, 119862], "mapped", [99]], [[119863, 119863], "mapped", [100]], [[119864, 119864], "mapped", [101]], [[119865, 119865], "mapped", [102]], [[119866, 119866], "mapped", [103]], [[119867, 119867], "mapped", [104]], [[119868, 119868], "mapped", [105]], [[119869, 119869], "mapped", [106]], [[119870, 119870], "mapped", [107]], [[119871, 119871], "mapped", [108]], [[119872, 119872], "mapped", [109]], [[119873, 119873], "mapped", [110]], [[119874, 119874], "mapped", [111]], [[119875, 119875], "mapped", [112]], [[119876, 119876], "mapped", [113]], [[119877, 119877], "mapped", [114]], [[119878, 119878], "mapped", [115]], [[119879, 119879], "mapped", [116]], [[119880, 119880], "mapped", [117]], [[119881, 119881], "mapped", [118]], [[119882, 119882], "mapped", [119]], [[119883, 119883], "mapped", [120]], [[119884, 119884], "mapped", [121]], [[119885, 119885], "mapped", [122]], [[119886, 119886], "mapped", [97]], [[119887, 119887], "mapped", [98]], [[119888, 119888], "mapped", [99]], [[119889, 119889], "mapped", [100]], [[119890, 119890], "mapped", [101]], [[119891, 119891], "mapped", [102]], [[119892, 119892], "mapped", [103]], [[119893, 119893], "disallowed"], [[119894, 119894], "mapped", [105]], [[119895, 119895], "mapped", [106]], [[119896, 119896], "mapped", [107]], [[119897, 119897], "mapped", [108]], [[119898, 119898], "mapped", [109]], [[119899, 119899], "mapped", [110]], [[119900, 119900], "mapped", [111]], [[119901, 119901], "mapped", [112]], [[119902, 119902], "mapped", [113]], [[119903, 119903], "mapped", [114]], [[119904, 119904], "mapped", [115]], [[119905, 119905], "mapped", [116]], [[119906, 119906], "mapped", [117]], [[119907, 119907], "mapped", [118]], [[119908, 119908], "mapped", [119]], [[119909, 119909], "mapped", [120]], [[119910, 119910], "mapped", [121]], [[119911, 119911], "mapped", [122]], [[119912, 119912], "mapped", [97]], [[119913, 119913], "mapped", [98]], [[119914, 119914], "mapped", [99]], [[119915, 119915], "mapped", [100]], [[119916, 119916], "mapped", [101]], [[119917, 119917], "mapped", [102]], [[119918, 119918], "mapped", [103]], [[119919, 119919], "mapped", [104]], [[119920, 119920], "mapped", [105]], [[119921, 119921], "mapped", [106]], [[119922, 119922], "mapped", [107]], [[119923, 119923], "mapped", [108]], [[119924, 119924], "mapped", [109]], [[119925, 119925], "mapped", [110]], [[119926, 119926], "mapped", [111]], [[119927, 119927], "mapped", [112]], [[119928, 119928], "mapped", [113]], [[119929, 119929], "mapped", [114]], [[119930, 119930], "mapped", [115]], [[119931, 119931], "mapped", [116]], [[119932, 119932], "mapped", [117]], [[119933, 119933], "mapped", [118]], [[119934, 119934], "mapped", [119]], [[119935, 119935], "mapped", [120]], [[119936, 119936], "mapped", [121]], [[119937, 119937], "mapped", [122]], [[119938, 119938], "mapped", [97]], [[119939, 119939], "mapped", [98]], [[119940, 119940], "mapped", [99]], [[119941, 119941], "mapped", [100]], [[119942, 119942], "mapped", [101]], [[119943, 119943], "mapped", [102]], [[119944, 119944], "mapped", [103]], [[119945, 119945], "mapped", [104]], [[119946, 119946], "mapped", [105]], [[119947, 119947], "mapped", [106]], [[119948, 119948], "mapped", [107]], [[119949, 119949], "mapped", [108]], [[119950, 119950], "mapped", [109]], [[119951, 119951], "mapped", [110]], [[119952, 119952], "mapped", [111]], [[119953, 119953], "mapped", [112]], [[119954, 119954], "mapped", [113]], [[119955, 119955], "mapped", [114]], [[119956, 119956], "mapped", [115]], [[119957, 119957], "mapped", [116]], [[119958, 119958], "mapped", [117]], [[119959, 119959], "mapped", [118]], [[119960, 119960], "mapped", [119]], [[119961, 119961], "mapped", [120]], [[119962, 119962], "mapped", [121]], [[119963, 119963], "mapped", [122]], [[119964, 119964], "mapped", [97]], [[119965, 119965], "disallowed"], [[119966, 119966], "mapped", [99]], [[119967, 119967], "mapped", [100]], [[119968, 119969], "disallowed"], [[119970, 119970], "mapped", [103]], [[119971, 119972], "disallowed"], [[119973, 119973], "mapped", [106]], [[119974, 119974], "mapped", [107]], [[119975, 119976], "disallowed"], [[119977, 119977], "mapped", [110]], [[119978, 119978], "mapped", [111]], [[119979, 119979], "mapped", [112]], [[119980, 119980], "mapped", [113]], [[119981, 119981], "disallowed"], [[119982, 119982], "mapped", [115]], [[119983, 119983], "mapped", [116]], [[119984, 119984], "mapped", [117]], [[119985, 119985], "mapped", [118]], [[119986, 119986], "mapped", [119]], [[119987, 119987], "mapped", [120]], [[119988, 119988], "mapped", [121]], [[119989, 119989], "mapped", [122]], [[119990, 119990], "mapped", [97]], [[119991, 119991], "mapped", [98]], [[119992, 119992], "mapped", [99]], [[119993, 119993], "mapped", [100]], [[119994, 119994], "disallowed"], [[119995, 119995], "mapped", [102]], [[119996, 119996], "disallowed"], [[119997, 119997], "mapped", [104]], [[119998, 119998], "mapped", [105]], [[119999, 119999], "mapped", [106]], [[12e4, 12e4], "mapped", [107]], [[120001, 120001], "mapped", [108]], [[120002, 120002], "mapped", [109]], [[120003, 120003], "mapped", [110]], [[120004, 120004], "disallowed"], [[120005, 120005], "mapped", [112]], [[120006, 120006], "mapped", [113]], [[120007, 120007], "mapped", [114]], [[120008, 120008], "mapped", [115]], [[120009, 120009], "mapped", [116]], [[120010, 120010], "mapped", [117]], [[120011, 120011], "mapped", [118]], [[120012, 120012], "mapped", [119]], [[120013, 120013], "mapped", [120]], [[120014, 120014], "mapped", [121]], [[120015, 120015], "mapped", [122]], [[120016, 120016], "mapped", [97]], [[120017, 120017], "mapped", [98]], [[120018, 120018], "mapped", [99]], [[120019, 120019], "mapped", [100]], [[120020, 120020], "mapped", [101]], [[120021, 120021], "mapped", [102]], [[120022, 120022], "mapped", [103]], [[120023, 120023], "mapped", [104]], [[120024, 120024], "mapped", [105]], [[120025, 120025], "mapped", [106]], [[120026, 120026], "mapped", [107]], [[120027, 120027], "mapped", [108]], [[120028, 120028], "mapped", [109]], [[120029, 120029], "mapped", [110]], [[120030, 120030], "mapped", [111]], [[120031, 120031], "mapped", [112]], [[120032, 120032], "mapped", [113]], [[120033, 120033], "mapped", [114]], [[120034, 120034], "mapped", [115]], [[120035, 120035], "mapped", [116]], [[120036, 120036], "mapped", [117]], [[120037, 120037], "mapped", [118]], [[120038, 120038], "mapped", [119]], [[120039, 120039], "mapped", [120]], [[120040, 120040], "mapped", [121]], [[120041, 120041], "mapped", [122]], [[120042, 120042], "mapped", [97]], [[120043, 120043], "mapped", [98]], [[120044, 120044], "mapped", [99]], [[120045, 120045], "mapped", [100]], [[120046, 120046], "mapped", [101]], [[120047, 120047], "mapped", [102]], [[120048, 120048], "mapped", [103]], [[120049, 120049], "mapped", [104]], [[120050, 120050], "mapped", [105]], [[120051, 120051], "mapped", [106]], [[120052, 120052], "mapped", [107]], [[120053, 120053], "mapped", [108]], [[120054, 120054], "mapped", [109]], [[120055, 120055], "mapped", [110]], [[120056, 120056], "mapped", [111]], [[120057, 120057], "mapped", [112]], [[120058, 120058], "mapped", [113]], [[120059, 120059], "mapped", [114]], [[120060, 120060], "mapped", [115]], [[120061, 120061], "mapped", [116]], [[120062, 120062], "mapped", [117]], [[120063, 120063], "mapped", [118]], [[120064, 120064], "mapped", [119]], [[120065, 120065], "mapped", [120]], [[120066, 120066], "mapped", [121]], [[120067, 120067], "mapped", [122]], [[120068, 120068], "mapped", [97]], [[120069, 120069], "mapped", [98]], [[120070, 120070], "disallowed"], [[120071, 120071], "mapped", [100]], [[120072, 120072], "mapped", [101]], [[120073, 120073], "mapped", [102]], [[120074, 120074], "mapped", [103]], [[120075, 120076], "disallowed"], [[120077, 120077], "mapped", [106]], [[120078, 120078], "mapped", [107]], [[120079, 120079], "mapped", [108]], [[120080, 120080], "mapped", [109]], [[120081, 120081], "mapped", [110]], [[120082, 120082], "mapped", [111]], [[120083, 120083], "mapped", [112]], [[120084, 120084], "mapped", [113]], [[120085, 120085], "disallowed"], [[120086, 120086], "mapped", [115]], [[120087, 120087], "mapped", [116]], [[120088, 120088], "mapped", [117]], [[120089, 120089], "mapped", [118]], [[120090, 120090], "mapped", [119]], [[120091, 120091], "mapped", [120]], [[120092, 120092], "mapped", [121]], [[120093, 120093], "disallowed"], [[120094, 120094], "mapped", [97]], [[120095, 120095], "mapped", [98]], [[120096, 120096], "mapped", [99]], [[120097, 120097], "mapped", [100]], [[120098, 120098], "mapped", [101]], [[120099, 120099], "mapped", [102]], [[120100, 120100], "mapped", [103]], [[120101, 120101], "mapped", [104]], [[120102, 120102], "mapped", [105]], [[120103, 120103], "mapped", [106]], [[120104, 120104], "mapped", [107]], [[120105, 120105], "mapped", [108]], [[120106, 120106], "mapped", [109]], [[120107, 120107], "mapped", [110]], [[120108, 120108], "mapped", [111]], [[120109, 120109], "mapped", [112]], [[120110, 120110], "mapped", [113]], [[120111, 120111], "mapped", [114]], [[120112, 120112], "mapped", [115]], [[120113, 120113], "mapped", [116]], [[120114, 120114], "mapped", [117]], [[120115, 120115], "mapped", [118]], [[120116, 120116], "mapped", [119]], [[120117, 120117], "mapped", [120]], [[120118, 120118], "mapped", [121]], [[120119, 120119], "mapped", [122]], [[120120, 120120], "mapped", [97]], [[120121, 120121], "mapped", [98]], [[120122, 120122], "disallowed"], [[120123, 120123], "mapped", [100]], [[120124, 120124], "mapped", [101]], [[120125, 120125], "mapped", [102]], [[120126, 120126], "mapped", [103]], [[120127, 120127], "disallowed"], [[120128, 120128], "mapped", [105]], [[120129, 120129], "mapped", [106]], [[120130, 120130], "mapped", [107]], [[120131, 120131], "mapped", [108]], [[120132, 120132], "mapped", [109]], [[120133, 120133], "disallowed"], [[120134, 120134], "mapped", [111]], [[120135, 120137], "disallowed"], [[120138, 120138], "mapped", [115]], [[120139, 120139], "mapped", [116]], [[120140, 120140], "mapped", [117]], [[120141, 120141], "mapped", [118]], [[120142, 120142], "mapped", [119]], [[120143, 120143], "mapped", [120]], [[120144, 120144], "mapped", [121]], [[120145, 120145], "disallowed"], [[120146, 120146], "mapped", [97]], [[120147, 120147], "mapped", [98]], [[120148, 120148], "mapped", [99]], [[120149, 120149], "mapped", [100]], [[120150, 120150], "mapped", [101]], [[120151, 120151], "mapped", [102]], [[120152, 120152], "mapped", [103]], [[120153, 120153], "mapped", [104]], [[120154, 120154], "mapped", [105]], [[120155, 120155], "mapped", [106]], [[120156, 120156], "mapped", [107]], [[120157, 120157], "mapped", [108]], [[120158, 120158], "mapped", [109]], [[120159, 120159], "mapped", [110]], [[120160, 120160], "mapped", [111]], [[120161, 120161], "mapped", [112]], [[120162, 120162], "mapped", [113]], [[120163, 120163], "mapped", [114]], [[120164, 120164], "mapped", [115]], [[120165, 120165], "mapped", [116]], [[120166, 120166], "mapped", [117]], [[120167, 120167], "mapped", [118]], [[120168, 120168], "mapped", [119]], [[120169, 120169], "mapped", [120]], [[120170, 120170], "mapped", [121]], [[120171, 120171], "mapped", [122]], [[120172, 120172], "mapped", [97]], [[120173, 120173], "mapped", [98]], [[120174, 120174], "mapped", [99]], [[120175, 120175], "mapped", [100]], [[120176, 120176], "mapped", [101]], [[120177, 120177], "mapped", [102]], [[120178, 120178], "mapped", [103]], [[120179, 120179], "mapped", [104]], [[120180, 120180], "mapped", [105]], [[120181, 120181], "mapped", [106]], [[120182, 120182], "mapped", [107]], [[120183, 120183], "mapped", [108]], [[120184, 120184], "mapped", [109]], [[120185, 120185], "mapped", [110]], [[120186, 120186], "mapped", [111]], [[120187, 120187], "mapped", [112]], [[120188, 120188], "mapped", [113]], [[120189, 120189], "mapped", [114]], [[120190, 120190], "mapped", [115]], [[120191, 120191], "mapped", [116]], [[120192, 120192], "mapped", [117]], [[120193, 120193], "mapped", [118]], [[120194, 120194], "mapped", [119]], [[120195, 120195], "mapped", [120]], [[120196, 120196], "mapped", [121]], [[120197, 120197], "mapped", [122]], [[120198, 120198], "mapped", [97]], [[120199, 120199], "mapped", [98]], [[120200, 120200], "mapped", [99]], [[120201, 120201], "mapped", [100]], [[120202, 120202], "mapped", [101]], [[120203, 120203], "mapped", [102]], [[120204, 120204], "mapped", [103]], [[120205, 120205], "mapped", [104]], [[120206, 120206], "mapped", [105]], [[120207, 120207], "mapped", [106]], [[120208, 120208], "mapped", [107]], [[120209, 120209], "mapped", [108]], [[120210, 120210], "mapped", [109]], [[120211, 120211], "mapped", [110]], [[120212, 120212], "mapped", [111]], [[120213, 120213], "mapped", [112]], [[120214, 120214], "mapped", [113]], [[120215, 120215], "mapped", [114]], [[120216, 120216], "mapped", [115]], [[120217, 120217], "mapped", [116]], [[120218, 120218], "mapped", [117]], [[120219, 120219], "mapped", [118]], [[120220, 120220], "mapped", [119]], [[120221, 120221], "mapped", [120]], [[120222, 120222], "mapped", [121]], [[120223, 120223], "mapped", [122]], [[120224, 120224], "mapped", [97]], [[120225, 120225], "mapped", [98]], [[120226, 120226], "mapped", [99]], [[120227, 120227], "mapped", [100]], [[120228, 120228], "mapped", [101]], [[120229, 120229], "mapped", [102]], [[120230, 120230], "mapped", [103]], [[120231, 120231], "mapped", [104]], [[120232, 120232], "mapped", [105]], [[120233, 120233], "mapped", [106]], [[120234, 120234], "mapped", [107]], [[120235, 120235], "mapped", [108]], [[120236, 120236], "mapped", [109]], [[120237, 120237], "mapped", [110]], [[120238, 120238], "mapped", [111]], [[120239, 120239], "mapped", [112]], [[120240, 120240], "mapped", [113]], [[120241, 120241], "mapped", [114]], [[120242, 120242], "mapped", [115]], [[120243, 120243], "mapped", [116]], [[120244, 120244], "mapped", [117]], [[120245, 120245], "mapped", [118]], [[120246, 120246], "mapped", [119]], [[120247, 120247], "mapped", [120]], [[120248, 120248], "mapped", [121]], [[120249, 120249], "mapped", [122]], [[120250, 120250], "mapped", [97]], [[120251, 120251], "mapped", [98]], [[120252, 120252], "mapped", [99]], [[120253, 120253], "mapped", [100]], [[120254, 120254], "mapped", [101]], [[120255, 120255], "mapped", [102]], [[120256, 120256], "mapped", [103]], [[120257, 120257], "mapped", [104]], [[120258, 120258], "mapped", [105]], [[120259, 120259], "mapped", [106]], [[120260, 120260], "mapped", [107]], [[120261, 120261], "mapped", [108]], [[120262, 120262], "mapped", [109]], [[120263, 120263], "mapped", [110]], [[120264, 120264], "mapped", [111]], [[120265, 120265], "mapped", [112]], [[120266, 120266], "mapped", [113]], [[120267, 120267], "mapped", [114]], [[120268, 120268], "mapped", [115]], [[120269, 120269], "mapped", [116]], [[120270, 120270], "mapped", [117]], [[120271, 120271], "mapped", [118]], [[120272, 120272], "mapped", [119]], [[120273, 120273], "mapped", [120]], [[120274, 120274], "mapped", [121]], [[120275, 120275], "mapped", [122]], [[120276, 120276], "mapped", [97]], [[120277, 120277], "mapped", [98]], [[120278, 120278], "mapped", [99]], [[120279, 120279], "mapped", [100]], [[120280, 120280], "mapped", [101]], [[120281, 120281], "mapped", [102]], [[120282, 120282], "mapped", [103]], [[120283, 120283], "mapped", [104]], [[120284, 120284], "mapped", [105]], [[120285, 120285], "mapped", [106]], [[120286, 120286], "mapped", [107]], [[120287, 120287], "mapped", [108]], [[120288, 120288], "mapped", [109]], [[120289, 120289], "mapped", [110]], [[120290, 120290], "mapped", [111]], [[120291, 120291], "mapped", [112]], [[120292, 120292], "mapped", [113]], [[120293, 120293], "mapped", [114]], [[120294, 120294], "mapped", [115]], [[120295, 120295], "mapped", [116]], [[120296, 120296], "mapped", [117]], [[120297, 120297], "mapped", [118]], [[120298, 120298], "mapped", [119]], [[120299, 120299], "mapped", [120]], [[120300, 120300], "mapped", [121]], [[120301, 120301], "mapped", [122]], [[120302, 120302], "mapped", [97]], [[120303, 120303], "mapped", [98]], [[120304, 120304], "mapped", [99]], [[120305, 120305], "mapped", [100]], [[120306, 120306], "mapped", [101]], [[120307, 120307], "mapped", [102]], [[120308, 120308], "mapped", [103]], [[120309, 120309], "mapped", [104]], [[120310, 120310], "mapped", [105]], [[120311, 120311], "mapped", [106]], [[120312, 120312], "mapped", [107]], [[120313, 120313], "mapped", [108]], [[120314, 120314], "mapped", [109]], [[120315, 120315], "mapped", [110]], [[120316, 120316], "mapped", [111]], [[120317, 120317], "mapped", [112]], [[120318, 120318], "mapped", [113]], [[120319, 120319], "mapped", [114]], [[120320, 120320], "mapped", [115]], [[120321, 120321], "mapped", [116]], [[120322, 120322], "mapped", [117]], [[120323, 120323], "mapped", [118]], [[120324, 120324], "mapped", [119]], [[120325, 120325], "mapped", [120]], [[120326, 120326], "mapped", [121]], [[120327, 120327], "mapped", [122]], [[120328, 120328], "mapped", [97]], [[120329, 120329], "mapped", [98]], [[120330, 120330], "mapped", [99]], [[120331, 120331], "mapped", [100]], [[120332, 120332], "mapped", [101]], [[120333, 120333], "mapped", [102]], [[120334, 120334], "mapped", [103]], [[120335, 120335], "mapped", [104]], [[120336, 120336], "mapped", [105]], [[120337, 120337], "mapped", [106]], [[120338, 120338], "mapped", [107]], [[120339, 120339], "mapped", [108]], [[120340, 120340], "mapped", [109]], [[120341, 120341], "mapped", [110]], [[120342, 120342], "mapped", [111]], [[120343, 120343], "mapped", [112]], [[120344, 120344], "mapped", [113]], [[120345, 120345], "mapped", [114]], [[120346, 120346], "mapped", [115]], [[120347, 120347], "mapped", [116]], [[120348, 120348], "mapped", [117]], [[120349, 120349], "mapped", [118]], [[120350, 120350], "mapped", [119]], [[120351, 120351], "mapped", [120]], [[120352, 120352], "mapped", [121]], [[120353, 120353], "mapped", [122]], [[120354, 120354], "mapped", [97]], [[120355, 120355], "mapped", [98]], [[120356, 120356], "mapped", [99]], [[120357, 120357], "mapped", [100]], [[120358, 120358], "mapped", [101]], [[120359, 120359], "mapped", [102]], [[120360, 120360], "mapped", [103]], [[120361, 120361], "mapped", [104]], [[120362, 120362], "mapped", [105]], [[120363, 120363], "mapped", [106]], [[120364, 120364], "mapped", [107]], [[120365, 120365], "mapped", [108]], [[120366, 120366], "mapped", [109]], [[120367, 120367], "mapped", [110]], [[120368, 120368], "mapped", [111]], [[120369, 120369], "mapped", [112]], [[120370, 120370], "mapped", [113]], [[120371, 120371], "mapped", [114]], [[120372, 120372], "mapped", [115]], [[120373, 120373], "mapped", [116]], [[120374, 120374], "mapped", [117]], [[120375, 120375], "mapped", [118]], [[120376, 120376], "mapped", [119]], [[120377, 120377], "mapped", [120]], [[120378, 120378], "mapped", [121]], [[120379, 120379], "mapped", [122]], [[120380, 120380], "mapped", [97]], [[120381, 120381], "mapped", [98]], [[120382, 120382], "mapped", [99]], [[120383, 120383], "mapped", [100]], [[120384, 120384], "mapped", [101]], [[120385, 120385], "mapped", [102]], [[120386, 120386], "mapped", [103]], [[120387, 120387], "mapped", [104]], [[120388, 120388], "mapped", [105]], [[120389, 120389], "mapped", [106]], [[120390, 120390], "mapped", [107]], [[120391, 120391], "mapped", [108]], [[120392, 120392], "mapped", [109]], [[120393, 120393], "mapped", [110]], [[120394, 120394], "mapped", [111]], [[120395, 120395], "mapped", [112]], [[120396, 120396], "mapped", [113]], [[120397, 120397], "mapped", [114]], [[120398, 120398], "mapped", [115]], [[120399, 120399], "mapped", [116]], [[120400, 120400], "mapped", [117]], [[120401, 120401], "mapped", [118]], [[120402, 120402], "mapped", [119]], [[120403, 120403], "mapped", [120]], [[120404, 120404], "mapped", [121]], [[120405, 120405], "mapped", [122]], [[120406, 120406], "mapped", [97]], [[120407, 120407], "mapped", [98]], [[120408, 120408], "mapped", [99]], [[120409, 120409], "mapped", [100]], [[120410, 120410], "mapped", [101]], [[120411, 120411], "mapped", [102]], [[120412, 120412], "mapped", [103]], [[120413, 120413], "mapped", [104]], [[120414, 120414], "mapped", [105]], [[120415, 120415], "mapped", [106]], [[120416, 120416], "mapped", [107]], [[120417, 120417], "mapped", [108]], [[120418, 120418], "mapped", [109]], [[120419, 120419], "mapped", [110]], [[120420, 120420], "mapped", [111]], [[120421, 120421], "mapped", [112]], [[120422, 120422], "mapped", [113]], [[120423, 120423], "mapped", [114]], [[120424, 120424], "mapped", [115]], [[120425, 120425], "mapped", [116]], [[120426, 120426], "mapped", [117]], [[120427, 120427], "mapped", [118]], [[120428, 120428], "mapped", [119]], [[120429, 120429], "mapped", [120]], [[120430, 120430], "mapped", [121]], [[120431, 120431], "mapped", [122]], [[120432, 120432], "mapped", [97]], [[120433, 120433], "mapped", [98]], [[120434, 120434], "mapped", [99]], [[120435, 120435], "mapped", [100]], [[120436, 120436], "mapped", [101]], [[120437, 120437], "mapped", [102]], [[120438, 120438], "mapped", [103]], [[120439, 120439], "mapped", [104]], [[120440, 120440], "mapped", [105]], [[120441, 120441], "mapped", [106]], [[120442, 120442], "mapped", [107]], [[120443, 120443], "mapped", [108]], [[120444, 120444], "mapped", [109]], [[120445, 120445], "mapped", [110]], [[120446, 120446], "mapped", [111]], [[120447, 120447], "mapped", [112]], [[120448, 120448], "mapped", [113]], [[120449, 120449], "mapped", [114]], [[120450, 120450], "mapped", [115]], [[120451, 120451], "mapped", [116]], [[120452, 120452], "mapped", [117]], [[120453, 120453], "mapped", [118]], [[120454, 120454], "mapped", [119]], [[120455, 120455], "mapped", [120]], [[120456, 120456], "mapped", [121]], [[120457, 120457], "mapped", [122]], [[120458, 120458], "mapped", [97]], [[120459, 120459], "mapped", [98]], [[120460, 120460], "mapped", [99]], [[120461, 120461], "mapped", [100]], [[120462, 120462], "mapped", [101]], [[120463, 120463], "mapped", [102]], [[120464, 120464], "mapped", [103]], [[120465, 120465], "mapped", [104]], [[120466, 120466], "mapped", [105]], [[120467, 120467], "mapped", [106]], [[120468, 120468], "mapped", [107]], [[120469, 120469], "mapped", [108]], [[120470, 120470], "mapped", [109]], [[120471, 120471], "mapped", [110]], [[120472, 120472], "mapped", [111]], [[120473, 120473], "mapped", [112]], [[120474, 120474], "mapped", [113]], [[120475, 120475], "mapped", [114]], [[120476, 120476], "mapped", [115]], [[120477, 120477], "mapped", [116]], [[120478, 120478], "mapped", [117]], [[120479, 120479], "mapped", [118]], [[120480, 120480], "mapped", [119]], [[120481, 120481], "mapped", [120]], [[120482, 120482], "mapped", [121]], [[120483, 120483], "mapped", [122]], [[120484, 120484], "mapped", [305]], [[120485, 120485], "mapped", [567]], [[120486, 120487], "disallowed"], [[120488, 120488], "mapped", [945]], [[120489, 120489], "mapped", [946]], [[120490, 120490], "mapped", [947]], [[120491, 120491], "mapped", [948]], [[120492, 120492], "mapped", [949]], [[120493, 120493], "mapped", [950]], [[120494, 120494], "mapped", [951]], [[120495, 120495], "mapped", [952]], [[120496, 120496], "mapped", [953]], [[120497, 120497], "mapped", [954]], [[120498, 120498], "mapped", [955]], [[120499, 120499], "mapped", [956]], [[120500, 120500], "mapped", [957]], [[120501, 120501], "mapped", [958]], [[120502, 120502], "mapped", [959]], [[120503, 120503], "mapped", [960]], [[120504, 120504], "mapped", [961]], [[120505, 120505], "mapped", [952]], [[120506, 120506], "mapped", [963]], [[120507, 120507], "mapped", [964]], [[120508, 120508], "mapped", [965]], [[120509, 120509], "mapped", [966]], [[120510, 120510], "mapped", [967]], [[120511, 120511], "mapped", [968]], [[120512, 120512], "mapped", [969]], [[120513, 120513], "mapped", [8711]], [[120514, 120514], "mapped", [945]], [[120515, 120515], "mapped", [946]], [[120516, 120516], "mapped", [947]], [[120517, 120517], "mapped", [948]], [[120518, 120518], "mapped", [949]], [[120519, 120519], "mapped", [950]], [[120520, 120520], "mapped", [951]], [[120521, 120521], "mapped", [952]], [[120522, 120522], "mapped", [953]], [[120523, 120523], "mapped", [954]], [[120524, 120524], "mapped", [955]], [[120525, 120525], "mapped", [956]], [[120526, 120526], "mapped", [957]], [[120527, 120527], "mapped", [958]], [[120528, 120528], "mapped", [959]], [[120529, 120529], "mapped", [960]], [[120530, 120530], "mapped", [961]], [[120531, 120532], "mapped", [963]], [[120533, 120533], "mapped", [964]], [[120534, 120534], "mapped", [965]], [[120535, 120535], "mapped", [966]], [[120536, 120536], "mapped", [967]], [[120537, 120537], "mapped", [968]], [[120538, 120538], "mapped", [969]], [[120539, 120539], "mapped", [8706]], [[120540, 120540], "mapped", [949]], [[120541, 120541], "mapped", [952]], [[120542, 120542], "mapped", [954]], [[120543, 120543], "mapped", [966]], [[120544, 120544], "mapped", [961]], [[120545, 120545], "mapped", [960]], [[120546, 120546], "mapped", [945]], [[120547, 120547], "mapped", [946]], [[120548, 120548], "mapped", [947]], [[120549, 120549], "mapped", [948]], [[120550, 120550], "mapped", [949]], [[120551, 120551], "mapped", [950]], [[120552, 120552], "mapped", [951]], [[120553, 120553], "mapped", [952]], [[120554, 120554], "mapped", [953]], [[120555, 120555], "mapped", [954]], [[120556, 120556], "mapped", [955]], [[120557, 120557], "mapped", [956]], [[120558, 120558], "mapped", [957]], [[120559, 120559], "mapped", [958]], [[120560, 120560], "mapped", [959]], [[120561, 120561], "mapped", [960]], [[120562, 120562], "mapped", [961]], [[120563, 120563], "mapped", [952]], [[120564, 120564], "mapped", [963]], [[120565, 120565], "mapped", [964]], [[120566, 120566], "mapped", [965]], [[120567, 120567], "mapped", [966]], [[120568, 120568], "mapped", [967]], [[120569, 120569], "mapped", [968]], [[120570, 120570], "mapped", [969]], [[120571, 120571], "mapped", [8711]], [[120572, 120572], "mapped", [945]], [[120573, 120573], "mapped", [946]], [[120574, 120574], "mapped", [947]], [[120575, 120575], "mapped", [948]], [[120576, 120576], "mapped", [949]], [[120577, 120577], "mapped", [950]], [[120578, 120578], "mapped", [951]], [[120579, 120579], "mapped", [952]], [[120580, 120580], "mapped", [953]], [[120581, 120581], "mapped", [954]], [[120582, 120582], "mapped", [955]], [[120583, 120583], "mapped", [956]], [[120584, 120584], "mapped", [957]], [[120585, 120585], "mapped", [958]], [[120586, 120586], "mapped", [959]], [[120587, 120587], "mapped", [960]], [[120588, 120588], "mapped", [961]], [[120589, 120590], "mapped", [963]], [[120591, 120591], "mapped", [964]], [[120592, 120592], "mapped", [965]], [[120593, 120593], "mapped", [966]], [[120594, 120594], "mapped", [967]], [[120595, 120595], "mapped", [968]], [[120596, 120596], "mapped", [969]], [[120597, 120597], "mapped", [8706]], [[120598, 120598], "mapped", [949]], [[120599, 120599], "mapped", [952]], [[120600, 120600], "mapped", [954]], [[120601, 120601], "mapped", [966]], [[120602, 120602], "mapped", [961]], [[120603, 120603], "mapped", [960]], [[120604, 120604], "mapped", [945]], [[120605, 120605], "mapped", [946]], [[120606, 120606], "mapped", [947]], [[120607, 120607], "mapped", [948]], [[120608, 120608], "mapped", [949]], [[120609, 120609], "mapped", [950]], [[120610, 120610], "mapped", [951]], [[120611, 120611], "mapped", [952]], [[120612, 120612], "mapped", [953]], [[120613, 120613], "mapped", [954]], [[120614, 120614], "mapped", [955]], [[120615, 120615], "mapped", [956]], [[120616, 120616], "mapped", [957]], [[120617, 120617], "mapped", [958]], [[120618, 120618], "mapped", [959]], [[120619, 120619], "mapped", [960]], [[120620, 120620], "mapped", [961]], [[120621, 120621], "mapped", [952]], [[120622, 120622], "mapped", [963]], [[120623, 120623], "mapped", [964]], [[120624, 120624], "mapped", [965]], [[120625, 120625], "mapped", [966]], [[120626, 120626], "mapped", [967]], [[120627, 120627], "mapped", [968]], [[120628, 120628], "mapped", [969]], [[120629, 120629], "mapped", [8711]], [[120630, 120630], "mapped", [945]], [[120631, 120631], "mapped", [946]], [[120632, 120632], "mapped", [947]], [[120633, 120633], "mapped", [948]], [[120634, 120634], "mapped", [949]], [[120635, 120635], "mapped", [950]], [[120636, 120636], "mapped", [951]], [[120637, 120637], "mapped", [952]], [[120638, 120638], "mapped", [953]], [[120639, 120639], "mapped", [954]], [[120640, 120640], "mapped", [955]], [[120641, 120641], "mapped", [956]], [[120642, 120642], "mapped", [957]], [[120643, 120643], "mapped", [958]], [[120644, 120644], "mapped", [959]], [[120645, 120645], "mapped", [960]], [[120646, 120646], "mapped", [961]], [[120647, 120648], "mapped", [963]], [[120649, 120649], "mapped", [964]], [[120650, 120650], "mapped", [965]], [[120651, 120651], "mapped", [966]], [[120652, 120652], "mapped", [967]], [[120653, 120653], "mapped", [968]], [[120654, 120654], "mapped", [969]], [[120655, 120655], "mapped", [8706]], [[120656, 120656], "mapped", [949]], [[120657, 120657], "mapped", [952]], [[120658, 120658], "mapped", [954]], [[120659, 120659], "mapped", [966]], [[120660, 120660], "mapped", [961]], [[120661, 120661], "mapped", [960]], [[120662, 120662], "mapped", [945]], [[120663, 120663], "mapped", [946]], [[120664, 120664], "mapped", [947]], [[120665, 120665], "mapped", [948]], [[120666, 120666], "mapped", [949]], [[120667, 120667], "mapped", [950]], [[120668, 120668], "mapped", [951]], [[120669, 120669], "mapped", [952]], [[120670, 120670], "mapped", [953]], [[120671, 120671], "mapped", [954]], [[120672, 120672], "mapped", [955]], [[120673, 120673], "mapped", [956]], [[120674, 120674], "mapped", [957]], [[120675, 120675], "mapped", [958]], [[120676, 120676], "mapped", [959]], [[120677, 120677], "mapped", [960]], [[120678, 120678], "mapped", [961]], [[120679, 120679], "mapped", [952]], [[120680, 120680], "mapped", [963]], [[120681, 120681], "mapped", [964]], [[120682, 120682], "mapped", [965]], [[120683, 120683], "mapped", [966]], [[120684, 120684], "mapped", [967]], [[120685, 120685], "mapped", [968]], [[120686, 120686], "mapped", [969]], [[120687, 120687], "mapped", [8711]], [[120688, 120688], "mapped", [945]], [[120689, 120689], "mapped", [946]], [[120690, 120690], "mapped", [947]], [[120691, 120691], "mapped", [948]], [[120692, 120692], "mapped", [949]], [[120693, 120693], "mapped", [950]], [[120694, 120694], "mapped", [951]], [[120695, 120695], "mapped", [952]], [[120696, 120696], "mapped", [953]], [[120697, 120697], "mapped", [954]], [[120698, 120698], "mapped", [955]], [[120699, 120699], "mapped", [956]], [[120700, 120700], "mapped", [957]], [[120701, 120701], "mapped", [958]], [[120702, 120702], "mapped", [959]], [[120703, 120703], "mapped", [960]], [[120704, 120704], "mapped", [961]], [[120705, 120706], "mapped", [963]], [[120707, 120707], "mapped", [964]], [[120708, 120708], "mapped", [965]], [[120709, 120709], "mapped", [966]], [[120710, 120710], "mapped", [967]], [[120711, 120711], "mapped", [968]], [[120712, 120712], "mapped", [969]], [[120713, 120713], "mapped", [8706]], [[120714, 120714], "mapped", [949]], [[120715, 120715], "mapped", [952]], [[120716, 120716], "mapped", [954]], [[120717, 120717], "mapped", [966]], [[120718, 120718], "mapped", [961]], [[120719, 120719], "mapped", [960]], [[120720, 120720], "mapped", [945]], [[120721, 120721], "mapped", [946]], [[120722, 120722], "mapped", [947]], [[120723, 120723], "mapped", [948]], [[120724, 120724], "mapped", [949]], [[120725, 120725], "mapped", [950]], [[120726, 120726], "mapped", [951]], [[120727, 120727], "mapped", [952]], [[120728, 120728], "mapped", [953]], [[120729, 120729], "mapped", [954]], [[120730, 120730], "mapped", [955]], [[120731, 120731], "mapped", [956]], [[120732, 120732], "mapped", [957]], [[120733, 120733], "mapped", [958]], [[120734, 120734], "mapped", [959]], [[120735, 120735], "mapped", [960]], [[120736, 120736], "mapped", [961]], [[120737, 120737], "mapped", [952]], [[120738, 120738], "mapped", [963]], [[120739, 120739], "mapped", [964]], [[120740, 120740], "mapped", [965]], [[120741, 120741], "mapped", [966]], [[120742, 120742], "mapped", [967]], [[120743, 120743], "mapped", [968]], [[120744, 120744], "mapped", [969]], [[120745, 120745], "mapped", [8711]], [[120746, 120746], "mapped", [945]], [[120747, 120747], "mapped", [946]], [[120748, 120748], "mapped", [947]], [[120749, 120749], "mapped", [948]], [[120750, 120750], "mapped", [949]], [[120751, 120751], "mapped", [950]], [[120752, 120752], "mapped", [951]], [[120753, 120753], "mapped", [952]], [[120754, 120754], "mapped", [953]], [[120755, 120755], "mapped", [954]], [[120756, 120756], "mapped", [955]], [[120757, 120757], "mapped", [956]], [[120758, 120758], "mapped", [957]], [[120759, 120759], "mapped", [958]], [[120760, 120760], "mapped", [959]], [[120761, 120761], "mapped", [960]], [[120762, 120762], "mapped", [961]], [[120763, 120764], "mapped", [963]], [[120765, 120765], "mapped", [964]], [[120766, 120766], "mapped", [965]], [[120767, 120767], "mapped", [966]], [[120768, 120768], "mapped", [967]], [[120769, 120769], "mapped", [968]], [[120770, 120770], "mapped", [969]], [[120771, 120771], "mapped", [8706]], [[120772, 120772], "mapped", [949]], [[120773, 120773], "mapped", [952]], [[120774, 120774], "mapped", [954]], [[120775, 120775], "mapped", [966]], [[120776, 120776], "mapped", [961]], [[120777, 120777], "mapped", [960]], [[120778, 120779], "mapped", [989]], [[120780, 120781], "disallowed"], [[120782, 120782], "mapped", [48]], [[120783, 120783], "mapped", [49]], [[120784, 120784], "mapped", [50]], [[120785, 120785], "mapped", [51]], [[120786, 120786], "mapped", [52]], [[120787, 120787], "mapped", [53]], [[120788, 120788], "mapped", [54]], [[120789, 120789], "mapped", [55]], [[120790, 120790], "mapped", [56]], [[120791, 120791], "mapped", [57]], [[120792, 120792], "mapped", [48]], [[120793, 120793], "mapped", [49]], [[120794, 120794], "mapped", [50]], [[120795, 120795], "mapped", [51]], [[120796, 120796], "mapped", [52]], [[120797, 120797], "mapped", [53]], [[120798, 120798], "mapped", [54]], [[120799, 120799], "mapped", [55]], [[120800, 120800], "mapped", [56]], [[120801, 120801], "mapped", [57]], [[120802, 120802], "mapped", [48]], [[120803, 120803], "mapped", [49]], [[120804, 120804], "mapped", [50]], [[120805, 120805], "mapped", [51]], [[120806, 120806], "mapped", [52]], [[120807, 120807], "mapped", [53]], [[120808, 120808], "mapped", [54]], [[120809, 120809], "mapped", [55]], [[120810, 120810], "mapped", [56]], [[120811, 120811], "mapped", [57]], [[120812, 120812], "mapped", [48]], [[120813, 120813], "mapped", [49]], [[120814, 120814], "mapped", [50]], [[120815, 120815], "mapped", [51]], [[120816, 120816], "mapped", [52]], [[120817, 120817], "mapped", [53]], [[120818, 120818], "mapped", [54]], [[120819, 120819], "mapped", [55]], [[120820, 120820], "mapped", [56]], [[120821, 120821], "mapped", [57]], [[120822, 120822], "mapped", [48]], [[120823, 120823], "mapped", [49]], [[120824, 120824], "mapped", [50]], [[120825, 120825], "mapped", [51]], [[120826, 120826], "mapped", [52]], [[120827, 120827], "mapped", [53]], [[120828, 120828], "mapped", [54]], [[120829, 120829], "mapped", [55]], [[120830, 120830], "mapped", [56]], [[120831, 120831], "mapped", [57]], [[120832, 121343], "valid", [], "NV8"], [[121344, 121398], "valid"], [[121399, 121402], "valid", [], "NV8"], [[121403, 121452], "valid"], [[121453, 121460], "valid", [], "NV8"], [[121461, 121461], "valid"], [[121462, 121475], "valid", [], "NV8"], [[121476, 121476], "valid"], [[121477, 121483], "valid", [], "NV8"], [[121484, 121498], "disallowed"], [[121499, 121503], "valid"], [[121504, 121504], "disallowed"], [[121505, 121519], "valid"], [[121520, 124927], "disallowed"], [[124928, 125124], "valid"], [[125125, 125126], "disallowed"], [[125127, 125135], "valid", [], "NV8"], [[125136, 125142], "valid"], [[125143, 126463], "disallowed"], [[126464, 126464], "mapped", [1575]], [[126465, 126465], "mapped", [1576]], [[126466, 126466], "mapped", [1580]], [[126467, 126467], "mapped", [1583]], [[126468, 126468], "disallowed"], [[126469, 126469], "mapped", [1608]], [[126470, 126470], "mapped", [1586]], [[126471, 126471], "mapped", [1581]], [[126472, 126472], "mapped", [1591]], [[126473, 126473], "mapped", [1610]], [[126474, 126474], "mapped", [1603]], [[126475, 126475], "mapped", [1604]], [[126476, 126476], "mapped", [1605]], [[126477, 126477], "mapped", [1606]], [[126478, 126478], "mapped", [1587]], [[126479, 126479], "mapped", [1593]], [[126480, 126480], "mapped", [1601]], [[126481, 126481], "mapped", [1589]], [[126482, 126482], "mapped", [1602]], [[126483, 126483], "mapped", [1585]], [[126484, 126484], "mapped", [1588]], [[126485, 126485], "mapped", [1578]], [[126486, 126486], "mapped", [1579]], [[126487, 126487], "mapped", [1582]], [[126488, 126488], "mapped", [1584]], [[126489, 126489], "mapped", [1590]], [[126490, 126490], "mapped", [1592]], [[126491, 126491], "mapped", [1594]], [[126492, 126492], "mapped", [1646]], [[126493, 126493], "mapped", [1722]], [[126494, 126494], "mapped", [1697]], [[126495, 126495], "mapped", [1647]], [[126496, 126496], "disallowed"], [[126497, 126497], "mapped", [1576]], [[126498, 126498], "mapped", [1580]], [[126499, 126499], "disallowed"], [[126500, 126500], "mapped", [1607]], [[126501, 126502], "disallowed"], [[126503, 126503], "mapped", [1581]], [[126504, 126504], "disallowed"], [[126505, 126505], "mapped", [1610]], [[126506, 126506], "mapped", [1603]], [[126507, 126507], "mapped", [1604]], [[126508, 126508], "mapped", [1605]], [[126509, 126509], "mapped", [1606]], [[126510, 126510], "mapped", [1587]], [[126511, 126511], "mapped", [1593]], [[126512, 126512], "mapped", [1601]], [[126513, 126513], "mapped", [1589]], [[126514, 126514], "mapped", [1602]], [[126515, 126515], "disallowed"], [[126516, 126516], "mapped", [1588]], [[126517, 126517], "mapped", [1578]], [[126518, 126518], "mapped", [1579]], [[126519, 126519], "mapped", [1582]], [[126520, 126520], "disallowed"], [[126521, 126521], "mapped", [1590]], [[126522, 126522], "disallowed"], [[126523, 126523], "mapped", [1594]], [[126524, 126529], "disallowed"], [[126530, 126530], "mapped", [1580]], [[126531, 126534], "disallowed"], [[126535, 126535], "mapped", [1581]], [[126536, 126536], "disallowed"], [[126537, 126537], "mapped", [1610]], [[126538, 126538], "disallowed"], [[126539, 126539], "mapped", [1604]], [[126540, 126540], "disallowed"], [[126541, 126541], "mapped", [1606]], [[126542, 126542], "mapped", [1587]], [[126543, 126543], "mapped", [1593]], [[126544, 126544], "disallowed"], [[126545, 126545], "mapped", [1589]], [[126546, 126546], "mapped", [1602]], [[126547, 126547], "disallowed"], [[126548, 126548], "mapped", [1588]], [[126549, 126550], "disallowed"], [[126551, 126551], "mapped", [1582]], [[126552, 126552], "disallowed"], [[126553, 126553], "mapped", [1590]], [[126554, 126554], "disallowed"], [[126555, 126555], "mapped", [1594]], [[126556, 126556], "disallowed"], [[126557, 126557], "mapped", [1722]], [[126558, 126558], "disallowed"], [[126559, 126559], "mapped", [1647]], [[126560, 126560], "disallowed"], [[126561, 126561], "mapped", [1576]], [[126562, 126562], "mapped", [1580]], [[126563, 126563], "disallowed"], [[126564, 126564], "mapped", [1607]], [[126565, 126566], "disallowed"], [[126567, 126567], "mapped", [1581]], [[126568, 126568], "mapped", [1591]], [[126569, 126569], "mapped", [1610]], [[126570, 126570], "mapped", [1603]], [[126571, 126571], "disallowed"], [[126572, 126572], "mapped", [1605]], [[126573, 126573], "mapped", [1606]], [[126574, 126574], "mapped", [1587]], [[126575, 126575], "mapped", [1593]], [[126576, 126576], "mapped", [1601]], [[126577, 126577], "mapped", [1589]], [[126578, 126578], "mapped", [1602]], [[126579, 126579], "disallowed"], [[126580, 126580], "mapped", [1588]], [[126581, 126581], "mapped", [1578]], [[126582, 126582], "mapped", [1579]], [[126583, 126583], "mapped", [1582]], [[126584, 126584], "disallowed"], [[126585, 126585], "mapped", [1590]], [[126586, 126586], "mapped", [1592]], [[126587, 126587], "mapped", [1594]], [[126588, 126588], "mapped", [1646]], [[126589, 126589], "disallowed"], [[126590, 126590], "mapped", [1697]], [[126591, 126591], "disallowed"], [[126592, 126592], "mapped", [1575]], [[126593, 126593], "mapped", [1576]], [[126594, 126594], "mapped", [1580]], [[126595, 126595], "mapped", [1583]], [[126596, 126596], "mapped", [1607]], [[126597, 126597], "mapped", [1608]], [[126598, 126598], "mapped", [1586]], [[126599, 126599], "mapped", [1581]], [[126600, 126600], "mapped", [1591]], [[126601, 126601], "mapped", [1610]], [[126602, 126602], "disallowed"], [[126603, 126603], "mapped", [1604]], [[126604, 126604], "mapped", [1605]], [[126605, 126605], "mapped", [1606]], [[126606, 126606], "mapped", [1587]], [[126607, 126607], "mapped", [1593]], [[126608, 126608], "mapped", [1601]], [[126609, 126609], "mapped", [1589]], [[126610, 126610], "mapped", [1602]], [[126611, 126611], "mapped", [1585]], [[126612, 126612], "mapped", [1588]], [[126613, 126613], "mapped", [1578]], [[126614, 126614], "mapped", [1579]], [[126615, 126615], "mapped", [1582]], [[126616, 126616], "mapped", [1584]], [[126617, 126617], "mapped", [1590]], [[126618, 126618], "mapped", [1592]], [[126619, 126619], "mapped", [1594]], [[126620, 126624], "disallowed"], [[126625, 126625], "mapped", [1576]], [[126626, 126626], "mapped", [1580]], [[126627, 126627], "mapped", [1583]], [[126628, 126628], "disallowed"], [[126629, 126629], "mapped", [1608]], [[126630, 126630], "mapped", [1586]], [[126631, 126631], "mapped", [1581]], [[126632, 126632], "mapped", [1591]], [[126633, 126633], "mapped", [1610]], [[126634, 126634], "disallowed"], [[126635, 126635], "mapped", [1604]], [[126636, 126636], "mapped", [1605]], [[126637, 126637], "mapped", [1606]], [[126638, 126638], "mapped", [1587]], [[126639, 126639], "mapped", [1593]], [[126640, 126640], "mapped", [1601]], [[126641, 126641], "mapped", [1589]], [[126642, 126642], "mapped", [1602]], [[126643, 126643], "mapped", [1585]], [[126644, 126644], "mapped", [1588]], [[126645, 126645], "mapped", [1578]], [[126646, 126646], "mapped", [1579]], [[126647, 126647], "mapped", [1582]], [[126648, 126648], "mapped", [1584]], [[126649, 126649], "mapped", [1590]], [[126650, 126650], "mapped", [1592]], [[126651, 126651], "mapped", [1594]], [[126652, 126703], "disallowed"], [[126704, 126705], "valid", [], "NV8"], [[126706, 126975], "disallowed"], [[126976, 127019], "valid", [], "NV8"], [[127020, 127023], "disallowed"], [[127024, 127123], "valid", [], "NV8"], [[127124, 127135], "disallowed"], [[127136, 127150], "valid", [], "NV8"], [[127151, 127152], "disallowed"], [[127153, 127166], "valid", [], "NV8"], [[127167, 127167], "valid", [], "NV8"], [[127168, 127168], "disallowed"], [[127169, 127183], "valid", [], "NV8"], [[127184, 127184], "disallowed"], [[127185, 127199], "valid", [], "NV8"], [[127200, 127221], "valid", [], "NV8"], [[127222, 127231], "disallowed"], [[127232, 127232], "disallowed"], [[127233, 127233], "disallowed_STD3_mapped", [48, 44]], [[127234, 127234], "disallowed_STD3_mapped", [49, 44]], [[127235, 127235], "disallowed_STD3_mapped", [50, 44]], [[127236, 127236], "disallowed_STD3_mapped", [51, 44]], [[127237, 127237], "disallowed_STD3_mapped", [52, 44]], [[127238, 127238], "disallowed_STD3_mapped", [53, 44]], [[127239, 127239], "disallowed_STD3_mapped", [54, 44]], [[127240, 127240], "disallowed_STD3_mapped", [55, 44]], [[127241, 127241], "disallowed_STD3_mapped", [56, 44]], [[127242, 127242], "disallowed_STD3_mapped", [57, 44]], [[127243, 127244], "valid", [], "NV8"], [[127245, 127247], "disallowed"], [[127248, 127248], "disallowed_STD3_mapped", [40, 97, 41]], [[127249, 127249], "disallowed_STD3_mapped", [40, 98, 41]], [[127250, 127250], "disallowed_STD3_mapped", [40, 99, 41]], [[127251, 127251], "disallowed_STD3_mapped", [40, 100, 41]], [[127252, 127252], "disallowed_STD3_mapped", [40, 101, 41]], [[127253, 127253], "disallowed_STD3_mapped", [40, 102, 41]], [[127254, 127254], "disallowed_STD3_mapped", [40, 103, 41]], [[127255, 127255], "disallowed_STD3_mapped", [40, 104, 41]], [[127256, 127256], "disallowed_STD3_mapped", [40, 105, 41]], [[127257, 127257], "disallowed_STD3_mapped", [40, 106, 41]], [[127258, 127258], "disallowed_STD3_mapped", [40, 107, 41]], [[127259, 127259], "disallowed_STD3_mapped", [40, 108, 41]], [[127260, 127260], "disallowed_STD3_mapped", [40, 109, 41]], [[127261, 127261], "disallowed_STD3_mapped", [40, 110, 41]], [[127262, 127262], "disallowed_STD3_mapped", [40, 111, 41]], [[127263, 127263], "disallowed_STD3_mapped", [40, 112, 41]], [[127264, 127264], "disallowed_STD3_mapped", [40, 113, 41]], [[127265, 127265], "disallowed_STD3_mapped", [40, 114, 41]], [[127266, 127266], "disallowed_STD3_mapped", [40, 115, 41]], [[127267, 127267], "disallowed_STD3_mapped", [40, 116, 41]], [[127268, 127268], "disallowed_STD3_mapped", [40, 117, 41]], [[127269, 127269], "disallowed_STD3_mapped", [40, 118, 41]], [[127270, 127270], "disallowed_STD3_mapped", [40, 119, 41]], [[127271, 127271], "disallowed_STD3_mapped", [40, 120, 41]], [[127272, 127272], "disallowed_STD3_mapped", [40, 121, 41]], [[127273, 127273], "disallowed_STD3_mapped", [40, 122, 41]], [[127274, 127274], "mapped", [12308, 115, 12309]], [[127275, 127275], "mapped", [99]], [[127276, 127276], "mapped", [114]], [[127277, 127277], "mapped", [99, 100]], [[127278, 127278], "mapped", [119, 122]], [[127279, 127279], "disallowed"], [[127280, 127280], "mapped", [97]], [[127281, 127281], "mapped", [98]], [[127282, 127282], "mapped", [99]], [[127283, 127283], "mapped", [100]], [[127284, 127284], "mapped", [101]], [[127285, 127285], "mapped", [102]], [[127286, 127286], "mapped", [103]], [[127287, 127287], "mapped", [104]], [[127288, 127288], "mapped", [105]], [[127289, 127289], "mapped", [106]], [[127290, 127290], "mapped", [107]], [[127291, 127291], "mapped", [108]], [[127292, 127292], "mapped", [109]], [[127293, 127293], "mapped", [110]], [[127294, 127294], "mapped", [111]], [[127295, 127295], "mapped", [112]], [[127296, 127296], "mapped", [113]], [[127297, 127297], "mapped", [114]], [[127298, 127298], "mapped", [115]], [[127299, 127299], "mapped", [116]], [[127300, 127300], "mapped", [117]], [[127301, 127301], "mapped", [118]], [[127302, 127302], "mapped", [119]], [[127303, 127303], "mapped", [120]], [[127304, 127304], "mapped", [121]], [[127305, 127305], "mapped", [122]], [[127306, 127306], "mapped", [104, 118]], [[127307, 127307], "mapped", [109, 118]], [[127308, 127308], "mapped", [115, 100]], [[127309, 127309], "mapped", [115, 115]], [[127310, 127310], "mapped", [112, 112, 118]], [[127311, 127311], "mapped", [119, 99]], [[127312, 127318], "valid", [], "NV8"], [[127319, 127319], "valid", [], "NV8"], [[127320, 127326], "valid", [], "NV8"], [[127327, 127327], "valid", [], "NV8"], [[127328, 127337], "valid", [], "NV8"], [[127338, 127338], "mapped", [109, 99]], [[127339, 127339], "mapped", [109, 100]], [[127340, 127343], "disallowed"], [[127344, 127352], "valid", [], "NV8"], [[127353, 127353], "valid", [], "NV8"], [[127354, 127354], "valid", [], "NV8"], [[127355, 127356], "valid", [], "NV8"], [[127357, 127358], "valid", [], "NV8"], [[127359, 127359], "valid", [], "NV8"], [[127360, 127369], "valid", [], "NV8"], [[127370, 127373], "valid", [], "NV8"], [[127374, 127375], "valid", [], "NV8"], [[127376, 127376], "mapped", [100, 106]], [[127377, 127386], "valid", [], "NV8"], [[127387, 127461], "disallowed"], [[127462, 127487], "valid", [], "NV8"], [[127488, 127488], "mapped", [12411, 12363]], [[127489, 127489], "mapped", [12467, 12467]], [[127490, 127490], "mapped", [12469]], [[127491, 127503], "disallowed"], [[127504, 127504], "mapped", [25163]], [[127505, 127505], "mapped", [23383]], [[127506, 127506], "mapped", [21452]], [[127507, 127507], "mapped", [12487]], [[127508, 127508], "mapped", [20108]], [[127509, 127509], "mapped", [22810]], [[127510, 127510], "mapped", [35299]], [[127511, 127511], "mapped", [22825]], [[127512, 127512], "mapped", [20132]], [[127513, 127513], "mapped", [26144]], [[127514, 127514], "mapped", [28961]], [[127515, 127515], "mapped", [26009]], [[127516, 127516], "mapped", [21069]], [[127517, 127517], "mapped", [24460]], [[127518, 127518], "mapped", [20877]], [[127519, 127519], "mapped", [26032]], [[127520, 127520], "mapped", [21021]], [[127521, 127521], "mapped", [32066]], [[127522, 127522], "mapped", [29983]], [[127523, 127523], "mapped", [36009]], [[127524, 127524], "mapped", [22768]], [[127525, 127525], "mapped", [21561]], [[127526, 127526], "mapped", [28436]], [[127527, 127527], "mapped", [25237]], [[127528, 127528], "mapped", [25429]], [[127529, 127529], "mapped", [19968]], [[127530, 127530], "mapped", [19977]], [[127531, 127531], "mapped", [36938]], [[127532, 127532], "mapped", [24038]], [[127533, 127533], "mapped", [20013]], [[127534, 127534], "mapped", [21491]], [[127535, 127535], "mapped", [25351]], [[127536, 127536], "mapped", [36208]], [[127537, 127537], "mapped", [25171]], [[127538, 127538], "mapped", [31105]], [[127539, 127539], "mapped", [31354]], [[127540, 127540], "mapped", [21512]], [[127541, 127541], "mapped", [28288]], [[127542, 127542], "mapped", [26377]], [[127543, 127543], "mapped", [26376]], [[127544, 127544], "mapped", [30003]], [[127545, 127545], "mapped", [21106]], [[127546, 127546], "mapped", [21942]], [[127547, 127551], "disallowed"], [[127552, 127552], "mapped", [12308, 26412, 12309]], [[127553, 127553], "mapped", [12308, 19977, 12309]], [[127554, 127554], "mapped", [12308, 20108, 12309]], [[127555, 127555], "mapped", [12308, 23433, 12309]], [[127556, 127556], "mapped", [12308, 28857, 12309]], [[127557, 127557], "mapped", [12308, 25171, 12309]], [[127558, 127558], "mapped", [12308, 30423, 12309]], [[127559, 127559], "mapped", [12308, 21213, 12309]], [[127560, 127560], "mapped", [12308, 25943, 12309]], [[127561, 127567], "disallowed"], [[127568, 127568], "mapped", [24471]], [[127569, 127569], "mapped", [21487]], [[127570, 127743], "disallowed"], [[127744, 127776], "valid", [], "NV8"], [[127777, 127788], "valid", [], "NV8"], [[127789, 127791], "valid", [], "NV8"], [[127792, 127797], "valid", [], "NV8"], [[127798, 127798], "valid", [], "NV8"], [[127799, 127868], "valid", [], "NV8"], [[127869, 127869], "valid", [], "NV8"], [[127870, 127871], "valid", [], "NV8"], [[127872, 127891], "valid", [], "NV8"], [[127892, 127903], "valid", [], "NV8"], [[127904, 127940], "valid", [], "NV8"], [[127941, 127941], "valid", [], "NV8"], [[127942, 127946], "valid", [], "NV8"], [[127947, 127950], "valid", [], "NV8"], [[127951, 127955], "valid", [], "NV8"], [[127956, 127967], "valid", [], "NV8"], [[127968, 127984], "valid", [], "NV8"], [[127985, 127991], "valid", [], "NV8"], [[127992, 127999], "valid", [], "NV8"], [[128e3, 128062], "valid", [], "NV8"], [[128063, 128063], "valid", [], "NV8"], [[128064, 128064], "valid", [], "NV8"], [[128065, 128065], "valid", [], "NV8"], [[128066, 128247], "valid", [], "NV8"], [[128248, 128248], "valid", [], "NV8"], [[128249, 128252], "valid", [], "NV8"], [[128253, 128254], "valid", [], "NV8"], [[128255, 128255], "valid", [], "NV8"], [[128256, 128317], "valid", [], "NV8"], [[128318, 128319], "valid", [], "NV8"], [[128320, 128323], "valid", [], "NV8"], [[128324, 128330], "valid", [], "NV8"], [[128331, 128335], "valid", [], "NV8"], [[128336, 128359], "valid", [], "NV8"], [[128360, 128377], "valid", [], "NV8"], [[128378, 128378], "disallowed"], [[128379, 128419], "valid", [], "NV8"], [[128420, 128420], "disallowed"], [[128421, 128506], "valid", [], "NV8"], [[128507, 128511], "valid", [], "NV8"], [[128512, 128512], "valid", [], "NV8"], [[128513, 128528], "valid", [], "NV8"], [[128529, 128529], "valid", [], "NV8"], [[128530, 128532], "valid", [], "NV8"], [[128533, 128533], "valid", [], "NV8"], [[128534, 128534], "valid", [], "NV8"], [[128535, 128535], "valid", [], "NV8"], [[128536, 128536], "valid", [], "NV8"], [[128537, 128537], "valid", [], "NV8"], [[128538, 128538], "valid", [], "NV8"], [[128539, 128539], "valid", [], "NV8"], [[128540, 128542], "valid", [], "NV8"], [[128543, 128543], "valid", [], "NV8"], [[128544, 128549], "valid", [], "NV8"], [[128550, 128551], "valid", [], "NV8"], [[128552, 128555], "valid", [], "NV8"], [[128556, 128556], "valid", [], "NV8"], [[128557, 128557], "valid", [], "NV8"], [[128558, 128559], "valid", [], "NV8"], [[128560, 128563], "valid", [], "NV8"], [[128564, 128564], "valid", [], "NV8"], [[128565, 128576], "valid", [], "NV8"], [[128577, 128578], "valid", [], "NV8"], [[128579, 128580], "valid", [], "NV8"], [[128581, 128591], "valid", [], "NV8"], [[128592, 128639], "valid", [], "NV8"], [[128640, 128709], "valid", [], "NV8"], [[128710, 128719], "valid", [], "NV8"], [[128720, 128720], "valid", [], "NV8"], [[128721, 128735], "disallowed"], [[128736, 128748], "valid", [], "NV8"], [[128749, 128751], "disallowed"], [[128752, 128755], "valid", [], "NV8"], [[128756, 128767], "disallowed"], [[128768, 128883], "valid", [], "NV8"], [[128884, 128895], "disallowed"], [[128896, 128980], "valid", [], "NV8"], [[128981, 129023], "disallowed"], [[129024, 129035], "valid", [], "NV8"], [[129036, 129039], "disallowed"], [[129040, 129095], "valid", [], "NV8"], [[129096, 129103], "disallowed"], [[129104, 129113], "valid", [], "NV8"], [[129114, 129119], "disallowed"], [[129120, 129159], "valid", [], "NV8"], [[129160, 129167], "disallowed"], [[129168, 129197], "valid", [], "NV8"], [[129198, 129295], "disallowed"], [[129296, 129304], "valid", [], "NV8"], [[129305, 129407], "disallowed"], [[129408, 129412], "valid", [], "NV8"], [[129413, 129471], "disallowed"], [[129472, 129472], "valid", [], "NV8"], [[129473, 131069], "disallowed"], [[131070, 131071], "disallowed"], [[131072, 173782], "valid"], [[173783, 173823], "disallowed"], [[173824, 177972], "valid"], [[177973, 177983], "disallowed"], [[177984, 178205], "valid"], [[178206, 178207], "disallowed"], [[178208, 183969], "valid"], [[183970, 194559], "disallowed"], [[194560, 194560], "mapped", [20029]], [[194561, 194561], "mapped", [20024]], [[194562, 194562], "mapped", [20033]], [[194563, 194563], "mapped", [131362]], [[194564, 194564], "mapped", [20320]], [[194565, 194565], "mapped", [20398]], [[194566, 194566], "mapped", [20411]], [[194567, 194567], "mapped", [20482]], [[194568, 194568], "mapped", [20602]], [[194569, 194569], "mapped", [20633]], [[194570, 194570], "mapped", [20711]], [[194571, 194571], "mapped", [20687]], [[194572, 194572], "mapped", [13470]], [[194573, 194573], "mapped", [132666]], [[194574, 194574], "mapped", [20813]], [[194575, 194575], "mapped", [20820]], [[194576, 194576], "mapped", [20836]], [[194577, 194577], "mapped", [20855]], [[194578, 194578], "mapped", [132380]], [[194579, 194579], "mapped", [13497]], [[194580, 194580], "mapped", [20839]], [[194581, 194581], "mapped", [20877]], [[194582, 194582], "mapped", [132427]], [[194583, 194583], "mapped", [20887]], [[194584, 194584], "mapped", [20900]], [[194585, 194585], "mapped", [20172]], [[194586, 194586], "mapped", [20908]], [[194587, 194587], "mapped", [20917]], [[194588, 194588], "mapped", [168415]], [[194589, 194589], "mapped", [20981]], [[194590, 194590], "mapped", [20995]], [[194591, 194591], "mapped", [13535]], [[194592, 194592], "mapped", [21051]], [[194593, 194593], "mapped", [21062]], [[194594, 194594], "mapped", [21106]], [[194595, 194595], "mapped", [21111]], [[194596, 194596], "mapped", [13589]], [[194597, 194597], "mapped", [21191]], [[194598, 194598], "mapped", [21193]], [[194599, 194599], "mapped", [21220]], [[194600, 194600], "mapped", [21242]], [[194601, 194601], "mapped", [21253]], [[194602, 194602], "mapped", [21254]], [[194603, 194603], "mapped", [21271]], [[194604, 194604], "mapped", [21321]], [[194605, 194605], "mapped", [21329]], [[194606, 194606], "mapped", [21338]], [[194607, 194607], "mapped", [21363]], [[194608, 194608], "mapped", [21373]], [[194609, 194611], "mapped", [21375]], [[194612, 194612], "mapped", [133676]], [[194613, 194613], "mapped", [28784]], [[194614, 194614], "mapped", [21450]], [[194615, 194615], "mapped", [21471]], [[194616, 194616], "mapped", [133987]], [[194617, 194617], "mapped", [21483]], [[194618, 194618], "mapped", [21489]], [[194619, 194619], "mapped", [21510]], [[194620, 194620], "mapped", [21662]], [[194621, 194621], "mapped", [21560]], [[194622, 194622], "mapped", [21576]], [[194623, 194623], "mapped", [21608]], [[194624, 194624], "mapped", [21666]], [[194625, 194625], "mapped", [21750]], [[194626, 194626], "mapped", [21776]], [[194627, 194627], "mapped", [21843]], [[194628, 194628], "mapped", [21859]], [[194629, 194630], "mapped", [21892]], [[194631, 194631], "mapped", [21913]], [[194632, 194632], "mapped", [21931]], [[194633, 194633], "mapped", [21939]], [[194634, 194634], "mapped", [21954]], [[194635, 194635], "mapped", [22294]], [[194636, 194636], "mapped", [22022]], [[194637, 194637], "mapped", [22295]], [[194638, 194638], "mapped", [22097]], [[194639, 194639], "mapped", [22132]], [[194640, 194640], "mapped", [20999]], [[194641, 194641], "mapped", [22766]], [[194642, 194642], "mapped", [22478]], [[194643, 194643], "mapped", [22516]], [[194644, 194644], "mapped", [22541]], [[194645, 194645], "mapped", [22411]], [[194646, 194646], "mapped", [22578]], [[194647, 194647], "mapped", [22577]], [[194648, 194648], "mapped", [22700]], [[194649, 194649], "mapped", [136420]], [[194650, 194650], "mapped", [22770]], [[194651, 194651], "mapped", [22775]], [[194652, 194652], "mapped", [22790]], [[194653, 194653], "mapped", [22810]], [[194654, 194654], "mapped", [22818]], [[194655, 194655], "mapped", [22882]], [[194656, 194656], "mapped", [136872]], [[194657, 194657], "mapped", [136938]], [[194658, 194658], "mapped", [23020]], [[194659, 194659], "mapped", [23067]], [[194660, 194660], "mapped", [23079]], [[194661, 194661], "mapped", [23e3]], [[194662, 194662], "mapped", [23142]], [[194663, 194663], "mapped", [14062]], [[194664, 194664], "disallowed"], [[194665, 194665], "mapped", [23304]], [[194666, 194667], "mapped", [23358]], [[194668, 194668], "mapped", [137672]], [[194669, 194669], "mapped", [23491]], [[194670, 194670], "mapped", [23512]], [[194671, 194671], "mapped", [23527]], [[194672, 194672], "mapped", [23539]], [[194673, 194673], "mapped", [138008]], [[194674, 194674], "mapped", [23551]], [[194675, 194675], "mapped", [23558]], [[194676, 194676], "disallowed"], [[194677, 194677], "mapped", [23586]], [[194678, 194678], "mapped", [14209]], [[194679, 194679], "mapped", [23648]], [[194680, 194680], "mapped", [23662]], [[194681, 194681], "mapped", [23744]], [[194682, 194682], "mapped", [23693]], [[194683, 194683], "mapped", [138724]], [[194684, 194684], "mapped", [23875]], [[194685, 194685], "mapped", [138726]], [[194686, 194686], "mapped", [23918]], [[194687, 194687], "mapped", [23915]], [[194688, 194688], "mapped", [23932]], [[194689, 194689], "mapped", [24033]], [[194690, 194690], "mapped", [24034]], [[194691, 194691], "mapped", [14383]], [[194692, 194692], "mapped", [24061]], [[194693, 194693], "mapped", [24104]], [[194694, 194694], "mapped", [24125]], [[194695, 194695], "mapped", [24169]], [[194696, 194696], "mapped", [14434]], [[194697, 194697], "mapped", [139651]], [[194698, 194698], "mapped", [14460]], [[194699, 194699], "mapped", [24240]], [[194700, 194700], "mapped", [24243]], [[194701, 194701], "mapped", [24246]], [[194702, 194702], "mapped", [24266]], [[194703, 194703], "mapped", [172946]], [[194704, 194704], "mapped", [24318]], [[194705, 194706], "mapped", [140081]], [[194707, 194707], "mapped", [33281]], [[194708, 194709], "mapped", [24354]], [[194710, 194710], "mapped", [14535]], [[194711, 194711], "mapped", [144056]], [[194712, 194712], "mapped", [156122]], [[194713, 194713], "mapped", [24418]], [[194714, 194714], "mapped", [24427]], [[194715, 194715], "mapped", [14563]], [[194716, 194716], "mapped", [24474]], [[194717, 194717], "mapped", [24525]], [[194718, 194718], "mapped", [24535]], [[194719, 194719], "mapped", [24569]], [[194720, 194720], "mapped", [24705]], [[194721, 194721], "mapped", [14650]], [[194722, 194722], "mapped", [14620]], [[194723, 194723], "mapped", [24724]], [[194724, 194724], "mapped", [141012]], [[194725, 194725], "mapped", [24775]], [[194726, 194726], "mapped", [24904]], [[194727, 194727], "mapped", [24908]], [[194728, 194728], "mapped", [24910]], [[194729, 194729], "mapped", [24908]], [[194730, 194730], "mapped", [24954]], [[194731, 194731], "mapped", [24974]], [[194732, 194732], "mapped", [25010]], [[194733, 194733], "mapped", [24996]], [[194734, 194734], "mapped", [25007]], [[194735, 194735], "mapped", [25054]], [[194736, 194736], "mapped", [25074]], [[194737, 194737], "mapped", [25078]], [[194738, 194738], "mapped", [25104]], [[194739, 194739], "mapped", [25115]], [[194740, 194740], "mapped", [25181]], [[194741, 194741], "mapped", [25265]], [[194742, 194742], "mapped", [25300]], [[194743, 194743], "mapped", [25424]], [[194744, 194744], "mapped", [142092]], [[194745, 194745], "mapped", [25405]], [[194746, 194746], "mapped", [25340]], [[194747, 194747], "mapped", [25448]], [[194748, 194748], "mapped", [25475]], [[194749, 194749], "mapped", [25572]], [[194750, 194750], "mapped", [142321]], [[194751, 194751], "mapped", [25634]], [[194752, 194752], "mapped", [25541]], [[194753, 194753], "mapped", [25513]], [[194754, 194754], "mapped", [14894]], [[194755, 194755], "mapped", [25705]], [[194756, 194756], "mapped", [25726]], [[194757, 194757], "mapped", [25757]], [[194758, 194758], "mapped", [25719]], [[194759, 194759], "mapped", [14956]], [[194760, 194760], "mapped", [25935]], [[194761, 194761], "mapped", [25964]], [[194762, 194762], "mapped", [143370]], [[194763, 194763], "mapped", [26083]], [[194764, 194764], "mapped", [26360]], [[194765, 194765], "mapped", [26185]], [[194766, 194766], "mapped", [15129]], [[194767, 194767], "mapped", [26257]], [[194768, 194768], "mapped", [15112]], [[194769, 194769], "mapped", [15076]], [[194770, 194770], "mapped", [20882]], [[194771, 194771], "mapped", [20885]], [[194772, 194772], "mapped", [26368]], [[194773, 194773], "mapped", [26268]], [[194774, 194774], "mapped", [32941]], [[194775, 194775], "mapped", [17369]], [[194776, 194776], "mapped", [26391]], [[194777, 194777], "mapped", [26395]], [[194778, 194778], "mapped", [26401]], [[194779, 194779], "mapped", [26462]], [[194780, 194780], "mapped", [26451]], [[194781, 194781], "mapped", [144323]], [[194782, 194782], "mapped", [15177]], [[194783, 194783], "mapped", [26618]], [[194784, 194784], "mapped", [26501]], [[194785, 194785], "mapped", [26706]], [[194786, 194786], "mapped", [26757]], [[194787, 194787], "mapped", [144493]], [[194788, 194788], "mapped", [26766]], [[194789, 194789], "mapped", [26655]], [[194790, 194790], "mapped", [26900]], [[194791, 194791], "mapped", [15261]], [[194792, 194792], "mapped", [26946]], [[194793, 194793], "mapped", [27043]], [[194794, 194794], "mapped", [27114]], [[194795, 194795], "mapped", [27304]], [[194796, 194796], "mapped", [145059]], [[194797, 194797], "mapped", [27355]], [[194798, 194798], "mapped", [15384]], [[194799, 194799], "mapped", [27425]], [[194800, 194800], "mapped", [145575]], [[194801, 194801], "mapped", [27476]], [[194802, 194802], "mapped", [15438]], [[194803, 194803], "mapped", [27506]], [[194804, 194804], "mapped", [27551]], [[194805, 194805], "mapped", [27578]], [[194806, 194806], "mapped", [27579]], [[194807, 194807], "mapped", [146061]], [[194808, 194808], "mapped", [138507]], [[194809, 194809], "mapped", [146170]], [[194810, 194810], "mapped", [27726]], [[194811, 194811], "mapped", [146620]], [[194812, 194812], "mapped", [27839]], [[194813, 194813], "mapped", [27853]], [[194814, 194814], "mapped", [27751]], [[194815, 194815], "mapped", [27926]], [[194816, 194816], "mapped", [27966]], [[194817, 194817], "mapped", [28023]], [[194818, 194818], "mapped", [27969]], [[194819, 194819], "mapped", [28009]], [[194820, 194820], "mapped", [28024]], [[194821, 194821], "mapped", [28037]], [[194822, 194822], "mapped", [146718]], [[194823, 194823], "mapped", [27956]], [[194824, 194824], "mapped", [28207]], [[194825, 194825], "mapped", [28270]], [[194826, 194826], "mapped", [15667]], [[194827, 194827], "mapped", [28363]], [[194828, 194828], "mapped", [28359]], [[194829, 194829], "mapped", [147153]], [[194830, 194830], "mapped", [28153]], [[194831, 194831], "mapped", [28526]], [[194832, 194832], "mapped", [147294]], [[194833, 194833], "mapped", [147342]], [[194834, 194834], "mapped", [28614]], [[194835, 194835], "mapped", [28729]], [[194836, 194836], "mapped", [28702]], [[194837, 194837], "mapped", [28699]], [[194838, 194838], "mapped", [15766]], [[194839, 194839], "mapped", [28746]], [[194840, 194840], "mapped", [28797]], [[194841, 194841], "mapped", [28791]], [[194842, 194842], "mapped", [28845]], [[194843, 194843], "mapped", [132389]], [[194844, 194844], "mapped", [28997]], [[194845, 194845], "mapped", [148067]], [[194846, 194846], "mapped", [29084]], [[194847, 194847], "disallowed"], [[194848, 194848], "mapped", [29224]], [[194849, 194849], "mapped", [29237]], [[194850, 194850], "mapped", [29264]], [[194851, 194851], "mapped", [149e3]], [[194852, 194852], "mapped", [29312]], [[194853, 194853], "mapped", [29333]], [[194854, 194854], "mapped", [149301]], [[194855, 194855], "mapped", [149524]], [[194856, 194856], "mapped", [29562]], [[194857, 194857], "mapped", [29579]], [[194858, 194858], "mapped", [16044]], [[194859, 194859], "mapped", [29605]], [[194860, 194861], "mapped", [16056]], [[194862, 194862], "mapped", [29767]], [[194863, 194863], "mapped", [29788]], [[194864, 194864], "mapped", [29809]], [[194865, 194865], "mapped", [29829]], [[194866, 194866], "mapped", [29898]], [[194867, 194867], "mapped", [16155]], [[194868, 194868], "mapped", [29988]], [[194869, 194869], "mapped", [150582]], [[194870, 194870], "mapped", [30014]], [[194871, 194871], "mapped", [150674]], [[194872, 194872], "mapped", [30064]], [[194873, 194873], "mapped", [139679]], [[194874, 194874], "mapped", [30224]], [[194875, 194875], "mapped", [151457]], [[194876, 194876], "mapped", [151480]], [[194877, 194877], "mapped", [151620]], [[194878, 194878], "mapped", [16380]], [[194879, 194879], "mapped", [16392]], [[194880, 194880], "mapped", [30452]], [[194881, 194881], "mapped", [151795]], [[194882, 194882], "mapped", [151794]], [[194883, 194883], "mapped", [151833]], [[194884, 194884], "mapped", [151859]], [[194885, 194885], "mapped", [30494]], [[194886, 194887], "mapped", [30495]], [[194888, 194888], "mapped", [30538]], [[194889, 194889], "mapped", [16441]], [[194890, 194890], "mapped", [30603]], [[194891, 194891], "mapped", [16454]], [[194892, 194892], "mapped", [16534]], [[194893, 194893], "mapped", [152605]], [[194894, 194894], "mapped", [30798]], [[194895, 194895], "mapped", [30860]], [[194896, 194896], "mapped", [30924]], [[194897, 194897], "mapped", [16611]], [[194898, 194898], "mapped", [153126]], [[194899, 194899], "mapped", [31062]], [[194900, 194900], "mapped", [153242]], [[194901, 194901], "mapped", [153285]], [[194902, 194902], "mapped", [31119]], [[194903, 194903], "mapped", [31211]], [[194904, 194904], "mapped", [16687]], [[194905, 194905], "mapped", [31296]], [[194906, 194906], "mapped", [31306]], [[194907, 194907], "mapped", [31311]], [[194908, 194908], "mapped", [153980]], [[194909, 194910], "mapped", [154279]], [[194911, 194911], "disallowed"], [[194912, 194912], "mapped", [16898]], [[194913, 194913], "mapped", [154539]], [[194914, 194914], "mapped", [31686]], [[194915, 194915], "mapped", [31689]], [[194916, 194916], "mapped", [16935]], [[194917, 194917], "mapped", [154752]], [[194918, 194918], "mapped", [31954]], [[194919, 194919], "mapped", [17056]], [[194920, 194920], "mapped", [31976]], [[194921, 194921], "mapped", [31971]], [[194922, 194922], "mapped", [32e3]], [[194923, 194923], "mapped", [155526]], [[194924, 194924], "mapped", [32099]], [[194925, 194925], "mapped", [17153]], [[194926, 194926], "mapped", [32199]], [[194927, 194927], "mapped", [32258]], [[194928, 194928], "mapped", [32325]], [[194929, 194929], "mapped", [17204]], [[194930, 194930], "mapped", [156200]], [[194931, 194931], "mapped", [156231]], [[194932, 194932], "mapped", [17241]], [[194933, 194933], "mapped", [156377]], [[194934, 194934], "mapped", [32634]], [[194935, 194935], "mapped", [156478]], [[194936, 194936], "mapped", [32661]], [[194937, 194937], "mapped", [32762]], [[194938, 194938], "mapped", [32773]], [[194939, 194939], "mapped", [156890]], [[194940, 194940], "mapped", [156963]], [[194941, 194941], "mapped", [32864]], [[194942, 194942], "mapped", [157096]], [[194943, 194943], "mapped", [32880]], [[194944, 194944], "mapped", [144223]], [[194945, 194945], "mapped", [17365]], [[194946, 194946], "mapped", [32946]], [[194947, 194947], "mapped", [33027]], [[194948, 194948], "mapped", [17419]], [[194949, 194949], "mapped", [33086]], [[194950, 194950], "mapped", [23221]], [[194951, 194951], "mapped", [157607]], [[194952, 194952], "mapped", [157621]], [[194953, 194953], "mapped", [144275]], [[194954, 194954], "mapped", [144284]], [[194955, 194955], "mapped", [33281]], [[194956, 194956], "mapped", [33284]], [[194957, 194957], "mapped", [36766]], [[194958, 194958], "mapped", [17515]], [[194959, 194959], "mapped", [33425]], [[194960, 194960], "mapped", [33419]], [[194961, 194961], "mapped", [33437]], [[194962, 194962], "mapped", [21171]], [[194963, 194963], "mapped", [33457]], [[194964, 194964], "mapped", [33459]], [[194965, 194965], "mapped", [33469]], [[194966, 194966], "mapped", [33510]], [[194967, 194967], "mapped", [158524]], [[194968, 194968], "mapped", [33509]], [[194969, 194969], "mapped", [33565]], [[194970, 194970], "mapped", [33635]], [[194971, 194971], "mapped", [33709]], [[194972, 194972], "mapped", [33571]], [[194973, 194973], "mapped", [33725]], [[194974, 194974], "mapped", [33767]], [[194975, 194975], "mapped", [33879]], [[194976, 194976], "mapped", [33619]], [[194977, 194977], "mapped", [33738]], [[194978, 194978], "mapped", [33740]], [[194979, 194979], "mapped", [33756]], [[194980, 194980], "mapped", [158774]], [[194981, 194981], "mapped", [159083]], [[194982, 194982], "mapped", [158933]], [[194983, 194983], "mapped", [17707]], [[194984, 194984], "mapped", [34033]], [[194985, 194985], "mapped", [34035]], [[194986, 194986], "mapped", [34070]], [[194987, 194987], "mapped", [160714]], [[194988, 194988], "mapped", [34148]], [[194989, 194989], "mapped", [159532]], [[194990, 194990], "mapped", [17757]], [[194991, 194991], "mapped", [17761]], [[194992, 194992], "mapped", [159665]], [[194993, 194993], "mapped", [159954]], [[194994, 194994], "mapped", [17771]], [[194995, 194995], "mapped", [34384]], [[194996, 194996], "mapped", [34396]], [[194997, 194997], "mapped", [34407]], [[194998, 194998], "mapped", [34409]], [[194999, 194999], "mapped", [34473]], [[195e3, 195e3], "mapped", [34440]], [[195001, 195001], "mapped", [34574]], [[195002, 195002], "mapped", [34530]], [[195003, 195003], "mapped", [34681]], [[195004, 195004], "mapped", [34600]], [[195005, 195005], "mapped", [34667]], [[195006, 195006], "mapped", [34694]], [[195007, 195007], "disallowed"], [[195008, 195008], "mapped", [34785]], [[195009, 195009], "mapped", [34817]], [[195010, 195010], "mapped", [17913]], [[195011, 195011], "mapped", [34912]], [[195012, 195012], "mapped", [34915]], [[195013, 195013], "mapped", [161383]], [[195014, 195014], "mapped", [35031]], [[195015, 195015], "mapped", [35038]], [[195016, 195016], "mapped", [17973]], [[195017, 195017], "mapped", [35066]], [[195018, 195018], "mapped", [13499]], [[195019, 195019], "mapped", [161966]], [[195020, 195020], "mapped", [162150]], [[195021, 195021], "mapped", [18110]], [[195022, 195022], "mapped", [18119]], [[195023, 195023], "mapped", [35488]], [[195024, 195024], "mapped", [35565]], [[195025, 195025], "mapped", [35722]], [[195026, 195026], "mapped", [35925]], [[195027, 195027], "mapped", [162984]], [[195028, 195028], "mapped", [36011]], [[195029, 195029], "mapped", [36033]], [[195030, 195030], "mapped", [36123]], [[195031, 195031], "mapped", [36215]], [[195032, 195032], "mapped", [163631]], [[195033, 195033], "mapped", [133124]], [[195034, 195034], "mapped", [36299]], [[195035, 195035], "mapped", [36284]], [[195036, 195036], "mapped", [36336]], [[195037, 195037], "mapped", [133342]], [[195038, 195038], "mapped", [36564]], [[195039, 195039], "mapped", [36664]], [[195040, 195040], "mapped", [165330]], [[195041, 195041], "mapped", [165357]], [[195042, 195042], "mapped", [37012]], [[195043, 195043], "mapped", [37105]], [[195044, 195044], "mapped", [37137]], [[195045, 195045], "mapped", [165678]], [[195046, 195046], "mapped", [37147]], [[195047, 195047], "mapped", [37432]], [[195048, 195048], "mapped", [37591]], [[195049, 195049], "mapped", [37592]], [[195050, 195050], "mapped", [37500]], [[195051, 195051], "mapped", [37881]], [[195052, 195052], "mapped", [37909]], [[195053, 195053], "mapped", [166906]], [[195054, 195054], "mapped", [38283]], [[195055, 195055], "mapped", [18837]], [[195056, 195056], "mapped", [38327]], [[195057, 195057], "mapped", [167287]], [[195058, 195058], "mapped", [18918]], [[195059, 195059], "mapped", [38595]], [[195060, 195060], "mapped", [23986]], [[195061, 195061], "mapped", [38691]], [[195062, 195062], "mapped", [168261]], [[195063, 195063], "mapped", [168474]], [[195064, 195064], "mapped", [19054]], [[195065, 195065], "mapped", [19062]], [[195066, 195066], "mapped", [38880]], [[195067, 195067], "mapped", [168970]], [[195068, 195068], "mapped", [19122]], [[195069, 195069], "mapped", [169110]], [[195070, 195071], "mapped", [38923]], [[195072, 195072], "mapped", [38953]], [[195073, 195073], "mapped", [169398]], [[195074, 195074], "mapped", [39138]], [[195075, 195075], "mapped", [19251]], [[195076, 195076], "mapped", [39209]], [[195077, 195077], "mapped", [39335]], [[195078, 195078], "mapped", [39362]], [[195079, 195079], "mapped", [39422]], [[195080, 195080], "mapped", [19406]], [[195081, 195081], "mapped", [170800]], [[195082, 195082], "mapped", [39698]], [[195083, 195083], "mapped", [4e4]], [[195084, 195084], "mapped", [40189]], [[195085, 195085], "mapped", [19662]], [[195086, 195086], "mapped", [19693]], [[195087, 195087], "mapped", [40295]], [[195088, 195088], "mapped", [172238]], [[195089, 195089], "mapped", [19704]], [[195090, 195090], "mapped", [172293]], [[195091, 195091], "mapped", [172558]], [[195092, 195092], "mapped", [172689]], [[195093, 195093], "mapped", [40635]], [[195094, 195094], "mapped", [19798]], [[195095, 195095], "mapped", [40697]], [[195096, 195096], "mapped", [40702]], [[195097, 195097], "mapped", [40709]], [[195098, 195098], "mapped", [40719]], [[195099, 195099], "mapped", [40726]], [[195100, 195100], "mapped", [40763]], [[195101, 195101], "mapped", [173568]], [[195102, 196605], "disallowed"], [[196606, 196607], "disallowed"], [[196608, 262141], "disallowed"], [[262142, 262143], "disallowed"], [[262144, 327677], "disallowed"], [[327678, 327679], "disallowed"], [[327680, 393213], "disallowed"], [[393214, 393215], "disallowed"], [[393216, 458749], "disallowed"], [[458750, 458751], "disallowed"], [[458752, 524285], "disallowed"], [[524286, 524287], "disallowed"], [[524288, 589821], "disallowed"], [[589822, 589823], "disallowed"], [[589824, 655357], "disallowed"], [[655358, 655359], "disallowed"], [[655360, 720893], "disallowed"], [[720894, 720895], "disallowed"], [[720896, 786429], "disallowed"], [[786430, 786431], "disallowed"], [[786432, 851965], "disallowed"], [[851966, 851967], "disallowed"], [[851968, 917501], "disallowed"], [[917502, 917503], "disallowed"], [[917504, 917504], "disallowed"], [[917505, 917505], "disallowed"], [[917506, 917535], "disallowed"], [[917536, 917631], "disallowed"], [[917632, 917759], "disallowed"], [[917760, 917999], "ignored"], [[918e3, 983037], "disallowed"], [[983038, 983039], "disallowed"], [[983040, 1048573], "disallowed"], [[1048574, 1048575], "disallowed"], [[1048576, 1114109], "disallowed"], [[1114110, 1114111], "disallowed"]];
  }
});

// node_modules/node-fetch/node_modules/tr46/index.js
var require_tr462 = __commonJS({
  "node_modules/node-fetch/node_modules/tr46/index.js"(exports2, module2) {
    "use strict";
    var punycode = require("punycode"), mappingTable = require_mappingTable2(), PROCESSING_OPTIONS = {
      TRANSITIONAL: 0,
      NONTRANSITIONAL: 1
    };
    function normalize2(str2) {
      return str2.split("\0").map(function(s2) {
        return s2.normalize("NFC");
      }).join("\0");
    }
    function findStatus(val) {
      for (var start = 0, end = mappingTable.length - 1; start <= end; ) {
        var mid = Math.floor((start + end) / 2), target = mappingTable[mid];
        if (target[0][0] <= val && target[0][1] >= val)
          return target;
        target[0][0] > val ? end = mid - 1 : start = mid + 1;
      }
      return null;
    }
    var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
    function countSymbols(string3) {
      return string3.replace(regexAstralSymbols, "_").length;
    }
    function mapChars(domain_name, useSTD3, processing_option) {
      for (var hasError = !1, processed = "", len = countSymbols(domain_name), i = 0; i < len; ++i) {
        var codePoint = domain_name.codePointAt(i), status = findStatus(codePoint);
        switch (status[1]) {
          case "disallowed":
            hasError = !0, processed += String.fromCodePoint(codePoint);
            break;
          case "ignored":
            break;
          case "mapped":
            processed += String.fromCodePoint.apply(String, status[2]);
            break;
          case "deviation":
            processing_option === PROCESSING_OPTIONS.TRANSITIONAL ? processed += String.fromCodePoint.apply(String, status[2]) : processed += String.fromCodePoint(codePoint);
            break;
          case "valid":
            processed += String.fromCodePoint(codePoint);
            break;
          case "disallowed_STD3_mapped":
            useSTD3 ? (hasError = !0, processed += String.fromCodePoint(codePoint)) : processed += String.fromCodePoint.apply(String, status[2]);
            break;
          case "disallowed_STD3_valid":
            useSTD3 && (hasError = !0), processed += String.fromCodePoint(codePoint);
            break;
        }
      }
      return {
        string: processed,
        error: hasError
      };
    }
    var combiningMarksRegex = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;
    function validateLabel(label, processing_option) {
      label.substr(0, 4) === "xn--" && (label = punycode.toUnicode(label), processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL);
      var error = !1;
      (normalize2(label) !== label || label[3] === "-" && label[4] === "-" || label[0] === "-" || label[label.length - 1] === "-" || label.indexOf(".") !== -1 || label.search(combiningMarksRegex) === 0) && (error = !0);
      for (var len = countSymbols(label), i = 0; i < len; ++i) {
        var status = findStatus(label.codePointAt(i));
        if (processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== "valid" || processing === PROCESSING_OPTIONS.NONTRANSITIONAL && status[1] !== "valid" && status[1] !== "deviation") {
          error = !0;
          break;
        }
      }
      return {
        label,
        error
      };
    }
    function processing(domain_name, useSTD3, processing_option) {
      var result = mapChars(domain_name, useSTD3, processing_option);
      result.string = normalize2(result.string);
      for (var labels = result.string.split("."), i = 0; i < labels.length; ++i)
        try {
          var validation = validateLabel(labels[i]);
          labels[i] = validation.label, result.error = result.error || validation.error;
        } catch {
          result.error = !0;
        }
      return {
        string: labels.join("."),
        error: result.error
      };
    }
    module2.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {
      var result = processing(domain_name, useSTD3, processing_option), labels = result.string.split(".");
      if (labels = labels.map(function(l) {
        try {
          return punycode.toASCII(l);
        } catch {
          return result.error = !0, l;
        }
      }), verifyDnsLength) {
        var total = labels.slice(0, labels.length - 1).join(".").length;
        (total.length > 253 || total.length === 0) && (result.error = !0);
        for (var i = 0; i < labels.length; ++i)
          if (labels.length > 63 || labels.length === 0) {
            result.error = !0;
            break;
          }
      }
      return result.error ? null : labels.join(".");
    };
    module2.exports.toUnicode = function(domain_name, useSTD3) {
      var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);
      return {
        domain: result.string,
        error: result.error
      };
    };
    module2.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;
  }
});

// node_modules/node-fetch/node_modules/whatwg-url/lib/url-state-machine.js
var require_url_state_machine2 = __commonJS({
  "node_modules/node-fetch/node_modules/whatwg-url/lib/url-state-machine.js"(exports2, module2) {
    "use strict";
    var punycode = require("punycode"), tr46 = require_tr462(), specialSchemes = {
      ftp: 21,
      file: null,
      gopher: 70,
      http: 80,
      https: 443,
      ws: 80,
      wss: 443
    }, failure = Symbol("failure");
    function countSymbols(str2) {
      return punycode.ucs2.decode(str2).length;
    }
    function at(input, idx) {
      let c = input[idx];
      return isNaN(c) ? void 0 : String.fromCodePoint(c);
    }
    function isASCIIDigit(c) {
      return c >= 48 && c <= 57;
    }
    function isASCIIAlpha(c) {
      return c >= 65 && c <= 90 || c >= 97 && c <= 122;
    }
    function isASCIIAlphanumeric(c) {
      return isASCIIAlpha(c) || isASCIIDigit(c);
    }
    function isASCIIHex(c) {
      return isASCIIDigit(c) || c >= 65 && c <= 70 || c >= 97 && c <= 102;
    }
    function isSingleDot(buffer2) {
      return buffer2 === "." || buffer2.toLowerCase() === "%2e";
    }
    function isDoubleDot(buffer2) {
      return buffer2 = buffer2.toLowerCase(), buffer2 === ".." || buffer2 === "%2e." || buffer2 === ".%2e" || buffer2 === "%2e%2e";
    }
    function isWindowsDriveLetterCodePoints(cp1, cp2) {
      return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);
    }
    function isWindowsDriveLetterString(string3) {
      return string3.length === 2 && isASCIIAlpha(string3.codePointAt(0)) && (string3[1] === ":" || string3[1] === "|");
    }
    function isNormalizedWindowsDriveLetterString(string3) {
      return string3.length === 2 && isASCIIAlpha(string3.codePointAt(0)) && string3[1] === ":";
    }
    function containsForbiddenHostCodePoint(string3) {
      return string3.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
    }
    function containsForbiddenHostCodePointExcludingPercent(string3) {
      return string3.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
    }
    function isSpecialScheme(scheme) {
      return specialSchemes[scheme] !== void 0;
    }
    function isSpecial(url) {
      return isSpecialScheme(url.scheme);
    }
    function defaultPort(scheme) {
      return specialSchemes[scheme];
    }
    function percentEncode(c) {
      let hex = c.toString(16).toUpperCase();
      return hex.length === 1 && (hex = "0" + hex), "%" + hex;
    }
    function utf8PercentEncode(c) {
      let buf = new Buffer(c), str2 = "";
      for (let i = 0; i < buf.length; ++i)
        str2 += percentEncode(buf[i]);
      return str2;
    }
    function utf8PercentDecode(str2) {
      let input = new Buffer(str2), output = [];
      for (let i = 0; i < input.length; ++i)
        input[i] !== 37 ? output.push(input[i]) : input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2]) ? (output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16)), i += 2) : output.push(input[i]);
      return new Buffer(output).toString();
    }
    function isC0ControlPercentEncode(c) {
      return c <= 31 || c > 126;
    }
    var extraPathPercentEncodeSet = /* @__PURE__ */ new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
    function isPathPercentEncode(c) {
      return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);
    }
    var extraUserinfoPercentEncodeSet = /* @__PURE__ */ new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
    function isUserinfoPercentEncode(c) {
      return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);
    }
    function percentEncodeChar(c, encodeSetPredicate) {
      let cStr = String.fromCodePoint(c);
      return encodeSetPredicate(c) ? utf8PercentEncode(cStr) : cStr;
    }
    function parseIPv4Number(input) {
      let R = 10;
      return input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x" ? (input = input.substring(2), R = 16) : input.length >= 2 && input.charAt(0) === "0" && (input = input.substring(1), R = 8), input === "" ? 0 : (R === 10 ? /[^0-9]/ : R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/).test(input) ? failure : parseInt(input, R);
    }
    function parseIPv4(input) {
      let parts = input.split(".");
      if (parts[parts.length - 1] === "" && parts.length > 1 && parts.pop(), parts.length > 4)
        return input;
      let numbers = [];
      for (let part of parts) {
        if (part === "")
          return input;
        let n = parseIPv4Number(part);
        if (n === failure)
          return input;
        numbers.push(n);
      }
      for (let i = 0; i < numbers.length - 1; ++i)
        if (numbers[i] > 255)
          return failure;
      if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length))
        return failure;
      let ipv4 = numbers.pop(), counter = 0;
      for (let n of numbers)
        ipv4 += n * Math.pow(256, 3 - counter), ++counter;
      return ipv4;
    }
    function serializeIPv4(address) {
      let output = "", n = address;
      for (let i = 1; i <= 4; ++i)
        output = String(n % 256) + output, i !== 4 && (output = "." + output), n = Math.floor(n / 256);
      return output;
    }
    function parseIPv6(input) {
      let address = [0, 0, 0, 0, 0, 0, 0, 0], pieceIndex = 0, compress = null, pointer = 0;
      if (input = punycode.ucs2.decode(input), input[pointer] === 58) {
        if (input[pointer + 1] !== 58)
          return failure;
        pointer += 2, ++pieceIndex, compress = pieceIndex;
      }
      for (; pointer < input.length; ) {
        if (pieceIndex === 8)
          return failure;
        if (input[pointer] === 58) {
          if (compress !== null)
            return failure;
          ++pointer, ++pieceIndex, compress = pieceIndex;
          continue;
        }
        let value = 0, length = 0;
        for (; length < 4 && isASCIIHex(input[pointer]); )
          value = value * 16 + parseInt(at(input, pointer), 16), ++pointer, ++length;
        if (input[pointer] === 46) {
          if (length === 0 || (pointer -= length, pieceIndex > 6))
            return failure;
          let numbersSeen = 0;
          for (; input[pointer] !== void 0; ) {
            let ipv4Piece = null;
            if (numbersSeen > 0)
              if (input[pointer] === 46 && numbersSeen < 4)
                ++pointer;
              else
                return failure;
            if (!isASCIIDigit(input[pointer]))
              return failure;
            for (; isASCIIDigit(input[pointer]); ) {
              let number2 = parseInt(at(input, pointer));
              if (ipv4Piece === null)
                ipv4Piece = number2;
              else {
                if (ipv4Piece === 0)
                  return failure;
                ipv4Piece = ipv4Piece * 10 + number2;
              }
              if (ipv4Piece > 255)
                return failure;
              ++pointer;
            }
            address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece, ++numbersSeen, (numbersSeen === 2 || numbersSeen === 4) && ++pieceIndex;
          }
          if (numbersSeen !== 4)
            return failure;
          break;
        } else if (input[pointer] === 58) {
          if (++pointer, input[pointer] === void 0)
            return failure;
        } else if (input[pointer] !== void 0)
          return failure;
        address[pieceIndex] = value, ++pieceIndex;
      }
      if (compress !== null) {
        let swaps = pieceIndex - compress;
        for (pieceIndex = 7; pieceIndex !== 0 && swaps > 0; ) {
          let temp = address[compress + swaps - 1];
          address[compress + swaps - 1] = address[pieceIndex], address[pieceIndex] = temp, --pieceIndex, --swaps;
        }
      } else if (compress === null && pieceIndex !== 8)
        return failure;
      return address;
    }
    function serializeIPv6(address) {
      let output = "", compress = findLongestZeroSequence(address).idx, ignore0 = !1;
      for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex)
        if (!(ignore0 && address[pieceIndex] === 0)) {
          if (ignore0 && (ignore0 = !1), compress === pieceIndex) {
            output += pieceIndex === 0 ? "::" : ":", ignore0 = !0;
            continue;
          }
          output += address[pieceIndex].toString(16), pieceIndex !== 7 && (output += ":");
        }
      return output;
    }
    function parseHost(input, isSpecialArg) {
      if (input[0] === "[")
        return input[input.length - 1] !== "]" ? failure : parseIPv6(input.substring(1, input.length - 1));
      if (!isSpecialArg)
        return parseOpaqueHost(input);
      let domain2 = utf8PercentDecode(input), asciiDomain = tr46.toASCII(domain2, !1, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, !1);
      if (asciiDomain === null || containsForbiddenHostCodePoint(asciiDomain))
        return failure;
      let ipv4Host = parseIPv4(asciiDomain);
      return typeof ipv4Host == "number" || ipv4Host === failure ? ipv4Host : asciiDomain;
    }
    function parseOpaqueHost(input) {
      if (containsForbiddenHostCodePointExcludingPercent(input))
        return failure;
      let output = "", decoded = punycode.ucs2.decode(input);
      for (let i = 0; i < decoded.length; ++i)
        output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);
      return output;
    }
    function findLongestZeroSequence(arr) {
      let maxIdx = null, maxLen = 1, currStart = null, currLen = 0;
      for (let i = 0; i < arr.length; ++i)
        arr[i] !== 0 ? (currLen > maxLen && (maxIdx = currStart, maxLen = currLen), currStart = null, currLen = 0) : (currStart === null && (currStart = i), ++currLen);
      return currLen > maxLen && (maxIdx = currStart, maxLen = currLen), {
        idx: maxIdx,
        len: maxLen
      };
    }
    function serializeHost(host) {
      return typeof host == "number" ? serializeIPv4(host) : host instanceof Array ? "[" + serializeIPv6(host) + "]" : host;
    }
    function trimControlChars(url) {
      return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
    }
    function trimTabAndNewline(url) {
      return url.replace(/\u0009|\u000A|\u000D/g, "");
    }
    function shortenPath(url) {
      let path6 = url.path;
      path6.length !== 0 && (url.scheme === "file" && path6.length === 1 && isNormalizedWindowsDriveLetter(path6[0]) || path6.pop());
    }
    function includesCredentials(url) {
      return url.username !== "" || url.password !== "";
    }
    function cannotHaveAUsernamePasswordPort(url) {
      return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";
    }
    function isNormalizedWindowsDriveLetter(string3) {
      return /^[A-Za-z]:$/.test(string3);
    }
    function URLStateMachine(input, base3, encodingOverride, url, stateOverride) {
      if (this.pointer = 0, this.input = input, this.base = base3 || null, this.encodingOverride = encodingOverride || "utf-8", this.stateOverride = stateOverride, this.url = url, this.failure = !1, this.parseError = !1, !this.url) {
        this.url = {
          scheme: "",
          username: "",
          password: "",
          host: null,
          port: null,
          path: [],
          query: null,
          fragment: null,
          cannotBeABaseURL: !1
        };
        let res2 = trimControlChars(this.input);
        res2 !== this.input && (this.parseError = !0), this.input = res2;
      }
      let res = trimTabAndNewline(this.input);
      for (res !== this.input && (this.parseError = !0), this.input = res, this.state = stateOverride || "scheme start", this.buffer = "", this.atFlag = !1, this.arrFlag = !1, this.passwordTokenSeenFlag = !1, this.input = punycode.ucs2.decode(this.input); this.pointer <= this.input.length; ++this.pointer) {
        let c = this.input[this.pointer], cStr = isNaN(c) ? void 0 : String.fromCodePoint(c), ret = this["parse " + this.state](c, cStr);
        if (ret) {
          if (ret === failure) {
            this.failure = !0;
            break;
          }
        } else
          break;
      }
    }
    URLStateMachine.prototype["parse scheme start"] = function(c, cStr) {
      if (isASCIIAlpha(c))
        this.buffer += cStr.toLowerCase(), this.state = "scheme";
      else if (!this.stateOverride)
        this.state = "no scheme", --this.pointer;
      else
        return this.parseError = !0, failure;
      return !0;
    };
    URLStateMachine.prototype["parse scheme"] = function(c, cStr) {
      if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46)
        this.buffer += cStr.toLowerCase();
      else if (c === 58) {
        if (this.stateOverride && (isSpecial(this.url) && !isSpecialScheme(this.buffer) || !isSpecial(this.url) && isSpecialScheme(this.buffer) || (includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file" || this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) || (this.url.scheme = this.buffer, this.buffer = "", this.stateOverride))
          return !1;
        this.url.scheme === "file" ? ((this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) && (this.parseError = !0), this.state = "file") : isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme ? this.state = "special relative or authority" : isSpecial(this.url) ? this.state = "special authority slashes" : this.input[this.pointer + 1] === 47 ? (this.state = "path or authority", ++this.pointer) : (this.url.cannotBeABaseURL = !0, this.url.path.push(""), this.state = "cannot-be-a-base-URL path");
      } else if (!this.stateOverride)
        this.buffer = "", this.state = "no scheme", this.pointer = -1;
      else
        return this.parseError = !0, failure;
      return !0;
    };
    URLStateMachine.prototype["parse no scheme"] = function(c) {
      return this.base === null || this.base.cannotBeABaseURL && c !== 35 ? failure : (this.base.cannotBeABaseURL && c === 35 ? (this.url.scheme = this.base.scheme, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.url.cannotBeABaseURL = !0, this.state = "fragment") : this.base.scheme === "file" ? (this.state = "file", --this.pointer) : (this.state = "relative", --this.pointer), !0);
    };
    URLStateMachine.prototype["parse special relative or authority"] = function(c) {
      return c === 47 && this.input[this.pointer + 1] === 47 ? (this.state = "special authority ignore slashes", ++this.pointer) : (this.parseError = !0, this.state = "relative", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse path or authority"] = function(c) {
      return c === 47 ? this.state = "authority" : (this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse relative"] = function(c) {
      return this.url.scheme = this.base.scheme, isNaN(c) ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = this.base.query) : c === 47 ? this.state = "relative slash" : c === 63 ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = "", this.state = "query") : c === 35 ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.state = "fragment") : isSpecial(this.url) && c === 92 ? (this.parseError = !0, this.state = "relative slash") : (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(0, this.base.path.length - 1), this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse relative slash"] = function(c) {
      return isSpecial(this.url) && (c === 47 || c === 92) ? (c === 92 && (this.parseError = !0), this.state = "special authority ignore slashes") : c === 47 ? this.state = "authority" : (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse special authority slashes"] = function(c) {
      return c === 47 && this.input[this.pointer + 1] === 47 ? (this.state = "special authority ignore slashes", ++this.pointer) : (this.parseError = !0, this.state = "special authority ignore slashes", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse special authority ignore slashes"] = function(c) {
      return c !== 47 && c !== 92 ? (this.state = "authority", --this.pointer) : this.parseError = !0, !0;
    };
    URLStateMachine.prototype["parse authority"] = function(c, cStr) {
      if (c === 64) {
        this.parseError = !0, this.atFlag && (this.buffer = "%40" + this.buffer), this.atFlag = !0;
        let len = countSymbols(this.buffer);
        for (let pointer = 0; pointer < len; ++pointer) {
          let codePoint = this.buffer.codePointAt(pointer);
          if (codePoint === 58 && !this.passwordTokenSeenFlag) {
            this.passwordTokenSeenFlag = !0;
            continue;
          }
          let encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);
          this.passwordTokenSeenFlag ? this.url.password += encodedCodePoints : this.url.username += encodedCodePoints;
        }
        this.buffer = "";
      } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
        if (this.atFlag && this.buffer === "")
          return this.parseError = !0, failure;
        this.pointer -= countSymbols(this.buffer) + 1, this.buffer = "", this.state = "host";
      } else
        this.buffer += cStr;
      return !0;
    };
    URLStateMachine.prototype["parse hostname"] = URLStateMachine.prototype["parse host"] = function(c, cStr) {
      if (this.stateOverride && this.url.scheme === "file")
        --this.pointer, this.state = "file host";
      else if (c === 58 && !this.arrFlag) {
        if (this.buffer === "")
          return this.parseError = !0, failure;
        let host = parseHost(this.buffer, isSpecial(this.url));
        if (host === failure)
          return failure;
        if (this.url.host = host, this.buffer = "", this.state = "port", this.stateOverride === "hostname")
          return !1;
      } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
        if (--this.pointer, isSpecial(this.url) && this.buffer === "")
          return this.parseError = !0, failure;
        if (this.stateOverride && this.buffer === "" && (includesCredentials(this.url) || this.url.port !== null))
          return this.parseError = !0, !1;
        let host = parseHost(this.buffer, isSpecial(this.url));
        if (host === failure)
          return failure;
        if (this.url.host = host, this.buffer = "", this.state = "path start", this.stateOverride)
          return !1;
      } else
        c === 91 ? this.arrFlag = !0 : c === 93 && (this.arrFlag = !1), this.buffer += cStr;
      return !0;
    };
    URLStateMachine.prototype["parse port"] = function(c, cStr) {
      if (isASCIIDigit(c))
        this.buffer += cStr;
      else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {
        if (this.buffer !== "") {
          let port = parseInt(this.buffer);
          if (port > Math.pow(2, 16) - 1)
            return this.parseError = !0, failure;
          this.url.port = port === defaultPort(this.url.scheme) ? null : port, this.buffer = "";
        }
        if (this.stateOverride)
          return !1;
        this.state = "path start", --this.pointer;
      } else
        return this.parseError = !0, failure;
      return !0;
    };
    var fileOtherwiseCodePoints = /* @__PURE__ */ new Set([47, 92, 63, 35]);
    URLStateMachine.prototype["parse file"] = function(c) {
      return this.url.scheme = "file", c === 47 || c === 92 ? (c === 92 && (this.parseError = !0), this.state = "file slash") : this.base !== null && this.base.scheme === "file" ? isNaN(c) ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = this.base.query) : c === 63 ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = "", this.state = "query") : c === 35 ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.state = "fragment") : (this.input.length - this.pointer - 1 === 0 || !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 && !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]) ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), shortenPath(this.url)) : this.parseError = !0, this.state = "path", --this.pointer) : (this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse file slash"] = function(c) {
      return c === 47 || c === 92 ? (c === 92 && (this.parseError = !0), this.state = "file host") : (this.base !== null && this.base.scheme === "file" && (isNormalizedWindowsDriveLetterString(this.base.path[0]) ? this.url.path.push(this.base.path[0]) : this.url.host = this.base.host), this.state = "path", --this.pointer), !0;
    };
    URLStateMachine.prototype["parse file host"] = function(c, cStr) {
      if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35)
        if (--this.pointer, !this.stateOverride && isWindowsDriveLetterString(this.buffer))
          this.parseError = !0, this.state = "path";
        else if (this.buffer === "") {
          if (this.url.host = "", this.stateOverride)
            return !1;
          this.state = "path start";
        } else {
          let host = parseHost(this.buffer, isSpecial(this.url));
          if (host === failure)
            return failure;
          if (host === "localhost" && (host = ""), this.url.host = host, this.stateOverride)
            return !1;
          this.buffer = "", this.state = "path start";
        }
      else
        this.buffer += cStr;
      return !0;
    };
    URLStateMachine.prototype["parse path start"] = function(c) {
      return isSpecial(this.url) ? (c === 92 && (this.parseError = !0), this.state = "path", c !== 47 && c !== 92 && --this.pointer) : !this.stateOverride && c === 63 ? (this.url.query = "", this.state = "query") : !this.stateOverride && c === 35 ? (this.url.fragment = "", this.state = "fragment") : c !== void 0 && (this.state = "path", c !== 47 && --this.pointer), !0;
    };
    URLStateMachine.prototype["parse path"] = function(c) {
      if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {
        if (isSpecial(this.url) && c === 92 && (this.parseError = !0), isDoubleDot(this.buffer) ? (shortenPath(this.url), c !== 47 && !(isSpecial(this.url) && c === 92) && this.url.path.push("")) : isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92) ? this.url.path.push("") : isSingleDot(this.buffer) || (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer) && (this.url.host !== "" && this.url.host !== null && (this.parseError = !0, this.url.host = ""), this.buffer = this.buffer[0] + ":"), this.url.path.push(this.buffer)), this.buffer = "", this.url.scheme === "file" && (c === void 0 || c === 63 || c === 35))
          for (; this.url.path.length > 1 && this.url.path[0] === ""; )
            this.parseError = !0, this.url.path.shift();
        c === 63 && (this.url.query = "", this.state = "query"), c === 35 && (this.url.fragment = "", this.state = "fragment");
      } else
        c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2])) && (this.parseError = !0), this.buffer += percentEncodeChar(c, isPathPercentEncode);
      return !0;
    };
    URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function(c) {
      return c === 63 ? (this.url.query = "", this.state = "query") : c === 35 ? (this.url.fragment = "", this.state = "fragment") : (!isNaN(c) && c !== 37 && (this.parseError = !0), c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2])) && (this.parseError = !0), isNaN(c) || (this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode))), !0;
    };
    URLStateMachine.prototype["parse query"] = function(c, cStr) {
      if (isNaN(c) || !this.stateOverride && c === 35) {
        (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") && (this.encodingOverride = "utf-8");
        let buffer2 = new Buffer(this.buffer);
        for (let i = 0; i < buffer2.length; ++i)
          buffer2[i] < 33 || buffer2[i] > 126 || buffer2[i] === 34 || buffer2[i] === 35 || buffer2[i] === 60 || buffer2[i] === 62 ? this.url.query += percentEncode(buffer2[i]) : this.url.query += String.fromCodePoint(buffer2[i]);
        this.buffer = "", c === 35 && (this.url.fragment = "", this.state = "fragment");
      } else
        c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2])) && (this.parseError = !0), this.buffer += cStr;
      return !0;
    };
    URLStateMachine.prototype["parse fragment"] = function(c) {
      return isNaN(c) || (c === 0 ? this.parseError = !0 : (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2])) && (this.parseError = !0), this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode))), !0;
    };
    function serializeURL(url, excludeFragment) {
      let output = url.scheme + ":";
      if (url.host !== null ? (output += "//", (url.username !== "" || url.password !== "") && (output += url.username, url.password !== "" && (output += ":" + url.password), output += "@"), output += serializeHost(url.host), url.port !== null && (output += ":" + url.port)) : url.host === null && url.scheme === "file" && (output += "//"), url.cannotBeABaseURL)
        output += url.path[0];
      else
        for (let string3 of url.path)
          output += "/" + string3;
      return url.query !== null && (output += "?" + url.query), !excludeFragment && url.fragment !== null && (output += "#" + url.fragment), output;
    }
    function serializeOrigin(tuple) {
      let result = tuple.scheme + "://";
      return result += serializeHost(tuple.host), tuple.port !== null && (result += ":" + tuple.port), result;
    }
    module2.exports.serializeURL = serializeURL;
    module2.exports.serializeURLOrigin = function(url) {
      switch (url.scheme) {
        case "blob":
          try {
            return module2.exports.serializeURLOrigin(module2.exports.parseURL(url.path[0]));
          } catch {
            return "null";
          }
        case "ftp":
        case "gopher":
        case "http":
        case "https":
        case "ws":
        case "wss":
          return serializeOrigin({
            scheme: url.scheme,
            host: url.host,
            port: url.port
          });
        case "file":
          return "file://";
        default:
          return "null";
      }
    };
    module2.exports.basicURLParse = function(input, options2) {
      options2 === void 0 && (options2 = {});
      let usm = new URLStateMachine(input, options2.baseURL, options2.encodingOverride, options2.url, options2.stateOverride);
      return usm.failure ? "failure" : usm.url;
    };
    module2.exports.setTheUsername = function(url, username) {
      url.username = "";
      let decoded = punycode.ucs2.decode(username);
      for (let i = 0; i < decoded.length; ++i)
        url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
    };
    module2.exports.setThePassword = function(url, password) {
      url.password = "";
      let decoded = punycode.ucs2.decode(password);
      for (let i = 0; i < decoded.length; ++i)
        url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
    };
    module2.exports.serializeHost = serializeHost;
    module2.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;
    module2.exports.serializeInteger = function(integer) {
      return String(integer);
    };
    module2.exports.parseURL = function(input, options2) {
      return options2 === void 0 && (options2 = {}), module2.exports.basicURLParse(input, { baseURL: options2.baseURL, encodingOverride: options2.encodingOverride });
    };
  }
});

// node_modules/node-fetch/node_modules/whatwg-url/lib/URL-impl.js
var require_URL_impl2 = __commonJS({
  "node_modules/node-fetch/node_modules/whatwg-url/lib/URL-impl.js"(exports2) {
    "use strict";
    var usm = require_url_state_machine2();
    exports2.implementation = class {
      constructor(constructorArgs) {
        let url = constructorArgs[0], base3 = constructorArgs[1], parsedBase = null;
        if (base3 !== void 0 && (parsedBase = usm.basicURLParse(base3), parsedBase === "failure"))
          throw new TypeError("Invalid base URL");
        let parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });
        if (parsedURL === "failure")
          throw new TypeError("Invalid URL");
        this._url = parsedURL;
      }
      get href() {
        return usm.serializeURL(this._url);
      }
      set href(v) {
        let parsedURL = usm.basicURLParse(v);
        if (parsedURL === "failure")
          throw new TypeError("Invalid URL");
        this._url = parsedURL;
      }
      get origin() {
        return usm.serializeURLOrigin(this._url);
      }
      get protocol() {
        return this._url.scheme + ":";
      }
      set protocol(v) {
        usm.basicURLParse(v + ":", { url: this._url, stateOverride: "scheme start" });
      }
      get username() {
        return this._url.username;
      }
      set username(v) {
        usm.cannotHaveAUsernamePasswordPort(this._url) || usm.setTheUsername(this._url, v);
      }
      get password() {
        return this._url.password;
      }
      set password(v) {
        usm.cannotHaveAUsernamePasswordPort(this._url) || usm.setThePassword(this._url, v);
      }
      get host() {
        let url = this._url;
        return url.host === null ? "" : url.port === null ? usm.serializeHost(url.host) : usm.serializeHost(url.host) + ":" + usm.serializeInteger(url.port);
      }
      set host(v) {
        this._url.cannotBeABaseURL || usm.basicURLParse(v, { url: this._url, stateOverride: "host" });
      }
      get hostname() {
        return this._url.host === null ? "" : usm.serializeHost(this._url.host);
      }
      set hostname(v) {
        this._url.cannotBeABaseURL || usm.basicURLParse(v, { url: this._url, stateOverride: "hostname" });
      }
      get port() {
        return this._url.port === null ? "" : usm.serializeInteger(this._url.port);
      }
      set port(v) {
        usm.cannotHaveAUsernamePasswordPort(this._url) || (v === "" ? this._url.port = null : usm.basicURLParse(v, { url: this._url, stateOverride: "port" }));
      }
      get pathname() {
        return this._url.cannotBeABaseURL ? this._url.path[0] : this._url.path.length === 0 ? "" : "/" + this._url.path.join("/");
      }
      set pathname(v) {
        this._url.cannotBeABaseURL || (this._url.path = [], usm.basicURLParse(v, { url: this._url, stateOverride: "path start" }));
      }
      get search() {
        return this._url.query === null || this._url.query === "" ? "" : "?" + this._url.query;
      }
      set search(v) {
        let url = this._url;
        if (v === "") {
          url.query = null;
          return;
        }
        let input = v[0] === "?" ? v.substring(1) : v;
        url.query = "", usm.basicURLParse(input, { url, stateOverride: "query" });
      }
      get hash() {
        return this._url.fragment === null || this._url.fragment === "" ? "" : "#" + this._url.fragment;
      }
      set hash(v) {
        if (v === "") {
          this._url.fragment = null;
          return;
        }
        let input = v[0] === "#" ? v.substring(1) : v;
        this._url.fragment = "", usm.basicURLParse(input, { url: this._url, stateOverride: "fragment" });
      }
      toJSON() {
        return this.href;
      }
    };
  }
});

// node_modules/node-fetch/node_modules/whatwg-url/lib/URL.js
var require_URL2 = __commonJS({
  "node_modules/node-fetch/node_modules/whatwg-url/lib/URL.js"(exports2, module2) {
    "use strict";
    var conversions = require_lib4(), utils = require_utils6(), Impl = require_URL_impl2(), impl = utils.implSymbol;
    function URL2(url) {
      if (!this || this[impl] || !(this instanceof URL2))
        throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
      if (arguments.length < 1)
        throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
      let args = [];
      for (let i = 0; i < arguments.length && i < 2; ++i)
        args[i] = arguments[i];
      args[0] = conversions.USVString(args[0]), args[1] !== void 0 && (args[1] = conversions.USVString(args[1])), module2.exports.setup(this, args);
    }
    URL2.prototype.toJSON = function() {
      if (!this || !module2.exports.is(this))
        throw new TypeError("Illegal invocation");
      let args = [];
      for (let i = 0; i < arguments.length && i < 0; ++i)
        args[i] = arguments[i];
      return this[impl].toJSON.apply(this[impl], args);
    };
    Object.defineProperty(URL2.prototype, "href", {
      get() {
        return this[impl].href;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].href = V;
      },
      enumerable: !0,
      configurable: !0
    });
    URL2.prototype.toString = function() {
      if (!this || !module2.exports.is(this))
        throw new TypeError("Illegal invocation");
      return this.href;
    };
    Object.defineProperty(URL2.prototype, "origin", {
      get() {
        return this[impl].origin;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "protocol", {
      get() {
        return this[impl].protocol;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].protocol = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "username", {
      get() {
        return this[impl].username;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].username = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "password", {
      get() {
        return this[impl].password;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].password = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "host", {
      get() {
        return this[impl].host;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].host = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "hostname", {
      get() {
        return this[impl].hostname;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].hostname = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "port", {
      get() {
        return this[impl].port;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].port = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "pathname", {
      get() {
        return this[impl].pathname;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].pathname = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "search", {
      get() {
        return this[impl].search;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].search = V;
      },
      enumerable: !0,
      configurable: !0
    });
    Object.defineProperty(URL2.prototype, "hash", {
      get() {
        return this[impl].hash;
      },
      set(V) {
        V = conversions.USVString(V), this[impl].hash = V;
      },
      enumerable: !0,
      configurable: !0
    });
    module2.exports = {
      is(obj) {
        return !!obj && obj[impl] instanceof Impl.implementation;
      },
      create(constructorArgs, privateData) {
        let obj = Object.create(URL2.prototype);
        return this.setup(obj, constructorArgs, privateData), obj;
      },
      setup(obj, constructorArgs, privateData) {
        privateData || (privateData = {}), privateData.wrapper = obj, obj[impl] = new Impl.implementation(constructorArgs, privateData), obj[impl][utils.wrapperSymbol] = obj;
      },
      interface: URL2,
      expose: {
        Window: { URL: URL2 },
        Worker: { URL: URL2 }
      }
    };
  }
});

// node_modules/node-fetch/node_modules/whatwg-url/lib/public-api.js
var require_public_api2 = __commonJS({
  "node_modules/node-fetch/node_modules/whatwg-url/lib/public-api.js"(exports2) {
    "use strict";
    exports2.URL = require_URL2().interface;
    exports2.serializeURL = require_url_state_machine2().serializeURL;
    exports2.serializeURLOrigin = require_url_state_machine2().serializeURLOrigin;
    exports2.basicURLParse = require_url_state_machine2().basicURLParse;
    exports2.setTheUsername = require_url_state_machine2().setTheUsername;
    exports2.setThePassword = require_url_state_machine2().setThePassword;
    exports2.serializeHost = require_url_state_machine2().serializeHost;
    exports2.serializeInteger = require_url_state_machine2().serializeInteger;
    exports2.parseURL = require_url_state_machine2().parseURL;
  }
});

// node_modules/node-fetch/lib/index.js
var require_lib5 = __commonJS({
  "node_modules/node-fetch/lib/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function _interopDefault(ex) {
      return ex && typeof ex == "object" && "default" in ex ? ex.default : ex;
    }
    var Stream = _interopDefault(require("stream")), http7 = _interopDefault(require("http")), Url = _interopDefault(require("url")), whatwgUrl = _interopDefault(require_public_api2()), https = _interopDefault(require("https")), zlib = _interopDefault(require("zlib")), Readable = Stream.Readable, BUFFER = Symbol("buffer"), TYPE = Symbol("type"), Blob2 = class {
      constructor() {
        this[TYPE] = "";
        let blobParts = arguments[0], options2 = arguments[1], buffers = [], size = 0;
        if (blobParts) {
          let a = blobParts, length = Number(a.length);
          for (let i = 0; i < length; i++) {
            let element5 = a[i], buffer2;
            element5 instanceof Buffer ? buffer2 = element5 : ArrayBuffer.isView(element5) ? buffer2 = Buffer.from(element5.buffer, element5.byteOffset, element5.byteLength) : element5 instanceof ArrayBuffer ? buffer2 = Buffer.from(element5) : element5 instanceof Blob2 ? buffer2 = element5[BUFFER] : buffer2 = Buffer.from(typeof element5 == "string" ? element5 : String(element5)), size += buffer2.length, buffers.push(buffer2);
          }
        }
        this[BUFFER] = Buffer.concat(buffers);
        let type = options2 && options2.type !== void 0 && String(options2.type).toLowerCase();
        type && !/[^\u0020-\u007E]/.test(type) && (this[TYPE] = type);
      }
      get size() {
        return this[BUFFER].length;
      }
      get type() {
        return this[TYPE];
      }
      text() {
        return Promise.resolve(this[BUFFER].toString());
      }
      arrayBuffer() {
        let buf = this[BUFFER], ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
        return Promise.resolve(ab);
      }
      stream() {
        let readable = new Readable();
        return readable._read = function() {
        }, readable.push(this[BUFFER]), readable.push(null), readable;
      }
      toString() {
        return "[object Blob]";
      }
      slice() {
        let size = this.size, start = arguments[0], end = arguments[1], relativeStart, relativeEnd;
        start === void 0 ? relativeStart = 0 : start < 0 ? relativeStart = Math.max(size + start, 0) : relativeStart = Math.min(start, size), end === void 0 ? relativeEnd = size : end < 0 ? relativeEnd = Math.max(size + end, 0) : relativeEnd = Math.min(end, size);
        let span = Math.max(relativeEnd - relativeStart, 0), slicedBuffer = this[BUFFER].slice(relativeStart, relativeStart + span), blob = new Blob2([], { type: arguments[2] });
        return blob[BUFFER] = slicedBuffer, blob;
      }
    };
    Object.defineProperties(Blob2.prototype, {
      size: { enumerable: !0 },
      type: { enumerable: !0 },
      slice: { enumerable: !0 }
    });
    Object.defineProperty(Blob2.prototype, Symbol.toStringTag, {
      value: "Blob",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    function FetchError(message, type, systemError) {
      Error.call(this, message), this.message = message, this.type = type, systemError && (this.code = this.errno = systemError.code), Error.captureStackTrace(this, this.constructor);
    }
    FetchError.prototype = Object.create(Error.prototype);
    FetchError.prototype.constructor = FetchError;
    FetchError.prototype.name = "FetchError";
    var convert2;
    try {
      convert2 = require("encoding").convert;
    } catch {
    }
    var INTERNALS = Symbol("Body internals"), PassThrough = Stream.PassThrough;
    function Body(body3) {
      var _this = this, _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$size = _ref.size;
      let size = _ref$size === void 0 ? 0 : _ref$size;
      var _ref$timeout = _ref.timeout;
      let timeout = _ref$timeout === void 0 ? 0 : _ref$timeout;
      body3 == null ? body3 = null : isURLSearchParams(body3) ? body3 = Buffer.from(body3.toString()) : isBlob(body3) || Buffer.isBuffer(body3) || (Object.prototype.toString.call(body3) === "[object ArrayBuffer]" ? body3 = Buffer.from(body3) : ArrayBuffer.isView(body3) ? body3 = Buffer.from(body3.buffer, body3.byteOffset, body3.byteLength) : body3 instanceof Stream || (body3 = Buffer.from(String(body3)))), this[INTERNALS] = {
        body: body3,
        disturbed: !1,
        error: null
      }, this.size = size, this.timeout = timeout, body3 instanceof Stream && body3.on("error", function(err) {
        let error = err.name === "AbortError" ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, "system", err);
        _this[INTERNALS].error = error;
      });
    }
    Body.prototype = {
      get body() {
        return this[INTERNALS].body;
      },
      get bodyUsed() {
        return this[INTERNALS].disturbed;
      },
      arrayBuffer() {
        return consumeBody.call(this).then(function(buf) {
          return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
        });
      },
      blob() {
        let ct = this.headers && this.headers.get("content-type") || "";
        return consumeBody.call(this).then(function(buf) {
          return Object.assign(
            new Blob2([], {
              type: ct.toLowerCase()
            }),
            {
              [BUFFER]: buf
            }
          );
        });
      },
      json() {
        var _this2 = this;
        return consumeBody.call(this).then(function(buffer2) {
          try {
            return JSON.parse(buffer2.toString());
          } catch (err) {
            return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, "invalid-json"));
          }
        });
      },
      text() {
        return consumeBody.call(this).then(function(buffer2) {
          return buffer2.toString();
        });
      },
      buffer() {
        return consumeBody.call(this);
      },
      textConverted() {
        var _this3 = this;
        return consumeBody.call(this).then(function(buffer2) {
          return convertBody(buffer2, _this3.headers);
        });
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: !0 },
      bodyUsed: { enumerable: !0 },
      arrayBuffer: { enumerable: !0 },
      blob: { enumerable: !0 },
      json: { enumerable: !0 },
      text: { enumerable: !0 }
    });
    Body.mixIn = function(proto2) {
      for (let name of Object.getOwnPropertyNames(Body.prototype))
        if (!(name in proto2)) {
          let desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
          Object.defineProperty(proto2, name, desc);
        }
    };
    function consumeBody() {
      var _this4 = this;
      if (this[INTERNALS].disturbed)
        return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
      if (this[INTERNALS].disturbed = !0, this[INTERNALS].error)
        return Body.Promise.reject(this[INTERNALS].error);
      let body3 = this.body;
      if (body3 === null)
        return Body.Promise.resolve(Buffer.alloc(0));
      if (isBlob(body3) && (body3 = body3.stream()), Buffer.isBuffer(body3))
        return Body.Promise.resolve(body3);
      if (!(body3 instanceof Stream))
        return Body.Promise.resolve(Buffer.alloc(0));
      let accum = [], accumBytes = 0, abort = !1;
      return new Body.Promise(function(resolve, reject) {
        let resTimeout;
        _this4.timeout && (resTimeout = setTimeout(function() {
          abort = !0, reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, "body-timeout"));
        }, _this4.timeout)), body3.on("error", function(err) {
          err.name === "AbortError" ? (abort = !0, reject(err)) : reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, "system", err));
        }), body3.on("data", function(chunk) {
          if (!(abort || chunk === null)) {
            if (_this4.size && accumBytes + chunk.length > _this4.size) {
              abort = !0, reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, "max-size"));
              return;
            }
            accumBytes += chunk.length, accum.push(chunk);
          }
        }), body3.on("end", function() {
          if (!abort) {
            clearTimeout(resTimeout);
            try {
              resolve(Buffer.concat(accum, accumBytes));
            } catch (err) {
              reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, "system", err));
            }
          }
        });
      });
    }
    function convertBody(buffer2, headers) {
      if (typeof convert2 != "function")
        throw new Error("The package `encoding` must be installed to use the textConverted() function");
      let ct = headers.get("content-type"), charset = "utf-8", res, str2;
      return ct && (res = /charset=([^;]*)/i.exec(ct)), str2 = buffer2.slice(0, 1024).toString(), !res && str2 && (res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str2)), !res && str2 && (res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str2), res || (res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str2), res && res.pop()), res && (res = /charset=(.*)/i.exec(res.pop()))), !res && str2 && (res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str2)), res && (charset = res.pop(), (charset === "gb2312" || charset === "gbk") && (charset = "gb18030")), convert2(buffer2, "UTF-8", charset).toString();
    }
    function isURLSearchParams(obj) {
      return typeof obj != "object" || typeof obj.append != "function" || typeof obj.delete != "function" || typeof obj.get != "function" || typeof obj.getAll != "function" || typeof obj.has != "function" || typeof obj.set != "function" ? !1 : obj.constructor.name === "URLSearchParams" || Object.prototype.toString.call(obj) === "[object URLSearchParams]" || typeof obj.sort == "function";
    }
    function isBlob(obj) {
      return typeof obj == "object" && typeof obj.arrayBuffer == "function" && typeof obj.type == "string" && typeof obj.stream == "function" && typeof obj.constructor == "function" && typeof obj.constructor.name == "string" && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
    }
    function clone(instance) {
      let p1, p2, body3 = instance.body;
      if (instance.bodyUsed)
        throw new Error("cannot clone body after it is used");
      return body3 instanceof Stream && typeof body3.getBoundary != "function" && (p1 = new PassThrough(), p2 = new PassThrough(), body3.pipe(p1), body3.pipe(p2), instance[INTERNALS].body = p1, body3 = p2), body3;
    }
    function extractContentType(body3) {
      return body3 === null ? null : typeof body3 == "string" ? "text/plain;charset=UTF-8" : isURLSearchParams(body3) ? "application/x-www-form-urlencoded;charset=UTF-8" : isBlob(body3) ? body3.type || null : Buffer.isBuffer(body3) || Object.prototype.toString.call(body3) === "[object ArrayBuffer]" || ArrayBuffer.isView(body3) ? null : typeof body3.getBoundary == "function" ? `multipart/form-data;boundary=${body3.getBoundary()}` : body3 instanceof Stream ? null : "text/plain;charset=UTF-8";
    }
    function getTotalBytes(instance) {
      let body3 = instance.body;
      return body3 === null ? 0 : isBlob(body3) ? body3.size : Buffer.isBuffer(body3) ? body3.length : body3 && typeof body3.getLengthSync == "function" && (body3._lengthRetrievers && body3._lengthRetrievers.length == 0 || body3.hasKnownLength && body3.hasKnownLength()) ? body3.getLengthSync() : null;
    }
    function writeToStream(dest, instance) {
      let body3 = instance.body;
      body3 === null ? dest.end() : isBlob(body3) ? body3.stream().pipe(dest) : Buffer.isBuffer(body3) ? (dest.write(body3), dest.end()) : body3.pipe(dest);
    }
    Body.Promise = global.Promise;
    var invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/, invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;
    function validateName(name) {
      if (name = `${name}`, invalidTokenRegex.test(name) || name === "")
        throw new TypeError(`${name} is not a legal HTTP header name`);
    }
    function validateValue(value) {
      if (value = `${value}`, invalidHeaderCharRegex.test(value))
        throw new TypeError(`${value} is not a legal HTTP header value`);
    }
    function find2(map2, name) {
      name = name.toLowerCase();
      for (let key2 in map2)
        if (key2.toLowerCase() === name)
          return key2;
    }
    var MAP = Symbol("map"), Headers2 = class {
      constructor() {
        let init = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
        if (this[MAP] = /* @__PURE__ */ Object.create(null), init instanceof Headers2) {
          let rawHeaders = init.raw(), headerNames = Object.keys(rawHeaders);
          for (let headerName of headerNames)
            for (let value of rawHeaders[headerName])
              this.append(headerName, value);
          return;
        }
        if (init != null)
          if (typeof init == "object") {
            let method = init[Symbol.iterator];
            if (method != null) {
              if (typeof method != "function")
                throw new TypeError("Header pairs must be iterable");
              let pairs = [];
              for (let pair of init) {
                if (typeof pair != "object" || typeof pair[Symbol.iterator] != "function")
                  throw new TypeError("Each header pair must be iterable");
                pairs.push(Array.from(pair));
              }
              for (let pair of pairs) {
                if (pair.length !== 2)
                  throw new TypeError("Each header pair must be a name/value tuple");
                this.append(pair[0], pair[1]);
              }
            } else
              for (let key2 of Object.keys(init)) {
                let value = init[key2];
                this.append(key2, value);
              }
          } else
            throw new TypeError("Provided initializer must be an object");
      }
      get(name) {
        name = `${name}`, validateName(name);
        let key2 = find2(this[MAP], name);
        return key2 === void 0 ? null : this[MAP][key2].join(", ");
      }
      forEach(callback) {
        let thisArg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0, pairs = getHeaders(this), i = 0;
        for (; i < pairs.length; ) {
          var _pairs$i = pairs[i];
          let name = _pairs$i[0], value = _pairs$i[1];
          callback.call(thisArg, value, name, this), pairs = getHeaders(this), i++;
        }
      }
      set(name, value) {
        name = `${name}`, value = `${value}`, validateName(name), validateValue(value);
        let key2 = find2(this[MAP], name);
        this[MAP][key2 !== void 0 ? key2 : name] = [value];
      }
      append(name, value) {
        name = `${name}`, value = `${value}`, validateName(name), validateValue(value);
        let key2 = find2(this[MAP], name);
        key2 !== void 0 ? this[MAP][key2].push(value) : this[MAP][name] = [value];
      }
      has(name) {
        return name = `${name}`, validateName(name), find2(this[MAP], name) !== void 0;
      }
      delete(name) {
        name = `${name}`, validateName(name);
        let key2 = find2(this[MAP], name);
        key2 !== void 0 && delete this[MAP][key2];
      }
      raw() {
        return this[MAP];
      }
      keys() {
        return createHeadersIterator(this, "key");
      }
      values() {
        return createHeadersIterator(this, "value");
      }
      [Symbol.iterator]() {
        return createHeadersIterator(this, "key+value");
      }
    };
    Headers2.prototype.entries = Headers2.prototype[Symbol.iterator];
    Object.defineProperty(Headers2.prototype, Symbol.toStringTag, {
      value: "Headers",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    Object.defineProperties(Headers2.prototype, {
      get: { enumerable: !0 },
      forEach: { enumerable: !0 },
      set: { enumerable: !0 },
      append: { enumerable: !0 },
      has: { enumerable: !0 },
      delete: { enumerable: !0 },
      keys: { enumerable: !0 },
      values: { enumerable: !0 },
      entries: { enumerable: !0 }
    });
    function getHeaders(headers) {
      let kind = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "key+value";
      return Object.keys(headers[MAP]).sort().map(kind === "key" ? function(k) {
        return k.toLowerCase();
      } : kind === "value" ? function(k) {
        return headers[MAP][k].join(", ");
      } : function(k) {
        return [k.toLowerCase(), headers[MAP][k].join(", ")];
      });
    }
    var INTERNAL = Symbol("internal");
    function createHeadersIterator(target, kind) {
      let iterator = Object.create(HeadersIteratorPrototype);
      return iterator[INTERNAL] = {
        target,
        kind,
        index: 0
      }, iterator;
    }
    var HeadersIteratorPrototype = Object.setPrototypeOf({
      next() {
        if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype)
          throw new TypeError("Value of `this` is not a HeadersIterator");
        var _INTERNAL = this[INTERNAL];
        let target = _INTERNAL.target, kind = _INTERNAL.kind, index2 = _INTERNAL.index, values = getHeaders(target, kind), len = values.length;
        return index2 >= len ? {
          value: void 0,
          done: !0
        } : (this[INTERNAL].index = index2 + 1, {
          value: values[index2],
          done: !1
        });
      }
    }, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));
    Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
      value: "HeadersIterator",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    function exportNodeCompatibleHeaders(headers) {
      let obj = Object.assign({ __proto__: null }, headers[MAP]), hostHeaderKey = find2(headers[MAP], "Host");
      return hostHeaderKey !== void 0 && (obj[hostHeaderKey] = obj[hostHeaderKey][0]), obj;
    }
    function createHeadersLenient(obj) {
      let headers = new Headers2();
      for (let name of Object.keys(obj))
        if (!invalidTokenRegex.test(name))
          if (Array.isArray(obj[name]))
            for (let val of obj[name])
              invalidHeaderCharRegex.test(val) || (headers[MAP][name] === void 0 ? headers[MAP][name] = [val] : headers[MAP][name].push(val));
          else
            invalidHeaderCharRegex.test(obj[name]) || (headers[MAP][name] = [obj[name]]);
      return headers;
    }
    var INTERNALS$1 = Symbol("Response internals"), STATUS_CODES = http7.STATUS_CODES, Response5 = class {
      constructor() {
        let body3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        Body.call(this, body3, opts);
        let status = opts.status || 200, headers = new Headers2(opts.headers);
        if (body3 != null && !headers.has("Content-Type")) {
          let contentType = extractContentType(body3);
          contentType && headers.append("Content-Type", contentType);
        }
        this[INTERNALS$1] = {
          url: opts.url,
          status,
          statusText: opts.statusText || STATUS_CODES[status],
          headers,
          counter: opts.counter
        };
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      clone() {
        return new Response5(clone(this), {
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected
        });
      }
    };
    Body.mixIn(Response5.prototype);
    Object.defineProperties(Response5.prototype, {
      url: { enumerable: !0 },
      status: { enumerable: !0 },
      ok: { enumerable: !0 },
      redirected: { enumerable: !0 },
      statusText: { enumerable: !0 },
      headers: { enumerable: !0 },
      clone: { enumerable: !0 }
    });
    Object.defineProperty(Response5.prototype, Symbol.toStringTag, {
      value: "Response",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    var INTERNALS$2 = Symbol("Request internals"), URL2 = Url.URL || whatwgUrl.URL, parse_url = Url.parse, format_url = Url.format;
    function parseURL(urlStr) {
      return /^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr) && (urlStr = new URL2(urlStr).toString()), parse_url(urlStr);
    }
    var streamDestructionSupported = "destroy" in Stream.Readable.prototype;
    function isRequest(input) {
      return typeof input == "object" && typeof input[INTERNALS$2] == "object";
    }
    function isAbortSignal(signal) {
      let proto2 = signal && typeof signal == "object" && Object.getPrototypeOf(signal);
      return !!(proto2 && proto2.constructor.name === "AbortSignal");
    }
    var Request2 = class {
      constructor(input) {
        let init = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, parsedURL;
        isRequest(input) ? parsedURL = parseURL(input.url) : (input && input.href ? parsedURL = parseURL(input.href) : parsedURL = parseURL(`${input}`), input = {});
        let method = init.method || input.method || "GET";
        if (method = method.toUpperCase(), (init.body != null || isRequest(input) && input.body !== null) && (method === "GET" || method === "HEAD"))
          throw new TypeError("Request with GET/HEAD method cannot have body");
        let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;
        Body.call(this, inputBody, {
          timeout: init.timeout || input.timeout || 0,
          size: init.size || input.size || 0
        });
        let headers = new Headers2(init.headers || input.headers || {});
        if (inputBody != null && !headers.has("Content-Type")) {
          let contentType = extractContentType(inputBody);
          contentType && headers.append("Content-Type", contentType);
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init && (signal = init.signal), signal != null && !isAbortSignal(signal))
          throw new TypeError("Expected signal to be an instanceof AbortSignal");
        this[INTERNALS$2] = {
          method,
          redirect: init.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal
        }, this.follow = init.follow !== void 0 ? init.follow : input.follow !== void 0 ? input.follow : 20, this.compress = init.compress !== void 0 ? init.compress : input.compress !== void 0 ? input.compress : !0, this.counter = init.counter || input.counter || 0, this.agent = init.agent || input.agent;
      }
      get method() {
        return this[INTERNALS$2].method;
      }
      get url() {
        return format_url(this[INTERNALS$2].parsedURL);
      }
      get headers() {
        return this[INTERNALS$2].headers;
      }
      get redirect() {
        return this[INTERNALS$2].redirect;
      }
      get signal() {
        return this[INTERNALS$2].signal;
      }
      clone() {
        return new Request2(this);
      }
    };
    Body.mixIn(Request2.prototype);
    Object.defineProperty(Request2.prototype, Symbol.toStringTag, {
      value: "Request",
      writable: !1,
      enumerable: !1,
      configurable: !0
    });
    Object.defineProperties(Request2.prototype, {
      method: { enumerable: !0 },
      url: { enumerable: !0 },
      headers: { enumerable: !0 },
      redirect: { enumerable: !0 },
      clone: { enumerable: !0 },
      signal: { enumerable: !0 }
    });
    function getNodeRequestOptions(request) {
      let parsedURL = request[INTERNALS$2].parsedURL, headers = new Headers2(request[INTERNALS$2].headers);
      if (headers.has("Accept") || headers.set("Accept", "*/*"), !parsedURL.protocol || !parsedURL.hostname)
        throw new TypeError("Only absolute URLs are supported");
      if (!/^https?:$/.test(parsedURL.protocol))
        throw new TypeError("Only HTTP(S) protocols are supported");
      if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported)
        throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");
      let contentLengthValue = null;
      if (request.body == null && /^(POST|PUT)$/i.test(request.method) && (contentLengthValue = "0"), request.body != null) {
        let totalBytes = getTotalBytes(request);
        typeof totalBytes == "number" && (contentLengthValue = String(totalBytes));
      }
      contentLengthValue && headers.set("Content-Length", contentLengthValue), headers.has("User-Agent") || headers.set("User-Agent", "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"), request.compress && !headers.has("Accept-Encoding") && headers.set("Accept-Encoding", "gzip,deflate");
      let agent = request.agent;
      return typeof agent == "function" && (agent = agent(parsedURL)), !headers.has("Connection") && !agent && headers.set("Connection", "close"), Object.assign({}, parsedURL, {
        method: request.method,
        headers: exportNodeCompatibleHeaders(headers),
        agent
      });
    }
    function AbortError(message) {
      Error.call(this, message), this.type = "aborted", this.message = message, Error.captureStackTrace(this, this.constructor);
    }
    AbortError.prototype = Object.create(Error.prototype);
    AbortError.prototype.constructor = AbortError;
    AbortError.prototype.name = "AbortError";
    var URL$1 = Url.URL || whatwgUrl.URL, PassThrough$1 = Stream.PassThrough, isDomainOrSubdomain = function(destination, original) {
      let orig = new URL$1(original).hostname, dest = new URL$1(destination).hostname;
      return orig === dest || orig[orig.length - dest.length - 1] === "." && orig.endsWith(dest);
    }, isSameProtocol = function(destination, original) {
      let orig = new URL$1(original).protocol, dest = new URL$1(destination).protocol;
      return orig === dest;
    };
    function fetch2(url, opts) {
      if (!fetch2.Promise)
        throw new Error("native promise missing, set fetch.Promise to your favorite alternative");
      return Body.Promise = fetch2.Promise, new fetch2.Promise(function(resolve, reject) {
        let request = new Request2(url, opts), options2 = getNodeRequestOptions(request), send = (options2.protocol === "https:" ? https : http7).request, signal = request.signal, response = null, abort = function() {
          let error = new AbortError("The user aborted a request.");
          reject(error), request.body && request.body instanceof Stream.Readable && destroyStream(request.body, error), !(!response || !response.body) && response.body.emit("error", error);
        };
        if (signal && signal.aborted) {
          abort();
          return;
        }
        let abortAndFinalize = function() {
          abort(), finalize();
        }, req = send(options2), reqTimeout;
        signal && signal.addEventListener("abort", abortAndFinalize);
        function finalize() {
          req.abort(), signal && signal.removeEventListener("abort", abortAndFinalize), clearTimeout(reqTimeout);
        }
        request.timeout && req.once("socket", function(socket) {
          reqTimeout = setTimeout(function() {
            reject(new FetchError(`network timeout at: ${request.url}`, "request-timeout")), finalize();
          }, request.timeout);
        }), req.on("error", function(err) {
          reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, "system", err)), response && response.body && destroyStream(response.body, err), finalize();
        }), fixResponseChunkedTransferBadEnding(req, function(err) {
          signal && signal.aborted || response && response.body && destroyStream(response.body, err);
        }), parseInt(process.version.substring(1)) < 14 && req.on("socket", function(s2) {
          s2.addListener("close", function(hadError) {
            let hasDataListener = s2.listenerCount("data") > 0;
            if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {
              let err = new Error("Premature close");
              err.code = "ERR_STREAM_PREMATURE_CLOSE", response.body.emit("error", err);
            }
          });
        }), req.on("response", function(res) {
          clearTimeout(reqTimeout);
          let headers = createHeadersLenient(res.headers);
          if (fetch2.isRedirect(res.statusCode)) {
            let location2 = headers.get("Location"), locationURL = null;
            try {
              locationURL = location2 === null ? null : new URL$1(location2, request.url).toString();
            } catch {
              if (request.redirect !== "manual") {
                reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location2}`, "invalid-redirect")), finalize();
                return;
              }
            }
            switch (request.redirect) {
              case "error":
                reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect")), finalize();
                return;
              case "manual":
                if (locationURL !== null)
                  try {
                    headers.set("Location", locationURL);
                  } catch (err) {
                    reject(err);
                  }
                break;
              case "follow":
                if (locationURL === null)
                  break;
                if (request.counter >= request.follow) {
                  reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect")), finalize();
                  return;
                }
                let requestOpts = {
                  headers: new Headers2(request.headers),
                  follow: request.follow,
                  counter: request.counter + 1,
                  agent: request.agent,
                  compress: request.compress,
                  method: request.method,
                  body: request.body,
                  signal: request.signal,
                  timeout: request.timeout,
                  size: request.size
                };
                if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL))
                  for (let name of ["authorization", "www-authenticate", "cookie", "cookie2"])
                    requestOpts.headers.delete(name);
                if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
                  reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect")), finalize();
                  return;
                }
                (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === "POST") && (requestOpts.method = "GET", requestOpts.body = void 0, requestOpts.headers.delete("content-length")), resolve(fetch2(new Request2(locationURL, requestOpts))), finalize();
                return;
            }
          }
          res.once("end", function() {
            signal && signal.removeEventListener("abort", abortAndFinalize);
          });
          let body3 = res.pipe(new PassThrough$1()), response_options = {
            url: request.url,
            status: res.statusCode,
            statusText: res.statusMessage,
            headers,
            size: request.size,
            timeout: request.timeout,
            counter: request.counter
          }, codings = headers.get("Content-Encoding");
          if (!request.compress || request.method === "HEAD" || codings === null || res.statusCode === 204 || res.statusCode === 304) {
            response = new Response5(body3, response_options), resolve(response);
            return;
          }
          let zlibOptions = {
            flush: zlib.Z_SYNC_FLUSH,
            finishFlush: zlib.Z_SYNC_FLUSH
          };
          if (codings == "gzip" || codings == "x-gzip") {
            body3 = body3.pipe(zlib.createGunzip(zlibOptions)), response = new Response5(body3, response_options), resolve(response);
            return;
          }
          if (codings == "deflate" || codings == "x-deflate") {
            let raw3 = res.pipe(new PassThrough$1());
            raw3.once("data", function(chunk) {
              (chunk[0] & 15) === 8 ? body3 = body3.pipe(zlib.createInflate()) : body3 = body3.pipe(zlib.createInflateRaw()), response = new Response5(body3, response_options), resolve(response);
            }), raw3.on("end", function() {
              response || (response = new Response5(body3, response_options), resolve(response));
            });
            return;
          }
          if (codings == "br" && typeof zlib.createBrotliDecompress == "function") {
            body3 = body3.pipe(zlib.createBrotliDecompress()), response = new Response5(body3, response_options), resolve(response);
            return;
          }
          response = new Response5(body3, response_options), resolve(response);
        }), writeToStream(req, request);
      });
    }
    function fixResponseChunkedTransferBadEnding(request, errorCallback) {
      let socket;
      request.on("socket", function(s2) {
        socket = s2;
      }), request.on("response", function(response) {
        let headers = response.headers;
        headers["transfer-encoding"] === "chunked" && !headers["content-length"] && response.once("close", function(hadError) {
          if (socket.listenerCount("data") > 0 && !hadError) {
            let err = new Error("Premature close");
            err.code = "ERR_STREAM_PREMATURE_CLOSE", errorCallback(err);
          }
        });
      });
    }
    function destroyStream(stream, err) {
      stream.destroy ? stream.destroy(err) : (stream.emit("error", err), stream.end());
    }
    fetch2.isRedirect = function(code3) {
      return code3 === 301 || code3 === 302 || code3 === 303 || code3 === 307 || code3 === 308;
    };
    fetch2.Promise = global.Promise;
    module2.exports = exports2 = fetch2;
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    exports2.default = exports2;
    exports2.Headers = Headers2;
    exports2.Request = Request2;
    exports2.Response = Response5;
    exports2.FetchError = FetchError;
  }
});

// node_modules/deprecation/dist-node/index.js
var require_dist_node3 = __commonJS({
  "node_modules/deprecation/dist-node/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var Deprecation = class extends Error {
      constructor(message) {
        super(message), Error.captureStackTrace && Error.captureStackTrace(this, this.constructor), this.name = "Deprecation";
      }
    };
    exports2.Deprecation = Deprecation;
  }
});

// node_modules/wrappy/wrappy.js
var require_wrappy = __commonJS({
  "node_modules/wrappy/wrappy.js"(exports2, module2) {
    module2.exports = wrappy;
    function wrappy(fn, cb) {
      if (fn && cb)
        return wrappy(fn)(cb);
      if (typeof fn != "function")
        throw new TypeError("need wrapper function");
      return Object.keys(fn).forEach(function(k) {
        wrapper[k] = fn[k];
      }), wrapper;
      function wrapper() {
        for (var args = new Array(arguments.length), i = 0; i < args.length; i++)
          args[i] = arguments[i];
        var ret = fn.apply(this, args), cb2 = args[args.length - 1];
        return typeof ret == "function" && ret !== cb2 && Object.keys(cb2).forEach(function(k) {
          ret[k] = cb2[k];
        }), ret;
      }
    }
  }
});

// node_modules/once/once.js
var require_once = __commonJS({
  "node_modules/once/once.js"(exports2, module2) {
    var wrappy = require_wrappy();
    module2.exports = wrappy(once);
    module2.exports.strict = wrappy(onceStrict);
    once.proto = once(function() {
      Object.defineProperty(Function.prototype, "once", {
        value: function() {
          return once(this);
        },
        configurable: !0
      }), Object.defineProperty(Function.prototype, "onceStrict", {
        value: function() {
          return onceStrict(this);
        },
        configurable: !0
      });
    });
    function once(fn) {
      var f = function() {
        return f.called ? f.value : (f.called = !0, f.value = fn.apply(this, arguments));
      };
      return f.called = !1, f;
    }
    function onceStrict(fn) {
      var f = function() {
        if (f.called)
          throw new Error(f.onceError);
        return f.called = !0, f.value = fn.apply(this, arguments);
      }, name = fn.name || "Function wrapped with `once`";
      return f.onceError = name + " shouldn't be called more than once", f.called = !1, f;
    }
  }
});

// node_modules/@octokit/request-error/dist-node/index.js
var require_dist_node4 = __commonJS({
  "node_modules/@octokit/request-error/dist-node/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function _interopDefault(ex) {
      return ex && typeof ex == "object" && "default" in ex ? ex.default : ex;
    }
    var deprecation = require_dist_node3(), once = _interopDefault(require_once()), logOnceCode = once((deprecation2) => console.warn(deprecation2)), logOnceHeaders = once((deprecation2) => console.warn(deprecation2)), RequestError = class extends Error {
      constructor(message, statusCode, options2) {
        super(message), Error.captureStackTrace && Error.captureStackTrace(this, this.constructor), this.name = "HttpError", this.status = statusCode;
        let headers;
        "headers" in options2 && typeof options2.headers < "u" && (headers = options2.headers), "response" in options2 && (this.response = options2.response, headers = options2.response.headers);
        let requestCopy = Object.assign({}, options2.request);
        options2.request.headers.authorization && (requestCopy.headers = Object.assign({}, options2.request.headers, {
          authorization: options2.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
        })), requestCopy.url = requestCopy.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]"), this.request = requestCopy, Object.defineProperty(this, "code", {
          get() {
            return logOnceCode(new deprecation.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")), statusCode;
          }
        }), Object.defineProperty(this, "headers", {
          get() {
            return logOnceHeaders(new deprecation.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")), headers || {};
          }
        });
      }
    };
    exports2.RequestError = RequestError;
  }
});

// node_modules/@octokit/request/dist-node/index.js
var require_dist_node5 = __commonJS({
  "node_modules/@octokit/request/dist-node/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    function _interopDefault(ex) {
      return ex && typeof ex == "object" && "default" in ex ? ex.default : ex;
    }
    var endpoint = require_dist_node2(), universalUserAgent = require_dist_node(), isPlainObject2 = require_is_plain_object(), nodeFetch = _interopDefault(require_lib5()), requestError = require_dist_node4(), VERSION = "6.2.3";
    function getBufferResponse(response) {
      return response.arrayBuffer();
    }
    function fetchWrapper(requestOptions) {
      let log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;
      (isPlainObject2.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) && (requestOptions.body = JSON.stringify(requestOptions.body));
      let headers = {}, status, url;
      return (requestOptions.request && requestOptions.request.fetch || globalThis.fetch || nodeFetch)(requestOptions.url, Object.assign(
        {
          method: requestOptions.method,
          body: requestOptions.body,
          headers: requestOptions.headers,
          redirect: requestOptions.redirect
        },
        requestOptions.request
      )).then(async (response) => {
        url = response.url, status = response.status;
        for (let keyAndValue of response.headers)
          headers[keyAndValue[0]] = keyAndValue[1];
        if ("deprecation" in headers) {
          let matches = headers.link && headers.link.match(/<([^>]+)>; rel="deprecation"/), deprecationLink = matches && matches.pop();
          log.warn(`[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`);
        }
        if (!(status === 204 || status === 205)) {
          if (requestOptions.method === "HEAD") {
            if (status < 400)
              return;
            throw new requestError.RequestError(response.statusText, status, {
              response: {
                url,
                status,
                headers,
                data: void 0
              },
              request: requestOptions
            });
          }
          if (status === 304)
            throw new requestError.RequestError("Not modified", status, {
              response: {
                url,
                status,
                headers,
                data: await getResponseData(response)
              },
              request: requestOptions
            });
          if (status >= 400) {
            let data = await getResponseData(response);
            throw new requestError.RequestError(toErrorMessage(data), status, {
              response: {
                url,
                status,
                headers,
                data
              },
              request: requestOptions
            });
          }
          return getResponseData(response);
        }
      }).then((data) => ({
        status,
        url,
        headers,
        data
      })).catch((error) => {
        throw error instanceof requestError.RequestError || error.name === "AbortError" ? error : new requestError.RequestError(error.message, 500, {
          request: requestOptions
        });
      });
    }
    async function getResponseData(response) {
      let contentType = response.headers.get("content-type");
      return /application\/json/.test(contentType) ? response.json() : !contentType || /^text\/|charset=utf-8$/.test(contentType) ? response.text() : getBufferResponse(response);
    }
    function toErrorMessage(data) {
      return typeof data == "string" ? data : "message" in data ? Array.isArray(data.errors) ? `${data.message}: ${data.errors.map(JSON.stringify).join(", ")}` : data.message : `Unknown error: ${JSON.stringify(data)}`;
    }
    function withDefaults(oldEndpoint, newDefaults) {
      let endpoint2 = oldEndpoint.defaults(newDefaults);
      return Object.assign(function(route, parameters) {
        let endpointOptions = endpoint2.merge(route, parameters);
        if (!endpointOptions.request || !endpointOptions.request.hook)
          return fetchWrapper(endpoint2.parse(endpointOptions));
        let request2 = (route2, parameters2) => fetchWrapper(endpoint2.parse(endpoint2.merge(route2, parameters2)));
        return Object.assign(request2, {
          endpoint: endpoint2,
          defaults: withDefaults.bind(null, endpoint2)
        }), endpointOptions.request.hook(request2, endpointOptions);
      }, {
        endpoint: endpoint2,
        defaults: withDefaults.bind(null, endpoint2)
      });
    }
    var request = withDefaults(endpoint.endpoint, {
      headers: {
        "user-agent": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`
      }
    });
    exports2.request = request;
  }
});

// node_modules/@octokit/graphql/dist-node/index.js
var require_dist_node6 = __commonJS({
  "node_modules/@octokit/graphql/dist-node/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var request = require_dist_node5(), universalUserAgent = require_dist_node(), VERSION = "5.0.5";
    function _buildMessageForResponseErrors(data) {
      return `Request failed due to following response errors:
` + data.errors.map((e) => ` - ${e.message}`).join(`
`);
    }
    var GraphqlResponseError = class extends Error {
      constructor(request2, headers, response) {
        super(_buildMessageForResponseErrors(response)), this.request = request2, this.headers = headers, this.response = response, this.name = "GraphqlResponseError", this.errors = response.errors, this.data = response.data, Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
      }
    }, NON_VARIABLE_OPTIONS = ["method", "baseUrl", "url", "headers", "request", "query", "mediaType"], FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"], GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
    function graphql3(request2, query, options2) {
      if (options2) {
        if (typeof query == "string" && "query" in options2)
          return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));
        for (let key2 in options2)
          if (!!FORBIDDEN_VARIABLE_OPTIONS.includes(key2))
            return Promise.reject(new Error(`[@octokit/graphql] "${key2}" cannot be used as variable name`));
      }
      let parsedOptions = typeof query == "string" ? Object.assign({
        query
      }, options2) : query, requestOptions = Object.keys(parsedOptions).reduce((result, key2) => NON_VARIABLE_OPTIONS.includes(key2) ? (result[key2] = parsedOptions[key2], result) : (result.variables || (result.variables = {}), result.variables[key2] = parsedOptions[key2], result), {}), baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;
      return GHES_V3_SUFFIX_REGEX.test(baseUrl) && (requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql")), request2(requestOptions).then((response) => {
        if (response.data.errors) {
          let headers = {};
          for (let key2 of Object.keys(response.headers))
            headers[key2] = response.headers[key2];
          throw new GraphqlResponseError(requestOptions, headers, response.data);
        }
        return response.data.data;
      });
    }
    function withDefaults(request2, newDefaults) {
      let newRequest = request2.defaults(newDefaults);
      return Object.assign((query, options2) => graphql3(newRequest, query, options2), {
        defaults: withDefaults.bind(null, newRequest),
        endpoint: newRequest.endpoint
      });
    }
    var graphql$1 = withDefaults(request.request, {
      headers: {
        "user-agent": `octokit-graphql.js/${VERSION} ${universalUserAgent.getUserAgent()}`
      },
      method: "POST",
      url: "/graphql"
    });
    function withCustomRequest(customRequest) {
      return withDefaults(customRequest, {
        method: "POST",
        url: "/graphql"
      });
    }
    exports2.GraphqlResponseError = GraphqlResponseError;
    exports2.graphql = graphql$1;
    exports2.withCustomRequest = withCustomRequest;
  }
});

// node_modules/@remix-run/vercel/dist/globals.js
var require_globals2 = __commonJS({
  "node_modules/@remix-run/vercel/dist/globals.js"() {
    "use strict";
    var node2 = require_dist4();
    node2.installGlobals();
  }
});

// node_modules/@remix-run/vercel/dist/server.js
var require_server4 = __commonJS({
  "node_modules/@remix-run/vercel/dist/server.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    var node2 = require_dist4();
    function createRequestHandler2({
      build,
      getLoadContext,
      mode = "production"
    }) {
      let handleRequest2 = node2.createRequestHandler(build, mode);
      return async (req, res) => {
        let request = createRemixRequest(req, res), loadContext = getLoadContext == null ? void 0 : getLoadContext(req, res), response = await handleRequest2(request, loadContext);
        await sendRemixResponse(res, response);
      };
    }
    function createRemixHeaders(requestHeaders) {
      let headers = new node2.Headers();
      for (let key2 in requestHeaders) {
        let header = requestHeaders[key2];
        if (Array.isArray(header))
          for (let value of header)
            headers.append(key2, value);
        else
          headers.append(key2, header);
      }
      return headers;
    }
    function createRemixRequest(req, res) {
      let host = req.headers["x-forwarded-host"] || req.headers.host, protocol = req.headers["x-forwarded-proto"] || "https", url = new URL(`${protocol}://${host}${req.url}`), controller = new node2.AbortController();
      res.on("close", () => controller.abort());
      let init = {
        method: req.method,
        headers: createRemixHeaders(req.headers),
        signal: controller.signal
      };
      return req.method !== "GET" && req.method !== "HEAD" && (init.body = req), new node2.Request(url.href, init);
    }
    async function sendRemixResponse(res, nodeResponse) {
      res.statusMessage = nodeResponse.statusText;
      let multiValueHeaders = nodeResponse.headers.raw();
      res.writeHead(nodeResponse.status, nodeResponse.statusText, multiValueHeaders), nodeResponse.body ? await node2.writeReadableStreamToWritable(nodeResponse.body, res) : res.end();
    }
    exports2.createRemixHeaders = createRemixHeaders;
    exports2.createRemixRequest = createRemixRequest;
    exports2.createRequestHandler = createRequestHandler2;
    exports2.sendRemixResponse = sendRemixResponse;
  }
});

// node_modules/@remix-run/vercel/dist/index.js
var require_dist6 = __commonJS({
  "node_modules/@remix-run/vercel/dist/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: !0 });
    require_globals2();
    var server = require_server4();
    exports2.createRequestHandler = server.createRequestHandler;
  }
});

// server.js
var server_exports = {};
__export(server_exports, {
  default: () => server_default
});
module.exports = __toCommonJS(server_exports);

// server-entry-module:@remix-run/dev/server-build
var server_build_exports = {};
__export(server_build_exports, {
  assets: () => assets_manifest_default,
  assetsBuildDirectory: () => assetsBuildDirectory,
  entry: () => entry,
  future: () => future,
  publicPath: () => publicPath,
  routes: () => routes
});

// src/entry.server.tsx
var entry_server_exports = {};
__export(entry_server_exports, {
  default: () => handleRequest,
  handleDataRequest: () => handleDataRequest
});
var import_react = __toESM(require_dist()), import_server = __toESM(require_server_node()), import_jsx_runtime = __toESM(require_jsx_runtime());
function handleRequest(request, responseStatusCode, responseHeaders, remixContext) {
  let markup = (0, import_server.renderToString)(
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react.RemixServer, { context: remixContext, url: request.url })
  );
  return responseHeaders.set("Content-Type", "text/html"), new Response("<!DOCTYPE html>" + markup, {
    status: responseStatusCode,
    headers: responseHeaders
  });
}
var handleDataRequest = (response) => (response.headers.set("x-custom", "yay!"), response);

// src/routes/api/subscribe.ts
var subscribe_exports = {};
__export(subscribe_exports, {
  action: () => action
});
var import_http = __toESM(require_dist2()), import_node = __toESM(require_dist4()), action = async ({ request }) => {
  let { email } = await request.json(), apiKey = process.env.REVUE_API_KEY, subscriber = await import_http.http.post(
    "https://www.getrevue.co/api/v2/subscribers",
    {
      headers: {
        Authorization: `Token ${apiKey}`
      },
      body: {
        email,
        double_opt_in: !1
      }
    }
  );
  return (0, import_node.json)({ subscriber });
};

// src/root.tsx
var root_exports = {};
__export(root_exports, {
  default: () => root_default,
  links: () => links,
  meta: () => meta
});
var import_react2 = __toESM(require_dist());

// src/styles/global.css
var global_default = "/build/_assets/global-EEP4FEO5.css";

// src/utils/cloudinary.ts
var createImageUrl = (location2) => {
  if (location2.startsWith("/"))
    return createInternalImageUrl(location2);
  if (location2.startsWith("http://") || location2.startsWith("https://"))
    return createExternalImageUrl(location2);
  throw new Error(
    `Image location is not an internal path or an external url: ${location2}`
  );
}, createInternalImageUrl = (path6) => `https://res.cloudinary.com/bradgarropy/image/upload/f_auto,q_auto/bradgarropy.com${path6}`, createExternalImageUrl = (url) => `https://res.cloudinary.com/bradgarropy/image/fetch/f_auto,q_auto/${url}`, createYouTubeUrl = (id) => `https://res.cloudinary.com/bradgarropy/image/youtube/f_auto,q_auto/${id}.jpg`;

// package.json
var package_default = {
  name: "bradgarropy.com",
  version: "7.0.0",
  description: "\u{1F3E0} my home on the web",
  keywords: [
    "javascript",
    "react",
    "remix",
    "eslint",
    "prettier",
    "jest",
    "blog",
    "portfolio",
    "hacktoberfest",
    "vercel",
    "cloudinary",
    "tailwind"
  ],
  homepage: "https://bradgarropy.com",
  bugs: {
    url: "https://github.com/bradgarropy/bradgarropy.com/issues"
  },
  license: "MIT",
  author: {
    name: "Brad Garropy",
    email: "bradgarropy@gmail.com",
    url: "https://bradgarropy.com"
  },
  repository: {
    type: "git",
    url: "https://github.com/bradgarropy/bradgarropy.com"
  },
  scripts: {
    start: "remix dev",
    build: "remix build",
    lint: "eslint .",
    "lint:fix": "eslint --fix .",
    format: "prettier --check .",
    "format:fix": "prettier --write .",
    typecheck: "tsc",
    test: "jest --passWithNoTests",
    "test:watch": "jest --passWithNoTests --watch",
    contributors: "all-contributors generate",
    new: "plop"
  },
  dependencies: {
    "@bradgarropy/captivate-sdk": "^0.4.0",
    "@bradgarropy/http": "^2.0.0",
    "@bradgarropy/next-google-analytics": "^1.0.0",
    "@bradgarropy/rehype-cloudinary-image-size": "^1.0.0",
    "@bradgarropy/rehype-image-links": "^1.0.0",
    "@octokit/graphql": "^5.0.1",
    "@remark-embedder/core": "^3.0.1",
    "@remix-run/node": "^1.14.0",
    "@remix-run/react": "^1.14.0",
    "@remix-run/vercel": "^1.14.0",
    "@vercel/node": "^2.6.2",
    classnames: "^2.3.1",
    "date-fns": "^2.27.0",
    "form-data": "^4.0.0",
    "fuse.js": "^6.4.3",
    "gatsby-remark-vscode": "^3.3.0",
    "gray-matter": "^4.0.3",
    "hast-util-is-element": "^2.1.2",
    isbot: "latest",
    react: "^18.2.0",
    "react-dom": "^18.2.0",
    "react-helmet": "^6.0.0",
    "rehype-external-links": "^2.0.1",
    "rehype-img-size": "^1.0.1",
    "rehype-parse": "^8.0.3",
    "rehype-raw": "^6.1.0",
    "rehype-react": "^7.0.4",
    "rehype-stringify": "^9.0.2",
    "remark-gfm": "^3.0.1",
    "remark-inline-links": "^6.0.1",
    "remark-parse": "^10.0.1",
    "remark-rehype": "^10.1.0",
    "remark-unwrap-images": "^3.0.1",
    "shades-of-purple": "^6.11.0",
    slugify: "^1.6.5",
    unified: "^10.1.1",
    "unist-util-visit": "^4.1.1"
  },
  devDependencies: {
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-react": "^7.18.6",
    "@babel/preset-typescript": "^7.21.0",
    "@bradgarropy/eslint-config": "^1.1.0",
    "@bradgarropy/eslint-config-react": "^1.0.0",
    "@bradgarropy/eslint-config-typescript": "^1.0.2",
    "@bradgarropy/plop-generator-react-component": "^1.1.1",
    "@bradgarropy/plop-generator-react-context": "^1.1.0",
    "@bradgarropy/plop-generator-react-hook": "^1.1.0",
    "@remix-run/dev": "^1.14.0",
    "@remix-run/eslint-config": "^1.14.0",
    "@remix-run/serve": "^1.14.0",
    "@tailwindcss/typography": "^0.5.9",
    "@testing-library/jest-dom": "^5.15.0",
    "@testing-library/react": "^14.0.0",
    "@testing-library/user-event": "^14.4.3",
    "@types/jest": "^29.4.0",
    "@types/node": "^18.7.21",
    "@types/react": "^18.0.25",
    "@types/react-dom": "^18.0.8",
    "@typescript-eslint/eslint-plugin": "^5.4.0",
    "@typescript-eslint/parser": "^5.4.0",
    "all-contributors-cli": "^6.20.0",
    autoprefixer: "^10.4.12",
    "babel-jest": "^29.5.0",
    eslint: "^8.27.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-react": "^7.27.0",
    "eslint-plugin-react-hooks": "^4.3.0",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "identity-obj-proxy": "^3.0.0",
    jest: "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    plop: "^2.7.6",
    "plop-helper-bradgarropy": "^1.0.0",
    "plop-helper-date": "^1.0.0",
    "plop-helper-slugify": "^1.1.0",
    postcss: "^8.4.18",
    prettier: "^2.8.4",
    "prettier-plugin-tailwindcss": "^0.2.2",
    tailwindcss: "^3.2.0",
    typescript: "^4.8.4"
  }
};

// src/root.tsx
var import_jsx_runtime2 = __toESM(require_jsx_runtime()), meta = () => ({
  title: "\u{1F3E0} my home on the web",
  keywords: package_default.keywords.join(","),
  charset: "utf-8",
  viewport: "width=device-width,initial-scale=1",
  "og:url": "https://bradgarropy.com",
  "og:type": "website",
  "og:title": "\u{1F3E0} my home on the web",
  "og:image": createImageUrl("/social/facebook.png"),
  "twitter:card": "summary",
  "twitter:site": "@bradgarropy",
  "twitter:title": "\u{1F3E0} my home on the web",
  "twitter:image": createImageUrl("/social/twitter.png")
}), links = () => [
  {
    rel: "stylesheet",
    href: global_default
  },
  {
    rel: "preconnect",
    href: "https://fonts.googleapis.com"
  },
  {
    rel: "preconnect",
    href: "https://fonts.gstatic.com",
    crossOrigin: "anonymous"
  },
  {
    rel: "stylesheet",
    href: "https://fonts.googleapis.com/css2?family=Righteous&family=Open+Sans:wght@400;500;600;700;800&family=Montserrat:wght@400;500;600;700;800;900&display=swap"
  },
  {
    rel: "icon",
    href: createImageUrl("/site/favicon.ico")
  }
], App = () => /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("html", { lang: "en", children: [
  /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("head", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react2.Meta, {}),
    /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react2.Links, {})
  ] }),
  /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("body", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react2.Outlet, {}),
    /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react2.ScrollRestoration, {}),
    /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react2.Scripts, {}),
    /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react2.LiveReload, {})
  ] })
] }), root_default = App;

// src/routes/topic/$name.tsx
var name_exports = {};
__export(name_exports, {
  default: () => name_default,
  loader: () => loader,
  meta: () => meta2
});
var import_node2 = __toESM(require_dist4()), import_node3 = __toESM(require_dist4()), import_react17 = __toESM(require_dist());

// src/components/SocialLink/SocialLink.tsx
var import_react3 = __toESM(require_dist());

// src/components/Icons/CloseIcon.tsx
var import_jsx_runtime3 = __toESM(require_jsx_runtime()), CloseIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "close",
    viewBox: "0 0 24 24",
    width: "24",
    fill: "none",
    stroke: "currentColor",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
      "path",
      {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "2",
        d: "M6 18L18 6M6 6l12 12"
      }
    )
  }
), CloseIcon_default = CloseIcon;

// src/components/Icons/DiscordIcon.tsx
var import_jsx_runtime4 = __toESM(require_jsx_runtime()), DiscordIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "discord",
    viewBox: "0 0 71 55",
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("g", { clipPath: "url(#clip0)", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("path", { d: "M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.28 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z" }) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("defs", { children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("clipPath", { id: "clip0", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("rect", { width: "71", height: "55" }) }) })
    ]
  }
), DiscordIcon_default = DiscordIcon;

// src/components/Icons/GatsbyIcon.tsx
var import_jsx_runtime5 = __toESM(require_jsx_runtime()), GatsbyIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "gatsby",
    viewBox: "0 0 28 28",
    width: "24",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("g", { id: "monogram", children: [
      /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("circle", { cx: "14", cy: "14", r: "14", style: { fill: "#639" } }),
      /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("g", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
          "path",
          {
            d: "M6.2,21.8C4.1,19.7,3,16.9,3,14.2L13.9,25C11.1,24.9,8.3,23.9,6.2,21.8z",
            style: { fill: "#fff" }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
          "path",
          {
            d: "M16.4,24.7L3.3,11.6C4.4,6.7,8.8,3,14,3c3.7,0,6.9,1.8,8.9,4.5l-1.5,1.3C19.7,6.5,17,5,14,5 c-3.9,0-7.2,2.5-8.5,6L17,22.5c2.9-1,5.1-3.5,5.8-6.5H18v-2h7C25,19.2,21.3,23.6,16.4,24.7z",
            style: { fill: "#fff" }
          }
        )
      ] })
    ] })
  }
), GatsbyIcon_default = GatsbyIcon;

// src/components/Icons/GithubIcon.tsx
var import_jsx_runtime6 = __toESM(require_jsx_runtime()), GithubIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "github",
    viewBox: "0 0 514 500",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("path", { d: "M172.328 402.599C172.328 404.667 169.95 406.321 166.952 406.321C163.54 406.631 161.162 404.977 161.162 402.599C161.162 400.531 163.54 398.877 166.539 398.877C169.64 398.567 172.328 400.221 172.328 402.599ZM140.174 397.947C139.45 400.015 141.518 402.392 144.62 403.013C147.308 404.047 150.41 403.013 151.03 400.945C151.65 398.877 149.686 396.499 146.584 395.569C143.896 394.845 140.898 395.879 140.174 397.947ZM185.872 396.189C182.874 396.913 180.806 398.877 181.116 401.255C181.427 403.323 184.115 404.667 187.216 403.943C190.215 403.22 192.283 401.255 191.972 399.187C191.662 397.223 188.871 395.879 185.872 396.189ZM253.903 0C110.501 0 0.804932 108.869 0.804932 252.271C0.804932 366.93 72.9709 465.047 176.05 499.579C189.284 501.957 193.937 493.789 193.937 487.069C193.937 480.658 193.627 445.299 193.627 423.587C193.627 423.587 121.254 439.096 106.056 392.777C106.056 392.777 94.2692 362.691 77.3133 354.937C77.3133 354.937 53.637 338.704 78.9675 339.015C78.9675 339.015 104.712 341.082 118.876 365.689C141.518 405.598 179.462 394.121 194.247 387.298C196.625 370.755 203.345 359.279 210.789 352.455C152.994 346.045 94.6827 337.671 94.6827 238.21C94.6827 209.778 102.54 195.51 119.083 177.313C116.395 170.593 107.606 142.884 121.771 107.112C143.379 100.391 193.11 135.027 193.11 135.027C213.788 129.237 236.016 126.239 258.038 126.239C280.06 126.239 302.289 129.237 322.967 135.027C322.967 135.027 372.697 100.288 394.306 107.112C408.47 142.988 399.682 170.593 396.994 177.313C413.536 195.613 423.669 209.881 423.669 238.21C423.669 337.981 362.772 345.942 304.977 352.455C314.489 360.623 322.554 376.132 322.554 400.428C322.554 435.27 322.243 478.384 322.243 486.862C322.243 493.582 326.999 501.75 340.13 499.372C443.519 465.047 513.618 366.93 513.618 252.271C513.618 108.869 397.304 0 253.903 0ZM101.3 356.591C99.9556 357.625 100.266 360.003 102.023 361.967C103.678 363.621 106.056 364.345 107.4 363.001C108.744 361.967 108.434 359.589 106.676 357.625C105.022 355.971 102.644 355.247 101.3 356.591ZM90.1336 348.216C89.4099 349.56 90.4437 351.215 92.5115 352.249C94.1658 353.282 96.2336 352.972 96.9573 351.525C97.681 350.181 96.6471 348.526 94.5793 347.493C92.5115 346.872 90.8573 347.182 90.1336 348.216ZM123.632 385.023C121.978 386.367 122.598 389.469 124.976 391.433C127.354 393.811 130.352 394.121 131.696 392.467C133.04 391.123 132.42 388.021 130.352 386.057C128.078 383.679 124.976 383.369 123.632 385.023ZM111.845 369.825C110.191 370.859 110.191 373.547 111.845 375.925C113.5 378.303 116.291 379.337 117.635 378.303C119.289 376.959 119.289 374.271 117.635 371.893C116.188 369.515 113.5 368.481 111.845 369.825Z" })
  }
), GithubIcon_default = GithubIcon;

// src/components/Icons/InstagramIcon.tsx
var import_jsx_runtime7 = __toESM(require_jsx_runtime()), InstagramIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "instagram",
    viewBox: "0 0 501 501",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime7.jsx)("path", { d: "M250.154 121.83C179.184 121.83 121.939 179.077 121.939 250.049C121.939 321.021 179.184 378.268 250.154 378.268C321.124 378.268 378.369 321.021 378.369 250.049C378.369 179.077 321.124 121.83 250.154 121.83ZM250.154 333.408C204.291 333.408 166.797 296.025 166.797 250.049C166.797 204.073 204.179 166.69 250.154 166.69C296.128 166.69 333.511 204.073 333.511 250.049C333.511 296.025 296.017 333.408 250.154 333.408ZM413.52 116.585C413.52 133.213 400.129 146.492 383.614 146.492C366.987 146.492 353.708 133.101 353.708 116.585C353.708 100.07 367.099 86.6788 383.614 86.6788C400.129 86.6788 413.52 100.07 413.52 116.585ZM498.439 146.938C496.542 106.877 487.391 71.3908 458.044 42.1538C428.807 12.9167 393.322 3.76622 353.262 1.75757C311.974 -0.585856 188.222 -0.585856 146.934 1.75757C106.986 3.65463 71.5004 12.8051 42.1526 42.0422C12.8048 71.2792 3.76612 106.765 1.75752 146.827C-0.58584 188.116 -0.58584 311.871 1.75752 353.16C3.65453 393.221 12.8048 428.707 42.1526 457.944C71.5004 487.181 106.874 496.332 146.934 498.341C188.222 500.684 311.974 500.684 353.262 498.341C393.322 496.443 428.807 487.293 458.044 457.944C487.28 428.707 496.43 393.221 498.439 353.16C500.782 311.871 500.782 188.227 498.439 146.938ZM445.099 397.462C436.395 419.334 419.546 436.184 397.563 445C364.644 458.056 286.532 455.043 250.154 455.043C213.776 455.043 135.552 457.944 102.745 445C80.8739 436.296 64.024 419.445 55.2085 397.462C42.1526 364.542 45.1655 286.428 45.1655 250.049C45.1655 213.67 42.2642 135.444 55.2085 102.636C63.9124 80.7645 80.7623 63.9141 102.745 55.0984C135.664 42.0422 213.776 45.0551 250.154 45.0551C286.532 45.0551 364.755 42.1538 397.563 55.0984C419.434 63.8025 436.284 80.6529 445.099 102.636C458.155 135.556 455.142 213.67 455.142 250.049C455.142 286.428 458.155 364.654 445.099 397.462Z" })
  }
), InstagramIcon_default = InstagramIcon;

// src/components/Icons/JavascriptIcon.tsx
var import_jsx_runtime8 = __toESM(require_jsx_runtime()), JavascriptIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime8.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "javascript",
    viewBox: "0 0 256 256",
    width: "24",
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(
        "path",
        {
          fill: "#F8DC1C",
          d: "M228.571 0H27.4286C12.2857 0 0 12.2857 0 27.4286V228.571C0 243.714 12.2857 256 27.4286 256H228.571C243.714 256 256 243.714 256 228.571V27.4286C256 12.2857 243.714 0 228.571 0ZM139.314 199.657C139.314 224.571 124.686 235.943 103.371 235.943C84.1143 235.943 72.9714 226 67.2571 213.943L86.8571 202.114C90.6286 208.8 94.0571 214.457 102.343 214.457C110.229 214.457 115.257 211.371 115.257 199.314V117.543H139.314V199.657V199.657ZM196.229 235.943C173.886 235.943 159.429 225.314 152.4 211.371L172 200.057C177.143 208.457 183.886 214.686 195.714 214.686C205.657 214.686 212.057 209.714 212.057 202.8C212.057 194.571 205.543 191.657 194.514 186.8L188.514 184.229C171.143 176.857 159.657 167.543 159.657 147.943C159.657 129.886 173.429 116.171 194.857 116.171C210.171 116.171 221.143 121.486 229.029 135.429L210.286 147.429C206.171 140.057 201.714 137.143 194.8 137.143C187.771 137.143 183.314 141.6 183.314 147.429C183.314 154.629 187.771 157.543 198.114 162.057L204.114 164.629C224.571 173.371 236.057 182.343 236.057 202.457C236.057 224.057 219.029 235.943 196.229 235.943V235.943Z"
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(
        "path",
        {
          fill: "#000",
          d: "M67.312 213.932L86.902 202.076C90.682 208.777 94.12 214.447 102.367 214.447C110.272 214.447 115.257 211.355 115.257 199.327V117.529H139.314V199.667C139.314 224.584 124.708 235.926 103.398 235.926C84.153 235.926 72.982 225.959 67.311 213.93L67.312 213.932ZM152.381 211.354L171.969 200.013C177.126 208.434 183.828 214.62 195.684 214.62C205.653 214.62 212.009 209.636 212.009 202.762C212.009 194.514 205.479 191.592 194.481 186.782L188.468 184.202C171.111 176.815 159.598 167.535 159.598 147.945C159.598 129.901 173.345 116.153 194.826 116.153C210.12 116.153 221.118 121.481 229.022 135.4L210.29 147.43C206.165 140.041 201.699 137.12 194.825 137.12C187.779 137.12 183.311 141.588 183.311 147.43C183.311 154.647 187.779 157.57 198.089 162.038L204.103 164.615C224.553 173.38 236.066 182.315 236.066 202.419C236.066 224.073 219.054 235.929 196.199 235.929C173.86 235.929 159.425 225.275 152.38 211.355"
        }
      )
    ]
  }
), JavascriptIcon_default = JavascriptIcon;

// src/components/Icons/LinkIcon.tsx
var import_jsx_runtime9 = __toESM(require_jsx_runtime()), LinkIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "link",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
      "path",
      {
        d: "M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "2"
      }
    )
  }
), LinkIcon_default = LinkIcon;

// src/components/Icons/MenuIcon.tsx
var import_jsx_runtime10 = __toESM(require_jsx_runtime()), MenuIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "menu",
    viewBox: "0 0 24 24",
    width: "24",
    fill: "none",
    stroke: "currentColor",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(
      "path",
      {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "2",
        d: "M4 6h16M4 12h16M4 18h16"
      }
    )
  }
), MenuIcon_default = MenuIcon;

// src/components/Icons/MoonIcon.tsx
var import_jsx_runtime11 = __toESM(require_jsx_runtime()), MoonIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "moon",
    viewBox: "0 0 24 24",
    width: "24",
    fill: "none",
    stroke: "currentColor",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(
      "path",
      {
        d: "M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "2"
      }
    )
  }
), MoonIcon_default = MoonIcon;

// src/components/Icons/NextIcon.tsx
var import_jsx_runtime12 = __toESM(require_jsx_runtime()), NextIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "next",
    viewBox: "0 0 48 48",
    height: "24",
    fill: "currentColor",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime12.jsx)("path", { d: "M22.428.013c-.103.01-.431.042-.727.066C14.883.693 8.497 4.37 4.453 10.024A23.754 23.754 0 0 0 .216 20.51C.023 21.828 0 22.217 0 24.005c0 1.787.023 2.177.216 3.495 1.304 9.012 7.718 16.584 16.417 19.39 1.558.501 3.2.844 5.068 1.05.727.08 3.87.08 4.598 0 3.224-.356 5.954-1.154 8.648-2.529.412-.21.492-.267.436-.314-.038-.028-1.797-2.388-3.909-5.24l-3.838-5.184-4.809-7.117c-2.646-3.913-4.824-7.112-4.842-7.112-.019-.005-.038 3.157-.047 7.018-.014 6.76-.019 7.033-.103 7.192-.122.23-.216.324-.413.427-.15.075-.282.09-.99.09h-.812l-.216-.137a.878.878 0 0 1-.314-.342l-.099-.211.01-9.407.014-9.41.145-.184c.075-.098.235-.225.347-.286.193-.094.268-.103 1.08-.103.957 0 1.116.038 1.365.31.07.075 2.674 3.997 5.79 8.721s7.376 11.175 9.469 14.342l3.8 5.756.192-.127c1.704-1.107 3.505-2.683 4.932-4.325a23.888 23.888 0 0 0 5.65-12.268c.192-1.319.215-1.708.215-3.495 0-1.788-.023-2.177-.216-3.495-1.304-9.013-7.718-16.584-16.417-19.39C29.832.623 28.199.28 26.369.074c-.45-.047-3.551-.099-3.94-.061zm9.825 14.515a.947.947 0 0 1 .474.554c.038.122.047 2.73.038 8.608l-.014 8.436-1.488-2.28-1.492-2.28v-6.132c0-3.964.019-6.193.047-6.3a.957.957 0 0 1 .465-.592c.192-.098.262-.108 1-.108.694 0 .816.01.97.094z" })
  }
), NextIcon_default = NextIcon;

// src/components/Icons/NodeIcon.tsx
var import_jsx_runtime13 = __toESM(require_jsx_runtime()), NodeIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "node",
    viewBox: "0 0 448 512",
    width: "24",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(
      "path",
      {
        fill: "#393",
        d: "M224 508c-6.7 0-13.5-1.8-19.4-5.2l-61.7-36.5c-9.2-5.2-4.7-7-1.7-8 12.3-4.3 14.8-5.2 27.9-12.7 1.4-.8 3.2-.5 4.6.4l47.4 28.1c1.7 1 4.1 1 5.7 0l184.7-106.6c1.7-1 2.8-3 2.8-5V149.3c0-2.1-1.1-4-2.9-5.1L226.8 37.7c-1.7-1-4-1-5.7 0L36.6 144.3c-1.8 1-2.9 3-2.9 5.1v213.1c0 2 1.1 4 2.9 4.9l50.6 29.2c27.5 13.7 44.3-2.4 44.3-18.7V167.5c0-3 2.4-5.3 5.4-5.3h23.4c2.9 0 5.4 2.3 5.4 5.3V378c0 36.6-20 57.6-54.7 57.6-10.7 0-19.1 0-42.5-11.6l-48.4-27.9C8.1 389.2.7 376.3.7 362.4V149.3c0-13.8 7.4-26.8 19.4-33.7L204.6 9c11.7-6.6 27.2-6.6 38.8 0l184.7 106.7c12 6.9 19.4 19.8 19.4 33.7v213.1c0 13.8-7.4 26.7-19.4 33.7L243.4 502.8c-5.9 3.4-12.6 5.2-19.4 5.2zm149.1-210.1c0-39.9-27-50.5-83.7-58-57.4-7.6-63.2-11.5-63.2-24.9 0-11.1 4.9-25.9 47.4-25.9 37.9 0 51.9 8.2 57.7 33.8.5 2.4 2.7 4.2 5.2 4.2h24c1.5 0 2.9-.6 3.9-1.7s1.5-2.6 1.4-4.1c-3.7-44.1-33-64.6-92.2-64.6-52.7 0-84.1 22.2-84.1 59.5 0 40.4 31.3 51.6 81.8 56.6 60.5 5.9 65.2 14.8 65.2 26.7 0 20.6-16.6 29.4-55.5 29.4-48.9 0-59.6-12.3-63.2-36.6-.4-2.6-2.6-4.5-5.3-4.5h-23.9c-3 0-5.3 2.4-5.3 5.3 0 31.1 16.9 68.2 97.8 68.2 58.4-.1 92-23.2 92-63.4z"
      }
    )
  }
), NodeIcon_default = NodeIcon;

// src/components/Icons/ReactIcon.tsx
var import_jsx_runtime14 = __toESM(require_jsx_runtime()), ReactIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "react",
    viewBox: "-11.5 -10.232 23 20.463",
    height: "24",
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("circle", { cx: "0", cy: "0", r: "2.05", fill: "#61dafb" }),
      /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)("g", { fill: "none", stroke: "#61dafb", strokeWidth: "1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("ellipse", { rx: "11", ry: "4.2" }),
        /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("ellipse", { rx: "11", ry: "4.2", transform: "rotate(60)" }),
        /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("ellipse", { rx: "11", ry: "4.2", transform: "rotate(120)" })
      ] })
    ]
  }
), ReactIcon_default = ReactIcon;

// src/components/Icons/SunIcon.tsx
var import_jsx_runtime15 = __toESM(require_jsx_runtime()), SunIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime15.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "sun",
    viewBox: "0 0 24 24",
    width: "24",
    fill: "none",
    stroke: "currentColor",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime15.jsx)(
      "path",
      {
        d: "M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "2"
      }
    )
  }
), SunIcon_default = SunIcon;

// src/components/Icons/SvelteIcon.tsx
var import_jsx_runtime16 = __toESM(require_jsx_runtime()), SvelteIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "svelte",
    viewBox: "0 0 94 113",
    height: "24",
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
        "path",
        {
          fill: "#FF3E00",
          d: "M87.73 15.39C77.33 0.509993 56.79 -3.90001 41.94 5.55999L15.86 22.18C12.3401 24.3908 9.31973 27.3112 6.99184 30.7549C4.66394 34.1985 3.07962 38.0897 2.34003 42.18C1.09289 49.0837 2.18378 56.2061 5.44003 62.42C3.20833 65.8055 1.68758 69.6091 0.970029 73.6C0.225154 77.7807 0.323576 82.0682 1.25951 86.2103C2.19544 90.3524 3.94999 94.2657 6.42003 97.72C16.82 112.6 37.36 117.01 52.21 107.55L78.29 91C81.8059 88.7845 84.8232 85.8628 87.1505 82.4199C89.4779 78.9771 91.0646 75.0883 91.81 71C93.0526 64.0985 91.9582 56.9796 88.7 50.77C90.9306 47.3828 92.4544 43.5802 93.18 39.59C93.9226 35.4092 93.8231 31.1222 92.8872 26.9804C91.9514 22.8386 90.1981 18.9253 87.73 15.47"
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
        "path",
        {
          fill: "#fff",
          d: "M39.39 99.16C35.2842 100.225 30.9504 100.006 26.9734 98.5304C22.9964 97.0551 19.5677 94.3954 17.15 90.91C15.6656 88.8333 14.6115 86.4806 14.05 83.9904C13.4884 81.5002 13.4306 78.9229 13.88 76.41C14.0275 75.5926 14.2348 74.7871 14.5 74L14.99 72.5L16.33 73.5C19.4101 75.7487 22.8487 77.4595 26.5 78.56L27.5 78.85L27.41 79.85C27.3138 81.2211 27.6993 82.5828 28.5 83.7C29.2296 84.7485 30.2628 85.5483 31.4607 85.9917C32.6586 86.4351 33.9636 86.5008 35.2 86.18C35.7654 86.0281 36.3047 85.7921 36.8 85.48L62.84 68.86C63.4796 68.4576 64.0279 67.9259 64.4498 67.299C64.8718 66.6722 65.1579 65.964 65.29 65.22C65.4233 64.4617 65.4035 63.6844 65.2318 62.9339C65.06 62.1834 64.7398 61.4749 64.29 60.85C63.5605 59.8015 62.5272 59.0017 61.3293 58.5583C60.1314 58.1149 58.8264 58.0492 57.59 58.37C57.024 58.5201 56.4844 58.7562 55.99 59.07L45.99 65.42C44.3545 66.4571 42.5708 67.2393 40.7 67.74C36.601 68.799 32.276 68.577 28.3069 67.1038C24.3379 65.6306 20.9154 62.977 18.5 59.5C17.02 57.4213 15.9702 55.0679 15.4121 52.5779C14.854 50.0879 14.7989 47.5116 15.25 45C15.6916 42.5348 16.6428 40.1889 18.0427 38.1123C19.4426 36.0357 21.2605 34.274 23.38 32.94L49.5 16.32C51.1259 15.285 52.8994 14.5028 54.76 14C58.8643 12.9339 63.197 13.1533 67.1726 14.6288C71.1481 16.1042 74.575 18.7644 76.99 22.25C78.4762 24.326 79.532 26.6783 80.0953 29.1685C80.6586 31.6588 80.718 34.2365 80.27 36.75C80.114 37.5721 79.9069 38.3837 79.65 39.18L79.15 40.68L77.82 39.68C74.7336 37.4142 71.2845 35.6897 67.62 34.58L66.62 34.29L66.71 33.29C66.8255 31.9121 66.4501 30.5378 65.65 29.41C64.9159 28.3796 63.8855 27.597 62.6958 27.1665C61.5061 26.736 60.2135 26.6779 58.99 27C58.424 27.1501 57.8844 27.3862 57.39 27.7L31.3 44.29C30.6628 44.6927 30.1161 45.2233 29.6944 45.8481C29.2727 46.4729 28.9852 47.1784 28.85 47.92C28.7193 48.68 28.7403 49.4583 28.912 50.21C29.0836 50.9618 29.4024 51.6721 29.85 52.3C30.5762 53.339 31.6012 54.1326 32.7888 54.5755C33.9765 55.0185 35.2709 55.0898 36.5 54.78C37.0646 54.626 37.6037 54.3901 38.1 54.08L48.1 47.74C49.7343 46.6916 51.5226 45.9054 53.4 45.41C57.5033 44.3414 61.8357 44.5586 65.8115 46.0323C69.7873 47.506 73.2146 50.1651 75.63 53.65C77.1152 55.7265 78.1704 58.0789 78.7337 60.5689C79.2969 63.059 79.3569 65.6365 78.91 68.15C78.4684 70.6152 77.5173 72.9611 76.1173 75.0377C74.7174 77.1143 72.8996 78.876 70.78 80.21L44.69 96.83C43.0514 97.8704 41.2644 98.656 39.39 99.16"
        }
      )
    ]
  }
), SvelteIcon_default = SvelteIcon;

// src/components/Icons/TailwindIcon.tsx
var import_jsx_runtime17 = __toESM(require_jsx_runtime()), TailwindIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "tailwind",
    viewBox: "0 0 52 31",
    width: "28",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(
      "path",
      {
        fill: "#06B6D4",
        fillRule: "evenodd",
        d: "M25.517 0C18.712 0 14.46 3.382 12.758 10.146C15.31 6.764 18.287 5.496 21.689 6.341C23.63 6.823 25.018 8.223 26.553 9.773C29.055 12.297 31.951 15.218 38.275 15.218C45.079 15.218 49.332 11.836 51.033 5.073C48.482 8.455 45.505 9.723 42.103 8.877C40.161 8.395 38.773 6.995 37.238 5.446C34.736 2.92 31.841 0 25.517 0ZM12.758 15.218C5.954 15.218 1.701 18.6 0 25.364C2.552 21.982 5.529 20.714 8.93 21.559C10.872 22.041 12.26 23.441 13.795 24.991C16.297 27.515 19.192 30.436 25.517 30.436C32.321 30.436 36.574 27.055 38.275 20.291C35.723 23.673 32.746 24.941 29.344 24.096C27.403 23.613 26.015 22.213 24.48 20.664C21.978 18.14 19.082 15.218 12.758 15.218V15.218Z",
        clipRule: "evenodd"
      }
    )
  }
), TailwindIcon_default = TailwindIcon;

// src/components/Icons/TwitchIcon.tsx
var import_jsx_runtime18 = __toESM(require_jsx_runtime()), TwitchIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "twitch",
    viewBox: "0 0 453 500",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime18.jsx)("path", { d: "M324.322 91.4471H290.181V188.4H324.322V91.4471ZM230.491 91.0318H196.35V188.029H230.491V91.0318ZM85.4006 0L0.0981445 80.7973V371.71H102.466V452.507L187.778 371.71H256.05L409.624 226.254V0H85.4006ZM375.492 210.124L307.247 274.748H238.984L179.24 331.311V274.748H102.466V32.3295H375.492V210.124Z" })
  }
), TwitchIcon_default = TwitchIcon;

// src/components/Icons/TwitterIcon.tsx
var import_jsx_runtime19 = __toESM(require_jsx_runtime()), TwitterIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "twitter",
    viewBox: "0 0 617 500",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("path", { d: "M552.934 124.609C553.325 130.077 553.325 135.547 553.325 141.016C553.325 307.812 426.376 500 194.35 500C122.868 500 56.4636 479.296 0.605469 443.36C10.7618 444.531 20.5262 444.922 31.0733 444.922C90.0552 444.922 144.351 425.001 187.71 391.016C132.242 389.844 85.7591 353.516 69.7437 303.516C77.5566 304.687 85.3684 305.468 93.5721 305.468C104.9 305.468 116.228 303.905 126.774 301.172C68.9633 289.452 25.6038 238.672 25.6038 177.344V175.782C42.3996 185.157 61.9319 191.016 82.633 191.796C48.6494 169.14 26.3853 130.468 26.3853 86.7179C26.3853 63.2808 32.634 41.7964 43.5719 23.0463C105.68 99.6087 199.037 149.608 303.721 155.078C301.768 145.703 300.596 135.938 300.596 126.172C300.596 56.64 356.845 0 426.765 0C463.091 0 495.903 15.2343 518.95 39.8437C547.464 34.3753 574.807 23.8278 599.026 9.37507C589.65 38.6726 569.729 63.282 543.558 78.9059C568.949 76.1729 593.557 69.1401 616.212 59.3754C599.028 84.3744 577.543 106.639 552.934 124.609Z" })
  }
), TwitterIcon_default = TwitterIcon;

// src/components/Icons/TypescriptIcon.tsx
var import_jsx_runtime20 = __toESM(require_jsx_runtime()), TypescriptIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime20.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "typescript",
    viewBox: "0 0 512 512",
    width: "24",
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime20.jsx)("rect", { width: "512", height: "512", fill: "#3178c6", rx: "50" }),
      /* @__PURE__ */ (0, import_jsx_runtime20.jsx)("rect", { width: "512", height: "512", fill: "#3178c6", rx: "50" }),
      /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(
        "path",
        {
          fill: "#fff",
          fillRule: "evenodd",
          d: "m316.939 407.424v50.061c8.138 4.172 17.763 7.3 28.875 9.386s22.823 3.129 35.135 3.129c11.999 0 23.397-1.147 34.196-3.442 10.799-2.294 20.268-6.075 28.406-11.342 8.138-5.266 14.581-12.15 19.328-20.65s7.121-19.007 7.121-31.522c0-9.074-1.356-17.026-4.069-23.857s-6.625-12.906-11.738-18.225c-5.112-5.319-11.242-10.091-18.389-14.315s-15.207-8.213-24.18-11.967c-6.573-2.712-12.468-5.345-17.685-7.9-5.217-2.556-9.651-5.163-13.303-7.822-3.652-2.66-6.469-5.476-8.451-8.448-1.982-2.973-2.974-6.336-2.974-10.091 0-3.441.887-6.544 2.661-9.308s4.278-5.136 7.512-7.118c3.235-1.981 7.199-3.52 11.894-4.615 4.696-1.095 9.912-1.642 15.651-1.642 4.173 0 8.581.313 13.224.938 4.643.626 9.312 1.591 14.008 2.894 4.695 1.304 9.259 2.947 13.694 4.928 4.434 1.982 8.529 4.276 12.285 6.884v-46.776c-7.616-2.92-15.937-5.084-24.962-6.492s-19.381-2.112-31.066-2.112c-11.895 0-23.163 1.278-33.805 3.833s-20.006 6.544-28.093 11.967c-8.086 5.424-14.476 12.333-19.171 20.729-4.695 8.395-7.043 18.433-7.043 30.114 0 14.914 4.304 27.638 12.912 38.172 8.607 10.533 21.675 19.45 39.204 26.751 6.886 2.816 13.303 5.579 19.25 8.291s11.086 5.528 15.415 8.448c4.33 2.92 7.747 6.101 10.252 9.543 2.504 3.441 3.756 7.352 3.756 11.733 0 3.233-.783 6.231-2.348 8.995s-3.939 5.162-7.121 7.196-7.147 3.624-11.894 4.771c-4.748 1.148-10.303 1.721-16.668 1.721-10.851 0-21.597-1.903-32.24-5.71-10.642-3.806-20.502-9.516-29.579-17.13zm-84.159-123.342h64.22v-41.082h-179v41.082h63.906v182.918h50.874z",
          clipRule: "evenodd"
        }
      )
    ]
  }
), TypescriptIcon_default = TypescriptIcon;

// src/components/Icons/YoutubeIcon.tsx
var import_jsx_runtime21 = __toESM(require_jsx_runtime()), YoutubeIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "youtube",
    viewBox: "0 0 712 500",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime21.jsx)("path", { d: "M696.946 78.2331C688.768 47.4388 664.672 23.1862 634.078 14.9557C578.624 0 356.259 0 356.259 0C356.259 0 133.895 0 78.4392 14.9557C47.845 23.1875 23.7493 47.4388 15.5711 78.2331C0.712158 134.049 0.712158 250.505 0.712158 250.505C0.712158 250.505 0.712158 366.961 15.5711 422.777C23.7493 453.572 47.845 476.814 78.4392 485.044C133.895 500 356.259 500 356.259 500C356.259 500 578.622 500 634.078 485.044C664.672 476.814 688.768 453.572 696.946 422.777C711.805 366.961 711.805 250.505 711.805 250.505C711.805 250.505 711.805 134.049 696.946 78.2331ZM283.533 356.238V144.772L469.386 250.508L283.533 356.238Z" })
  }
), YoutubeIcon_default = YoutubeIcon;

// src/components/Icon/Icon.tsx
var import_jsx_runtime22 = __toESM(require_jsx_runtime()), Icon = ({ name, ...props }) => {
  switch (name) {
    case "close":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(CloseIcon_default, { ...props });
    case "discord":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(DiscordIcon_default, { ...props });
    case "gatsby":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(GatsbyIcon_default, { ...props });
    case "github":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(GithubIcon_default, { ...props });
    case "instagram":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(InstagramIcon_default, { ...props });
    case "javascript":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(JavascriptIcon_default, { ...props });
    case "link":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(LinkIcon_default, { ...props });
    case "menu":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(MenuIcon_default, { ...props });
    case "moon":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(MoonIcon_default, { ...props });
    case "next":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(NextIcon_default, { ...props });
    case "node":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(NodeIcon_default, { ...props });
    case "react":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(ReactIcon_default, { ...props });
    case "sun":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(SunIcon_default, { ...props });
    case "svelte":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(SvelteIcon_default, { ...props });
    case "twitch":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(TwitchIcon_default, { ...props });
    case "twitter":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(TwitterIcon_default, { ...props });
    case "typescript":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(TypescriptIcon_default, { ...props });
    case "tailwind":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(TailwindIcon_default, { ...props });
    case "youtube":
      return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(YoutubeIcon_default, { ...props });
    default:
      return null;
  }
}, Icon_default = Icon;

// src/components/SocialLink/SocialLink.tsx
var import_jsx_runtime23 = __toESM(require_jsx_runtime()), SocialLink = ({ platform }) => {
  let url, name;
  switch (platform) {
    case "instagram":
      url = "https://instagram.com/bradgarropy", name = "instagram";
      break;
    case "github":
      url = "https://github.com/bradgarropy", name = "github";
      break;
    case "twitter":
      url = "https://twitter.com/bradgarropy", name = "twitter";
      break;
    case "youtube":
      url = "https://youtube.com/bradgarropy", name = "youtube";
      break;
    case "twitch":
      url = "https://twitch.tv/bradgarropy", name = "twitch";
      break;
    case "discord":
      url = "https://bradgarropy.com/discord", name = "discord";
      break;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime23.jsx)(import_react3.Link, { to: url, children: /* @__PURE__ */ (0, import_jsx_runtime23.jsx)(
    Icon_default,
    {
      className: "h-8 fill-black transition duration-300 hover:fill-purple-400 dark:fill-white hover:dark:fill-purple-400",
      name
    }
  ) });
}, SocialLink_default = SocialLink;

// src/components/SocialLink/index.ts
var SocialLink_default2 = SocialLink_default;

// src/components/Footer/Footer.tsx
var import_jsx_runtime24 = __toESM(require_jsx_runtime()), Footer = () => /* @__PURE__ */ (0, import_jsx_runtime24.jsxs)("footer", { className: "grid grid-flow-col content-center justify-center gap-5 pt-12 pb-20", children: [
  /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(SocialLink_default2, { platform: "twitch" }),
  /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(SocialLink_default2, { platform: "github" }),
  /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(SocialLink_default2, { platform: "youtube" }),
  /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(SocialLink_default2, { platform: "twitter" }),
  /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(SocialLink_default2, { platform: "instagram" }),
  /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(SocialLink_default2, { platform: "discord" })
] }), Footer_default = Footer;

// src/components/Footer/index.ts
var Footer_default2 = Footer_default;

// src/components/Header/Header.tsx
var import_react14 = __toESM(require_dist());

// src/context/App.tsx
var import_react4 = __toESM(require_react()), import_jsx_runtime25 = __toESM(require_jsx_runtime()), AppContext = (0, import_react4.createContext)({});

// src/context/Theme.tsx
var import_react5 = __toESM(require_react()), import_jsx_runtime26 = __toESM(require_jsx_runtime()), ThemeContext = (0, import_react5.createContext)({});

// src/hooks/useApp/useApp.tsx
var import_react6 = __toESM(require_react()), useApp = () => (0, import_react6.useContext)(AppContext), useApp_default = useApp;

// src/hooks/useLive/useLive.tsx
var import_react7 = __toESM(require_react());

// src/utils/api/twitch/twitch.ts
var import_http2 = __toESM(require_dist2()), getChannelStatus = async () => {
  let { isLive } = await import_http2.http.get("/api/twitch");
  return isLive;
};

// src/hooks/useLive/useLive.tsx
var useLive = () => {
  let [live, setLive] = (0, import_react7.useState)(!1);
  return (0, import_react7.useEffect)(() => {
    let execute = async () => {
      let isLive = await getChannelStatus();
      setLive(isLive);
    };
    execute();
    let id = setInterval(() => execute(), 6e4);
    return () => clearInterval(id);
  }, []), live;
}, useLive_default = useLive;

// src/hooks/useMarkdown/useMarkdown.tsx
var import_react8 = __toESM(require_dist());

// src/components/Heading/Heading.tsx
var import_slugify = __toESM(require_slugify()), import_jsx_runtime27 = __toESM(require_jsx_runtime()), Heading = ({ level, id, children }) => {
  let text7 = typeof children == "string" ? children : children[0], slug = id || (0, import_slugify.default)(text7, {
    lower: !0,
    remove: /[^\w\d\s.]/
  }), link2 = /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(
    "a",
    {
      href: `#${slug}`,
      className: "absolute left-0 hidden h-full -translate-x-full py-0 px-5 group-hover:visible group-hover:flex group-hover:shadow-none",
      children: /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(Icon_default, { name: "link", className: "w-5 dark:text-white" })
    }
  );
  switch (level) {
    case 1:
      return /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)("h1", { id: slug, className: "group relative font-heading", children: [
        link2,
        children
      ] });
    case 2:
      return /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)("h2", { id: slug, className: "group relative font-heading", children: [
        link2,
        children
      ] });
    case 3:
      return /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)("h3", { id: slug, className: "group relative font-heading", children: [
        link2,
        children
      ] });
  }
}, Heading_default = Heading;

// src/hooks/useMarkdown/useMarkdown.tsx
var import_react9 = __toESM(require_react());

// node_modules/rehype-parse/lib/index.js
var import_parser = __toESM(require_parser(), 1);
init_hast_util_from_parse5();

// node_modules/rehype-parse/lib/errors.js
var errors = {
  abandonedHeadElementChild: {
    reason: "Unexpected metadata element after head",
    description: "Unexpected element after head. Expected the element before `</head>`",
    url: !1
  },
  abruptClosingOfEmptyComment: {
    reason: "Unexpected abruptly closed empty comment",
    description: "Unexpected `>` or `->`. Expected `-->` to close comments"
  },
  abruptDoctypePublicIdentifier: {
    reason: "Unexpected abruptly closed public identifier",
    description: "Unexpected `>`. Expected a closing `\"` or `'` after the public identifier"
  },
  abruptDoctypeSystemIdentifier: {
    reason: "Unexpected abruptly closed system identifier",
    description: "Unexpected `>`. Expected a closing `\"` or `'` after the identifier identifier"
  },
  absenceOfDigitsInNumericCharacterReference: {
    reason: "Unexpected non-digit at start of numeric character reference",
    description: "Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references"
  },
  cdataInHtmlContent: {
    reason: "Unexpected CDATA section in HTML",
    description: "Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead"
  },
  characterReferenceOutsideUnicodeRange: {
    reason: "Unexpected too big numeric character reference",
    description: "Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)"
  },
  closingOfElementWithOpenChildElements: {
    reason: "Unexpected closing tag with open child elements",
    description: "Unexpectedly closing tag. Expected other tags to be closed first",
    url: !1
  },
  controlCharacterInInputStream: {
    reason: "Unexpected control character",
    description: "Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace"
  },
  controlCharacterReference: {
    reason: "Unexpected control character reference",
    description: "Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace"
  },
  disallowedContentInNoscriptInHead: {
    reason: "Disallowed content inside `<noscript>` in `<head>`",
    description: "Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`",
    url: !1
  },
  duplicateAttribute: {
    reason: "Unexpected duplicate attribute",
    description: "Unexpectedly double attribute. Expected attributes to occur only once"
  },
  endTagWithAttributes: {
    reason: "Unexpected attribute on closing tag",
    description: "Unexpected attribute. Expected `>` instead"
  },
  endTagWithTrailingSolidus: {
    reason: "Unexpected slash at end of closing tag",
    description: "Unexpected `%c-1`. Expected `>` instead"
  },
  endTagWithoutMatchingOpenElement: {
    reason: "Unexpected unopened end tag",
    description: "Unexpected end tag. Expected no end tag or another end tag",
    url: !1
  },
  eofBeforeTagName: {
    reason: "Unexpected end of file",
    description: "Unexpected end of file. Expected tag name instead"
  },
  eofInCdata: {
    reason: "Unexpected end of file in CDATA",
    description: "Unexpected end of file. Expected `]]>` to close the CDATA"
  },
  eofInComment: {
    reason: "Unexpected end of file in comment",
    description: "Unexpected end of file. Expected `-->` to close the comment"
  },
  eofInDoctype: {
    reason: "Unexpected end of file in doctype",
    description: "Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)"
  },
  eofInElementThatCanContainOnlyText: {
    reason: "Unexpected end of file in element that can only contain text",
    description: "Unexpected end of file. Expected text or a closing tag",
    url: !1
  },
  eofInScriptHtmlCommentLikeText: {
    reason: "Unexpected end of file in comment inside script",
    description: "Unexpected end of file. Expected `-->` to close the comment"
  },
  eofInTag: {
    reason: "Unexpected end of file in tag",
    description: "Unexpected end of file. Expected `>` to close the tag"
  },
  incorrectlyClosedComment: {
    reason: "Incorrectly closed comment",
    description: "Unexpected `%c-1`. Expected `-->` to close the comment"
  },
  incorrectlyOpenedComment: {
    reason: "Incorrectly opened comment",
    description: "Unexpected `%c`. Expected `<!--` to open the comment"
  },
  invalidCharacterSequenceAfterDoctypeName: {
    reason: "Invalid sequence after doctype name",
    description: "Unexpected sequence at `%c`. Expected `public` or `system`"
  },
  invalidFirstCharacterOfTagName: {
    reason: "Invalid first character in tag name",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  misplacedDoctype: {
    reason: "Misplaced doctype",
    description: "Unexpected doctype. Expected doctype before head",
    url: !1
  },
  misplacedStartTagForHeadElement: {
    reason: "Misplaced `<head>` start tag",
    description: "Unexpected start tag `<head>`. Expected `<head>` directly after doctype",
    url: !1
  },
  missingAttributeValue: {
    reason: "Missing attribute value",
    description: "Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead"
  },
  missingDoctype: {
    reason: "Missing doctype before other content",
    description: "Expected a `<!doctype html>` before anything else",
    url: !1
  },
  missingDoctypeName: {
    reason: "Missing doctype name",
    description: "Unexpected doctype end at `%c`. Expected `html` instead"
  },
  missingDoctypePublicIdentifier: {
    reason: "Missing public identifier in doctype",
    description: "Unexpected `%c`. Expected identifier for `public` instead"
  },
  missingDoctypeSystemIdentifier: {
    reason: "Missing system identifier in doctype",
    description: 'Unexpected `%c`. Expected identifier for `system` instead (suggested: `"about:legacy-compat"`)'
  },
  missingEndTagName: {
    reason: "Missing name in end tag",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  missingQuoteBeforeDoctypePublicIdentifier: {
    reason: "Missing quote before public identifier in doctype",
    description: "Unexpected `%c`. Expected `\"` or `'` instead"
  },
  missingQuoteBeforeDoctypeSystemIdentifier: {
    reason: "Missing quote before system identifier in doctype",
    description: "Unexpected `%c`. Expected `\"` or `'` instead"
  },
  missingSemicolonAfterCharacterReference: {
    reason: "Missing semicolon after character reference",
    description: "Unexpected `%c`. Expected `;` instead"
  },
  missingWhitespaceAfterDoctypePublicKeyword: {
    reason: "Missing whitespace after public identifier in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceAfterDoctypeSystemKeyword: {
    reason: "Missing whitespace after system identifier in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBeforeDoctypeName: {
    reason: "Missing whitespace before doctype name",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBetweenAttributes: {
    reason: "Missing whitespace between attributes",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {
    reason: "Missing whitespace between public and system identifiers in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  nestedComment: {
    reason: "Unexpected nested comment",
    description: "Unexpected `<!--`. Expected `-->`"
  },
  nestedNoscriptInHead: {
    reason: "Unexpected nested `<noscript>` in `<head>`",
    description: "Unexpected `<noscript>`. Expected a closing tag or a meta element",
    url: !1
  },
  nonConformingDoctype: {
    reason: "Unexpected non-conforming doctype declaration",
    description: 'Expected `<!doctype html>` or `<!doctype html system "about:legacy-compat">`',
    url: !1
  },
  nonVoidHtmlElementStartTagWithTrailingSolidus: {
    reason: "Unexpected trailing slash on start tag of non-void element",
    description: "Unexpected `/`. Expected `>` instead"
  },
  noncharacterCharacterReference: {
    reason: "Unexpected noncharacter code point referenced by character reference",
    description: "Unexpected code point. Do not use noncharacters in HTML"
  },
  noncharacterInInputStream: {
    reason: "Unexpected noncharacter character",
    description: "Unexpected code point `%x`. Do not use noncharacters in HTML"
  },
  nullCharacterReference: {
    reason: "Unexpected NULL character referenced by character reference",
    description: "Unexpected code point. Do not use NULL characters in HTML"
  },
  openElementsLeftAfterEof: {
    reason: "Unexpected end of file",
    description: "Unexpected end of file. Expected closing tag instead",
    url: !1
  },
  surrogateCharacterReference: {
    reason: "Unexpected surrogate character referenced by character reference",
    description: "Unexpected code point. Do not use lone surrogate characters in HTML"
  },
  surrogateInInputStream: {
    reason: "Unexpected surrogate character",
    description: "Unexpected code point `%x`. Do not use lone surrogate characters in HTML"
  },
  unexpectedCharacterAfterDoctypeSystemIdentifier: {
    reason: "Invalid character after system identifier in doctype",
    description: "Unexpected character at `%c`. Expected `>`"
  },
  unexpectedCharacterInAttributeName: {
    reason: "Unexpected character in attribute name",
    description: "Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter"
  },
  unexpectedCharacterInUnquotedAttributeValue: {
    reason: "Unexpected character in unquoted attribute value",
    description: "Unexpected `%c`. Quote the attribute value to include it"
  },
  unexpectedEqualsSignBeforeAttributeName: {
    reason: "Unexpected equals sign before attribute name",
    description: "Unexpected `%c`. Add an attribute name before it"
  },
  unexpectedNullCharacter: {
    reason: "Unexpected NULL character",
    description: "Unexpected code point `%x`. Do not use NULL characters in HTML"
  },
  unexpectedQuestionMarkInsteadOfTagName: {
    reason: "Unexpected question mark instead of tag name",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  unexpectedSolidusInTag: {
    reason: "Unexpected slash in tag",
    description: "Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value"
  },
  unknownNamedCharacterReference: {
    reason: "Unexpected unknown named character reference",
    description: "Unexpected character reference. Expected known named character references"
  }
};

// node_modules/rehype-parse/lib/index.js
var base = "https://html.spec.whatwg.org/multipage/parsing.html#parse-error-", fatalities = { 2: !0, 1: !1, 0: null };
function rehypeParse(options2) {
  let processorSettings = this.data("settings"), settings = Object.assign({}, processorSettings, options2);
  Object.assign(this, { Parser: parser });
  function parser(doc, file) {
    let fn = settings.fragment ? "parseFragment" : "parse", onParseError = settings.emitParseErrors ? onerror : null, parse52 = new import_parser.default({
      sourceCodeLocationInfo: !0,
      onParseError,
      scriptingEnabled: !1
    });
    return fromParse5(parse52[fn](doc), {
      space: settings.space,
      file,
      verbose: settings.verbose
    });
    function onerror(error) {
      let code3 = error.code, name = camelcase2(code3), setting = settings[name], config = setting ?? !0, level = typeof config == "number" ? config : config ? 1 : 0, start = {
        line: error.startLine,
        column: error.startCol,
        offset: error.startOffset
      }, end = {
        line: error.endLine,
        column: error.endCol,
        offset: error.endOffset
      };
      if (level) {
        let info = errors[name] || { reason: "", description: "", url: "" }, message = file.message(format2(info.reason), { start, end });
        message.source = "parse-error", message.ruleId = code3, message.fatal = fatalities[level], message.note = format2(info.description), message.url = "url" in info && info.url === !1 ? null : base + code3;
      }
      function format2(value) {
        return value.replace(/%c(?:-(\d+))?/g, (_, $1) => {
          let offset = $1 ? -Number.parseInt($1, 10) : 0, char = doc.charAt(error.startOffset + offset);
          return char === "`" ? "` ` `" : char;
        }).replace(
          /%x/g,
          () => "0x" + doc.charCodeAt(error.startOffset).toString(16).toUpperCase()
        );
      }
    }
  }
}
function camelcase2(value) {
  return value.replace(/-[a-z]/g, ($0) => $0.charAt(1).toUpperCase());
}

// node_modules/hast-to-hyperscript/lib/index.js
init_property_information();
init_space_separated_tokens();
init_comma_separated_tokens();

// node_modules/style-to-object/index.mjs
var import_index = __toESM(require_style_to_object(), 1), style_to_object_default = import_index.default;

// node_modules/hast-to-hyperscript/lib/index.js
init_web_namespaces();
var own4 = {}.hasOwnProperty;
function toH(h2, tree, options2) {
  if (typeof h2 != "function")
    throw new TypeError("h is not a function");
  let r = react(h2), v = vue(h2), vd = vdom(h2), prefix, node2;
  if (typeof options2 == "string" || typeof options2 == "boolean" ? (prefix = options2, options2 = {}) : (options2 || (options2 = {}), prefix = options2.prefix), tree && tree.type === "root") {
    let head2 = tree.children[0];
    node2 = tree.children.length === 1 && head2.type === "element" ? head2 : {
      type: "element",
      tagName: "div",
      properties: {},
      children: tree.children
    };
  } else if (tree && tree.type === "element")
    node2 = tree;
  else
    throw new Error(
      "Expected root or element, not `" + (tree && tree.type || tree) + "`"
    );
  return transform(h2, node2, {
    schema: options2.space === "svg" ? svg2 : html2,
    prefix: prefix == null ? r || v || vd ? "h-" : void 0 : typeof prefix == "string" ? prefix : prefix ? "h-" : void 0,
    key: 0,
    react: r,
    vue: v,
    vdom: vd,
    hyperscript: hyperscript(h2)
  });
}
function transform(h2, node2, state) {
  let parentSchema = state.schema, schema = parentSchema, name = node2.tagName, attributes2 = {}, nodes = [], index2 = -1, key2;
  parentSchema.space === "html" && name.toLowerCase() === "svg" && (schema = svg2, state.schema = schema);
  for (key2 in node2.properties)
    node2.properties && own4.call(node2.properties, key2) && addAttribute(attributes2, key2, node2.properties[key2], state, name);
  if (state.vdom && (schema.space === "html" ? name = name.toUpperCase() : schema.space && (attributes2.namespace = webNamespaces[schema.space])), state.prefix && (state.key++, attributes2.key = state.prefix + state.key), node2.children)
    for (; ++index2 < node2.children.length; ) {
      let value = node2.children[index2];
      value.type === "element" ? nodes.push(transform(h2, value, state)) : value.type === "text" && nodes.push(value.value);
    }
  return state.schema = parentSchema, nodes.length > 0 ? h2.call(node2, name, attributes2, nodes) : h2.call(node2, name, attributes2);
}
function addAttribute(props, prop, value, state, name) {
  let info = find(state.schema, prop), subprop;
  value == null || typeof value == "number" && Number.isNaN(value) || value === !1 && (state.vue || state.vdom || state.hyperscript) || !value && info.boolean && (state.vue || state.vdom || state.hyperscript) || (Array.isArray(value) && (value = info.commaSeparated ? stringify2(value) : stringify(value)), info.boolean && state.hyperscript && (value = ""), info.property === "style" && typeof value == "string" && (state.react || state.vue || state.vdom) && (value = parseStyle(value, name)), state.vue ? info.property !== "style" && (subprop = "attrs") : info.mustUseProperty || (state.vdom ? info.property !== "style" && (subprop = "attributes") : state.hyperscript && (subprop = "attrs")), subprop ? props[subprop] = Object.assign(props[subprop] || {}, {
    [info.attribute]: value
  }) : info.space && state.react ? props[hastToReact[info.property] || info.property] = value : props[info.attribute] = value);
}
function react(h2) {
  let node2 = h2("div", {});
  return Boolean(
    node2 && ("_owner" in node2 || "_store" in node2) && (node2.key === void 0 || node2.key === null)
  );
}
function hyperscript(h2) {
  return "context" in h2 && "cleanup" in h2;
}
function vdom(h2) {
  return h2("div", {}).type === "VirtualNode";
}
function vue(h2) {
  let node2 = h2("div", {});
  return Boolean(node2 && node2.context && node2.context._isVue);
}
function parseStyle(value, tagName) {
  let result = {};
  try {
    style_to_object_default(value, (name, value2) => {
      name.slice(0, 4) === "-ms-" && (name = "ms-" + name.slice(4)), result[name.replace(
        /-([a-z])/g,
        (_, $1) => $1.toUpperCase()
      )] = value2;
    });
  } catch (error_) {
    let error = error_;
    throw error.message = tagName + "[style]" + error.message.slice(9), error;
  }
  return result;
}

// node_modules/rehype-react/lib/index.js
var import_hast_util_table_cell_style = __toESM(require_hast_util_table_cell_style(), 1);

// node_modules/hast-util-whitespace/index.js
function whitespace(thing) {
  let value = thing && typeof thing == "object" && thing.type === "text" ? thing.value || "" : thing;
  return typeof value == "string" && value.replace(/[ \t\n\f\r]/g, "") === "";
}

// node_modules/rehype-react/lib/index.js
var own5 = {}.hasOwnProperty, tableElements = /* @__PURE__ */ new Set(["table", "thead", "tbody", "tfoot", "tr"]);
function rehypeReact(options2) {
  if (!options2 || typeof options2.createElement != "function")
    throw new TypeError("createElement is not a function");
  let createElement2 = options2.createElement;
  Object.assign(this, { Compiler: compiler2 });
  function compiler2(node2) {
    let result = toH(h2, (0, import_hast_util_table_cell_style.default)(node2), options2.prefix);
    return node2.type === "root" ? (result = result && typeof result == "object" && "type" in result && "props" in result && result.type === "div" && (node2.children.length !== 1 || node2.children[0].type !== "element") ? result.props.children : [result], createElement2(options2.Fragment || "div", {}, result)) : result;
  }
  function h2(name, props, children) {
    if (children && tableElements.has(name) && (children = children.filter((child) => !whitespace(child))), options2.components && own5.call(options2.components, name)) {
      let component = options2.components[name];
      return options2.passNode && typeof component == "function" && (props = Object.assign({ node: this }, props)), createElement2(component, props, children);
    }
    return createElement2(name, props, children);
  }
}

// node_modules/bail/index.js
function bail(error) {
  if (error)
    throw error;
}

// node_modules/unified/lib/index.js
var import_is_buffer2 = __toESM(require_is_buffer(), 1), import_extend = __toESM(require_extend(), 1);

// node_modules/unified/node_modules/is-plain-obj/index.js
function isPlainObject(value) {
  if (typeof value != "object" || value === null)
    return !1;
  let prototype = Object.getPrototypeOf(value);
  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);
}

// node_modules/trough/index.js
function trough() {
  let fns = [], pipeline = { run, use };
  return pipeline;
  function run(...values) {
    let middlewareIndex = -1, callback = values.pop();
    if (typeof callback != "function")
      throw new TypeError("Expected function as last argument, not " + callback);
    next(null, ...values);
    function next(error, ...output) {
      let fn = fns[++middlewareIndex], index2 = -1;
      if (error) {
        callback(error);
        return;
      }
      for (; ++index2 < values.length; )
        (output[index2] === null || output[index2] === void 0) && (output[index2] = values[index2]);
      values = output, fn ? wrap2(fn, next)(...output) : callback(null, ...output);
    }
  }
  function use(middelware) {
    if (typeof middelware != "function")
      throw new TypeError(
        "Expected `middelware` to be a function, not " + middelware
      );
    return fns.push(middelware), pipeline;
  }
}
function wrap2(middleware, callback) {
  let called;
  return wrapped;
  function wrapped(...parameters) {
    let fnExpectsCallback = middleware.length > parameters.length, result;
    fnExpectsCallback && parameters.push(done);
    try {
      result = middleware.apply(this, parameters);
    } catch (error) {
      let exception = error;
      if (fnExpectsCallback && called)
        throw exception;
      return done(exception);
    }
    fnExpectsCallback || (result instanceof Promise ? result.then(then, done) : result instanceof Error ? done(result) : then(result));
  }
  function done(error, ...output) {
    called || (called = !0, callback(error, ...output));
  }
  function then(value) {
    done(null, value);
  }
}

// node_modules/vfile/lib/index.js
var import_is_buffer = __toESM(require_is_buffer(), 1);

// node_modules/unist-util-stringify-position/lib/index.js
function stringifyPosition(value) {
  return !value || typeof value != "object" ? "" : "position" in value || "type" in value ? position2(value.position) : "start" in value || "end" in value ? position2(value) : "line" in value || "column" in value ? point2(value) : "";
}
function point2(point5) {
  return index(point5 && point5.line) + ":" + index(point5 && point5.column);
}
function position2(pos) {
  return point2(pos && pos.start) + "-" + point2(pos && pos.end);
}
function index(value) {
  return value && typeof value == "number" ? value : 1;
}

// node_modules/vfile-message/lib/index.js
var VFileMessage = class extends Error {
  constructor(reason, place, origin) {
    let parts = [null, null], position4 = {
      start: { line: null, column: null },
      end: { line: null, column: null }
    };
    if (super(), typeof place == "string" && (origin = place, place = void 0), typeof origin == "string") {
      let index2 = origin.indexOf(":");
      index2 === -1 ? parts[1] = origin : (parts[0] = origin.slice(0, index2), parts[1] = origin.slice(index2 + 1));
    }
    place && ("type" in place || "position" in place ? place.position && (position4 = place.position) : "start" in place || "end" in place ? position4 = place : ("line" in place || "column" in place) && (position4.start = place)), this.name = stringifyPosition(place) || "1:1", this.message = typeof reason == "object" ? reason.message : reason, this.stack = "", typeof reason == "object" && reason.stack && (this.stack = reason.stack), this.reason = this.message, this.fatal, this.line = position4.start.line, this.column = position4.start.column, this.position = position4, this.source = parts[0], this.ruleId = parts[1], this.file, this.actual, this.expected, this.url, this.note;
  }
};
VFileMessage.prototype.file = "";
VFileMessage.prototype.name = "";
VFileMessage.prototype.reason = "";
VFileMessage.prototype.message = "";
VFileMessage.prototype.stack = "";
VFileMessage.prototype.fatal = null;
VFileMessage.prototype.column = null;
VFileMessage.prototype.line = null;
VFileMessage.prototype.source = null;
VFileMessage.prototype.ruleId = null;
VFileMessage.prototype.position = null;

// node_modules/vfile/lib/minpath.js
var import_path = __toESM(require("path"), 1);

// node_modules/vfile/lib/minproc.js
var import_process = __toESM(require("process"), 1);

// node_modules/vfile/lib/minurl.js
var import_url = require("url");

// node_modules/vfile/lib/minurl.shared.js
function isUrl(fileUrlOrPath) {
  return fileUrlOrPath !== null && typeof fileUrlOrPath == "object" && fileUrlOrPath.href && fileUrlOrPath.origin;
}

// node_modules/vfile/lib/index.js
var order = ["history", "path", "basename", "stem", "extname", "dirname"], VFile = class {
  constructor(value) {
    let options2;
    value ? typeof value == "string" || buffer(value) ? options2 = { value } : isUrl(value) ? options2 = { path: value } : options2 = value : options2 = {}, this.data = {}, this.messages = [], this.history = [], this.cwd = import_process.default.cwd(), this.value, this.stored, this.result, this.map;
    let index2 = -1;
    for (; ++index2 < order.length; ) {
      let prop2 = order[index2];
      prop2 in options2 && options2[prop2] !== void 0 && options2[prop2] !== null && (this[prop2] = prop2 === "history" ? [...options2[prop2]] : options2[prop2]);
    }
    let prop;
    for (prop in options2)
      order.includes(prop) || (this[prop] = options2[prop]);
  }
  get path() {
    return this.history[this.history.length - 1];
  }
  set path(path6) {
    isUrl(path6) && (path6 = (0, import_url.fileURLToPath)(path6)), assertNonEmpty(path6, "path"), this.path !== path6 && this.history.push(path6);
  }
  get dirname() {
    return typeof this.path == "string" ? import_path.default.dirname(this.path) : void 0;
  }
  set dirname(dirname) {
    assertPath(this.basename, "dirname"), this.path = import_path.default.join(dirname || "", this.basename);
  }
  get basename() {
    return typeof this.path == "string" ? import_path.default.basename(this.path) : void 0;
  }
  set basename(basename) {
    assertNonEmpty(basename, "basename"), assertPart(basename, "basename"), this.path = import_path.default.join(this.dirname || "", basename);
  }
  get extname() {
    return typeof this.path == "string" ? import_path.default.extname(this.path) : void 0;
  }
  set extname(extname) {
    if (assertPart(extname, "extname"), assertPath(this.dirname, "extname"), extname) {
      if (extname.charCodeAt(0) !== 46)
        throw new Error("`extname` must start with `.`");
      if (extname.includes(".", 1))
        throw new Error("`extname` cannot contain multiple dots");
    }
    this.path = import_path.default.join(this.dirname, this.stem + (extname || ""));
  }
  get stem() {
    return typeof this.path == "string" ? import_path.default.basename(this.path, this.extname) : void 0;
  }
  set stem(stem) {
    assertNonEmpty(stem, "stem"), assertPart(stem, "stem"), this.path = import_path.default.join(this.dirname || "", stem + (this.extname || ""));
  }
  toString(encoding) {
    return (this.value || "").toString(encoding || void 0);
  }
  message(reason, place, origin) {
    let message = new VFileMessage(reason, place, origin);
    return this.path && (message.name = this.path + ":" + message.name, message.file = this.path), message.fatal = !1, this.messages.push(message), message;
  }
  info(reason, place, origin) {
    let message = this.message(reason, place, origin);
    return message.fatal = null, message;
  }
  fail(reason, place, origin) {
    let message = this.message(reason, place, origin);
    throw message.fatal = !0, message;
  }
};
function assertPart(part, name) {
  if (part && part.includes(import_path.default.sep))
    throw new Error(
      "`" + name + "` cannot be a path: did not expect `" + import_path.default.sep + "`"
    );
}
function assertNonEmpty(part, name) {
  if (!part)
    throw new Error("`" + name + "` cannot be empty");
}
function assertPath(path6, name) {
  if (!path6)
    throw new Error("Setting `" + name + "` requires `path` to be set too");
}
function buffer(value) {
  return (0, import_is_buffer.default)(value);
}

// node_modules/unified/lib/index.js
var unified = base2().freeze(), own6 = {}.hasOwnProperty;
function base2() {
  let transformers = trough(), attachers = [], namespace = {}, frozen, freezeIndex = -1;
  return processor.data = data, processor.Parser = void 0, processor.Compiler = void 0, processor.freeze = freeze, processor.attachers = attachers, processor.use = use, processor.parse = parse6, processor.stringify = stringify3, processor.run = run, processor.runSync = runSync, processor.process = process2, processor.processSync = processSync, processor;
  function processor() {
    let destination = base2(), index2 = -1;
    for (; ++index2 < attachers.length; )
      destination.use(...attachers[index2]);
    return destination.data((0, import_extend.default)(!0, {}, namespace)), destination;
  }
  function data(key2, value) {
    return typeof key2 == "string" ? arguments.length === 2 ? (assertUnfrozen("data", frozen), namespace[key2] = value, processor) : own6.call(namespace, key2) && namespace[key2] || null : key2 ? (assertUnfrozen("data", frozen), namespace = key2, processor) : namespace;
  }
  function freeze() {
    if (frozen)
      return processor;
    for (; ++freezeIndex < attachers.length; ) {
      let [attacher, ...options2] = attachers[freezeIndex];
      if (options2[0] === !1)
        continue;
      options2[0] === !0 && (options2[0] = void 0);
      let transformer = attacher.call(processor, ...options2);
      typeof transformer == "function" && transformers.use(transformer);
    }
    return frozen = !0, freezeIndex = Number.POSITIVE_INFINITY, processor;
  }
  function use(value, ...options2) {
    let settings;
    if (assertUnfrozen("use", frozen), value != null)
      if (typeof value == "function")
        addPlugin(value, ...options2);
      else if (typeof value == "object")
        Array.isArray(value) ? addList(value) : addPreset(value);
      else
        throw new TypeError("Expected usable value, not `" + value + "`");
    return settings && (namespace.settings = Object.assign(namespace.settings || {}, settings)), processor;
    function add(value2) {
      if (typeof value2 == "function")
        addPlugin(value2);
      else if (typeof value2 == "object")
        if (Array.isArray(value2)) {
          let [plugin, ...options3] = value2;
          addPlugin(plugin, ...options3);
        } else
          addPreset(value2);
      else
        throw new TypeError("Expected usable value, not `" + value2 + "`");
    }
    function addPreset(result) {
      addList(result.plugins), result.settings && (settings = Object.assign(settings || {}, result.settings));
    }
    function addList(plugins) {
      let index2 = -1;
      if (plugins != null)
        if (Array.isArray(plugins))
          for (; ++index2 < plugins.length; ) {
            let thing = plugins[index2];
            add(thing);
          }
        else
          throw new TypeError("Expected a list of plugins, not `" + plugins + "`");
    }
    function addPlugin(plugin, value2) {
      let index2 = -1, entry2;
      for (; ++index2 < attachers.length; )
        if (attachers[index2][0] === plugin) {
          entry2 = attachers[index2];
          break;
        }
      entry2 ? (isPlainObject(entry2[1]) && isPlainObject(value2) && (value2 = (0, import_extend.default)(!0, entry2[1], value2)), entry2[1] = value2) : attachers.push([...arguments]);
    }
  }
  function parse6(doc) {
    processor.freeze();
    let file = vfile(doc), Parser3 = processor.Parser;
    return assertParser("parse", Parser3), newable(Parser3, "parse") ? new Parser3(String(file), file).parse() : Parser3(String(file), file);
  }
  function stringify3(node2, doc) {
    processor.freeze();
    let file = vfile(doc), Compiler = processor.Compiler;
    return assertCompiler("stringify", Compiler), assertNode(node2), newable(Compiler, "compile") ? new Compiler(node2, file).compile() : Compiler(node2, file);
  }
  function run(node2, doc, callback) {
    if (assertNode(node2), processor.freeze(), !callback && typeof doc == "function" && (callback = doc, doc = void 0), !callback)
      return new Promise(executor);
    executor(null, callback);
    function executor(resolve, reject) {
      transformers.run(node2, vfile(doc), done);
      function done(error, tree, file) {
        tree = tree || node2, error ? reject(error) : resolve ? resolve(tree) : callback(null, tree, file);
      }
    }
  }
  function runSync(node2, file) {
    let result, complete;
    return processor.run(node2, file, done), assertDone("runSync", "run", complete), result;
    function done(error, tree) {
      bail(error), result = tree, complete = !0;
    }
  }
  function process2(doc, callback) {
    if (processor.freeze(), assertParser("process", processor.Parser), assertCompiler("process", processor.Compiler), !callback)
      return new Promise(executor);
    executor(null, callback);
    function executor(resolve, reject) {
      let file = vfile(doc);
      processor.run(processor.parse(file), file, (error, tree, file2) => {
        if (error || !tree || !file2)
          done(error);
        else {
          let result = processor.stringify(tree, file2);
          result == null || (looksLikeAVFileValue(result) ? file2.value = result : file2.result = result), done(error, file2);
        }
      });
      function done(error, file2) {
        error || !file2 ? reject(error) : resolve ? resolve(file2) : callback(null, file2);
      }
    }
  }
  function processSync(doc) {
    let complete;
    processor.freeze(), assertParser("processSync", processor.Parser), assertCompiler("processSync", processor.Compiler);
    let file = vfile(doc);
    return processor.process(file, done), assertDone("processSync", "process", complete), file;
    function done(error) {
      complete = !0, bail(error);
    }
  }
}
function newable(value, name) {
  return typeof value == "function" && value.prototype && (keys(value.prototype) || name in value.prototype);
}
function keys(value) {
  let key2;
  for (key2 in value)
    if (own6.call(value, key2))
      return !0;
  return !1;
}
function assertParser(name, value) {
  if (typeof value != "function")
    throw new TypeError("Cannot `" + name + "` without `Parser`");
}
function assertCompiler(name, value) {
  if (typeof value != "function")
    throw new TypeError("Cannot `" + name + "` without `Compiler`");
}
function assertUnfrozen(name, frozen) {
  if (frozen)
    throw new Error(
      "Cannot call `" + name + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`."
    );
}
function assertNode(node2) {
  if (!isPlainObject(node2) || typeof node2.type != "string")
    throw new TypeError("Expected node, got `" + node2 + "`");
}
function assertDone(name, asyncName, complete) {
  if (!complete)
    throw new Error(
      "`" + name + "` finished async. Use `" + asyncName + "` instead"
    );
}
function vfile(value) {
  return looksLikeAVFile(value) ? value : new VFile(value);
}
function looksLikeAVFile(value) {
  return Boolean(
    value && typeof value == "object" && "message" in value && "messages" in value
  );
}
function looksLikeAVFileValue(value) {
  return typeof value == "string" || (0, import_is_buffer2.default)(value);
}

// src/hooks/useMarkdown/useMarkdown.tsx
var import_jsx_runtime28 = __toESM(require_jsx_runtime()), useMarkdown = (html6) => unified().use(rehypeParse).use(rehypeReact, {
  createElement: import_react9.createElement,
  Fragment: import_react9.Fragment,
  components: {
    html: ({ children }) => children,
    head: ({ children }) => children,
    body: ({ children }) => children,
    a: ({ href, children, ...props }) => /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(import_react8.Link, { to: href, ...props, children }),
    h1: ({ children }) => /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(Heading_default, { level: 1, children }),
    h2: ({ children }) => /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(Heading_default, { level: 2, children }),
    h3: ({ children }) => /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(Heading_default, { level: 3, children })
  }
}).processSync(html6).result, useMarkdown_default = useMarkdown;

// src/hooks/useMeta/useMeta.tsx
var useMeta = () => ({
  siteUrl: "https://bradgarropy.com"
}), useMeta_default = useMeta;

// src/hooks/useTheme/useTheme.tsx
var import_react10 = __toESM(require_react()), useTheme = () => (0, import_react10.useContext)(ThemeContext), useTheme_default = useTheme;

// src/components/ColorTheme/ColorTheme.tsx
var import_jsx_runtime29 = __toESM(require_jsx_runtime()), ColorTheme = () => {
  let { theme, setTheme } = useTheme_default();
  return /* @__PURE__ */ (0, import_jsx_runtime29.jsxs)(
    "button",
    {
      className: "h-6 cursor-pointer border-none bg-transparent p-0 transition duration-300",
      onClick: () => {
        setTheme(theme === "light" ? "dark" : "light");
      },
      "aria-label": theme === "light" ? "dark" : "light",
      children: [
        theme === "light" ? /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(MoonIcon_default, {}) : null,
        theme === "dark" ? /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(SunIcon_default, {}) : null
      ]
    }
  );
}, ColorTheme_default = ColorTheme;

// src/components/Logo/Logo.tsx
var import_jsx_runtime30 = __toESM(require_jsx_runtime()), Logo = () => /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
  "svg",
  {
    className: "inline-block w-[50px] fill-black transition duration-300 dark:fill-white",
    version: "1.1",
    viewBox: "0 0 26.458 26.458",
    xmlns: "http://www.w3.org/2000/svg",
    children: /* @__PURE__ */ (0, import_jsx_runtime30.jsx)("path", { d: "m-2.5e-7.070946v13.137c0 1.1408.19779 2.1896.59339 3.1465.3956.9476.93383 1.7665 1.6146 2.4565.69.69 1.4904 1.2282 2.4012 1.6146.92004.3864 1.8999.57961 2.9394.57961 1.0488 0 2.0286-.18862 2.9394-.56581.92005-.3772 1.7204-.90618 2.4012-1.587.10348-.10488.20363-.2129.30053-.32395.12113.14107.24749.27672.37932.40674.69.6624 1.4904 1.1731 2.4012 1.5318.92005.3588 1.8999.53821 2.9394.53821.3128 0 .64863-.01842 1.0075-.05523.368-.0368.7176-.1058 1.0488-.207.3404-.09201.64858-.21157.92461-.35878.276-.1564.48764-.35422.63483-.59343-.1012.3772-.23921.736-.414 1.0764-.1656.3404-.39104.63943-.67622.89697-.2852.26681-.63479.4738-1.0488.621-.414.1564-.9154.23461-1.5042.23461l-1.863-.02761v3.7674l1.8906.02761c1.0396 0 2.0148-.19783 2.9256-.59343.92005-.3956 1.7204-.93382 2.4012-1.6146.69-.68081 1.2328-1.4766 1.6284-2.3874.39559-.91083.59343-1.886.59343-2.9256v-12.889h-.91083l-1.4628 1.7526c-.3496-.3312-.7268-.63938-1.1316-.92461-.3956-.2852-.81421-.53361-1.2558-.7452-.4416-.2116-.89697-.3772-1.3662-.49681-.4692-.11961-.94304-.17943-1.4214-.17943-1.0396 0-2.0194.19783-2.9394.59343-.91083.3956-1.7112.94296-2.4012 1.6422-.1155.11861-.22677.24103-.33407.36705-.11088-.1309-.22608-.2579-.34576-.38085-.6808-.6992-1.4812-1.242-2.4012-1.6284-.91083-.3956-1.8906-.59343-2.9394-.59343-.3404 0-.68998.03682-1.0488.11042-.3588.0644-.7084.161-1.0488.2898-.33121.1288-.64402.29441-.93839.49681-.2852.2024-.52901.43242-.73142.69003v-6.9h-3.7811zm7.5486 9.1219c.51521 0 .99824.10122 1.449.30362.45999.2024.8602.48299 1.2006.84177.3404.3588.60723.7866.80044 1.2835.2024.48759.30358 1.0166.30358 1.587s-.10118 1.0994-.30358 1.587c-.1932.48759-.46004.91075-.80044 1.2696-.3404.35881-.7406.64402-1.2006.85563-.45079.2024-.93383.30358-1.449.30358s-1.0028-.10118-1.4628-.30358c-.4508-.2116-.84642-.49681-1.1868-.85563-.3404-.3588-.60719-.78198-.80039-1.2696-.1932-.48759-.2898-1.0167-.2898-1.587 0-.51521.09661-1.012.2898-1.4904.1932-.48759.45999-.9154.80039-1.2834.3404-.3772.73602-.67618 1.1868-.89697.45999-.23001.94761-.34502 1.4628-.34502zm11.361 0c.51521 0 .99824.11503 1.449.34502.45999.22081.8602.51977 1.2006.89697.3404.368.60723.7958.80044 1.2835.2024.47839.30358.97524.30358 1.4904 0 .51521-.10118 1.0167-.30358 1.5042-.1932.47839-.46004.90618-.80044 1.2834-.3404.368-.7406.66698-1.2006.89697-.45079.2208-.93383.3312-1.449.3312-.51522 0-1.0028-.09197-1.4628-.27598-.45079-.1932-.84642-.46462-1.1868-.81421-.3312-.3496-.59341-.76819-.7866-1.2558-.1932-.49681-.2898-1.0534-.2898-1.6698 0-.64401.0966-1.2144.2898-1.7112.1932-.50601.45539-.92918.7866-1.2696.3404-.3404.73602-.59799 1.1868-.77278.45999-.1748.9476-.26223 1.4628-.26223z" })
  }
), Logo_default = Logo;

// src/components/Logo/index.ts
var Logo_default2 = Logo_default;

// src/components/MobileNavigation/MobileNavigation.tsx
var import_react11 = __toESM(require_dist());

// src/components/Hamburger/Hamburger.tsx
var import_jsx_runtime31 = __toESM(require_jsx_runtime()), Hamburger = () => {
  let { setOpen } = useApp_default();
  return /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
    Icon_default,
    {
      name: "menu",
      className: "hidden cursor-pointer text-2xl max-[800px]:block",
      onClick: () => {
        setOpen(!0);
      }
    }
  );
}, Hamburger_default = Hamburger;

// src/components/Hamburger/index.ts
var Hamburger_default2 = Hamburger_default;

// src/components/MobileNavigation/MobileNavigation.tsx
var import_jsx_runtime32 = __toESM(require_jsx_runtime()), MobileNavigation = () => {
  let { open, setOpen } = useApp_default();
  return open ? /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "fixed inset-0 z-10 grid grid-rows-[auto_1fr] overflow-hidden bg-white text-4xl dark:bg-black", children: [
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
      Icon_default,
      {
        name: "close",
        className: "m-5 cursor-pointer justify-self-end",
        onClick: () => {
          setOpen(!1);
        }
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "grid grid-flow-row content-center justify-center gap-y-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_react11.Link, { className: "hover:text-purple-400", to: "/blog", children: "blog" }),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_react11.Link, { className: "hover:text-purple-400", to: "/now", children: "now" }),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_react11.Link, { className: "hover:text-purple-400", to: "/uses", children: "uses" }),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_react11.Link, { className: "hover:text-purple-400", to: "/hire-me", children: "hire me" }),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_react11.Link, { className: "hover:text-purple-400", to: "/contact", children: "contact" })
    ] })
  ] }) : /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Hamburger_default2, {});
}, MobileNavigation_default = MobileNavigation;

// src/components/MobileNavigation/index.ts
var MobileNavigation_default2 = MobileNavigation_default;

// src/components/Navigation/Navigation.tsx
var import_react12 = __toESM(require_dist()), import_jsx_runtime33 = __toESM(require_jsx_runtime()), Navigation = () => /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("nav", { className: "grid grid-flow-col gap-x-5 max-[800px]:hidden", children: [
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_react12.Link, { className: "duration-300 hover:text-purple-400", to: "/blog", children: "blog" }),
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("span", { children: "|" }),
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_react12.Link, { className: "duration-300 hover:text-purple-400", to: "/now", children: "now" }),
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("span", { children: "|" }),
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_react12.Link, { className: "duration-300 hover:text-purple-400", to: "/uses", children: "uses" }),
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("span", { children: "|" }),
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_react12.Link, { className: "duration-300 hover:text-purple-400", to: "/hire-me", children: "hire me" }),
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("span", { children: "|" }),
  /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_react12.Link, { className: "duration-300 hover:text-purple-400", to: "/contact", children: "contact" })
] }), Navigation_default = Navigation;

// src/components/Navigation/index.ts
var Navigation_default2 = Navigation_default;

// src/components/Streaming/Streaming.tsx
var import_react13 = __toESM(require_dist()), import_jsx_runtime34 = __toESM(require_jsx_runtime()), Streaming = () => /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(import_react13.Link, { to: "https://twitch.tv/bradgarropy", children: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)("span", { className: "animate-pulse font-heading text-lg font-black tracking-[-0.075rem]", children: "\u{1F3A5} streaming" }) }), Streaming_default = Streaming;

// src/components/Header/Header.tsx
var import_jsx_runtime35 = __toESM(require_jsx_runtime()), Header = () => {
  let live = useLive_default();
  return /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("header", { className: "grid grid-flow-col items-center justify-between p-5", children: [
    /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "grid grid-flow-col items-center gap-x-8", children: [
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(import_react14.Link, { to: "/", "aria-label": "bg", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Logo_default2, {}) }),
      live && /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Streaming_default, {})
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "grid grid-flow-col items-center gap-x-8", children: [
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Navigation_default2, {}),
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(MobileNavigation_default2, {}),
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(ColorTheme_default, {})
    ] })
  ] });
}, Header_default = Header;

// src/components/Header/index.ts
var Header_default2 = Header_default;

// src/components/Layout/Layout.tsx
var import_jsx_runtime36 = __toESM(require_jsx_runtime()), Layout = ({ children }) => /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)("div", { className: "m-auto grid min-h-screen max-w-5xl grid-rows-[auto_1fr_auto] gap-y-10 font-text text-black transition-all dark:text-white", children: [
  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(Header_default2, {}),
  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)("main", { className: "box-border grid w-full max-w-[700px] justify-self-center py-0 px-5", children }),
  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(Footer_default2, {})
] }), Layout_default = Layout;

// src/components/Layout/index.ts
var Layout_default2 = Layout_default;

// src/components/PostMeta/PostMeta.tsx
var import_react15 = __toESM(require_dist());

// src/utils/date.ts
var import_date_fns = __toESM(require_date_fns()), formatDate = (date) => {
  let isoDate = (0, import_date_fns.parseISO)(date);
  return (0, import_date_fns.format)(isoDate, "MMMM d, y");
};

// src/components/PostMeta/PostMeta.tsx
var import_jsx_runtime37 = __toESM(require_jsx_runtime()), PostMeta = ({ date, topic }) => /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)("p", { className: "m-0 lowercase", children: [
  formatDate(date),
  " in",
  " ",
  /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)(
    import_react15.Link,
    {
      to: `/topic/${topic}`,
      className: "transition duration-300 hover:text-purple-400",
      children: [
        "#",
        topic
      ]
    }
  )
] }) }), PostMeta_default = PostMeta;

// src/components/PostMeta/index.ts
var PostMeta_default2 = PostMeta_default;

// src/components/PostTitle/PostTitle.tsx
var import_react16 = __toESM(require_dist()), import_jsx_runtime38 = __toESM(require_jsx_runtime()), PostTitle = ({ title, slug }) => /* @__PURE__ */ (0, import_jsx_runtime38.jsx)("h1", { className: "m-0 font-heading text-[40px] font-semibold max-[750px]:text-2xl", children: slug ? /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(
  import_react16.Link,
  {
    to: `/blog/${slug}`,
    className: "transition duration-300 hover:text-purple-400",
    children: title
  }
) : title }), PostTitle_default = PostTitle;

// src/components/PostTitle/index.ts
var PostTitle_default2 = PostTitle_default;

// src/components/PostHeader/PostHeader.tsx
var import_jsx_runtime39 = __toESM(require_jsx_runtime()), PostHeader = ({ date, topic, title, slug }) => /* @__PURE__ */ (0, import_jsx_runtime39.jsxs)("section", { children: [
  /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(PostMeta_default2, { date, topic }),
  /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(PostTitle_default2, { title, slug })
] }), PostHeader_default = PostHeader;

// src/components/PostHeader/index.ts
var PostHeader_default2 = PostHeader_default;

// src/components/PostList/PostList.tsx
var import_jsx_runtime40 = __toESM(require_jsx_runtime()), PostList = ({ posts }) => posts.length ? /* @__PURE__ */ (0, import_jsx_runtime40.jsx)("div", { className: "grid gap-y-9", children: posts.map((post, index2) => /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
  PostHeader_default2,
  {
    date: post.date,
    topic: post.topic,
    title: post.title,
    slug: post.slug
  },
  index2
)) }) : /* @__PURE__ */ (0, import_jsx_runtime40.jsxs)("div", { className: "text-xl italic", children: [
  /* @__PURE__ */ (0, import_jsx_runtime40.jsx)("span", { className: "not-italic", children: "\u{1F937}\u{1F3FC}\u200D\u2642\uFE0F" }),
  " no posts found"
] }), PostList_default = PostList;

// src/components/PostList/index.ts
var PostList_default2 = PostList_default;

// src/components/TopicMeta/TopicMeta.tsx
var import_jsx_runtime41 = __toESM(require_jsx_runtime()), TopicMeta = ({ topic }) => {
  let { name, icon } = topic;
  return /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)("h1", { className: "m-0 mb-14 text-center text-3xl", children: [
    icon,
    " ",
    name
  ] });
}, TopicMeta_default = TopicMeta;

// src/components/TopicMeta/index.ts
var TopicMeta_default2 = TopicMeta_default;

// src/utils/posts.ts
var import_fs = __toESM(require("fs")), import_gray_matter2 = __toESM(require_gray_matter()), import_path3 = __toESM(require("path"));

// node_modules/hast-util-is-element/index.js
var isElement = function(node2, test, index2, parent, context) {
  let check = convertElement(test);
  if (index2 != null && (typeof index2 != "number" || index2 < 0 || index2 === Number.POSITIVE_INFINITY))
    throw new Error("Expected positive finite index for child node");
  if (parent != null && (!parent.type || !parent.children))
    throw new Error("Expected parent node");
  if (!node2 || !node2.type || typeof node2.type != "string")
    return !1;
  if (parent == null != (index2 == null))
    throw new Error("Expected both parent and index");
  return check.call(context, node2, index2, parent);
}, convertElement = function(test) {
  if (test == null)
    return element2;
  if (typeof test == "string")
    return tagNameFactory(test);
  if (typeof test == "object")
    return anyFactory(test);
  if (typeof test == "function")
    return castFactory(test);
  throw new Error("Expected function, string, or array as test");
};
function anyFactory(tests) {
  let checks2 = [], index2 = -1;
  for (; ++index2 < tests.length; )
    checks2[index2] = convertElement(tests[index2]);
  return castFactory(any);
  function any(...parameters) {
    let index3 = -1;
    for (; ++index3 < checks2.length; )
      if (checks2[index3].call(this, ...parameters))
        return !0;
    return !1;
  }
}
function tagNameFactory(check) {
  return tagName;
  function tagName(node2) {
    return element2(node2) && node2.tagName === check;
  }
}
function castFactory(check) {
  return assertion;
  function assertion(node2, ...parameters) {
    return element2(node2) && Boolean(check.call(this, node2, ...parameters));
  }
}
function element2(node2) {
  return Boolean(
    node2 && typeof node2 == "object" && node2.type === "element" && typeof node2.tagName == "string"
  );
}

// node_modules/@bradgarropy/rehype-cloudinary-image-size/dist/rehypeCloudinaryImageSize.js
init_unist_util_visit();

// node_modules/@bradgarropy/rehype-cloudinary-image-size/dist/cloudinary.js
var __awaiter = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}, getImageDimensions = (imageUrl) => __awaiter(void 0, void 0, void 0, function* () {
  let url = new URL(imageUrl), pathSegments = url.pathname.split("/"), index2 = pathSegments.findIndex((value) => value === "bradgarropy.com");
  pathSegments.splice(index2, 0, "fl_getinfo"), url.pathname = pathSegments.join("/");
  let json13 = yield (yield fetch(url)).json();
  return {
    width: json13.output.width,
    height: json13.output.height
  };
}), isCloudinaryImage = (url) => !!(url.startsWith("http://res.cloudinary.com") || url.startsWith("https://res.cloudinary.com"));

// node_modules/@bradgarropy/rehype-cloudinary-image-size/dist/rehypeCloudinaryImageSize.js
var __awaiter2 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}, rehypeCloudinaryImageSize = () => {
  let images = [], visitor = (node2) => isElement(node2, "img") && node2.properties !== void 0 && typeof node2.properties.src == "string" && isCloudinaryImage(node2.properties.src) ? (images.push(node2), SKIP) : CONTINUE;
  return (tree) => __awaiter2(void 0, void 0, void 0, function* () {
    visit(tree, "element", visitor);
    let promises = images.map((image2) => {
      var _a2;
      return getImageDimensions((_a2 = image2.properties) === null || _a2 === void 0 ? void 0 : _a2.src);
    }), dimensions = yield Promise.all(promises);
    images.forEach((image2, index2) => {
      let dimension = dimensions[index2];
      image2.properties.width = dimension.width, image2.properties.height = dimension.height;
    });
  });
};

// node_modules/@bradgarropy/rehype-image-links/dist/rehypeImageLinks.js
init_unist_util_visit();
var rehypeImageLinks = ({ classes = [] } = {}) => {
  let visitor = (node2) => {
    var _a2, _b;
    if (isElement(node2, "img")) {
      if (!(!((_a2 = node2.properties) === null || _a2 === void 0) && _a2.src))
        return console.error("The img does not contain a src attribute."), EXIT;
      let linkNode = {
        type: "element",
        tagName: "a",
        properties: {
          href: (_b = node2.properties) === null || _b === void 0 ? void 0 : _b.src
        },
        children: [Object.assign({}, node2)]
      };
      return classes.length > 0 && linkNode.properties && (linkNode.properties.class = classes.join(" ")), Object.assign(node2, linkNode), SKIP;
    }
    return CONTINUE;
  };
  return (tree) => {
    visit(tree, "element", visitor);
  };
};

// src/utils/markdown.ts
var import_core4 = __toESM(require_dist5()), import_gray_matter = __toESM(require_gray_matter()), import_path2 = __toESM(require("path"));

// node_modules/rehype-external-links/index.js
init_unist_util_visit();
init_space_separated_tokens();

// node_modules/is-absolute-url/index.js
var ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/, WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\/;
function isAbsoluteUrl(url) {
  if (typeof url != "string")
    throw new TypeError(`Expected a \`string\`, got \`${typeof url}\``);
  return WINDOWS_PATH_REGEX.test(url) ? !1 : ABSOLUTE_URL_REGEX.test(url);
}

// node_modules/rehype-external-links/index.js
var import_extend2 = __toESM(require_extend(), 1), defaultRel = ["nofollow"], defaultProtocols = ["http", "https"];
function callIfNeeded(value, node2) {
  return typeof value == "function" ? value(node2) : value;
}
function rehypeExternalLinks(options2 = {}) {
  return (tree) => {
    visit(tree, "element", (node2) => {
      if (node2.tagName === "a" && node2.properties && typeof node2.properties.href == "string") {
        let url = node2.properties.href, protocol = url.slice(0, url.indexOf(":")), target = callIfNeeded(options2.target, node2), relRaw = callIfNeeded(options2.rel, node2) || defaultRel, rel = typeof relRaw == "string" ? parse2(relRaw) : relRaw, protocols = callIfNeeded(options2.protocols, node2) || defaultProtocols, contentRaw = callIfNeeded(options2.content, node2), content3 = contentRaw && !Array.isArray(contentRaw) ? [contentRaw] : contentRaw, contentProperties = callIfNeeded(options2.contentProperties, node2) || {};
        (isAbsoluteUrl(url) ? protocols.includes(protocol) : url.startsWith("//")) && (target && (node2.properties.target = target), rel.length > 0 && (node2.properties.rel = rel.concat()), content3 && node2.children.push({
          type: "element",
          tagName: "span",
          properties: (0, import_extend2.default)(!0, contentProperties),
          children: (0, import_extend2.default)(!0, content3)
        }));
      }
    });
  };
}

// node_modules/hast-util-raw/lib/index.js
var import_parser4 = __toESM(require_parser2(), 1);

// node_modules/unist-util-position/lib/index.js
var pointStart = point3("start"), pointEnd = point3("end");
function position3(node2) {
  return { start: pointStart(node2), end: pointEnd(node2) };
}
function point3(type) {
  return point5;
  function point5(node2) {
    let point6 = node2 && node2.position && node2.position[type] || {};
    return {
      line: point6.line || null,
      column: point6.column || null,
      offset: point6.offset > -1 ? point6.offset : null
    };
  }
}

// node_modules/hast-util-raw/lib/index.js
init_unist_util_visit();
init_hast_util_from_parse5();

// node_modules/hast-util-to-parse5/lib/index.js
init_comma_separated_tokens();
init_property_information();
init_space_separated_tokens();
init_web_namespaces();

// node_modules/zwitch/index.js
var own7 = {}.hasOwnProperty;
function zwitch(key2, options2) {
  let settings = options2 || {};
  function one6(value, ...parameters) {
    let fn = one6.invalid, handlers2 = one6.handlers;
    if (value && own7.call(value, key2)) {
      let id = String(value[key2]);
      fn = own7.call(handlers2, id) ? handlers2[id] : one6.unknown;
    }
    if (fn)
      return fn.call(this, value, ...parameters);
  }
  return one6.handlers = settings.handlers || {}, one6.invalid = settings.invalid, one6.unknown = settings.unknown, one6;
}

// node_modules/hast-util-to-parse5/lib/index.js
var own8 = {}.hasOwnProperty, one2 = zwitch("type", { handlers: { root, element: element3, text, comment, doctype } });
function toParse5(tree, options2) {
  let space = options2 && typeof options2 == "object" ? options2.space : options2;
  return one2(tree, space === "svg" ? svg2 : html2);
}
function root(node2, schema) {
  let result = {
    nodeName: "#document",
    mode: (node2.data || {}).quirksMode ? "quirks" : "no-quirks",
    childNodes: []
  };
  return result.childNodes = all2(node2.children, result, schema), patch2(node2, result), result;
}
function fragment(node2, schema) {
  let result = { nodeName: "#document-fragment", childNodes: [] };
  return result.childNodes = all2(node2.children, result, schema), patch2(node2, result), result;
}
function doctype(node2) {
  let result = {
    nodeName: "#documentType",
    name: "html",
    publicId: "",
    systemId: "",
    parentNode: void 0
  };
  return patch2(node2, result), result;
}
function text(node2) {
  let result = {
    nodeName: "#text",
    value: node2.value,
    parentNode: void 0
  };
  return patch2(node2, result), result;
}
function comment(node2) {
  let result = {
    nodeName: "#comment",
    data: node2.value,
    parentNode: void 0
  };
  return patch2(node2, result), result;
}
function element3(node2, schema) {
  let parentSchema = schema, currentSchema = parentSchema;
  node2.type === "element" && node2.tagName.toLowerCase() === "svg" && parentSchema.space === "html" && (currentSchema = svg2);
  let attrs = [], prop;
  if (node2.properties) {
    for (prop in node2.properties)
      if (prop !== "children" && own8.call(node2.properties, prop)) {
        let result2 = createProperty(
          currentSchema,
          prop,
          node2.properties[prop]
        );
        result2 && attrs.push(result2);
      }
  }
  let result = {
    nodeName: node2.tagName,
    tagName: node2.tagName,
    attrs,
    namespaceURI: webNamespaces[currentSchema.space],
    childNodes: [],
    parentNode: void 0
  };
  return result.childNodes = all2(node2.children, result, currentSchema), patch2(node2, result), node2.tagName === "template" && node2.content && (result.content = fragment(node2.content, currentSchema)), result;
}
function createProperty(schema, prop, value) {
  let info = find(schema, prop);
  if (value == null || value === !1 || typeof value == "number" && Number.isNaN(value) || !value && info.boolean)
    return;
  Array.isArray(value) && (value = info.commaSeparated ? stringify2(value) : stringify(value));
  let attribute = {
    name: info.attribute,
    value: value === !0 ? "" : String(value)
  };
  if (info.space && info.space !== "html" && info.space !== "svg") {
    let index2 = attribute.name.indexOf(":");
    index2 < 0 ? attribute.prefix = "" : (attribute.name = attribute.name.slice(index2 + 1), attribute.prefix = info.attribute.slice(0, index2)), attribute.namespace = webNamespaces[info.space];
  }
  return attribute;
}
function all2(children, parentNode, schema) {
  let index2 = -1, results = [];
  if (children)
    for (; ++index2 < children.length; ) {
      let child = one2(children[index2], schema);
      child.parentNode = parentNode, results.push(child);
    }
  return results;
}
function patch2(from, to) {
  let position4 = from.position;
  position4 && position4.start && position4.end && (to.sourceCodeLocation = {
    startLine: position4.start.line,
    startCol: position4.start.column,
    startOffset: position4.start.offset,
    endLine: position4.end.line,
    endCol: position4.end.column,
    endOffset: position4.end.offset
  });
}

// node_modules/html-void-elements/index.js
var htmlVoidElements = [
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "image",
  "img",
  "input",
  "isindex",
  "keygen",
  "link",
  "menuitem",
  "meta",
  "nextid",
  "param",
  "source",
  "track",
  "wbr"
];

// node_modules/hast-util-raw/lib/index.js
init_web_namespaces();
var inTemplateMode = "IN_TEMPLATE_MODE", dataState = "DATA_STATE", characterToken = "CHARACTER_TOKEN", startTagToken = "START_TAG_TOKEN", endTagToken = "END_TAG_TOKEN", commentToken = "COMMENT_TOKEN", doctypeToken = "DOCTYPE_TOKEN", parseOptions = { sourceCodeLocationInfo: !0, scriptingEnabled: !1 }, raw = function(tree, file, options2) {
  let index2 = -1, parser = new import_parser4.default(parseOptions), one6 = zwitch("type", {
    handlers: { root: root4, element: element5, text: text7, comment: comment3, doctype: doctype3, raw: handleRaw },
    unknown
  }), stitches, tokenizer, preprocessor, posTracker, locationTracker;
  if (isOptions(file) && (options2 = file, file = void 0), options2 && options2.passThrough)
    for (; ++index2 < options2.passThrough.length; )
      one6.handlers[options2.passThrough[index2]] = stitch;
  let result = fromParse5(
    documentMode(tree) ? document4() : fragment2(),
    file
  );
  if (stitches && visit(result, "comment", (node2, index3, parent) => {
    let stitch2 = node2;
    if (stitch2.value.stitch && parent !== null && index3 !== null)
      return parent.children[index3] = stitch2.value.stitch, index3;
  }), tree.type !== "root" && result.type === "root" && result.children.length === 1)
    return result.children[0];
  return result;
  function fragment2() {
    let context = {
      nodeName: "template",
      tagName: "template",
      attrs: [],
      namespaceURI: webNamespaces.html,
      childNodes: []
    }, mock = {
      nodeName: "documentmock",
      tagName: "documentmock",
      attrs: [],
      namespaceURI: webNamespaces.html,
      childNodes: []
    }, doc = { nodeName: "#document-fragment", childNodes: [] };
    if (parser._bootstrap(mock, context), parser._pushTmplInsertionMode(inTemplateMode), parser._initTokenizerForFragmentParsing(), parser._insertFakeRootElement(), parser._resetInsertionMode(), parser._findFormInFragmentContext(), tokenizer = parser.tokenizer, !tokenizer)
      throw new Error("Expected `tokenizer`");
    return preprocessor = tokenizer.preprocessor, locationTracker = tokenizer.__mixins[0], posTracker = locationTracker.posTracker, one6(tree), resetTokenizer(), parser._adoptNodes(mock.childNodes[0], doc), doc;
  }
  function document4() {
    let doc = parser.treeAdapter.createDocument();
    if (parser._bootstrap(doc, void 0), tokenizer = parser.tokenizer, !tokenizer)
      throw new Error("Expected `tokenizer`");
    return preprocessor = tokenizer.preprocessor, locationTracker = tokenizer.__mixins[0], posTracker = locationTracker.posTracker, one6(tree), resetTokenizer(), doc;
  }
  function all6(nodes) {
    let index3 = -1;
    if (nodes)
      for (; ++index3 < nodes.length; )
        one6(nodes[index3]);
  }
  function root4(node2) {
    all6(node2.children);
  }
  function element5(node2) {
    resetTokenizer(), parser._processInputToken(startTag(node2)), all6(node2.children), htmlVoidElements.includes(node2.tagName) || (resetTokenizer(), parser._processInputToken(endTag(node2)));
  }
  function text7(node2) {
    resetTokenizer(), parser._processInputToken({
      type: characterToken,
      chars: node2.value,
      location: createParse5Location(node2)
    });
  }
  function doctype3(node2) {
    resetTokenizer(), parser._processInputToken({
      type: doctypeToken,
      name: "html",
      forceQuirks: !1,
      publicId: "",
      systemId: "",
      location: createParse5Location(node2)
    });
  }
  function comment3(node2) {
    resetTokenizer(), parser._processInputToken({
      type: commentToken,
      data: node2.value,
      location: createParse5Location(node2)
    });
  }
  function handleRaw(node2) {
    let start = pointStart(node2), line = start.line || 1, column = start.column || 1, offset = start.offset || 0;
    if (!preprocessor)
      throw new Error("Expected `preprocessor`");
    if (!tokenizer)
      throw new Error("Expected `tokenizer`");
    if (!posTracker)
      throw new Error("Expected `posTracker`");
    if (!locationTracker)
      throw new Error("Expected `locationTracker`");
    preprocessor.html = void 0, preprocessor.pos = -1, preprocessor.lastGapPos = -1, preprocessor.lastCharPos = -1, preprocessor.gapStack = [], preprocessor.skipNextNewLine = !1, preprocessor.lastChunkWritten = !1, preprocessor.endOfChunkHit = !1, posTracker.isEol = !1, posTracker.lineStartPos = -column + 1, posTracker.droppedBufferSize = offset, posTracker.offset = 0, posTracker.col = 1, posTracker.line = line, locationTracker.currentAttrLocation = void 0, locationTracker.ctLoc = createParse5Location(node2), tokenizer.write(node2.value), parser._runParsingLoop(null), (tokenizer.state === "NAMED_CHARACTER_REFERENCE_STATE" || tokenizer.state === "NUMERIC_CHARACTER_REFERENCE_END_STATE") && (preprocessor.lastChunkWritten = !0, tokenizer[tokenizer.state](tokenizer._consume()));
  }
  function stitch(node2) {
    stitches = !0;
    let clone;
    "children" in node2 ? clone = {
      ...node2,
      children: raw(
        { type: "root", children: node2.children },
        file,
        options2
      ).children
    } : clone = { ...node2 }, comment3({ type: "comment", value: { stitch: clone } });
  }
  function resetTokenizer() {
    if (!tokenizer)
      throw new Error("Expected `tokenizer`");
    if (!posTracker)
      throw new Error("Expected `posTracker`");
    let token = tokenizer.currentCharacterToken;
    token && (token.location.endLine = posTracker.line, token.location.endCol = posTracker.col + 1, token.location.endOffset = posTracker.offset + 1, parser._processInputToken(token)), tokenizer.tokenQueue = [], tokenizer.state = dataState, tokenizer.returnState = "", tokenizer.charRefCode = -1, tokenizer.tempBuff = [], tokenizer.lastStartTagName = "", tokenizer.consumedAfterSnapshot = -1, tokenizer.active = !1, tokenizer.currentCharacterToken = void 0, tokenizer.currentToken = void 0, tokenizer.currentAttr = void 0;
  }
};
function startTag(node2) {
  let location2 = Object.assign(createParse5Location(node2));
  return location2.startTag = Object.assign({}, location2), {
    type: startTagToken,
    tagName: node2.tagName,
    selfClosing: !1,
    attrs: attributes(node2),
    location: location2
  };
}
function attributes(node2) {
  return toParse5({
    tagName: node2.tagName,
    type: "element",
    properties: node2.properties,
    children: []
  }).attrs;
}
function endTag(node2) {
  let location2 = Object.assign(createParse5Location(node2));
  return location2.startTag = Object.assign({}, location2), {
    type: endTagToken,
    tagName: node2.tagName,
    attrs: [],
    location: location2
  };
}
function unknown(node2) {
  throw new Error("Cannot compile `" + node2.type + "` node");
}
function documentMode(node2) {
  let head2 = node2.type === "root" ? node2.children[0] : node2;
  return Boolean(
    head2 && (head2.type === "doctype" || head2.type === "element" && head2.tagName === "html")
  );
}
function createParse5Location(node2) {
  let start = pointStart(node2), end = pointEnd(node2);
  return {
    startLine: start.line,
    startCol: start.column,
    startOffset: start.offset,
    endLine: end.line,
    endCol: end.column,
    endOffset: end.offset
  };
}
function isOptions(value) {
  return Boolean(value && !("message" in value && "messages" in value));
}

// node_modules/rehype-raw/index.js
function rehypeRaw(options2 = {}) {
  return (tree, file) => raw(tree, file, options2);
}

// node_modules/hast-util-to-html/lib/index.js
init_property_information();

// node_modules/stringify-entities/lib/core.js
function core2(value, options2) {
  if (value = value.replace(
    options2.subset ? charactersToExpression(options2.subset) : /["&'<>`]/g,
    basic
  ), options2.subset || options2.escapeOnly)
    return value;
  return value.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, surrogate).replace(
    /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,
    basic
  );
  function surrogate(pair, index2, all6) {
    return options2.format(
      (pair.charCodeAt(0) - 55296) * 1024 + pair.charCodeAt(1) - 56320 + 65536,
      all6.charCodeAt(index2 + 2),
      options2
    );
  }
  function basic(character, index2, all6) {
    return options2.format(
      character.charCodeAt(0),
      all6.charCodeAt(index2 + 1),
      options2
    );
  }
}
function charactersToExpression(subset) {
  let groups = [], index2 = -1;
  for (; ++index2 < subset.length; )
    groups.push(subset[index2].replace(/[|\\{}()[\]^$+*?.]/g, "\\$&"));
  return new RegExp("(?:" + groups.join("|") + ")", "g");
}

// node_modules/stringify-entities/lib/util/to-hexadecimal.js
function toHexadecimal(code3, next, omit) {
  let value = "&#x" + code3.toString(16).toUpperCase();
  return omit && next && !/[\dA-Fa-f]/.test(String.fromCharCode(next)) ? value : value + ";";
}

// node_modules/stringify-entities/lib/util/to-decimal.js
function toDecimal(code3, next, omit) {
  let value = "&#" + String(code3);
  return omit && next && !/\d/.test(String.fromCharCode(next)) ? value : value + ";";
}

// node_modules/character-entities-legacy/index.js
var characterEntitiesLegacy = [
  "AElig",
  "AMP",
  "Aacute",
  "Acirc",
  "Agrave",
  "Aring",
  "Atilde",
  "Auml",
  "COPY",
  "Ccedil",
  "ETH",
  "Eacute",
  "Ecirc",
  "Egrave",
  "Euml",
  "GT",
  "Iacute",
  "Icirc",
  "Igrave",
  "Iuml",
  "LT",
  "Ntilde",
  "Oacute",
  "Ocirc",
  "Ograve",
  "Oslash",
  "Otilde",
  "Ouml",
  "QUOT",
  "REG",
  "THORN",
  "Uacute",
  "Ucirc",
  "Ugrave",
  "Uuml",
  "Yacute",
  "aacute",
  "acirc",
  "acute",
  "aelig",
  "agrave",
  "amp",
  "aring",
  "atilde",
  "auml",
  "brvbar",
  "ccedil",
  "cedil",
  "cent",
  "copy",
  "curren",
  "deg",
  "divide",
  "eacute",
  "ecirc",
  "egrave",
  "eth",
  "euml",
  "frac12",
  "frac14",
  "frac34",
  "gt",
  "iacute",
  "icirc",
  "iexcl",
  "igrave",
  "iquest",
  "iuml",
  "laquo",
  "lt",
  "macr",
  "micro",
  "middot",
  "nbsp",
  "not",
  "ntilde",
  "oacute",
  "ocirc",
  "ograve",
  "ordf",
  "ordm",
  "oslash",
  "otilde",
  "ouml",
  "para",
  "plusmn",
  "pound",
  "quot",
  "raquo",
  "reg",
  "sect",
  "shy",
  "sup1",
  "sup2",
  "sup3",
  "szlig",
  "thorn",
  "times",
  "uacute",
  "ucirc",
  "ugrave",
  "uml",
  "uuml",
  "yacute",
  "yen",
  "yuml"
];

// node_modules/character-entities-html4/index.js
var characterEntitiesHtml4 = {
  nbsp: "\xA0",
  iexcl: "\xA1",
  cent: "\xA2",
  pound: "\xA3",
  curren: "\xA4",
  yen: "\xA5",
  brvbar: "\xA6",
  sect: "\xA7",
  uml: "\xA8",
  copy: "\xA9",
  ordf: "\xAA",
  laquo: "\xAB",
  not: "\xAC",
  shy: "\xAD",
  reg: "\xAE",
  macr: "\xAF",
  deg: "\xB0",
  plusmn: "\xB1",
  sup2: "\xB2",
  sup3: "\xB3",
  acute: "\xB4",
  micro: "\xB5",
  para: "\xB6",
  middot: "\xB7",
  cedil: "\xB8",
  sup1: "\xB9",
  ordm: "\xBA",
  raquo: "\xBB",
  frac14: "\xBC",
  frac12: "\xBD",
  frac34: "\xBE",
  iquest: "\xBF",
  Agrave: "\xC0",
  Aacute: "\xC1",
  Acirc: "\xC2",
  Atilde: "\xC3",
  Auml: "\xC4",
  Aring: "\xC5",
  AElig: "\xC6",
  Ccedil: "\xC7",
  Egrave: "\xC8",
  Eacute: "\xC9",
  Ecirc: "\xCA",
  Euml: "\xCB",
  Igrave: "\xCC",
  Iacute: "\xCD",
  Icirc: "\xCE",
  Iuml: "\xCF",
  ETH: "\xD0",
  Ntilde: "\xD1",
  Ograve: "\xD2",
  Oacute: "\xD3",
  Ocirc: "\xD4",
  Otilde: "\xD5",
  Ouml: "\xD6",
  times: "\xD7",
  Oslash: "\xD8",
  Ugrave: "\xD9",
  Uacute: "\xDA",
  Ucirc: "\xDB",
  Uuml: "\xDC",
  Yacute: "\xDD",
  THORN: "\xDE",
  szlig: "\xDF",
  agrave: "\xE0",
  aacute: "\xE1",
  acirc: "\xE2",
  atilde: "\xE3",
  auml: "\xE4",
  aring: "\xE5",
  aelig: "\xE6",
  ccedil: "\xE7",
  egrave: "\xE8",
  eacute: "\xE9",
  ecirc: "\xEA",
  euml: "\xEB",
  igrave: "\xEC",
  iacute: "\xED",
  icirc: "\xEE",
  iuml: "\xEF",
  eth: "\xF0",
  ntilde: "\xF1",
  ograve: "\xF2",
  oacute: "\xF3",
  ocirc: "\xF4",
  otilde: "\xF5",
  ouml: "\xF6",
  divide: "\xF7",
  oslash: "\xF8",
  ugrave: "\xF9",
  uacute: "\xFA",
  ucirc: "\xFB",
  uuml: "\xFC",
  yacute: "\xFD",
  thorn: "\xFE",
  yuml: "\xFF",
  fnof: "\u0192",
  Alpha: "\u0391",
  Beta: "\u0392",
  Gamma: "\u0393",
  Delta: "\u0394",
  Epsilon: "\u0395",
  Zeta: "\u0396",
  Eta: "\u0397",
  Theta: "\u0398",
  Iota: "\u0399",
  Kappa: "\u039A",
  Lambda: "\u039B",
  Mu: "\u039C",
  Nu: "\u039D",
  Xi: "\u039E",
  Omicron: "\u039F",
  Pi: "\u03A0",
  Rho: "\u03A1",
  Sigma: "\u03A3",
  Tau: "\u03A4",
  Upsilon: "\u03A5",
  Phi: "\u03A6",
  Chi: "\u03A7",
  Psi: "\u03A8",
  Omega: "\u03A9",
  alpha: "\u03B1",
  beta: "\u03B2",
  gamma: "\u03B3",
  delta: "\u03B4",
  epsilon: "\u03B5",
  zeta: "\u03B6",
  eta: "\u03B7",
  theta: "\u03B8",
  iota: "\u03B9",
  kappa: "\u03BA",
  lambda: "\u03BB",
  mu: "\u03BC",
  nu: "\u03BD",
  xi: "\u03BE",
  omicron: "\u03BF",
  pi: "\u03C0",
  rho: "\u03C1",
  sigmaf: "\u03C2",
  sigma: "\u03C3",
  tau: "\u03C4",
  upsilon: "\u03C5",
  phi: "\u03C6",
  chi: "\u03C7",
  psi: "\u03C8",
  omega: "\u03C9",
  thetasym: "\u03D1",
  upsih: "\u03D2",
  piv: "\u03D6",
  bull: "\u2022",
  hellip: "\u2026",
  prime: "\u2032",
  Prime: "\u2033",
  oline: "\u203E",
  frasl: "\u2044",
  weierp: "\u2118",
  image: "\u2111",
  real: "\u211C",
  trade: "\u2122",
  alefsym: "\u2135",
  larr: "\u2190",
  uarr: "\u2191",
  rarr: "\u2192",
  darr: "\u2193",
  harr: "\u2194",
  crarr: "\u21B5",
  lArr: "\u21D0",
  uArr: "\u21D1",
  rArr: "\u21D2",
  dArr: "\u21D3",
  hArr: "\u21D4",
  forall: "\u2200",
  part: "\u2202",
  exist: "\u2203",
  empty: "\u2205",
  nabla: "\u2207",
  isin: "\u2208",
  notin: "\u2209",
  ni: "\u220B",
  prod: "\u220F",
  sum: "\u2211",
  minus: "\u2212",
  lowast: "\u2217",
  radic: "\u221A",
  prop: "\u221D",
  infin: "\u221E",
  ang: "\u2220",
  and: "\u2227",
  or: "\u2228",
  cap: "\u2229",
  cup: "\u222A",
  int: "\u222B",
  there4: "\u2234",
  sim: "\u223C",
  cong: "\u2245",
  asymp: "\u2248",
  ne: "\u2260",
  equiv: "\u2261",
  le: "\u2264",
  ge: "\u2265",
  sub: "\u2282",
  sup: "\u2283",
  nsub: "\u2284",
  sube: "\u2286",
  supe: "\u2287",
  oplus: "\u2295",
  otimes: "\u2297",
  perp: "\u22A5",
  sdot: "\u22C5",
  lceil: "\u2308",
  rceil: "\u2309",
  lfloor: "\u230A",
  rfloor: "\u230B",
  lang: "\u2329",
  rang: "\u232A",
  loz: "\u25CA",
  spades: "\u2660",
  clubs: "\u2663",
  hearts: "\u2665",
  diams: "\u2666",
  quot: '"',
  amp: "&",
  lt: "<",
  gt: ">",
  OElig: "\u0152",
  oelig: "\u0153",
  Scaron: "\u0160",
  scaron: "\u0161",
  Yuml: "\u0178",
  circ: "\u02C6",
  tilde: "\u02DC",
  ensp: "\u2002",
  emsp: "\u2003",
  thinsp: "\u2009",
  zwnj: "\u200C",
  zwj: "\u200D",
  lrm: "\u200E",
  rlm: "\u200F",
  ndash: "\u2013",
  mdash: "\u2014",
  lsquo: "\u2018",
  rsquo: "\u2019",
  sbquo: "\u201A",
  ldquo: "\u201C",
  rdquo: "\u201D",
  bdquo: "\u201E",
  dagger: "\u2020",
  Dagger: "\u2021",
  permil: "\u2030",
  lsaquo: "\u2039",
  rsaquo: "\u203A",
  euro: "\u20AC"
};

// node_modules/stringify-entities/lib/constant/dangerous.js
var dangerous = [
  "cent",
  "copy",
  "divide",
  "gt",
  "lt",
  "not",
  "para",
  "times"
];

// node_modules/stringify-entities/lib/util/to-named.js
var own9 = {}.hasOwnProperty, characters = {}, key;
for (key in characterEntitiesHtml4)
  own9.call(characterEntitiesHtml4, key) && (characters[characterEntitiesHtml4[key]] = key);
function toNamed(code3, next, omit, attribute) {
  let character = String.fromCharCode(code3);
  if (own9.call(characters, character)) {
    let name = characters[character], value = "&" + name;
    return omit && characterEntitiesLegacy.includes(name) && !dangerous.includes(name) && (!attribute || next && next !== 61 && /[^\da-z]/i.test(String.fromCharCode(next))) ? value : value + ";";
  }
  return "";
}

// node_modules/stringify-entities/lib/util/format-smart.js
function formatSmart(code3, next, options2) {
  let numeric = toHexadecimal(code3, next, options2.omitOptionalSemicolons), named;
  if ((options2.useNamedReferences || options2.useShortestReferences) && (named = toNamed(
    code3,
    next,
    options2.omitOptionalSemicolons,
    options2.attribute
  )), (options2.useShortestReferences || !named) && options2.useShortestReferences) {
    let decimal = toDecimal(code3, next, options2.omitOptionalSemicolons);
    decimal.length < numeric.length && (numeric = decimal);
  }
  return named && (!options2.useShortestReferences || named.length < numeric.length) ? named : numeric;
}

// node_modules/stringify-entities/lib/index.js
function stringifyEntities(value, options2) {
  return core2(value, Object.assign({ format: formatSmart }, options2));
}

// node_modules/hast-util-to-html/lib/handle/comment.js
function comment2(node2, _1, _2, state) {
  return state.settings.bogusComments ? "<?" + stringifyEntities(
    node2.value,
    Object.assign({}, state.settings.characterReferences, { subset: [">"] })
  ) + ">" : "<!--" + node2.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + "-->";
  function encode($0) {
    return stringifyEntities(
      $0,
      Object.assign({}, state.settings.characterReferences, {
        subset: ["<", ">"]
      })
    );
  }
}

// node_modules/hast-util-to-html/lib/handle/doctype.js
function doctype2(_1, _2, _3, state) {
  return "<!" + (state.settings.upperDoctype ? "DOCTYPE" : "doctype") + (state.settings.tightDoctype ? "" : " ") + "html>";
}

// node_modules/ccount/index.js
function ccount(value, character) {
  let source = String(value);
  if (typeof character != "string")
    throw new TypeError("Expected character");
  let count = 0, index2 = source.indexOf(character);
  for (; index2 !== -1; )
    count++, index2 = source.indexOf(character, index2 + character.length);
  return count;
}

// node_modules/hast-util-to-html/lib/handle/element.js
init_comma_separated_tokens();
init_property_information();
init_space_separated_tokens();

// node_modules/hast-util-to-html/lib/omission/util/siblings.js
var siblingAfter = siblings(1), siblingBefore = siblings(-1);
function siblings(increment2) {
  return sibling;
  function sibling(parent, index2, includeWhitespace) {
    let siblings2 = parent ? parent.children : [], offset = (index2 || 0) + increment2, next = siblings2 && siblings2[offset];
    if (!includeWhitespace)
      for (; next && whitespace(next); )
        offset += increment2, next = siblings2[offset];
    return next;
  }
}

// node_modules/hast-util-to-html/lib/omission/omission.js
var own10 = {}.hasOwnProperty;
function omission(handlers2) {
  return omit;
  function omit(node2, index2, parent) {
    return own10.call(handlers2, node2.tagName) && handlers2[node2.tagName](node2, index2, parent);
  }
}

// node_modules/hast-util-to-html/lib/omission/closing.js
var closing = omission({
  html: html3,
  head: headOrColgroupOrCaption,
  body,
  p,
  li,
  dt,
  dd,
  rt: rubyElement,
  rp: rubyElement,
  optgroup,
  option,
  menuitem,
  colgroup: headOrColgroupOrCaption,
  caption: headOrColgroupOrCaption,
  thead,
  tbody,
  tfoot,
  tr,
  td: cells,
  th: cells
});
function headOrColgroupOrCaption(_, index2, parent) {
  let next = siblingAfter(parent, index2, !0);
  return !next || next.type !== "comment" && !(next.type === "text" && whitespace(next.value.charAt(0)));
}
function html3(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type !== "comment";
}
function body(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type !== "comment";
}
function p(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return next ? next.type === "element" && (next.tagName === "address" || next.tagName === "article" || next.tagName === "aside" || next.tagName === "blockquote" || next.tagName === "details" || next.tagName === "div" || next.tagName === "dl" || next.tagName === "fieldset" || next.tagName === "figcaption" || next.tagName === "figure" || next.tagName === "footer" || next.tagName === "form" || next.tagName === "h1" || next.tagName === "h2" || next.tagName === "h3" || next.tagName === "h4" || next.tagName === "h5" || next.tagName === "h6" || next.tagName === "header" || next.tagName === "hgroup" || next.tagName === "hr" || next.tagName === "main" || next.tagName === "menu" || next.tagName === "nav" || next.tagName === "ol" || next.tagName === "p" || next.tagName === "pre" || next.tagName === "section" || next.tagName === "table" || next.tagName === "ul") : !parent || !(parent.type === "element" && (parent.tagName === "a" || parent.tagName === "audio" || parent.tagName === "del" || parent.tagName === "ins" || parent.tagName === "map" || parent.tagName === "noscript" || parent.tagName === "video"));
}
function li(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && next.tagName === "li";
}
function dt(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return next && next.type === "element" && (next.tagName === "dt" || next.tagName === "dd");
}
function dd(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && (next.tagName === "dt" || next.tagName === "dd");
}
function rubyElement(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && (next.tagName === "rp" || next.tagName === "rt");
}
function optgroup(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && next.tagName === "optgroup";
}
function option(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && (next.tagName === "option" || next.tagName === "optgroup");
}
function menuitem(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && (next.tagName === "menuitem" || next.tagName === "hr" || next.tagName === "menu");
}
function thead(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return next && next.type === "element" && (next.tagName === "tbody" || next.tagName === "tfoot");
}
function tbody(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && (next.tagName === "tbody" || next.tagName === "tfoot");
}
function tfoot(_, index2, parent) {
  return !siblingAfter(parent, index2);
}
function tr(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && next.tagName === "tr";
}
function cells(_, index2, parent) {
  let next = siblingAfter(parent, index2);
  return !next || next.type === "element" && (next.tagName === "td" || next.tagName === "th");
}

// node_modules/hast-util-to-html/lib/omission/opening.js
var opening = omission({
  html: html4,
  head,
  body: body2,
  colgroup,
  tbody: tbody2
});
function html4(node2) {
  let head2 = siblingAfter(node2, -1);
  return !head2 || head2.type !== "comment";
}
function head(node2) {
  let children = node2.children, seen = [], index2 = -1;
  for (; ++index2 < children.length; ) {
    let child = children[index2];
    if (child.type === "element" && (child.tagName === "title" || child.tagName === "base")) {
      if (seen.includes(child.tagName))
        return !1;
      seen.push(child.tagName);
    }
  }
  return children.length > 0;
}
function body2(node2) {
  let head2 = siblingAfter(node2, -1, !0);
  return !head2 || head2.type !== "comment" && !(head2.type === "text" && whitespace(head2.value.charAt(0))) && !(head2.type === "element" && (head2.tagName === "meta" || head2.tagName === "link" || head2.tagName === "script" || head2.tagName === "style" || head2.tagName === "template"));
}
function colgroup(node2, index2, parent) {
  let previous3 = siblingBefore(parent, index2), head2 = siblingAfter(node2, -1, !0);
  return parent && previous3 && previous3.type === "element" && previous3.tagName === "colgroup" && closing(previous3, parent.children.indexOf(previous3), parent) ? !1 : head2 && head2.type === "element" && head2.tagName === "col";
}
function tbody2(node2, index2, parent) {
  let previous3 = siblingBefore(parent, index2), head2 = siblingAfter(node2, -1);
  return parent && previous3 && previous3.type === "element" && (previous3.tagName === "thead" || previous3.tagName === "tbody") && closing(previous3, parent.children.indexOf(previous3), parent) ? !1 : head2 && head2.type === "element" && head2.tagName === "tr";
}

// node_modules/hast-util-to-html/lib/handle/element.js
var constants = {
  name: [
    [`	
\f\r &/=>`.split(""), `	
\f\r "&'/=>\``.split("")],
    [`\0	
\f\r "&'/<=>`.split(""), `\0	
\f\r "&'/<=>\``.split("")]
  ],
  unquoted: [
    [`	
\f\r &>`.split(""), `\0	
\f\r "&'<=>\``.split("")],
    [`\0	
\f\r "&'<=>\``.split(""), `\0	
\f\r "&'<=>\``.split("")]
  ],
  single: [
    ["&'".split(""), "\"&'`".split("")],
    ["\0&'".split(""), "\0\"&'`".split("")]
  ],
  double: [
    ['"&'.split(""), "\"&'`".split("")],
    ['\0"&'.split(""), "\0\"&'`".split("")]
  ]
};
function element4(node2, index2, parent, state) {
  let schema = state.schema, omit = schema.space === "svg" ? !1 : state.settings.omitOptionalTags, selfClosing = schema.space === "svg" ? state.settings.closeEmptyElements : state.settings.voids.includes(node2.tagName.toLowerCase()), parts = [], last;
  schema.space === "html" && node2.tagName === "svg" && (state.schema = svg2);
  let attrs = serializeAttributes2(state, node2.properties), content3 = state.all(
    schema.space === "html" && node2.tagName === "template" ? node2.content : node2
  );
  return state.schema = schema, content3 && (selfClosing = !1), (attrs || !omit || !opening(node2, index2, parent)) && (parts.push("<", node2.tagName, attrs ? " " + attrs : ""), selfClosing && (schema.space === "svg" || state.settings.closeSelfClosing) && (last = attrs.charAt(attrs.length - 1), (!state.settings.tightSelfClosing || last === "/" || last && last !== '"' && last !== "'") && parts.push(" "), parts.push("/")), parts.push(">")), parts.push(content3), !selfClosing && (!omit || !closing(node2, index2, parent)) && parts.push("</" + node2.tagName + ">"), parts.join("");
}
function serializeAttributes2(state, props) {
  let values = [], index2 = -1, key2;
  if (props) {
    for (key2 in props)
      if (props[key2] !== void 0 && props[key2] !== null) {
        let value = serializeAttribute(state, key2, props[key2]);
        value && values.push(value);
      }
  }
  for (; ++index2 < values.length; ) {
    let last = state.settings.tightAttributes ? values[index2].charAt(values[index2].length - 1) : null;
    index2 !== values.length - 1 && last !== '"' && last !== "'" && (values[index2] += " ");
  }
  return values.join("");
}
function serializeAttribute(state, key2, value) {
  let info = find(state.schema, key2), x = state.settings.allowParseErrors && state.schema.space === "html" ? 0 : 1, y = state.settings.allowDangerousCharacters ? 0 : 1, quote = state.quote, result;
  if (info.overloadedBoolean && (value === info.attribute || value === "") ? value = !0 : (info.boolean || info.overloadedBoolean && typeof value != "string") && (value = Boolean(value)), value == null || value === !1 || typeof value == "number" && Number.isNaN(value))
    return "";
  let name = stringifyEntities(
    info.attribute,
    Object.assign({}, state.settings.characterReferences, {
      subset: constants.name[x][y]
    })
  );
  return value === !0 || (value = Array.isArray(value) ? (info.commaSeparated ? stringify2 : stringify)(value, {
    padLeft: !state.settings.tightCommaSeparatedLists
  }) : String(value), state.settings.collapseEmptyAttributes && !value) ? name : (state.settings.preferUnquoted && (result = stringifyEntities(
    value,
    Object.assign({}, state.settings.characterReferences, {
      subset: constants.unquoted[x][y],
      attribute: !0
    })
  )), result !== value && (state.settings.quoteSmart && ccount(value, quote) > ccount(value, state.alternative) && (quote = state.alternative), result = quote + stringifyEntities(
    value,
    Object.assign({}, state.settings.characterReferences, {
      subset: (quote === "'" ? constants.single : constants.double)[x][y],
      attribute: !0
    })
  ) + quote), name + (result && "=" + result));
}

// node_modules/hast-util-to-html/lib/handle/text.js
function text2(node2, _, parent, state) {
  return parent && parent.type === "element" && (parent.tagName === "script" || parent.tagName === "style") ? node2.value : stringifyEntities(
    node2.value,
    Object.assign({}, state.settings.characterReferences, {
      subset: ["<", "&"]
    })
  );
}

// node_modules/hast-util-to-html/lib/handle/raw.js
function raw2(node2, index2, parent, state) {
  return state.settings.allowDangerousHtml ? node2.value : text2(node2, index2, parent, state);
}

// node_modules/hast-util-to-html/lib/handle/root.js
function root2(node2, _1, _2, state) {
  return state.all(node2);
}

// node_modules/hast-util-to-html/lib/handle/index.js
var handle = zwitch("type", {
  invalid,
  unknown: unknown2,
  handlers: { comment: comment2, doctype: doctype2, element: element4, raw: raw2, root: root2, text: text2 }
});
function invalid(node2) {
  throw new Error("Expected node, not `" + node2 + "`");
}
function unknown2(node2) {
  throw new Error("Cannot compile unknown node `" + node2.type + "`");
}

// node_modules/hast-util-to-html/lib/index.js
function toHtml(tree, options2) {
  let options_ = options2 || {}, quote = options_.quote || '"', alternative = quote === '"' ? "'" : '"';
  if (quote !== '"' && quote !== "'")
    throw new Error("Invalid quote `" + quote + "`, expected `'` or `\"`");
  return {
    one: one3,
    all: all3,
    settings: {
      omitOptionalTags: options_.omitOptionalTags || !1,
      allowParseErrors: options_.allowParseErrors || !1,
      allowDangerousCharacters: options_.allowDangerousCharacters || !1,
      quoteSmart: options_.quoteSmart || !1,
      preferUnquoted: options_.preferUnquoted || !1,
      tightAttributes: options_.tightAttributes || !1,
      upperDoctype: options_.upperDoctype || !1,
      tightDoctype: options_.tightDoctype || !1,
      bogusComments: options_.bogusComments || !1,
      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || !1,
      tightSelfClosing: options_.tightSelfClosing || !1,
      collapseEmptyAttributes: options_.collapseEmptyAttributes || !1,
      allowDangerousHtml: options_.allowDangerousHtml || !1,
      voids: options_.voids || htmlVoidElements,
      characterReferences: options_.characterReferences || options_.entities || {},
      closeSelfClosing: options_.closeSelfClosing || !1,
      closeEmptyElements: options_.closeEmptyElements || !1
    },
    schema: options_.space === "svg" ? svg2 : html2,
    quote,
    alternative
  }.one(
    Array.isArray(tree) ? { type: "root", children: tree } : tree,
    void 0,
    void 0
  );
}
function one3(node2, index2, parent) {
  return handle(node2, index2, parent, this);
}
function all3(parent) {
  let results = [], children = parent && parent.children || [], index2 = -1;
  for (; ++index2 < children.length; )
    results[index2] = this.one(children[index2], index2, parent);
  return results.join("");
}

// node_modules/rehype-stringify/lib/index.js
function rehypeStringify(config) {
  let processorSettings = this.data("settings"), settings = Object.assign({}, processorSettings, config);
  Object.assign(this, { Compiler: compiler2 });
  function compiler2(tree) {
    return toHtml(tree, settings);
  }
}

// node_modules/micromark-util-chunked/index.js
function splice(list3, start, remove, items) {
  let end = list3.length, chunkStart = 0, parameters;
  if (start < 0 ? start = -start > end ? 0 : end + start : start = start > end ? end : start, remove = remove > 0 ? remove : 0, items.length < 1e4)
    parameters = Array.from(items), parameters.unshift(start, remove), [].splice.apply(list3, parameters);
  else
    for (remove && [].splice.apply(list3, [start, remove]); chunkStart < items.length; )
      parameters = items.slice(chunkStart, chunkStart + 1e4), parameters.unshift(start, 0), [].splice.apply(list3, parameters), chunkStart += 1e4, start += 1e4;
}
function push(list3, items) {
  return list3.length > 0 ? (splice(list3, list3.length, 0, items), list3) : items;
}

// node_modules/micromark-util-combine-extensions/index.js
var hasOwnProperty = {}.hasOwnProperty;
function combineExtensions(extensions) {
  let all6 = {}, index2 = -1;
  for (; ++index2 < extensions.length; )
    syntaxExtension(all6, extensions[index2]);
  return all6;
}
function syntaxExtension(all6, extension2) {
  let hook;
  for (hook in extension2) {
    let left = (hasOwnProperty.call(all6, hook) ? all6[hook] : void 0) || (all6[hook] = {}), right = extension2[hook], code3;
    for (code3 in right) {
      hasOwnProperty.call(left, code3) || (left[code3] = []);
      let value = right[code3];
      constructs(
        left[code3],
        Array.isArray(value) ? value : value ? [value] : []
      );
    }
  }
}
function constructs(existing, list3) {
  let index2 = -1, before = [];
  for (; ++index2 < list3.length; )
    (list3[index2].add === "after" ? existing : before).push(list3[index2]);
  splice(existing, 0, 0, before);
}

// node_modules/micromark-util-character/lib/unicode-punctuation-regex.js
var unicodePunctuationRegex = /[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;

// node_modules/micromark-util-character/index.js
var asciiAlpha = regexCheck(/[A-Za-z]/), asciiDigit = regexCheck(/\d/), asciiHexDigit = regexCheck(/[\dA-Fa-f]/), asciiAlphanumeric = regexCheck(/[\dA-Za-z]/), asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/), asciiAtext = regexCheck(/[#-'*+\--9=?A-Z^-~]/);
function asciiControl(code3) {
  return code3 !== null && (code3 < 32 || code3 === 127);
}
function markdownLineEndingOrSpace(code3) {
  return code3 !== null && (code3 < 0 || code3 === 32);
}
function markdownLineEnding(code3) {
  return code3 !== null && code3 < -2;
}
function markdownSpace(code3) {
  return code3 === -2 || code3 === -1 || code3 === 32;
}
var unicodeWhitespace = regexCheck(/\s/), unicodePunctuation = regexCheck(unicodePunctuationRegex);
function regexCheck(regex) {
  return check;
  function check(code3) {
    return code3 !== null && regex.test(String.fromCharCode(code3));
  }
}

// node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js
var www = {
  tokenize: tokenizeWww,
  partial: !0
}, domain = {
  tokenize: tokenizeDomain,
  partial: !0
}, path = {
  tokenize: tokenizePath,
  partial: !0
}, punctuation = {
  tokenize: tokenizePunctuation,
  partial: !0
}, namedCharacterReference = {
  tokenize: tokenizeNamedCharacterReference,
  partial: !0
}, wwwAutolink = {
  tokenize: tokenizeWwwAutolink,
  previous: previousWww
}, httpAutolink = {
  tokenize: tokenizeHttpAutolink,
  previous: previousHttp
}, emailAutolink = {
  tokenize: tokenizeEmailAutolink,
  previous: previousEmail
}, text3 = {}, gfmAutolinkLiteral = {
  text: text3
}, code = 48;
for (; code < 123; )
  text3[code] = emailAutolink, code++, code === 58 ? code = 65 : code === 91 && (code = 97);
text3[43] = emailAutolink;
text3[45] = emailAutolink;
text3[46] = emailAutolink;
text3[95] = emailAutolink;
text3[72] = [emailAutolink, httpAutolink];
text3[104] = [emailAutolink, httpAutolink];
text3[87] = [emailAutolink, wwwAutolink];
text3[119] = [emailAutolink, wwwAutolink];
function tokenizeEmailAutolink(effects, ok2, nok) {
  let self2 = this, hasDot, hasDigitInLastSegment;
  return start;
  function start(code3) {
    return !gfmAtext(code3) || !previousEmail(self2.previous) || previousUnbalanced(self2.events) ? nok(code3) : (effects.enter("literalAutolink"), effects.enter("literalAutolinkEmail"), atext(code3));
  }
  function atext(code3) {
    return gfmAtext(code3) ? (effects.consume(code3), atext) : code3 === 64 ? (effects.consume(code3), label) : nok(code3);
  }
  function label(code3) {
    return code3 === 46 ? effects.check(punctuation, done, dotContinuation)(code3) : code3 === 45 || code3 === 95 ? effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code3) : asciiAlphanumeric(code3) ? (!hasDigitInLastSegment && asciiDigit(code3) && (hasDigitInLastSegment = !0), effects.consume(code3), label) : done(code3);
  }
  function dotContinuation(code3) {
    return effects.consume(code3), hasDot = !0, hasDigitInLastSegment = void 0, label;
  }
  function dashOrUnderscoreContinuation(code3) {
    return effects.consume(code3), afterDashOrUnderscore;
  }
  function afterDashOrUnderscore(code3) {
    return code3 === 46 ? effects.check(punctuation, nok, dotContinuation)(code3) : label(code3);
  }
  function done(code3) {
    return hasDot && !hasDigitInLastSegment ? (effects.exit("literalAutolinkEmail"), effects.exit("literalAutolink"), ok2(code3)) : nok(code3);
  }
}
function tokenizeWwwAutolink(effects, ok2, nok) {
  let self2 = this;
  return start;
  function start(code3) {
    return code3 !== 87 && code3 !== 119 || !previousWww(self2.previous) || previousUnbalanced(self2.events) ? nok(code3) : (effects.enter("literalAutolink"), effects.enter("literalAutolinkWww"), effects.check(
      www,
      effects.attempt(domain, effects.attempt(path, done), nok),
      nok
    )(code3));
  }
  function done(code3) {
    return effects.exit("literalAutolinkWww"), effects.exit("literalAutolink"), ok2(code3);
  }
}
function tokenizeHttpAutolink(effects, ok2, nok) {
  let self2 = this;
  return start;
  function start(code3) {
    return code3 !== 72 && code3 !== 104 || !previousHttp(self2.previous) || previousUnbalanced(self2.events) ? nok(code3) : (effects.enter("literalAutolink"), effects.enter("literalAutolinkHttp"), effects.consume(code3), t1);
  }
  function t1(code3) {
    return code3 === 84 || code3 === 116 ? (effects.consume(code3), t2) : nok(code3);
  }
  function t2(code3) {
    return code3 === 84 || code3 === 116 ? (effects.consume(code3), p2) : nok(code3);
  }
  function p2(code3) {
    return code3 === 80 || code3 === 112 ? (effects.consume(code3), s2) : nok(code3);
  }
  function s2(code3) {
    return code3 === 83 || code3 === 115 ? (effects.consume(code3), colon) : colon(code3);
  }
  function colon(code3) {
    return code3 === 58 ? (effects.consume(code3), slash1) : nok(code3);
  }
  function slash1(code3) {
    return code3 === 47 ? (effects.consume(code3), slash2) : nok(code3);
  }
  function slash2(code3) {
    return code3 === 47 ? (effects.consume(code3), after) : nok(code3);
  }
  function after(code3) {
    return code3 === null || asciiControl(code3) || unicodeWhitespace(code3) || unicodePunctuation(code3) ? nok(code3) : effects.attempt(domain, effects.attempt(path, done), nok)(code3);
  }
  function done(code3) {
    return effects.exit("literalAutolinkHttp"), effects.exit("literalAutolink"), ok2(code3);
  }
}
function tokenizeWww(effects, ok2, nok) {
  return start;
  function start(code3) {
    return effects.consume(code3), w2;
  }
  function w2(code3) {
    return code3 === 87 || code3 === 119 ? (effects.consume(code3), w3) : nok(code3);
  }
  function w3(code3) {
    return code3 === 87 || code3 === 119 ? (effects.consume(code3), dot) : nok(code3);
  }
  function dot(code3) {
    return code3 === 46 ? (effects.consume(code3), after) : nok(code3);
  }
  function after(code3) {
    return code3 === null || markdownLineEnding(code3) ? nok(code3) : ok2(code3);
  }
}
function tokenizeDomain(effects, ok2, nok) {
  let hasUnderscoreInLastSegment, hasUnderscoreInLastLastSegment;
  return domain2;
  function domain2(code3) {
    return code3 === 38 ? effects.check(
      namedCharacterReference,
      done,
      punctuationContinuation
    )(code3) : code3 === 46 || code3 === 95 ? effects.check(punctuation, done, punctuationContinuation)(code3) : code3 === null || asciiControl(code3) || unicodeWhitespace(code3) || code3 !== 45 && unicodePunctuation(code3) ? done(code3) : (effects.consume(code3), domain2);
  }
  function punctuationContinuation(code3) {
    return code3 === 46 ? (hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment, hasUnderscoreInLastSegment = void 0, effects.consume(code3), domain2) : (code3 === 95 && (hasUnderscoreInLastSegment = !0), effects.consume(code3), domain2);
  }
  function done(code3) {
    return !hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment ? ok2(code3) : nok(code3);
  }
}
function tokenizePath(effects, ok2) {
  let balance = 0;
  return inPath;
  function inPath(code3) {
    return code3 === 38 ? effects.check(
      namedCharacterReference,
      ok2,
      continuedPunctuation
    )(code3) : (code3 === 40 && balance++, code3 === 41 ? effects.check(
      punctuation,
      parenAtPathEnd,
      continuedPunctuation
    )(code3) : pathEnd(code3) ? ok2(code3) : trailingPunctuation(code3) ? effects.check(punctuation, ok2, continuedPunctuation)(code3) : (effects.consume(code3), inPath));
  }
  function continuedPunctuation(code3) {
    return effects.consume(code3), inPath;
  }
  function parenAtPathEnd(code3) {
    return balance--, balance < 0 ? ok2(code3) : continuedPunctuation(code3);
  }
}
function tokenizeNamedCharacterReference(effects, ok2, nok) {
  return start;
  function start(code3) {
    return effects.consume(code3), inside;
  }
  function inside(code3) {
    return asciiAlpha(code3) ? (effects.consume(code3), inside) : code3 === 59 ? (effects.consume(code3), after) : nok(code3);
  }
  function after(code3) {
    return pathEnd(code3) ? ok2(code3) : nok(code3);
  }
}
function tokenizePunctuation(effects, ok2, nok) {
  return start;
  function start(code3) {
    return effects.consume(code3), after;
  }
  function after(code3) {
    return trailingPunctuation(code3) ? (effects.consume(code3), after) : pathEnd(code3) ? ok2(code3) : nok(code3);
  }
}
function trailingPunctuation(code3) {
  return code3 === 33 || code3 === 34 || code3 === 39 || code3 === 41 || code3 === 42 || code3 === 44 || code3 === 46 || code3 === 58 || code3 === 59 || code3 === 60 || code3 === 63 || code3 === 95 || code3 === 126;
}
function pathEnd(code3) {
  return code3 === null || code3 === 60 || markdownLineEndingOrSpace(code3);
}
function gfmAtext(code3) {
  return code3 === 43 || code3 === 45 || code3 === 46 || code3 === 95 || asciiAlphanumeric(code3);
}
function previousWww(code3) {
  return code3 === null || code3 === 40 || code3 === 42 || code3 === 95 || code3 === 126 || markdownLineEndingOrSpace(code3);
}
function previousHttp(code3) {
  return code3 === null || !asciiAlpha(code3);
}
function previousEmail(code3) {
  return code3 !== 47 && previousHttp(code3);
}
function previousUnbalanced(events) {
  let index2 = events.length, result = !1;
  for (; index2--; ) {
    let token = events[index2][1];
    if ((token.type === "labelLink" || token.type === "labelImage") && !token._balanced) {
      result = !0;
      break;
    }
    if (token._gfmAutolinkLiteralWalkedInto) {
      result = !1;
      break;
    }
  }
  return events.length > 0 && !result && (events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = !0), result;
}

// node_modules/micromark-util-sanitize-uri/index.js
function normalizeUri(value) {
  let result = [], index2 = -1, start = 0, skip = 0;
  for (; ++index2 < value.length; ) {
    let code3 = value.charCodeAt(index2), replace2 = "";
    if (code3 === 37 && asciiAlphanumeric(value.charCodeAt(index2 + 1)) && asciiAlphanumeric(value.charCodeAt(index2 + 2)))
      skip = 2;
    else if (code3 < 128)
      /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code3)) || (replace2 = String.fromCharCode(code3));
    else if (code3 > 55295 && code3 < 57344) {
      let next = value.charCodeAt(index2 + 1);
      code3 < 56320 && next > 56319 && next < 57344 ? (replace2 = String.fromCharCode(code3, next), skip = 1) : replace2 = "\uFFFD";
    } else
      replace2 = String.fromCharCode(code3);
    replace2 && (result.push(value.slice(start, index2), encodeURIComponent(replace2)), start = index2 + skip + 1, replace2 = ""), skip && (index2 += skip, skip = 0);
  }
  return result.join("") + value.slice(start);
}

// node_modules/micromark-util-classify-character/index.js
function classifyCharacter(code3) {
  if (code3 === null || markdownLineEndingOrSpace(code3) || unicodeWhitespace(code3))
    return 1;
  if (unicodePunctuation(code3))
    return 2;
}

// node_modules/micromark-util-resolve-all/index.js
function resolveAll(constructs2, events, context) {
  let called = [], index2 = -1;
  for (; ++index2 < constructs2.length; ) {
    let resolve = constructs2[index2].resolveAll;
    resolve && !called.includes(resolve) && (events = resolve(events, context), called.push(resolve));
  }
  return events;
}

// node_modules/micromark-core-commonmark/lib/attention.js
var attention = {
  name: "attention",
  tokenize: tokenizeAttention,
  resolveAll: resolveAllAttention
};
function resolveAllAttention(events, context) {
  let index2 = -1, open, group, text7, openingSequence, closingSequence, use, nextEvents, offset;
  for (; ++index2 < events.length; )
    if (events[index2][0] === "enter" && events[index2][1].type === "attentionSequence" && events[index2][1]._close) {
      for (open = index2; open--; )
        if (events[open][0] === "exit" && events[open][1].type === "attentionSequence" && events[open][1]._open && context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index2][1]).charCodeAt(0)) {
          if ((events[open][1]._close || events[index2][1]._open) && (events[index2][1].end.offset - events[index2][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index2][1].end.offset - events[index2][1].start.offset) % 3))
            continue;
          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index2][1].end.offset - events[index2][1].start.offset > 1 ? 2 : 1;
          let start = Object.assign({}, events[open][1].end), end = Object.assign({}, events[index2][1].start);
          movePoint(start, -use), movePoint(end, use), openingSequence = {
            type: use > 1 ? "strongSequence" : "emphasisSequence",
            start,
            end: Object.assign({}, events[open][1].end)
          }, closingSequence = {
            type: use > 1 ? "strongSequence" : "emphasisSequence",
            start: Object.assign({}, events[index2][1].start),
            end
          }, text7 = {
            type: use > 1 ? "strongText" : "emphasisText",
            start: Object.assign({}, events[open][1].end),
            end: Object.assign({}, events[index2][1].start)
          }, group = {
            type: use > 1 ? "strong" : "emphasis",
            start: Object.assign({}, openingSequence.start),
            end: Object.assign({}, closingSequence.end)
          }, events[open][1].end = Object.assign({}, openingSequence.start), events[index2][1].start = Object.assign({}, closingSequence.end), nextEvents = [], events[open][1].end.offset - events[open][1].start.offset && (nextEvents = push(nextEvents, [
            ["enter", events[open][1], context],
            ["exit", events[open][1], context]
          ])), nextEvents = push(nextEvents, [
            ["enter", group, context],
            ["enter", openingSequence, context],
            ["exit", openingSequence, context],
            ["enter", text7, context]
          ]), nextEvents = push(
            nextEvents,
            resolveAll(
              context.parser.constructs.insideSpan.null,
              events.slice(open + 1, index2),
              context
            )
          ), nextEvents = push(nextEvents, [
            ["exit", text7, context],
            ["enter", closingSequence, context],
            ["exit", closingSequence, context],
            ["exit", group, context]
          ]), events[index2][1].end.offset - events[index2][1].start.offset ? (offset = 2, nextEvents = push(nextEvents, [
            ["enter", events[index2][1], context],
            ["exit", events[index2][1], context]
          ])) : offset = 0, splice(events, open - 1, index2 - open + 3, nextEvents), index2 = open + nextEvents.length - offset - 2;
          break;
        }
    }
  for (index2 = -1; ++index2 < events.length; )
    events[index2][1].type === "attentionSequence" && (events[index2][1].type = "data");
  return events;
}
function tokenizeAttention(effects, ok2) {
  let attentionMarkers2 = this.parser.constructs.attentionMarkers.null, previous3 = this.previous, before = classifyCharacter(previous3), marker;
  return start;
  function start(code3) {
    return effects.enter("attentionSequence"), marker = code3, sequence(code3);
  }
  function sequence(code3) {
    if (code3 === marker)
      return effects.consume(code3), sequence;
    let token = effects.exit("attentionSequence"), after = classifyCharacter(code3), open = !after || after === 2 && before || attentionMarkers2.includes(code3), close = !before || before === 2 && after || attentionMarkers2.includes(previous3);
    return token._open = Boolean(marker === 42 ? open : open && (before || !close)), token._close = Boolean(marker === 42 ? close : close && (after || !open)), ok2(code3);
  }
}
function movePoint(point5, offset) {
  point5.column += offset, point5.offset += offset, point5._bufferIndex += offset;
}

// node_modules/micromark-core-commonmark/lib/autolink.js
var autolink = {
  name: "autolink",
  tokenize: tokenizeAutolink
};
function tokenizeAutolink(effects, ok2, nok) {
  let size = 1;
  return start;
  function start(code3) {
    return effects.enter("autolink"), effects.enter("autolinkMarker"), effects.consume(code3), effects.exit("autolinkMarker"), effects.enter("autolinkProtocol"), open;
  }
  function open(code3) {
    return asciiAlpha(code3) ? (effects.consume(code3), schemeOrEmailAtext) : asciiAtext(code3) ? emailAtext(code3) : nok(code3);
  }
  function schemeOrEmailAtext(code3) {
    return code3 === 43 || code3 === 45 || code3 === 46 || asciiAlphanumeric(code3) ? schemeInsideOrEmailAtext(code3) : emailAtext(code3);
  }
  function schemeInsideOrEmailAtext(code3) {
    return code3 === 58 ? (effects.consume(code3), urlInside) : (code3 === 43 || code3 === 45 || code3 === 46 || asciiAlphanumeric(code3)) && size++ < 32 ? (effects.consume(code3), schemeInsideOrEmailAtext) : emailAtext(code3);
  }
  function urlInside(code3) {
    return code3 === 62 ? (effects.exit("autolinkProtocol"), end(code3)) : code3 === null || code3 === 32 || code3 === 60 || asciiControl(code3) ? nok(code3) : (effects.consume(code3), urlInside);
  }
  function emailAtext(code3) {
    return code3 === 64 ? (effects.consume(code3), size = 0, emailAtSignOrDot) : asciiAtext(code3) ? (effects.consume(code3), emailAtext) : nok(code3);
  }
  function emailAtSignOrDot(code3) {
    return asciiAlphanumeric(code3) ? emailLabel(code3) : nok(code3);
  }
  function emailLabel(code3) {
    return code3 === 46 ? (effects.consume(code3), size = 0, emailAtSignOrDot) : code3 === 62 ? (effects.exit("autolinkProtocol").type = "autolinkEmail", end(code3)) : emailValue(code3);
  }
  function emailValue(code3) {
    return (code3 === 45 || asciiAlphanumeric(code3)) && size++ < 63 ? (effects.consume(code3), code3 === 45 ? emailValue : emailLabel) : nok(code3);
  }
  function end(code3) {
    return effects.enter("autolinkMarker"), effects.consume(code3), effects.exit("autolinkMarker"), effects.exit("autolink"), ok2;
  }
}

// node_modules/micromark-factory-space/index.js
function factorySpace(effects, ok2, type, max) {
  let limit = max ? max - 1 : Number.POSITIVE_INFINITY, size = 0;
  return start;
  function start(code3) {
    return markdownSpace(code3) ? (effects.enter(type), prefix(code3)) : ok2(code3);
  }
  function prefix(code3) {
    return markdownSpace(code3) && size++ < limit ? (effects.consume(code3), prefix) : (effects.exit(type), ok2(code3));
  }
}

// node_modules/micromark-core-commonmark/lib/blank-line.js
var blankLine = {
  tokenize: tokenizeBlankLine,
  partial: !0
};
function tokenizeBlankLine(effects, ok2, nok) {
  return factorySpace(effects, afterWhitespace, "linePrefix");
  function afterWhitespace(code3) {
    return code3 === null || markdownLineEnding(code3) ? ok2(code3) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/block-quote.js
var blockQuote = {
  name: "blockQuote",
  tokenize: tokenizeBlockQuoteStart,
  continuation: {
    tokenize: tokenizeBlockQuoteContinuation
  },
  exit
};
function tokenizeBlockQuoteStart(effects, ok2, nok) {
  let self2 = this;
  return start;
  function start(code3) {
    if (code3 === 62) {
      let state = self2.containerState;
      return state.open || (effects.enter("blockQuote", {
        _container: !0
      }), state.open = !0), effects.enter("blockQuotePrefix"), effects.enter("blockQuoteMarker"), effects.consume(code3), effects.exit("blockQuoteMarker"), after;
    }
    return nok(code3);
  }
  function after(code3) {
    return markdownSpace(code3) ? (effects.enter("blockQuotePrefixWhitespace"), effects.consume(code3), effects.exit("blockQuotePrefixWhitespace"), effects.exit("blockQuotePrefix"), ok2) : (effects.exit("blockQuotePrefix"), ok2(code3));
  }
}
function tokenizeBlockQuoteContinuation(effects, ok2, nok) {
  return factorySpace(
    effects,
    effects.attempt(blockQuote, ok2, nok),
    "linePrefix",
    this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
  );
}
function exit(effects) {
  effects.exit("blockQuote");
}

// node_modules/micromark-core-commonmark/lib/character-escape.js
var characterEscape = {
  name: "characterEscape",
  tokenize: tokenizeCharacterEscape
};
function tokenizeCharacterEscape(effects, ok2, nok) {
  return start;
  function start(code3) {
    return effects.enter("characterEscape"), effects.enter("escapeMarker"), effects.consume(code3), effects.exit("escapeMarker"), open;
  }
  function open(code3) {
    return asciiPunctuation(code3) ? (effects.enter("characterEscapeValue"), effects.consume(code3), effects.exit("characterEscapeValue"), effects.exit("characterEscape"), ok2) : nok(code3);
  }
}

// node_modules/character-entities/index.js
var characterEntities = {
  AElig: "\xC6",
  AMP: "&",
  Aacute: "\xC1",
  Abreve: "\u0102",
  Acirc: "\xC2",
  Acy: "\u0410",
  Afr: "\u{1D504}",
  Agrave: "\xC0",
  Alpha: "\u0391",
  Amacr: "\u0100",
  And: "\u2A53",
  Aogon: "\u0104",
  Aopf: "\u{1D538}",
  ApplyFunction: "\u2061",
  Aring: "\xC5",
  Ascr: "\u{1D49C}",
  Assign: "\u2254",
  Atilde: "\xC3",
  Auml: "\xC4",
  Backslash: "\u2216",
  Barv: "\u2AE7",
  Barwed: "\u2306",
  Bcy: "\u0411",
  Because: "\u2235",
  Bernoullis: "\u212C",
  Beta: "\u0392",
  Bfr: "\u{1D505}",
  Bopf: "\u{1D539}",
  Breve: "\u02D8",
  Bscr: "\u212C",
  Bumpeq: "\u224E",
  CHcy: "\u0427",
  COPY: "\xA9",
  Cacute: "\u0106",
  Cap: "\u22D2",
  CapitalDifferentialD: "\u2145",
  Cayleys: "\u212D",
  Ccaron: "\u010C",
  Ccedil: "\xC7",
  Ccirc: "\u0108",
  Cconint: "\u2230",
  Cdot: "\u010A",
  Cedilla: "\xB8",
  CenterDot: "\xB7",
  Cfr: "\u212D",
  Chi: "\u03A7",
  CircleDot: "\u2299",
  CircleMinus: "\u2296",
  CirclePlus: "\u2295",
  CircleTimes: "\u2297",
  ClockwiseContourIntegral: "\u2232",
  CloseCurlyDoubleQuote: "\u201D",
  CloseCurlyQuote: "\u2019",
  Colon: "\u2237",
  Colone: "\u2A74",
  Congruent: "\u2261",
  Conint: "\u222F",
  ContourIntegral: "\u222E",
  Copf: "\u2102",
  Coproduct: "\u2210",
  CounterClockwiseContourIntegral: "\u2233",
  Cross: "\u2A2F",
  Cscr: "\u{1D49E}",
  Cup: "\u22D3",
  CupCap: "\u224D",
  DD: "\u2145",
  DDotrahd: "\u2911",
  DJcy: "\u0402",
  DScy: "\u0405",
  DZcy: "\u040F",
  Dagger: "\u2021",
  Darr: "\u21A1",
  Dashv: "\u2AE4",
  Dcaron: "\u010E",
  Dcy: "\u0414",
  Del: "\u2207",
  Delta: "\u0394",
  Dfr: "\u{1D507}",
  DiacriticalAcute: "\xB4",
  DiacriticalDot: "\u02D9",
  DiacriticalDoubleAcute: "\u02DD",
  DiacriticalGrave: "`",
  DiacriticalTilde: "\u02DC",
  Diamond: "\u22C4",
  DifferentialD: "\u2146",
  Dopf: "\u{1D53B}",
  Dot: "\xA8",
  DotDot: "\u20DC",
  DotEqual: "\u2250",
  DoubleContourIntegral: "\u222F",
  DoubleDot: "\xA8",
  DoubleDownArrow: "\u21D3",
  DoubleLeftArrow: "\u21D0",
  DoubleLeftRightArrow: "\u21D4",
  DoubleLeftTee: "\u2AE4",
  DoubleLongLeftArrow: "\u27F8",
  DoubleLongLeftRightArrow: "\u27FA",
  DoubleLongRightArrow: "\u27F9",
  DoubleRightArrow: "\u21D2",
  DoubleRightTee: "\u22A8",
  DoubleUpArrow: "\u21D1",
  DoubleUpDownArrow: "\u21D5",
  DoubleVerticalBar: "\u2225",
  DownArrow: "\u2193",
  DownArrowBar: "\u2913",
  DownArrowUpArrow: "\u21F5",
  DownBreve: "\u0311",
  DownLeftRightVector: "\u2950",
  DownLeftTeeVector: "\u295E",
  DownLeftVector: "\u21BD",
  DownLeftVectorBar: "\u2956",
  DownRightTeeVector: "\u295F",
  DownRightVector: "\u21C1",
  DownRightVectorBar: "\u2957",
  DownTee: "\u22A4",
  DownTeeArrow: "\u21A7",
  Downarrow: "\u21D3",
  Dscr: "\u{1D49F}",
  Dstrok: "\u0110",
  ENG: "\u014A",
  ETH: "\xD0",
  Eacute: "\xC9",
  Ecaron: "\u011A",
  Ecirc: "\xCA",
  Ecy: "\u042D",
  Edot: "\u0116",
  Efr: "\u{1D508}",
  Egrave: "\xC8",
  Element: "\u2208",
  Emacr: "\u0112",
  EmptySmallSquare: "\u25FB",
  EmptyVerySmallSquare: "\u25AB",
  Eogon: "\u0118",
  Eopf: "\u{1D53C}",
  Epsilon: "\u0395",
  Equal: "\u2A75",
  EqualTilde: "\u2242",
  Equilibrium: "\u21CC",
  Escr: "\u2130",
  Esim: "\u2A73",
  Eta: "\u0397",
  Euml: "\xCB",
  Exists: "\u2203",
  ExponentialE: "\u2147",
  Fcy: "\u0424",
  Ffr: "\u{1D509}",
  FilledSmallSquare: "\u25FC",
  FilledVerySmallSquare: "\u25AA",
  Fopf: "\u{1D53D}",
  ForAll: "\u2200",
  Fouriertrf: "\u2131",
  Fscr: "\u2131",
  GJcy: "\u0403",
  GT: ">",
  Gamma: "\u0393",
  Gammad: "\u03DC",
  Gbreve: "\u011E",
  Gcedil: "\u0122",
  Gcirc: "\u011C",
  Gcy: "\u0413",
  Gdot: "\u0120",
  Gfr: "\u{1D50A}",
  Gg: "\u22D9",
  Gopf: "\u{1D53E}",
  GreaterEqual: "\u2265",
  GreaterEqualLess: "\u22DB",
  GreaterFullEqual: "\u2267",
  GreaterGreater: "\u2AA2",
  GreaterLess: "\u2277",
  GreaterSlantEqual: "\u2A7E",
  GreaterTilde: "\u2273",
  Gscr: "\u{1D4A2}",
  Gt: "\u226B",
  HARDcy: "\u042A",
  Hacek: "\u02C7",
  Hat: "^",
  Hcirc: "\u0124",
  Hfr: "\u210C",
  HilbertSpace: "\u210B",
  Hopf: "\u210D",
  HorizontalLine: "\u2500",
  Hscr: "\u210B",
  Hstrok: "\u0126",
  HumpDownHump: "\u224E",
  HumpEqual: "\u224F",
  IEcy: "\u0415",
  IJlig: "\u0132",
  IOcy: "\u0401",
  Iacute: "\xCD",
  Icirc: "\xCE",
  Icy: "\u0418",
  Idot: "\u0130",
  Ifr: "\u2111",
  Igrave: "\xCC",
  Im: "\u2111",
  Imacr: "\u012A",
  ImaginaryI: "\u2148",
  Implies: "\u21D2",
  Int: "\u222C",
  Integral: "\u222B",
  Intersection: "\u22C2",
  InvisibleComma: "\u2063",
  InvisibleTimes: "\u2062",
  Iogon: "\u012E",
  Iopf: "\u{1D540}",
  Iota: "\u0399",
  Iscr: "\u2110",
  Itilde: "\u0128",
  Iukcy: "\u0406",
  Iuml: "\xCF",
  Jcirc: "\u0134",
  Jcy: "\u0419",
  Jfr: "\u{1D50D}",
  Jopf: "\u{1D541}",
  Jscr: "\u{1D4A5}",
  Jsercy: "\u0408",
  Jukcy: "\u0404",
  KHcy: "\u0425",
  KJcy: "\u040C",
  Kappa: "\u039A",
  Kcedil: "\u0136",
  Kcy: "\u041A",
  Kfr: "\u{1D50E}",
  Kopf: "\u{1D542}",
  Kscr: "\u{1D4A6}",
  LJcy: "\u0409",
  LT: "<",
  Lacute: "\u0139",
  Lambda: "\u039B",
  Lang: "\u27EA",
  Laplacetrf: "\u2112",
  Larr: "\u219E",
  Lcaron: "\u013D",
  Lcedil: "\u013B",
  Lcy: "\u041B",
  LeftAngleBracket: "\u27E8",
  LeftArrow: "\u2190",
  LeftArrowBar: "\u21E4",
  LeftArrowRightArrow: "\u21C6",
  LeftCeiling: "\u2308",
  LeftDoubleBracket: "\u27E6",
  LeftDownTeeVector: "\u2961",
  LeftDownVector: "\u21C3",
  LeftDownVectorBar: "\u2959",
  LeftFloor: "\u230A",
  LeftRightArrow: "\u2194",
  LeftRightVector: "\u294E",
  LeftTee: "\u22A3",
  LeftTeeArrow: "\u21A4",
  LeftTeeVector: "\u295A",
  LeftTriangle: "\u22B2",
  LeftTriangleBar: "\u29CF",
  LeftTriangleEqual: "\u22B4",
  LeftUpDownVector: "\u2951",
  LeftUpTeeVector: "\u2960",
  LeftUpVector: "\u21BF",
  LeftUpVectorBar: "\u2958",
  LeftVector: "\u21BC",
  LeftVectorBar: "\u2952",
  Leftarrow: "\u21D0",
  Leftrightarrow: "\u21D4",
  LessEqualGreater: "\u22DA",
  LessFullEqual: "\u2266",
  LessGreater: "\u2276",
  LessLess: "\u2AA1",
  LessSlantEqual: "\u2A7D",
  LessTilde: "\u2272",
  Lfr: "\u{1D50F}",
  Ll: "\u22D8",
  Lleftarrow: "\u21DA",
  Lmidot: "\u013F",
  LongLeftArrow: "\u27F5",
  LongLeftRightArrow: "\u27F7",
  LongRightArrow: "\u27F6",
  Longleftarrow: "\u27F8",
  Longleftrightarrow: "\u27FA",
  Longrightarrow: "\u27F9",
  Lopf: "\u{1D543}",
  LowerLeftArrow: "\u2199",
  LowerRightArrow: "\u2198",
  Lscr: "\u2112",
  Lsh: "\u21B0",
  Lstrok: "\u0141",
  Lt: "\u226A",
  Map: "\u2905",
  Mcy: "\u041C",
  MediumSpace: "\u205F",
  Mellintrf: "\u2133",
  Mfr: "\u{1D510}",
  MinusPlus: "\u2213",
  Mopf: "\u{1D544}",
  Mscr: "\u2133",
  Mu: "\u039C",
  NJcy: "\u040A",
  Nacute: "\u0143",
  Ncaron: "\u0147",
  Ncedil: "\u0145",
  Ncy: "\u041D",
  NegativeMediumSpace: "\u200B",
  NegativeThickSpace: "\u200B",
  NegativeThinSpace: "\u200B",
  NegativeVeryThinSpace: "\u200B",
  NestedGreaterGreater: "\u226B",
  NestedLessLess: "\u226A",
  NewLine: `
`,
  Nfr: "\u{1D511}",
  NoBreak: "\u2060",
  NonBreakingSpace: "\xA0",
  Nopf: "\u2115",
  Not: "\u2AEC",
  NotCongruent: "\u2262",
  NotCupCap: "\u226D",
  NotDoubleVerticalBar: "\u2226",
  NotElement: "\u2209",
  NotEqual: "\u2260",
  NotEqualTilde: "\u2242\u0338",
  NotExists: "\u2204",
  NotGreater: "\u226F",
  NotGreaterEqual: "\u2271",
  NotGreaterFullEqual: "\u2267\u0338",
  NotGreaterGreater: "\u226B\u0338",
  NotGreaterLess: "\u2279",
  NotGreaterSlantEqual: "\u2A7E\u0338",
  NotGreaterTilde: "\u2275",
  NotHumpDownHump: "\u224E\u0338",
  NotHumpEqual: "\u224F\u0338",
  NotLeftTriangle: "\u22EA",
  NotLeftTriangleBar: "\u29CF\u0338",
  NotLeftTriangleEqual: "\u22EC",
  NotLess: "\u226E",
  NotLessEqual: "\u2270",
  NotLessGreater: "\u2278",
  NotLessLess: "\u226A\u0338",
  NotLessSlantEqual: "\u2A7D\u0338",
  NotLessTilde: "\u2274",
  NotNestedGreaterGreater: "\u2AA2\u0338",
  NotNestedLessLess: "\u2AA1\u0338",
  NotPrecedes: "\u2280",
  NotPrecedesEqual: "\u2AAF\u0338",
  NotPrecedesSlantEqual: "\u22E0",
  NotReverseElement: "\u220C",
  NotRightTriangle: "\u22EB",
  NotRightTriangleBar: "\u29D0\u0338",
  NotRightTriangleEqual: "\u22ED",
  NotSquareSubset: "\u228F\u0338",
  NotSquareSubsetEqual: "\u22E2",
  NotSquareSuperset: "\u2290\u0338",
  NotSquareSupersetEqual: "\u22E3",
  NotSubset: "\u2282\u20D2",
  NotSubsetEqual: "\u2288",
  NotSucceeds: "\u2281",
  NotSucceedsEqual: "\u2AB0\u0338",
  NotSucceedsSlantEqual: "\u22E1",
  NotSucceedsTilde: "\u227F\u0338",
  NotSuperset: "\u2283\u20D2",
  NotSupersetEqual: "\u2289",
  NotTilde: "\u2241",
  NotTildeEqual: "\u2244",
  NotTildeFullEqual: "\u2247",
  NotTildeTilde: "\u2249",
  NotVerticalBar: "\u2224",
  Nscr: "\u{1D4A9}",
  Ntilde: "\xD1",
  Nu: "\u039D",
  OElig: "\u0152",
  Oacute: "\xD3",
  Ocirc: "\xD4",
  Ocy: "\u041E",
  Odblac: "\u0150",
  Ofr: "\u{1D512}",
  Ograve: "\xD2",
  Omacr: "\u014C",
  Omega: "\u03A9",
  Omicron: "\u039F",
  Oopf: "\u{1D546}",
  OpenCurlyDoubleQuote: "\u201C",
  OpenCurlyQuote: "\u2018",
  Or: "\u2A54",
  Oscr: "\u{1D4AA}",
  Oslash: "\xD8",
  Otilde: "\xD5",
  Otimes: "\u2A37",
  Ouml: "\xD6",
  OverBar: "\u203E",
  OverBrace: "\u23DE",
  OverBracket: "\u23B4",
  OverParenthesis: "\u23DC",
  PartialD: "\u2202",
  Pcy: "\u041F",
  Pfr: "\u{1D513}",
  Phi: "\u03A6",
  Pi: "\u03A0",
  PlusMinus: "\xB1",
  Poincareplane: "\u210C",
  Popf: "\u2119",
  Pr: "\u2ABB",
  Precedes: "\u227A",
  PrecedesEqual: "\u2AAF",
  PrecedesSlantEqual: "\u227C",
  PrecedesTilde: "\u227E",
  Prime: "\u2033",
  Product: "\u220F",
  Proportion: "\u2237",
  Proportional: "\u221D",
  Pscr: "\u{1D4AB}",
  Psi: "\u03A8",
  QUOT: '"',
  Qfr: "\u{1D514}",
  Qopf: "\u211A",
  Qscr: "\u{1D4AC}",
  RBarr: "\u2910",
  REG: "\xAE",
  Racute: "\u0154",
  Rang: "\u27EB",
  Rarr: "\u21A0",
  Rarrtl: "\u2916",
  Rcaron: "\u0158",
  Rcedil: "\u0156",
  Rcy: "\u0420",
  Re: "\u211C",
  ReverseElement: "\u220B",
  ReverseEquilibrium: "\u21CB",
  ReverseUpEquilibrium: "\u296F",
  Rfr: "\u211C",
  Rho: "\u03A1",
  RightAngleBracket: "\u27E9",
  RightArrow: "\u2192",
  RightArrowBar: "\u21E5",
  RightArrowLeftArrow: "\u21C4",
  RightCeiling: "\u2309",
  RightDoubleBracket: "\u27E7",
  RightDownTeeVector: "\u295D",
  RightDownVector: "\u21C2",
  RightDownVectorBar: "\u2955",
  RightFloor: "\u230B",
  RightTee: "\u22A2",
  RightTeeArrow: "\u21A6",
  RightTeeVector: "\u295B",
  RightTriangle: "\u22B3",
  RightTriangleBar: "\u29D0",
  RightTriangleEqual: "\u22B5",
  RightUpDownVector: "\u294F",
  RightUpTeeVector: "\u295C",
  RightUpVector: "\u21BE",
  RightUpVectorBar: "\u2954",
  RightVector: "\u21C0",
  RightVectorBar: "\u2953",
  Rightarrow: "\u21D2",
  Ropf: "\u211D",
  RoundImplies: "\u2970",
  Rrightarrow: "\u21DB",
  Rscr: "\u211B",
  Rsh: "\u21B1",
  RuleDelayed: "\u29F4",
  SHCHcy: "\u0429",
  SHcy: "\u0428",
  SOFTcy: "\u042C",
  Sacute: "\u015A",
  Sc: "\u2ABC",
  Scaron: "\u0160",
  Scedil: "\u015E",
  Scirc: "\u015C",
  Scy: "\u0421",
  Sfr: "\u{1D516}",
  ShortDownArrow: "\u2193",
  ShortLeftArrow: "\u2190",
  ShortRightArrow: "\u2192",
  ShortUpArrow: "\u2191",
  Sigma: "\u03A3",
  SmallCircle: "\u2218",
  Sopf: "\u{1D54A}",
  Sqrt: "\u221A",
  Square: "\u25A1",
  SquareIntersection: "\u2293",
  SquareSubset: "\u228F",
  SquareSubsetEqual: "\u2291",
  SquareSuperset: "\u2290",
  SquareSupersetEqual: "\u2292",
  SquareUnion: "\u2294",
  Sscr: "\u{1D4AE}",
  Star: "\u22C6",
  Sub: "\u22D0",
  Subset: "\u22D0",
  SubsetEqual: "\u2286",
  Succeeds: "\u227B",
  SucceedsEqual: "\u2AB0",
  SucceedsSlantEqual: "\u227D",
  SucceedsTilde: "\u227F",
  SuchThat: "\u220B",
  Sum: "\u2211",
  Sup: "\u22D1",
  Superset: "\u2283",
  SupersetEqual: "\u2287",
  Supset: "\u22D1",
  THORN: "\xDE",
  TRADE: "\u2122",
  TSHcy: "\u040B",
  TScy: "\u0426",
  Tab: "	",
  Tau: "\u03A4",
  Tcaron: "\u0164",
  Tcedil: "\u0162",
  Tcy: "\u0422",
  Tfr: "\u{1D517}",
  Therefore: "\u2234",
  Theta: "\u0398",
  ThickSpace: "\u205F\u200A",
  ThinSpace: "\u2009",
  Tilde: "\u223C",
  TildeEqual: "\u2243",
  TildeFullEqual: "\u2245",
  TildeTilde: "\u2248",
  Topf: "\u{1D54B}",
  TripleDot: "\u20DB",
  Tscr: "\u{1D4AF}",
  Tstrok: "\u0166",
  Uacute: "\xDA",
  Uarr: "\u219F",
  Uarrocir: "\u2949",
  Ubrcy: "\u040E",
  Ubreve: "\u016C",
  Ucirc: "\xDB",
  Ucy: "\u0423",
  Udblac: "\u0170",
  Ufr: "\u{1D518}",
  Ugrave: "\xD9",
  Umacr: "\u016A",
  UnderBar: "_",
  UnderBrace: "\u23DF",
  UnderBracket: "\u23B5",
  UnderParenthesis: "\u23DD",
  Union: "\u22C3",
  UnionPlus: "\u228E",
  Uogon: "\u0172",
  Uopf: "\u{1D54C}",
  UpArrow: "\u2191",
  UpArrowBar: "\u2912",
  UpArrowDownArrow: "\u21C5",
  UpDownArrow: "\u2195",
  UpEquilibrium: "\u296E",
  UpTee: "\u22A5",
  UpTeeArrow: "\u21A5",
  Uparrow: "\u21D1",
  Updownarrow: "\u21D5",
  UpperLeftArrow: "\u2196",
  UpperRightArrow: "\u2197",
  Upsi: "\u03D2",
  Upsilon: "\u03A5",
  Uring: "\u016E",
  Uscr: "\u{1D4B0}",
  Utilde: "\u0168",
  Uuml: "\xDC",
  VDash: "\u22AB",
  Vbar: "\u2AEB",
  Vcy: "\u0412",
  Vdash: "\u22A9",
  Vdashl: "\u2AE6",
  Vee: "\u22C1",
  Verbar: "\u2016",
  Vert: "\u2016",
  VerticalBar: "\u2223",
  VerticalLine: "|",
  VerticalSeparator: "\u2758",
  VerticalTilde: "\u2240",
  VeryThinSpace: "\u200A",
  Vfr: "\u{1D519}",
  Vopf: "\u{1D54D}",
  Vscr: "\u{1D4B1}",
  Vvdash: "\u22AA",
  Wcirc: "\u0174",
  Wedge: "\u22C0",
  Wfr: "\u{1D51A}",
  Wopf: "\u{1D54E}",
  Wscr: "\u{1D4B2}",
  Xfr: "\u{1D51B}",
  Xi: "\u039E",
  Xopf: "\u{1D54F}",
  Xscr: "\u{1D4B3}",
  YAcy: "\u042F",
  YIcy: "\u0407",
  YUcy: "\u042E",
  Yacute: "\xDD",
  Ycirc: "\u0176",
  Ycy: "\u042B",
  Yfr: "\u{1D51C}",
  Yopf: "\u{1D550}",
  Yscr: "\u{1D4B4}",
  Yuml: "\u0178",
  ZHcy: "\u0416",
  Zacute: "\u0179",
  Zcaron: "\u017D",
  Zcy: "\u0417",
  Zdot: "\u017B",
  ZeroWidthSpace: "\u200B",
  Zeta: "\u0396",
  Zfr: "\u2128",
  Zopf: "\u2124",
  Zscr: "\u{1D4B5}",
  aacute: "\xE1",
  abreve: "\u0103",
  ac: "\u223E",
  acE: "\u223E\u0333",
  acd: "\u223F",
  acirc: "\xE2",
  acute: "\xB4",
  acy: "\u0430",
  aelig: "\xE6",
  af: "\u2061",
  afr: "\u{1D51E}",
  agrave: "\xE0",
  alefsym: "\u2135",
  aleph: "\u2135",
  alpha: "\u03B1",
  amacr: "\u0101",
  amalg: "\u2A3F",
  amp: "&",
  and: "\u2227",
  andand: "\u2A55",
  andd: "\u2A5C",
  andslope: "\u2A58",
  andv: "\u2A5A",
  ang: "\u2220",
  ange: "\u29A4",
  angle: "\u2220",
  angmsd: "\u2221",
  angmsdaa: "\u29A8",
  angmsdab: "\u29A9",
  angmsdac: "\u29AA",
  angmsdad: "\u29AB",
  angmsdae: "\u29AC",
  angmsdaf: "\u29AD",
  angmsdag: "\u29AE",
  angmsdah: "\u29AF",
  angrt: "\u221F",
  angrtvb: "\u22BE",
  angrtvbd: "\u299D",
  angsph: "\u2222",
  angst: "\xC5",
  angzarr: "\u237C",
  aogon: "\u0105",
  aopf: "\u{1D552}",
  ap: "\u2248",
  apE: "\u2A70",
  apacir: "\u2A6F",
  ape: "\u224A",
  apid: "\u224B",
  apos: "'",
  approx: "\u2248",
  approxeq: "\u224A",
  aring: "\xE5",
  ascr: "\u{1D4B6}",
  ast: "*",
  asymp: "\u2248",
  asympeq: "\u224D",
  atilde: "\xE3",
  auml: "\xE4",
  awconint: "\u2233",
  awint: "\u2A11",
  bNot: "\u2AED",
  backcong: "\u224C",
  backepsilon: "\u03F6",
  backprime: "\u2035",
  backsim: "\u223D",
  backsimeq: "\u22CD",
  barvee: "\u22BD",
  barwed: "\u2305",
  barwedge: "\u2305",
  bbrk: "\u23B5",
  bbrktbrk: "\u23B6",
  bcong: "\u224C",
  bcy: "\u0431",
  bdquo: "\u201E",
  becaus: "\u2235",
  because: "\u2235",
  bemptyv: "\u29B0",
  bepsi: "\u03F6",
  bernou: "\u212C",
  beta: "\u03B2",
  beth: "\u2136",
  between: "\u226C",
  bfr: "\u{1D51F}",
  bigcap: "\u22C2",
  bigcirc: "\u25EF",
  bigcup: "\u22C3",
  bigodot: "\u2A00",
  bigoplus: "\u2A01",
  bigotimes: "\u2A02",
  bigsqcup: "\u2A06",
  bigstar: "\u2605",
  bigtriangledown: "\u25BD",
  bigtriangleup: "\u25B3",
  biguplus: "\u2A04",
  bigvee: "\u22C1",
  bigwedge: "\u22C0",
  bkarow: "\u290D",
  blacklozenge: "\u29EB",
  blacksquare: "\u25AA",
  blacktriangle: "\u25B4",
  blacktriangledown: "\u25BE",
  blacktriangleleft: "\u25C2",
  blacktriangleright: "\u25B8",
  blank: "\u2423",
  blk12: "\u2592",
  blk14: "\u2591",
  blk34: "\u2593",
  block: "\u2588",
  bne: "=\u20E5",
  bnequiv: "\u2261\u20E5",
  bnot: "\u2310",
  bopf: "\u{1D553}",
  bot: "\u22A5",
  bottom: "\u22A5",
  bowtie: "\u22C8",
  boxDL: "\u2557",
  boxDR: "\u2554",
  boxDl: "\u2556",
  boxDr: "\u2553",
  boxH: "\u2550",
  boxHD: "\u2566",
  boxHU: "\u2569",
  boxHd: "\u2564",
  boxHu: "\u2567",
  boxUL: "\u255D",
  boxUR: "\u255A",
  boxUl: "\u255C",
  boxUr: "\u2559",
  boxV: "\u2551",
  boxVH: "\u256C",
  boxVL: "\u2563",
  boxVR: "\u2560",
  boxVh: "\u256B",
  boxVl: "\u2562",
  boxVr: "\u255F",
  boxbox: "\u29C9",
  boxdL: "\u2555",
  boxdR: "\u2552",
  boxdl: "\u2510",
  boxdr: "\u250C",
  boxh: "\u2500",
  boxhD: "\u2565",
  boxhU: "\u2568",
  boxhd: "\u252C",
  boxhu: "\u2534",
  boxminus: "\u229F",
  boxplus: "\u229E",
  boxtimes: "\u22A0",
  boxuL: "\u255B",
  boxuR: "\u2558",
  boxul: "\u2518",
  boxur: "\u2514",
  boxv: "\u2502",
  boxvH: "\u256A",
  boxvL: "\u2561",
  boxvR: "\u255E",
  boxvh: "\u253C",
  boxvl: "\u2524",
  boxvr: "\u251C",
  bprime: "\u2035",
  breve: "\u02D8",
  brvbar: "\xA6",
  bscr: "\u{1D4B7}",
  bsemi: "\u204F",
  bsim: "\u223D",
  bsime: "\u22CD",
  bsol: "\\",
  bsolb: "\u29C5",
  bsolhsub: "\u27C8",
  bull: "\u2022",
  bullet: "\u2022",
  bump: "\u224E",
  bumpE: "\u2AAE",
  bumpe: "\u224F",
  bumpeq: "\u224F",
  cacute: "\u0107",
  cap: "\u2229",
  capand: "\u2A44",
  capbrcup: "\u2A49",
  capcap: "\u2A4B",
  capcup: "\u2A47",
  capdot: "\u2A40",
  caps: "\u2229\uFE00",
  caret: "\u2041",
  caron: "\u02C7",
  ccaps: "\u2A4D",
  ccaron: "\u010D",
  ccedil: "\xE7",
  ccirc: "\u0109",
  ccups: "\u2A4C",
  ccupssm: "\u2A50",
  cdot: "\u010B",
  cedil: "\xB8",
  cemptyv: "\u29B2",
  cent: "\xA2",
  centerdot: "\xB7",
  cfr: "\u{1D520}",
  chcy: "\u0447",
  check: "\u2713",
  checkmark: "\u2713",
  chi: "\u03C7",
  cir: "\u25CB",
  cirE: "\u29C3",
  circ: "\u02C6",
  circeq: "\u2257",
  circlearrowleft: "\u21BA",
  circlearrowright: "\u21BB",
  circledR: "\xAE",
  circledS: "\u24C8",
  circledast: "\u229B",
  circledcirc: "\u229A",
  circleddash: "\u229D",
  cire: "\u2257",
  cirfnint: "\u2A10",
  cirmid: "\u2AEF",
  cirscir: "\u29C2",
  clubs: "\u2663",
  clubsuit: "\u2663",
  colon: ":",
  colone: "\u2254",
  coloneq: "\u2254",
  comma: ",",
  commat: "@",
  comp: "\u2201",
  compfn: "\u2218",
  complement: "\u2201",
  complexes: "\u2102",
  cong: "\u2245",
  congdot: "\u2A6D",
  conint: "\u222E",
  copf: "\u{1D554}",
  coprod: "\u2210",
  copy: "\xA9",
  copysr: "\u2117",
  crarr: "\u21B5",
  cross: "\u2717",
  cscr: "\u{1D4B8}",
  csub: "\u2ACF",
  csube: "\u2AD1",
  csup: "\u2AD0",
  csupe: "\u2AD2",
  ctdot: "\u22EF",
  cudarrl: "\u2938",
  cudarrr: "\u2935",
  cuepr: "\u22DE",
  cuesc: "\u22DF",
  cularr: "\u21B6",
  cularrp: "\u293D",
  cup: "\u222A",
  cupbrcap: "\u2A48",
  cupcap: "\u2A46",
  cupcup: "\u2A4A",
  cupdot: "\u228D",
  cupor: "\u2A45",
  cups: "\u222A\uFE00",
  curarr: "\u21B7",
  curarrm: "\u293C",
  curlyeqprec: "\u22DE",
  curlyeqsucc: "\u22DF",
  curlyvee: "\u22CE",
  curlywedge: "\u22CF",
  curren: "\xA4",
  curvearrowleft: "\u21B6",
  curvearrowright: "\u21B7",
  cuvee: "\u22CE",
  cuwed: "\u22CF",
  cwconint: "\u2232",
  cwint: "\u2231",
  cylcty: "\u232D",
  dArr: "\u21D3",
  dHar: "\u2965",
  dagger: "\u2020",
  daleth: "\u2138",
  darr: "\u2193",
  dash: "\u2010",
  dashv: "\u22A3",
  dbkarow: "\u290F",
  dblac: "\u02DD",
  dcaron: "\u010F",
  dcy: "\u0434",
  dd: "\u2146",
  ddagger: "\u2021",
  ddarr: "\u21CA",
  ddotseq: "\u2A77",
  deg: "\xB0",
  delta: "\u03B4",
  demptyv: "\u29B1",
  dfisht: "\u297F",
  dfr: "\u{1D521}",
  dharl: "\u21C3",
  dharr: "\u21C2",
  diam: "\u22C4",
  diamond: "\u22C4",
  diamondsuit: "\u2666",
  diams: "\u2666",
  die: "\xA8",
  digamma: "\u03DD",
  disin: "\u22F2",
  div: "\xF7",
  divide: "\xF7",
  divideontimes: "\u22C7",
  divonx: "\u22C7",
  djcy: "\u0452",
  dlcorn: "\u231E",
  dlcrop: "\u230D",
  dollar: "$",
  dopf: "\u{1D555}",
  dot: "\u02D9",
  doteq: "\u2250",
  doteqdot: "\u2251",
  dotminus: "\u2238",
  dotplus: "\u2214",
  dotsquare: "\u22A1",
  doublebarwedge: "\u2306",
  downarrow: "\u2193",
  downdownarrows: "\u21CA",
  downharpoonleft: "\u21C3",
  downharpoonright: "\u21C2",
  drbkarow: "\u2910",
  drcorn: "\u231F",
  drcrop: "\u230C",
  dscr: "\u{1D4B9}",
  dscy: "\u0455",
  dsol: "\u29F6",
  dstrok: "\u0111",
  dtdot: "\u22F1",
  dtri: "\u25BF",
  dtrif: "\u25BE",
  duarr: "\u21F5",
  duhar: "\u296F",
  dwangle: "\u29A6",
  dzcy: "\u045F",
  dzigrarr: "\u27FF",
  eDDot: "\u2A77",
  eDot: "\u2251",
  eacute: "\xE9",
  easter: "\u2A6E",
  ecaron: "\u011B",
  ecir: "\u2256",
  ecirc: "\xEA",
  ecolon: "\u2255",
  ecy: "\u044D",
  edot: "\u0117",
  ee: "\u2147",
  efDot: "\u2252",
  efr: "\u{1D522}",
  eg: "\u2A9A",
  egrave: "\xE8",
  egs: "\u2A96",
  egsdot: "\u2A98",
  el: "\u2A99",
  elinters: "\u23E7",
  ell: "\u2113",
  els: "\u2A95",
  elsdot: "\u2A97",
  emacr: "\u0113",
  empty: "\u2205",
  emptyset: "\u2205",
  emptyv: "\u2205",
  emsp13: "\u2004",
  emsp14: "\u2005",
  emsp: "\u2003",
  eng: "\u014B",
  ensp: "\u2002",
  eogon: "\u0119",
  eopf: "\u{1D556}",
  epar: "\u22D5",
  eparsl: "\u29E3",
  eplus: "\u2A71",
  epsi: "\u03B5",
  epsilon: "\u03B5",
  epsiv: "\u03F5",
  eqcirc: "\u2256",
  eqcolon: "\u2255",
  eqsim: "\u2242",
  eqslantgtr: "\u2A96",
  eqslantless: "\u2A95",
  equals: "=",
  equest: "\u225F",
  equiv: "\u2261",
  equivDD: "\u2A78",
  eqvparsl: "\u29E5",
  erDot: "\u2253",
  erarr: "\u2971",
  escr: "\u212F",
  esdot: "\u2250",
  esim: "\u2242",
  eta: "\u03B7",
  eth: "\xF0",
  euml: "\xEB",
  euro: "\u20AC",
  excl: "!",
  exist: "\u2203",
  expectation: "\u2130",
  exponentiale: "\u2147",
  fallingdotseq: "\u2252",
  fcy: "\u0444",
  female: "\u2640",
  ffilig: "\uFB03",
  fflig: "\uFB00",
  ffllig: "\uFB04",
  ffr: "\u{1D523}",
  filig: "\uFB01",
  fjlig: "fj",
  flat: "\u266D",
  fllig: "\uFB02",
  fltns: "\u25B1",
  fnof: "\u0192",
  fopf: "\u{1D557}",
  forall: "\u2200",
  fork: "\u22D4",
  forkv: "\u2AD9",
  fpartint: "\u2A0D",
  frac12: "\xBD",
  frac13: "\u2153",
  frac14: "\xBC",
  frac15: "\u2155",
  frac16: "\u2159",
  frac18: "\u215B",
  frac23: "\u2154",
  frac25: "\u2156",
  frac34: "\xBE",
  frac35: "\u2157",
  frac38: "\u215C",
  frac45: "\u2158",
  frac56: "\u215A",
  frac58: "\u215D",
  frac78: "\u215E",
  frasl: "\u2044",
  frown: "\u2322",
  fscr: "\u{1D4BB}",
  gE: "\u2267",
  gEl: "\u2A8C",
  gacute: "\u01F5",
  gamma: "\u03B3",
  gammad: "\u03DD",
  gap: "\u2A86",
  gbreve: "\u011F",
  gcirc: "\u011D",
  gcy: "\u0433",
  gdot: "\u0121",
  ge: "\u2265",
  gel: "\u22DB",
  geq: "\u2265",
  geqq: "\u2267",
  geqslant: "\u2A7E",
  ges: "\u2A7E",
  gescc: "\u2AA9",
  gesdot: "\u2A80",
  gesdoto: "\u2A82",
  gesdotol: "\u2A84",
  gesl: "\u22DB\uFE00",
  gesles: "\u2A94",
  gfr: "\u{1D524}",
  gg: "\u226B",
  ggg: "\u22D9",
  gimel: "\u2137",
  gjcy: "\u0453",
  gl: "\u2277",
  glE: "\u2A92",
  gla: "\u2AA5",
  glj: "\u2AA4",
  gnE: "\u2269",
  gnap: "\u2A8A",
  gnapprox: "\u2A8A",
  gne: "\u2A88",
  gneq: "\u2A88",
  gneqq: "\u2269",
  gnsim: "\u22E7",
  gopf: "\u{1D558}",
  grave: "`",
  gscr: "\u210A",
  gsim: "\u2273",
  gsime: "\u2A8E",
  gsiml: "\u2A90",
  gt: ">",
  gtcc: "\u2AA7",
  gtcir: "\u2A7A",
  gtdot: "\u22D7",
  gtlPar: "\u2995",
  gtquest: "\u2A7C",
  gtrapprox: "\u2A86",
  gtrarr: "\u2978",
  gtrdot: "\u22D7",
  gtreqless: "\u22DB",
  gtreqqless: "\u2A8C",
  gtrless: "\u2277",
  gtrsim: "\u2273",
  gvertneqq: "\u2269\uFE00",
  gvnE: "\u2269\uFE00",
  hArr: "\u21D4",
  hairsp: "\u200A",
  half: "\xBD",
  hamilt: "\u210B",
  hardcy: "\u044A",
  harr: "\u2194",
  harrcir: "\u2948",
  harrw: "\u21AD",
  hbar: "\u210F",
  hcirc: "\u0125",
  hearts: "\u2665",
  heartsuit: "\u2665",
  hellip: "\u2026",
  hercon: "\u22B9",
  hfr: "\u{1D525}",
  hksearow: "\u2925",
  hkswarow: "\u2926",
  hoarr: "\u21FF",
  homtht: "\u223B",
  hookleftarrow: "\u21A9",
  hookrightarrow: "\u21AA",
  hopf: "\u{1D559}",
  horbar: "\u2015",
  hscr: "\u{1D4BD}",
  hslash: "\u210F",
  hstrok: "\u0127",
  hybull: "\u2043",
  hyphen: "\u2010",
  iacute: "\xED",
  ic: "\u2063",
  icirc: "\xEE",
  icy: "\u0438",
  iecy: "\u0435",
  iexcl: "\xA1",
  iff: "\u21D4",
  ifr: "\u{1D526}",
  igrave: "\xEC",
  ii: "\u2148",
  iiiint: "\u2A0C",
  iiint: "\u222D",
  iinfin: "\u29DC",
  iiota: "\u2129",
  ijlig: "\u0133",
  imacr: "\u012B",
  image: "\u2111",
  imagline: "\u2110",
  imagpart: "\u2111",
  imath: "\u0131",
  imof: "\u22B7",
  imped: "\u01B5",
  in: "\u2208",
  incare: "\u2105",
  infin: "\u221E",
  infintie: "\u29DD",
  inodot: "\u0131",
  int: "\u222B",
  intcal: "\u22BA",
  integers: "\u2124",
  intercal: "\u22BA",
  intlarhk: "\u2A17",
  intprod: "\u2A3C",
  iocy: "\u0451",
  iogon: "\u012F",
  iopf: "\u{1D55A}",
  iota: "\u03B9",
  iprod: "\u2A3C",
  iquest: "\xBF",
  iscr: "\u{1D4BE}",
  isin: "\u2208",
  isinE: "\u22F9",
  isindot: "\u22F5",
  isins: "\u22F4",
  isinsv: "\u22F3",
  isinv: "\u2208",
  it: "\u2062",
  itilde: "\u0129",
  iukcy: "\u0456",
  iuml: "\xEF",
  jcirc: "\u0135",
  jcy: "\u0439",
  jfr: "\u{1D527}",
  jmath: "\u0237",
  jopf: "\u{1D55B}",
  jscr: "\u{1D4BF}",
  jsercy: "\u0458",
  jukcy: "\u0454",
  kappa: "\u03BA",
  kappav: "\u03F0",
  kcedil: "\u0137",
  kcy: "\u043A",
  kfr: "\u{1D528}",
  kgreen: "\u0138",
  khcy: "\u0445",
  kjcy: "\u045C",
  kopf: "\u{1D55C}",
  kscr: "\u{1D4C0}",
  lAarr: "\u21DA",
  lArr: "\u21D0",
  lAtail: "\u291B",
  lBarr: "\u290E",
  lE: "\u2266",
  lEg: "\u2A8B",
  lHar: "\u2962",
  lacute: "\u013A",
  laemptyv: "\u29B4",
  lagran: "\u2112",
  lambda: "\u03BB",
  lang: "\u27E8",
  langd: "\u2991",
  langle: "\u27E8",
  lap: "\u2A85",
  laquo: "\xAB",
  larr: "\u2190",
  larrb: "\u21E4",
  larrbfs: "\u291F",
  larrfs: "\u291D",
  larrhk: "\u21A9",
  larrlp: "\u21AB",
  larrpl: "\u2939",
  larrsim: "\u2973",
  larrtl: "\u21A2",
  lat: "\u2AAB",
  latail: "\u2919",
  late: "\u2AAD",
  lates: "\u2AAD\uFE00",
  lbarr: "\u290C",
  lbbrk: "\u2772",
  lbrace: "{",
  lbrack: "[",
  lbrke: "\u298B",
  lbrksld: "\u298F",
  lbrkslu: "\u298D",
  lcaron: "\u013E",
  lcedil: "\u013C",
  lceil: "\u2308",
  lcub: "{",
  lcy: "\u043B",
  ldca: "\u2936",
  ldquo: "\u201C",
  ldquor: "\u201E",
  ldrdhar: "\u2967",
  ldrushar: "\u294B",
  ldsh: "\u21B2",
  le: "\u2264",
  leftarrow: "\u2190",
  leftarrowtail: "\u21A2",
  leftharpoondown: "\u21BD",
  leftharpoonup: "\u21BC",
  leftleftarrows: "\u21C7",
  leftrightarrow: "\u2194",
  leftrightarrows: "\u21C6",
  leftrightharpoons: "\u21CB",
  leftrightsquigarrow: "\u21AD",
  leftthreetimes: "\u22CB",
  leg: "\u22DA",
  leq: "\u2264",
  leqq: "\u2266",
  leqslant: "\u2A7D",
  les: "\u2A7D",
  lescc: "\u2AA8",
  lesdot: "\u2A7F",
  lesdoto: "\u2A81",
  lesdotor: "\u2A83",
  lesg: "\u22DA\uFE00",
  lesges: "\u2A93",
  lessapprox: "\u2A85",
  lessdot: "\u22D6",
  lesseqgtr: "\u22DA",
  lesseqqgtr: "\u2A8B",
  lessgtr: "\u2276",
  lesssim: "\u2272",
  lfisht: "\u297C",
  lfloor: "\u230A",
  lfr: "\u{1D529}",
  lg: "\u2276",
  lgE: "\u2A91",
  lhard: "\u21BD",
  lharu: "\u21BC",
  lharul: "\u296A",
  lhblk: "\u2584",
  ljcy: "\u0459",
  ll: "\u226A",
  llarr: "\u21C7",
  llcorner: "\u231E",
  llhard: "\u296B",
  lltri: "\u25FA",
  lmidot: "\u0140",
  lmoust: "\u23B0",
  lmoustache: "\u23B0",
  lnE: "\u2268",
  lnap: "\u2A89",
  lnapprox: "\u2A89",
  lne: "\u2A87",
  lneq: "\u2A87",
  lneqq: "\u2268",
  lnsim: "\u22E6",
  loang: "\u27EC",
  loarr: "\u21FD",
  lobrk: "\u27E6",
  longleftarrow: "\u27F5",
  longleftrightarrow: "\u27F7",
  longmapsto: "\u27FC",
  longrightarrow: "\u27F6",
  looparrowleft: "\u21AB",
  looparrowright: "\u21AC",
  lopar: "\u2985",
  lopf: "\u{1D55D}",
  loplus: "\u2A2D",
  lotimes: "\u2A34",
  lowast: "\u2217",
  lowbar: "_",
  loz: "\u25CA",
  lozenge: "\u25CA",
  lozf: "\u29EB",
  lpar: "(",
  lparlt: "\u2993",
  lrarr: "\u21C6",
  lrcorner: "\u231F",
  lrhar: "\u21CB",
  lrhard: "\u296D",
  lrm: "\u200E",
  lrtri: "\u22BF",
  lsaquo: "\u2039",
  lscr: "\u{1D4C1}",
  lsh: "\u21B0",
  lsim: "\u2272",
  lsime: "\u2A8D",
  lsimg: "\u2A8F",
  lsqb: "[",
  lsquo: "\u2018",
  lsquor: "\u201A",
  lstrok: "\u0142",
  lt: "<",
  ltcc: "\u2AA6",
  ltcir: "\u2A79",
  ltdot: "\u22D6",
  lthree: "\u22CB",
  ltimes: "\u22C9",
  ltlarr: "\u2976",
  ltquest: "\u2A7B",
  ltrPar: "\u2996",
  ltri: "\u25C3",
  ltrie: "\u22B4",
  ltrif: "\u25C2",
  lurdshar: "\u294A",
  luruhar: "\u2966",
  lvertneqq: "\u2268\uFE00",
  lvnE: "\u2268\uFE00",
  mDDot: "\u223A",
  macr: "\xAF",
  male: "\u2642",
  malt: "\u2720",
  maltese: "\u2720",
  map: "\u21A6",
  mapsto: "\u21A6",
  mapstodown: "\u21A7",
  mapstoleft: "\u21A4",
  mapstoup: "\u21A5",
  marker: "\u25AE",
  mcomma: "\u2A29",
  mcy: "\u043C",
  mdash: "\u2014",
  measuredangle: "\u2221",
  mfr: "\u{1D52A}",
  mho: "\u2127",
  micro: "\xB5",
  mid: "\u2223",
  midast: "*",
  midcir: "\u2AF0",
  middot: "\xB7",
  minus: "\u2212",
  minusb: "\u229F",
  minusd: "\u2238",
  minusdu: "\u2A2A",
  mlcp: "\u2ADB",
  mldr: "\u2026",
  mnplus: "\u2213",
  models: "\u22A7",
  mopf: "\u{1D55E}",
  mp: "\u2213",
  mscr: "\u{1D4C2}",
  mstpos: "\u223E",
  mu: "\u03BC",
  multimap: "\u22B8",
  mumap: "\u22B8",
  nGg: "\u22D9\u0338",
  nGt: "\u226B\u20D2",
  nGtv: "\u226B\u0338",
  nLeftarrow: "\u21CD",
  nLeftrightarrow: "\u21CE",
  nLl: "\u22D8\u0338",
  nLt: "\u226A\u20D2",
  nLtv: "\u226A\u0338",
  nRightarrow: "\u21CF",
  nVDash: "\u22AF",
  nVdash: "\u22AE",
  nabla: "\u2207",
  nacute: "\u0144",
  nang: "\u2220\u20D2",
  nap: "\u2249",
  napE: "\u2A70\u0338",
  napid: "\u224B\u0338",
  napos: "\u0149",
  napprox: "\u2249",
  natur: "\u266E",
  natural: "\u266E",
  naturals: "\u2115",
  nbsp: "\xA0",
  nbump: "\u224E\u0338",
  nbumpe: "\u224F\u0338",
  ncap: "\u2A43",
  ncaron: "\u0148",
  ncedil: "\u0146",
  ncong: "\u2247",
  ncongdot: "\u2A6D\u0338",
  ncup: "\u2A42",
  ncy: "\u043D",
  ndash: "\u2013",
  ne: "\u2260",
  neArr: "\u21D7",
  nearhk: "\u2924",
  nearr: "\u2197",
  nearrow: "\u2197",
  nedot: "\u2250\u0338",
  nequiv: "\u2262",
  nesear: "\u2928",
  nesim: "\u2242\u0338",
  nexist: "\u2204",
  nexists: "\u2204",
  nfr: "\u{1D52B}",
  ngE: "\u2267\u0338",
  nge: "\u2271",
  ngeq: "\u2271",
  ngeqq: "\u2267\u0338",
  ngeqslant: "\u2A7E\u0338",
  nges: "\u2A7E\u0338",
  ngsim: "\u2275",
  ngt: "\u226F",
  ngtr: "\u226F",
  nhArr: "\u21CE",
  nharr: "\u21AE",
  nhpar: "\u2AF2",
  ni: "\u220B",
  nis: "\u22FC",
  nisd: "\u22FA",
  niv: "\u220B",
  njcy: "\u045A",
  nlArr: "\u21CD",
  nlE: "\u2266\u0338",
  nlarr: "\u219A",
  nldr: "\u2025",
  nle: "\u2270",
  nleftarrow: "\u219A",
  nleftrightarrow: "\u21AE",
  nleq: "\u2270",
  nleqq: "\u2266\u0338",
  nleqslant: "\u2A7D\u0338",
  nles: "\u2A7D\u0338",
  nless: "\u226E",
  nlsim: "\u2274",
  nlt: "\u226E",
  nltri: "\u22EA",
  nltrie: "\u22EC",
  nmid: "\u2224",
  nopf: "\u{1D55F}",
  not: "\xAC",
  notin: "\u2209",
  notinE: "\u22F9\u0338",
  notindot: "\u22F5\u0338",
  notinva: "\u2209",
  notinvb: "\u22F7",
  notinvc: "\u22F6",
  notni: "\u220C",
  notniva: "\u220C",
  notnivb: "\u22FE",
  notnivc: "\u22FD",
  npar: "\u2226",
  nparallel: "\u2226",
  nparsl: "\u2AFD\u20E5",
  npart: "\u2202\u0338",
  npolint: "\u2A14",
  npr: "\u2280",
  nprcue: "\u22E0",
  npre: "\u2AAF\u0338",
  nprec: "\u2280",
  npreceq: "\u2AAF\u0338",
  nrArr: "\u21CF",
  nrarr: "\u219B",
  nrarrc: "\u2933\u0338",
  nrarrw: "\u219D\u0338",
  nrightarrow: "\u219B",
  nrtri: "\u22EB",
  nrtrie: "\u22ED",
  nsc: "\u2281",
  nsccue: "\u22E1",
  nsce: "\u2AB0\u0338",
  nscr: "\u{1D4C3}",
  nshortmid: "\u2224",
  nshortparallel: "\u2226",
  nsim: "\u2241",
  nsime: "\u2244",
  nsimeq: "\u2244",
  nsmid: "\u2224",
  nspar: "\u2226",
  nsqsube: "\u22E2",
  nsqsupe: "\u22E3",
  nsub: "\u2284",
  nsubE: "\u2AC5\u0338",
  nsube: "\u2288",
  nsubset: "\u2282\u20D2",
  nsubseteq: "\u2288",
  nsubseteqq: "\u2AC5\u0338",
  nsucc: "\u2281",
  nsucceq: "\u2AB0\u0338",
  nsup: "\u2285",
  nsupE: "\u2AC6\u0338",
  nsupe: "\u2289",
  nsupset: "\u2283\u20D2",
  nsupseteq: "\u2289",
  nsupseteqq: "\u2AC6\u0338",
  ntgl: "\u2279",
  ntilde: "\xF1",
  ntlg: "\u2278",
  ntriangleleft: "\u22EA",
  ntrianglelefteq: "\u22EC",
  ntriangleright: "\u22EB",
  ntrianglerighteq: "\u22ED",
  nu: "\u03BD",
  num: "#",
  numero: "\u2116",
  numsp: "\u2007",
  nvDash: "\u22AD",
  nvHarr: "\u2904",
  nvap: "\u224D\u20D2",
  nvdash: "\u22AC",
  nvge: "\u2265\u20D2",
  nvgt: ">\u20D2",
  nvinfin: "\u29DE",
  nvlArr: "\u2902",
  nvle: "\u2264\u20D2",
  nvlt: "<\u20D2",
  nvltrie: "\u22B4\u20D2",
  nvrArr: "\u2903",
  nvrtrie: "\u22B5\u20D2",
  nvsim: "\u223C\u20D2",
  nwArr: "\u21D6",
  nwarhk: "\u2923",
  nwarr: "\u2196",
  nwarrow: "\u2196",
  nwnear: "\u2927",
  oS: "\u24C8",
  oacute: "\xF3",
  oast: "\u229B",
  ocir: "\u229A",
  ocirc: "\xF4",
  ocy: "\u043E",
  odash: "\u229D",
  odblac: "\u0151",
  odiv: "\u2A38",
  odot: "\u2299",
  odsold: "\u29BC",
  oelig: "\u0153",
  ofcir: "\u29BF",
  ofr: "\u{1D52C}",
  ogon: "\u02DB",
  ograve: "\xF2",
  ogt: "\u29C1",
  ohbar: "\u29B5",
  ohm: "\u03A9",
  oint: "\u222E",
  olarr: "\u21BA",
  olcir: "\u29BE",
  olcross: "\u29BB",
  oline: "\u203E",
  olt: "\u29C0",
  omacr: "\u014D",
  omega: "\u03C9",
  omicron: "\u03BF",
  omid: "\u29B6",
  ominus: "\u2296",
  oopf: "\u{1D560}",
  opar: "\u29B7",
  operp: "\u29B9",
  oplus: "\u2295",
  or: "\u2228",
  orarr: "\u21BB",
  ord: "\u2A5D",
  order: "\u2134",
  orderof: "\u2134",
  ordf: "\xAA",
  ordm: "\xBA",
  origof: "\u22B6",
  oror: "\u2A56",
  orslope: "\u2A57",
  orv: "\u2A5B",
  oscr: "\u2134",
  oslash: "\xF8",
  osol: "\u2298",
  otilde: "\xF5",
  otimes: "\u2297",
  otimesas: "\u2A36",
  ouml: "\xF6",
  ovbar: "\u233D",
  par: "\u2225",
  para: "\xB6",
  parallel: "\u2225",
  parsim: "\u2AF3",
  parsl: "\u2AFD",
  part: "\u2202",
  pcy: "\u043F",
  percnt: "%",
  period: ".",
  permil: "\u2030",
  perp: "\u22A5",
  pertenk: "\u2031",
  pfr: "\u{1D52D}",
  phi: "\u03C6",
  phiv: "\u03D5",
  phmmat: "\u2133",
  phone: "\u260E",
  pi: "\u03C0",
  pitchfork: "\u22D4",
  piv: "\u03D6",
  planck: "\u210F",
  planckh: "\u210E",
  plankv: "\u210F",
  plus: "+",
  plusacir: "\u2A23",
  plusb: "\u229E",
  pluscir: "\u2A22",
  plusdo: "\u2214",
  plusdu: "\u2A25",
  pluse: "\u2A72",
  plusmn: "\xB1",
  plussim: "\u2A26",
  plustwo: "\u2A27",
  pm: "\xB1",
  pointint: "\u2A15",
  popf: "\u{1D561}",
  pound: "\xA3",
  pr: "\u227A",
  prE: "\u2AB3",
  prap: "\u2AB7",
  prcue: "\u227C",
  pre: "\u2AAF",
  prec: "\u227A",
  precapprox: "\u2AB7",
  preccurlyeq: "\u227C",
  preceq: "\u2AAF",
  precnapprox: "\u2AB9",
  precneqq: "\u2AB5",
  precnsim: "\u22E8",
  precsim: "\u227E",
  prime: "\u2032",
  primes: "\u2119",
  prnE: "\u2AB5",
  prnap: "\u2AB9",
  prnsim: "\u22E8",
  prod: "\u220F",
  profalar: "\u232E",
  profline: "\u2312",
  profsurf: "\u2313",
  prop: "\u221D",
  propto: "\u221D",
  prsim: "\u227E",
  prurel: "\u22B0",
  pscr: "\u{1D4C5}",
  psi: "\u03C8",
  puncsp: "\u2008",
  qfr: "\u{1D52E}",
  qint: "\u2A0C",
  qopf: "\u{1D562}",
  qprime: "\u2057",
  qscr: "\u{1D4C6}",
  quaternions: "\u210D",
  quatint: "\u2A16",
  quest: "?",
  questeq: "\u225F",
  quot: '"',
  rAarr: "\u21DB",
  rArr: "\u21D2",
  rAtail: "\u291C",
  rBarr: "\u290F",
  rHar: "\u2964",
  race: "\u223D\u0331",
  racute: "\u0155",
  radic: "\u221A",
  raemptyv: "\u29B3",
  rang: "\u27E9",
  rangd: "\u2992",
  range: "\u29A5",
  rangle: "\u27E9",
  raquo: "\xBB",
  rarr: "\u2192",
  rarrap: "\u2975",
  rarrb: "\u21E5",
  rarrbfs: "\u2920",
  rarrc: "\u2933",
  rarrfs: "\u291E",
  rarrhk: "\u21AA",
  rarrlp: "\u21AC",
  rarrpl: "\u2945",
  rarrsim: "\u2974",
  rarrtl: "\u21A3",
  rarrw: "\u219D",
  ratail: "\u291A",
  ratio: "\u2236",
  rationals: "\u211A",
  rbarr: "\u290D",
  rbbrk: "\u2773",
  rbrace: "}",
  rbrack: "]",
  rbrke: "\u298C",
  rbrksld: "\u298E",
  rbrkslu: "\u2990",
  rcaron: "\u0159",
  rcedil: "\u0157",
  rceil: "\u2309",
  rcub: "}",
  rcy: "\u0440",
  rdca: "\u2937",
  rdldhar: "\u2969",
  rdquo: "\u201D",
  rdquor: "\u201D",
  rdsh: "\u21B3",
  real: "\u211C",
  realine: "\u211B",
  realpart: "\u211C",
  reals: "\u211D",
  rect: "\u25AD",
  reg: "\xAE",
  rfisht: "\u297D",
  rfloor: "\u230B",
  rfr: "\u{1D52F}",
  rhard: "\u21C1",
  rharu: "\u21C0",
  rharul: "\u296C",
  rho: "\u03C1",
  rhov: "\u03F1",
  rightarrow: "\u2192",
  rightarrowtail: "\u21A3",
  rightharpoondown: "\u21C1",
  rightharpoonup: "\u21C0",
  rightleftarrows: "\u21C4",
  rightleftharpoons: "\u21CC",
  rightrightarrows: "\u21C9",
  rightsquigarrow: "\u219D",
  rightthreetimes: "\u22CC",
  ring: "\u02DA",
  risingdotseq: "\u2253",
  rlarr: "\u21C4",
  rlhar: "\u21CC",
  rlm: "\u200F",
  rmoust: "\u23B1",
  rmoustache: "\u23B1",
  rnmid: "\u2AEE",
  roang: "\u27ED",
  roarr: "\u21FE",
  robrk: "\u27E7",
  ropar: "\u2986",
  ropf: "\u{1D563}",
  roplus: "\u2A2E",
  rotimes: "\u2A35",
  rpar: ")",
  rpargt: "\u2994",
  rppolint: "\u2A12",
  rrarr: "\u21C9",
  rsaquo: "\u203A",
  rscr: "\u{1D4C7}",
  rsh: "\u21B1",
  rsqb: "]",
  rsquo: "\u2019",
  rsquor: "\u2019",
  rthree: "\u22CC",
  rtimes: "\u22CA",
  rtri: "\u25B9",
  rtrie: "\u22B5",
  rtrif: "\u25B8",
  rtriltri: "\u29CE",
  ruluhar: "\u2968",
  rx: "\u211E",
  sacute: "\u015B",
  sbquo: "\u201A",
  sc: "\u227B",
  scE: "\u2AB4",
  scap: "\u2AB8",
  scaron: "\u0161",
  sccue: "\u227D",
  sce: "\u2AB0",
  scedil: "\u015F",
  scirc: "\u015D",
  scnE: "\u2AB6",
  scnap: "\u2ABA",
  scnsim: "\u22E9",
  scpolint: "\u2A13",
  scsim: "\u227F",
  scy: "\u0441",
  sdot: "\u22C5",
  sdotb: "\u22A1",
  sdote: "\u2A66",
  seArr: "\u21D8",
  searhk: "\u2925",
  searr: "\u2198",
  searrow: "\u2198",
  sect: "\xA7",
  semi: ";",
  seswar: "\u2929",
  setminus: "\u2216",
  setmn: "\u2216",
  sext: "\u2736",
  sfr: "\u{1D530}",
  sfrown: "\u2322",
  sharp: "\u266F",
  shchcy: "\u0449",
  shcy: "\u0448",
  shortmid: "\u2223",
  shortparallel: "\u2225",
  shy: "\xAD",
  sigma: "\u03C3",
  sigmaf: "\u03C2",
  sigmav: "\u03C2",
  sim: "\u223C",
  simdot: "\u2A6A",
  sime: "\u2243",
  simeq: "\u2243",
  simg: "\u2A9E",
  simgE: "\u2AA0",
  siml: "\u2A9D",
  simlE: "\u2A9F",
  simne: "\u2246",
  simplus: "\u2A24",
  simrarr: "\u2972",
  slarr: "\u2190",
  smallsetminus: "\u2216",
  smashp: "\u2A33",
  smeparsl: "\u29E4",
  smid: "\u2223",
  smile: "\u2323",
  smt: "\u2AAA",
  smte: "\u2AAC",
  smtes: "\u2AAC\uFE00",
  softcy: "\u044C",
  sol: "/",
  solb: "\u29C4",
  solbar: "\u233F",
  sopf: "\u{1D564}",
  spades: "\u2660",
  spadesuit: "\u2660",
  spar: "\u2225",
  sqcap: "\u2293",
  sqcaps: "\u2293\uFE00",
  sqcup: "\u2294",
  sqcups: "\u2294\uFE00",
  sqsub: "\u228F",
  sqsube: "\u2291",
  sqsubset: "\u228F",
  sqsubseteq: "\u2291",
  sqsup: "\u2290",
  sqsupe: "\u2292",
  sqsupset: "\u2290",
  sqsupseteq: "\u2292",
  squ: "\u25A1",
  square: "\u25A1",
  squarf: "\u25AA",
  squf: "\u25AA",
  srarr: "\u2192",
  sscr: "\u{1D4C8}",
  ssetmn: "\u2216",
  ssmile: "\u2323",
  sstarf: "\u22C6",
  star: "\u2606",
  starf: "\u2605",
  straightepsilon: "\u03F5",
  straightphi: "\u03D5",
  strns: "\xAF",
  sub: "\u2282",
  subE: "\u2AC5",
  subdot: "\u2ABD",
  sube: "\u2286",
  subedot: "\u2AC3",
  submult: "\u2AC1",
  subnE: "\u2ACB",
  subne: "\u228A",
  subplus: "\u2ABF",
  subrarr: "\u2979",
  subset: "\u2282",
  subseteq: "\u2286",
  subseteqq: "\u2AC5",
  subsetneq: "\u228A",
  subsetneqq: "\u2ACB",
  subsim: "\u2AC7",
  subsub: "\u2AD5",
  subsup: "\u2AD3",
  succ: "\u227B",
  succapprox: "\u2AB8",
  succcurlyeq: "\u227D",
  succeq: "\u2AB0",
  succnapprox: "\u2ABA",
  succneqq: "\u2AB6",
  succnsim: "\u22E9",
  succsim: "\u227F",
  sum: "\u2211",
  sung: "\u266A",
  sup1: "\xB9",
  sup2: "\xB2",
  sup3: "\xB3",
  sup: "\u2283",
  supE: "\u2AC6",
  supdot: "\u2ABE",
  supdsub: "\u2AD8",
  supe: "\u2287",
  supedot: "\u2AC4",
  suphsol: "\u27C9",
  suphsub: "\u2AD7",
  suplarr: "\u297B",
  supmult: "\u2AC2",
  supnE: "\u2ACC",
  supne: "\u228B",
  supplus: "\u2AC0",
  supset: "\u2283",
  supseteq: "\u2287",
  supseteqq: "\u2AC6",
  supsetneq: "\u228B",
  supsetneqq: "\u2ACC",
  supsim: "\u2AC8",
  supsub: "\u2AD4",
  supsup: "\u2AD6",
  swArr: "\u21D9",
  swarhk: "\u2926",
  swarr: "\u2199",
  swarrow: "\u2199",
  swnwar: "\u292A",
  szlig: "\xDF",
  target: "\u2316",
  tau: "\u03C4",
  tbrk: "\u23B4",
  tcaron: "\u0165",
  tcedil: "\u0163",
  tcy: "\u0442",
  tdot: "\u20DB",
  telrec: "\u2315",
  tfr: "\u{1D531}",
  there4: "\u2234",
  therefore: "\u2234",
  theta: "\u03B8",
  thetasym: "\u03D1",
  thetav: "\u03D1",
  thickapprox: "\u2248",
  thicksim: "\u223C",
  thinsp: "\u2009",
  thkap: "\u2248",
  thksim: "\u223C",
  thorn: "\xFE",
  tilde: "\u02DC",
  times: "\xD7",
  timesb: "\u22A0",
  timesbar: "\u2A31",
  timesd: "\u2A30",
  tint: "\u222D",
  toea: "\u2928",
  top: "\u22A4",
  topbot: "\u2336",
  topcir: "\u2AF1",
  topf: "\u{1D565}",
  topfork: "\u2ADA",
  tosa: "\u2929",
  tprime: "\u2034",
  trade: "\u2122",
  triangle: "\u25B5",
  triangledown: "\u25BF",
  triangleleft: "\u25C3",
  trianglelefteq: "\u22B4",
  triangleq: "\u225C",
  triangleright: "\u25B9",
  trianglerighteq: "\u22B5",
  tridot: "\u25EC",
  trie: "\u225C",
  triminus: "\u2A3A",
  triplus: "\u2A39",
  trisb: "\u29CD",
  tritime: "\u2A3B",
  trpezium: "\u23E2",
  tscr: "\u{1D4C9}",
  tscy: "\u0446",
  tshcy: "\u045B",
  tstrok: "\u0167",
  twixt: "\u226C",
  twoheadleftarrow: "\u219E",
  twoheadrightarrow: "\u21A0",
  uArr: "\u21D1",
  uHar: "\u2963",
  uacute: "\xFA",
  uarr: "\u2191",
  ubrcy: "\u045E",
  ubreve: "\u016D",
  ucirc: "\xFB",
  ucy: "\u0443",
  udarr: "\u21C5",
  udblac: "\u0171",
  udhar: "\u296E",
  ufisht: "\u297E",
  ufr: "\u{1D532}",
  ugrave: "\xF9",
  uharl: "\u21BF",
  uharr: "\u21BE",
  uhblk: "\u2580",
  ulcorn: "\u231C",
  ulcorner: "\u231C",
  ulcrop: "\u230F",
  ultri: "\u25F8",
  umacr: "\u016B",
  uml: "\xA8",
  uogon: "\u0173",
  uopf: "\u{1D566}",
  uparrow: "\u2191",
  updownarrow: "\u2195",
  upharpoonleft: "\u21BF",
  upharpoonright: "\u21BE",
  uplus: "\u228E",
  upsi: "\u03C5",
  upsih: "\u03D2",
  upsilon: "\u03C5",
  upuparrows: "\u21C8",
  urcorn: "\u231D",
  urcorner: "\u231D",
  urcrop: "\u230E",
  uring: "\u016F",
  urtri: "\u25F9",
  uscr: "\u{1D4CA}",
  utdot: "\u22F0",
  utilde: "\u0169",
  utri: "\u25B5",
  utrif: "\u25B4",
  uuarr: "\u21C8",
  uuml: "\xFC",
  uwangle: "\u29A7",
  vArr: "\u21D5",
  vBar: "\u2AE8",
  vBarv: "\u2AE9",
  vDash: "\u22A8",
  vangrt: "\u299C",
  varepsilon: "\u03F5",
  varkappa: "\u03F0",
  varnothing: "\u2205",
  varphi: "\u03D5",
  varpi: "\u03D6",
  varpropto: "\u221D",
  varr: "\u2195",
  varrho: "\u03F1",
  varsigma: "\u03C2",
  varsubsetneq: "\u228A\uFE00",
  varsubsetneqq: "\u2ACB\uFE00",
  varsupsetneq: "\u228B\uFE00",
  varsupsetneqq: "\u2ACC\uFE00",
  vartheta: "\u03D1",
  vartriangleleft: "\u22B2",
  vartriangleright: "\u22B3",
  vcy: "\u0432",
  vdash: "\u22A2",
  vee: "\u2228",
  veebar: "\u22BB",
  veeeq: "\u225A",
  vellip: "\u22EE",
  verbar: "|",
  vert: "|",
  vfr: "\u{1D533}",
  vltri: "\u22B2",
  vnsub: "\u2282\u20D2",
  vnsup: "\u2283\u20D2",
  vopf: "\u{1D567}",
  vprop: "\u221D",
  vrtri: "\u22B3",
  vscr: "\u{1D4CB}",
  vsubnE: "\u2ACB\uFE00",
  vsubne: "\u228A\uFE00",
  vsupnE: "\u2ACC\uFE00",
  vsupne: "\u228B\uFE00",
  vzigzag: "\u299A",
  wcirc: "\u0175",
  wedbar: "\u2A5F",
  wedge: "\u2227",
  wedgeq: "\u2259",
  weierp: "\u2118",
  wfr: "\u{1D534}",
  wopf: "\u{1D568}",
  wp: "\u2118",
  wr: "\u2240",
  wreath: "\u2240",
  wscr: "\u{1D4CC}",
  xcap: "\u22C2",
  xcirc: "\u25EF",
  xcup: "\u22C3",
  xdtri: "\u25BD",
  xfr: "\u{1D535}",
  xhArr: "\u27FA",
  xharr: "\u27F7",
  xi: "\u03BE",
  xlArr: "\u27F8",
  xlarr: "\u27F5",
  xmap: "\u27FC",
  xnis: "\u22FB",
  xodot: "\u2A00",
  xopf: "\u{1D569}",
  xoplus: "\u2A01",
  xotime: "\u2A02",
  xrArr: "\u27F9",
  xrarr: "\u27F6",
  xscr: "\u{1D4CD}",
  xsqcup: "\u2A06",
  xuplus: "\u2A04",
  xutri: "\u25B3",
  xvee: "\u22C1",
  xwedge: "\u22C0",
  yacute: "\xFD",
  yacy: "\u044F",
  ycirc: "\u0177",
  ycy: "\u044B",
  yen: "\xA5",
  yfr: "\u{1D536}",
  yicy: "\u0457",
  yopf: "\u{1D56A}",
  yscr: "\u{1D4CE}",
  yucy: "\u044E",
  yuml: "\xFF",
  zacute: "\u017A",
  zcaron: "\u017E",
  zcy: "\u0437",
  zdot: "\u017C",
  zeetrf: "\u2128",
  zeta: "\u03B6",
  zfr: "\u{1D537}",
  zhcy: "\u0436",
  zigrarr: "\u21DD",
  zopf: "\u{1D56B}",
  zscr: "\u{1D4CF}",
  zwj: "\u200D",
  zwnj: "\u200C"
};

// node_modules/decode-named-character-reference/index.js
var own11 = {}.hasOwnProperty;
function decodeNamedCharacterReference(value) {
  return own11.call(characterEntities, value) ? characterEntities[value] : !1;
}

// node_modules/micromark-core-commonmark/lib/character-reference.js
var characterReference = {
  name: "characterReference",
  tokenize: tokenizeCharacterReference
};
function tokenizeCharacterReference(effects, ok2, nok) {
  let self2 = this, size = 0, max, test;
  return start;
  function start(code3) {
    return effects.enter("characterReference"), effects.enter("characterReferenceMarker"), effects.consume(code3), effects.exit("characterReferenceMarker"), open;
  }
  function open(code3) {
    return code3 === 35 ? (effects.enter("characterReferenceMarkerNumeric"), effects.consume(code3), effects.exit("characterReferenceMarkerNumeric"), numeric) : (effects.enter("characterReferenceValue"), max = 31, test = asciiAlphanumeric, value(code3));
  }
  function numeric(code3) {
    return code3 === 88 || code3 === 120 ? (effects.enter("characterReferenceMarkerHexadecimal"), effects.consume(code3), effects.exit("characterReferenceMarkerHexadecimal"), effects.enter("characterReferenceValue"), max = 6, test = asciiHexDigit, value) : (effects.enter("characterReferenceValue"), max = 7, test = asciiDigit, value(code3));
  }
  function value(code3) {
    let token;
    return code3 === 59 && size ? (token = effects.exit("characterReferenceValue"), test === asciiAlphanumeric && !decodeNamedCharacterReference(self2.sliceSerialize(token)) ? nok(code3) : (effects.enter("characterReferenceMarker"), effects.consume(code3), effects.exit("characterReferenceMarker"), effects.exit("characterReference"), ok2)) : test(code3) && size++ < max ? (effects.consume(code3), value) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/code-fenced.js
var codeFenced = {
  name: "codeFenced",
  tokenize: tokenizeCodeFenced,
  concrete: !0
};
function tokenizeCodeFenced(effects, ok2, nok) {
  let self2 = this, closingFenceConstruct = {
    tokenize: tokenizeClosingFence,
    partial: !0
  }, nonLazyLine = {
    tokenize: tokenizeNonLazyLine,
    partial: !0
  }, tail = this.events[this.events.length - 1], initialPrefix = tail && tail[1].type === "linePrefix" ? tail[2].sliceSerialize(tail[1], !0).length : 0, sizeOpen = 0, marker;
  return start;
  function start(code3) {
    return effects.enter("codeFenced"), effects.enter("codeFencedFence"), effects.enter("codeFencedFenceSequence"), marker = code3, sequenceOpen(code3);
  }
  function sequenceOpen(code3) {
    return code3 === marker ? (effects.consume(code3), sizeOpen++, sequenceOpen) : (effects.exit("codeFencedFenceSequence"), sizeOpen < 3 ? nok(code3) : factorySpace(effects, infoOpen, "whitespace")(code3));
  }
  function infoOpen(code3) {
    return code3 === null || markdownLineEnding(code3) ? openAfter(code3) : (effects.enter("codeFencedFenceInfo"), effects.enter("chunkString", {
      contentType: "string"
    }), info(code3));
  }
  function info(code3) {
    return code3 === null || markdownLineEndingOrSpace(code3) ? (effects.exit("chunkString"), effects.exit("codeFencedFenceInfo"), factorySpace(effects, infoAfter, "whitespace")(code3)) : code3 === 96 && code3 === marker ? nok(code3) : (effects.consume(code3), info);
  }
  function infoAfter(code3) {
    return code3 === null || markdownLineEnding(code3) ? openAfter(code3) : (effects.enter("codeFencedFenceMeta"), effects.enter("chunkString", {
      contentType: "string"
    }), meta13(code3));
  }
  function meta13(code3) {
    return code3 === null || markdownLineEnding(code3) ? (effects.exit("chunkString"), effects.exit("codeFencedFenceMeta"), openAfter(code3)) : code3 === 96 && code3 === marker ? nok(code3) : (effects.consume(code3), meta13);
  }
  function openAfter(code3) {
    return effects.exit("codeFencedFence"), self2.interrupt ? ok2(code3) : contentStart(code3);
  }
  function contentStart(code3) {
    return code3 === null ? after(code3) : markdownLineEnding(code3) ? effects.attempt(
      nonLazyLine,
      effects.attempt(
        closingFenceConstruct,
        after,
        initialPrefix ? factorySpace(
          effects,
          contentStart,
          "linePrefix",
          initialPrefix + 1
        ) : contentStart
      ),
      after
    )(code3) : (effects.enter("codeFlowValue"), contentContinue(code3));
  }
  function contentContinue(code3) {
    return code3 === null || markdownLineEnding(code3) ? (effects.exit("codeFlowValue"), contentStart(code3)) : (effects.consume(code3), contentContinue);
  }
  function after(code3) {
    return effects.exit("codeFenced"), ok2(code3);
  }
  function tokenizeNonLazyLine(effects2, ok3, nok2) {
    let self3 = this;
    return start2;
    function start2(code3) {
      return effects2.enter("lineEnding"), effects2.consume(code3), effects2.exit("lineEnding"), lineStart;
    }
    function lineStart(code3) {
      return self3.parser.lazy[self3.now().line] ? nok2(code3) : ok3(code3);
    }
  }
  function tokenizeClosingFence(effects2, ok3, nok2) {
    let size = 0;
    return factorySpace(
      effects2,
      closingSequenceStart,
      "linePrefix",
      this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    );
    function closingSequenceStart(code3) {
      return effects2.enter("codeFencedFence"), effects2.enter("codeFencedFenceSequence"), closingSequence(code3);
    }
    function closingSequence(code3) {
      return code3 === marker ? (effects2.consume(code3), size++, closingSequence) : size < sizeOpen ? nok2(code3) : (effects2.exit("codeFencedFenceSequence"), factorySpace(effects2, closingSequenceEnd, "whitespace")(code3));
    }
    function closingSequenceEnd(code3) {
      return code3 === null || markdownLineEnding(code3) ? (effects2.exit("codeFencedFence"), ok3(code3)) : nok2(code3);
    }
  }
}

// node_modules/micromark-core-commonmark/lib/code-indented.js
var codeIndented = {
  name: "codeIndented",
  tokenize: tokenizeCodeIndented
}, indentedContent = {
  tokenize: tokenizeIndentedContent,
  partial: !0
};
function tokenizeCodeIndented(effects, ok2, nok) {
  let self2 = this;
  return start;
  function start(code3) {
    return effects.enter("codeIndented"), factorySpace(effects, afterStartPrefix, "linePrefix", 4 + 1)(code3);
  }
  function afterStartPrefix(code3) {
    let tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === "linePrefix" && tail[2].sliceSerialize(tail[1], !0).length >= 4 ? afterPrefix(code3) : nok(code3);
  }
  function afterPrefix(code3) {
    return code3 === null ? after(code3) : markdownLineEnding(code3) ? effects.attempt(indentedContent, afterPrefix, after)(code3) : (effects.enter("codeFlowValue"), content3(code3));
  }
  function content3(code3) {
    return code3 === null || markdownLineEnding(code3) ? (effects.exit("codeFlowValue"), afterPrefix(code3)) : (effects.consume(code3), content3);
  }
  function after(code3) {
    return effects.exit("codeIndented"), ok2(code3);
  }
}
function tokenizeIndentedContent(effects, ok2, nok) {
  let self2 = this;
  return start;
  function start(code3) {
    return self2.parser.lazy[self2.now().line] ? nok(code3) : markdownLineEnding(code3) ? (effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), start) : factorySpace(effects, afterPrefix, "linePrefix", 4 + 1)(code3);
  }
  function afterPrefix(code3) {
    let tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === "linePrefix" && tail[2].sliceSerialize(tail[1], !0).length >= 4 ? ok2(code3) : markdownLineEnding(code3) ? start(code3) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/code-text.js
var codeText = {
  name: "codeText",
  tokenize: tokenizeCodeText,
  resolve: resolveCodeText,
  previous
};
function resolveCodeText(events) {
  let tailExitIndex = events.length - 4, headEnterIndex = 3, index2, enter;
  if ((events[headEnterIndex][1].type === "lineEnding" || events[headEnterIndex][1].type === "space") && (events[tailExitIndex][1].type === "lineEnding" || events[tailExitIndex][1].type === "space")) {
    for (index2 = headEnterIndex; ++index2 < tailExitIndex; )
      if (events[index2][1].type === "codeTextData") {
        events[headEnterIndex][1].type = "codeTextPadding", events[tailExitIndex][1].type = "codeTextPadding", headEnterIndex += 2, tailExitIndex -= 2;
        break;
      }
  }
  for (index2 = headEnterIndex - 1, tailExitIndex++; ++index2 <= tailExitIndex; )
    enter === void 0 ? index2 !== tailExitIndex && events[index2][1].type !== "lineEnding" && (enter = index2) : (index2 === tailExitIndex || events[index2][1].type === "lineEnding") && (events[enter][1].type = "codeTextData", index2 !== enter + 2 && (events[enter][1].end = events[index2 - 1][1].end, events.splice(enter + 2, index2 - enter - 2), tailExitIndex -= index2 - enter - 2, index2 = enter + 2), enter = void 0);
  return events;
}
function previous(code3) {
  return code3 !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function tokenizeCodeText(effects, ok2, nok) {
  let self2 = this, sizeOpen = 0, size, token;
  return start;
  function start(code3) {
    return effects.enter("codeText"), effects.enter("codeTextSequence"), openingSequence(code3);
  }
  function openingSequence(code3) {
    return code3 === 96 ? (effects.consume(code3), sizeOpen++, openingSequence) : (effects.exit("codeTextSequence"), gap(code3));
  }
  function gap(code3) {
    return code3 === null ? nok(code3) : code3 === 96 ? (token = effects.enter("codeTextSequence"), size = 0, closingSequence(code3)) : code3 === 32 ? (effects.enter("space"), effects.consume(code3), effects.exit("space"), gap) : markdownLineEnding(code3) ? (effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), gap) : (effects.enter("codeTextData"), data(code3));
  }
  function data(code3) {
    return code3 === null || code3 === 32 || code3 === 96 || markdownLineEnding(code3) ? (effects.exit("codeTextData"), gap(code3)) : (effects.consume(code3), data);
  }
  function closingSequence(code3) {
    return code3 === 96 ? (effects.consume(code3), size++, closingSequence) : size === sizeOpen ? (effects.exit("codeTextSequence"), effects.exit("codeText"), ok2(code3)) : (token.type = "codeTextData", data(code3));
  }
}

// node_modules/micromark-util-subtokenize/index.js
function subtokenize(events) {
  let jumps = {}, index2 = -1, event, lineIndex, otherIndex, otherEvent, parameters, subevents, more;
  for (; ++index2 < events.length; ) {
    for (; index2 in jumps; )
      index2 = jumps[index2];
    if (event = events[index2], index2 && event[1].type === "chunkFlow" && events[index2 - 1][1].type === "listItemPrefix" && (subevents = event[1]._tokenizer.events, otherIndex = 0, otherIndex < subevents.length && subevents[otherIndex][1].type === "lineEndingBlank" && (otherIndex += 2), otherIndex < subevents.length && subevents[otherIndex][1].type === "content"))
      for (; ++otherIndex < subevents.length && subevents[otherIndex][1].type !== "content"; )
        subevents[otherIndex][1].type === "chunkText" && (subevents[otherIndex][1]._isInFirstContentOfListItem = !0, otherIndex++);
    if (event[0] === "enter")
      event[1].contentType && (Object.assign(jumps, subcontent(events, index2)), index2 = jumps[index2], more = !0);
    else if (event[1]._container) {
      for (otherIndex = index2, lineIndex = void 0; otherIndex-- && (otherEvent = events[otherIndex], otherEvent[1].type === "lineEnding" || otherEvent[1].type === "lineEndingBlank"); )
        otherEvent[0] === "enter" && (lineIndex && (events[lineIndex][1].type = "lineEndingBlank"), otherEvent[1].type = "lineEnding", lineIndex = otherIndex);
      lineIndex && (event[1].end = Object.assign({}, events[lineIndex][1].start), parameters = events.slice(lineIndex, index2), parameters.unshift(event), splice(events, lineIndex, index2 - lineIndex + 1, parameters));
    }
  }
  return !more;
}
function subcontent(events, eventIndex) {
  let token = events[eventIndex][1], context = events[eventIndex][2], startPosition = eventIndex - 1, startPositions = [], tokenizer = token._tokenizer || context.parser[token.contentType](token.start), childEvents = tokenizer.events, jumps = [], gaps = {}, stream, previous3, index2 = -1, current = token, adjust = 0, start = 0, breaks = [start];
  for (; current; ) {
    for (; events[++startPosition][1] !== current; )
      ;
    startPositions.push(startPosition), current._tokenizer || (stream = context.sliceStream(current), current.next || stream.push(null), previous3 && tokenizer.defineSkip(current.start), current._isInFirstContentOfListItem && (tokenizer._gfmTasklistFirstContentOfListItem = !0), tokenizer.write(stream), current._isInFirstContentOfListItem && (tokenizer._gfmTasklistFirstContentOfListItem = void 0)), previous3 = current, current = current.next;
  }
  for (current = token; ++index2 < childEvents.length; )
    childEvents[index2][0] === "exit" && childEvents[index2 - 1][0] === "enter" && childEvents[index2][1].type === childEvents[index2 - 1][1].type && childEvents[index2][1].start.line !== childEvents[index2][1].end.line && (start = index2 + 1, breaks.push(start), current._tokenizer = void 0, current.previous = void 0, current = current.next);
  for (tokenizer.events = [], current ? (current._tokenizer = void 0, current.previous = void 0) : breaks.pop(), index2 = breaks.length; index2--; ) {
    let slice = childEvents.slice(breaks[index2], breaks[index2 + 1]), start2 = startPositions.pop();
    jumps.unshift([start2, start2 + slice.length - 1]), splice(events, start2, 2, slice);
  }
  for (index2 = -1; ++index2 < jumps.length; )
    gaps[adjust + jumps[index2][0]] = adjust + jumps[index2][1], adjust += jumps[index2][1] - jumps[index2][0] - 1;
  return gaps;
}

// node_modules/micromark-core-commonmark/lib/content.js
var content = {
  tokenize: tokenizeContent,
  resolve: resolveContent
}, continuationConstruct = {
  tokenize: tokenizeContinuation,
  partial: !0
};
function resolveContent(events) {
  return subtokenize(events), events;
}
function tokenizeContent(effects, ok2) {
  let previous3;
  return start;
  function start(code3) {
    return effects.enter("content"), previous3 = effects.enter("chunkContent", {
      contentType: "content"
    }), data(code3);
  }
  function data(code3) {
    return code3 === null ? contentEnd(code3) : markdownLineEnding(code3) ? effects.check(
      continuationConstruct,
      contentContinue,
      contentEnd
    )(code3) : (effects.consume(code3), data);
  }
  function contentEnd(code3) {
    return effects.exit("chunkContent"), effects.exit("content"), ok2(code3);
  }
  function contentContinue(code3) {
    return effects.consume(code3), effects.exit("chunkContent"), previous3.next = effects.enter("chunkContent", {
      contentType: "content",
      previous: previous3
    }), previous3 = previous3.next, data;
  }
}
function tokenizeContinuation(effects, ok2, nok) {
  let self2 = this;
  return startLookahead;
  function startLookahead(code3) {
    return effects.exit("chunkContent"), effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), factorySpace(effects, prefixed, "linePrefix");
  }
  function prefixed(code3) {
    if (code3 === null || markdownLineEnding(code3))
      return nok(code3);
    let tail = self2.events[self2.events.length - 1];
    return !self2.parser.constructs.disable.null.includes("codeIndented") && tail && tail[1].type === "linePrefix" && tail[2].sliceSerialize(tail[1], !0).length >= 4 ? ok2(code3) : effects.interrupt(self2.parser.constructs.flow, nok, ok2)(code3);
  }
}

// node_modules/micromark-factory-destination/index.js
function factoryDestination(effects, ok2, nok, type, literalType, literalMarkerType, rawType, stringType, max) {
  let limit = max || Number.POSITIVE_INFINITY, balance = 0;
  return start;
  function start(code3) {
    return code3 === 60 ? (effects.enter(type), effects.enter(literalType), effects.enter(literalMarkerType), effects.consume(code3), effects.exit(literalMarkerType), destinationEnclosedBefore) : code3 === null || code3 === 41 || asciiControl(code3) ? nok(code3) : (effects.enter(type), effects.enter(rawType), effects.enter(stringType), effects.enter("chunkString", {
      contentType: "string"
    }), destinationRaw(code3));
  }
  function destinationEnclosedBefore(code3) {
    return code3 === 62 ? (effects.enter(literalMarkerType), effects.consume(code3), effects.exit(literalMarkerType), effects.exit(literalType), effects.exit(type), ok2) : (effects.enter(stringType), effects.enter("chunkString", {
      contentType: "string"
    }), destinationEnclosed(code3));
  }
  function destinationEnclosed(code3) {
    return code3 === 62 ? (effects.exit("chunkString"), effects.exit(stringType), destinationEnclosedBefore(code3)) : code3 === null || code3 === 60 || markdownLineEnding(code3) ? nok(code3) : (effects.consume(code3), code3 === 92 ? destinationEnclosedEscape : destinationEnclosed);
  }
  function destinationEnclosedEscape(code3) {
    return code3 === 60 || code3 === 62 || code3 === 92 ? (effects.consume(code3), destinationEnclosed) : destinationEnclosed(code3);
  }
  function destinationRaw(code3) {
    return code3 === 40 ? ++balance > limit ? nok(code3) : (effects.consume(code3), destinationRaw) : code3 === 41 ? balance-- ? (effects.consume(code3), destinationRaw) : (effects.exit("chunkString"), effects.exit(stringType), effects.exit(rawType), effects.exit(type), ok2(code3)) : code3 === null || markdownLineEndingOrSpace(code3) ? balance ? nok(code3) : (effects.exit("chunkString"), effects.exit(stringType), effects.exit(rawType), effects.exit(type), ok2(code3)) : asciiControl(code3) ? nok(code3) : (effects.consume(code3), code3 === 92 ? destinationRawEscape : destinationRaw);
  }
  function destinationRawEscape(code3) {
    return code3 === 40 || code3 === 41 || code3 === 92 ? (effects.consume(code3), destinationRaw) : destinationRaw(code3);
  }
}

// node_modules/micromark-factory-label/index.js
function factoryLabel(effects, ok2, nok, type, markerType, stringType) {
  let self2 = this, size = 0, data;
  return start;
  function start(code3) {
    return effects.enter(type), effects.enter(markerType), effects.consume(code3), effects.exit(markerType), effects.enter(stringType), atBreak;
  }
  function atBreak(code3) {
    return code3 === null || code3 === 91 || code3 === 93 && !data || code3 === 94 && !size && "_hiddenFootnoteSupport" in self2.parser.constructs || size > 999 ? nok(code3) : code3 === 93 ? (effects.exit(stringType), effects.enter(markerType), effects.consume(code3), effects.exit(markerType), effects.exit(type), ok2) : markdownLineEnding(code3) ? (effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), atBreak) : (effects.enter("chunkString", {
      contentType: "string"
    }), label(code3));
  }
  function label(code3) {
    return code3 === null || code3 === 91 || code3 === 93 || markdownLineEnding(code3) || size++ > 999 ? (effects.exit("chunkString"), atBreak(code3)) : (effects.consume(code3), data = data || !markdownSpace(code3), code3 === 92 ? labelEscape : label);
  }
  function labelEscape(code3) {
    return code3 === 91 || code3 === 92 || code3 === 93 ? (effects.consume(code3), size++, label) : label(code3);
  }
}

// node_modules/micromark-factory-title/index.js
function factoryTitle(effects, ok2, nok, type, markerType, stringType) {
  let marker;
  return start;
  function start(code3) {
    return effects.enter(type), effects.enter(markerType), effects.consume(code3), effects.exit(markerType), marker = code3 === 40 ? 41 : code3, atFirstTitleBreak;
  }
  function atFirstTitleBreak(code3) {
    return code3 === marker ? (effects.enter(markerType), effects.consume(code3), effects.exit(markerType), effects.exit(type), ok2) : (effects.enter(stringType), atTitleBreak(code3));
  }
  function atTitleBreak(code3) {
    return code3 === marker ? (effects.exit(stringType), atFirstTitleBreak(marker)) : code3 === null ? nok(code3) : markdownLineEnding(code3) ? (effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), factorySpace(effects, atTitleBreak, "linePrefix")) : (effects.enter("chunkString", {
      contentType: "string"
    }), title(code3));
  }
  function title(code3) {
    return code3 === marker || code3 === null || markdownLineEnding(code3) ? (effects.exit("chunkString"), atTitleBreak(code3)) : (effects.consume(code3), code3 === 92 ? titleEscape : title);
  }
  function titleEscape(code3) {
    return code3 === marker || code3 === 92 ? (effects.consume(code3), title) : title(code3);
  }
}

// node_modules/micromark-factory-whitespace/index.js
function factoryWhitespace(effects, ok2) {
  let seen;
  return start;
  function start(code3) {
    return markdownLineEnding(code3) ? (effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), seen = !0, start) : markdownSpace(code3) ? factorySpace(
      effects,
      start,
      seen ? "linePrefix" : "lineSuffix"
    )(code3) : ok2(code3);
  }
}

// node_modules/micromark-util-normalize-identifier/index.js
function normalizeIdentifier(value) {
  return value.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}

// node_modules/micromark-core-commonmark/lib/definition.js
var definition = {
  name: "definition",
  tokenize: tokenizeDefinition
}, titleConstruct = {
  tokenize: tokenizeTitle,
  partial: !0
};
function tokenizeDefinition(effects, ok2, nok) {
  let self2 = this, identifier;
  return start;
  function start(code3) {
    return effects.enter("definition"), factoryLabel.call(
      self2,
      effects,
      labelAfter,
      nok,
      "definitionLabel",
      "definitionLabelMarker",
      "definitionLabelString"
    )(code3);
  }
  function labelAfter(code3) {
    return identifier = normalizeIdentifier(
      self2.sliceSerialize(self2.events[self2.events.length - 1][1]).slice(1, -1)
    ), code3 === 58 ? (effects.enter("definitionMarker"), effects.consume(code3), effects.exit("definitionMarker"), factoryWhitespace(
      effects,
      factoryDestination(
        effects,
        effects.attempt(
          titleConstruct,
          factorySpace(effects, after, "whitespace"),
          factorySpace(effects, after, "whitespace")
        ),
        nok,
        "definitionDestination",
        "definitionDestinationLiteral",
        "definitionDestinationLiteralMarker",
        "definitionDestinationRaw",
        "definitionDestinationString"
      )
    )) : nok(code3);
  }
  function after(code3) {
    return code3 === null || markdownLineEnding(code3) ? (effects.exit("definition"), self2.parser.defined.includes(identifier) || self2.parser.defined.push(identifier), ok2(code3)) : nok(code3);
  }
}
function tokenizeTitle(effects, ok2, nok) {
  return start;
  function start(code3) {
    return markdownLineEndingOrSpace(code3) ? factoryWhitespace(effects, before)(code3) : nok(code3);
  }
  function before(code3) {
    return code3 === 34 || code3 === 39 || code3 === 40 ? factoryTitle(
      effects,
      factorySpace(effects, after, "whitespace"),
      nok,
      "definitionTitle",
      "definitionTitleMarker",
      "definitionTitleString"
    )(code3) : nok(code3);
  }
  function after(code3) {
    return code3 === null || markdownLineEnding(code3) ? ok2(code3) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/hard-break-escape.js
var hardBreakEscape = {
  name: "hardBreakEscape",
  tokenize: tokenizeHardBreakEscape
};
function tokenizeHardBreakEscape(effects, ok2, nok) {
  return start;
  function start(code3) {
    return effects.enter("hardBreakEscape"), effects.enter("escapeMarker"), effects.consume(code3), open;
  }
  function open(code3) {
    return markdownLineEnding(code3) ? (effects.exit("escapeMarker"), effects.exit("hardBreakEscape"), ok2(code3)) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/heading-atx.js
var headingAtx = {
  name: "headingAtx",
  tokenize: tokenizeHeadingAtx,
  resolve: resolveHeadingAtx
};
function resolveHeadingAtx(events, context) {
  let contentEnd = events.length - 2, contentStart = 3, content3, text7;
  return events[contentStart][1].type === "whitespace" && (contentStart += 2), contentEnd - 2 > contentStart && events[contentEnd][1].type === "whitespace" && (contentEnd -= 2), events[contentEnd][1].type === "atxHeadingSequence" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === "whitespace") && (contentEnd -= contentStart + 1 === contentEnd ? 2 : 4), contentEnd > contentStart && (content3 = {
    type: "atxHeadingText",
    start: events[contentStart][1].start,
    end: events[contentEnd][1].end
  }, text7 = {
    type: "chunkText",
    start: events[contentStart][1].start,
    end: events[contentEnd][1].end,
    contentType: "text"
  }, splice(events, contentStart, contentEnd - contentStart + 1, [
    ["enter", content3, context],
    ["enter", text7, context],
    ["exit", text7, context],
    ["exit", content3, context]
  ])), events;
}
function tokenizeHeadingAtx(effects, ok2, nok) {
  let self2 = this, size = 0;
  return start;
  function start(code3) {
    return effects.enter("atxHeading"), effects.enter("atxHeadingSequence"), fenceOpenInside(code3);
  }
  function fenceOpenInside(code3) {
    return code3 === 35 && size++ < 6 ? (effects.consume(code3), fenceOpenInside) : code3 === null || markdownLineEndingOrSpace(code3) ? (effects.exit("atxHeadingSequence"), self2.interrupt ? ok2(code3) : headingBreak(code3)) : nok(code3);
  }
  function headingBreak(code3) {
    return code3 === 35 ? (effects.enter("atxHeadingSequence"), sequence(code3)) : code3 === null || markdownLineEnding(code3) ? (effects.exit("atxHeading"), ok2(code3)) : markdownSpace(code3) ? factorySpace(effects, headingBreak, "whitespace")(code3) : (effects.enter("atxHeadingText"), data(code3));
  }
  function sequence(code3) {
    return code3 === 35 ? (effects.consume(code3), sequence) : (effects.exit("atxHeadingSequence"), headingBreak(code3));
  }
  function data(code3) {
    return code3 === null || code3 === 35 || markdownLineEndingOrSpace(code3) ? (effects.exit("atxHeadingText"), headingBreak(code3)) : (effects.consume(code3), data);
  }
}

// node_modules/micromark-util-html-tag-name/index.js
var htmlBlockNames = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], htmlRawNames = ["pre", "script", "style", "textarea"];

// node_modules/micromark-core-commonmark/lib/html-flow.js
var htmlFlow = {
  name: "htmlFlow",
  tokenize: tokenizeHtmlFlow,
  resolveTo: resolveToHtmlFlow,
  concrete: !0
}, nextBlankConstruct = {
  tokenize: tokenizeNextBlank,
  partial: !0
};
function resolveToHtmlFlow(events) {
  let index2 = events.length;
  for (; index2-- && !(events[index2][0] === "enter" && events[index2][1].type === "htmlFlow"); )
    ;
  return index2 > 1 && events[index2 - 2][1].type === "linePrefix" && (events[index2][1].start = events[index2 - 2][1].start, events[index2 + 1][1].start = events[index2 - 2][1].start, events.splice(index2 - 2, 2)), events;
}
function tokenizeHtmlFlow(effects, ok2, nok) {
  let self2 = this, kind, startTag2, buffer2, index2, marker;
  return start;
  function start(code3) {
    return effects.enter("htmlFlow"), effects.enter("htmlFlowData"), effects.consume(code3), open;
  }
  function open(code3) {
    return code3 === 33 ? (effects.consume(code3), declarationStart) : code3 === 47 ? (effects.consume(code3), tagCloseStart) : code3 === 63 ? (effects.consume(code3), kind = 3, self2.interrupt ? ok2 : continuationDeclarationInside) : asciiAlpha(code3) ? (effects.consume(code3), buffer2 = String.fromCharCode(code3), startTag2 = !0, tagName) : nok(code3);
  }
  function declarationStart(code3) {
    return code3 === 45 ? (effects.consume(code3), kind = 2, commentOpenInside) : code3 === 91 ? (effects.consume(code3), kind = 5, buffer2 = "CDATA[", index2 = 0, cdataOpenInside) : asciiAlpha(code3) ? (effects.consume(code3), kind = 4, self2.interrupt ? ok2 : continuationDeclarationInside) : nok(code3);
  }
  function commentOpenInside(code3) {
    return code3 === 45 ? (effects.consume(code3), self2.interrupt ? ok2 : continuationDeclarationInside) : nok(code3);
  }
  function cdataOpenInside(code3) {
    return code3 === buffer2.charCodeAt(index2++) ? (effects.consume(code3), index2 === buffer2.length ? self2.interrupt ? ok2 : continuation : cdataOpenInside) : nok(code3);
  }
  function tagCloseStart(code3) {
    return asciiAlpha(code3) ? (effects.consume(code3), buffer2 = String.fromCharCode(code3), tagName) : nok(code3);
  }
  function tagName(code3) {
    return code3 === null || code3 === 47 || code3 === 62 || markdownLineEndingOrSpace(code3) ? code3 !== 47 && startTag2 && htmlRawNames.includes(buffer2.toLowerCase()) ? (kind = 1, self2.interrupt ? ok2(code3) : continuation(code3)) : htmlBlockNames.includes(buffer2.toLowerCase()) ? (kind = 6, code3 === 47 ? (effects.consume(code3), basicSelfClosing) : self2.interrupt ? ok2(code3) : continuation(code3)) : (kind = 7, self2.interrupt && !self2.parser.lazy[self2.now().line] ? nok(code3) : startTag2 ? completeAttributeNameBefore(code3) : completeClosingTagAfter(code3)) : code3 === 45 || asciiAlphanumeric(code3) ? (effects.consume(code3), buffer2 += String.fromCharCode(code3), tagName) : nok(code3);
  }
  function basicSelfClosing(code3) {
    return code3 === 62 ? (effects.consume(code3), self2.interrupt ? ok2 : continuation) : nok(code3);
  }
  function completeClosingTagAfter(code3) {
    return markdownSpace(code3) ? (effects.consume(code3), completeClosingTagAfter) : completeEnd(code3);
  }
  function completeAttributeNameBefore(code3) {
    return code3 === 47 ? (effects.consume(code3), completeEnd) : code3 === 58 || code3 === 95 || asciiAlpha(code3) ? (effects.consume(code3), completeAttributeName) : markdownSpace(code3) ? (effects.consume(code3), completeAttributeNameBefore) : completeEnd(code3);
  }
  function completeAttributeName(code3) {
    return code3 === 45 || code3 === 46 || code3 === 58 || code3 === 95 || asciiAlphanumeric(code3) ? (effects.consume(code3), completeAttributeName) : completeAttributeNameAfter(code3);
  }
  function completeAttributeNameAfter(code3) {
    return code3 === 61 ? (effects.consume(code3), completeAttributeValueBefore) : markdownSpace(code3) ? (effects.consume(code3), completeAttributeNameAfter) : completeAttributeNameBefore(code3);
  }
  function completeAttributeValueBefore(code3) {
    return code3 === null || code3 === 60 || code3 === 61 || code3 === 62 || code3 === 96 ? nok(code3) : code3 === 34 || code3 === 39 ? (effects.consume(code3), marker = code3, completeAttributeValueQuoted) : markdownSpace(code3) ? (effects.consume(code3), completeAttributeValueBefore) : (marker = null, completeAttributeValueUnquoted(code3));
  }
  function completeAttributeValueQuoted(code3) {
    return code3 === null || markdownLineEnding(code3) ? nok(code3) : code3 === marker ? (effects.consume(code3), completeAttributeValueQuotedAfter) : (effects.consume(code3), completeAttributeValueQuoted);
  }
  function completeAttributeValueUnquoted(code3) {
    return code3 === null || code3 === 34 || code3 === 39 || code3 === 60 || code3 === 61 || code3 === 62 || code3 === 96 || markdownLineEndingOrSpace(code3) ? completeAttributeNameAfter(code3) : (effects.consume(code3), completeAttributeValueUnquoted);
  }
  function completeAttributeValueQuotedAfter(code3) {
    return code3 === 47 || code3 === 62 || markdownSpace(code3) ? completeAttributeNameBefore(code3) : nok(code3);
  }
  function completeEnd(code3) {
    return code3 === 62 ? (effects.consume(code3), completeAfter) : nok(code3);
  }
  function completeAfter(code3) {
    return markdownSpace(code3) ? (effects.consume(code3), completeAfter) : code3 === null || markdownLineEnding(code3) ? continuation(code3) : nok(code3);
  }
  function continuation(code3) {
    return code3 === 45 && kind === 2 ? (effects.consume(code3), continuationCommentInside) : code3 === 60 && kind === 1 ? (effects.consume(code3), continuationRawTagOpen) : code3 === 62 && kind === 4 ? (effects.consume(code3), continuationClose) : code3 === 63 && kind === 3 ? (effects.consume(code3), continuationDeclarationInside) : code3 === 93 && kind === 5 ? (effects.consume(code3), continuationCharacterDataInside) : markdownLineEnding(code3) && (kind === 6 || kind === 7) ? effects.check(
      nextBlankConstruct,
      continuationClose,
      continuationAtLineEnding
    )(code3) : code3 === null || markdownLineEnding(code3) ? continuationAtLineEnding(code3) : (effects.consume(code3), continuation);
  }
  function continuationAtLineEnding(code3) {
    return effects.exit("htmlFlowData"), htmlContinueStart(code3);
  }
  function htmlContinueStart(code3) {
    return code3 === null ? done(code3) : markdownLineEnding(code3) ? effects.attempt(
      {
        tokenize: htmlLineEnd,
        partial: !0
      },
      htmlContinueStart,
      done
    )(code3) : (effects.enter("htmlFlowData"), continuation(code3));
  }
  function htmlLineEnd(effects2, ok3, nok2) {
    return start2;
    function start2(code3) {
      return effects2.enter("lineEnding"), effects2.consume(code3), effects2.exit("lineEnding"), lineStart;
    }
    function lineStart(code3) {
      return self2.parser.lazy[self2.now().line] ? nok2(code3) : ok3(code3);
    }
  }
  function continuationCommentInside(code3) {
    return code3 === 45 ? (effects.consume(code3), continuationDeclarationInside) : continuation(code3);
  }
  function continuationRawTagOpen(code3) {
    return code3 === 47 ? (effects.consume(code3), buffer2 = "", continuationRawEndTag) : continuation(code3);
  }
  function continuationRawEndTag(code3) {
    return code3 === 62 && htmlRawNames.includes(buffer2.toLowerCase()) ? (effects.consume(code3), continuationClose) : asciiAlpha(code3) && buffer2.length < 8 ? (effects.consume(code3), buffer2 += String.fromCharCode(code3), continuationRawEndTag) : continuation(code3);
  }
  function continuationCharacterDataInside(code3) {
    return code3 === 93 ? (effects.consume(code3), continuationDeclarationInside) : continuation(code3);
  }
  function continuationDeclarationInside(code3) {
    return code3 === 62 ? (effects.consume(code3), continuationClose) : code3 === 45 && kind === 2 ? (effects.consume(code3), continuationDeclarationInside) : continuation(code3);
  }
  function continuationClose(code3) {
    return code3 === null || markdownLineEnding(code3) ? (effects.exit("htmlFlowData"), done(code3)) : (effects.consume(code3), continuationClose);
  }
  function done(code3) {
    return effects.exit("htmlFlow"), ok2(code3);
  }
}
function tokenizeNextBlank(effects, ok2, nok) {
  return start;
  function start(code3) {
    return effects.exit("htmlFlowData"), effects.enter("lineEndingBlank"), effects.consume(code3), effects.exit("lineEndingBlank"), effects.attempt(blankLine, ok2, nok);
  }
}

// node_modules/micromark-core-commonmark/lib/html-text.js
var htmlText = {
  name: "htmlText",
  tokenize: tokenizeHtmlText
};
function tokenizeHtmlText(effects, ok2, nok) {
  let self2 = this, marker, buffer2, index2, returnState;
  return start;
  function start(code3) {
    return effects.enter("htmlText"), effects.enter("htmlTextData"), effects.consume(code3), open;
  }
  function open(code3) {
    return code3 === 33 ? (effects.consume(code3), declarationOpen) : code3 === 47 ? (effects.consume(code3), tagCloseStart) : code3 === 63 ? (effects.consume(code3), instruction) : asciiAlpha(code3) ? (effects.consume(code3), tagOpen) : nok(code3);
  }
  function declarationOpen(code3) {
    return code3 === 45 ? (effects.consume(code3), commentOpen) : code3 === 91 ? (effects.consume(code3), buffer2 = "CDATA[", index2 = 0, cdataOpen) : asciiAlpha(code3) ? (effects.consume(code3), declaration) : nok(code3);
  }
  function commentOpen(code3) {
    return code3 === 45 ? (effects.consume(code3), commentStart) : nok(code3);
  }
  function commentStart(code3) {
    return code3 === null || code3 === 62 ? nok(code3) : code3 === 45 ? (effects.consume(code3), commentStartDash) : comment3(code3);
  }
  function commentStartDash(code3) {
    return code3 === null || code3 === 62 ? nok(code3) : comment3(code3);
  }
  function comment3(code3) {
    return code3 === null ? nok(code3) : code3 === 45 ? (effects.consume(code3), commentClose) : markdownLineEnding(code3) ? (returnState = comment3, atLineEnding(code3)) : (effects.consume(code3), comment3);
  }
  function commentClose(code3) {
    return code3 === 45 ? (effects.consume(code3), end) : comment3(code3);
  }
  function cdataOpen(code3) {
    return code3 === buffer2.charCodeAt(index2++) ? (effects.consume(code3), index2 === buffer2.length ? cdata : cdataOpen) : nok(code3);
  }
  function cdata(code3) {
    return code3 === null ? nok(code3) : code3 === 93 ? (effects.consume(code3), cdataClose) : markdownLineEnding(code3) ? (returnState = cdata, atLineEnding(code3)) : (effects.consume(code3), cdata);
  }
  function cdataClose(code3) {
    return code3 === 93 ? (effects.consume(code3), cdataEnd) : cdata(code3);
  }
  function cdataEnd(code3) {
    return code3 === 62 ? end(code3) : code3 === 93 ? (effects.consume(code3), cdataEnd) : cdata(code3);
  }
  function declaration(code3) {
    return code3 === null || code3 === 62 ? end(code3) : markdownLineEnding(code3) ? (returnState = declaration, atLineEnding(code3)) : (effects.consume(code3), declaration);
  }
  function instruction(code3) {
    return code3 === null ? nok(code3) : code3 === 63 ? (effects.consume(code3), instructionClose) : markdownLineEnding(code3) ? (returnState = instruction, atLineEnding(code3)) : (effects.consume(code3), instruction);
  }
  function instructionClose(code3) {
    return code3 === 62 ? end(code3) : instruction(code3);
  }
  function tagCloseStart(code3) {
    return asciiAlpha(code3) ? (effects.consume(code3), tagClose) : nok(code3);
  }
  function tagClose(code3) {
    return code3 === 45 || asciiAlphanumeric(code3) ? (effects.consume(code3), tagClose) : tagCloseBetween(code3);
  }
  function tagCloseBetween(code3) {
    return markdownLineEnding(code3) ? (returnState = tagCloseBetween, atLineEnding(code3)) : markdownSpace(code3) ? (effects.consume(code3), tagCloseBetween) : end(code3);
  }
  function tagOpen(code3) {
    return code3 === 45 || asciiAlphanumeric(code3) ? (effects.consume(code3), tagOpen) : code3 === 47 || code3 === 62 || markdownLineEndingOrSpace(code3) ? tagOpenBetween(code3) : nok(code3);
  }
  function tagOpenBetween(code3) {
    return code3 === 47 ? (effects.consume(code3), end) : code3 === 58 || code3 === 95 || asciiAlpha(code3) ? (effects.consume(code3), tagOpenAttributeName) : markdownLineEnding(code3) ? (returnState = tagOpenBetween, atLineEnding(code3)) : markdownSpace(code3) ? (effects.consume(code3), tagOpenBetween) : end(code3);
  }
  function tagOpenAttributeName(code3) {
    return code3 === 45 || code3 === 46 || code3 === 58 || code3 === 95 || asciiAlphanumeric(code3) ? (effects.consume(code3), tagOpenAttributeName) : tagOpenAttributeNameAfter(code3);
  }
  function tagOpenAttributeNameAfter(code3) {
    return code3 === 61 ? (effects.consume(code3), tagOpenAttributeValueBefore) : markdownLineEnding(code3) ? (returnState = tagOpenAttributeNameAfter, atLineEnding(code3)) : markdownSpace(code3) ? (effects.consume(code3), tagOpenAttributeNameAfter) : tagOpenBetween(code3);
  }
  function tagOpenAttributeValueBefore(code3) {
    return code3 === null || code3 === 60 || code3 === 61 || code3 === 62 || code3 === 96 ? nok(code3) : code3 === 34 || code3 === 39 ? (effects.consume(code3), marker = code3, tagOpenAttributeValueQuoted) : markdownLineEnding(code3) ? (returnState = tagOpenAttributeValueBefore, atLineEnding(code3)) : markdownSpace(code3) ? (effects.consume(code3), tagOpenAttributeValueBefore) : (effects.consume(code3), marker = void 0, tagOpenAttributeValueUnquoted);
  }
  function tagOpenAttributeValueQuoted(code3) {
    return code3 === marker ? (effects.consume(code3), tagOpenAttributeValueQuotedAfter) : code3 === null ? nok(code3) : markdownLineEnding(code3) ? (returnState = tagOpenAttributeValueQuoted, atLineEnding(code3)) : (effects.consume(code3), tagOpenAttributeValueQuoted);
  }
  function tagOpenAttributeValueQuotedAfter(code3) {
    return code3 === 62 || code3 === 47 || markdownLineEndingOrSpace(code3) ? tagOpenBetween(code3) : nok(code3);
  }
  function tagOpenAttributeValueUnquoted(code3) {
    return code3 === null || code3 === 34 || code3 === 39 || code3 === 60 || code3 === 61 || code3 === 96 ? nok(code3) : code3 === 62 || markdownLineEndingOrSpace(code3) ? tagOpenBetween(code3) : (effects.consume(code3), tagOpenAttributeValueUnquoted);
  }
  function atLineEnding(code3) {
    return effects.exit("htmlTextData"), effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), factorySpace(
      effects,
      afterPrefix,
      "linePrefix",
      self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    );
  }
  function afterPrefix(code3) {
    return effects.enter("htmlTextData"), returnState(code3);
  }
  function end(code3) {
    return code3 === 62 ? (effects.consume(code3), effects.exit("htmlTextData"), effects.exit("htmlText"), ok2) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/label-end.js
var labelEnd = {
  name: "labelEnd",
  tokenize: tokenizeLabelEnd,
  resolveTo: resolveToLabelEnd,
  resolveAll: resolveAllLabelEnd
}, resourceConstruct = {
  tokenize: tokenizeResource
}, fullReferenceConstruct = {
  tokenize: tokenizeFullReference
}, collapsedReferenceConstruct = {
  tokenize: tokenizeCollapsedReference
};
function resolveAllLabelEnd(events) {
  let index2 = -1, token;
  for (; ++index2 < events.length; )
    token = events[index2][1], (token.type === "labelImage" || token.type === "labelLink" || token.type === "labelEnd") && (events.splice(index2 + 1, token.type === "labelImage" ? 4 : 2), token.type = "data", index2++);
  return events;
}
function resolveToLabelEnd(events, context) {
  let index2 = events.length, offset = 0, token, open, close, media;
  for (; index2--; )
    if (token = events[index2][1], open) {
      if (token.type === "link" || token.type === "labelLink" && token._inactive)
        break;
      events[index2][0] === "enter" && token.type === "labelLink" && (token._inactive = !0);
    } else if (close) {
      if (events[index2][0] === "enter" && (token.type === "labelImage" || token.type === "labelLink") && !token._balanced && (open = index2, token.type !== "labelLink")) {
        offset = 2;
        break;
      }
    } else
      token.type === "labelEnd" && (close = index2);
  let group = {
    type: events[open][1].type === "labelLink" ? "link" : "image",
    start: Object.assign({}, events[open][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  }, label = {
    type: "label",
    start: Object.assign({}, events[open][1].start),
    end: Object.assign({}, events[close][1].end)
  }, text7 = {
    type: "labelText",
    start: Object.assign({}, events[open + offset + 2][1].end),
    end: Object.assign({}, events[close - 2][1].start)
  };
  return media = [
    ["enter", group, context],
    ["enter", label, context]
  ], media = push(media, events.slice(open + 1, open + offset + 3)), media = push(media, [["enter", text7, context]]), media = push(
    media,
    resolveAll(
      context.parser.constructs.insideSpan.null,
      events.slice(open + offset + 4, close - 3),
      context
    )
  ), media = push(media, [
    ["exit", text7, context],
    events[close - 2],
    events[close - 1],
    ["exit", label, context]
  ]), media = push(media, events.slice(close + 1)), media = push(media, [["exit", group, context]]), splice(events, open, events.length, media), events;
}
function tokenizeLabelEnd(effects, ok2, nok) {
  let self2 = this, index2 = self2.events.length, labelStart, defined;
  for (; index2--; )
    if ((self2.events[index2][1].type === "labelImage" || self2.events[index2][1].type === "labelLink") && !self2.events[index2][1]._balanced) {
      labelStart = self2.events[index2][1];
      break;
    }
  return start;
  function start(code3) {
    return labelStart ? labelStart._inactive ? balanced(code3) : (defined = self2.parser.defined.includes(
      normalizeIdentifier(
        self2.sliceSerialize({
          start: labelStart.end,
          end: self2.now()
        })
      )
    ), effects.enter("labelEnd"), effects.enter("labelMarker"), effects.consume(code3), effects.exit("labelMarker"), effects.exit("labelEnd"), afterLabelEnd) : nok(code3);
  }
  function afterLabelEnd(code3) {
    return code3 === 40 ? effects.attempt(
      resourceConstruct,
      ok2,
      defined ? ok2 : balanced
    )(code3) : code3 === 91 ? effects.attempt(
      fullReferenceConstruct,
      ok2,
      defined ? effects.attempt(collapsedReferenceConstruct, ok2, balanced) : balanced
    )(code3) : defined ? ok2(code3) : balanced(code3);
  }
  function balanced(code3) {
    return labelStart._balanced = !0, nok(code3);
  }
}
function tokenizeResource(effects, ok2, nok) {
  return start;
  function start(code3) {
    return effects.enter("resource"), effects.enter("resourceMarker"), effects.consume(code3), effects.exit("resourceMarker"), factoryWhitespace(effects, open);
  }
  function open(code3) {
    return code3 === 41 ? end(code3) : factoryDestination(
      effects,
      destinationAfter,
      nok,
      "resourceDestination",
      "resourceDestinationLiteral",
      "resourceDestinationLiteralMarker",
      "resourceDestinationRaw",
      "resourceDestinationString",
      32
    )(code3);
  }
  function destinationAfter(code3) {
    return markdownLineEndingOrSpace(code3) ? factoryWhitespace(effects, between2)(code3) : end(code3);
  }
  function between2(code3) {
    return code3 === 34 || code3 === 39 || code3 === 40 ? factoryTitle(
      effects,
      factoryWhitespace(effects, end),
      nok,
      "resourceTitle",
      "resourceTitleMarker",
      "resourceTitleString"
    )(code3) : end(code3);
  }
  function end(code3) {
    return code3 === 41 ? (effects.enter("resourceMarker"), effects.consume(code3), effects.exit("resourceMarker"), effects.exit("resource"), ok2) : nok(code3);
  }
}
function tokenizeFullReference(effects, ok2, nok) {
  let self2 = this;
  return start;
  function start(code3) {
    return factoryLabel.call(
      self2,
      effects,
      afterLabel,
      nok,
      "reference",
      "referenceMarker",
      "referenceString"
    )(code3);
  }
  function afterLabel(code3) {
    return self2.parser.defined.includes(
      normalizeIdentifier(
        self2.sliceSerialize(self2.events[self2.events.length - 1][1]).slice(1, -1)
      )
    ) ? ok2(code3) : nok(code3);
  }
}
function tokenizeCollapsedReference(effects, ok2, nok) {
  return start;
  function start(code3) {
    return effects.enter("reference"), effects.enter("referenceMarker"), effects.consume(code3), effects.exit("referenceMarker"), open;
  }
  function open(code3) {
    return code3 === 93 ? (effects.enter("referenceMarker"), effects.consume(code3), effects.exit("referenceMarker"), effects.exit("reference"), ok2) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/label-start-image.js
var labelStartImage = {
  name: "labelStartImage",
  tokenize: tokenizeLabelStartImage,
  resolveAll: labelEnd.resolveAll
};
function tokenizeLabelStartImage(effects, ok2, nok) {
  let self2 = this;
  return start;
  function start(code3) {
    return effects.enter("labelImage"), effects.enter("labelImageMarker"), effects.consume(code3), effects.exit("labelImageMarker"), open;
  }
  function open(code3) {
    return code3 === 91 ? (effects.enter("labelMarker"), effects.consume(code3), effects.exit("labelMarker"), effects.exit("labelImage"), after) : nok(code3);
  }
  function after(code3) {
    return code3 === 94 && "_hiddenFootnoteSupport" in self2.parser.constructs ? nok(code3) : ok2(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/label-start-link.js
var labelStartLink = {
  name: "labelStartLink",
  tokenize: tokenizeLabelStartLink,
  resolveAll: labelEnd.resolveAll
};
function tokenizeLabelStartLink(effects, ok2, nok) {
  let self2 = this;
  return start;
  function start(code3) {
    return effects.enter("labelLink"), effects.enter("labelMarker"), effects.consume(code3), effects.exit("labelMarker"), effects.exit("labelLink"), after;
  }
  function after(code3) {
    return code3 === 94 && "_hiddenFootnoteSupport" in self2.parser.constructs ? nok(code3) : ok2(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/line-ending.js
var lineEnding = {
  name: "lineEnding",
  tokenize: tokenizeLineEnding
};
function tokenizeLineEnding(effects, ok2) {
  return start;
  function start(code3) {
    return effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), factorySpace(effects, ok2, "linePrefix");
  }
}

// node_modules/micromark-core-commonmark/lib/thematic-break.js
var thematicBreak = {
  name: "thematicBreak",
  tokenize: tokenizeThematicBreak
};
function tokenizeThematicBreak(effects, ok2, nok) {
  let size = 0, marker;
  return start;
  function start(code3) {
    return effects.enter("thematicBreak"), marker = code3, atBreak(code3);
  }
  function atBreak(code3) {
    return code3 === marker ? (effects.enter("thematicBreakSequence"), sequence(code3)) : markdownSpace(code3) ? factorySpace(effects, atBreak, "whitespace")(code3) : size < 3 || code3 !== null && !markdownLineEnding(code3) ? nok(code3) : (effects.exit("thematicBreak"), ok2(code3));
  }
  function sequence(code3) {
    return code3 === marker ? (effects.consume(code3), size++, sequence) : (effects.exit("thematicBreakSequence"), atBreak(code3));
  }
}

// node_modules/micromark-core-commonmark/lib/list.js
var list = {
  name: "list",
  tokenize: tokenizeListStart,
  continuation: {
    tokenize: tokenizeListContinuation
  },
  exit: tokenizeListEnd
}, listItemPrefixWhitespaceConstruct = {
  tokenize: tokenizeListItemPrefixWhitespace,
  partial: !0
}, indentConstruct = {
  tokenize: tokenizeIndent,
  partial: !0
};
function tokenizeListStart(effects, ok2, nok) {
  let self2 = this, tail = self2.events[self2.events.length - 1], initialSize = tail && tail[1].type === "linePrefix" ? tail[2].sliceSerialize(tail[1], !0).length : 0, size = 0;
  return start;
  function start(code3) {
    let kind = self2.containerState.type || (code3 === 42 || code3 === 43 || code3 === 45 ? "listUnordered" : "listOrdered");
    if (kind === "listUnordered" ? !self2.containerState.marker || code3 === self2.containerState.marker : asciiDigit(code3)) {
      if (self2.containerState.type || (self2.containerState.type = kind, effects.enter(kind, {
        _container: !0
      })), kind === "listUnordered")
        return effects.enter("listItemPrefix"), code3 === 42 || code3 === 45 ? effects.check(thematicBreak, nok, atMarker)(code3) : atMarker(code3);
      if (!self2.interrupt || code3 === 49)
        return effects.enter("listItemPrefix"), effects.enter("listItemValue"), inside(code3);
    }
    return nok(code3);
  }
  function inside(code3) {
    return asciiDigit(code3) && ++size < 10 ? (effects.consume(code3), inside) : (!self2.interrupt || size < 2) && (self2.containerState.marker ? code3 === self2.containerState.marker : code3 === 41 || code3 === 46) ? (effects.exit("listItemValue"), atMarker(code3)) : nok(code3);
  }
  function atMarker(code3) {
    return effects.enter("listItemMarker"), effects.consume(code3), effects.exit("listItemMarker"), self2.containerState.marker = self2.containerState.marker || code3, effects.check(
      blankLine,
      self2.interrupt ? nok : onBlank,
      effects.attempt(
        listItemPrefixWhitespaceConstruct,
        endOfPrefix,
        otherPrefix
      )
    );
  }
  function onBlank(code3) {
    return self2.containerState.initialBlankLine = !0, initialSize++, endOfPrefix(code3);
  }
  function otherPrefix(code3) {
    return markdownSpace(code3) ? (effects.enter("listItemPrefixWhitespace"), effects.consume(code3), effects.exit("listItemPrefixWhitespace"), endOfPrefix) : nok(code3);
  }
  function endOfPrefix(code3) {
    return self2.containerState.size = initialSize + self2.sliceSerialize(effects.exit("listItemPrefix"), !0).length, ok2(code3);
  }
}
function tokenizeListContinuation(effects, ok2, nok) {
  let self2 = this;
  return self2.containerState._closeFlow = void 0, effects.check(blankLine, onBlank, notBlank);
  function onBlank(code3) {
    return self2.containerState.furtherBlankLines = self2.containerState.furtherBlankLines || self2.containerState.initialBlankLine, factorySpace(
      effects,
      ok2,
      "listItemIndent",
      self2.containerState.size + 1
    )(code3);
  }
  function notBlank(code3) {
    return self2.containerState.furtherBlankLines || !markdownSpace(code3) ? (self2.containerState.furtherBlankLines = void 0, self2.containerState.initialBlankLine = void 0, notInCurrentItem(code3)) : (self2.containerState.furtherBlankLines = void 0, self2.containerState.initialBlankLine = void 0, effects.attempt(indentConstruct, ok2, notInCurrentItem)(code3));
  }
  function notInCurrentItem(code3) {
    return self2.containerState._closeFlow = !0, self2.interrupt = void 0, factorySpace(
      effects,
      effects.attempt(list, ok2, nok),
      "linePrefix",
      self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(code3);
  }
}
function tokenizeIndent(effects, ok2, nok) {
  let self2 = this;
  return factorySpace(
    effects,
    afterPrefix,
    "listItemIndent",
    self2.containerState.size + 1
  );
  function afterPrefix(code3) {
    let tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === "listItemIndent" && tail[2].sliceSerialize(tail[1], !0).length === self2.containerState.size ? ok2(code3) : nok(code3);
  }
}
function tokenizeListEnd(effects) {
  effects.exit(this.containerState.type);
}
function tokenizeListItemPrefixWhitespace(effects, ok2, nok) {
  let self2 = this;
  return factorySpace(
    effects,
    afterPrefix,
    "listItemPrefixWhitespace",
    self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4 + 1
  );
  function afterPrefix(code3) {
    let tail = self2.events[self2.events.length - 1];
    return !markdownSpace(code3) && tail && tail[1].type === "listItemPrefixWhitespace" ? ok2(code3) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/lib/setext-underline.js
var setextUnderline = {
  name: "setextUnderline",
  tokenize: tokenizeSetextUnderline,
  resolveTo: resolveToSetextUnderline
};
function resolveToSetextUnderline(events, context) {
  let index2 = events.length, content3, text7, definition2;
  for (; index2--; )
    if (events[index2][0] === "enter") {
      if (events[index2][1].type === "content") {
        content3 = index2;
        break;
      }
      events[index2][1].type === "paragraph" && (text7 = index2);
    } else
      events[index2][1].type === "content" && events.splice(index2, 1), !definition2 && events[index2][1].type === "definition" && (definition2 = index2);
  let heading2 = {
    type: "setextHeading",
    start: Object.assign({}, events[text7][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  };
  return events[text7][1].type = "setextHeadingText", definition2 ? (events.splice(text7, 0, ["enter", heading2, context]), events.splice(definition2 + 1, 0, ["exit", events[content3][1], context]), events[content3][1].end = Object.assign({}, events[definition2][1].end)) : events[content3][1] = heading2, events.push(["exit", heading2, context]), events;
}
function tokenizeSetextUnderline(effects, ok2, nok) {
  let self2 = this, index2 = self2.events.length, marker, paragraph2;
  for (; index2--; )
    if (self2.events[index2][1].type !== "lineEnding" && self2.events[index2][1].type !== "linePrefix" && self2.events[index2][1].type !== "content") {
      paragraph2 = self2.events[index2][1].type === "paragraph";
      break;
    }
  return start;
  function start(code3) {
    return !self2.parser.lazy[self2.now().line] && (self2.interrupt || paragraph2) ? (effects.enter("setextHeadingLine"), effects.enter("setextHeadingLineSequence"), marker = code3, closingSequence(code3)) : nok(code3);
  }
  function closingSequence(code3) {
    return code3 === marker ? (effects.consume(code3), closingSequence) : (effects.exit("setextHeadingLineSequence"), factorySpace(effects, closingSequenceEnd, "lineSuffix")(code3));
  }
  function closingSequenceEnd(code3) {
    return code3 === null || markdownLineEnding(code3) ? (effects.exit("setextHeadingLine"), ok2(code3)) : nok(code3);
  }
}

// node_modules/micromark-extension-gfm-footnote/lib/syntax.js
var indent = {
  tokenize: tokenizeIndent2,
  partial: !0
};
function gfmFootnote() {
  return {
    document: {
      [91]: {
        tokenize: tokenizeDefinitionStart,
        continuation: {
          tokenize: tokenizeDefinitionContinuation
        },
        exit: gfmFootnoteDefinitionEnd
      }
    },
    text: {
      [91]: {
        tokenize: tokenizeGfmFootnoteCall
      },
      [93]: {
        add: "after",
        tokenize: tokenizePotentialGfmFootnoteCall,
        resolveTo: resolveToPotentialGfmFootnoteCall
      }
    }
  };
}
function tokenizePotentialGfmFootnoteCall(effects, ok2, nok) {
  let self2 = this, index2 = self2.events.length, defined = self2.parser.gfmFootnotes || (self2.parser.gfmFootnotes = []), labelStart;
  for (; index2--; ) {
    let token = self2.events[index2][1];
    if (token.type === "labelImage") {
      labelStart = token;
      break;
    }
    if (token.type === "gfmFootnoteCall" || token.type === "labelLink" || token.type === "label" || token.type === "image" || token.type === "link")
      break;
  }
  return start;
  function start(code3) {
    if (!labelStart || !labelStart._balanced)
      return nok(code3);
    let id = normalizeIdentifier(
      self2.sliceSerialize({
        start: labelStart.end,
        end: self2.now()
      })
    );
    return id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1)) ? nok(code3) : (effects.enter("gfmFootnoteCallLabelMarker"), effects.consume(code3), effects.exit("gfmFootnoteCallLabelMarker"), ok2(code3));
  }
}
function resolveToPotentialGfmFootnoteCall(events, context) {
  let index2 = events.length, labelStart;
  for (; index2--; )
    if (events[index2][1].type === "labelImage" && events[index2][0] === "enter") {
      labelStart = events[index2][1];
      break;
    }
  events[index2 + 1][1].type = "data", events[index2 + 3][1].type = "gfmFootnoteCallLabelMarker";
  let call = {
    type: "gfmFootnoteCall",
    start: Object.assign({}, events[index2 + 3][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  }, marker = {
    type: "gfmFootnoteCallMarker",
    start: Object.assign({}, events[index2 + 3][1].end),
    end: Object.assign({}, events[index2 + 3][1].end)
  };
  marker.end.column++, marker.end.offset++, marker.end._bufferIndex++;
  let string3 = {
    type: "gfmFootnoteCallString",
    start: Object.assign({}, marker.end),
    end: Object.assign({}, events[events.length - 1][1].start)
  }, chunk = {
    type: "chunkString",
    contentType: "string",
    start: Object.assign({}, string3.start),
    end: Object.assign({}, string3.end)
  }, replacement = [
    events[index2 + 1],
    events[index2 + 2],
    ["enter", call, context],
    events[index2 + 3],
    events[index2 + 4],
    ["enter", marker, context],
    ["exit", marker, context],
    ["enter", string3, context],
    ["enter", chunk, context],
    ["exit", chunk, context],
    ["exit", string3, context],
    events[events.length - 2],
    events[events.length - 1],
    ["exit", call, context]
  ];
  return events.splice(index2, events.length - index2 + 1, ...replacement), events;
}
function tokenizeGfmFootnoteCall(effects, ok2, nok) {
  let self2 = this, defined = self2.parser.gfmFootnotes || (self2.parser.gfmFootnotes = []), size = 0, data;
  return start;
  function start(code3) {
    return effects.enter("gfmFootnoteCall"), effects.enter("gfmFootnoteCallLabelMarker"), effects.consume(code3), effects.exit("gfmFootnoteCallLabelMarker"), callStart;
  }
  function callStart(code3) {
    return code3 !== 94 ? nok(code3) : (effects.enter("gfmFootnoteCallMarker"), effects.consume(code3), effects.exit("gfmFootnoteCallMarker"), effects.enter("gfmFootnoteCallString"), effects.enter("chunkString").contentType = "string", callData);
  }
  function callData(code3) {
    let token;
    return code3 === null || code3 === 91 || size++ > 999 ? nok(code3) : code3 === 93 ? data ? (effects.exit("chunkString"), token = effects.exit("gfmFootnoteCallString"), defined.includes(normalizeIdentifier(self2.sliceSerialize(token))) ? end(code3) : nok(code3)) : nok(code3) : (effects.consume(code3), markdownLineEndingOrSpace(code3) || (data = !0), code3 === 92 ? callEscape : callData);
  }
  function callEscape(code3) {
    return code3 === 91 || code3 === 92 || code3 === 93 ? (effects.consume(code3), size++, callData) : callData(code3);
  }
  function end(code3) {
    return effects.enter("gfmFootnoteCallLabelMarker"), effects.consume(code3), effects.exit("gfmFootnoteCallLabelMarker"), effects.exit("gfmFootnoteCall"), ok2;
  }
}
function tokenizeDefinitionStart(effects, ok2, nok) {
  let self2 = this, defined = self2.parser.gfmFootnotes || (self2.parser.gfmFootnotes = []), identifier, size = 0, data;
  return start;
  function start(code3) {
    return effects.enter("gfmFootnoteDefinition")._container = !0, effects.enter("gfmFootnoteDefinitionLabel"), effects.enter("gfmFootnoteDefinitionLabelMarker"), effects.consume(code3), effects.exit("gfmFootnoteDefinitionLabelMarker"), labelStart;
  }
  function labelStart(code3) {
    return code3 === 94 ? (effects.enter("gfmFootnoteDefinitionMarker"), effects.consume(code3), effects.exit("gfmFootnoteDefinitionMarker"), effects.enter("gfmFootnoteDefinitionLabelString"), atBreak) : nok(code3);
  }
  function atBreak(code3) {
    let token;
    return code3 === null || code3 === 91 || size > 999 ? nok(code3) : code3 === 93 ? data ? (token = effects.exit("gfmFootnoteDefinitionLabelString"), identifier = normalizeIdentifier(self2.sliceSerialize(token)), effects.enter("gfmFootnoteDefinitionLabelMarker"), effects.consume(code3), effects.exit("gfmFootnoteDefinitionLabelMarker"), effects.exit("gfmFootnoteDefinitionLabel"), labelAfter) : nok(code3) : markdownLineEnding(code3) ? (effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), size++, atBreak) : (effects.enter("chunkString").contentType = "string", label(code3));
  }
  function label(code3) {
    return code3 === null || markdownLineEnding(code3) || code3 === 91 || code3 === 93 || size > 999 ? (effects.exit("chunkString"), atBreak(code3)) : (markdownLineEndingOrSpace(code3) || (data = !0), size++, effects.consume(code3), code3 === 92 ? labelEscape : label);
  }
  function labelEscape(code3) {
    return code3 === 91 || code3 === 92 || code3 === 93 ? (effects.consume(code3), size++, label) : label(code3);
  }
  function labelAfter(code3) {
    return code3 === 58 ? (effects.enter("definitionMarker"), effects.consume(code3), effects.exit("definitionMarker"), factorySpace(effects, done, "gfmFootnoteDefinitionWhitespace")) : nok(code3);
  }
  function done(code3) {
    return defined.includes(identifier) || defined.push(identifier), ok2(code3);
  }
}
function tokenizeDefinitionContinuation(effects, ok2, nok) {
  return effects.check(blankLine, ok2, effects.attempt(indent, ok2, nok));
}
function gfmFootnoteDefinitionEnd(effects) {
  effects.exit("gfmFootnoteDefinition");
}
function tokenizeIndent2(effects, ok2, nok) {
  let self2 = this;
  return factorySpace(
    effects,
    afterPrefix,
    "gfmFootnoteDefinitionIndent",
    4 + 1
  );
  function afterPrefix(code3) {
    let tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === "gfmFootnoteDefinitionIndent" && tail[2].sliceSerialize(tail[1], !0).length === 4 ? ok2(code3) : nok(code3);
  }
}

// node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js
function gfmStrikethrough(options2 = {}) {
  let single = options2.singleTilde, tokenizer = {
    tokenize: tokenizeStrikethrough,
    resolveAll: resolveAllStrikethrough
  };
  return single == null && (single = !0), {
    text: {
      [126]: tokenizer
    },
    insideSpan: {
      null: [tokenizer]
    },
    attentionMarkers: {
      null: [126]
    }
  };
  function resolveAllStrikethrough(events, context) {
    let index2 = -1;
    for (; ++index2 < events.length; )
      if (events[index2][0] === "enter" && events[index2][1].type === "strikethroughSequenceTemporary" && events[index2][1]._close) {
        let open = index2;
        for (; open--; )
          if (events[open][0] === "exit" && events[open][1].type === "strikethroughSequenceTemporary" && events[open][1]._open && events[index2][1].end.offset - events[index2][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {
            events[index2][1].type = "strikethroughSequence", events[open][1].type = "strikethroughSequence";
            let strikethrough2 = {
              type: "strikethrough",
              start: Object.assign({}, events[open][1].start),
              end: Object.assign({}, events[index2][1].end)
            }, text7 = {
              type: "strikethroughText",
              start: Object.assign({}, events[open][1].end),
              end: Object.assign({}, events[index2][1].start)
            }, nextEvents = [
              ["enter", strikethrough2, context],
              ["enter", events[open][1], context],
              ["exit", events[open][1], context],
              ["enter", text7, context]
            ];
            splice(
              nextEvents,
              nextEvents.length,
              0,
              resolveAll(
                context.parser.constructs.insideSpan.null,
                events.slice(open + 1, index2),
                context
              )
            ), splice(nextEvents, nextEvents.length, 0, [
              ["exit", text7, context],
              ["enter", events[index2][1], context],
              ["exit", events[index2][1], context],
              ["exit", strikethrough2, context]
            ]), splice(events, open - 1, index2 - open + 3, nextEvents), index2 = open + nextEvents.length - 2;
            break;
          }
      }
    for (index2 = -1; ++index2 < events.length; )
      events[index2][1].type === "strikethroughSequenceTemporary" && (events[index2][1].type = "data");
    return events;
  }
  function tokenizeStrikethrough(effects, ok2, nok) {
    let previous3 = this.previous, events = this.events, size = 0;
    return start;
    function start(code3) {
      return previous3 === 126 && events[events.length - 1][1].type !== "characterEscape" ? nok(code3) : (effects.enter("strikethroughSequenceTemporary"), more(code3));
    }
    function more(code3) {
      let before = classifyCharacter(previous3);
      if (code3 === 126)
        return size > 1 ? nok(code3) : (effects.consume(code3), size++, more);
      if (size < 2 && !single)
        return nok(code3);
      let token = effects.exit("strikethroughSequenceTemporary"), after = classifyCharacter(code3);
      return token._open = !after || after === 2 && Boolean(before), token._close = !before || before === 2 && Boolean(after), ok2(code3);
    }
  }
}

// node_modules/micromark-extension-gfm-table/lib/syntax.js
var gfmTable = {
  flow: {
    null: {
      tokenize: tokenizeTable,
      resolve: resolveTable
    }
  }
}, nextPrefixedOrBlank = {
  tokenize: tokenizeNextPrefixedOrBlank,
  partial: !0
};
function resolveTable(events, context) {
  let index2 = -1, inHead, inDelimiterRow, inRow, contentStart, contentEnd, cellStart, seenCellInRow;
  for (; ++index2 < events.length; ) {
    let token = events[index2][1];
    if (inRow && (token.type === "temporaryTableCellContent" && (contentStart = contentStart || index2, contentEnd = index2), (token.type === "tableCellDivider" || token.type === "tableRow") && contentEnd)) {
      let content3 = {
        type: "tableContent",
        start: events[contentStart][1].start,
        end: events[contentEnd][1].end
      }, text7 = {
        type: "chunkText",
        start: content3.start,
        end: content3.end,
        contentType: "text"
      };
      events.splice(
        contentStart,
        contentEnd - contentStart + 1,
        ["enter", content3, context],
        ["enter", text7, context],
        ["exit", text7, context],
        ["exit", content3, context]
      ), index2 -= contentEnd - contentStart - 3, contentStart = void 0, contentEnd = void 0;
    }
    if (events[index2][0] === "exit" && cellStart !== void 0 && cellStart + (seenCellInRow ? 0 : 1) < index2 && (token.type === "tableCellDivider" || token.type === "tableRow" && (cellStart + 3 < index2 || events[cellStart][1].type !== "whitespace"))) {
      let cell = {
        type: inDelimiterRow ? "tableDelimiter" : inHead ? "tableHeader" : "tableData",
        start: events[cellStart][1].start,
        end: events[index2][1].end
      };
      events.splice(index2 + (token.type === "tableCellDivider" ? 1 : 0), 0, [
        "exit",
        cell,
        context
      ]), events.splice(cellStart, 0, ["enter", cell, context]), index2 += 2, cellStart = index2 + 1, seenCellInRow = !0;
    }
    token.type === "tableRow" && (inRow = events[index2][0] === "enter", inRow && (cellStart = index2 + 1, seenCellInRow = !1)), token.type === "tableDelimiterRow" && (inDelimiterRow = events[index2][0] === "enter", inDelimiterRow && (cellStart = index2 + 1, seenCellInRow = !1)), token.type === "tableHead" && (inHead = events[index2][0] === "enter");
  }
  return events;
}
function tokenizeTable(effects, ok2, nok) {
  let self2 = this, align = [], tableHeaderCount = 0, seenDelimiter, hasDash;
  return start;
  function start(code3) {
    return effects.enter("table")._align = align, effects.enter("tableHead"), effects.enter("tableRow"), code3 === 124 ? cellDividerHead(code3) : (tableHeaderCount++, effects.enter("temporaryTableCellContent"), inCellContentHead(code3));
  }
  function cellDividerHead(code3) {
    return effects.enter("tableCellDivider"), effects.consume(code3), effects.exit("tableCellDivider"), seenDelimiter = !0, cellBreakHead;
  }
  function cellBreakHead(code3) {
    return code3 === null || markdownLineEnding(code3) ? atRowEndHead(code3) : markdownSpace(code3) ? (effects.enter("whitespace"), effects.consume(code3), inWhitespaceHead) : (seenDelimiter && (seenDelimiter = void 0, tableHeaderCount++), code3 === 124 ? cellDividerHead(code3) : (effects.enter("temporaryTableCellContent"), inCellContentHead(code3)));
  }
  function inWhitespaceHead(code3) {
    return markdownSpace(code3) ? (effects.consume(code3), inWhitespaceHead) : (effects.exit("whitespace"), cellBreakHead(code3));
  }
  function inCellContentHead(code3) {
    return code3 === null || code3 === 124 || markdownLineEndingOrSpace(code3) ? (effects.exit("temporaryTableCellContent"), cellBreakHead(code3)) : (effects.consume(code3), code3 === 92 ? inCellContentEscapeHead : inCellContentHead);
  }
  function inCellContentEscapeHead(code3) {
    return code3 === 92 || code3 === 124 ? (effects.consume(code3), inCellContentHead) : inCellContentHead(code3);
  }
  function atRowEndHead(code3) {
    if (code3 === null)
      return nok(code3);
    effects.exit("tableRow"), effects.exit("tableHead");
    let originalInterrupt = self2.interrupt;
    return self2.interrupt = !0, effects.attempt(
      {
        tokenize: tokenizeRowEnd,
        partial: !0
      },
      function(code4) {
        return self2.interrupt = originalInterrupt, effects.enter("tableDelimiterRow"), atDelimiterRowBreak(code4);
      },
      function(code4) {
        return self2.interrupt = originalInterrupt, nok(code4);
      }
    )(code3);
  }
  function atDelimiterRowBreak(code3) {
    return code3 === null || markdownLineEnding(code3) ? rowEndDelimiter(code3) : markdownSpace(code3) ? (effects.enter("whitespace"), effects.consume(code3), inWhitespaceDelimiter) : code3 === 45 ? (effects.enter("tableDelimiterFiller"), effects.consume(code3), hasDash = !0, align.push("none"), inFillerDelimiter) : code3 === 58 ? (effects.enter("tableDelimiterAlignment"), effects.consume(code3), effects.exit("tableDelimiterAlignment"), align.push("left"), afterLeftAlignment) : code3 === 124 ? (effects.enter("tableCellDivider"), effects.consume(code3), effects.exit("tableCellDivider"), atDelimiterRowBreak) : nok(code3);
  }
  function inWhitespaceDelimiter(code3) {
    return markdownSpace(code3) ? (effects.consume(code3), inWhitespaceDelimiter) : (effects.exit("whitespace"), atDelimiterRowBreak(code3));
  }
  function inFillerDelimiter(code3) {
    return code3 === 45 ? (effects.consume(code3), inFillerDelimiter) : (effects.exit("tableDelimiterFiller"), code3 === 58 ? (effects.enter("tableDelimiterAlignment"), effects.consume(code3), effects.exit("tableDelimiterAlignment"), align[align.length - 1] = align[align.length - 1] === "left" ? "center" : "right", afterRightAlignment) : atDelimiterRowBreak(code3));
  }
  function afterLeftAlignment(code3) {
    return code3 === 45 ? (effects.enter("tableDelimiterFiller"), effects.consume(code3), hasDash = !0, inFillerDelimiter) : nok(code3);
  }
  function afterRightAlignment(code3) {
    return code3 === null || markdownLineEnding(code3) ? rowEndDelimiter(code3) : markdownSpace(code3) ? (effects.enter("whitespace"), effects.consume(code3), inWhitespaceDelimiter) : code3 === 124 ? (effects.enter("tableCellDivider"), effects.consume(code3), effects.exit("tableCellDivider"), atDelimiterRowBreak) : nok(code3);
  }
  function rowEndDelimiter(code3) {
    return effects.exit("tableDelimiterRow"), !hasDash || tableHeaderCount !== align.length ? nok(code3) : code3 === null ? tableClose(code3) : effects.check(
      nextPrefixedOrBlank,
      tableClose,
      effects.attempt(
        {
          tokenize: tokenizeRowEnd,
          partial: !0
        },
        factorySpace(effects, bodyStart, "linePrefix", 4),
        tableClose
      )
    )(code3);
  }
  function tableClose(code3) {
    return effects.exit("table"), ok2(code3);
  }
  function bodyStart(code3) {
    return effects.enter("tableBody"), rowStartBody(code3);
  }
  function rowStartBody(code3) {
    return effects.enter("tableRow"), code3 === 124 ? cellDividerBody(code3) : (effects.enter("temporaryTableCellContent"), inCellContentBody(code3));
  }
  function cellDividerBody(code3) {
    return effects.enter("tableCellDivider"), effects.consume(code3), effects.exit("tableCellDivider"), cellBreakBody;
  }
  function cellBreakBody(code3) {
    return code3 === null || markdownLineEnding(code3) ? atRowEndBody(code3) : markdownSpace(code3) ? (effects.enter("whitespace"), effects.consume(code3), inWhitespaceBody) : code3 === 124 ? cellDividerBody(code3) : (effects.enter("temporaryTableCellContent"), inCellContentBody(code3));
  }
  function inWhitespaceBody(code3) {
    return markdownSpace(code3) ? (effects.consume(code3), inWhitespaceBody) : (effects.exit("whitespace"), cellBreakBody(code3));
  }
  function inCellContentBody(code3) {
    return code3 === null || code3 === 124 || markdownLineEndingOrSpace(code3) ? (effects.exit("temporaryTableCellContent"), cellBreakBody(code3)) : (effects.consume(code3), code3 === 92 ? inCellContentEscapeBody : inCellContentBody);
  }
  function inCellContentEscapeBody(code3) {
    return code3 === 92 || code3 === 124 ? (effects.consume(code3), inCellContentBody) : inCellContentBody(code3);
  }
  function atRowEndBody(code3) {
    return effects.exit("tableRow"), code3 === null ? tableBodyClose(code3) : effects.check(
      nextPrefixedOrBlank,
      tableBodyClose,
      effects.attempt(
        {
          tokenize: tokenizeRowEnd,
          partial: !0
        },
        factorySpace(effects, rowStartBody, "linePrefix", 4),
        tableBodyClose
      )
    )(code3);
  }
  function tableBodyClose(code3) {
    return effects.exit("tableBody"), tableClose(code3);
  }
  function tokenizeRowEnd(effects2, ok3, nok2) {
    return start2;
    function start2(code3) {
      return effects2.enter("lineEnding"), effects2.consume(code3), effects2.exit("lineEnding"), factorySpace(effects2, prefixed, "linePrefix");
    }
    function prefixed(code3) {
      if (self2.parser.lazy[self2.now().line] || code3 === null || markdownLineEnding(code3))
        return nok2(code3);
      let tail = self2.events[self2.events.length - 1];
      return !self2.parser.constructs.disable.null.includes("codeIndented") && tail && tail[1].type === "linePrefix" && tail[2].sliceSerialize(tail[1], !0).length >= 4 ? nok2(code3) : (self2._gfmTableDynamicInterruptHack = !0, effects2.check(
        self2.parser.constructs.flow,
        function(code4) {
          return self2._gfmTableDynamicInterruptHack = !1, nok2(code4);
        },
        function(code4) {
          return self2._gfmTableDynamicInterruptHack = !1, ok3(code4);
        }
      )(code3));
    }
  }
}
function tokenizeNextPrefixedOrBlank(effects, ok2, nok) {
  let size = 0;
  return start;
  function start(code3) {
    return effects.enter("check"), effects.consume(code3), whitespace2;
  }
  function whitespace2(code3) {
    return code3 === -1 || code3 === 32 ? (effects.consume(code3), size++, size === 4 ? ok2 : whitespace2) : code3 === null || markdownLineEndingOrSpace(code3) ? ok2(code3) : nok(code3);
  }
}

// node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js
var tasklistCheck = {
  tokenize: tokenizeTasklistCheck
}, gfmTaskListItem = {
  text: {
    [91]: tasklistCheck
  }
};
function tokenizeTasklistCheck(effects, ok2, nok) {
  let self2 = this;
  return open;
  function open(code3) {
    return self2.previous !== null || !self2._gfmTasklistFirstContentOfListItem ? nok(code3) : (effects.enter("taskListCheck"), effects.enter("taskListCheckMarker"), effects.consume(code3), effects.exit("taskListCheckMarker"), inside);
  }
  function inside(code3) {
    return markdownLineEndingOrSpace(code3) ? (effects.enter("taskListCheckValueUnchecked"), effects.consume(code3), effects.exit("taskListCheckValueUnchecked"), close) : code3 === 88 || code3 === 120 ? (effects.enter("taskListCheckValueChecked"), effects.consume(code3), effects.exit("taskListCheckValueChecked"), close) : nok(code3);
  }
  function close(code3) {
    return code3 === 93 ? (effects.enter("taskListCheckMarker"), effects.consume(code3), effects.exit("taskListCheckMarker"), effects.exit("taskListCheck"), effects.check(
      {
        tokenize: spaceThenNonSpace
      },
      ok2,
      nok
    )) : nok(code3);
  }
}
function spaceThenNonSpace(effects, ok2, nok) {
  let self2 = this;
  return factorySpace(effects, after, "whitespace");
  function after(code3) {
    let tail = self2.events[self2.events.length - 1];
    return (tail && tail[1].type === "whitespace" || markdownLineEnding(code3)) && code3 !== null ? ok2(code3) : nok(code3);
  }
}

// node_modules/micromark-extension-gfm/index.js
function gfm(options2) {
  return combineExtensions([
    gfmAutolinkLiteral,
    gfmFootnote(),
    gfmStrikethrough(options2),
    gfmTable,
    gfmTaskListItem
  ]);
}

// node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js
function escapeStringRegexp(string3) {
  if (typeof string3 != "string")
    throw new TypeError("Expected a string");
  return string3.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}

// node_modules/mdast-util-find-and-replace/lib/index.js
init_unist_util_visit_parents();
init_unist_util_is();
var own12 = {}.hasOwnProperty, findAndReplace = function(tree, find2, replace2, options2) {
  let settings, schema;
  typeof find2 == "string" || find2 instanceof RegExp ? (schema = [[find2, replace2]], settings = options2) : (schema = find2, settings = replace2), settings || (settings = {});
  let ignored = convert(settings.ignore || []), pairs = toPairs(schema), pairIndex = -1;
  for (; ++pairIndex < pairs.length; )
    visitParents(tree, "text", visitor);
  return tree;
  function visitor(node2, parents) {
    let index2 = -1, grandparent;
    for (; ++index2 < parents.length; ) {
      let parent = parents[index2];
      if (ignored(
        parent,
        grandparent ? grandparent.children.indexOf(parent) : void 0,
        grandparent
      ))
        return;
      grandparent = parent;
    }
    if (grandparent)
      return handler(node2, parents);
  }
  function handler(node2, parents) {
    let parent = parents[parents.length - 1], find3 = pairs[pairIndex][0], replace3 = pairs[pairIndex][1], start = 0, index2 = parent.children.indexOf(node2), change = !1, nodes = [];
    find3.lastIndex = 0;
    let match = find3.exec(node2.value);
    for (; match; ) {
      let position4 = match.index, matchObject = {
        index: match.index,
        input: match.input,
        stack: [...parents, node2]
      }, value = replace3(...match, matchObject);
      if (typeof value == "string" && (value = value.length > 0 ? { type: "text", value } : void 0), value !== !1 && (start !== position4 && nodes.push({
        type: "text",
        value: node2.value.slice(start, position4)
      }), Array.isArray(value) ? nodes.push(...value) : value && nodes.push(value), start = position4 + match[0].length, change = !0), !find3.global)
        break;
      match = find3.exec(node2.value);
    }
    return change ? (start < node2.value.length && nodes.push({ type: "text", value: node2.value.slice(start) }), parent.children.splice(index2, 1, ...nodes)) : nodes = [node2], index2 + nodes.length;
  }
};
function toPairs(schema) {
  let result = [];
  if (typeof schema != "object")
    throw new TypeError("Expected array or object as schema");
  if (Array.isArray(schema)) {
    let index2 = -1;
    for (; ++index2 < schema.length; )
      result.push([
        toExpression(schema[index2][0]),
        toFunction(schema[index2][1])
      ]);
  } else {
    let key2;
    for (key2 in schema)
      own12.call(schema, key2) && result.push([toExpression(key2), toFunction(schema[key2])]);
  }
  return result;
}
function toExpression(find2) {
  return typeof find2 == "string" ? new RegExp(escapeStringRegexp(find2), "g") : find2;
}
function toFunction(replace2) {
  return typeof replace2 == "function" ? replace2 : () => replace2;
}

// node_modules/mdast-util-gfm-autolink-literal/lib/index.js
var inConstruct = "phrasing", notInConstruct = ["autolink", "link", "image", "label"], gfmAutolinkLiteralFromMarkdown = {
  transforms: [transformGfmAutolinkLiterals],
  enter: {
    literalAutolink: enterLiteralAutolink,
    literalAutolinkEmail: enterLiteralAutolinkValue,
    literalAutolinkHttp: enterLiteralAutolinkValue,
    literalAutolinkWww: enterLiteralAutolinkValue
  },
  exit: {
    literalAutolink: exitLiteralAutolink,
    literalAutolinkEmail: exitLiteralAutolinkEmail,
    literalAutolinkHttp: exitLiteralAutolinkHttp,
    literalAutolinkWww: exitLiteralAutolinkWww
  }
}, gfmAutolinkLiteralToMarkdown = {
  unsafe: [
    {
      character: "@",
      before: "[+\\-.\\w]",
      after: "[\\-.\\w]",
      inConstruct,
      notInConstruct
    },
    {
      character: ".",
      before: "[Ww]",
      after: "[\\-.\\w]",
      inConstruct,
      notInConstruct
    },
    { character: ":", before: "[ps]", after: "\\/", inConstruct, notInConstruct }
  ]
};
function enterLiteralAutolink(token) {
  this.enter({ type: "link", title: null, url: "", children: [] }, token);
}
function enterLiteralAutolinkValue(token) {
  this.config.enter.autolinkProtocol.call(this, token);
}
function exitLiteralAutolinkHttp(token) {
  this.config.exit.autolinkProtocol.call(this, token);
}
function exitLiteralAutolinkWww(token) {
  this.config.exit.data.call(this, token);
  let node2 = this.stack[this.stack.length - 1];
  node2.url = "http://" + this.sliceSerialize(token);
}
function exitLiteralAutolinkEmail(token) {
  this.config.exit.autolinkEmail.call(this, token);
}
function exitLiteralAutolink(token) {
  this.exit(token);
}
function transformGfmAutolinkLiterals(tree) {
  findAndReplace(
    tree,
    [
      [/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi, findUrl],
      [/([-.\w+]+)@([-\w]+(?:\.[-\w]+)+)/g, findEmail]
    ],
    { ignore: ["link", "linkReference"] }
  );
}
function findUrl(_, protocol, domain2, path6, match) {
  let prefix = "";
  if (!previous2(match) || (/^w/i.test(protocol) && (domain2 = protocol + domain2, protocol = "", prefix = "http://"), !isCorrectDomain(domain2)))
    return !1;
  let parts = splitUrl(domain2 + path6);
  if (!parts[0])
    return !1;
  let result = {
    type: "link",
    title: null,
    url: prefix + protocol + parts[0],
    children: [{ type: "text", value: protocol + parts[0] }]
  };
  return parts[1] ? [result, { type: "text", value: parts[1] }] : result;
}
function findEmail(_, atext, label, match) {
  return !previous2(match, !0) || /[-\d_]$/.test(label) ? !1 : {
    type: "link",
    title: null,
    url: "mailto:" + atext + "@" + label,
    children: [{ type: "text", value: atext + "@" + label }]
  };
}
function isCorrectDomain(domain2) {
  let parts = domain2.split(".");
  return !(parts.length < 2 || parts[parts.length - 1] && (/_/.test(parts[parts.length - 1]) || !/[a-zA-Z\d]/.test(parts[parts.length - 1])) || parts[parts.length - 2] && (/_/.test(parts[parts.length - 2]) || !/[a-zA-Z\d]/.test(parts[parts.length - 2])));
}
function splitUrl(url) {
  let trailExec = /[!"&'),.:;<>?\]}]+$/.exec(url);
  if (!trailExec)
    return [url, void 0];
  url = url.slice(0, trailExec.index);
  let trail = trailExec[0], closingParenIndex = trail.indexOf(")"), openingParens = ccount(url, "("), closingParens = ccount(url, ")");
  for (; closingParenIndex !== -1 && openingParens > closingParens; )
    url += trail.slice(0, closingParenIndex + 1), trail = trail.slice(closingParenIndex + 1), closingParenIndex = trail.indexOf(")"), closingParens++;
  return [url, trail];
}
function previous2(match, email) {
  let code3 = match.input.charCodeAt(match.index - 1);
  return (match.index === 0 || unicodeWhitespace(code3) || unicodePunctuation(code3)) && (!email || code3 !== 47);
}

// node_modules/micromark-util-decode-numeric-character-reference/index.js
function decodeNumericCharacterReference(value, base3) {
  let code3 = Number.parseInt(value, base3);
  return code3 < 9 || code3 === 11 || code3 > 13 && code3 < 32 || code3 > 126 && code3 < 160 || code3 > 55295 && code3 < 57344 || code3 > 64975 && code3 < 65008 || (code3 & 65535) === 65535 || (code3 & 65535) === 65534 || code3 > 1114111 ? "\uFFFD" : String.fromCharCode(code3);
}

// node_modules/micromark-util-decode-string/index.js
var characterEscapeOrReference = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
function decodeString(value) {
  return value.replace(characterEscapeOrReference, decode);
}
function decode($0, $1, $2) {
  if ($1)
    return $1;
  if ($2.charCodeAt(0) === 35) {
    let head3 = $2.charCodeAt(1), hex = head3 === 120 || head3 === 88;
    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);
  }
  return decodeNamedCharacterReference($2) || $0;
}

// node_modules/mdast-util-to-markdown/lib/util/association.js
function association(node2) {
  return node2.label || !node2.identifier ? node2.label || "" : decodeString(node2.identifier);
}

// node_modules/mdast-util-to-markdown/lib/util/container-flow.js
function containerFlow(parent, state, info) {
  let indexStack = state.indexStack, children = parent.children || [], tracker = state.createTracker(info), results = [], index2 = -1;
  for (indexStack.push(-1); ++index2 < children.length; ) {
    let child = children[index2];
    indexStack[indexStack.length - 1] = index2, results.push(
      tracker.move(
        state.handle(child, parent, state, {
          before: `
`,
          after: `
`,
          ...tracker.current()
        })
      )
    ), child.type !== "list" && (state.bulletLastUsed = void 0), index2 < children.length - 1 && results.push(
      tracker.move(between(child, children[index2 + 1], parent, state))
    );
  }
  return indexStack.pop(), results.join("");
}
function between(left, right, parent, state) {
  let index2 = state.join.length;
  for (; index2--; ) {
    let result = state.join[index2](left, right, parent, state);
    if (result === !0 || result === 1)
      break;
    if (typeof result == "number")
      return `
`.repeat(1 + result);
    if (result === !1)
      return `

<!---->

`;
  }
  return `

`;
}

// node_modules/mdast-util-to-markdown/lib/util/indent-lines.js
var eol = /\r?\n|\r/g;
function indentLines(value, map2) {
  let result = [], start = 0, line = 0, match;
  for (; match = eol.exec(value); )
    one6(value.slice(start, match.index)), result.push(match[0]), start = match.index + match[0].length, line++;
  return one6(value.slice(start)), result.join("");
  function one6(value2) {
    result.push(map2(value2, line, !value2));
  }
}

// node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js
function patternCompile(pattern) {
  if (!pattern._compiled) {
    let before = (pattern.atBreak ? "[\\r\\n][\\t ]*" : "") + (pattern.before ? "(?:" + pattern.before + ")" : "");
    pattern._compiled = new RegExp(
      (before ? "(" + before + ")" : "") + (/[|\\{}()[\]^$+*?.-]/.test(pattern.character) ? "\\" : "") + pattern.character + (pattern.after ? "(?:" + pattern.after + ")" : ""),
      "g"
    );
  }
  return pattern._compiled;
}

// node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js
function patternInScope(stack, pattern) {
  return listInScope(stack, pattern.inConstruct, !0) && !listInScope(stack, pattern.notInConstruct, !1);
}
function listInScope(stack, list3, none) {
  if (typeof list3 == "string" && (list3 = [list3]), !list3 || list3.length === 0)
    return none;
  let index2 = -1;
  for (; ++index2 < list3.length; )
    if (stack.includes(list3[index2]))
      return !0;
  return !1;
}

// node_modules/mdast-util-to-markdown/lib/util/safe.js
function safe(state, input, config) {
  let value = (config.before || "") + (input || "") + (config.after || ""), positions = [], result = [], infos = {}, index2 = -1;
  for (; ++index2 < state.unsafe.length; ) {
    let pattern = state.unsafe[index2];
    if (!patternInScope(state.stack, pattern))
      continue;
    let expression = patternCompile(pattern), match;
    for (; match = expression.exec(value); ) {
      let before = "before" in pattern || Boolean(pattern.atBreak), after = "after" in pattern, position4 = match.index + (before ? match[1].length : 0);
      positions.includes(position4) ? (infos[position4].before && !before && (infos[position4].before = !1), infos[position4].after && !after && (infos[position4].after = !1)) : (positions.push(position4), infos[position4] = { before, after });
    }
  }
  positions.sort(numerical);
  let start = config.before ? config.before.length : 0, end = value.length - (config.after ? config.after.length : 0);
  for (index2 = -1; ++index2 < positions.length; ) {
    let position4 = positions[index2];
    position4 < start || position4 >= end || position4 + 1 < end && positions[index2 + 1] === position4 + 1 && infos[position4].after && !infos[position4 + 1].before && !infos[position4 + 1].after || positions[index2 - 1] === position4 - 1 && infos[position4].before && !infos[position4 - 1].before && !infos[position4 - 1].after || (start !== position4 && result.push(escapeBackslashes(value.slice(start, position4), "\\")), start = position4, /[!-/:-@[-`{-~]/.test(value.charAt(position4)) && (!config.encode || !config.encode.includes(value.charAt(position4))) ? result.push("\\") : (result.push(
      "&#x" + value.charCodeAt(position4).toString(16).toUpperCase() + ";"
    ), start++));
  }
  return result.push(escapeBackslashes(value.slice(start, end), config.after)), result.join("");
}
function numerical(a, b) {
  return a - b;
}
function escapeBackslashes(value, after) {
  let expression = /\\(?=[!-/:-@[-`{-~])/g, positions = [], results = [], whole = value + after, index2 = -1, start = 0, match;
  for (; match = expression.exec(whole); )
    positions.push(match.index);
  for (; ++index2 < positions.length; )
    start !== positions[index2] && results.push(value.slice(start, positions[index2])), results.push("\\"), start = positions[index2];
  return results.push(value.slice(start)), results.join("");
}

// node_modules/mdast-util-to-markdown/lib/util/track.js
function track(config) {
  let options2 = config || {}, now = options2.now || {}, lineShift = options2.lineShift || 0, line = now.line || 1, column = now.column || 1;
  return { move, current, shift };
  function current() {
    return { now: { line, column }, lineShift };
  }
  function shift(value) {
    lineShift += value;
  }
  function move(input) {
    let value = input || "", chunks = value.split(/\r?\n|\r/g), tail = chunks[chunks.length - 1];
    return line += chunks.length - 1, column = chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift, value;
  }
}

// node_modules/mdast-util-gfm-footnote/lib/index.js
footnoteReference.peek = footnoteReferencePeek;
function gfmFootnoteFromMarkdown() {
  return {
    enter: {
      gfmFootnoteDefinition: enterFootnoteDefinition,
      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,
      gfmFootnoteCall: enterFootnoteCall,
      gfmFootnoteCallString: enterFootnoteCallString
    },
    exit: {
      gfmFootnoteDefinition: exitFootnoteDefinition,
      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,
      gfmFootnoteCall: exitFootnoteCall,
      gfmFootnoteCallString: exitFootnoteCallString
    }
  };
}
function gfmFootnoteToMarkdown() {
  return {
    unsafe: [{ character: "[", inConstruct: ["phrasing", "label", "reference"] }],
    handlers: { footnoteDefinition, footnoteReference }
  };
}
function enterFootnoteDefinition(token) {
  this.enter(
    { type: "footnoteDefinition", identifier: "", label: "", children: [] },
    token
  );
}
function enterFootnoteDefinitionLabelString() {
  this.buffer();
}
function exitFootnoteDefinitionLabelString(token) {
  let label = this.resume(), node2 = this.stack[this.stack.length - 1];
  node2.label = label, node2.identifier = normalizeIdentifier(
    this.sliceSerialize(token)
  ).toLowerCase();
}
function exitFootnoteDefinition(token) {
  this.exit(token);
}
function enterFootnoteCall(token) {
  this.enter({ type: "footnoteReference", identifier: "", label: "" }, token);
}
function enterFootnoteCallString() {
  this.buffer();
}
function exitFootnoteCallString(token) {
  let label = this.resume(), node2 = this.stack[this.stack.length - 1];
  node2.label = label, node2.identifier = normalizeIdentifier(
    this.sliceSerialize(token)
  ).toLowerCase();
}
function exitFootnoteCall(token) {
  this.exit(token);
}
function footnoteReference(node2, _, context, safeOptions) {
  let tracker = track(safeOptions), value = tracker.move("[^"), exit3 = context.enter("footnoteReference"), subexit = context.enter("reference");
  return value += tracker.move(
    safe(context, association(node2), {
      ...tracker.current(),
      before: value,
      after: "]"
    })
  ), subexit(), exit3(), value += tracker.move("]"), value;
}
function footnoteReferencePeek() {
  return "[";
}
function footnoteDefinition(node2, _, context, safeOptions) {
  let tracker = track(safeOptions), value = tracker.move("[^"), exit3 = context.enter("footnoteDefinition"), subexit = context.enter("label");
  return value += tracker.move(
    safe(context, association(node2), {
      ...tracker.current(),
      before: value,
      after: "]"
    })
  ), subexit(), value += tracker.move(
    "]:" + (node2.children && node2.children.length > 0 ? " " : "")
  ), tracker.shift(4), value += tracker.move(
    indentLines(containerFlow(node2, context, tracker.current()), map)
  ), exit3(), value;
}
function map(line, index2, blank) {
  return index2 === 0 ? line : (blank ? "" : "    ") + line;
}

// node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js
function containerPhrasing(parent, state, info) {
  let indexStack = state.indexStack, children = parent.children || [], results = [], index2 = -1, before = info.before;
  indexStack.push(-1);
  let tracker = state.createTracker(info);
  for (; ++index2 < children.length; ) {
    let child = children[index2], after;
    if (indexStack[indexStack.length - 1] = index2, index2 + 1 < children.length) {
      let handle2 = state.handle.handlers[children[index2 + 1].type];
      handle2 && handle2.peek && (handle2 = handle2.peek), after = handle2 ? handle2(children[index2 + 1], parent, state, {
        before: "",
        after: "",
        ...tracker.current()
      }).charAt(0) : "";
    } else
      after = info.after;
    results.length > 0 && (before === "\r" || before === `
`) && child.type === "html" && (results[results.length - 1] = results[results.length - 1].replace(
      /(\r?\n|\r)$/,
      " "
    ), before = " ", tracker = state.createTracker(info), tracker.move(results.join(""))), results.push(
      tracker.move(
        state.handle(child, parent, state, {
          ...tracker.current(),
          before,
          after
        })
      )
    ), before = results[results.length - 1].slice(-1);
  }
  return indexStack.pop(), results.join("");
}

// node_modules/mdast-util-gfm-strikethrough/lib/index.js
var constructsWithoutStrikethrough = [
  "autolink",
  "destinationLiteral",
  "destinationRaw",
  "reference",
  "titleQuote",
  "titleApostrophe"
];
handleDelete.peek = peekDelete;
var gfmStrikethroughFromMarkdown = {
  canContainEols: ["delete"],
  enter: { strikethrough: enterStrikethrough },
  exit: { strikethrough: exitStrikethrough }
}, gfmStrikethroughToMarkdown = {
  unsafe: [
    {
      character: "~",
      inConstruct: "phrasing",
      notInConstruct: constructsWithoutStrikethrough
    }
  ],
  handlers: { delete: handleDelete }
};
function enterStrikethrough(token) {
  this.enter({ type: "delete", children: [] }, token);
}
function exitStrikethrough(token) {
  this.exit(token);
}
function handleDelete(node2, _, context, safeOptions) {
  let tracker = track(safeOptions), exit3 = context.enter("strikethrough"), value = tracker.move("~~");
  return value += containerPhrasing(node2, context, {
    ...tracker.current(),
    before: value,
    after: "~"
  }), value += tracker.move("~~"), exit3(), value;
}
function peekDelete() {
  return "~";
}

// node_modules/mdast-util-to-markdown/lib/handle/inline-code.js
inlineCode.peek = inlineCodePeek;
function inlineCode(node2, _, state) {
  let value = node2.value || "", sequence = "`", index2 = -1;
  for (; new RegExp("(^|[^`])" + sequence + "([^`]|$)").test(value); )
    sequence += "`";
  for (/[^ \r\n]/.test(value) && (/^[ \r\n]/.test(value) && /[ \r\n]$/.test(value) || /^`|`$/.test(value)) && (value = " " + value + " "); ++index2 < state.unsafe.length; ) {
    let pattern = state.unsafe[index2], expression = patternCompile(pattern), match;
    if (!!pattern.atBreak)
      for (; match = expression.exec(value); ) {
        let position4 = match.index;
        value.charCodeAt(position4) === 10 && value.charCodeAt(position4 - 1) === 13 && position4--, value = value.slice(0, position4) + " " + value.slice(match.index + 1);
      }
  }
  return sequence + value + sequence;
}
function inlineCodePeek() {
  return "`";
}

// node_modules/markdown-table/index.js
function markdownTable(table2, options2 = {}) {
  let align = (options2.align || []).concat(), stringLength = options2.stringLength || defaultStringLength, alignments = [], cellMatrix = [], sizeMatrix = [], longestCellByColumn = [], mostCellsPerRow = 0, rowIndex = -1;
  for (; ++rowIndex < table2.length; ) {
    let row2 = [], sizes2 = [], columnIndex2 = -1;
    for (table2[rowIndex].length > mostCellsPerRow && (mostCellsPerRow = table2[rowIndex].length); ++columnIndex2 < table2[rowIndex].length; ) {
      let cell = serialize2(table2[rowIndex][columnIndex2]);
      if (options2.alignDelimiters !== !1) {
        let size = stringLength(cell);
        sizes2[columnIndex2] = size, (longestCellByColumn[columnIndex2] === void 0 || size > longestCellByColumn[columnIndex2]) && (longestCellByColumn[columnIndex2] = size);
      }
      row2.push(cell);
    }
    cellMatrix[rowIndex] = row2, sizeMatrix[rowIndex] = sizes2;
  }
  let columnIndex = -1;
  if (typeof align == "object" && "length" in align)
    for (; ++columnIndex < mostCellsPerRow; )
      alignments[columnIndex] = toAlignment(align[columnIndex]);
  else {
    let code3 = toAlignment(align);
    for (; ++columnIndex < mostCellsPerRow; )
      alignments[columnIndex] = code3;
  }
  columnIndex = -1;
  let row = [], sizes = [];
  for (; ++columnIndex < mostCellsPerRow; ) {
    let code3 = alignments[columnIndex], before = "", after = "";
    code3 === 99 ? (before = ":", after = ":") : code3 === 108 ? before = ":" : code3 === 114 && (after = ":");
    let size = options2.alignDelimiters === !1 ? 1 : Math.max(
      1,
      longestCellByColumn[columnIndex] - before.length - after.length
    ), cell = before + "-".repeat(size) + after;
    options2.alignDelimiters !== !1 && (size = before.length + size + after.length, size > longestCellByColumn[columnIndex] && (longestCellByColumn[columnIndex] = size), sizes[columnIndex] = size), row[columnIndex] = cell;
  }
  cellMatrix.splice(1, 0, row), sizeMatrix.splice(1, 0, sizes), rowIndex = -1;
  let lines = [];
  for (; ++rowIndex < cellMatrix.length; ) {
    let row2 = cellMatrix[rowIndex], sizes2 = sizeMatrix[rowIndex];
    columnIndex = -1;
    let line = [];
    for (; ++columnIndex < mostCellsPerRow; ) {
      let cell = row2[columnIndex] || "", before = "", after = "";
      if (options2.alignDelimiters !== !1) {
        let size = longestCellByColumn[columnIndex] - (sizes2[columnIndex] || 0), code3 = alignments[columnIndex];
        code3 === 114 ? before = " ".repeat(size) : code3 === 99 ? size % 2 ? (before = " ".repeat(size / 2 + 0.5), after = " ".repeat(size / 2 - 0.5)) : (before = " ".repeat(size / 2), after = before) : after = " ".repeat(size);
      }
      options2.delimiterStart !== !1 && !columnIndex && line.push("|"), options2.padding !== !1 && !(options2.alignDelimiters === !1 && cell === "") && (options2.delimiterStart !== !1 || columnIndex) && line.push(" "), options2.alignDelimiters !== !1 && line.push(before), line.push(cell), options2.alignDelimiters !== !1 && line.push(after), options2.padding !== !1 && line.push(" "), (options2.delimiterEnd !== !1 || columnIndex !== mostCellsPerRow - 1) && line.push("|");
    }
    lines.push(
      options2.delimiterEnd === !1 ? line.join("").replace(/ +$/, "") : line.join("")
    );
  }
  return lines.join(`
`);
}
function serialize2(value) {
  return value == null ? "" : String(value);
}
function defaultStringLength(value) {
  return value.length;
}
function toAlignment(value) {
  let code3 = typeof value == "string" ? value.codePointAt(0) : 0;
  return code3 === 67 || code3 === 99 ? 99 : code3 === 76 || code3 === 108 ? 108 : code3 === 82 || code3 === 114 ? 114 : 0;
}

// node_modules/mdast-util-gfm-table/lib/index.js
var gfmTableFromMarkdown = {
  enter: {
    table: enterTable,
    tableData: enterCell,
    tableHeader: enterCell,
    tableRow: enterRow
  },
  exit: {
    codeText: exitCodeText,
    table: exitTable,
    tableData: exit2,
    tableHeader: exit2,
    tableRow: exit2
  }
};
function enterTable(token) {
  let align = token._align;
  this.enter(
    {
      type: "table",
      align: align.map((d) => d === "none" ? null : d),
      children: []
    },
    token
  ), this.setData("inTable", !0);
}
function exitTable(token) {
  this.exit(token), this.setData("inTable");
}
function enterRow(token) {
  this.enter({ type: "tableRow", children: [] }, token);
}
function exit2(token) {
  this.exit(token);
}
function enterCell(token) {
  this.enter({ type: "tableCell", children: [] }, token);
}
function exitCodeText(token) {
  let value = this.resume();
  this.getData("inTable") && (value = value.replace(/\\([\\|])/g, replace));
  let node2 = this.stack[this.stack.length - 1];
  node2.value = value, this.exit(token);
}
function replace($0, $1) {
  return $1 === "|" ? $1 : $0;
}
function gfmTableToMarkdown(options2) {
  let settings = options2 || {}, padding = settings.tableCellPadding, alignDelimiters = settings.tablePipeAlign, stringLength = settings.stringLength, around = padding ? " " : "|";
  return {
    unsafe: [
      { character: "\r", inConstruct: "tableCell" },
      { character: `
`, inConstruct: "tableCell" },
      { atBreak: !0, character: "|", after: "[	 :-]" },
      { character: "|", inConstruct: "tableCell" },
      { atBreak: !0, character: ":", after: "-" },
      { atBreak: !0, character: "-", after: "[:|-]" }
    ],
    handlers: {
      table: handleTable,
      tableRow: handleTableRow,
      tableCell: handleTableCell,
      inlineCode: inlineCodeWithTable
    }
  };
  function handleTable(node2, _, context, safeOptions) {
    return serializeData(
      handleTableAsData(node2, context, safeOptions),
      node2.align
    );
  }
  function handleTableRow(node2, _, context, safeOptions) {
    let row = handleTableRowAsData(node2, context, safeOptions), value = serializeData([row]);
    return value.slice(0, value.indexOf(`
`));
  }
  function handleTableCell(node2, _, context, safeOptions) {
    let exit3 = context.enter("tableCell"), subexit = context.enter("phrasing"), value = containerPhrasing(node2, context, {
      ...safeOptions,
      before: around,
      after: around
    });
    return subexit(), exit3(), value;
  }
  function serializeData(matrix, align) {
    return markdownTable(matrix, {
      align,
      alignDelimiters,
      padding,
      stringLength
    });
  }
  function handleTableAsData(node2, context, safeOptions) {
    let children = node2.children, index2 = -1, result = [], subexit = context.enter("table");
    for (; ++index2 < children.length; )
      result[index2] = handleTableRowAsData(
        children[index2],
        context,
        safeOptions
      );
    return subexit(), result;
  }
  function handleTableRowAsData(node2, context, safeOptions) {
    let children = node2.children, index2 = -1, result = [], subexit = context.enter("tableRow");
    for (; ++index2 < children.length; )
      result[index2] = handleTableCell(
        children[index2],
        node2,
        context,
        safeOptions
      );
    return subexit(), result;
  }
  function inlineCodeWithTable(node2, parent, context) {
    let value = inlineCode(node2, parent, context);
    return context.stack.includes("tableCell") && (value = value.replace(/\|/g, "\\$&")), value;
  }
}

// node_modules/mdast-util-to-markdown/lib/util/check-bullet.js
function checkBullet(state) {
  let marker = state.options.bullet || "*";
  if (marker !== "*" && marker !== "+" && marker !== "-")
    throw new Error(
      "Cannot serialize items with `" + marker + "` for `options.bullet`, expected `*`, `+`, or `-`"
    );
  return marker;
}

// node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js
function checkListItemIndent(state) {
  let style2 = state.options.listItemIndent || "tab";
  if (style2 === 1 || style2 === "1")
    return "one";
  if (style2 !== "tab" && style2 !== "one" && style2 !== "mixed")
    throw new Error(
      "Cannot serialize items with `" + style2 + "` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`"
    );
  return style2;
}

// node_modules/mdast-util-to-markdown/lib/handle/list-item.js
function listItem(node2, parent, state, info) {
  let listItemIndent = checkListItemIndent(state), bullet = state.bulletCurrent || checkBullet(state);
  parent && parent.type === "list" && parent.ordered && (bullet = (typeof parent.start == "number" && parent.start > -1 ? parent.start : 1) + (state.options.incrementListMarker === !1 ? 0 : parent.children.indexOf(node2)) + bullet);
  let size = bullet.length + 1;
  (listItemIndent === "tab" || listItemIndent === "mixed" && (parent && parent.type === "list" && parent.spread || node2.spread)) && (size = Math.ceil(size / 4) * 4);
  let tracker = state.createTracker(info);
  tracker.move(bullet + " ".repeat(size - bullet.length)), tracker.shift(size);
  let exit3 = state.enter("listItem"), value = state.indentLines(
    state.containerFlow(node2, tracker.current()),
    map2
  );
  return exit3(), value;
  function map2(line, index2, blank) {
    return index2 ? (blank ? "" : " ".repeat(size)) + line : (blank ? bullet : bullet + " ".repeat(size - bullet.length)) + line;
  }
}

// node_modules/mdast-util-gfm-task-list-item/lib/index.js
var gfmTaskListItemFromMarkdown = {
  exit: {
    taskListCheckValueChecked: exitCheck,
    taskListCheckValueUnchecked: exitCheck,
    paragraph: exitParagraphWithTaskListItem
  }
}, gfmTaskListItemToMarkdown = {
  unsafe: [{ atBreak: !0, character: "-", after: "[:|-]" }],
  handlers: { listItem: listItemWithTaskListItem }
};
function exitCheck(token) {
  let node2 = this.stack[this.stack.length - 2];
  node2.checked = token.type === "taskListCheckValueChecked";
}
function exitParagraphWithTaskListItem(token) {
  let parent = this.stack[this.stack.length - 2];
  if (parent && parent.type === "listItem" && typeof parent.checked == "boolean") {
    let node2 = this.stack[this.stack.length - 1], head2 = node2.children[0];
    if (head2 && head2.type === "text") {
      let siblings2 = parent.children, index2 = -1, firstParaghraph;
      for (; ++index2 < siblings2.length; ) {
        let sibling = siblings2[index2];
        if (sibling.type === "paragraph") {
          firstParaghraph = sibling;
          break;
        }
      }
      firstParaghraph === node2 && (head2.value = head2.value.slice(1), head2.value.length === 0 ? node2.children.shift() : node2.position && head2.position && typeof head2.position.start.offset == "number" && (head2.position.start.column++, head2.position.start.offset++, node2.position.start = Object.assign({}, head2.position.start)));
    }
  }
  this.exit(token);
}
function listItemWithTaskListItem(node2, parent, context, safeOptions) {
  let head2 = node2.children[0], checkable = typeof node2.checked == "boolean" && head2 && head2.type === "paragraph", checkbox = "[" + (node2.checked ? "x" : " ") + "] ", tracker = track(safeOptions);
  checkable && tracker.move(checkbox);
  let value = listItem(node2, parent, context, {
    ...safeOptions,
    ...tracker.current()
  });
  return checkable && (value = value.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/, check)), value;
  function check($0) {
    return $0 + checkbox;
  }
}

// node_modules/mdast-util-gfm/lib/index.js
function gfmFromMarkdown() {
  return [
    gfmAutolinkLiteralFromMarkdown,
    gfmFootnoteFromMarkdown(),
    gfmStrikethroughFromMarkdown,
    gfmTableFromMarkdown,
    gfmTaskListItemFromMarkdown
  ];
}
function gfmToMarkdown(options2) {
  return {
    extensions: [
      gfmAutolinkLiteralToMarkdown,
      gfmFootnoteToMarkdown(),
      gfmStrikethroughToMarkdown,
      gfmTableToMarkdown(options2),
      gfmTaskListItemToMarkdown
    ]
  };
}

// node_modules/remark-gfm/index.js
function remarkGfm(options2 = {}) {
  let data = this.data();
  add("micromarkExtensions", gfm(options2)), add("fromMarkdownExtensions", gfmFromMarkdown()), add("toMarkdownExtensions", gfmToMarkdown(options2));
  function add(field, value) {
    (data[field] ? data[field] : data[field] = []).push(value);
  }
}

// node_modules/remark-inline-links/index.js
init_unist_util_visit();

// node_modules/mdast-util-definitions/lib/index.js
init_unist_util_visit();
var own13 = {}.hasOwnProperty;
function definitions(tree) {
  let cache = /* @__PURE__ */ Object.create(null);
  if (!tree || !tree.type)
    throw new Error("mdast-util-definitions expected node");
  return visit(tree, "definition", (definition3) => {
    let id = clean(definition3.identifier);
    id && !own13.call(cache, id) && (cache[id] = definition3);
  }), definition2;
  function definition2(identifier) {
    let id = clean(identifier);
    return id && own13.call(cache, id) ? cache[id] : null;
  }
}
function clean(value) {
  return String(value || "").toUpperCase();
}

// node_modules/remark-inline-links/index.js
function remarkInlineLinks() {
  return (tree) => {
    let definition2 = definitions(tree);
    visit(tree, (node2, index2, parent) => {
      if (node2.type === "definition" && parent !== null && typeof index2 == "number")
        return parent.children.splice(index2, 1), [SKIP, index2];
      if (node2.type === "imageReference" || node2.type === "linkReference") {
        let def = definition2(node2.identifier);
        if (def && parent !== null && typeof index2 == "number") {
          let replacement = node2.type === "imageReference" ? { type: "image", url: def.url, title: def.title, alt: node2.alt } : {
            type: "link",
            url: def.url,
            title: def.title,
            children: node2.children
          };
          return parent.children[index2] = replacement, [SKIP, index2];
        }
      }
    });
  };
}

// node_modules/mdast-util-to-string/lib/index.js
function toString(value, options2) {
  let includeImageAlt = (options2 || {}).includeImageAlt;
  return one4(
    value,
    typeof includeImageAlt == "boolean" ? includeImageAlt : !0
  );
}
function one4(value, includeImageAlt) {
  return node(value) && ("value" in value && value.value || includeImageAlt && "alt" in value && value.alt || "children" in value && all4(value.children, includeImageAlt)) || Array.isArray(value) && all4(value, includeImageAlt) || "";
}
function all4(values, includeImageAlt) {
  let result = [], index2 = -1;
  for (; ++index2 < values.length; )
    result[index2] = one4(values[index2], includeImageAlt);
  return result.join("");
}
function node(value) {
  return Boolean(value && typeof value == "object");
}

// node_modules/micromark/lib/initialize/content.js
var content2 = {
  tokenize: initializeContent
};
function initializeContent(effects) {
  let contentStart = effects.attempt(
    this.parser.constructs.contentInitial,
    afterContentStartConstruct,
    paragraphInitial
  ), previous3;
  return contentStart;
  function afterContentStartConstruct(code3) {
    if (code3 === null) {
      effects.consume(code3);
      return;
    }
    return effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), factorySpace(effects, contentStart, "linePrefix");
  }
  function paragraphInitial(code3) {
    return effects.enter("paragraph"), lineStart(code3);
  }
  function lineStart(code3) {
    let token = effects.enter("chunkText", {
      contentType: "text",
      previous: previous3
    });
    return previous3 && (previous3.next = token), previous3 = token, data(code3);
  }
  function data(code3) {
    if (code3 === null) {
      effects.exit("chunkText"), effects.exit("paragraph"), effects.consume(code3);
      return;
    }
    return markdownLineEnding(code3) ? (effects.consume(code3), effects.exit("chunkText"), lineStart) : (effects.consume(code3), data);
  }
}

// node_modules/micromark/lib/initialize/document.js
var document2 = {
  tokenize: initializeDocument
}, containerConstruct = {
  tokenize: tokenizeContainer
};
function initializeDocument(effects) {
  let self2 = this, stack = [], continued = 0, childFlow, childToken, lineStartOffset;
  return start;
  function start(code3) {
    if (continued < stack.length) {
      let item = stack[continued];
      return self2.containerState = item[1], effects.attempt(
        item[0].continuation,
        documentContinue,
        checkNewContainers
      )(code3);
    }
    return checkNewContainers(code3);
  }
  function documentContinue(code3) {
    if (continued++, self2.containerState._closeFlow) {
      self2.containerState._closeFlow = void 0, childFlow && closeFlow();
      let indexBeforeExits = self2.events.length, indexBeforeFlow = indexBeforeExits, point5;
      for (; indexBeforeFlow--; )
        if (self2.events[indexBeforeFlow][0] === "exit" && self2.events[indexBeforeFlow][1].type === "chunkFlow") {
          point5 = self2.events[indexBeforeFlow][1].end;
          break;
        }
      exitContainers(continued);
      let index2 = indexBeforeExits;
      for (; index2 < self2.events.length; )
        self2.events[index2][1].end = Object.assign({}, point5), index2++;
      return splice(
        self2.events,
        indexBeforeFlow + 1,
        0,
        self2.events.slice(indexBeforeExits)
      ), self2.events.length = index2, checkNewContainers(code3);
    }
    return start(code3);
  }
  function checkNewContainers(code3) {
    if (continued === stack.length) {
      if (!childFlow)
        return documentContinued(code3);
      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete)
        return flowStart(code3);
      self2.interrupt = Boolean(
        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack
      );
    }
    return self2.containerState = {}, effects.check(
      containerConstruct,
      thereIsANewContainer,
      thereIsNoNewContainer
    )(code3);
  }
  function thereIsANewContainer(code3) {
    return childFlow && closeFlow(), exitContainers(continued), documentContinued(code3);
  }
  function thereIsNoNewContainer(code3) {
    return self2.parser.lazy[self2.now().line] = continued !== stack.length, lineStartOffset = self2.now().offset, flowStart(code3);
  }
  function documentContinued(code3) {
    return self2.containerState = {}, effects.attempt(
      containerConstruct,
      containerContinue,
      flowStart
    )(code3);
  }
  function containerContinue(code3) {
    return continued++, stack.push([self2.currentConstruct, self2.containerState]), documentContinued(code3);
  }
  function flowStart(code3) {
    if (code3 === null) {
      childFlow && closeFlow(), exitContainers(0), effects.consume(code3);
      return;
    }
    return childFlow = childFlow || self2.parser.flow(self2.now()), effects.enter("chunkFlow", {
      contentType: "flow",
      previous: childToken,
      _tokenizer: childFlow
    }), flowContinue(code3);
  }
  function flowContinue(code3) {
    if (code3 === null) {
      writeToChild(effects.exit("chunkFlow"), !0), exitContainers(0), effects.consume(code3);
      return;
    }
    return markdownLineEnding(code3) ? (effects.consume(code3), writeToChild(effects.exit("chunkFlow")), continued = 0, self2.interrupt = void 0, start) : (effects.consume(code3), flowContinue);
  }
  function writeToChild(token, eof) {
    let stream = self2.sliceStream(token);
    if (eof && stream.push(null), token.previous = childToken, childToken && (childToken.next = token), childToken = token, childFlow.defineSkip(token.start), childFlow.write(stream), self2.parser.lazy[token.start.line]) {
      let index2 = childFlow.events.length;
      for (; index2--; )
        if (childFlow.events[index2][1].start.offset < lineStartOffset && (!childFlow.events[index2][1].end || childFlow.events[index2][1].end.offset > lineStartOffset))
          return;
      let indexBeforeExits = self2.events.length, indexBeforeFlow = indexBeforeExits, seen, point5;
      for (; indexBeforeFlow--; )
        if (self2.events[indexBeforeFlow][0] === "exit" && self2.events[indexBeforeFlow][1].type === "chunkFlow") {
          if (seen) {
            point5 = self2.events[indexBeforeFlow][1].end;
            break;
          }
          seen = !0;
        }
      for (exitContainers(continued), index2 = indexBeforeExits; index2 < self2.events.length; )
        self2.events[index2][1].end = Object.assign({}, point5), index2++;
      splice(
        self2.events,
        indexBeforeFlow + 1,
        0,
        self2.events.slice(indexBeforeExits)
      ), self2.events.length = index2;
    }
  }
  function exitContainers(size) {
    let index2 = stack.length;
    for (; index2-- > size; ) {
      let entry2 = stack[index2];
      self2.containerState = entry2[1], entry2[0].exit.call(self2, effects);
    }
    stack.length = size;
  }
  function closeFlow() {
    childFlow.write([null]), childToken = void 0, childFlow = void 0, self2.containerState._closeFlow = void 0;
  }
}
function tokenizeContainer(effects, ok2, nok) {
  return factorySpace(
    effects,
    effects.attempt(this.parser.constructs.document, ok2, nok),
    "linePrefix",
    this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
  );
}

// node_modules/micromark/lib/initialize/flow.js
var flow = {
  tokenize: initializeFlow
};
function initializeFlow(effects) {
  let self2 = this, initial = effects.attempt(
    blankLine,
    atBlankEnding,
    effects.attempt(
      this.parser.constructs.flowInitial,
      afterConstruct,
      factorySpace(
        effects,
        effects.attempt(
          this.parser.constructs.flow,
          afterConstruct,
          effects.attempt(content, afterConstruct)
        ),
        "linePrefix"
      )
    )
  );
  return initial;
  function atBlankEnding(code3) {
    if (code3 === null) {
      effects.consume(code3);
      return;
    }
    return effects.enter("lineEndingBlank"), effects.consume(code3), effects.exit("lineEndingBlank"), self2.currentConstruct = void 0, initial;
  }
  function afterConstruct(code3) {
    if (code3 === null) {
      effects.consume(code3);
      return;
    }
    return effects.enter("lineEnding"), effects.consume(code3), effects.exit("lineEnding"), self2.currentConstruct = void 0, initial;
  }
}

// node_modules/micromark/lib/initialize/text.js
var resolver = {
  resolveAll: createResolver()
}, string = initializeFactory("string"), text4 = initializeFactory("text");
function initializeFactory(field) {
  return {
    tokenize: initializeText,
    resolveAll: createResolver(
      field === "text" ? resolveAllLineSuffixes : void 0
    )
  };
  function initializeText(effects) {
    let self2 = this, constructs2 = this.parser.constructs[field], text7 = effects.attempt(constructs2, start, notText);
    return start;
    function start(code3) {
      return atBreak(code3) ? text7(code3) : notText(code3);
    }
    function notText(code3) {
      if (code3 === null) {
        effects.consume(code3);
        return;
      }
      return effects.enter("data"), effects.consume(code3), data;
    }
    function data(code3) {
      return atBreak(code3) ? (effects.exit("data"), text7(code3)) : (effects.consume(code3), data);
    }
    function atBreak(code3) {
      if (code3 === null)
        return !0;
      let list3 = constructs2[code3], index2 = -1;
      if (list3)
        for (; ++index2 < list3.length; ) {
          let item = list3[index2];
          if (!item.previous || item.previous.call(self2, self2.previous))
            return !0;
        }
      return !1;
    }
  }
}
function createResolver(extraResolver) {
  return resolveAllText;
  function resolveAllText(events, context) {
    let index2 = -1, enter;
    for (; ++index2 <= events.length; )
      enter === void 0 ? events[index2] && events[index2][1].type === "data" && (enter = index2, index2++) : (!events[index2] || events[index2][1].type !== "data") && (index2 !== enter + 2 && (events[enter][1].end = events[index2 - 1][1].end, events.splice(enter + 2, index2 - enter - 2), index2 = enter + 2), enter = void 0);
    return extraResolver ? extraResolver(events, context) : events;
  }
}
function resolveAllLineSuffixes(events, context) {
  let eventIndex = 0;
  for (; ++eventIndex <= events.length; )
    if ((eventIndex === events.length || events[eventIndex][1].type === "lineEnding") && events[eventIndex - 1][1].type === "data") {
      let data = events[eventIndex - 1][1], chunks = context.sliceStream(data), index2 = chunks.length, bufferIndex = -1, size = 0, tabs;
      for (; index2--; ) {
        let chunk = chunks[index2];
        if (typeof chunk == "string") {
          for (bufferIndex = chunk.length; chunk.charCodeAt(bufferIndex - 1) === 32; )
            size++, bufferIndex--;
          if (bufferIndex)
            break;
          bufferIndex = -1;
        } else if (chunk === -2)
          tabs = !0, size++;
        else if (chunk !== -1) {
          index2++;
          break;
        }
      }
      if (size) {
        let token = {
          type: eventIndex === events.length || tabs || size < 2 ? "lineSuffix" : "hardBreakTrailing",
          start: {
            line: data.end.line,
            column: data.end.column - size,
            offset: data.end.offset - size,
            _index: data.start._index + index2,
            _bufferIndex: index2 ? bufferIndex : data.start._bufferIndex + bufferIndex
          },
          end: Object.assign({}, data.end)
        };
        data.end = Object.assign({}, token.start), data.start.offset === data.end.offset ? Object.assign(data, token) : (events.splice(
          eventIndex,
          0,
          ["enter", token, context],
          ["exit", token, context]
        ), eventIndex += 2);
      }
      eventIndex++;
    }
  return events;
}

// node_modules/micromark/lib/create-tokenizer.js
function createTokenizer(parser, initialize, from) {
  let point5 = Object.assign(
    from ? Object.assign({}, from) : {
      line: 1,
      column: 1,
      offset: 0
    },
    {
      _index: 0,
      _bufferIndex: -1
    }
  ), columnStart = {}, resolveAllConstructs = [], chunks = [], stack = [], consumed = !0, effects = {
    consume,
    enter,
    exit: exit3,
    attempt: constructFactory(onsuccessfulconstruct),
    check: constructFactory(onsuccessfulcheck),
    interrupt: constructFactory(onsuccessfulcheck, {
      interrupt: !0
    })
  }, context = {
    previous: null,
    code: null,
    containerState: {},
    events: [],
    parser,
    sliceStream,
    sliceSerialize,
    now,
    defineSkip,
    write
  }, state = initialize.tokenize.call(context, effects), expectedCode;
  return initialize.resolveAll && resolveAllConstructs.push(initialize), context;
  function write(slice) {
    return chunks = push(chunks, slice), main(), chunks[chunks.length - 1] !== null ? [] : (addResult(initialize, 0), context.events = resolveAll(resolveAllConstructs, context.events, context), context.events);
  }
  function sliceSerialize(token, expandTabs) {
    return serializeChunks(sliceStream(token), expandTabs);
  }
  function sliceStream(token) {
    return sliceChunks(chunks, token);
  }
  function now() {
    return Object.assign({}, point5);
  }
  function defineSkip(value) {
    columnStart[value.line] = value.column, accountForPotentialSkip();
  }
  function main() {
    let chunkIndex;
    for (; point5._index < chunks.length; ) {
      let chunk = chunks[point5._index];
      if (typeof chunk == "string")
        for (chunkIndex = point5._index, point5._bufferIndex < 0 && (point5._bufferIndex = 0); point5._index === chunkIndex && point5._bufferIndex < chunk.length; )
          go(chunk.charCodeAt(point5._bufferIndex));
      else
        go(chunk);
    }
  }
  function go(code3) {
    consumed = void 0, expectedCode = code3, state = state(code3);
  }
  function consume(code3) {
    markdownLineEnding(code3) ? (point5.line++, point5.column = 1, point5.offset += code3 === -3 ? 2 : 1, accountForPotentialSkip()) : code3 !== -1 && (point5.column++, point5.offset++), point5._bufferIndex < 0 ? point5._index++ : (point5._bufferIndex++, point5._bufferIndex === chunks[point5._index].length && (point5._bufferIndex = -1, point5._index++)), context.previous = code3, consumed = !0;
  }
  function enter(type, fields) {
    let token = fields || {};
    return token.type = type, token.start = now(), context.events.push(["enter", token, context]), stack.push(token), token;
  }
  function exit3(type) {
    let token = stack.pop();
    return token.end = now(), context.events.push(["exit", token, context]), token;
  }
  function onsuccessfulconstruct(construct, info) {
    addResult(construct, info.from);
  }
  function onsuccessfulcheck(_, info) {
    info.restore();
  }
  function constructFactory(onreturn, fields) {
    return hook;
    function hook(constructs2, returnState, bogusState) {
      let listOfConstructs, constructIndex, currentConstruct, info;
      return Array.isArray(constructs2) ? handleListOfConstructs(constructs2) : "tokenize" in constructs2 ? handleListOfConstructs([constructs2]) : handleMapOfConstructs(constructs2);
      function handleMapOfConstructs(map2) {
        return start;
        function start(code3) {
          let def = code3 !== null && map2[code3], all6 = code3 !== null && map2.null, list3 = [
            ...Array.isArray(def) ? def : def ? [def] : [],
            ...Array.isArray(all6) ? all6 : all6 ? [all6] : []
          ];
          return handleListOfConstructs(list3)(code3);
        }
      }
      function handleListOfConstructs(list3) {
        return listOfConstructs = list3, constructIndex = 0, list3.length === 0 ? bogusState : handleConstruct(list3[constructIndex]);
      }
      function handleConstruct(construct) {
        return start;
        function start(code3) {
          return info = store(), currentConstruct = construct, construct.partial || (context.currentConstruct = construct), construct.name && context.parser.constructs.disable.null.includes(construct.name) ? nok(code3) : construct.tokenize.call(
            fields ? Object.assign(Object.create(context), fields) : context,
            effects,
            ok2,
            nok
          )(code3);
        }
      }
      function ok2(code3) {
        return consumed = !0, onreturn(currentConstruct, info), returnState;
      }
      function nok(code3) {
        return consumed = !0, info.restore(), ++constructIndex < listOfConstructs.length ? handleConstruct(listOfConstructs[constructIndex]) : bogusState;
      }
    }
  }
  function addResult(construct, from2) {
    construct.resolveAll && !resolveAllConstructs.includes(construct) && resolveAllConstructs.push(construct), construct.resolve && splice(
      context.events,
      from2,
      context.events.length - from2,
      construct.resolve(context.events.slice(from2), context)
    ), construct.resolveTo && (context.events = construct.resolveTo(context.events, context));
  }
  function store() {
    let startPoint = now(), startPrevious = context.previous, startCurrentConstruct = context.currentConstruct, startEventsIndex = context.events.length, startStack = Array.from(stack);
    return {
      restore,
      from: startEventsIndex
    };
    function restore() {
      point5 = startPoint, context.previous = startPrevious, context.currentConstruct = startCurrentConstruct, context.events.length = startEventsIndex, stack = startStack, accountForPotentialSkip();
    }
  }
  function accountForPotentialSkip() {
    point5.line in columnStart && point5.column < 2 && (point5.column = columnStart[point5.line], point5.offset += columnStart[point5.line] - 1);
  }
}
function sliceChunks(chunks, token) {
  let startIndex = token.start._index, startBufferIndex = token.start._bufferIndex, endIndex = token.end._index, endBufferIndex = token.end._bufferIndex, view;
  return startIndex === endIndex ? view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)] : (view = chunks.slice(startIndex, endIndex), startBufferIndex > -1 && (view[0] = view[0].slice(startBufferIndex)), endBufferIndex > 0 && view.push(chunks[endIndex].slice(0, endBufferIndex))), view;
}
function serializeChunks(chunks, expandTabs) {
  let index2 = -1, result = [], atTab;
  for (; ++index2 < chunks.length; ) {
    let chunk = chunks[index2], value;
    if (typeof chunk == "string")
      value = chunk;
    else
      switch (chunk) {
        case -5: {
          value = "\r";
          break;
        }
        case -4: {
          value = `
`;
          break;
        }
        case -3: {
          value = `\r
`;
          break;
        }
        case -2: {
          value = expandTabs ? " " : "	";
          break;
        }
        case -1: {
          if (!expandTabs && atTab)
            continue;
          value = " ";
          break;
        }
        default:
          value = String.fromCharCode(chunk);
      }
    atTab = chunk === -2, result.push(value);
  }
  return result.join("");
}

// node_modules/micromark/lib/constructs.js
var constructs_exports = {};
__export(constructs_exports, {
  attentionMarkers: () => attentionMarkers,
  contentInitial: () => contentInitial,
  disable: () => disable,
  document: () => document3,
  flow: () => flow2,
  flowInitial: () => flowInitial,
  insideSpan: () => insideSpan,
  string: () => string2,
  text: () => text5
});
var document3 = {
  [42]: list,
  [43]: list,
  [45]: list,
  [48]: list,
  [49]: list,
  [50]: list,
  [51]: list,
  [52]: list,
  [53]: list,
  [54]: list,
  [55]: list,
  [56]: list,
  [57]: list,
  [62]: blockQuote
}, contentInitial = {
  [91]: definition
}, flowInitial = {
  [-2]: codeIndented,
  [-1]: codeIndented,
  [32]: codeIndented
}, flow2 = {
  [35]: headingAtx,
  [42]: thematicBreak,
  [45]: [setextUnderline, thematicBreak],
  [60]: htmlFlow,
  [61]: setextUnderline,
  [95]: thematicBreak,
  [96]: codeFenced,
  [126]: codeFenced
}, string2 = {
  [38]: characterReference,
  [92]: characterEscape
}, text5 = {
  [-5]: lineEnding,
  [-4]: lineEnding,
  [-3]: lineEnding,
  [33]: labelStartImage,
  [38]: characterReference,
  [42]: attention,
  [60]: [autolink, htmlText],
  [91]: labelStartLink,
  [92]: [hardBreakEscape, characterEscape],
  [93]: labelEnd,
  [95]: attention,
  [96]: codeText
}, insideSpan = {
  null: [attention, resolver]
}, attentionMarkers = {
  null: [42, 95]
}, disable = {
  null: []
};

// node_modules/micromark/lib/parse.js
function parse5(options2 = {}) {
  let constructs2 = combineExtensions(
    [constructs_exports].concat(options2.extensions || [])
  ), parser = {
    defined: [],
    lazy: {},
    constructs: constructs2,
    content: create2(content2),
    document: create2(document2),
    flow: create2(flow),
    string: create2(string),
    text: create2(text4)
  };
  return parser;
  function create2(initial) {
    return creator;
    function creator(from) {
      return createTokenizer(parser, initial, from);
    }
  }
}

// node_modules/micromark/lib/preprocess.js
var search2 = /[\0\t\n\r]/g;
function preprocess() {
  let column = 1, buffer2 = "", start = !0, atCarriageReturn;
  return preprocessor;
  function preprocessor(value, encoding, end) {
    let chunks = [], match, next, startPosition, endPosition, code3;
    for (value = buffer2 + value.toString(encoding), startPosition = 0, buffer2 = "", start && (value.charCodeAt(0) === 65279 && startPosition++, start = void 0); startPosition < value.length; ) {
      if (search2.lastIndex = startPosition, match = search2.exec(value), endPosition = match && match.index !== void 0 ? match.index : value.length, code3 = value.charCodeAt(endPosition), !match) {
        buffer2 = value.slice(startPosition);
        break;
      }
      if (code3 === 10 && startPosition === endPosition && atCarriageReturn)
        chunks.push(-3), atCarriageReturn = void 0;
      else
        switch (atCarriageReturn && (chunks.push(-5), atCarriageReturn = void 0), startPosition < endPosition && (chunks.push(value.slice(startPosition, endPosition)), column += endPosition - startPosition), code3) {
          case 0: {
            chunks.push(65533), column++;
            break;
          }
          case 9: {
            for (next = Math.ceil(column / 4) * 4, chunks.push(-2); column++ < next; )
              chunks.push(-1);
            break;
          }
          case 10: {
            chunks.push(-4), column = 1;
            break;
          }
          default:
            atCarriageReturn = !0, column = 1;
        }
      startPosition = endPosition + 1;
    }
    return end && (atCarriageReturn && chunks.push(-5), buffer2 && chunks.push(buffer2), chunks.push(null)), chunks;
  }
}

// node_modules/micromark/lib/postprocess.js
function postprocess(events) {
  for (; !subtokenize(events); )
    ;
  return events;
}

// node_modules/mdast-util-from-markdown/lib/index.js
var own14 = {}.hasOwnProperty, fromMarkdown = function(value, encoding, options2) {
  return typeof encoding != "string" && (options2 = encoding, encoding = void 0), compiler(options2)(
    postprocess(
      parse5(options2).document().write(preprocess()(value, encoding, !0))
    )
  );
};
function compiler(options2) {
  let config = {
    transforms: [],
    canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
    enter: {
      autolink: opener(link2),
      autolinkProtocol: onenterdata,
      autolinkEmail: onenterdata,
      atxHeading: opener(heading2),
      blockQuote: opener(blockQuote2),
      characterEscape: onenterdata,
      characterReference: onenterdata,
      codeFenced: opener(codeFlow),
      codeFencedFenceInfo: buffer2,
      codeFencedFenceMeta: buffer2,
      codeIndented: opener(codeFlow, buffer2),
      codeText: opener(codeText2, buffer2),
      codeTextData: onenterdata,
      data: onenterdata,
      codeFlowValue: onenterdata,
      definition: opener(definition2),
      definitionDestinationString: buffer2,
      definitionLabelString: buffer2,
      definitionTitleString: buffer2,
      emphasis: opener(emphasis2),
      hardBreakEscape: opener(hardBreak2),
      hardBreakTrailing: opener(hardBreak2),
      htmlFlow: opener(html6, buffer2),
      htmlFlowData: onenterdata,
      htmlText: opener(html6, buffer2),
      htmlTextData: onenterdata,
      image: opener(image2),
      label: buffer2,
      link: opener(link2),
      listItem: opener(listItem3),
      listItemValue: onenterlistitemvalue,
      listOrdered: opener(list3, onenterlistordered),
      listUnordered: opener(list3),
      paragraph: opener(paragraph2),
      reference: onenterreference,
      referenceString: buffer2,
      resourceDestinationString: buffer2,
      resourceTitleString: buffer2,
      setextHeading: opener(heading2),
      strong: opener(strong2),
      thematicBreak: opener(thematicBreak3)
    },
    exit: {
      atxHeading: closer(),
      atxHeadingSequence: onexitatxheadingsequence,
      autolink: closer(),
      autolinkEmail: onexitautolinkemail,
      autolinkProtocol: onexitautolinkprotocol,
      blockQuote: closer(),
      characterEscapeValue: onexitdata,
      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,
      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,
      characterReferenceValue: onexitcharacterreferencevalue,
      codeFenced: closer(onexitcodefenced),
      codeFencedFence: onexitcodefencedfence,
      codeFencedFenceInfo: onexitcodefencedfenceinfo,
      codeFencedFenceMeta: onexitcodefencedfencemeta,
      codeFlowValue: onexitdata,
      codeIndented: closer(onexitcodeindented),
      codeText: closer(onexitcodetext),
      codeTextData: onexitdata,
      data: onexitdata,
      definition: closer(),
      definitionDestinationString: onexitdefinitiondestinationstring,
      definitionLabelString: onexitdefinitionlabelstring,
      definitionTitleString: onexitdefinitiontitlestring,
      emphasis: closer(),
      hardBreakEscape: closer(onexithardbreak),
      hardBreakTrailing: closer(onexithardbreak),
      htmlFlow: closer(onexithtmlflow),
      htmlFlowData: onexitdata,
      htmlText: closer(onexithtmltext),
      htmlTextData: onexitdata,
      image: closer(onexitimage),
      label: onexitlabel,
      labelText: onexitlabeltext,
      lineEnding: onexitlineending,
      link: closer(onexitlink),
      listItem: closer(),
      listOrdered: closer(),
      listUnordered: closer(),
      paragraph: closer(),
      referenceString: onexitreferencestring,
      resourceDestinationString: onexitresourcedestinationstring,
      resourceTitleString: onexitresourcetitlestring,
      resource: onexitresource,
      setextHeading: closer(onexitsetextheading),
      setextHeadingLineSequence: onexitsetextheadinglinesequence,
      setextHeadingText: onexitsetextheadingtext,
      strong: closer(),
      thematicBreak: closer()
    }
  };
  configure(config, (options2 || {}).mdastExtensions || []);
  let data = {};
  return compile;
  function compile(events) {
    let tree = {
      type: "root",
      children: []
    }, context = {
      stack: [tree],
      tokenStack: [],
      config,
      enter,
      exit: exit3,
      buffer: buffer2,
      resume,
      setData,
      getData
    }, listStack = [], index2 = -1;
    for (; ++index2 < events.length; )
      if (events[index2][1].type === "listOrdered" || events[index2][1].type === "listUnordered")
        if (events[index2][0] === "enter")
          listStack.push(index2);
        else {
          let tail = listStack.pop();
          index2 = prepareList(events, tail, index2);
        }
    for (index2 = -1; ++index2 < events.length; ) {
      let handler = config[events[index2][0]];
      own14.call(handler, events[index2][1].type) && handler[events[index2][1].type].call(
        Object.assign(
          {
            sliceSerialize: events[index2][2].sliceSerialize
          },
          context
        ),
        events[index2][1]
      );
    }
    if (context.tokenStack.length > 0) {
      let tail = context.tokenStack[context.tokenStack.length - 1];
      (tail[1] || defaultOnError).call(context, void 0, tail[0]);
    }
    for (tree.position = {
      start: point4(
        events.length > 0 ? events[0][1].start : {
          line: 1,
          column: 1,
          offset: 0
        }
      ),
      end: point4(
        events.length > 0 ? events[events.length - 2][1].end : {
          line: 1,
          column: 1,
          offset: 0
        }
      )
    }, index2 = -1; ++index2 < config.transforms.length; )
      tree = config.transforms[index2](tree) || tree;
    return tree;
  }
  function prepareList(events, start, length) {
    let index2 = start - 1, containerBalance = -1, listSpread = !1, listItem4, lineIndex, firstBlankLineIndex, atMarker;
    for (; ++index2 <= length; ) {
      let event = events[index2];
      if (event[1].type === "listUnordered" || event[1].type === "listOrdered" || event[1].type === "blockQuote" ? (event[0] === "enter" ? containerBalance++ : containerBalance--, atMarker = void 0) : event[1].type === "lineEndingBlank" ? event[0] === "enter" && (listItem4 && !atMarker && !containerBalance && !firstBlankLineIndex && (firstBlankLineIndex = index2), atMarker = void 0) : event[1].type === "linePrefix" || event[1].type === "listItemValue" || event[1].type === "listItemMarker" || event[1].type === "listItemPrefix" || event[1].type === "listItemPrefixWhitespace" || (atMarker = void 0), !containerBalance && event[0] === "enter" && event[1].type === "listItemPrefix" || containerBalance === -1 && event[0] === "exit" && (event[1].type === "listUnordered" || event[1].type === "listOrdered")) {
        if (listItem4) {
          let tailIndex = index2;
          for (lineIndex = void 0; tailIndex--; ) {
            let tailEvent = events[tailIndex];
            if (tailEvent[1].type === "lineEnding" || tailEvent[1].type === "lineEndingBlank") {
              if (tailEvent[0] === "exit")
                continue;
              lineIndex && (events[lineIndex][1].type = "lineEndingBlank", listSpread = !0), tailEvent[1].type = "lineEnding", lineIndex = tailIndex;
            } else if (!(tailEvent[1].type === "linePrefix" || tailEvent[1].type === "blockQuotePrefix" || tailEvent[1].type === "blockQuotePrefixWhitespace" || tailEvent[1].type === "blockQuoteMarker" || tailEvent[1].type === "listItemIndent"))
              break;
          }
          firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex) && (listItem4._spread = !0), listItem4.end = Object.assign(
            {},
            lineIndex ? events[lineIndex][1].start : event[1].end
          ), events.splice(lineIndex || index2, 0, ["exit", listItem4, event[2]]), index2++, length++;
        }
        event[1].type === "listItemPrefix" && (listItem4 = {
          type: "listItem",
          _spread: !1,
          start: Object.assign({}, event[1].start)
        }, events.splice(index2, 0, ["enter", listItem4, event[2]]), index2++, length++, firstBlankLineIndex = void 0, atMarker = !0);
      }
    }
    return events[start][1]._spread = listSpread, length;
  }
  function setData(key2, value) {
    data[key2] = value;
  }
  function getData(key2) {
    return data[key2];
  }
  function opener(create2, and) {
    return open;
    function open(token) {
      enter.call(this, create2(token), token), and && and.call(this, token);
    }
  }
  function buffer2() {
    this.stack.push({
      type: "fragment",
      children: []
    });
  }
  function enter(node2, token, errorHandler) {
    return this.stack[this.stack.length - 1].children.push(node2), this.stack.push(node2), this.tokenStack.push([token, errorHandler]), node2.position = {
      start: point4(token.start)
    }, node2;
  }
  function closer(and) {
    return close;
    function close(token) {
      and && and.call(this, token), exit3.call(this, token);
    }
  }
  function exit3(token, onExitError) {
    let node2 = this.stack.pop(), open = this.tokenStack.pop();
    if (open)
      open[0].type !== token.type && (onExitError ? onExitError.call(this, token, open[0]) : (open[1] || defaultOnError).call(this, token, open[0]));
    else
      throw new Error(
        "Cannot close `" + token.type + "` (" + stringifyPosition({
          start: token.start,
          end: token.end
        }) + "): it\u2019s not open"
      );
    return node2.position.end = point4(token.end), node2;
  }
  function resume() {
    return toString(this.stack.pop());
  }
  function onenterlistordered() {
    setData("expectingFirstListItemValue", !0);
  }
  function onenterlistitemvalue(token) {
    if (getData("expectingFirstListItemValue")) {
      let ancestor = this.stack[this.stack.length - 2];
      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10), setData("expectingFirstListItemValue");
    }
  }
  function onexitcodefencedfenceinfo() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.lang = data2;
  }
  function onexitcodefencedfencemeta() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.meta = data2;
  }
  function onexitcodefencedfence() {
    getData("flowCodeInside") || (this.buffer(), setData("flowCodeInside", !0));
  }
  function onexitcodefenced() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.value = data2.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""), setData("flowCodeInside");
  }
  function onexitcodeindented() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.value = data2.replace(/(\r?\n|\r)$/g, "");
  }
  function onexitdefinitionlabelstring(token) {
    let label = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.label = label, node2.identifier = normalizeIdentifier(
      this.sliceSerialize(token)
    ).toLowerCase();
  }
  function onexitdefinitiontitlestring() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.title = data2;
  }
  function onexitdefinitiondestinationstring() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.url = data2;
  }
  function onexitatxheadingsequence(token) {
    let node2 = this.stack[this.stack.length - 1];
    if (!node2.depth) {
      let depth = this.sliceSerialize(token).length;
      node2.depth = depth;
    }
  }
  function onexitsetextheadingtext() {
    setData("setextHeadingSlurpLineEnding", !0);
  }
  function onexitsetextheadinglinesequence(token) {
    let node2 = this.stack[this.stack.length - 1];
    node2.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2;
  }
  function onexitsetextheading() {
    setData("setextHeadingSlurpLineEnding");
  }
  function onenterdata(token) {
    let node2 = this.stack[this.stack.length - 1], tail = node2.children[node2.children.length - 1];
    (!tail || tail.type !== "text") && (tail = text7(), tail.position = {
      start: point4(token.start)
    }, node2.children.push(tail)), this.stack.push(tail);
  }
  function onexitdata(token) {
    let tail = this.stack.pop();
    tail.value += this.sliceSerialize(token), tail.position.end = point4(token.end);
  }
  function onexitlineending(token) {
    let context = this.stack[this.stack.length - 1];
    if (getData("atHardBreak")) {
      let tail = context.children[context.children.length - 1];
      tail.position.end = point4(token.end), setData("atHardBreak");
      return;
    }
    !getData("setextHeadingSlurpLineEnding") && config.canContainEols.includes(context.type) && (onenterdata.call(this, token), onexitdata.call(this, token));
  }
  function onexithardbreak() {
    setData("atHardBreak", !0);
  }
  function onexithtmlflow() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.value = data2;
  }
  function onexithtmltext() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.value = data2;
  }
  function onexitcodetext() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.value = data2;
  }
  function onexitlink() {
    let node2 = this.stack[this.stack.length - 1];
    if (getData("inReference")) {
      let referenceType = getData("referenceType") || "shortcut";
      node2.type += "Reference", node2.referenceType = referenceType, delete node2.url, delete node2.title;
    } else
      delete node2.identifier, delete node2.label;
    setData("referenceType");
  }
  function onexitimage() {
    let node2 = this.stack[this.stack.length - 1];
    if (getData("inReference")) {
      let referenceType = getData("referenceType") || "shortcut";
      node2.type += "Reference", node2.referenceType = referenceType, delete node2.url, delete node2.title;
    } else
      delete node2.identifier, delete node2.label;
    setData("referenceType");
  }
  function onexitlabeltext(token) {
    let string3 = this.sliceSerialize(token), ancestor = this.stack[this.stack.length - 2];
    ancestor.label = decodeString(string3), ancestor.identifier = normalizeIdentifier(string3).toLowerCase();
  }
  function onexitlabel() {
    let fragment2 = this.stack[this.stack.length - 1], value = this.resume(), node2 = this.stack[this.stack.length - 1];
    if (setData("inReference", !0), node2.type === "link") {
      let children = fragment2.children;
      node2.children = children;
    } else
      node2.alt = value;
  }
  function onexitresourcedestinationstring() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.url = data2;
  }
  function onexitresourcetitlestring() {
    let data2 = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.title = data2;
  }
  function onexitresource() {
    setData("inReference");
  }
  function onenterreference() {
    setData("referenceType", "collapsed");
  }
  function onexitreferencestring(token) {
    let label = this.resume(), node2 = this.stack[this.stack.length - 1];
    node2.label = label, node2.identifier = normalizeIdentifier(
      this.sliceSerialize(token)
    ).toLowerCase(), setData("referenceType", "full");
  }
  function onexitcharacterreferencemarker(token) {
    setData("characterReferenceType", token.type);
  }
  function onexitcharacterreferencevalue(token) {
    let data2 = this.sliceSerialize(token), type = getData("characterReferenceType"), value;
    type ? (value = decodeNumericCharacterReference(
      data2,
      type === "characterReferenceMarkerNumeric" ? 10 : 16
    ), setData("characterReferenceType")) : value = decodeNamedCharacterReference(data2);
    let tail = this.stack.pop();
    tail.value += value, tail.position.end = point4(token.end);
  }
  function onexitautolinkprotocol(token) {
    onexitdata.call(this, token);
    let node2 = this.stack[this.stack.length - 1];
    node2.url = this.sliceSerialize(token);
  }
  function onexitautolinkemail(token) {
    onexitdata.call(this, token);
    let node2 = this.stack[this.stack.length - 1];
    node2.url = "mailto:" + this.sliceSerialize(token);
  }
  function blockQuote2() {
    return {
      type: "blockquote",
      children: []
    };
  }
  function codeFlow() {
    return {
      type: "code",
      lang: null,
      meta: null,
      value: ""
    };
  }
  function codeText2() {
    return {
      type: "inlineCode",
      value: ""
    };
  }
  function definition2() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function emphasis2() {
    return {
      type: "emphasis",
      children: []
    };
  }
  function heading2() {
    return {
      type: "heading",
      depth: void 0,
      children: []
    };
  }
  function hardBreak2() {
    return {
      type: "break"
    };
  }
  function html6() {
    return {
      type: "html",
      value: ""
    };
  }
  function image2() {
    return {
      type: "image",
      title: null,
      url: "",
      alt: null
    };
  }
  function link2() {
    return {
      type: "link",
      title: null,
      url: "",
      children: []
    };
  }
  function list3(token) {
    return {
      type: "list",
      ordered: token.type === "listOrdered",
      start: null,
      spread: token._spread,
      children: []
    };
  }
  function listItem3(token) {
    return {
      type: "listItem",
      spread: token._spread,
      checked: null,
      children: []
    };
  }
  function paragraph2() {
    return {
      type: "paragraph",
      children: []
    };
  }
  function strong2() {
    return {
      type: "strong",
      children: []
    };
  }
  function text7() {
    return {
      type: "text",
      value: ""
    };
  }
  function thematicBreak3() {
    return {
      type: "thematicBreak"
    };
  }
}
function point4(d) {
  return {
    line: d.line,
    column: d.column,
    offset: d.offset
  };
}
function configure(combined, extensions) {
  let index2 = -1;
  for (; ++index2 < extensions.length; ) {
    let value = extensions[index2];
    Array.isArray(value) ? configure(combined, value) : extension(combined, value);
  }
}
function extension(combined, extension2) {
  let key2;
  for (key2 in extension2)
    if (own14.call(extension2, key2)) {
      if (key2 === "canContainEols") {
        let right = extension2[key2];
        right && combined[key2].push(...right);
      } else if (key2 === "transforms") {
        let right = extension2[key2];
        right && combined[key2].push(...right);
      } else if (key2 === "enter" || key2 === "exit") {
        let right = extension2[key2];
        right && Object.assign(combined[key2], right);
      }
    }
}
function defaultOnError(left, right) {
  throw left ? new Error(
    "Cannot close `" + left.type + "` (" + stringifyPosition({
      start: left.start,
      end: left.end
    }) + "): a different token (`" + right.type + "`, " + stringifyPosition({
      start: right.start,
      end: right.end
    }) + ") is open"
  ) : new Error(
    "Cannot close document, a token (`" + right.type + "`, " + stringifyPosition({
      start: right.start,
      end: right.end
    }) + ") is still open"
  );
}

// node_modules/remark-parse/lib/index.js
function remarkParse(options2) {
  Object.assign(this, { Parser: (doc) => {
    let settings = this.data("settings");
    return fromMarkdown(
      doc,
      Object.assign({}, settings, options2, {
        extensions: this.data("micromarkExtensions") || [],
        mdastExtensions: this.data("fromMarkdownExtensions") || []
      })
    );
  } });
}

// node_modules/remark-parse/index.js
var remark_parse_default = remarkParse;

// node_modules/mdast-util-to-hast/lib/handlers/blockquote.js
function blockquote(state, node2) {
  let result = {
    type: "element",
    tagName: "blockquote",
    properties: {},
    children: state.wrap(state.all(node2), !0)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/break.js
function hardBreak(state, node2) {
  let result = { type: "element", tagName: "br", properties: {}, children: [] };
  return state.patch(node2, result), [state.applyData(node2, result), { type: "text", value: `
` }];
}

// node_modules/mdast-util-to-hast/lib/handlers/code.js
function code2(state, node2) {
  let value = node2.value ? node2.value + `
` : "", lang = node2.lang ? node2.lang.match(/^[^ \t]+(?=[ \t]|$)/) : null, properties = {};
  lang && (properties.className = ["language-" + lang]);
  let result = {
    type: "element",
    tagName: "code",
    properties,
    children: [{ type: "text", value }]
  };
  return node2.meta && (result.data = { meta: node2.meta }), state.patch(node2, result), result = state.applyData(node2, result), result = { type: "element", tagName: "pre", properties: {}, children: [result] }, state.patch(node2, result), result;
}

// node_modules/mdast-util-to-hast/lib/handlers/delete.js
function strikethrough(state, node2) {
  let result = {
    type: "element",
    tagName: "del",
    properties: {},
    children: state.all(node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/emphasis.js
function emphasis(state, node2) {
  let result = {
    type: "element",
    tagName: "em",
    properties: {},
    children: state.all(node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js
function footnoteReference2(state, node2) {
  let id = String(node2.identifier).toUpperCase(), safeId = normalizeUri(id.toLowerCase()), index2 = state.footnoteOrder.indexOf(id), counter;
  index2 === -1 ? (state.footnoteOrder.push(id), state.footnoteCounts[id] = 1, counter = state.footnoteOrder.length) : (state.footnoteCounts[id]++, counter = index2 + 1);
  let reuseCounter = state.footnoteCounts[id], link2 = {
    type: "element",
    tagName: "a",
    properties: {
      href: "#" + state.clobberPrefix + "fn-" + safeId,
      id: state.clobberPrefix + "fnref-" + safeId + (reuseCounter > 1 ? "-" + reuseCounter : ""),
      dataFootnoteRef: !0,
      ariaDescribedBy: ["footnote-label"]
    },
    children: [{ type: "text", value: String(counter) }]
  };
  state.patch(node2, link2);
  let sup = {
    type: "element",
    tagName: "sup",
    properties: {},
    children: [link2]
  };
  return state.patch(node2, sup), state.applyData(node2, sup);
}

// node_modules/mdast-util-to-hast/lib/handlers/footnote.js
function footnote(state, node2) {
  let footnoteById = state.footnoteById, no = 1;
  for (; no in footnoteById; )
    no++;
  let identifier = String(no);
  return footnoteById[identifier] = {
    type: "footnoteDefinition",
    identifier,
    children: [{ type: "paragraph", children: node2.children }],
    position: node2.position
  }, footnoteReference2(state, {
    type: "footnoteReference",
    identifier,
    position: node2.position
  });
}

// node_modules/mdast-util-to-hast/lib/handlers/heading.js
function heading(state, node2) {
  let result = {
    type: "element",
    tagName: "h" + node2.depth,
    properties: {},
    children: state.all(node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/html.js
function html5(state, node2) {
  if (state.dangerous) {
    let result = { type: "raw", value: node2.value };
    return state.patch(node2, result), state.applyData(node2, result);
  }
  return null;
}

// node_modules/mdast-util-to-hast/lib/revert.js
function revert(state, node2) {
  let subtype = node2.referenceType, suffix = "]";
  if (subtype === "collapsed" ? suffix += "[]" : subtype === "full" && (suffix += "[" + (node2.label || node2.identifier) + "]"), node2.type === "imageReference")
    return { type: "text", value: "![" + node2.alt + suffix };
  let contents = state.all(node2), head2 = contents[0];
  head2 && head2.type === "text" ? head2.value = "[" + head2.value : contents.unshift({ type: "text", value: "[" });
  let tail = contents[contents.length - 1];
  return tail && tail.type === "text" ? tail.value += suffix : contents.push({ type: "text", value: suffix }), contents;
}

// node_modules/mdast-util-to-hast/lib/handlers/image-reference.js
function imageReference(state, node2) {
  let def = state.definition(node2.identifier);
  if (!def)
    return revert(state, node2);
  let properties = { src: normalizeUri(def.url || ""), alt: node2.alt };
  def.title !== null && def.title !== void 0 && (properties.title = def.title);
  let result = { type: "element", tagName: "img", properties, children: [] };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/image.js
function image(state, node2) {
  let properties = { src: normalizeUri(node2.url) };
  node2.alt !== null && node2.alt !== void 0 && (properties.alt = node2.alt), node2.title !== null && node2.title !== void 0 && (properties.title = node2.title);
  let result = { type: "element", tagName: "img", properties, children: [] };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/inline-code.js
function inlineCode2(state, node2) {
  let text7 = { type: "text", value: node2.value.replace(/\r?\n|\r/g, " ") };
  state.patch(node2, text7);
  let result = {
    type: "element",
    tagName: "code",
    properties: {},
    children: [text7]
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/link-reference.js
function linkReference(state, node2) {
  let def = state.definition(node2.identifier);
  if (!def)
    return revert(state, node2);
  let properties = { href: normalizeUri(def.url || "") };
  def.title !== null && def.title !== void 0 && (properties.title = def.title);
  let result = {
    type: "element",
    tagName: "a",
    properties,
    children: state.all(node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/link.js
function link(state, node2) {
  let properties = { href: normalizeUri(node2.url) };
  node2.title !== null && node2.title !== void 0 && (properties.title = node2.title);
  let result = {
    type: "element",
    tagName: "a",
    properties,
    children: state.all(node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/list-item.js
function listItem2(state, node2, parent) {
  let results = state.all(node2), loose = parent ? listLoose(parent) : listItemLoose(node2), properties = {}, children = [];
  if (typeof node2.checked == "boolean") {
    let head2 = results[0], paragraph2;
    head2 && head2.type === "element" && head2.tagName === "p" ? paragraph2 = head2 : (paragraph2 = { type: "element", tagName: "p", properties: {}, children: [] }, results.unshift(paragraph2)), paragraph2.children.length > 0 && paragraph2.children.unshift({ type: "text", value: " " }), paragraph2.children.unshift({
      type: "element",
      tagName: "input",
      properties: { type: "checkbox", checked: node2.checked, disabled: !0 },
      children: []
    }), properties.className = ["task-list-item"];
  }
  let index2 = -1;
  for (; ++index2 < results.length; ) {
    let child = results[index2];
    (loose || index2 !== 0 || child.type !== "element" || child.tagName !== "p") && children.push({ type: "text", value: `
` }), child.type === "element" && child.tagName === "p" && !loose ? children.push(...child.children) : children.push(child);
  }
  let tail = results[results.length - 1];
  tail && (loose || tail.type !== "element" || tail.tagName !== "p") && children.push({ type: "text", value: `
` });
  let result = { type: "element", tagName: "li", properties, children };
  return state.patch(node2, result), state.applyData(node2, result);
}
function listLoose(node2) {
  let loose = !1;
  if (node2.type === "list") {
    loose = node2.spread || !1;
    let children = node2.children, index2 = -1;
    for (; !loose && ++index2 < children.length; )
      loose = listItemLoose(children[index2]);
  }
  return loose;
}
function listItemLoose(node2) {
  let spread = node2.spread;
  return spread ?? node2.children.length > 1;
}

// node_modules/mdast-util-to-hast/lib/handlers/list.js
function list2(state, node2) {
  let properties = {}, results = state.all(node2), index2 = -1;
  for (typeof node2.start == "number" && node2.start !== 1 && (properties.start = node2.start); ++index2 < results.length; ) {
    let child = results[index2];
    if (child.type === "element" && child.tagName === "li" && child.properties && Array.isArray(child.properties.className) && child.properties.className.includes("task-list-item")) {
      properties.className = ["contains-task-list"];
      break;
    }
  }
  let result = {
    type: "element",
    tagName: node2.ordered ? "ol" : "ul",
    properties,
    children: state.wrap(results, !0)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/paragraph.js
function paragraph(state, node2) {
  let result = {
    type: "element",
    tagName: "p",
    properties: {},
    children: state.all(node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/root.js
function root3(state, node2) {
  let result = { type: "root", children: state.wrap(state.all(node2)) };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/strong.js
function strong(state, node2) {
  let result = {
    type: "element",
    tagName: "strong",
    properties: {},
    children: state.all(node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/table.js
function table(state, node2) {
  let rows = state.all(node2), firstRow = rows.shift(), tableContent = [];
  if (firstRow) {
    let head2 = {
      type: "element",
      tagName: "thead",
      properties: {},
      children: state.wrap([firstRow], !0)
    };
    state.patch(node2.children[0], head2), tableContent.push(head2);
  }
  if (rows.length > 0) {
    let body3 = {
      type: "element",
      tagName: "tbody",
      properties: {},
      children: state.wrap(rows, !0)
    }, start = pointStart(node2.children[1]), end = pointEnd(node2.children[node2.children.length - 1]);
    start.line && end.line && (body3.position = { start, end }), tableContent.push(body3);
  }
  let result = {
    type: "element",
    tagName: "table",
    properties: {},
    children: state.wrap(tableContent, !0)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/table-row.js
function tableRow(state, node2, parent) {
  let siblings2 = parent ? parent.children : void 0, tagName = (siblings2 ? siblings2.indexOf(node2) : 1) === 0 ? "th" : "td", align = parent && parent.type === "table" ? parent.align : void 0, length = align ? align.length : node2.children.length, cellIndex = -1, cells2 = [];
  for (; ++cellIndex < length; ) {
    let cell = node2.children[cellIndex], properties = {}, alignValue = align ? align[cellIndex] : void 0;
    alignValue && (properties.align = alignValue);
    let result2 = { type: "element", tagName, properties, children: [] };
    cell && (result2.children = state.all(cell), state.patch(cell, result2), result2 = state.applyData(node2, result2)), cells2.push(result2);
  }
  let result = {
    type: "element",
    tagName: "tr",
    properties: {},
    children: state.wrap(cells2, !0)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/table-cell.js
function tableCell(state, node2) {
  let result = {
    type: "element",
    tagName: "td",
    properties: {},
    children: state.all(node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/trim-lines/index.js
function trimLines(value) {
  let source = String(value), search3 = /\r?\n|\r/g, match = search3.exec(source), last = 0, lines = [];
  for (; match; )
    lines.push(
      trimLine(source.slice(last, match.index), last > 0, !0),
      match[0]
    ), last = match.index + match[0].length, match = search3.exec(source);
  return lines.push(trimLine(source.slice(last), last > 0, !1)), lines.join("");
}
function trimLine(value, start, end) {
  let startIndex = 0, endIndex = value.length;
  if (start) {
    let code3 = value.codePointAt(startIndex);
    for (; code3 === 9 || code3 === 32; )
      startIndex++, code3 = value.codePointAt(startIndex);
  }
  if (end) {
    let code3 = value.codePointAt(endIndex - 1);
    for (; code3 === 9 || code3 === 32; )
      endIndex--, code3 = value.codePointAt(endIndex - 1);
  }
  return endIndex > startIndex ? value.slice(startIndex, endIndex) : "";
}

// node_modules/mdast-util-to-hast/lib/handlers/text.js
function text6(state, node2) {
  let result = { type: "text", value: trimLines(String(node2.value)) };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js
function thematicBreak2(state, node2) {
  let result = {
    type: "element",
    tagName: "hr",
    properties: {},
    children: []
  };
  return state.patch(node2, result), state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/index.js
var handlers = {
  blockquote,
  break: hardBreak,
  code: code2,
  delete: strikethrough,
  emphasis,
  footnoteReference: footnoteReference2,
  footnote,
  heading,
  html: html5,
  imageReference,
  image,
  inlineCode: inlineCode2,
  linkReference,
  link,
  listItem: listItem2,
  list: list2,
  paragraph,
  root: root3,
  strong,
  table,
  tableCell,
  tableRow,
  text: text6,
  thematicBreak: thematicBreak2,
  toml: ignore,
  yaml: ignore,
  definition: ignore,
  footnoteDefinition: ignore
};
function ignore() {
  return null;
}

// node_modules/mdast-util-to-hast/lib/state.js
init_unist_util_visit();

// node_modules/unist-util-generated/lib/index.js
function generated(node2) {
  return !node2 || !node2.position || !node2.position.start || !node2.position.start.line || !node2.position.start.column || !node2.position.end || !node2.position.end.line || !node2.position.end.column;
}

// node_modules/mdast-util-to-hast/lib/state.js
var own15 = {}.hasOwnProperty;
function createState(tree, options2) {
  let settings = options2 || {}, dangerous2 = settings.allowDangerousHtml || !1, footnoteById = {};
  return state.dangerous = dangerous2, state.clobberPrefix = settings.clobberPrefix === void 0 || settings.clobberPrefix === null ? "user-content-" : settings.clobberPrefix, state.footnoteLabel = settings.footnoteLabel || "Footnotes", state.footnoteLabelTagName = settings.footnoteLabelTagName || "h2", state.footnoteLabelProperties = settings.footnoteLabelProperties || {
    className: ["sr-only"]
  }, state.footnoteBackLabel = settings.footnoteBackLabel || "Back to content", state.unknownHandler = settings.unknownHandler, state.passThrough = settings.passThrough, state.handlers = { ...handlers, ...settings.handlers }, state.definition = definitions(tree), state.footnoteById = footnoteById, state.footnoteOrder = [], state.footnoteCounts = {}, state.patch = patch3, state.applyData = applyData, state.one = oneBound, state.all = allBound, state.wrap = wrap3, state.augment = augment, visit(tree, "footnoteDefinition", (definition2) => {
    let id = String(definition2.identifier).toUpperCase();
    own15.call(footnoteById, id) || (footnoteById[id] = definition2);
  }), state;
  function augment(left, right) {
    if (left && "data" in left && left.data) {
      let data = left.data;
      data.hName && (right.type !== "element" && (right = {
        type: "element",
        tagName: "",
        properties: {},
        children: []
      }), right.tagName = data.hName), right.type === "element" && data.hProperties && (right.properties = { ...right.properties, ...data.hProperties }), "children" in right && right.children && data.hChildren && (right.children = data.hChildren);
    }
    if (left) {
      let ctx = "type" in left ? left : { position: left };
      generated(ctx) || (right.position = { start: pointStart(ctx), end: pointEnd(ctx) });
    }
    return right;
  }
  function state(node2, tagName, props, children) {
    return Array.isArray(props) && (children = props, props = {}), augment(node2, {
      type: "element",
      tagName,
      properties: props || {},
      children: children || []
    });
  }
  function oneBound(node2, parent) {
    return one5(state, node2, parent);
  }
  function allBound(parent) {
    return all5(state, parent);
  }
}
function patch3(from, to) {
  from.position && (to.position = position3(from));
}
function applyData(from, to) {
  let result = to;
  if (from && from.data) {
    let hName = from.data.hName, hChildren = from.data.hChildren, hProperties = from.data.hProperties;
    typeof hName == "string" && (result.type === "element" ? result.tagName = hName : result = {
      type: "element",
      tagName: hName,
      properties: {},
      children: []
    }), result.type === "element" && hProperties && (result.properties = { ...result.properties, ...hProperties }), "children" in result && result.children && hChildren !== null && hChildren !== void 0 && (result.children = hChildren);
  }
  return result;
}
function one5(state, node2, parent) {
  let type = node2 && node2.type;
  if (!type)
    throw new Error("Expected node, got `" + node2 + "`");
  return own15.call(state.handlers, type) ? state.handlers[type](state, node2, parent) : state.passThrough && state.passThrough.includes(type) ? "children" in node2 ? { ...node2, children: all5(state, node2) } : node2 : state.unknownHandler ? state.unknownHandler(state, node2, parent) : defaultUnknownHandler(state, node2);
}
function all5(state, parent) {
  let values = [];
  if ("children" in parent) {
    let nodes = parent.children, index2 = -1;
    for (; ++index2 < nodes.length; ) {
      let result = one5(state, nodes[index2], parent);
      if (result) {
        if (index2 && nodes[index2 - 1].type === "break" && (!Array.isArray(result) && result.type === "text" && (result.value = result.value.replace(/^\s+/, "")), !Array.isArray(result) && result.type === "element")) {
          let head2 = result.children[0];
          head2 && head2.type === "text" && (head2.value = head2.value.replace(/^\s+/, ""));
        }
        Array.isArray(result) ? values.push(...result) : values.push(result);
      }
    }
  }
  return values;
}
function defaultUnknownHandler(state, node2) {
  let data = node2.data || {}, result = "value" in node2 && !(own15.call(data, "hProperties") || own15.call(data, "hChildren")) ? { type: "text", value: node2.value } : {
    type: "element",
    tagName: "div",
    properties: {},
    children: all5(state, node2)
  };
  return state.patch(node2, result), state.applyData(node2, result);
}
function wrap3(nodes, loose) {
  let result = [], index2 = -1;
  for (loose && result.push({ type: "text", value: `
` }); ++index2 < nodes.length; )
    index2 && result.push({ type: "text", value: `
` }), result.push(nodes[index2]);
  return loose && nodes.length > 0 && result.push({ type: "text", value: `
` }), result;
}

// node_modules/mdast-util-to-hast/lib/footer.js
function footer(state) {
  let listItems = [], index2 = -1;
  for (; ++index2 < state.footnoteOrder.length; ) {
    let def = state.footnoteById[state.footnoteOrder[index2]];
    if (!def)
      continue;
    let content3 = state.all(def), id = String(def.identifier).toUpperCase(), safeId = normalizeUri(id.toLowerCase()), referenceIndex = 0, backReferences = [];
    for (; ++referenceIndex <= state.footnoteCounts[id]; ) {
      let backReference = {
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + state.clobberPrefix + "fnref-" + safeId + (referenceIndex > 1 ? "-" + referenceIndex : ""),
          dataFootnoteBackref: !0,
          className: ["data-footnote-backref"],
          ariaLabel: state.footnoteBackLabel
        },
        children: [{ type: "text", value: "\u21A9" }]
      };
      referenceIndex > 1 && backReference.children.push({
        type: "element",
        tagName: "sup",
        children: [{ type: "text", value: String(referenceIndex) }]
      }), backReferences.length > 0 && backReferences.push({ type: "text", value: " " }), backReferences.push(backReference);
    }
    let tail = content3[content3.length - 1];
    if (tail && tail.type === "element" && tail.tagName === "p") {
      let tailTail = tail.children[tail.children.length - 1];
      tailTail && tailTail.type === "text" ? tailTail.value += " " : tail.children.push({ type: "text", value: " " }), tail.children.push(...backReferences);
    } else
      content3.push(...backReferences);
    let listItem3 = {
      type: "element",
      tagName: "li",
      properties: { id: state.clobberPrefix + "fn-" + safeId },
      children: state.wrap(content3, !0)
    };
    state.patch(def, listItem3), listItems.push(listItem3);
  }
  if (listItems.length !== 0)
    return {
      type: "element",
      tagName: "section",
      properties: { dataFootnotes: !0, className: ["footnotes"] },
      children: [
        {
          type: "element",
          tagName: state.footnoteLabelTagName,
          properties: {
            ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),
            id: "footnote-label"
          },
          children: [{ type: "text", value: state.footnoteLabel }]
        },
        { type: "text", value: `
` },
        {
          type: "element",
          tagName: "ol",
          properties: {},
          children: state.wrap(listItems, !0)
        },
        { type: "text", value: `
` }
      ]
    };
}

// node_modules/mdast-util-to-hast/lib/index.js
function toHast(tree, options2) {
  let state = createState(tree, options2), node2 = state.one(tree, null), foot = footer(state);
  return foot && node2.children.push({ type: "text", value: `
` }, foot), Array.isArray(node2) ? { type: "root", children: node2 } : node2;
}

// node_modules/remark-rehype/lib/index.js
var remarkRehype = function(destination, options2) {
  return destination && "run" in destination ? bridge(destination, options2) : mutate(destination || options2);
}, lib_default = remarkRehype;
function bridge(destination, options2) {
  return (node2, file, next) => {
    destination.run(toHast(node2, options2), file, (error) => {
      next(error);
    });
  };
}
function mutate(options2) {
  return (node2) => toHast(node2, options2);
}

// node_modules/remark-unwrap-images/index.js
init_unist_util_visit();
var unknown3 = 1, containsImage = 2, containsOther = 3;
function remarkUnwrapImages() {
  return (tree) => {
    visit(tree, "paragraph", (node2, index2, parent) => {
      if (parent && typeof index2 == "number" && applicable(node2) === containsImage)
        return parent.children.splice(index2, 1, ...node2.children), [SKIP, index2];
    });
  };
}
function applicable(node2, inLink) {
  let image2 = unknown3, index2 = -1;
  for (; ++index2 < node2.children.length; ) {
    let child = node2.children[index2];
    if (!whitespace(child))
      if (child.type === "image" || child.type === "imageReference")
        image2 = containsImage;
      else if (!inLink && (child.type === "link" || child.type === "linkReference")) {
        let linkResult = applicable(child, !0);
        if (linkResult === containsOther)
          return containsOther;
        linkResult === containsImage && (image2 = containsImage);
      } else
        return containsOther;
  }
  return image2;
}

// src/transformers/codesandbox/codesandbox.ts
var shouldTransform = (url) => url.includes("codesandbox.io"), getHTML = (string3) => `
        <iframe
            class="aspect-video w-full rounded my-8 h-[500px]"
            src="${string3.replace("/s/", "/embed/")}"
            frameborder="0"
            allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
            sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
        >
        </iframe>
    `, codesandboxTransformer = {
  name: "codesandboxTransformer",
  shouldTransform,
  getHTML
};

// src/transformers/twitch/twitch.ts
var shouldTransform2 = (url) => url.includes("twitch.tv"), getHTML2 = (string3) => {
  let { pathname } = new URL(string3), paths = pathname.split("/").filter((e) => e), length = paths.length, id = paths[length - 1], src;
  if (isChannel(string3))
    src = `https://player.twitch.tv?channel=${id}`;
  else if (isVideo(string3))
    src = `https://player.twitch.tv?video=${id}`;
  else if (isClip(string3))
    src = `https://clips.twitch.tv/embed?clip=${id}`;
  else
    return '<div class="twitch"></div>';
  return `
        <iframe
            class="aspect-video w-full rounded my-8"
            src="${src}&parent=bradgarropy.com"
            frameborder="0"
            scrolling="no"
            allowfullscreen
        >
        </iframe>
    `;
}, isChannel = (url) => new RegExp(/^https?:\/\/(www.)?twitch.tv\/\w*$/).test(url), isVideo = (url) => new RegExp(/^https?:\/\/(www.)?twitch.tv\/videos\/\w*$/).test(url), isClip = (url) => {
  let domainRegex = new RegExp(
    /^https?:\/\/(www.)?twitch.tv\/\w*\/clip\/\w*$/
  ), subdomainRegex = new RegExp(
    /^https?:\/\/(www.)?clips.twitch.tv\/\w*$/
  );
  return domainRegex.test(url) || subdomainRegex.test(url);
}, twitchTransformer = {
  name: "twitchTransformer",
  shouldTransform: shouldTransform2,
  getHTML: getHTML2
};

// src/transformers/twitter/twitter.ts
var import_http3 = __toESM(require_dist2()), shouldTransform3 = (url) => url.includes("twitter.com"), getHTML3 = async (string3) => `
        <div class="grid justify-center">
            ${(await import_http3.http.get(
  `https://publish.twitter.com/oembed?url=${string3}`
)).html}
        </div>
    `, twitterTransformer = {
  name: "twitterTransformer",
  shouldTransform: shouldTransform3,
  getHTML: getHTML3
};

// src/transformers/youtube/youtube.ts
var shouldTransform4 = (url) => url.includes("youtu.be"), getHTML4 = (string3) => {
  let { pathname, searchParams } = new URL(string3), id = pathname.slice(1), start = searchParams.get("t"), src = `https://www.youtube-nocookie.com/embed/${id}`;
  return start && (src = `${src}?start=${start}`), `
        <iframe
            class="aspect-video w-full rounded my-8"
            title="${id}"
            src="${src}"
            frameborder="0"
            allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
        >
        </iframe>
    `;
}, youtubeTransformer = {
  name: "youtubeTransformer",
  shouldTransform: shouldTransform4,
  getHTML: getHTML4
};

// src/utils/markdown.ts
var getMarkdownBySlug = async (slug) => {
  let nowPath = import_path2.default.join(process.cwd(), `content/pages/${slug}.md`), file = import_gray_matter.default.read(nowPath);
  return {
    html: await transformMarkdown(file.content),
    frontmatter: file.data
  };
}, transformMarkdown = async (markdown) => (await unified().use(remark_parse_default).use(remarkGfm).use(remarkUnwrapImages).use(remarkInlineLinks).use(import_core4.default, {
  transformers: [
    codesandboxTransformer,
    twitchTransformer,
    twitterTransformer,
    youtubeTransformer
  ]
}).use(lib_default, { allowDangerousHtml: !0 }).use(rehypeExternalLinks, {
  target: "_blank",
  rel: ["noopener", "noreferrer"]
}).use(rehypeCloudinaryImageSize).use(rehypeImageLinks).use(rehypeRaw).use(rehypeStringify).process(markdown)).toString();

// src/utils/posts.ts
var icons = {
  coding: "\u{1F4BB}",
  tech: "\u{1F50C}",
  life: "\u{1F60E}"
}, getLatestPosts = () => {
  let postsPath = import_path3.default.join(process.cwd(), "content/posts"), posts = import_fs.default.readdirSync(postsPath).reduce((posts2, slug) => {
    let postPath = import_path3.default.join(process.cwd(), `content/posts/${slug}`), post = import_gray_matter2.default.read(postPath).data;
    return [...posts2, post];
  }, []);
  return sortPostsByDate(posts).slice(0, 3);
}, getAllPosts = () => {
  let postsPath = import_path3.default.join(process.cwd(), "content/posts"), posts = import_fs.default.readdirSync(postsPath).reduce((posts2, slug) => {
    let postPath = import_path3.default.join(process.cwd(), `content/posts/${slug}`), post = import_gray_matter2.default.read(postPath).data;
    return [...posts2, post];
  }, []);
  return sortPostsByDate(posts);
}, getPostBySlug = async (slug) => {
  let postPath = import_path3.default.join(process.cwd(), `content/posts/${slug}.md`), file = import_gray_matter2.default.read(postPath);
  return {
    html: await transformMarkdown(file.content),
    frontmatter: file.data
  };
}, getTopic = (name) => ({
  name,
  icon: icons[name]
});
var getPostsByTopic = (topic) => {
  let postsPath = import_path3.default.join(process.cwd(), "content/posts"), topicPosts = import_fs.default.readdirSync(postsPath).reduce((posts2, slug) => {
    let postPath = import_path3.default.join(process.cwd(), `content/posts/${slug}`), post = import_gray_matter2.default.read(postPath).data;
    return [...posts2, post];
  }, []).filter((post) => post.topic === topic);
  return sortPostsByDate(topicPosts);
}, sortPostsByDate = (posts) => {
  let sortedPosts = [...posts];
  return sortedPosts.sort((a, b) => {
    let aDate = new Date(a.date), bDate = new Date(b.date);
    return aDate < bDate ? 1 : aDate > bDate ? -1 : 0;
  }), sortedPosts;
};

// src/routes/topic/$name.tsx
var import_jsx_runtime42 = __toESM(require_jsx_runtime()), meta2 = ({ data }) => {
  let { topic } = data;
  return {
    title: `${topic.icon} ${topic.name}`
  };
}, loader = ({ params }) => {
  let name = params.name;
  if (!name)
    throw new import_node3.Response("Not found", { status: 404 });
  let topic = getTopic(name), posts = getPostsByTopic(topic.name);
  return (0, import_node2.json)({
    topic,
    posts
  });
}, TopicRoute = () => {
  let { topic, posts } = (0, import_react17.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)(Layout_default2, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(TopicMeta_default2, { topic }),
    /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(PostList_default2, { posts })
  ] });
}, name_default = TopicRoute;

// src/routes/api/twitch.ts
var twitch_exports = {};
__export(twitch_exports, {
  loader: () => loader2
});
var import_http4 = __toESM(require_dist2()), import_node4 = __toESM(require_dist4()), loader2 = async () => {
  let clientId = process.env.TWITCH_CLIENT_ID, clientSecret = process.env.TWITCH_CLIENT_SECRET, { access_token } = await import_http4.http.post(
    `https://id.twitch.tv/oauth2/token?client_id=${clientId}&client_secret=${clientSecret}&grant_type=client_credentials`
  ), channel = (await import_http4.http.get(
    "https://api.twitch.tv/helix/search/channels?query=bradgarropy",
    {
      headers: {
        authorization: `Bearer ${access_token}`,
        "client-id": clientId
      }
    }
  )).data.find(
    (channel2) => channel2.broadcaster_login === "bradgarropy"
  );
  if (!channel)
    return (0, import_node4.json)("Not found", { status: 404 });
  let channelStatus = { isLive: channel.is_live };
  return (0, import_node4.json)(channelStatus);
};

// src/routes/blog/$slug.tsx
var slug_exports = {};
__export(slug_exports, {
  default: () => slug_default,
  loader: () => loader3,
  meta: () => meta3
});
var import_node5 = __toESM(require_dist4()), import_node6 = __toESM(require_dist4()), import_react20 = __toESM(require_dist());

// src/components/Markdown/Markdown.tsx
var import_classnames = __toESM(require_classnames()), import_jsx_runtime43 = __toESM(require_jsx_runtime()), Markdown = ({ content: content3, className }) => /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(
  "div",
  {
    className: (0, import_classnames.default)(
      "prose-md prose-[iframe]:w-100 prose prose-purple max-w-3xl dark:prose-invert prose-a:font-normal prose-a:text-gray-700 prose-a:no-underline prose-a:shadow-link prose-a:transition prose-a:duration-300 hover:prose-a:shadow-link-hover prose-code:rounded prose-code:bg-[#2d2b55] prose-code:py-1 prose-code:px-2 prose-code:font-normal prose-code:text-[#fad000] before:prose-code:content-none after:prose-code:content-none prose-pre:bg-[#2D2B55] prose-img:mx-auto prose-img:rounded dark:prose-a:text-gray-300",
      className
    ),
    children: content3
  }
), Markdown_default = Markdown;

// src/components/PostBody/PostBody.tsx
var import_react18 = __toESM(require_react()), import_jsx_runtime44 = __toESM(require_jsx_runtime()), PostBody = ({ html: html6 }) => {
  (0, import_react18.useEffect)(() => {
    var _a2;
    (_a2 = window.twttr) == null || _a2.widgets.load();
  }, []);
  let markdown = useMarkdown_default(html6);
  return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Markdown_default, { className: "my-9", content: markdown });
}, PostBody_default = PostBody;

// src/components/PostBody/index.ts
var PostBody_default2 = PostBody_default;

// src/components/LinkButton/LinkButton.tsx
var import_react19 = __toESM(require_dist()), import_classnames2 = __toESM(require_classnames()), import_jsx_runtime45 = __toESM(require_jsx_runtime()), LinkButton = ({
  to,
  reverse = !1,
  disabled = !1,
  ...props
}) => {
  let classes = (0, import_classnames2.default)(
    "transition duration-300 dark:text-black inline-block bg-white py-2 px-3 rounded border-2 border-black shadow-box dark:shadow-box-white mb-1",
    {
      "shadow-reverse-box dark:shadow-reverse-box-white": reverse,
      "text-gray-300 dark:text-gray-300 border-gray-300 shadow-gray-300": disabled,
      "hover:text-inherit hover:shadow-none hover:dark:shadow-none": !disabled
    }
  );
  return disabled ? /* @__PURE__ */ (0, import_jsx_runtime45.jsx)("span", { className: classes, children: props.children }) : /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(import_react19.Link, { to, className: classes, children: props.children });
}, LinkButton_default = LinkButton;

// src/components/LinkButton/index.ts
var LinkButton_default2 = LinkButton_default;

// src/components/PostComments/PostComments.tsx
var import_jsx_runtime46 = __toESM(require_jsx_runtime()), PostComments = ({ slug }) => {
  let meta13 = useMeta_default(), discuss = `https://twitter.com/search?q=${encodeURIComponent(`${meta13.siteUrl}/blog/${slug}`)}`;
  return /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(LinkButton_default2, { to: discuss, children: "\u{1F4AC} discuss on twitter" });
}, PostComments_default = PostComments;

// src/components/PostComments/index.ts
var PostComments_default2 = PostComments_default;

// src/components/PostEdit/PostEdit.tsx
var import_jsx_runtime47 = __toESM(require_jsx_runtime()), PostEdit = ({ slug }) => {
  let edit = `https://github.com/bradgarropy/bradgarropy.com/edit/master/content/posts/${slug}.md`;
  return /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(LinkButton_default2, { to: edit, reverse: !0, children: "\u{1F4BB} edit on github" });
}, PostEdit_default = PostEdit;

// src/components/PostEdit/index.ts
var PostEdit_default2 = PostEdit_default;

// src/components/PostFooter/PostFooter.tsx
var import_jsx_runtime48 = __toESM(require_jsx_runtime()), PostFooter = ({ slug }) => /* @__PURE__ */ (0, import_jsx_runtime48.jsxs)("section", { className: "grid grid-flow-col justify-between", children: [
  /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(PostComments_default2, { slug }),
  /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(PostEdit_default2, { slug })
] }), PostFooter_default = PostFooter;

// src/components/PostFooter/index.ts
var PostFooter_default2 = PostFooter_default;

// src/components/Post/Post.tsx
var import_jsx_runtime49 = __toESM(require_jsx_runtime()), Post = ({ post }) => {
  let { html: html6, frontmatter } = post, { slug, title, date, topic } = frontmatter;
  return /* @__PURE__ */ (0, import_jsx_runtime49.jsxs)("article", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(PostHeader_default2, { date, topic, title }),
    /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(PostBody_default2, { html: html6 }),
    /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(PostFooter_default2, { slug })
  ] });
}, Post_default = Post;

// src/components/Post/index.ts
var Post_default2 = Post_default;

// src/routes/blog/$slug.tsx
var import_jsx_runtime50 = __toESM(require_jsx_runtime()), meta3 = ({ data }) => {
  let { post } = data;
  return { title: post.frontmatter.title };
}, loader3 = async ({ params }) => {
  let slug = params.slug;
  if (!slug)
    throw new import_node6.Response("Not found", { status: 404 });
  let post = await getPostBySlug(slug);
  return (0, import_node5.json)({ post });
}, PostRoute = () => {
  let { post } = (0, import_react20.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(Post_default2, { post }) });
}, slug_default = PostRoute;

// src/routes/blog/index.tsx
var blog_exports = {};
__export(blog_exports, {
  default: () => blog_default,
  loader: () => loader4,
  meta: () => meta4
});
var import_node7 = __toESM(require_dist4()), import_react24 = __toESM(require_dist());

// src/components/PostSearchBar/PostSearchBar.tsx
var import_react21 = __toESM(require_dist()), import_fuse = __toESM(require_fuse_common()), import_react22 = __toESM(require_react()), import_react23 = __toESM(require_react()), import_jsx_runtime51 = __toESM(require_jsx_runtime()), PostSearchBar = ({ posts, onSearch }) => {
  let [searchParams, setSearchParams] = (0, import_react21.useSearchParams)(), defaultQuery = searchParams.get("search") || "", [query, setQuery] = (0, import_react23.useState)(defaultQuery), fuse = new import_fuse.default(posts, {
    keys: ["title", "topic.name"]
  }), filterPosts = (query2) => query2 ? fuse.search(query2).map((result) => result.item) : posts;
  return (0, import_react22.useEffect)(
    () => {
      setSearchParams(query ? `search=${query}` : "");
      let newPosts = filterPosts(query);
      onSearch == null || onSearch(newPosts);
    },
    [query]
  ), /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(
    "input",
    {
      className: "mb-9 w-[85%] rounded border-3 border-black py-4 px-8 text-base shadow-box placeholder:text-gray-400 focus:border-purple-400 focus:outline-none dark:shadow-box-white",
      type: "text",
      placeholder: "search blog",
      value: query,
      onChange: (event) => {
        setQuery(event.target.value);
      }
    }
  );
}, PostSearchBar_default = PostSearchBar;

// src/components/PostSearchBar/index.ts
var PostSearchBar_default2 = PostSearchBar_default;

// src/routes/blog/index.tsx
var import_react25 = __toESM(require_react());
var import_jsx_runtime52 = __toESM(require_jsx_runtime()), meta4 = () => ({
  title: "\u270D\u{1F3FC} blog"
}), loader4 = () => {
  let allPosts = getAllPosts();
  return (0, import_node7.json)({ allPosts });
}, BlogRoute = () => {
  let { allPosts } = (0, import_react24.useLoaderData)(), [posts, setPosts] = (0, import_react25.useState)(allPosts);
  return /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime52.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(PostSearchBar_default2, { posts: allPosts, onSearch: (filteredPosts) => {
      setPosts(filteredPosts);
    } }),
    /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(PostList_default2, { posts })
  ] }) });
}, blog_default = BlogRoute;

// src/routes/now/$date.tsx
var date_exports = {};
__export(date_exports, {
  default: () => date_default,
  loader: () => loader5,
  meta: () => meta5
});
var import_node8 = __toESM(require_dist4()), import_node9 = __toESM(require_dist4()), import_react27 = __toESM(require_dist());

// src/components/FancyLink/FancyLink.tsx
var import_react26 = __toESM(require_dist()), import_jsx_runtime53 = __toESM(require_jsx_runtime()), FancyLink = ({ children, to }) => /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
  import_react26.Link,
  {
    className: "shadow-link transition duration-300 hover:shadow-link-hover",
    to,
    children
  }
), FancyLink_default = FancyLink;

// src/components/Now/Now.tsx
var import_jsx_runtime54 = __toESM(require_jsx_runtime()), Now = ({ now, newer, older }) => {
  let { html: html6, frontmatter } = now, markdown = useMarkdown_default(html6);
  return /* @__PURE__ */ (0, import_jsx_runtime54.jsxs)("div", { className: "grid content-start gap-y-16", children: [
    /* @__PURE__ */ (0, import_jsx_runtime54.jsxs)("div", { className: "flex items-baseline justify-between lowercase", children: [
      /* @__PURE__ */ (0, import_jsx_runtime54.jsx)("h1", { className: "font-heading text-[32px] font-semibold", children: "\u{1F9ED} now" }),
      /* @__PURE__ */ (0, import_jsx_runtime54.jsx)("span", { className: "", children: formatDate(frontmatter.date) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(Markdown_default, { content: markdown }),
    /* @__PURE__ */ (0, import_jsx_runtime54.jsxs)("div", { className: "flex content-start justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(
        LinkButton_default2,
        {
          to: `/now/${newer == null ? void 0 : newer.frontmatter.date}`,
          disabled: !newer,
          children: "\u{1F448}\u{1F3FC} newer"
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(
        LinkButton_default2,
        {
          to: `/now/${older == null ? void 0 : older.frontmatter.date}`,
          reverse: !0,
          disabled: !older,
          children: "older \u{1F449}\u{1F3FC}"
        }
      )
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime54.jsxs)("p", { className: "my-10 text-center italic", children: [
      "inspired by",
      " ",
      /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(FancyLink_default, { to: "https://twitter.com/sivers", children: "derek sivers" }),
      " ",
      "and",
      " ",
      /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(FancyLink_default, { to: "https://nownownow.com/about", children: "nownownow" })
    ] })
  ] });
}, Now_default = Now;

// src/components/Now/index.ts
var Now_default2 = Now_default;

// src/utils/now.ts
var import_fs2 = __toESM(require("fs")), import_gray_matter3 = __toESM(require_gray_matter()), import_path4 = __toESM(require("path"));
var getNowByDate = async (date) => {
  let nowPath = import_path4.default.join(process.cwd(), `content/now/${date}.md`), file = import_gray_matter3.default.read(nowPath);
  return {
    html: await transformMarkdown(file.content),
    frontmatter: file.data
  };
}, getLatestNow = async () => {
  let nowsPath = import_path4.default.join(process.cwd(), "content/now"), nows = import_fs2.default.readdirSync(nowsPath), slug = nows[nows.length - 1].replace(".md", "");
  return await getNowByDate(slug);
}, getNewerNow = async (currentNow) => {
  let nowsPath = import_path4.default.join(process.cwd(), "content/now"), nows = import_fs2.default.readdirSync(nowsPath).map((now) => now.replace(".md", "")), currentNowIndex = nows.findIndex(
    (now) => now === currentNow.frontmatter.date
  ), slug = nows[currentNowIndex + 1];
  return slug ? await getNowByDate(slug) : null;
}, getOlderNow = async (currentNow) => {
  let nowsPath = import_path4.default.join(process.cwd(), "content/now"), nows = import_fs2.default.readdirSync(nowsPath).map((now) => now.replace(".md", "")), currentNowIndex = nows.findIndex(
    (now) => now === currentNow.frontmatter.date
  ), slug = nows[currentNowIndex - 1];
  return slug ? await getNowByDate(slug) : null;
};

// src/routes/now/$date.tsx
var import_jsx_runtime55 = __toESM(require_jsx_runtime()), meta5 = () => ({
  title: "\u{1F9ED} now"
}), loader5 = async ({ params }) => {
  let date = params.date;
  if (!date)
    throw new import_node9.Response("Not found", { status: 404 });
  let currentNow = await getNowByDate(date), newerNow = await getNewerNow(currentNow), olderNow = await getOlderNow(currentNow);
  return (0, import_node8.json)({
    currentNow,
    newerNow,
    olderNow
  });
}, NowRoute = () => {
  let { currentNow, newerNow, olderNow } = (0, import_react27.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(Now_default2, { now: currentNow, newer: newerNow, older: olderNow }) });
}, date_default = NowRoute;

// src/routes/now/index.tsx
var now_exports = {};
__export(now_exports, {
  default: () => now_default,
  loader: () => loader6,
  meta: () => meta6
});
var import_node10 = __toESM(require_dist4()), import_react28 = __toESM(require_dist());
var import_jsx_runtime56 = __toESM(require_jsx_runtime()), meta6 = () => ({
  title: "\u{1F9ED} now"
}), loader6 = async () => {
  let latestNow = await getLatestNow(), newerNow = await getNewerNow(latestNow), olderNow = await getOlderNow(latestNow);
  return (0, import_node10.json)({
    latestNow,
    newerNow,
    olderNow
  });
}, NowRoute2 = () => {
  let { latestNow, newerNow, olderNow } = (0, import_react28.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(Now_default2, { now: latestNow, newer: newerNow, older: olderNow }) });
}, now_default = NowRoute2;

// src/routes/sponsors.tsx
var sponsors_exports = {};
__export(sponsors_exports, {
  default: () => sponsors_default,
  loader: () => loader7,
  meta: () => meta7
});
var import_node11 = __toESM(require_dist4()), import_react31 = __toESM(require_dist());

// src/components/Sponsors/Sponsors.tsx
var import_react30 = __toESM(require_dist());

// src/components/Section/Section.tsx
var import_react29 = __toESM(require_dist()), import_jsx_runtime57 = __toESM(require_jsx_runtime()), Title = ({ title }) => /* @__PURE__ */ (0, import_jsx_runtime57.jsx)("h2", { className: "hover:text-shadow-3 m-0 font-heading text-[clamp(3rem,_10vw,_4.5rem)] font-black tracking-[-0.2rem] transition-all duration-300", children: title }), Section = ({ title, link: link2, children, ...props }) => /* @__PURE__ */ (0, import_jsx_runtime57.jsxs)("section", { ...props, children: [
  link2 ? /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(import_react29.Link, { className: "m-0 mb-7 inline-block", to: link2, children: /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(Title, { title }) }) : /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(Title, { title }),
  children
] }), Section_default = Section;

// src/components/Sponsors/Sponsors.tsx
var import_jsx_runtime58 = __toESM(require_jsx_runtime()), Sponsors = ({ sponsors }) => /* @__PURE__ */ (0, import_jsx_runtime58.jsxs)("div", { className: "grid content-start gap-y-16", children: [
  /* @__PURE__ */ (0, import_jsx_runtime58.jsxs)(Section_default, { title: "\u{1F49C} thank you", children: [
    /* @__PURE__ */ (0, import_jsx_runtime58.jsx)("p", { className: "my-7", children: "Each and every supporter I have incentivizes me to continue creating libraries, videos, blogs, and streams. All earnings will go directly towards improving the quality of my work, and encouraging more frequent updates." }),
    /* @__PURE__ */ (0, import_jsx_runtime58.jsxs)("p", { children: [
      "If you want to support me and be featured on this page go",
      " ",
      /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(FancyLink_default, { to: "https://bradgarropy.com/sponsor", children: "sponsor" }),
      " ",
      "me!"
    ] })
  ] }),
  Object.entries(sponsors).map(([frequency, sponsors2]) => /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(Section_default, { title: frequency, children: sponsors2.length ? /* @__PURE__ */ (0, import_jsx_runtime58.jsx)("div", { className: "grid grid-flow-col justify-start gap-x-4", children: sponsors2.map((sponsor) => /* @__PURE__ */ (0, import_jsx_runtime58.jsxs)(
    import_react30.Link,
    {
      className: "relative inline-block",
      to: sponsor.profile,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(
          "img",
          {
            className: "m-0 w-[6.625rem] rounded-full border-5 border-black transition duration-300 hover:-rotate-2 hover:border-purple-400 dark:border-white hover:dark:border-purple-400",
            src: createExternalImageUrl(
              sponsor.avatar
            ),
            alt: sponsor.username,
            width: "460",
            height: "460"
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime58.jsx)("span", { className: "absolute -top-4 -left-4 text-[2.5rem]", children: sponsor.tier })
      ]
    },
    sponsor.username
  )) }) : /* @__PURE__ */ (0, import_jsx_runtime58.jsxs)("p", { children: [
    "Nobody yet,",
    " ",
    /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(FancyLink_default, { to: "https://bradgarropy.com/sponsor", children: "be the first" }),
    "!"
  ] }) }, frequency))
] }), Sponsors_default = Sponsors;

// src/utils/sponsors.ts
var import_graphql = __toESM(require_dist_node6()), getSponsors = async () => {
  let octokit = import_graphql.graphql.defaults({
    headers: {
      authorization: `Token ${process.env.GITHUB_TOKEN}`
    }
  }), { user } = await octokit(
    `
            {
                user(login: "bradgarropy") {
                    sponsorshipsAsMaintainer(first: 10) {
                        nodes {
                            sponsorEntity {
                                ... on User {
                                    login
                                    url
                                    avatarUrl
                                }
                            }
                            tier {
                                name
                                description
                                isOneTime
                            }
                        }
                    }
                }
            }
        `
  ), sponsors = {
    monthly: [],
    "one-time": []
  };
  return user.sponsorshipsAsMaintainer.nodes.forEach((sponsorship) => {
    let tier = new RegExp("### (.*)$", "m").exec(sponsorship.tier.description)[1].split(" ")[0], sponsor = {
      username: sponsorship.sponsorEntity.login,
      avatar: sponsorship.sponsorEntity.avatarUrl,
      profile: sponsorship.sponsorEntity.url,
      tier
    };
    sponsorship.tier.isOneTime ? sponsors["one-time"].push(sponsor) : sponsors.monthly.push(sponsor);
  }), sponsors;
};

// src/routes/sponsors.tsx
var import_jsx_runtime59 = __toESM(require_jsx_runtime()), meta7 = () => ({
  title: "\u{1F49C} sponsors"
}), loader7 = async () => {
  let sponsors = await getSponsors();
  return (0, import_node11.json)({ sponsors });
}, SponsorsRoute = () => {
  let { sponsors } = (0, import_react31.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(Sponsors_default, { sponsors }) });
}, sponsors_default = SponsorsRoute;

// src/routes/connect.tsx
var connect_exports = {};
__export(connect_exports, {
  default: () => connect_default,
  meta: () => meta8
});

// src/components/Connect/Connect.tsx
var import_jsx_runtime60 = __toESM(require_jsx_runtime()), Connect = () => /* @__PURE__ */ (0, import_jsx_runtime60.jsxs)("div", { className: "grid justify-items-center gap-8 text-center text-xl", children: [
  /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(
    "img",
    {
      src: createImageUrl("/pages/home/profile.jpg"),
      alt: "bg",
      className: "w-[80vw] max-w-[14rem] rounded-full border-7 border-solid border-black",
      width: "460",
      height: "460"
    }
  ),
  /* @__PURE__ */ (0, import_jsx_runtime60.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime60.jsx)("p", { className: "m-0", children: "Thanks for chatting with me!" }),
    /* @__PURE__ */ (0, import_jsx_runtime60.jsx)("p", { className: "m-0", children: "Let's connect on these platforms." })
  ] }),
  /* @__PURE__ */ (0, import_jsx_runtime60.jsxs)("div", { className: "grid grid-flow-col content-center justify-center gap-x-5", children: [
    /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(SocialLink_default2, { platform: "twitch" }),
    /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(SocialLink_default2, { platform: "github" }),
    /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(SocialLink_default2, { platform: "youtube" }),
    /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(SocialLink_default2, { platform: "twitter" }),
    /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(SocialLink_default2, { platform: "instagram" }),
    /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(SocialLink_default2, { platform: "discord" })
  ] })
] }), Connect_default = Connect;

// src/components/PageLayout/PageLayout.tsx
var import_jsx_runtime61 = __toESM(require_jsx_runtime()), PageLayout = ({ children }) => /* @__PURE__ */ (0, import_jsx_runtime61.jsx)("main", { className: "grid min-h-screen content-center justify-center py-0 px-5 font-text", children }), PageLayout_default = PageLayout;

// src/routes/connect.tsx
var import_jsx_runtime62 = __toESM(require_jsx_runtime()), meta8 = () => ({
  title: "\u{1F91D} connect with me"
}), ConnectRoute = () => /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(PageLayout_default, { children: /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(Connect_default, {}) }), connect_default = ConnectRoute;

// src/routes/contact.tsx
var contact_exports = {};
__export(contact_exports, {
  default: () => contact_default,
  meta: () => meta9
});

// src/components/Contact/Contact.tsx
var import_jsx_runtime63 = __toESM(require_jsx_runtime()), Contact = () => /* @__PURE__ */ (0, import_jsx_runtime63.jsxs)("div", { className: "place-self-center", children: [
  /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("h1", { className: "mb-7 font-heading text-[2rem] font-semibold", children: "\u{1F44B}\u{1F3FC} say hi" }),
  /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("p", { className: "mb-5", children: "I enjoy connecting with other developers, drop me a message and let's talk!" }),
  /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("p", { children: "Social media is great for informal chats." }),
  /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("p", { children: "Email works best for in depth discussions." }),
  /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("p", { children: "Consider my AMA if others can benefit from the question." }),
  /* @__PURE__ */ (0, import_jsx_runtime63.jsxs)("div", { className: "mt-8 grid grid-cols-[repeat(2,auto)] justify-start justify-items-start gap-5 text-2xl", children: [
    /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("span", { children: "\u{1F4E7}" }),
    /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(FancyLink_default, { to: "mailto:bradgarropy@gmail.com", children: "bradgarropy@gmail.com" }),
    /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("span", { children: "\u{1F64B}\u{1F3FC}\u200D\u2642\uFE0F" }),
    /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(FancyLink_default, { to: "https://bradgarropy.com/ama", children: "ask me anything" }),
    /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("span", { children: "\u{1F426}" }),
    /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(FancyLink_default, { to: "https://twitter.com/bradgarropy", children: "twitter" })
  ] })
] }), Contact_default = Contact;

// src/routes/contact.tsx
var import_jsx_runtime64 = __toESM(require_jsx_runtime()), meta9 = () => ({
  title: "\u{1F44B}\u{1F3FC} say hi"
}), ContactRoute = () => /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(Contact_default, {}) }), contact_default = ContactRoute;

// src/routes/hire-me.tsx
var hire_me_exports = {};
__export(hire_me_exports, {
  default: () => hire_me_default,
  loader: () => loader8,
  meta: () => meta10
});
var import_node12 = __toESM(require_dist4()), import_react33 = __toESM(require_dist());

// src/components/Testimonial/Testimonial.tsx
var import_react32 = __toESM(require_dist());
var import_slugify2 = __toESM(require_slugify());
var import_jsx_runtime65 = __toESM(require_jsx_runtime()), Testimonial = ({ testimonial }) => {
  let markdown = useMarkdown_default(testimonial.html), slug = (0, import_slugify2.default)(testimonial.frontmatter.name.toLowerCase());
  return /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(
    import_react32.Link,
    {
      className: "grid max-w-xl gap-8 rounded border-3 border-black p-8 shadow-box transition duration-300 hover:shadow-none dark:border-white dark:shadow-box-white hover:dark:shadow-none",
      id: slug,
      to: testimonial.frontmatter.profile,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)("div", { className: "grid grid-cols-[4.375rem_auto] items-center justify-start gap-x-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(
            "img",
            {
              src: createImageUrl(testimonial.frontmatter.photo),
              width: "460",
              height: "460",
              alt: testimonial.frontmatter.name,
              className: "rounded-full border-3 border-black dark:border-white"
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime65.jsx)("p", { className: "m-0 font-heading text-2xl font-black tracking-[-0.075rem]", children: testimonial.frontmatter.name })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(Markdown_default, { content: markdown })
      ]
    },
    testimonial.frontmatter.name
  );
}, Testimonial_default = Testimonial;

// src/components/Testimonials/Testimonials.tsx
var import_jsx_runtime66 = __toESM(require_jsx_runtime()), Testimonials = ({ testimonials }) => /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("div", { className: "grid gap-16", children: testimonials.map((testimonial) => /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(
  Testimonial_default,
  {
    testimonial
  },
  testimonial.frontmatter.name
)) }), Testimonials_default = Testimonials;

// src/components/HireMe/HireMe.tsx
var import_jsx_runtime67 = __toESM(require_jsx_runtime()), HireMe = ({ testimonials }) => /* @__PURE__ */ (0, import_jsx_runtime67.jsxs)("div", { className: "grid gap-y-9", children: [
  /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("h1", { className: "font-heading text-4xl font-extrabold", children: "\u{1F91D} let's work together" }),
  /* @__PURE__ */ (0, import_jsx_runtime67.jsxs)("p", { children: [
    "I just snagged a new job at",
    " ",
    /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(FancyLink_default, { to: "https://atlassian.com", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("span", { className: "font-semibold", children: "Atlassian" }) }),
    ", working on",
    " ",
    /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(FancyLink_default, { to: "https://trello.com", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("span", { className: "font-semibold", children: "Trello" }) }),
    " ",
    "as a",
    " ",
    /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("span", { className: "italic", children: "Developer Experience Engineer" }),
    ". Although I'm not actively looking for a new role, please check out my",
    " ",
    /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(FancyLink_default, { to: "https://bradgarropy.com/resume", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("span", { className: "font-semibold", children: "resume" }) }),
    " ",
    "and",
    " ",
    /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(FancyLink_default, { to: "https://bradgarropy.com/contact", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("span", { className: "font-semibold", children: "contact" }) }),
    " ",
    "me!"
  ] }),
  /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("div", { className: "prose dark:prose-invert prose-h1:font-bold", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(Heading_default, { level: 1, id: "testimonials", children: "\u{1F4AF} what people think of me" }) }),
  /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(Testimonials_default, { testimonials })
] }), HireMe_default = HireMe;

// src/utils/testimonials.ts
var import_fs3 = __toESM(require("fs")), import_gray_matter4 = __toESM(require_gray_matter()), import_path5 = __toESM(require("path"));
var getTestimonials = async () => {
  let testimonialsPath = import_path5.default.join(process.cwd(), "content/testimonials"), promises = import_fs3.default.readdirSync(testimonialsPath).map((slug) => import_path5.default.join(
    process.cwd(),
    `content/testimonials/${slug}`
  )).map(async (testimonialPath) => {
    let file = import_gray_matter4.default.read(testimonialPath);
    return {
      html: await transformMarkdown(file.content),
      frontmatter: file.data
    };
  });
  return await Promise.all(promises);
};

// src/routes/hire-me.tsx
var import_jsx_runtime68 = __toESM(require_jsx_runtime()), loader8 = async () => {
  let testimonials = await getTestimonials();
  return (0, import_node12.json)({ testimonials });
}, meta10 = () => ({
  title: "\u{1F91D} let's work together",
  "og:image": createImageUrl("/pages/hire-me/hire-me.png"),
  "twitter:card": "summary_large_image",
  "twitter:image": createImageUrl("/pages/hire-me/hire-me.png")
}), HireMeRoute = () => {
  let { testimonials } = (0, import_react33.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(HireMe_default, { testimonials }) });
}, hire_me_default = HireMeRoute;

// src/routes/resume.tsx
var resume_exports = {};
__export(resume_exports, {
  default: () => resume_default,
  loader: () => loader9,
  meta: () => meta11
});
var import_node13 = __toESM(require_dist4()), import_react34 = __toESM(require_dist());

// src/components/Resume/Resume.tsx
var import_jsx_runtime69 = __toESM(require_jsx_runtime()), Resume = ({ resume }) => {
  let markdown = useMarkdown_default(resume.html);
  return /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(Markdown_default, { content: markdown });
}, Resume_default = Resume;

// src/routes/resume.tsx
var import_jsx_runtime70 = __toESM(require_jsx_runtime()), meta11 = () => ({
  title: "\u{1F454} resume"
}), loader9 = async () => {
  let resume = await getMarkdownBySlug("resume");
  return (0, import_node13.json)({ resume });
}, ResumeRoute = () => {
  let { resume } = (0, import_react34.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(Resume_default, { resume }) });
}, resume_default = ResumeRoute;

// src/routes/index.tsx
var routes_exports = {};
__export(routes_exports, {
  default: () => routes_default,
  loader: () => loader10
});
var import_node14 = __toESM(require_dist4()), import_react40 = __toESM(require_dist());

// src/components/Project/Project.tsx
var import_react35 = __toESM(require_dist());

// src/utils/tech.ts
var technologies = [
  "gatsby",
  "javascript",
  "next",
  "node",
  "react",
  "svelte",
  "tailwind",
  "typescript"
], getTechnologies = (topics) => {
  let tech = [];
  return topics.forEach((topic) => {
    technologies.includes(topic) && tech.push(topic);
  }), tech;
};

// src/components/ProjectTech/ProjectTech.tsx
var import_jsx_runtime71 = __toESM(require_jsx_runtime()), ProjectTech = ({ project }) => {
  let technologies2 = getTechnologies(project.topics);
  return /* @__PURE__ */ (0, import_jsx_runtime71.jsx)("div", { className: "grid grid-flow-col items-center gap-x-2", children: technologies2.map((tech) => /* @__PURE__ */ (0, import_jsx_runtime71.jsx)(Icon_default, { name: tech }, tech)) });
}, ProjectTech_default = ProjectTech;

// src/components/Project/Project.tsx
var import_jsx_runtime72 = __toESM(require_jsx_runtime()), Project = ({ project }) => /* @__PURE__ */ (0, import_jsx_runtime72.jsxs)(
  import_react35.Link,
  {
    className: "grid content-between gap-y-4 rounded border-3 border-black p-[1.125rem] shadow-box transition duration-300 hover:shadow-none dark:border-white dark:shadow-box-white hover:dark:shadow-none",
    to: `${project.url}#readme`,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime72.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime72.jsx)("h3", { className: "m-0 font-heading text-2xl font-black tracking-[-0.075rem]", children: project.name }),
        /* @__PURE__ */ (0, import_jsx_runtime72.jsx)("p", { className: "m-0", children: project.description })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime72.jsxs)("div", { className: "grid grid-flow-col items-center justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime72.jsx)(ProjectTech_default, { project }),
        /* @__PURE__ */ (0, import_jsx_runtime72.jsx)("span", { className: "m-0", children: `${project.stars}\u2B50` })
      ] })
    ]
  }
), Project_default = Project;

// src/components/FeaturedProjects/FeaturedProjects.tsx
var import_jsx_runtime73 = __toESM(require_jsx_runtime()), FeaturedProjects = ({ featuredProjects }) => /* @__PURE__ */ (0, import_jsx_runtime73.jsx)("div", { className: "grid grid-cols-2 gap-7 max-[725px]:grid-cols-1", children: featuredProjects.map((featuredProject) => /* @__PURE__ */ (0, import_jsx_runtime73.jsx)(
  Project_default,
  {
    project: featuredProject
  },
  featuredProject.name
)) }), FeaturedProjects_default = FeaturedProjects;

// src/components/Hero/Hero.tsx
var import_react36 = __toESM(require_dist());
var import_jsx_runtime74 = __toESM(require_jsx_runtime()), Hero = () => /* @__PURE__ */ (0, import_jsx_runtime74.jsxs)("div", { className: "grid grid-cols-hero items-start self-center justify-self-center  max-[700px]:grid-cols-1", children: [
  /* @__PURE__ */ (0, import_jsx_runtime74.jsx)(
    import_react36.Link,
    {
      to: "https://instagram.com/bradgarropy",
      className: "max-[700px]:m-auto max-[700px]:w-4/5",
      children: /* @__PURE__ */ (0, import_jsx_runtime74.jsx)(
        "img",
        {
          src: createImageUrl("/pages/home/profile.jpg"),
          alt: "bg",
          className: "transform rounded-full border-7 border-black duration-300 hover:-rotate-2 hover:border-purple-400 dark:border-white",
          width: "460",
          height: "460"
        }
      )
    }
  ),
  /* @__PURE__ */ (0, import_jsx_runtime74.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("h1", { className: "m-0 font-heading text-5xl font-black leading-normal -tracking-[0.2rem]", children: "i'm brad garropy" }),
    /* @__PURE__ */ (0, import_jsx_runtime74.jsxs)("div", { className: "grid grid-cols-[repeat(2,auto)] justify-start justify-items-center gap-x-3 pl-10 leading-normal", children: [
      /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("h2", { className: "m-0 justify-self-start text-2xl font-medium", children: "lead frontend developer" }),
      /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("span", { className: "m-0 text-2xl font-medium leading-normal", children: "\u{1F468}\u{1F3FC}\u200D\u{1F4BB}" }),
      /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("h2", { className: "m-0 justify-self-start text-2xl font-medium", children: "growing content creator" }),
      /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("span", { className: "m-0 text-2xl font-medium leading-normal", children: "\u{1F3A5}" }),
      /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("h2", { className: "m-0 justify-self-start text-2xl font-medium", children: "side project connoisseur" }),
      /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("span", { className: "m-0 text-2xl font-medium leading-normal", children: "\u{1F943}" }),
      /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("h2", { className: "m-0 justify-self-start text-2xl font-medium", children: "open source maintainer" }),
      /* @__PURE__ */ (0, import_jsx_runtime74.jsx)("span", { className: "m-0 text-2xl font-medium leading-normal", children: "\u2728" })
    ] })
  ] })
] }), Hero_default = Hero;

// src/components/Hero/index.ts
var Hero_default2 = Hero_default;

// src/components/LatestPosts/LatestPosts.tsx
var import_jsx_runtime75 = __toESM(require_jsx_runtime()), LatestPosts = ({ latestPosts }) => /* @__PURE__ */ (0, import_jsx_runtime75.jsx)("div", { className: "grid gap-y-6", children: latestPosts.map((latestPost) => /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(
  PostTitle_default2,
  {
    title: latestPost.title,
    slug: latestPost.slug
  },
  latestPost.slug
)) }), LatestPosts_default = LatestPosts;

// src/components/LatestVideos/LatestVideos.tsx
var import_react37 = __toESM(require_dist());
var import_jsx_runtime76 = __toESM(require_jsx_runtime()), LatestVideos = ({ latestVideos }) => /* @__PURE__ */ (0, import_jsx_runtime76.jsx)("div", { className: "grid grid-cols-2 justify-items-start gap-4 max-[700px]:grid-cols-1", children: latestVideos.map((latestVideo) => /* @__PURE__ */ (0, import_jsx_runtime76.jsx)(
  import_react37.Link,
  {
    to: `https://www.youtube.com/watch?v=${latestVideo.id}`,
    children: /* @__PURE__ */ (0, import_jsx_runtime76.jsx)(
      "img",
      {
        src: createYouTubeUrl(latestVideo.id),
        alt: latestVideo.title,
        width: "1280",
        height: "720",
        className: "rounded border-3 border-solid border-black shadow-box transition duration-300 hover:shadow-none dark:border-white dark:shadow-box-white hover:dark:shadow-none"
      }
    )
  },
  latestVideo.id
)) }), LatestVideos_default = LatestVideos;

// src/components/Newsletter/Newsletter.tsx
var import_http5 = __toESM(require_dist2()), import_react38 = __toESM(require_react()), import_jsx_runtime77 = __toESM(require_jsx_runtime()), Newsletter = () => {
  let [email, setEmail] = (0, import_react38.useState)(""), [subscribed, setSubscribed] = (0, import_react38.useState)(!1);
  return /* @__PURE__ */ (0, import_jsx_runtime77.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime77.jsx)("p", { className: "-mt-12 mb-7", children: "\u{1F4BB} side projects | \u{1F4F0} web dev news | \u26A1 tech opinions" }),
    /* @__PURE__ */ (0, import_jsx_runtime77.jsxs)(
      "form",
      {
        className: "grid grid-cols-[1fr_auto] grid-rows-1 items-baseline gap-x-16 max-[600px]:grid-cols-1 max-[600px]:grid-rows-2 max-[600px]:gap-y-4",
        onSubmit: async (event) => {
          event.preventDefault(), await import_http5.http.post("/api/subscribe", {
            body: {
              email
            }
          }), setSubscribed(!0);
        },
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime77.jsx)(
            "input",
            {
              className: "rounded border-3 border-black py-4 px-8 text-base shadow-box placeholder:text-gray-400 focus:border-purple-400 focus:outline-none dark:shadow-box-white",
              placeholder: "email@example.com",
              type: "email",
              name: "email",
              value: email,
              onChange: (event) => {
                setEmail(event.target.value);
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime77.jsx)(
            "button",
            {
              className: "mb-[5px] inline-block cursor-pointer rounded border-2 border-black bg-purple-500 py-2 px-3 font-heading text-base font-black tracking-normal text-white shadow-box transition duration-300 hover:enabled:shadow-none disabled:cursor-default dark:shadow-box-white",
              type: "submit",
              disabled: subscribed,
              children: subscribed ? "\u{1F49C} subscribed" : "\u{1F4E7} subscribe"
            }
          )
        ]
      }
    )
  ] });
}, Newsletter_default = Newsletter;

// src/components/Podcast/Podcast.tsx
var import_react39 = __toESM(require_dist());
var import_jsx_runtime78 = __toESM(require_jsx_runtime()), Podcast = () => /* @__PURE__ */ (0, import_jsx_runtime78.jsxs)("div", { className: "grid grid-cols-[1fr_auto] items-center justify-start gap-8 max-[700px]:grid-cols-1", children: [
  /* @__PURE__ */ (0, import_jsx_runtime78.jsx)(
    import_react39.Link,
    {
      to: "https://open.spotify.com/show/3TAuVah0Q9BOV5PbwPDGfs",
      className: "max-[700px]:w-3/4",
      children: /* @__PURE__ */ (0, import_jsx_runtime78.jsx)(
        "img",
        {
          src: createImageUrl("/pages/home/web-dev-weekly.jpg"),
          alt: "Web Dev Weekly",
          className: "box-border rounded border-3 border-black shadow-box transition duration-300 hover:shadow-none dark:border-white dark:shadow-box-white hover:dark:shadow-none",
          width: "500",
          height: "500"
        }
      )
    }
  ),
  /* @__PURE__ */ (0, import_jsx_runtime78.jsxs)("div", { className: "grid justify-items-start", children: [
    /* @__PURE__ */ (0, import_jsx_runtime78.jsx)("span", { children: "a weekly podcast about web development hosted by" }),
    /* @__PURE__ */ (0, import_jsx_runtime78.jsxs)("div", { className: "grid grid-flow-col items-center gap-x-3 font-heading text-2xl font-black leading-[1.6] tracking-[-0.075rem] max-[700px]:text-[1.4rem]", children: [
      /* @__PURE__ */ (0, import_jsx_runtime78.jsx)(
        import_react39.Link,
        {
          className: "hover:text-shadow-2 transition-all duration-300",
          to: "https://twitter.com/bradgarropy",
          children: "brad garropy"
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime78.jsx)("span", { children: "/" }),
      /* @__PURE__ */ (0, import_jsx_runtime78.jsx)(
        import_react39.Link,
        {
          className: "hover:text-shadow-2 transition-all duration-300",
          to: "https://twitter.com/RGottleber",
          children: "richard gottleber"
        }
      )
    ] })
  ] })
] }), Podcast_default = Podcast;

// src/components/Home/Home.tsx
var import_jsx_runtime79 = __toESM(require_jsx_runtime()), Home = ({ latestPosts, latestVideos, featuredProjects }) => /* @__PURE__ */ (0, import_jsx_runtime79.jsxs)("div", { className: "my-16 grid gap-y-16 max-[700px]:m-0", children: [
  /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(Hero_default2, {}),
  /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(Section_default, { title: "blog", link: "/blog", children: /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(LatestPosts_default, { latestPosts }) }),
  /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(Section_default, { title: "videos", link: "https://youtube.com/bradgarropy", children: /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(LatestVideos_default, { latestVideos }) }),
  /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(Section_default, { title: "projects", link: "https://github.com/bradgarropy", children: /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(FeaturedProjects_default, { featuredProjects }) }),
  /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(Section_default, { title: "podcast", link: "https://webdevweekly.captivate.fm", children: /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(Podcast_default, {}) }),
  /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(Section_default, { title: "newsletter", link: "/newsletter", children: /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(Newsletter_default, {}) })
] }), Home_default = Home;

// src/utils/projects.ts
var import_graphql2 = __toESM(require_dist_node6()), getFeaturedProjects = async () => {
  let octokit = import_graphql2.graphql.defaults({
    headers: {
      authorization: `Token ${process.env.GITHUB_TOKEN}`
    }
  }), { user } = await octokit(
    `
            {
                user(login: "bradgarropy") {
                    pinnedItems(types: REPOSITORY, first: 6) {
                        nodes {
                            ... on Repository {
                                url
                                name
                                description
                                stargazerCount
                                repositoryTopics(first: 20) {
                                    nodes {
                                        topic {
                                            name
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        `
  );
  return user.pinnedItems.nodes.map((node2) => ({
    name: node2.name,
    description: node2.description,
    url: node2.url,
    stars: node2.stargazerCount,
    topics: node2.repositoryTopics.nodes.map((node3) => node3.topic.name)
  }));
};

// src/utils/videos.ts
var import_http6 = __toESM(require_dist2()), getLatestVideos = async () => {
  var _a2;
  let response = await import_http6.http.get(
    "https://www.googleapis.com/youtube/v3/search",
    {
      params: {
        key: process.env.YOUTUBE_API_KEY,
        channelId: "UCgbFhcZKt36Upo7oxWlLEig",
        maxResults: 2,
        part: "snippet",
        order: "date",
        type: "video"
      }
    }
  );
  return ((_a2 = response.error) == null ? void 0 : _a2.code) === 403 ? [] : response.items.map((item) => ({
    id: item.id.videoId,
    thumbnail: item.snippet.thumbnails.default.url.replace(
      "default.jpg",
      "maxresdefault.jpg"
    ),
    title: item.snippet.title
  }));
};

// src/routes/index.tsx
var import_jsx_runtime80 = __toESM(require_jsx_runtime()), loader10 = async () => {
  let latestPosts = getLatestPosts(), latestVideos = await getLatestVideos(), featuredProjects = await getFeaturedProjects();
  return (0, import_node14.json)({
    latestPosts,
    latestVideos,
    featuredProjects
  });
}, IndexRoute = () => {
  let { latestPosts, latestVideos, featuredProjects } = (0, import_react40.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(
    Home_default,
    {
      latestPosts,
      latestVideos,
      featuredProjects
    }
  ) });
}, routes_default = IndexRoute;

// src/routes/uses.tsx
var uses_exports = {};
__export(uses_exports, {
  default: () => uses_default,
  loader: () => loader11,
  meta: () => meta12
});
var import_node15 = __toESM(require_dist4()), import_react41 = __toESM(require_dist());

// src/components/Uses/Uses.tsx
var import_jsx_runtime81 = __toESM(require_jsx_runtime()), Uses = ({ uses }) => {
  let markdown = useMarkdown_default(uses.html);
  return /* @__PURE__ */ (0, import_jsx_runtime81.jsxs)("div", { className: "grid gap-y-9", children: [
    /* @__PURE__ */ (0, import_jsx_runtime81.jsx)("h1", { className: "font-heading text-[32px] font-semibold", children: "\u{1F4A0} uses" }),
    /* @__PURE__ */ (0, import_jsx_runtime81.jsx)(Markdown_default, { content: markdown })
  ] });
}, Uses_default = Uses;

// src/routes/uses.tsx
var import_jsx_runtime82 = __toESM(require_jsx_runtime()), meta12 = () => ({
  title: "\u{1F4A0} uses"
}), loader11 = async () => {
  let uses = await getMarkdownBySlug("uses");
  return (0, import_node15.json)({ uses });
}, UsesRoute = () => {
  let { uses } = (0, import_react41.useLoaderData)();
  return /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(Layout_default2, { children: /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(Uses_default, { uses }) });
}, uses_default = UsesRoute;

// server-assets-manifest:@remix-run/dev/assets-manifest
var assets_manifest_default = { version: "3e1d5435", entry: { module: "/build/entry.client-5MQ6WR22.js", imports: ["/build/_shared/chunk-2Q2QONVE.js"] }, routes: { root: { id: "root", parentId: void 0, path: "", index: void 0, caseSensitive: void 0, module: "/build/root-RZWD77BN.js", imports: ["/build/_shared/chunk-E53J2NHB.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/api/subscribe": { id: "routes/api/subscribe", parentId: "root", path: "api/subscribe", index: void 0, caseSensitive: void 0, module: "/build/routes/api/subscribe-X63ZIEMO.js", imports: void 0, hasAction: !0, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/api/twitch": { id: "routes/api/twitch", parentId: "root", path: "api/twitch", index: void 0, caseSensitive: void 0, module: "/build/routes/api/twitch-4LNGHFWS.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/blog/$slug": { id: "routes/blog/$slug", parentId: "root", path: "blog/:slug", index: void 0, caseSensitive: void 0, module: "/build/routes/blog/$slug-OMPF2JPU.js", imports: ["/build/_shared/chunk-RQ5SU2AF.js", "/build/_shared/chunk-2A3EYIFL.js", "/build/_shared/chunk-OAYRNRPO.js", "/build/_shared/chunk-FKZNV4MB.js", "/build/_shared/chunk-PA34C44P.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/blog/index": { id: "routes/blog/index", parentId: "root", path: "blog", index: !0, caseSensitive: void 0, module: "/build/routes/blog/index-QDSAO32M.js", imports: ["/build/_shared/chunk-ZWWBFDNF.js", "/build/_shared/chunk-RQ5SU2AF.js", "/build/_shared/chunk-2A3EYIFL.js", "/build/_shared/chunk-PA34C44P.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/connect": { id: "routes/connect", parentId: "root", path: "connect", index: void 0, caseSensitive: void 0, module: "/build/routes/connect-BL5O6IOJ.js", imports: ["/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/contact": { id: "routes/contact", parentId: "root", path: "contact", index: void 0, caseSensitive: void 0, module: "/build/routes/contact-FBQTBZTB.js", imports: ["/build/_shared/chunk-XGUJA4NZ.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/hire-me": { id: "routes/hire-me", parentId: "root", path: "hire-me", index: void 0, caseSensitive: void 0, module: "/build/routes/hire-me-MNKFUVJJ.js", imports: ["/build/_shared/chunk-XGUJA4NZ.js", "/build/_shared/chunk-FKZNV4MB.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/index": { id: "routes/index", parentId: "root", path: void 0, index: !0, caseSensitive: void 0, module: "/build/routes/index-RFC5H73D.js", imports: ["/build/_shared/chunk-RJ2AZCAV.js", "/build/_shared/chunk-2A3EYIFL.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/now/$date": { id: "routes/now/$date", parentId: "root", path: "now/:date", index: void 0, caseSensitive: void 0, module: "/build/routes/now/$date-HLPYNVJN.js", imports: ["/build/_shared/chunk-CXDQSF5S.js", "/build/_shared/chunk-XGUJA4NZ.js", "/build/_shared/chunk-OAYRNRPO.js", "/build/_shared/chunk-FKZNV4MB.js", "/build/_shared/chunk-PA34C44P.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/now/index": { id: "routes/now/index", parentId: "root", path: "now", index: !0, caseSensitive: void 0, module: "/build/routes/now/index-R5EAPN3J.js", imports: ["/build/_shared/chunk-CXDQSF5S.js", "/build/_shared/chunk-XGUJA4NZ.js", "/build/_shared/chunk-OAYRNRPO.js", "/build/_shared/chunk-FKZNV4MB.js", "/build/_shared/chunk-PA34C44P.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/resume": { id: "routes/resume", parentId: "root", path: "resume", index: void 0, caseSensitive: void 0, module: "/build/routes/resume-Z3SILGMS.js", imports: ["/build/_shared/chunk-FKZNV4MB.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/sponsors": { id: "routes/sponsors", parentId: "root", path: "sponsors", index: void 0, caseSensitive: void 0, module: "/build/routes/sponsors-5P5UEQCV.js", imports: ["/build/_shared/chunk-RJ2AZCAV.js", "/build/_shared/chunk-XGUJA4NZ.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/topic/$name": { id: "routes/topic/$name", parentId: "root", path: "topic/:name", index: void 0, caseSensitive: void 0, module: "/build/routes/topic/$name-KT63IKDE.js", imports: ["/build/_shared/chunk-ZWWBFDNF.js", "/build/_shared/chunk-RQ5SU2AF.js", "/build/_shared/chunk-2A3EYIFL.js", "/build/_shared/chunk-PA34C44P.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/uses": { id: "routes/uses", parentId: "root", path: "uses", index: void 0, caseSensitive: void 0, module: "/build/routes/uses-W4BUHKSQ.js", imports: ["/build/_shared/chunk-FKZNV4MB.js", "/build/_shared/chunk-RODBJRSK.js", "/build/_shared/chunk-IKY2HS6H.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 } }, cssBundleHref: void 0, hmr: void 0, url: "/build/manifest-3E1D5435.js" };

// server-entry-module:@remix-run/dev/server-build
var assetsBuildDirectory = "public/build", future = { unstable_cssModules: !1, unstable_cssSideEffectImports: !1, unstable_dev: !1, unstable_postcss: !1, unstable_tailwind: !0, unstable_vanillaExtract: !1, v2_errorBoundary: !1, v2_meta: !1, v2_routeConvention: !1 }, publicPath = "/build/", entry = { module: entry_server_exports }, routes = {
  "routes/api/subscribe": {
    id: "routes/api/subscribe",
    parentId: "root",
    path: "api/subscribe",
    index: void 0,
    caseSensitive: void 0,
    module: subscribe_exports
  },
  root: {
    id: "root",
    parentId: void 0,
    path: "",
    index: void 0,
    caseSensitive: void 0,
    module: root_exports
  },
  "routes/topic/$name": {
    id: "routes/topic/$name",
    parentId: "root",
    path: "topic/:name",
    index: void 0,
    caseSensitive: void 0,
    module: name_exports
  },
  "routes/api/twitch": {
    id: "routes/api/twitch",
    parentId: "root",
    path: "api/twitch",
    index: void 0,
    caseSensitive: void 0,
    module: twitch_exports
  },
  "routes/blog/$slug": {
    id: "routes/blog/$slug",
    parentId: "root",
    path: "blog/:slug",
    index: void 0,
    caseSensitive: void 0,
    module: slug_exports
  },
  "routes/blog/index": {
    id: "routes/blog/index",
    parentId: "root",
    path: "blog",
    index: !0,
    caseSensitive: void 0,
    module: blog_exports
  },
  "routes/now/$date": {
    id: "routes/now/$date",
    parentId: "root",
    path: "now/:date",
    index: void 0,
    caseSensitive: void 0,
    module: date_exports
  },
  "routes/now/index": {
    id: "routes/now/index",
    parentId: "root",
    path: "now",
    index: !0,
    caseSensitive: void 0,
    module: now_exports
  },
  "routes/sponsors": {
    id: "routes/sponsors",
    parentId: "root",
    path: "sponsors",
    index: void 0,
    caseSensitive: void 0,
    module: sponsors_exports
  },
  "routes/connect": {
    id: "routes/connect",
    parentId: "root",
    path: "connect",
    index: void 0,
    caseSensitive: void 0,
    module: connect_exports
  },
  "routes/contact": {
    id: "routes/contact",
    parentId: "root",
    path: "contact",
    index: void 0,
    caseSensitive: void 0,
    module: contact_exports
  },
  "routes/hire-me": {
    id: "routes/hire-me",
    parentId: "root",
    path: "hire-me",
    index: void 0,
    caseSensitive: void 0,
    module: hire_me_exports
  },
  "routes/resume": {
    id: "routes/resume",
    parentId: "root",
    path: "resume",
    index: void 0,
    caseSensitive: void 0,
    module: resume_exports
  },
  "routes/index": {
    id: "routes/index",
    parentId: "root",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: routes_exports
  },
  "routes/uses": {
    id: "routes/uses",
    parentId: "root",
    path: "uses",
    index: void 0,
    caseSensitive: void 0,
    module: uses_exports
  }
};

// server.js
var import_vercel = __toESM(require_dist6()), server_default = (0, import_vercel.createRequestHandler)({ build: server_build_exports, mode: "production" });
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
